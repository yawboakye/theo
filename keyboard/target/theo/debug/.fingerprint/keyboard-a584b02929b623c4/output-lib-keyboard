{"message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":1189,"byte_end":1201,"line_start":45,"line_end":45,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        f(key_event)","highlight_start":9,"highlight_end":21}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":25673,"byte_end":25720,"line_start":773,"line_end":773,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1172,"byte_end":1179,"line_start":44,"line_end":44,"column_start":25,"column_end":32,"is_primary":false,"text":[{"text":"        let key_event = todo!();","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":25633,"byte_end":25650,"line_start":771,"line_end":771,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:45:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let key_event = todo!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        f(key_event)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `key_event`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":1160,"byte_end":1169,"line_start":44,"line_end":44,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let key_event = todo!();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1160,"byte_end":1169,"line_start":44,"line_end":44,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let key_event = todo!();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"_key_event","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `key_event`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:44:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let key_event = todo!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_key_event`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `f`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":1079,"byte_end":1080,"line_start":40,"line_end":40,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"    pub fn process_key_event<F, R>(&self, f: F) -> R","highlight_start":43,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1079,"byte_end":1080,"line_start":40,"line_end":40,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"    pub fn process_key_event<F, R>(&self, f: F) -> R","highlight_start":43,"highlight_end":44}],"label":null,"suggested_replacement":"_f","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `f`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:40:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn process_key_event<F, R>(&self, f: F) -> R\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_f`\u001b[0m\n\n"}
{"message":"field `keyboard` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":514,"byte_end":522,"line_start":20,"line_end":20,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Keyboard<L: Layout, S: ScancodeSet> {","highlight_start":12,"highlight_end":20}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":556,"byte_end":564,"line_start":21,"line_end":21,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    keyboard: PCKeyboard<L, S>,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `keyboard` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Keyboard<L: Layout, S: ScancodeSet> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    keyboard: PCKeyboard<L, S>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
thread 'copy 1tfe59g32kn6tkvk' panicked at 'assertion failed: module_config.emit_obj != EmitObj::None', /rustc/dbba594575ce75b1b57ccb1e4223b9909a28b1b8/compiler/rustc_codegen_ssa/src/back/write.rs:868:5
stack backtrace:
   0:        0x104abd330 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hfa00d4cd6b621699
   1:        0x104b0d53c - core::fmt::write::hd9a642816f6e5587
   2:        0x104ab3368 - std::io::Write::write_fmt::h094605578029d045
   3:        0x104abd184 - std::sys_common::backtrace::print::h68990c85116dfed2
   4:        0x104abfae8 - std::panicking::default_hook::{{closure}}::hfef189c47a10bebf
   5:        0x104abf8f0 - std::panicking::default_hook::h57a6a01bcb9b6c91
   6:        0x10ced969c - rustc_driver_impl[27208707600a5a97]::DEFAULT_HOOK::{closure#0}::{closure#0}
   7:        0x104ac00fc - std::panicking::rust_panic_with_hook::h4ea9ed30c5736b9f
   8:        0x104abfebc - std::panicking::begin_panic_handler::{{closure}}::hb823587bf72f7592
   9:        0x104abd728 - std::sys_common::backtrace::__rust_end_short_backtrace::hc97da42a02be27fd
  10:        0x104abfc84 - _rust_begin_unwind
  11:        0x104b38d08 - core::panicking::panic_fmt::h1daf3f6466d9c111
  12:        0x104b38d78 - core::panicking::panic::h1a79c329e4569c11
  13:        0x10cfbf2c4 - rustc_codegen_ssa[e9c4720c511f9898]::back::write::execute_work_item::<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend>
  14:        0x10d04fed0 - std[b3ec2e2e1bc9eefd]::sys_common::backtrace::__rust_begin_short_backtrace::<<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend as rustc_codegen_ssa[e9c4720c511f9898]::traits::backend::ExtraBackendMethods>::spawn_named_thread<rustc_codegen_ssa[e9c4720c511f9898]::back::write::spawn_work<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend>::{closure#0}, ()>::{closure#0}, ()>
  15:        0x10d02ba6c - <<std[b3ec2e2e1bc9eefd]::thread::Builder>::spawn_unchecked_<<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend as rustc_codegen_ssa[e9c4720c511f9898]::traits::backend::ExtraBackendMethods>::spawn_named_thread<rustc_codegen_ssa[e9c4720c511f9898]::back::write::spawn_work<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend>::{closure#0}, ()>::{closure#0}, ()>::{closure#1} as core[4cdd12b821c931dc]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  16:        0x104ac8ab0 - std::sys::unix::thread::Thread::new::thread_start::he1b9b136fb41ab44
  17:        0x190c83fa8 - __pthread_joiner_wake

error: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md

note: rustc 1.71.0-nightly (dbba59457 2023-05-01) running on aarch64-apple-darwin

note: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED] -Z unstable-options

note: some of the compiler flags provided by cargo are hidden

query stack during panic:
end of query stack
thread '<unnamed>' panicked at '/rustc/dbba594575ce75b1b57ccb1e4223b9909a28b1b8/compiler/rustc_codegen_ssa/src/back/write.rs:1535:21: worker thread panicked', compiler/rustc_middle/src/util/bug.rs:36:26
stack backtrace:
   0:        0x104abd330 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hfa00d4cd6b621699
   1:        0x104b0d53c - core::fmt::write::hd9a642816f6e5587
   2:        0x104ab3368 - std::io::Write::write_fmt::h094605578029d045
   3:        0x104abd184 - std::sys_common::backtrace::print::h68990c85116dfed2
   4:        0x104abfae8 - std::panicking::default_hook::{{closure}}::hfef189c47a10bebf
   5:        0x104abf8f0 - std::panicking::default_hook::h57a6a01bcb9b6c91
   6:        0x10ced969c - rustc_driver_impl[27208707600a5a97]::DEFAULT_HOOK::{closure#0}::{closure#0}
   7:        0x104ac00fc - std::panicking::rust_panic_with_hook::h4ea9ed30c5736b9f
   8:        0x110c83b6c - std[b3ec2e2e1bc9eefd]::panicking::begin_panic::<alloc[b4eb22b96f2698c]::string::String>::{closure#0}
   9:        0x110c8373c - std[b3ec2e2e1bc9eefd]::sys_common::backtrace::__rust_end_short_backtrace::<std[b3ec2e2e1bc9eefd]::panicking::begin_panic<alloc[b4eb22b96f2698c]::string::String>::{closure#0}, !>
  10:        0x1112ab608 - std[b3ec2e2e1bc9eefd]::panicking::begin_panic::<alloc[b4eb22b96f2698c]::string::String>
  11:        0x110d91dc8 - rustc_middle[d54595e12269fabd]::util::bug::opt_span_bug_fmt::<rustc_span[e53795fb787d1354]::span_encoding::Span>::{closure#0}
  12:        0x110d91524 - rustc_middle[d54595e12269fabd]::ty::context::tls::with_opt::<rustc_middle[d54595e12269fabd]::util::bug::opt_span_bug_fmt<rustc_span[e53795fb787d1354]::span_encoding::Span>::{closure#0}, !>::{closure#0}
  13:        0x110d914f0 - rustc_middle[d54595e12269fabd]::ty::context::tls::with_context_opt::<rustc_middle[d54595e12269fabd]::ty::context::tls::with_opt<rustc_middle[d54595e12269fabd]::util::bug::opt_span_bug_fmt<rustc_span[e53795fb787d1354]::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>
  14:        0x1112b04e8 - rustc_middle[d54595e12269fabd]::util::bug::bug_fmt
  15:        0x10d04f674 - std[b3ec2e2e1bc9eefd]::sys_common::backtrace::__rust_begin_short_backtrace::<<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend as rustc_codegen_ssa[e9c4720c511f9898]::traits::backend::ExtraBackendMethods>::spawn_thread<rustc_codegen_ssa[e9c4720c511f9898]::back::write::start_executing_work<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend>::{closure#4}, core[4cdd12b821c931dc]::result::Result<rustc_codegen_ssa[e9c4720c511f9898]::back::write::CompiledModules, ()>>::{closure#0}, core[4cdd12b821c931dc]::result::Result<rustc_codegen_ssa[e9c4720c511f9898]::back::write::CompiledModules, ()>>
  16:        0x10d02b814 - <<std[b3ec2e2e1bc9eefd]::thread::Builder>::spawn_unchecked_<<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend as rustc_codegen_ssa[e9c4720c511f9898]::traits::backend::ExtraBackendMethods>::spawn_thread<rustc_codegen_ssa[e9c4720c511f9898]::back::write::start_executing_work<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend>::{closure#4}, core[4cdd12b821c931dc]::result::Result<rustc_codegen_ssa[e9c4720c511f9898]::back::write::CompiledModules, ()>>::{closure#0}, core[4cdd12b821c931dc]::result::Result<rustc_codegen_ssa[e9c4720c511f9898]::back::write::CompiledModules, ()>>::{closure#1} as core[4cdd12b821c931dc]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  17:        0x104ac8ab0 - std::sys::unix::thread::Thread::new::thread_start::he1b9b136fb41ab44
  18:        0x190c83fa8 - __pthread_joiner_wake

error: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md

note: rustc 1.71.0-nightly (dbba59457 2023-05-01) running on aarch64-apple-darwin

note: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED] -Z unstable-options

note: some of the compiler flags provided by cargo are hidden

query stack during panic:
end of query stack
thread 'rustc' panicked at '/rustc/dbba594575ce75b1b57ccb1e4223b9909a28b1b8/compiler/rustc_codegen_ssa/src/back/write.rs:1893:17: panic during codegen/LLVM phase', compiler/rustc_middle/src/util/bug.rs:36:26
stack backtrace:
   0:        0x104abd330 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hfa00d4cd6b621699
   1:        0x104b0d53c - core::fmt::write::hd9a642816f6e5587
   2:        0x104ab3368 - std::io::Write::write_fmt::h094605578029d045
   3:        0x104abd184 - std::sys_common::backtrace::print::h68990c85116dfed2
   4:        0x104abfae8 - std::panicking::default_hook::{{closure}}::hfef189c47a10bebf
   5:        0x104abf8f0 - std::panicking::default_hook::h57a6a01bcb9b6c91
   6:        0x10ced969c - rustc_driver_impl[27208707600a5a97]::DEFAULT_HOOK::{closure#0}::{closure#0}
   7:        0x104ac00fc - std::panicking::rust_panic_with_hook::h4ea9ed30c5736b9f
   8:        0x110c83b6c - std[b3ec2e2e1bc9eefd]::panicking::begin_panic::<alloc[b4eb22b96f2698c]::string::String>::{closure#0}
   9:        0x110c8373c - std[b3ec2e2e1bc9eefd]::sys_common::backtrace::__rust_end_short_backtrace::<std[b3ec2e2e1bc9eefd]::panicking::begin_panic<alloc[b4eb22b96f2698c]::string::String>::{closure#0}, !>
  10:        0x1112ab608 - std[b3ec2e2e1bc9eefd]::panicking::begin_panic::<alloc[b4eb22b96f2698c]::string::String>
  11:        0x110d91dc8 - rustc_middle[d54595e12269fabd]::util::bug::opt_span_bug_fmt::<rustc_span[e53795fb787d1354]::span_encoding::Span>::{closure#0}
  12:        0x110d91524 - rustc_middle[d54595e12269fabd]::ty::context::tls::with_opt::<rustc_middle[d54595e12269fabd]::util::bug::opt_span_bug_fmt<rustc_span[e53795fb787d1354]::span_encoding::Span>::{closure#0}, !>::{closure#0}
  13:        0x110d914f0 - rustc_middle[d54595e12269fabd]::ty::context::tls::with_context_opt::<rustc_middle[d54595e12269fabd]::ty::context::tls::with_opt<rustc_middle[d54595e12269fabd]::util::bug::opt_span_bug_fmt<rustc_span[e53795fb787d1354]::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>
  14:        0x1112b04e8 - rustc_middle[d54595e12269fabd]::util::bug::bug_fmt
  15:        0x10d041214 - <rustc_session[523907b16d6ea1f7]::session::Session>::time::<rustc_codegen_ssa[e9c4720c511f9898]::back::write::CompiledModules, <rustc_codegen_ssa[e9c4720c511f9898]::back::write::OngoingCodegen<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend>>::join::{closure#0}>
  16:        0x10cfc9124 - <rustc_codegen_ssa[e9c4720c511f9898]::back::write::OngoingCodegen<rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend>>::join
  17:        0x10cff1bd4 - <rustc_codegen_llvm[b33cadb0846b5d8a]::LlvmCodegenBackend as rustc_codegen_ssa[e9c4720c511f9898]::traits::backend::CodegenBackend>::join_codegen
  18:        0x10cf95ec8 - <rustc_interface[f148500da350baf8]::queries::Linker>::link
  19:        0x10ce7b438 - <scoped_tls[11d6dce048b2c95f]::ScopedKey<rustc_span[e53795fb787d1354]::SessionGlobals>>::set::<rustc_interface[f148500da350baf8]::interface::run_compiler<core[4cdd12b821c931dc]::result::Result<(), rustc_span[e53795fb787d1354]::ErrorGuaranteed>, rustc_driver_impl[27208707600a5a97]::run_compiler::{closure#1}>::{closure#0}, core[4cdd12b821c931dc]::result::Result<(), rustc_span[e53795fb787d1354]::ErrorGuaranteed>>
  20:        0x10ce86e18 - std[b3ec2e2e1bc9eefd]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[f148500da350baf8]::util::run_in_thread_pool_with_globals<rustc_interface[f148500da350baf8]::interface::run_compiler<core[4cdd12b821c931dc]::result::Result<(), rustc_span[e53795fb787d1354]::ErrorGuaranteed>, rustc_driver_impl[27208707600a5a97]::run_compiler::{closure#1}>::{closure#0}, core[4cdd12b821c931dc]::result::Result<(), rustc_span[e53795fb787d1354]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[4cdd12b821c931dc]::result::Result<(), rustc_span[e53795fb787d1354]::ErrorGuaranteed>>
  21:        0x10ce78c6c - <<std[b3ec2e2e1bc9eefd]::thread::Builder>::spawn_unchecked_<rustc_interface[f148500da350baf8]::util::run_in_thread_pool_with_globals<rustc_interface[f148500da350baf8]::interface::run_compiler<core[4cdd12b821c931dc]::result::Result<(), rustc_span[e53795fb787d1354]::ErrorGuaranteed>, rustc_driver_impl[27208707600a5a97]::run_compiler::{closure#1}>::{closure#0}, core[4cdd12b821c931dc]::result::Result<(), rustc_span[e53795fb787d1354]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[4cdd12b821c931dc]::result::Result<(), rustc_span[e53795fb787d1354]::ErrorGuaranteed>>::{closure#1} as core[4cdd12b821c931dc]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  22:        0x104ac8ab0 - std::sys::unix::thread::Thread::new::thread_start::he1b9b136fb41ab44
  23:        0x190c83fa8 - __pthread_joiner_wake

error: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md

note: rustc 1.71.0-nightly (dbba59457 2023-05-01) running on aarch64-apple-darwin

note: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED] -Z unstable-options

note: some of the compiler flags provided by cargo are hidden

query stack during panic:
end of query stack
{"message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 4 warnings emitted\u001b[0m\n\n"}
