// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const lazy::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:14:1: 14:22>::INIT: Lazy<T> = {
    let mut _0: lazy::Lazy<T>;           // return place in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:15:21: 15:25
    let mut _1: lazy::spin::Once<T>;     // in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:15:33: 15:43

    bb0: {
        StorageLive(_1);                 // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:15:33: 15:43
        _1 = const _;                    // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:15:33: 15:43
                                         // mir::Constant
                                         // + span: /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:15:33: 15:43
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: spin::Once<T>, val: Unevaluated(spin::Once::<T>::INIT, [T], None) }
        _0 = Lazy::<T>(move _1);         // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:15:28: 15:44
        StorageDead(_1);                 // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:15:43: 15:44
        return;                          // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:15:5: 15:45
    }
}

fn lazy::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:14:1: 14:22>::get(_1: &Lazy<T>, _2: F) -> &T {
    debug self => _1;                    // in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:18:19: 18:32
    debug builder => _2;                 // in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:18:34: 18:41
    let mut _0: &T;                      // return place in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:18:49: 18:51
    let _3: &T;                          // in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:21:9: 21:34
    let mut _4: &lazy::spin::Once<T>;    // in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:21:9: 21:34

    bb0: {
        _4 = &((*_1).0: lazy::spin::Once<T>); // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:21:9: 21:34
        _3 = spin::Once::<T>::call_once::<F>(move _4, move _2) -> [return: bb1, unwind unreachable]; // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:21:9: 21:34
                                         // mir::Constant
                                         // + span: /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:21:16: 21:25
                                         // + literal: Const { ty: for<'a> fn(&'a spin::Once<T>, F) -> &'a T {spin::Once::<T>::call_once::<F>}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = _3;                         // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:21:9: 21:34
        return;                          // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:22:6: 22:6
    }
}

fn initialize(_1: &T) -> () {
    debug lazy => _1;                    // in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:213:34: 213:38
    let mut _0: ();                      // return place in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:213:44: 213:44
    let _2: ();                          // in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:214:5: 214:33

    bb0: {
        _2 = <T as LazyStatic>::initialize(_1) -> [return: bb1, unwind unreachable]; // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:214:5: 214:33
                                         // mir::Constant
                                         // + span: /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:214:5: 214:27
                                         // + literal: Const { ty: for<'a> fn(&'a T) {<T as LazyStatic>::initialize}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:215:2: 215:2
    }
}

fn Lazy(_1: spin::Once<T>) -> Lazy<T> {
    let mut _0: lazy::Lazy<T>;           // return place in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:12:1: 12:25

    bb0: {
        _0 = Lazy::<T>(move _1);         // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:12:1: 12:25
        return;                          // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:12:1: 12:25
    }
}

// MIR FOR CTFE
fn Lazy(_1: spin::Once<T>) -> Lazy<T> {
    let mut _0: lazy::Lazy<T>;           // return place in scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:12:1: 12:25

    bb0: {
        _0 = Lazy::<T>(move _1);         // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:12:1: 12:25
        return;                          // scope 0 at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/core_lazy.rs:12:1: 12:25
    }
}
