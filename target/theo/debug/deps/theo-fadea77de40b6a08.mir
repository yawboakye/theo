// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static SAFE_IDT: SAFE_IDT = {
    let mut _0: interrupts::SAFE_IDT;
    let mut _1: ();

    bb0: {
        StorageLive(_1);
        _1 = ();
        _0 = SAFE_IDT { __private_field: move _1 };
        StorageDead(_1);
        return;
    }
}

fn interrupts::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref(_1: &SAFE_IDT) -> &SafeInterruptDescriptorTable {
    debug self => _1;
    let mut _0: &cpu_interrupts::interrupt_descriptor_table::SafeInterruptDescriptorTable;

    bb0: {
        _0 = <SAFE_IDT as Deref>::deref::__stability() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

fn interrupts::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__static_ref_initialize() -> SafeInterruptDescriptorTable {
    let mut _0: cpu_interrupts::interrupt_descriptor_table::SafeInterruptDescriptorTable;
    let mut _1: x86_64::structures::idt::InterruptDescriptorTable;
    let _2: &mut x86_64::structures::idt::EntryOptions;
    let mut _3: &mut x86_64::structures::idt::EntryOptions;
    let mut _4: &mut x86_64::structures::idt::Entry<extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame, u64) -> !>;
    let mut _5: extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame, u64) -> !;
    let mut _6: u16;
    let _7: &mut x86_64::structures::idt::EntryOptions;
    let mut _8: &mut x86_64::structures::idt::Entry<extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame)>;
    let mut _9: extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame);
    let _10: &mut x86_64::structures::idt::EntryOptions;
    let mut _11: &mut x86_64::structures::idt::Entry<extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame, x86_64::structures::idt::PageFaultErrorCode)>;
    let mut _12: extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame, x86_64::structures::idt::PageFaultErrorCode);
    let _13: &mut x86_64::structures::idt::EntryOptions;
    let mut _14: &mut x86_64::structures::idt::Entry<extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame)>;
    let mut _15: &mut x86_64::structures::idt::InterruptDescriptorTable;
    let mut _16: usize;
    let mut _17: u8;
    let mut _18: (u8, bool);
    let mut _19: extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame);
    let _20: &mut x86_64::structures::idt::EntryOptions;
    let mut _21: &mut x86_64::structures::idt::Entry<extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame)>;
    let mut _22: &mut x86_64::structures::idt::InterruptDescriptorTable;
    let mut _23: usize;
    let mut _24: u8;
    let mut _25: (u8, bool);
    let mut _26: extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame);
    let mut _27: x86_64::structures::idt::InterruptDescriptorTable;
    scope 1 {
        debug idt => _1;
        scope 2 {
        }
    }

    bb0: {
        _1 = InterruptDescriptorTable::new() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _4 = &mut (_1.8: x86_64::structures::idt::Entry<extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame, u64) -> !>);
        _5 = cpu_interrupts::default_exception_handlers::double_fault_handler as extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame, u64) -> ! (PointerCoercion(ReifyFnPointer));
        _3 = Entry::<extern "x86-interrupt" fn(InterruptStackFrame, u64) -> !>::set_handler_fn(move _4, move _5) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _6 = const _ as u16 (IntToInt);
        _2 = EntryOptions::set_stack_index(_3, move _6) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _8 = &mut (_1.3: x86_64::structures::idt::Entry<extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame)>);
        _9 = interrupts::breakpoint_handler as extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame) (PointerCoercion(ReifyFnPointer));
        _7 = Entry::<extern "x86-interrupt" fn(InterruptStackFrame)>::set_handler_fn(move _8, move _9) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _11 = &mut (_1.14: x86_64::structures::idt::Entry<extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame, x86_64::structures::idt::PageFaultErrorCode)>);
        _12 = interrupts::page_fault_handler as extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame, x86_64::structures::idt::PageFaultErrorCode) (PointerCoercion(ReifyFnPointer));
        _10 = Entry::<extern "x86-interrupt" fn(InterruptStackFrame, PageFaultErrorCode)>::set_handler_fn(move _11, move _12) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        _15 = &mut _1;
        _18 = CheckedAdd(const _, const 0_u8);
        assert(!move (_18.1: bool), "attempt to compute `{} + {}`, which would overflow", const _, const 0_u8) -> [success: bb6, unwind unreachable];
    }

    bb6: {
        _17 = move (_18.0: u8);
        _16 = move _17 as usize (IntToInt);
        _14 = <InterruptDescriptorTable as IndexMut<usize>>::index_mut(move _15, move _16) -> [return: bb7, unwind unreachable];
    }

    bb7: {
        _19 = interrupts::timer_interrupt_handler as extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame) (PointerCoercion(ReifyFnPointer));
        _13 = Entry::<extern "x86-interrupt" fn(InterruptStackFrame)>::set_handler_fn(_14, move _19) -> [return: bb8, unwind unreachable];
    }

    bb8: {
        _22 = &mut _1;
        _25 = CheckedAdd(const _, const 1_u8);
        assert(!move (_25.1: bool), "attempt to compute `{} + {}`, which would overflow", const _, const 1_u8) -> [success: bb9, unwind unreachable];
    }

    bb9: {
        _24 = move (_25.0: u8);
        _23 = move _24 as usize (IntToInt);
        _21 = <InterruptDescriptorTable as IndexMut<usize>>::index_mut(move _22, move _23) -> [return: bb10, unwind unreachable];
    }

    bb10: {
        _26 = interrupts::keyboard_handler as extern "x86-interrupt" fn(x86_64::structures::idt::InterruptStackFrame) (PointerCoercion(ReifyFnPointer));
        _20 = Entry::<extern "x86-interrupt" fn(InterruptStackFrame)>::set_handler_fn(_21, move _26) -> [return: bb11, unwind unreachable];
    }

    bb11: {
        _27 = move _1;
        _0 = SafeInterruptDescriptorTable::from(move _27) -> [return: bb12, unwind unreachable];
    }

    bb12: {
        return;
    }
}

fn interrupts::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__stability() -> &SafeInterruptDescriptorTable {
    let mut _0: &cpu_interrupts::interrupt_descriptor_table::SafeInterruptDescriptorTable;
    let _1: &lazy_static::lazy::Lazy<cpu_interrupts::interrupt_descriptor_table::SafeInterruptDescriptorTable>;

    bb0: {
        _1 = const {alloc9: &lazy_static::lazy::Lazy<SafeInterruptDescriptorTable>};
        _0 = lazy_static::lazy::Lazy::<SafeInterruptDescriptorTable>::get::<fn() -> SafeInterruptDescriptorTable {<SAFE_IDT as Deref>::deref::__static_ref_initialize}>(_1, <SAFE_IDT as Deref>::deref::__static_ref_initialize) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

alloc9 (static: <SAFE_IDT as Deref>::deref::__stability::LAZY, size: 4128, align: 16) {
    0x0000 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0010 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0020 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0030 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0040 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0050 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0060 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0070 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0080 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0090 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x00a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x00b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x00c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x00d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x00e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x00f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0100 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0110 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0120 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0130 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0140 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0150 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0160 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0170 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0180 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0190 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x01a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x01b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x01c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x01d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x01e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x01f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0200 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0210 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0220 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0230 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0240 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0250 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0260 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0270 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0280 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0290 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x02a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x02b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x02c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x02d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x02e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x02f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0300 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0310 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0320 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0330 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0340 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0350 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0360 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0370 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0380 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0390 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x03a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x03b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x03c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x03d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x03e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x03f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0400 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0410 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0420 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0430 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0440 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0450 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0460 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0470 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0480 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0490 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x04a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x04b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x04c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x04d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x04e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x04f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0500 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0510 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0520 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0530 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0540 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0550 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0560 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0570 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0580 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0590 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x05a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x05b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x05c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x05d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x05e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x05f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0600 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0610 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0620 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0630 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0640 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0650 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0660 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0670 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0680 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0690 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x06a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x06b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x06c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x06d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x06e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x06f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0700 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0710 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0720 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0730 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0740 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0750 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0760 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0770 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0780 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0790 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x07a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x07b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x07c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x07d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x07e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x07f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0800 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0810 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0820 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0830 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0840 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0850 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0860 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0870 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0880 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0890 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x08a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x08b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x08c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x08d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x08e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x08f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0900 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0910 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0920 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0930 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0940 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0950 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0960 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0970 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0980 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0990 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x09a0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x09b0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x09c0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x09d0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x09e0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x09f0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a00 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a10 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a20 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a30 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a40 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a50 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a60 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a70 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a80 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0a90 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0aa0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ab0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ac0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ad0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ae0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0af0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b00 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b10 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b20 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b30 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b40 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b50 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b60 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b70 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b80 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0b90 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ba0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0bb0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0bc0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0bd0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0be0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0bf0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c00 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c10 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c20 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c30 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c40 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c50 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c60 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c70 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c80 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0c90 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ca0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0cb0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0cc0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0cd0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ce0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0cf0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d00 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d10 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d20 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d30 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d40 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d50 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d60 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d70 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d80 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0d90 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0da0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0db0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0dc0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0dd0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0de0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0df0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e00 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e10 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e20 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e30 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e40 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e50 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e60 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e70 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e80 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0e90 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ea0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0eb0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ec0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ed0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ee0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ef0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f00 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f10 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f20 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f30 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f40 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f50 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f60 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f70 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f80 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0f90 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0fa0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0fb0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0fc0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0fd0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0fe0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x0ff0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x1000 │ __ __ 02 __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░.░░░░░░░░░░░░░
    0x1010 │ 00 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ │ ........░░░░░░░░
}

static interrupts::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__stability::LAZY: lazy_static::lazy::Lazy<SafeInterruptDescriptorTable> = {
    let mut _0: lazy_static::lazy::Lazy<cpu_interrupts::interrupt_descriptor_table::SafeInterruptDescriptorTable>;

    bb0: {
        _0 = const _;
        return;
    }
}

fn interrupts::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:147:9: 147:39>::initialize(_1: &SAFE_IDT) -> () {
    debug lazy => _1;
    let mut _0: ();
    let _2: &cpu_interrupts::interrupt_descriptor_table::SafeInterruptDescriptorTable;
    scope 1 {
    }

    bb0: {
        _2 = <SAFE_IDT as Deref>::deref(_1) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

fn interrupts::page_fault_handler(_1: InterruptStackFrame, _2: PageFaultErrorCode) -> () {
    debug isf => _1;
    debug error_code => _2;
    let mut _0: ();
    let _3: ();
    let mut _4: core::fmt::Arguments<'_>;
    let mut _5: &[&str];
    let mut _6: &[core::fmt::rt::Argument<'_>];
    let _7: &[core::fmt::rt::Argument<'_>; 0];
    let _8: [core::fmt::rt::Argument<'_>; 0];
    let _9: ();
    let mut _10: core::fmt::Arguments<'_>;
    let mut _11: &[&str];
    let mut _12: &[core::fmt::rt::Argument<'_>];
    let _13: &[core::fmt::rt::Argument<'_>; 1];
    let _14: [core::fmt::rt::Argument<'_>; 1];
    let mut _15: core::fmt::rt::Argument<'_>;
    let _16: &x86_64::VirtAddr;
    let _17: x86_64::VirtAddr;
    let mut _18: &[core::fmt::rt::Placeholder];
    let _19: &[core::fmt::rt::Placeholder; 1];
    let _20: [core::fmt::rt::Placeholder; 1];
    let mut _21: core::fmt::rt::Placeholder;
    let mut _22: core::fmt::rt::Alignment;
    let mut _23: core::fmt::rt::Count;
    let mut _24: core::fmt::rt::Count;
    let mut _25: core::fmt::rt::UnsafeArg;
    let _26: ();
    let mut _27: core::fmt::Arguments<'_>;
    let mut _28: &[&str];
    let mut _29: &[core::fmt::rt::Argument<'_>];
    let _30: &[core::fmt::rt::Argument<'_>; 1];
    let _31: [core::fmt::rt::Argument<'_>; 1];
    let mut _32: core::fmt::rt::Argument<'_>;
    let _33: &x86_64::structures::idt::PageFaultErrorCode;
    let mut _34: &[core::fmt::rt::Placeholder];
    let _35: &[core::fmt::rt::Placeholder; 1];
    let _36: [core::fmt::rt::Placeholder; 1];
    let mut _37: core::fmt::rt::Placeholder;
    let mut _38: core::fmt::rt::Alignment;
    let mut _39: core::fmt::rt::Count;
    let mut _40: core::fmt::rt::Count;
    let mut _41: core::fmt::rt::UnsafeArg;
    let _42: ();
    let mut _43: core::fmt::Arguments<'_>;
    let mut _44: &[&str];
    let mut _45: &[core::fmt::rt::Argument<'_>];
    let _46: &[core::fmt::rt::Argument<'_>; 1];
    let _47: [core::fmt::rt::Argument<'_>; 1];
    let mut _48: core::fmt::rt::Argument<'_>;
    let _49: &x86_64::structures::idt::InterruptStackFrame;
    let mut _50: &[core::fmt::rt::Placeholder];
    let _51: &[core::fmt::rt::Placeholder; 1];
    let _52: [core::fmt::rt::Placeholder; 1];
    let mut _53: core::fmt::rt::Placeholder;
    let mut _54: core::fmt::rt::Alignment;
    let mut _55: core::fmt::rt::Count;
    let mut _56: core::fmt::rt::Count;
    let mut _57: core::fmt::rt::UnsafeArg;
    let mut _58: ();
    let mut _59: &[&str; 2];
    let mut _60: &[&str; 2];
    let mut _61: &[&str; 2];
    let mut _62: &[&str; 1];
    scope 1 {
    }
    scope 2 {
    }
    scope 3 {
    }

    bb0: {
        _62 = const _;
        _5 = _62 as &[&str] (PointerCoercion(Unsize));
        _8 = core::fmt::rt::Argument::<'_>::none() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _7 = &_8;
        _6 = _7 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _4 = Arguments::<'_>::new_v1(move _5, move _6) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _3 = peripherals::_print(move _4) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _61 = const _;
        _11 = _61 as &[&str] (PointerCoercion(Unsize));
        _17 = control::x86_64::<impl Cr2>::read() -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _16 = &_17;
        _15 = core::fmt::rt::Argument::<'_>::new_debug::<VirtAddr>(_16) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        _14 = [move _15];
        _13 = &_14;
        _12 = _13 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _22 = core::fmt::rt::Alignment::Unknown;
        _23 = core::fmt::rt::Count::Implied;
        _24 = core::fmt::rt::Count::Implied;
        _21 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _22, const 4_u32, move _23, move _24) -> [return: bb6, unwind unreachable];
    }

    bb6: {
        _20 = [move _21];
        _19 = &_20;
        _18 = _19 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize));
        _25 = core::fmt::rt::UnsafeArg::new() -> [return: bb7, unwind unreachable];
    }

    bb7: {
        _10 = Arguments::<'_>::new_v1_formatted(move _11, move _12, move _18, const core::fmt::rt::UnsafeArg {{ _private: () }}) -> [return: bb8, unwind unreachable];
    }

    bb8: {
        _9 = peripherals::_print(move _10) -> [return: bb9, unwind unreachable];
    }

    bb9: {
        _60 = const _;
        _28 = _60 as &[&str] (PointerCoercion(Unsize));
        _33 = &_2;
        _32 = core::fmt::rt::Argument::<'_>::new_debug::<PageFaultErrorCode>(_33) -> [return: bb10, unwind unreachable];
    }

    bb10: {
        _31 = [move _32];
        _30 = &_31;
        _29 = _30 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _38 = core::fmt::rt::Alignment::Unknown;
        _39 = core::fmt::rt::Count::Implied;
        _40 = core::fmt::rt::Count::Implied;
        _37 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _38, const 4_u32, move _39, move _40) -> [return: bb11, unwind unreachable];
    }

    bb11: {
        _36 = [move _37];
        _35 = &_36;
        _34 = _35 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize));
        _41 = core::fmt::rt::UnsafeArg::new() -> [return: bb12, unwind unreachable];
    }

    bb12: {
        _27 = Arguments::<'_>::new_v1_formatted(move _28, move _29, move _34, const core::fmt::rt::UnsafeArg {{ _private: () }}) -> [return: bb13, unwind unreachable];
    }

    bb13: {
        _26 = peripherals::_print(move _27) -> [return: bb14, unwind unreachable];
    }

    bb14: {
        _59 = const _;
        _44 = _59 as &[&str] (PointerCoercion(Unsize));
        _49 = &_1;
        _48 = core::fmt::rt::Argument::<'_>::new_debug::<InterruptStackFrame>(_49) -> [return: bb15, unwind unreachable];
    }

    bb15: {
        _47 = [move _48];
        _46 = &_47;
        _45 = _46 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _54 = core::fmt::rt::Alignment::Unknown;
        _55 = core::fmt::rt::Count::Implied;
        _56 = core::fmt::rt::Count::Implied;
        _53 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _54, const 4_u32, move _55, move _56) -> [return: bb16, unwind unreachable];
    }

    bb16: {
        _52 = [move _53];
        _51 = &_52;
        _50 = _51 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize));
        _57 = core::fmt::rt::UnsafeArg::new() -> [return: bb17, unwind unreachable];
    }

    bb17: {
        _43 = Arguments::<'_>::new_v1_formatted(move _44, move _45, move _50, const core::fmt::rt::UnsafeArg {{ _private: () }}) -> [return: bb18, unwind unreachable];
    }

    bb18: {
        _42 = peripherals::_print(move _43) -> [return: bb19, unwind unreachable];
    }

    bb19: {
        _58 = hlt() -> [return: bb19, unwind unreachable];
    }
}

promoted[0] in interrupts::page_fault_handler: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[1] in interrupts::page_fault_handler: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "Error code: ", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[2] in interrupts::page_fault_handler: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "Address: ", const "\n"];
        _0 = &_1;
        return;
    }
}

promoted[3] in interrupts::page_fault_handler: &[&str; 1] = {
    let mut _0: &[&str; 1];
    let mut _1: [&str; 1];

    bb0: {
        _1 = [const "<<<>>> PAGE FAULT OCCURRED <<<>>>\n"];
        _0 = &_1;
        return;
    }
}

fn breakpoint_handler(_1: InterruptStackFrame) -> () {
    debug _isf => _1;
    let mut _0: ();

    bb0: {
        return;
    }
}

fn timer_interrupt_handler(_1: InterruptStackFrame) -> () {
    debug _isf => _1;
    let mut _0: ();
    let _2: ();
    let mut _3: core::fmt::Arguments<'_>;
    let mut _4: &[&str];
    let _5: ();
    let mut _6: &[&str; 1];

    bb0: {
        _6 = const _;
        _4 = _6 as &[&str] (PointerCoercion(Unsize));
        _3 = Arguments::<'_>::new_const(move _4) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _2 = peripherals::_print(move _3) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _5 = notify_end_of_timer_interrupt() -> [return: bb3, unwind unreachable];
    }

    bb3: {
        return;
    }
}

promoted[0] in timer_interrupt_handler: &[&str; 1] = {
    let mut _0: &[&str; 1];
    let mut _1: [&str; 1];

    bb0: {
        _1 = [const "."];
        _0 = &_1;
        return;
    }
}

fn keyboard_handler(_1: InterruptStackFrame) -> () {
    debug _isf => _1;
    let mut _0: ();
    let mut _2: spin::MutexGuard<'_, keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>;
    let _3: &spin::mutex::Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>;
    let _4: &peripherals::KEYBOARD;
    let _5: ();
    let mut _6: &mut keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>;
    let mut _7: &mut spin::MutexGuard<'_, keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>;
    let _8: ();
    scope 1 {
        debug keyboard => _2;
    }

    bb0: {
        _4 = const {alloc10: &KEYBOARD};
        _3 = <KEYBOARD as Deref>::deref(_4) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _2 = Mutex::<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>::lock(_3) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _7 = &mut _2;
        _6 = <MutexGuard<'_, keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>> as DerefMut>::deref_mut(move _7) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _5 = keyboard::Keyboard::<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>::process_decoded_key::<{closure@src/interrupts.rs:59:34: 59:59}, ()>(_6, const ZeroSized: {closure@src/interrupts.rs:59:34: 59:59}) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _8 = notify_end_of_timer_interrupt() -> [return: bb5, unwind unreachable];
    }

    bb5: {
        drop(_2) -> [return: bb6, unwind unreachable];
    }

    bb6: {
        return;
    }
}

alloc10 (static: KEYBOARD, size: 0, align: 1) {}

fn keyboard_handler::{closure#0}(_1: {closure@src/interrupts.rs:59:34: 59:59}, _2: pc_keyboard::DecodedKey) -> () {
    debug decoded_key => _2;
    let mut _0: ();
    let mut _3: isize;
    let _4: char;
    let mut _5: core::fmt::Arguments<'_>;
    let mut _6: &[&str];
    let mut _7: &[core::fmt::rt::Argument<'_>];
    let _8: &[core::fmt::rt::Argument<'_>; 1];
    let _9: [core::fmt::rt::Argument<'_>; 1];
    let mut _10: core::fmt::rt::Argument<'_>;
    let _11: &char;
    let _12: pc_keyboard::KeyCode;
    let mut _13: core::fmt::Arguments<'_>;
    let mut _14: &[&str];
    let mut _15: &[core::fmt::rt::Argument<'_>];
    let _16: &[core::fmt::rt::Argument<'_>; 1];
    let _17: [core::fmt::rt::Argument<'_>; 1];
    let mut _18: core::fmt::rt::Argument<'_>;
    let _19: &pc_keyboard::KeyCode;
    scope 1 {
        debug decoded_key => _4;
        let mut _21: &[&str; 1];
    }
    scope 2 {
        debug decoded_key => _12;
        let mut _20: &[&str; 1];
    }

    bb0: {
        _3 = discriminant(_2);
        switchInt(move _3) -> [0: bb1, 1: bb3, otherwise: bb2];
    }

    bb1: {
        _12 = ((_2 as RawKey).0: pc_keyboard::KeyCode);
        _20 = const _;
        _14 = _20 as &[&str] (PointerCoercion(Unsize));
        _19 = &_12;
        _18 = core::fmt::rt::Argument::<'_>::new_debug::<pc_keyboard::KeyCode>(_19) -> [return: bb6, unwind unreachable];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        _4 = ((_2 as Unicode).0: char);
        _21 = const _;
        _6 = _21 as &[&str] (PointerCoercion(Unsize));
        _11 = &_4;
        _10 = core::fmt::rt::Argument::<'_>::new_display::<char>(_11) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _9 = [move _10];
        _8 = &_9;
        _7 = _8 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _5 = Arguments::<'_>::new_v1(move _6, move _7) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        _0 = peripherals::_print(move _5) -> [return: bb8, unwind unreachable];
    }

    bb6: {
        _17 = [move _18];
        _16 = &_17;
        _15 = _16 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _13 = Arguments::<'_>::new_v1(move _14, move _15) -> [return: bb7, unwind unreachable];
    }

    bb7: {
        _0 = peripherals::_print(move _13) -> [return: bb8, unwind unreachable];
    }

    bb8: {
        return;
    }
}

promoted[0] in keyboard_handler::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];
    let mut _1: [&str; 1];

    bb0: {
        _1 = [const ""];
        _0 = &_1;
        return;
    }
}

promoted[1] in keyboard_handler::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];
    let mut _1: [&str; 1];

    bb0: {
        _1 = [const ""];
        _0 = &_1;
        return;
    }
}

fn interrupts::initialize() -> () {
    let mut _0: ();
    let _1: ();
    let mut _2: core::result::Result<bool, &str>;
    let _3: &cpu_interrupts::interrupt_descriptor_table::SafeInterruptDescriptorTable;
    let _4: &interrupts::SAFE_IDT;
    let mut _5: isize;
    let _6: &str;
    let _7: !;
    let mut _8: core::fmt::Arguments<'_>;
    let mut _9: &[&str];
    let mut _10: &[core::fmt::rt::Argument<'_>];
    let _11: &[core::fmt::rt::Argument<'_>; 1];
    let _12: [core::fmt::rt::Argument<'_>; 1];
    let mut _13: core::fmt::rt::Argument<'_>;
    let _14: &&str;
    let _15: ();
    let _16: ();
    scope 1 {
        debug s => _6;
        let mut _17: &[&str; 1];
    }

    bb0: {
        _1 = cpu_interrupts::global_descriptor_table::initialize() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _4 = const {alloc11: &SAFE_IDT};
        _3 = <SAFE_IDT as Deref>::deref(_4) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _2 = SafeInterruptDescriptorTable::load(_3) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _5 = discriminant(_2);
        switchInt(move _5) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        _15 = cpu_interrupts::programmable_interface_controller::initialize() -> [return: bb9, unwind unreachable];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        _6 = ((_2 as Err).0: &str);
        _17 = const _;
        _9 = _17 as &[&str] (PointerCoercion(Unsize));
        _14 = &_6;
        _13 = core::fmt::rt::Argument::<'_>::new_display::<&str>(_14) -> [return: bb7, unwind unreachable];
    }

    bb7: {
        _12 = [move _13];
        _11 = &_12;
        _10 = _11 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _8 = Arguments::<'_>::new_v1(move _9, move _10) -> [return: bb8, unwind unreachable];
    }

    bb8: {
        _7 = panic_fmt(move _8) -> unwind unreachable;
    }

    bb9: {
        _16 = cpu_interrupts::enable() -> [return: bb10, unwind unreachable];
    }

    bb10: {
        return;
    }
}

alloc11 (static: SAFE_IDT, size: 0, align: 1) {}

promoted[0] in interrupts::initialize: &[&str; 1] = {
    let mut _0: &[&str; 1];
    let mut _1: [&str; 1];

    bb0: {
        _1 = [const "IDT initialization failed -> "];
        _0 = &_1;
        return;
    }
}

fn sine_interruptis(_1: F) -> R {
    debug f => _1;
    let mut _0: R;

    bb0: {
        _0 = cpu_interrupts::without_interrupts::<F, R>(move _1) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

const INVALID_MEMORY_ADDRESS_POINTER: *mut u8 = {
    let mut _0: *mut u8;

    bb0: {
        _0 = const 3198659358_usize as *mut u8 (PointerFromExposedAddress);
        return;
    }
}

const INSTRUCTION_POINTER_ADDRESS: *mut u8 = {
    let mut _0: *mut u8;

    bb0: {
        _0 = const 2139587_usize as *mut u8 (PointerFromExposedAddress);
        return;
    }
}

fn caused_by_write_page_fault() -> () {
    let mut _0: ();
    let mut _1: *mut u8;
    scope 1 {
    }

    bb0: {
        _1 = const _;
        (*_1) = const u8::MAX;
        return;
    }
}

fn cause_protection_violation_by_write_page_fault() -> () {
    let mut _0: ();
    let mut _2: *mut u8;
    let _3: ();
    let mut _4: core::fmt::Arguments<'_>;
    let mut _5: &[&str];
    let mut _6: &[core::fmt::rt::Argument<'_>];
    let _7: &[core::fmt::rt::Argument<'_>; 1];
    let _8: [core::fmt::rt::Argument<'_>; 1];
    let mut _9: core::fmt::rt::Argument<'_>;
    let _10: &u8;
    let mut _11: &[core::fmt::rt::Placeholder];
    let _12: &[core::fmt::rt::Placeholder; 1];
    let _13: [core::fmt::rt::Placeholder; 1];
    let mut _14: core::fmt::rt::Placeholder;
    let mut _15: core::fmt::rt::Alignment;
    let mut _16: core::fmt::rt::Count;
    let mut _17: core::fmt::rt::Count;
    let mut _18: core::fmt::rt::UnsafeArg;
    let mut _19: *mut u8;
    scope 1 {
        let _1: u8;
        scope 2 {
            debug instruction => _1;
            let mut _20: &[&str; 2];
            scope 3 {
            }
        }
    }

    bb0: {
        _2 = const _;
        _1 = (*_2);
        _20 = const _;
        _5 = _20 as &[&str] (PointerCoercion(Unsize));
        _10 = &_1;
        _9 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(_10) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _8 = [move _9];
        _7 = &_8;
        _6 = _7 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _15 = core::fmt::rt::Alignment::Unknown;
        _16 = core::fmt::rt::Count::Implied;
        _17 = core::fmt::rt::Count::Implied;
        _14 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _15, const 4_u32, move _16, move _17) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _13 = [move _14];
        _12 = &_13;
        _11 = _12 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize));
        _18 = core::fmt::rt::UnsafeArg::new() -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _4 = Arguments::<'_>::new_v1_formatted(move _5, move _6, move _11, const core::fmt::rt::UnsafeArg {{ _private: () }}) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _3 = peripherals::_print(move _4) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        _19 = const _;
        (*_19) = const 101_u8;
        return;
    }
}

promoted[0] in cause_protection_violation_by_write_page_fault: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "instruction: -->\n", const "\n"];
        _0 = &_1;
        return;
    }
}

fn inspect_level_four_page_table() -> () {
    let mut _0: ();
    let _1: x86_64::structures::paging::PhysFrame;
    let _2: x86_64::registers::control::Cr3Flags;
    let mut _3: (x86_64::structures::paging::PhysFrame, x86_64::registers::control::Cr3Flags);
    let _4: ();
    let mut _5: core::fmt::Arguments<'_>;
    let mut _6: &[&str];
    let mut _7: &[core::fmt::rt::Argument<'_>];
    let _8: &[core::fmt::rt::Argument<'_>; 2];
    let _9: [core::fmt::rt::Argument<'_>; 2];
    let mut _10: core::fmt::rt::Argument<'_>;
    let _11: &x86_64::structures::paging::PhysFrame;
    let mut _12: core::fmt::rt::Argument<'_>;
    let _13: &x86_64::registers::control::Cr3Flags;
    let mut _14: &[core::fmt::rt::Placeholder];
    let _15: &[core::fmt::rt::Placeholder; 2];
    let _16: [core::fmt::rt::Placeholder; 2];
    let mut _17: core::fmt::rt::Placeholder;
    let mut _18: core::fmt::rt::Alignment;
    let mut _19: core::fmt::rt::Count;
    let mut _20: core::fmt::rt::Count;
    let mut _21: core::fmt::rt::Placeholder;
    let mut _22: core::fmt::rt::Alignment;
    let mut _23: core::fmt::rt::Count;
    let mut _24: core::fmt::rt::Count;
    let mut _25: core::fmt::rt::UnsafeArg;
    scope 1 {
        debug physical_frame => _1;
        debug flags => _2;
        let mut _26: &[&str; 3];
        scope 2 {
        }
    }

    bb0: {
        _3 = control::x86_64::<impl Cr3>::read() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _1 = (_3.0: x86_64::structures::paging::PhysFrame);
        _2 = (_3.1: x86_64::registers::control::Cr3Flags);
        _26 = const _;
        _6 = _26 as &[&str] (PointerCoercion(Unsize));
        _11 = &_1;
        _10 = core::fmt::rt::Argument::<'_>::new_debug::<PhysFrame>(_11) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _13 = &_2;
        _12 = core::fmt::rt::Argument::<'_>::new_debug::<Cr3Flags>(_13) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _9 = [move _10, move _12];
        _8 = &_9;
        _7 = _8 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _18 = core::fmt::rt::Alignment::Unknown;
        _19 = core::fmt::rt::Count::Implied;
        _20 = core::fmt::rt::Count::Implied;
        _17 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _18, const 4_u32, move _19, move _20) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _22 = core::fmt::rt::Alignment::Unknown;
        _23 = core::fmt::rt::Count::Implied;
        _24 = core::fmt::rt::Count::Implied;
        _21 = core::fmt::rt::Placeholder::new(const 1_usize, const ' ', move _22, const 4_u32, move _23, move _24) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        _16 = [move _17, move _21];
        _15 = &_16;
        _14 = _15 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize));
        _25 = core::fmt::rt::UnsafeArg::new() -> [return: bb6, unwind unreachable];
    }

    bb6: {
        _5 = Arguments::<'_>::new_v1_formatted(move _6, move _7, move _14, const core::fmt::rt::UnsafeArg {{ _private: () }}) -> [return: bb7, unwind unreachable];
    }

    bb7: {
        _4 = peripherals::_print(move _5) -> [return: bb8, unwind unreachable];
    }

    bb8: {
        return;
    }
}

promoted[0] in inspect_level_four_page_table: &[&str; 3] = {
    let mut _0: &[&str; 3];
    let mut _1: [&str; 3];

    bb0: {
        _1 = [const "\nphysical_frame: --> ", const "\nflags: --> ", const "\n"];
        _0 = &_1;
        return;
    }
}

static VGA_DISPLAY_IN_TEXT_MODE: VGA_DISPLAY_IN_TEXT_MODE = {
    let mut _0: peripherals::VGA_DISPLAY_IN_TEXT_MODE;
    let mut _1: ();

    bb0: {
        StorageLive(_1);
        _1 = ();
        _0 = VGA_DISPLAY_IN_TEXT_MODE { __private_field: move _1 };
        StorageDead(_1);
        return;
    }
}

fn peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref(_1: &VGA_DISPLAY_IN_TEXT_MODE) -> &Mutex<Screen> {
    debug self => _1;
    let mut _0: &spin::mutex::Mutex<vga::Screen>;

    bb0: {
        _0 = <VGA_DISPLAY_IN_TEXT_MODE as Deref>::deref::__stability() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

fn peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__static_ref_initialize() -> Mutex<Screen> {
    let mut _0: spin::mutex::Mutex<vga::Screen>;
    let mut _1: vga::Screen;
    let mut _2: vga::TextFlowDirection;

    bb0: {
        _2 = BottomUp;
        _1 = Screen::new(move _2, const 32_u8) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _0 = Mutex::<Screen>::new(move _1) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        return;
    }
}

fn peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__stability() -> &Mutex<Screen> {
    let mut _0: &spin::mutex::Mutex<vga::Screen>;
    let _1: &lazy_static::lazy::Lazy<spin::mutex::Mutex<vga::Screen>>;

    bb0: {
        _1 = const {alloc12: &lazy_static::lazy::Lazy<Mutex<Screen>>};
        _0 = lazy_static::lazy::Lazy::<Mutex<Screen>>::get::<fn() -> Mutex<Screen> {<VGA_DISPLAY_IN_TEXT_MODE as Deref>::deref::__static_ref_initialize}>(_1, <VGA_DISPLAY_IN_TEXT_MODE as Deref>::deref::__static_ref_initialize) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

alloc12 (static: <VGA_DISPLAY_IN_TEXT_MODE as Deref>::deref::__stability::LAZY, size: 240, align: 8) {
    0x00 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x10 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x20 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x30 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x40 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x50 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x60 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x70 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x80 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0x90 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0xa0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0xb0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0xc0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0xd0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
    0xe0 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
}

static peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__stability::LAZY: lazy_static::lazy::Lazy<Mutex<Screen>> = {
    let mut _0: lazy_static::lazy::Lazy<spin::mutex::Mutex<vga::Screen>>;

    bb0: {
        _0 = const _;
        return;
    }
}

fn peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:147:9: 147:39>::initialize(_1: &VGA_DISPLAY_IN_TEXT_MODE) -> () {
    debug lazy => _1;
    let mut _0: ();
    let _2: &spin::mutex::Mutex<vga::Screen>;
    scope 1 {
    }

    bb0: {
        _2 = <VGA_DISPLAY_IN_TEXT_MODE as Deref>::deref(_1) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

static KEYBOARD: KEYBOARD = {
    let mut _0: peripherals::KEYBOARD;
    let mut _1: ();

    bb0: {
        StorageLive(_1);
        _1 = ();
        _0 = KEYBOARD { __private_field: move _1 };
        StorageDead(_1);
        return;
    }
}

fn peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref(_1: &KEYBOARD) -> &Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>> {
    debug self => _1;
    let mut _0: &spin::mutex::Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>;

    bb0: {
        _0 = <KEYBOARD as Deref>::deref::__stability() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

fn peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__static_ref_initialize() -> Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>> {
    let mut _0: spin::mutex::Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>;
    let mut _1: keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>;

    bb0: {
        _1 = keyboard::Keyboard::<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>::us_scancode_set_one_keyboard() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _0 = Mutex::<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>::new(move _1) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        return;
    }
}

fn peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__stability() -> &Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>> {
    let mut _0: &spin::mutex::Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>;
    let _1: &lazy_static::lazy::Lazy<spin::mutex::Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>>;

    bb0: {
        _1 = const {alloc13: &lazy_static::lazy::Lazy<Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>>};
        _0 = lazy_static::lazy::Lazy::<Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>>::get::<fn() -> Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>> {<KEYBOARD as Deref>::deref::__static_ref_initialize}>(_1, <KEYBOARD as Deref>::deref::__static_ref_initialize) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

alloc13 (static: <KEYBOARD as Deref>::deref::__stability::LAZY, size: 32, align: 8) {
    0x00 │ 00 00 00 00 00 00 00 00 00 00 __ __ __ __ __ __ │ ..........░░░░░░
    0x10 │ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ░░░░░░░░░░░░░░░░
}

static peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__stability::LAZY: lazy_static::lazy::Lazy<Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>> = {
    let mut _0: lazy_static::lazy::Lazy<spin::mutex::Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>>;

    bb0: {
        _0 = const _;
        return;
    }
}

fn peripherals::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:147:9: 147:39>::initialize(_1: &KEYBOARD) -> () {
    debug lazy => _1;
    let mut _0: ();
    let _2: &spin::mutex::Mutex<keyboard::Keyboard<pc_keyboard::layouts::us104::Us104Key, pc_keyboard::scancodes::set1::ScancodeSet1>>;
    scope 1 {
    }

    bb0: {
        _2 = <KEYBOARD as Deref>::deref(_1) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

fn peripherals::_print(_1: Arguments<'_>) -> () {
    debug args => _1;
    let mut _0: ();
    let _2: ();
    let mut _3: {closure@src/peripherals.rs:29:34: 29:36};
    let mut _4: &core::fmt::Arguments<'_>;

    bb0: {
        _4 = &_1;
        _3 = {closure@src/peripherals.rs:29:34: 29:36} { args: move _4 };
        _2 = sine_interruptis::<{closure@src/peripherals.rs:29:34: 29:36}, ()>(move _3) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

fn peripherals::_print::{closure#0}(_1: {closure@src/peripherals.rs:29:34: 29:36}) -> () {
    debug args => (*(_1.0: &core::fmt::Arguments<'_>));
    let mut _0: ();
    let mut _2: core::result::Result<(), core::fmt::Error>;
    let mut _3: &mut vga::Screen;
    let mut _4: &mut spin::MutexGuard<'_, vga::Screen>;
    let mut _5: spin::MutexGuard<'_, vga::Screen>;
    let _6: &spin::mutex::Mutex<vga::Screen>;
    let _7: &peripherals::VGA_DISPLAY_IN_TEXT_MODE;
    let mut _8: core::fmt::Arguments<'_>;
    let mut _9: &core::fmt::Arguments<'_>;

    bb0: {
        _7 = const {alloc14: &VGA_DISPLAY_IN_TEXT_MODE};
        _6 = <VGA_DISPLAY_IN_TEXT_MODE as Deref>::deref(_7) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _5 = Mutex::<Screen>::lock(_6) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _4 = &mut _5;
        _3 = <MutexGuard<'_, Screen> as DerefMut>::deref_mut(move _4) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _9 = deref_copy (_1.0: &core::fmt::Arguments<'_>);
        _8 = (*_9);
        _2 = <Screen as Write>::write_fmt(_3, move _8) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _0 = Result::<(), core::fmt::Error>::unwrap(move _2) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        drop(_5) -> [return: bb6, unwind unreachable];
    }

    bb6: {
        return;
    }
}

alloc14 (static: VGA_DISPLAY_IN_TEXT_MODE, size: 0, align: 1) {}

fn peripherals::initialize() -> () {
    let mut _0: ();

    bb0: {
        return;
    }
}

const SERIAL_PORT_ADDR: u16 = {
    let mut _0: u16;

    bb0: {
        _0 = const 1016_u16;
        return;
    }
}

static SERIAL1: SERIAL1 = {
    let mut _0: serial::SERIAL1;
    let mut _1: ();

    bb0: {
        StorageLive(_1);
        _1 = ();
        _0 = SERIAL1 { __private_field: move _1 };
        StorageDead(_1);
        return;
    }
}

fn serial::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref(_1: &SERIAL1) -> &Mutex<SerialPort> {
    debug self => _1;
    let mut _0: &spin::mutex::Mutex<uart_16550::SerialPort>;

    bb0: {
        _0 = <SERIAL1 as Deref>::deref::__stability() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

fn serial::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__static_ref_initialize() -> Mutex<SerialPort> {
    let mut _0: spin::mutex::Mutex<uart_16550::SerialPort>;
    let mut _1: uart_16550::SerialPort;
    let _2: ();
    let mut _3: &mut uart_16550::SerialPort;
    let mut _4: uart_16550::SerialPort;
    scope 1 {
        debug serial_via_uart_16550 => _1;
    }
    scope 2 {
    }

    bb0: {
        _1 = SerialPort::new(const _) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _3 = &mut _1;
        _2 = SerialPort::init(move _3) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _4 = move _1;
        _0 = Mutex::<SerialPort>::new(move _4) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        return;
    }
}

fn serial::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__stability() -> &Mutex<SerialPort> {
    let mut _0: &spin::mutex::Mutex<uart_16550::SerialPort>;
    let _1: &lazy_static::lazy::Lazy<spin::mutex::Mutex<uart_16550::SerialPort>>;

    bb0: {
        _1 = const {alloc15: &lazy_static::lazy::Lazy<Mutex<SerialPort>>};
        _0 = lazy_static::lazy::Lazy::<Mutex<SerialPort>>::get::<fn() -> Mutex<SerialPort> {<SERIAL1 as Deref>::deref::__static_ref_initialize}>(_1, <SERIAL1 as Deref>::deref::__static_ref_initialize) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

alloc15 (static: <SERIAL1 as Deref>::deref::__stability::LAZY, size: 24, align: 8) {
    0x00 │ 00 00 __ __ __ __ __ __ __ __ __ __ __ __ __ __ │ ..░░░░░░░░░░░░░░
    0x10 │ 00 00 00 00 00 00 00 00                         │ ........
}

static serial::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:133:9: 133:36>::deref::__stability::LAZY: lazy_static::lazy::Lazy<Mutex<SerialPort>> = {
    let mut _0: lazy_static::lazy::Lazy<spin::mutex::Mutex<uart_16550::SerialPort>>;

    bb0: {
        _0 = const _;
        return;
    }
}

fn serial::<impl at /Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs:147:9: 147:39>::initialize(_1: &SERIAL1) -> () {
    debug lazy => _1;
    let mut _0: ();
    let _2: &spin::mutex::Mutex<uart_16550::SerialPort>;
    scope 1 {
    }

    bb0: {
        _2 = <SERIAL1 as Deref>::deref(_1) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}

fn serial::_print(_1: Arguments<'_>) -> () {
    debug args => _1;
    let mut _0: ();
    let _2: ();
    let mut _3: core::result::Result<(), core::fmt::Error>;
    let mut _4: &mut uart_16550::SerialPort;
    let mut _5: &mut spin::MutexGuard<'_, uart_16550::SerialPort>;
    let mut _6: spin::MutexGuard<'_, uart_16550::SerialPort>;
    let _7: &spin::mutex::Mutex<uart_16550::SerialPort>;
    let _8: &serial::SERIAL1;
    let _9: &str;

    bb0: {
        _8 = const {alloc16: &SERIAL1};
        _7 = <SERIAL1 as Deref>::deref(_8) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _6 = Mutex::<SerialPort>::lock(_7) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _5 = &mut _6;
        _4 = <MutexGuard<'_, SerialPort> as DerefMut>::deref_mut(move _5) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _3 = <SerialPort as Write>::write_fmt(_4, _1) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _9 = const "Printing to serial failed";
        _2 = Result::<(), core::fmt::Error>::expect(move _3, _9) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        drop(_6) -> [return: bb6, unwind unreachable];
    }

    bb6: {
        return;
    }
}

alloc16 (static: SERIAL1, size: 0, align: 1) {}

fn traits::<impl at src/traits.rs:5:1: 7:13>::run(_1: &T) -> () {
    debug self => _1;
    let mut _0: ();
    let _2: ();
    let mut _3: core::fmt::Arguments<'_>;
    let mut _4: &[&str];
    let mut _5: &[core::fmt::rt::Argument<'_>];
    let _6: &[core::fmt::rt::Argument<'_>; 1];
    let _7: [core::fmt::rt::Argument<'_>; 1];
    let mut _8: core::fmt::rt::Argument<'_>;
    let _9: &&str;
    let _10: &str;
    let _11: ();
    let _12: ();
    let mut _13: core::fmt::Arguments<'_>;
    let mut _14: &[&str];
    let mut _15: &[&str; 1];
    let mut _16: &[&str; 2];

    bb0: {
        _16 = const _;
        _4 = _16 as &[&str] (PointerCoercion(Unsize));
        _10 = core::any::type_name::<T>() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _9 = &_10;
        _8 = core::fmt::rt::Argument::<'_>::new_display::<&str>(_9) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _7 = [move _8];
        _6 = &_7;
        _5 = _6 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _3 = Arguments::<'_>::new_v1(move _4, move _5) -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _2 = serial::_print(move _3) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _11 = <T as Fn<()>>::call(_1, const ()) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        _15 = const _;
        _14 = _15 as &[&str] (PointerCoercion(Unsize));
        _13 = Arguments::<'_>::new_const(move _14) -> [return: bb6, unwind unreachable];
    }

    bb6: {
        _12 = serial::_print(move _13) -> [return: bb7, unwind unreachable];
    }

    bb7: {
        return;
    }
}

promoted[0] in traits::<impl at src/traits.rs:5:1: 7:13>::run: &[&str; 1] = {
    let mut _0: &[&str; 1];
    let mut _1: [&str; 1];

    bb0: {
        _1 = [const "[ok]\n"];
        _0 = &_1;
        return;
    }
}

promoted[1] in traits::<impl at src/traits.rs:5:1: 7:13>::run: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const " ...\t"];
        _0 = &_1;
        return;
    }
}

static BOOTLOADER_CONFIG: BootloaderConfig = {
    let mut _0: bootloader_api::BootloaderConfig;
    let mut _1: bootloader_api::BootloaderConfig;
    let mut _2: core::option::Option<bootloader_api::config::Mapping>;
    let mut _3: bootloader_api::config::Mapping;
    scope 1 {
        debug config => _1;
    }

    bb0: {
        StorageLive(_1);
        ConstEvalCounter;
        _1 = BootloaderConfig::new_default() -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = Dynamic;
        _2 = Option::<Mapping>::Some(move _3);
        StorageDead(_3);
        ((_1.1: bootloader_api::config::Mappings).3: core::option::Option<bootloader_api::config::Mapping>) = move _2;
        StorageDead(_2);
        _0 = _1;
        StorageDead(_1);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}

const _: () = {
    let mut _0: ();

    bb0: {
        _0 = const ();
        return;
    }
}

static __BOOTLOADER_CONFIG: [u8; 124] = {
    let mut _0: [u8; 124];
    let _1: &bootloader_api::BootloaderConfig;
    let _2: &bootloader_api::BootloaderConfig;
    let _3: &bootloader_api::BootloaderConfig;
    let mut _4: &bootloader_api::BootloaderConfig;
    scope 1 {
        debug config => _1;
    }

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        _3 = const {alloc17: &BootloaderConfig};
        _2 = &(*_3);
        _1 = &(*_2);
        StorageDead(_2);
        StorageLive(_4);
        _4 = &(*_1);
        ConstEvalCounter;
        _0 = BootloaderConfig::serialize(move _4) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_1);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}

alloc17 (static: BOOTLOADER_CONFIG, size: 184, align: 8) {
    0x00 │ 00 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ │ ........░░░░░░░░
    0x10 │ 00 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ │ ........░░░░░░░░
    0x20 │ 00 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ │ ........░░░░░░░░
    0x30 │ 00 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ │ ........░░░░░░░░
    0x40 │ 00 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ │ ........░░░░░░░░
    0x50 │ 00 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ │ ........░░░░░░░░
    0x60 │ 00 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ │ ........░░░░░░░░
    0x70 │ 02 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ │ ........░░░░░░░░
    0x80 │ 00 __ __ __ __ __ __ __ 00 00 00 00 00 00 00 00 │ .░░░░░░░........
    0x90 │ __ __ __ __ __ __ __ __ 00 00 00 00 00 00 00 00 │ ░░░░░░░░........
    0xa0 │ __ __ __ __ __ __ __ __ 00 00 0b 00 04 00 00 __ │ ░░░░░░░░.......░
    0xb0 │ 00 40 01 00 00 00 00 00                         │ .@......
}

__BOOTLOADER_CONFIG::{constant#0}: usize = {
    let mut _0: usize;

    bb0: {
        _0 = const _;
        return;
    }
}

fn __impl_start(_1: &mut BootInfo) -> ! {
    debug boot_info => _1;
    let mut _0: !;
    let _2: fn(&mut bootloader_api::BootInfo) -> !;
    let _3: ();
    let mut _4: &[u8];
    let _5: &[u8; 124];
    scope 1 {
        debug f => _2;
    }

    bb0: {
        _2 = kernel_main as fn(&mut bootloader_api::BootInfo) -> ! (PointerCoercion(ReifyFnPointer));
        _5 = const <static(DefId(0:130 ~ theo[df30]::_::__BOOTLOADER_CONFIG))>;
        _4 = _5 as &[u8] (PointerCoercion(Unsize));
        _3 = __force_use(move _4) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _0 = _2(_1) -> unwind unreachable;
    }
}

alloc18 (static: __BOOTLOADER_CONFIG, size: 124, align: 1) {
    0x00 │ 74 3c a9 61 09 36 46 a0 bb 55 5c 15 89 15 25 3d │ t<.a.6F..U\...%=
    0x10 │ 00 00 0b 00 04 00 00 00 40 01 00 00 00 00 00 00 │ ........@.......
    0x20 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x30 │ 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 │ ................
    0x40 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x50 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x60 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x70 │ 00 00 00 00 00 00 00 00 00 00 00 00             │ ............
}

fn kernel_main(_1: &mut BootInfo) -> ! {
    debug _boot_info => _1;
    let mut _0: !;
    let _2: ();
    let _3: ();
    let _4: ();
    let mut _5: core::fmt::Arguments<'_>;
    let mut _6: &[&str];
    let mut _7: &[core::fmt::rt::Argument<'_>];
    let _8: &[core::fmt::rt::Argument<'_>; 0];
    let _9: [core::fmt::rt::Argument<'_>; 0];
    let _10: ();
    let mut _11: core::fmt::Arguments<'_>;
    let mut _12: &[&str];
    let mut _13: &[core::fmt::rt::Argument<'_>];
    let _14: &[core::fmt::rt::Argument<'_>; 0];
    let _15: [core::fmt::rt::Argument<'_>; 0];
    let _16: ();
    let mut _17: core::fmt::Arguments<'_>;
    let mut _18: &[&str];
    let mut _19: &[core::fmt::rt::Argument<'_>];
    let _20: &[core::fmt::rt::Argument<'_>; 0];
    let _21: [core::fmt::rt::Argument<'_>; 0];
    let _22: ();
    let mut _23: ();
    let mut _24: &[&str; 1];
    let mut _25: &[&str; 1];
    let mut _26: &[&str; 1];

    bb0: {
        _2 = peripherals::initialize() -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _3 = interrupts::initialize() -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _26 = const _;
        _6 = _26 as &[&str] (PointerCoercion(Unsize));
        _9 = core::fmt::rt::Argument::<'_>::none() -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _8 = &_9;
        _7 = _8 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _5 = Arguments::<'_>::new_v1(move _6, move _7) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _4 = peripherals::_print(move _5) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        _25 = const _;
        _12 = _25 as &[&str] (PointerCoercion(Unsize));
        _15 = core::fmt::rt::Argument::<'_>::none() -> [return: bb6, unwind unreachable];
    }

    bb6: {
        _14 = &_15;
        _13 = _14 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _11 = Arguments::<'_>::new_v1(move _12, move _13) -> [return: bb7, unwind unreachable];
    }

    bb7: {
        _10 = peripherals::_print(move _11) -> [return: bb8, unwind unreachable];
    }

    bb8: {
        _24 = const _;
        _18 = _24 as &[&str] (PointerCoercion(Unsize));
        _21 = core::fmt::rt::Argument::<'_>::none() -> [return: bb9, unwind unreachable];
    }

    bb9: {
        _20 = &_21;
        _19 = _20 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _17 = Arguments::<'_>::new_v1(move _18, move _19) -> [return: bb10, unwind unreachable];
    }

    bb10: {
        _16 = peripherals::_print(move _17) -> [return: bb11, unwind unreachable];
    }

    bb11: {
        _22 = inspect_level_four_page_table() -> [return: bb12, unwind unreachable];
    }

    bb12: {
        _23 = hlt() -> [return: bb12, unwind unreachable];
    }
}

promoted[0] in kernel_main: &[&str; 1] = {
    let mut _0: &[&str; 1];
    let mut _1: [&str; 1];

    bb0: {
        _1 = [const "last row of text, with empty row below\n"];
        _0 = &_1;
        return;
    }
}

promoted[1] in kernel_main: &[&str; 1] = {
    let mut _0: &[&str; 1];
    let mut _1: [&str; 1];

    bb0: {
        _1 = [const "this text should appear on last but one row\n"];
        _0 = &_1;
        return;
    }
}

promoted[2] in kernel_main: &[&str; 1] = {
    let mut _0: &[&str; 1];
    let mut _1: [&str; 1];

    bb0: {
        _1 = [const "ave imperator, morituri te salutant 🖖!\n\n\n\n\n"];
        _0 = &_1;
        return;
    }
}

fn panic_handler(_1: &PanicInfo<'_>) -> ! {
    debug panic_info => _1;
    let mut _0: !;
    let _2: ();
    let mut _3: core::fmt::Arguments<'_>;
    let mut _4: &[&str];
    let mut _5: &[core::fmt::rt::Argument<'_>];
    let _6: &[core::fmt::rt::Argument<'_>; 1];
    let _7: [core::fmt::rt::Argument<'_>; 1];
    let mut _8: core::fmt::rt::Argument<'_>;
    let _9: &&core::panic::PanicInfo<'_>;
    let mut _10: &[core::fmt::rt::Placeholder];
    let _11: &[core::fmt::rt::Placeholder; 1];
    let _12: [core::fmt::rt::Placeholder; 1];
    let mut _13: core::fmt::rt::Placeholder;
    let mut _14: core::fmt::rt::Alignment;
    let mut _15: core::fmt::rt::Count;
    let mut _16: core::fmt::rt::Count;
    let mut _17: core::fmt::rt::UnsafeArg;
    let mut _18: &[&str; 2];
    scope 1 {
    }

    bb0: {
        _18 = const _;
        _4 = _18 as &[&str] (PointerCoercion(Unsize));
        _9 = &_1;
        _8 = core::fmt::rt::Argument::<'_>::new_debug::<&PanicInfo<'_>>(_9) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        _7 = [move _8];
        _6 = &_7;
        _5 = _6 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        _14 = core::fmt::rt::Alignment::Unknown;
        _15 = core::fmt::rt::Count::Implied;
        _16 = core::fmt::rt::Count::Implied;
        _13 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _14, const 4_u32, move _15, move _16) -> [return: bb2, unwind unreachable];
    }

    bb2: {
        _12 = [move _13];
        _11 = &_12;
        _10 = _11 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize));
        _17 = core::fmt::rt::UnsafeArg::new() -> [return: bb3, unwind unreachable];
    }

    bb3: {
        _3 = Arguments::<'_>::new_v1_formatted(move _4, move _5, move _10, const core::fmt::rt::UnsafeArg {{ _private: () }}) -> [return: bb4, unwind unreachable];
    }

    bb4: {
        _2 = peripherals::_print(move _3) -> [return: bb5, unwind unreachable];
    }

    bb5: {
        _0 = abort() -> unwind unreachable;
    }
}

promoted[0] in panic_handler: &[&str; 2] = {
    let mut _0: &[&str; 2];
    let mut _1: [&str; 2];

    bb0: {
        _1 = [const "", const "\n"];
        _0 = &_1;
        return;
    }
}
