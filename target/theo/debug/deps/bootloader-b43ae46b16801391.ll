; ModuleID = 'bootloader.ebac9e79-cgu.0'
source_filename = "bootloader.ebac9e79-cgu.0"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-obuasi-unknown-none"

%"bootinfo::memory_map::MemoryRegion" = type { { i64, i64 }, i32, [1 x i32] }
%"core::ops::range::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, { ptr, i64 } }
%"core::fmt::UnsafeArg" = type { {} }
%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>" = type { %"bootinfo::memory_map::MemoryRegion" }
%"core::mem::manually_drop::ManuallyDrop<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>" = type { %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>" }
%"core::mem::maybe_uninit::MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>" = type { [3 x i64] }
%"core::ptr::metadata::PtrComponents<bootinfo::memory_map::MemoryRegion>" = type { ptr, {} }
%"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>" = type { [1 x i64] }
%"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>" = type { [2 x i64] }
%"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]" = type {}
%"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]" = type { { ptr, i64 }, ptr, ptr }
%"core::option::Option<core::fmt::Arguments<'_>>" = type { [2 x i64], ptr, [3 x i64] }
%"bootinfo::TlsTemplate" = type { i64, i64, i64 }
%"core::option::Option<bootinfo::TlsTemplate>::Some" = type { [1 x i64], %"bootinfo::TlsTemplate" }
%"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]" = type {}
%"bootinfo::memory_map::MemoryMap" = type { [64 x %"bootinfo::memory_map::MemoryRegion"], i64 }
%"core::fmt::builders::DebugList<'_, '_>" = type { %"core::fmt::builders::DebugInner<'_, '_>" }
%"core::fmt::builders::DebugInner<'_, '_>" = type { ptr, i8, i8, [6 x i8] }
%"core::fmt::rt::v1::FormatSpec" = type { { i64, i64 }, { i64, i64 }, i32, i32, i8, [7 x i8] }
%"core::fmt::rt::v1::Argument" = type { %"core::fmt::rt::v1::FormatSpec", i64 }
%"bootinfo::memory_map::E820MemoryRegion" = type { i64, i64, i32, i32 }
%"bootinfo::BootInfo" = type { %"bootinfo::memory_map::MemoryMap", %"bootinfo::TlsTemplate", i8, [7 x i8] }
%"core::option::Option<bootinfo::TlsTemplate>" = type { i64, [3 x i64] }

@alloc_7448c69d27aefedfd00f223051fa5351 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the range is within the slice" }>, align 1
@alloc_8161f293b9b66c8ac0a60d9d6c8f8635 = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: slice::get_unchecked_mut requires that the range is within the slice" }>, align 1
@alloc_ae627977d5bf3a79590d396583b48bb1 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs" }>, align 1
@alloc_67d3192705742f4066a9d8236c8d1e20 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ae627977d5bf3a79590d396583b48bb1, [16 x i8] c"n\00\00\00\00\00\00\00\E7\08\00\007\00\00\00" }>, align 8
@alloc_8d7ed0f3ba7c7c3b3db6b6a96e967124 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ae627977d5bf3a79590d396583b48bb1, [16 x i8] c"n\00\00\00\00\00\00\00\E8\08\00\00+\00\00\00" }>, align 8
@str.0 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc_af0d195999a93dfccb20ccef2dcacd2f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ae627977d5bf3a79590d396583b48bb1, [16 x i8] c"n\00\00\00\00\00\00\00\E8\08\00\00J\00\00\00" }>, align 8
@alloc_b56be81cf5a058d5588216c6f79d2aee = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_a1d063fc56d08794b1bf303ec0d8a16b = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned aligned and non-null" }>, align 1
@vtable.1 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h7f9abbc7b99f0eedE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1484d596ca396b6fE" }>, align 8, !dbg !0
@alloc_c5abb592cb74b08c04728308b178bcc8 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc_47ee623a9f06017983b1b14793104f21 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c5abb592cb74b08c04728308b178bcc8, [16 x i8] c"k\00\00\00\00\00\00\00\92\01\00\008\00\00\00" }>, align 8
@str.2 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc_09d11aa498739cbf0519d318f9792c9b = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc_71b99a1804d93c013f301ec59bc480be = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_09d11aa498739cbf0519d318f9792c9b, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_2bfeba76c1438a46208a034153050220 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc_06016551127ebd46210a364dc7059aaa = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c5abb592cb74b08c04728308b178bcc8, [16 x i8] c"k\00\00\00\00\00\00\00\93\01\00\00\0D\00\00\00" }>, align 8
@alloc_265b5926a8450d44d24107ce109f3173 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs" }>, align 1
@alloc_398478f18b6274e70f5df548afd1dd42 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_265b5926a8450d44d24107ce109f3173, [16 x i8] c"k\00\00\00\00\00\00\00\DE\02\00\00\0C\00\00\00" }>, align 8
@str.3 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc_fa95777c91a88ace608c067b20a99eef = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs" }>, align 1
@alloc_e478450343a835afd2261f28c76aea80 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fa95777c91a88ace608c067b20a99eef, [16 x i8] c"k\00\00\00\00\00\00\00\A6\04\00\00\05\00\00\00" }>, align 8
@str.4 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc_5176f0932e73529f53a0851cc2e4d9fe = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs" }>, align 1
@alloc_be74afa4d7fc4fb0397e1cb39f3f7977 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_5176f0932e73529f53a0851cc2e4d9fe, [16 x i8] c"m\00\00\00\00\00\00\00\CA\01\00\00\1D\00\00\00" }>, align 8
@alloc_0925410b7c4917ded038883dd048bfe8 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc_37325827c2b5768e6ac023a473cc3d84 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0925410b7c4917ded038883dd048bfe8, [16 x i8] c"k\00\00\00\00\00\00\00\AC\03\00\00&\00\00\00" }>, align 8
@str.5 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc_8a5c32ab9581cb9cc3f9a1f2d694d9fd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0925410b7c4917ded038883dd048bfe8, [16 x i8] c"k\00\00\00\00\00\00\00\AE\03\00\00\09\00\00\00" }>, align 8
@str.6 = internal constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc_aaea1f9bf75caf56a6c949d11fab6e87 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0925410b7c4917ded038883dd048bfe8, [16 x i8] c"k\00\00\00\00\00\00\00\AF\03\00\00\09\00\00\00" }>, align 8
@alloc_d9a45cbc775fd4f6013ee9874736263f = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::swap_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_d622d686b486e5b7d66f3b5666247ed0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0925410b7c4917ded038883dd048bfe8, [16 x i8] c"k\00\00\00\00\00\00\00\C8\03\00\00\09\00\00\00" }>, align 8
@alloc_9562f34aec96353760f71a2d048344df = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0925410b7c4917ded038883dd048bfe8, [16 x i8] c"k\00\00\00\00\00\00\00\86\04\00\00\0D\00\00\00" }>, align 8
@alloc_efce4ff77543cc2403477cd546743a0c = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_98d916830fc7cab3c43d0ae7d762d17f = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_d0afbdd8e12853f26980a9342bb4d429 = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc_e79f2aa950e86e6cb565ecb827afe5ce = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_4105d0742918b74e2c640d9349dca984 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e79f2aa950e86e6cb565ecb827afe5ce, [16 x i8] c"q\00\00\00\00\00\00\00#\06\00\00\1A\00\00\00" }>, align 8
@alloc_4ed5ec8bf80b80ae433a004a3507c2ef = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc_e5e5ee84beb26a7d629d956d12efff36 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_4ed5ec8bf80b80ae433a004a3507c2ef, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_360e68377b15a3e0dd13581a5ee2cd6d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e79f2aa950e86e6cb565ecb827afe5ce, [16 x i8] c"q\00\00\00\00\00\00\00\1E\06\00\00\0D\00\00\00" }>, align 8
@alloc_bb5ba7a338bdd5569ae85ad3deea92df = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc_59336975744c7e00b322ab83489cc670 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e79f2aa950e86e6cb565ecb827afe5ce, [16 x i8] c"q\00\00\00\00\00\00\00\1C\03\00\00\09\00\00\00" }>, align 8
@alloc_b1ed2cffeff660b0e56c8d9a60743218 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"unsafe precondition(s) violated: ptr::sub_ptr requires `this >= origin`" }>, align 1
@alloc_ac4f3d223bce7ffa9fb41b518dc7f04a = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc_e9b05895811cc8f1a20d297db3c34a43 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\FF" }>, align 1
@alloc_b26a1f5f08a335729ab13f55fd54bb98 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc_5d294a602ce5a17755e37289ab68d465 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b26a1f5f08a335729ab13f55fd54bb98, [16 x i8] c"m\00\00\00\00\00\00\00\DD\06\00\00M\00\00\00" }>, align 8
@alloc_16dc63f8bc7e67d44de0aee890974f47 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: slice::split_at_mut_unchecked requires the index to be within the slice" }>, align 1
@alloc_a561e438276466e5df12dc2ee9037ac7 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: a.len() == n" }>, align 1
@alloc_deb1474422cb4e00a90f46c2893cd686 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b26a1f5f08a335729ab13f55fd54bb98, [16 x i8] c"m\00\00\00\00\00\00\00\C3\02\00\00\0D\00\00\00" }>, align 8
@alloc_2b0983efa2ce17f757404c261b6508df = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: b.len() == n" }>, align 1
@alloc_de4d8e6e6022320cce882aa64e86143d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b26a1f5f08a335729ab13f55fd54bb98, [16 x i8] c"m\00\00\00\00\00\00\00\C4\02\00\00\0D\00\00\00" }>, align 8
@alloc_73b66e6e6ef1f4f026a3a16459a93035 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b26a1f5f08a335729ab13f55fd54bb98, [16 x i8] c"m\00\00\00\00\00\00\00\CA\02\00\00 \00\00\00" }>, align 8
@alloc_811b26e308c2c6ec2a288b2b160aac40 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b26a1f5f08a335729ab13f55fd54bb98, [16 x i8] c"m\00\00\00\00\00\00\00\CA\02\00\00-\00\00\00" }>, align 8
@alloc_944239dac115980e8ad324cb88c37bb6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b26a1f5f08a335729ab13f55fd54bb98, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00 \00\00\00" }>, align 8
@alloc_aad6ac8415f95f12b42b8dda073bb48d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b26a1f5f08a335729ab13f55fd54bb98, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00-\00\00\00" }>, align 8
@alloc_bf7bac295cefdb9d57cabecf7ac073ed = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b26a1f5f08a335729ab13f55fd54bb98, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00+\00\00\00" }>, align 8
@alloc_01d251ffa3fdd203a0d15da7612aec55 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b26a1f5f08a335729ab13f55fd54bb98, [16 x i8] c"m\00\00\00\00\00\00\00\CF\02\00\00\11\00\00\00" }>, align 8
@alloc_eb29d283dadbfac1e0da90551ac8d261 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_00b6f40daaa833578c32ba881b54269b = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: v.len() >= 2" }>, align 1
@alloc_292625bd0a9bd31655ec47c129e6b2e1 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs" }>, align 1
@alloc_6854ca22c1ff4b29e85edf658fa19473 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\\\00\00\00\05\00\00\00" }>, align 8
@alloc_f1698580964cd608ee66cd8009928f4d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\87\00\00\00F\00\00\00" }>, align 8
@alloc_f3590bc7ce241020d4a831f05900b436 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00'\00\00\00\05\00\00\00" }>, align 8
@alloc_251f9655436dd42a6ca8f0354f234fd3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00*\00\00\00\0D\00\00\00" }>, align 8
@alloc_fa862d1acd9e118fb8ded4e9bbffd0b7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00G\00\00\00\1A\00\00\00" }>, align 8
@alloc_e17d4ffc2b65fbd37220ec843cd22441 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\DF\02\00\00\11\00\00\00" }>, align 8
@alloc_fe569d326f83ed486b41a9c4bc0ee25e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\E0\02\00\00\11\00\00\00" }>, align 8
@alloc_2f277c851c31292dad790275b8a5ccbf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\E1\02\00\00\11\00\00\00" }>, align 8
@alloc_98f379435ee390d761d0d62cdcd5c923 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\13\03\00\00\0A\00\00\00" }>, align 8
@alloc_b0abc825f366de714652cb4403cd1dc0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\00\03\00\00\1C\00\00\00" }>, align 8
@alloc_9dd09f52bcc60659466eba55032edc8d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\00\03\00\00/\00\00\00" }>, align 8
@alloc_e8eb684e395cde89550a1891c67c6a44 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\F1\02\00\00\11\00\00\00" }>, align 8
@alloc_22c422242f351f89b5a830967c24444b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\BD\02\00\00\13\00\00\00" }>, align 8
@alloc_d4cc4dbebdbdf2575575e260dfd147eb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\C3\02\00\00+\00\00\00" }>, align 8
@alloc_2ee80aa5e2c7b28602cec54a7fb58afe = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\C7\02\00\00\11\00\00\00" }>, align 8
@alloc_2481e32a797a6a6d8cdccba86a9101f8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00\14\00\00\00" }>, align 8
@alloc_63307aa8dfaa70d58dc8578cc73e1e66 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00\0F\00\00\00" }>, align 8
@alloc_f6bed5e85d3d02917b18f4e03b55f967 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00l\02\00\00\07\00\00\00" }>, align 8
@alloc_9079ea652e0b859db4b95be3e591c986 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00m\02\00\00\18\00\00\00" }>, align 8
@alloc_fc6cd033ef0d9ecb628aa5fcbe6eb9d2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00n\02\00\00\16\00\00\00" }>, align 8
@alloc_2a3802316915038e0680d78cab788aa9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\82\02\00\00\11\00\00\00" }>, align 8
@alloc_7af4a2b8ed9fa62b3bee6e126d16736a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\86\02\00\00;\00\00\00" }>, align 8
@alloc_3853b19179ca4e07adb5cfa49d1eace3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\87\02\00\00\11\00\00\00" }>, align 8
@alloc_0c85cb3bd77f623e57c5ca151bb4e2a4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\98\02\00\00\05\00\00\00" }>, align 8
@alloc_2034f022b1e18b3dbb9385e4cd132653 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\90\02\00\00\0D\00\00\00" }>, align 8
@alloc_f3edeead077d1e6008216d6b8c16e5ba = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\93\02\00\00\0D\00\00\00" }>, align 8
@alloc_5a3fbd37a1800403b0e9352f6f1c62fd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00e\01\00\00\11\00\00\00" }>, align 8
@alloc_a925e1d3976aff4911f54018ff03cd28 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00s\01\00\00\1B\00\00\00" }>, align 8
@alloc_ceb89d5182fee5b458bee065ff593fff = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"assertion failed: block_l <= BLOCK && block_r <= BLOCK" }>, align 1
@alloc_c9129f532e2b4d7b9be8f0d9add2f551 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00u\01\00\00\0D\00\00\00" }>, align 8
@alloc_0bff3126ea305b417c182e891e2d065d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00*\00\00\00" }>, align 8
@alloc_3dea5a8c375fadb5cd67952461229502 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"assertion failed: width(l, r) == block_l + block_r" }>, align 1
@alloc_cd7a4b7fd97c82d97355b5af9df817bc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00\0D\00\00\00" }>, align 8
@alloc_85041fc735c1873f26f9b9183d775ffb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\D2\01\00\00*\00\00\00" }>, align 8
@alloc_12b2eee1a7da6a16a51b17676508323c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\D6\01\00\007\00\00\00" }>, align 8
@alloc_6aeaa22a25fdbd6317317ce6c9c175d3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\D8\01\00\00.\00\00\00" }>, align 8
@alloc_05e2683215c1d8600cfd55f7fbdce971 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\DB\01\00\000\00\00\00" }>, align 8
@alloc_4c9eb7be33960644b7aeb6fba29a2a01 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\02\02\00\00\09\00\00\00" }>, align 8
@alloc_e68a47e57f76ff56e4571db803b042a9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\19\02\00\00\09\00\00\00" }>, align 8
@alloc_95cd5ef29f0518fdd5e93c2a0c793d79 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\1E\02\00\00$\00\00\00" }>, align 8
@alloc_9f5eac1701dd210e63d0fdfed08deb00 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: mem::size_of::<T>() > 0" }>, align 1
@alloc_40e921f5b89c547ca7cb2a686def055b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00V\01\00\00\09\00\00\00" }>, align 8
@alloc_eb9ff3c3e62ed9a6080a33a1531d61cf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00Y\01\00\00\09\00\00\00" }>, align 8
@alloc_1b0364f570c3f3f1c1af025f5e783cc6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\D7\00\00\00K\00\00\00" }>, align 8
@alloc_b9bd92873c8864922e2a1bc25228a503 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\D8\00\00\00\11\00\00\00" }>, align 8
@alloc_c695703731237b99eddff9afba3df2b5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\10\00\00\00" }>, align 8
@alloc_fee97dfe87b21721044ce3fabb239dc6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\0B\00\00\00" }>, align 8
@alloc_e5c322dbc634d1a43b2bd608756bc9dc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\00,\00\00\00" }>, align 8
@alloc_70c32dc456736fcf29cf7c086924026f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\004\00\00\00" }>, align 8
@alloc_5f51a9cdc9a0eb43c97a381a94864e3d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\EE\00\00\00-\00\00\00" }>, align 8
@alloc_9e39c800f048d213258e66d982cdf28e = private unnamed_addr constant <{ [46 x i8] }> <{ [46 x i8] c"assertion failed: offset != 0 && offset <= len" }>, align 1
@alloc_279a77f6f3fdc6ce693ddb57cebbb269 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\9B\00\00\00\05\00\00\00" }>, align 8
@alloc_567f7856390b0909cc556030781e52cf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\A3\00\00\00\1E\00\00\00" }>, align 8
@alloc_d07cf4d056c601bb7f235c04bb3f2a92 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"assertion failed: offset != 0 && offset <= len && len >= 2" }>, align 1
@alloc_76a6a2a8de78715ffc6423e290546ad3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\B4\00\00\00\05\00\00\00" }>, align 8
@alloc_358f9362dd0408a7b81aa9f27fddb533 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\BD\00\00\00\1E\00\00\00" }>, align 8
@alloc_cbcb86f332d4e7f734812b679d51fa9f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00?\03\00\00\0D\00\00\00" }>, align 8
@alloc_ad05988ca89b859817054745c50077fd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00S\03\00\00\1D\00\00\00" }>, align 8
@alloc_973477e74e390e850c7b9a61ecb4d704 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00W\03\00\00\1A\00\00\00" }>, align 8
@alloc_1bacda564c3ab0238f0c8f2006838ba3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00^\03\00\00&\00\00\00" }>, align 8
@alloc_32c054bbe0aceca970db8bea1d863075 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00b\03\00\00\1F\00\00\00" }>, align 8
@alloc_6923a33d4ddb6fc9d18a2edda44866f2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00c\03\00\00$\00\00\00" }>, align 8
@alloc_51cd39307bd8bcac3bc8bfea5d25ea17 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00d\03\00\00\16\00\00\00" }>, align 8
@alloc_62156c0655ba3dfe9e59825cf1896fe6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00 \01\00\00\0B\00\00\00" }>, align 8
@alloc_c950ac94360d86a24f4c94a7f995d246 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00!\01\00\00\18\00\00\00" }>, align 8
@alloc_9695292c9e3d363dcb39d420417d0ed9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\01\01\00\00\1D\00\00\00" }>, align 8
@alloc_d56365db6fc6463a3f048442ce997084 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\07\01\00\00\10\00\00\00" }>, align 8
@alloc_29f798d3bcc8a1bcf3a658926d5d1015 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00#\00\00\00" }>, align 8
@alloc_e5ead88f19d7037ba4d310b798190b71 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\000\00\00\00" }>, align 8
@alloc_61c99759d62a52158842d07700bdf5ed = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00.\00\00\00" }>, align 8
@alloc_9103f795df2240632e392140ce5ff239 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00\11\00\00\00" }>, align 8
@alloc_7f64380e599a5318b5f09bce5df2784a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00\1A\00\00\00" }>, align 8
@alloc_c545692b757105133b1ebc79f22e2b7b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00$\00\00\00" }>, align 8
@alloc_df57f38b46cc30b70ba2c28fa7c20fd3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\14\01\00\00\0F\00\00\00" }>, align 8
@alloc_11e6a3552569b12175281f6a4eb60483 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\006\02\00\00\0B\00\00\00" }>, align 8
@alloc_26492f2376e6789c223f4c1994b58a74 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\007\02\00\00\1C\00\00\00" }>, align 8
@alloc_c7092da788685af654b1a9fdfd45efe3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\008\02\00\00\1A\00\00\00" }>, align 8
@alloc_2ea9cf29d18d0ed4d381d69765922321 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00M\02\00\00\11\00\00\00" }>, align 8
@alloc_77392cac3d065b6e63120432bd0620c3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00Q\02\00\005\00\00\00" }>, align 8
@alloc_724b3d93e818c27723f221185131a7a4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00R\02\00\00\11\00\00\00" }>, align 8
@alloc_fb364d725dbd0599b56f2e14753ffd88 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00'\00\00\00" }>, align 8
@alloc_f3172065760924cbf2c2be5e51e973b6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00\0A\00\00\00" }>, align 8
@alloc_2a04d551a07d88c747401d2ba7079f20 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00^\02\00\00\07\00\00\00" }>, align 8
@alloc_32def85e6ae301694e28023444cdd9f0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_292625bd0a9bd31655ec47c129e6b2e1, [16 x i8] c"n\00\00\00\00\00\00\00\7F\03\00\00\11\00\00\00" }>, align 8
@alloc_fd1fbb272cd847786704851d0bc9a531 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the index is within the slice" }>, align 1
@alloc_c4e023b9b72449501cb5bdd13a3bb6f4 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs" }>, align 1
@alloc_ec7e927c44e6f6ba8ba764905d928993 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c4e023b9b72449501cb5bdd13a3bb6f4, [16 x i8] c"n\00\00\00\00\00\00\00\81\00\00\00\01\00\00\00" }>, align 8
@alloc_e355651d1880c5ee1b41d330bdb74e70 = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"too many memory regions in memory map" }>, align 1
@alloc_9b9c368459ebe4fe07c6c521f6ab02b2 = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs" }>, align 1
@alloc_5d5a1267c4f890a564bd718157fe3536 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00\1C\00\00\00\09\00\00\00" }>, align 8
@alloc_92280f9f2a88ce1b84d8985d89998ab8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00 \00\00\00\09\00\00\00" }>, align 8
@alloc_c92ccd97009dfd12af282b075b265066 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00!\00\00\00\09\00\00\00" }>, align 8
@alloc_9d317c40d2249666f5c687230a67e458 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc_4f8245751742bc2efa1e741a6b1c1882 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00H\00\00\00\0A\00\00\00" }>, align 8
@alloc_b91e56a1c9f0252aa388be399f86d205 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00O\00\00\00\0E\00\00\00" }>, align 8
@alloc_4493035a7c972a9a1372d6ddbae1c967 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00\85\00\00\00\19\00\00\00" }>, align 8
@alloc_14d10cc8fb5e9e5650e78fc64dc8fe00 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00\88\00\00\00\1F\00\00\00" }>, align 8
@alloc_f1caba4c88c0e95c17f4840283d2be4f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00\93\00\00\00\09\00\00\00" }>, align 8
@alloc_9f9beccd708440a41289b2e3a74bbd4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00\98\00\00\00\09\00\00\00" }>, align 8
@alloc_1cb3e44e943ac9883a252efc02cbdd96 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"FrameRange(" }>, align 1
@alloc_0541a259e03eee25ce07b327ecef15b3 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".." }>, align 1
@alloc_bacb0500a8e518371fd52ddb8e3ff6e7 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc_52eab4ed1d8dfae9ee9b8459a77a80d1 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_1cb3e44e943ac9883a252efc02cbdd96, [8 x i8] c"\0B\00\00\00\00\00\00\00", ptr @alloc_0541a259e03eee25ce07b327ecef15b3, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_bacb0500a8e518371fd52ddb8e3ff6e7, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_f4c72dfea9050c35e193bcbb037eeec0 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"invalid region type " }>, align 1
@alloc_c94b4fb4cdf35e275d5134e5fead1d29 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_f4c72dfea9050c35e193bcbb037eeec0, [8 x i8] c"\14\00\00\00\00\00\00\00" }>, align 8
@alloc_1349b728df1eb2f6859ac0a782f2ae74 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00\E1\00\00\00\12\00\00\00" }>, align 8
@alloc_ed9c9ba9e63d1de34dcec58a215ecdf1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9b9c368459ebe4fe07c6c521f6ab02b2, [16 x i8] c"l\00\00\00\00\00\00\00\E4\00\00\007\00\00\00" }>, align 8
@alloc_123635884473960dd56c86dc3790206d = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"MemoryRegion" }>, align 1
@alloc_34a481c507d4186bf7fae10d1bd79e92 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"range" }>, align 1
@vtable.7 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17hce373ee1c77dbe72E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h1a0754a1757e464cE" }>, align 8, !dbg !44
@alloc_d364441870b2b0649252b7ed86076f49 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"region_type" }>, align 1
@vtable.8 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h0731c1b23d198b15E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17heb471c0ce559efb1E" }>, align 8, !dbg !52
@alloc_d01d8fd7d9f5acb46596f8741940b1b9 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"NonExhaustive" }>, align 1
@alloc_9123534cf01caf4ddcc5f12a5f42e81d = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Package" }>, align 1
@alloc_58b15b18bd6fcbfbd0f539fc6ec70124 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"BootInfo" }>, align 1
@alloc_e005ee52f1412cdac050eeb3921fb7d1 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc_2776b0f4e67dd6ab609c8d161360a094 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"FrameZero" }>, align 1
@alloc_39295ce556b75ac6615c30f2deeb1d2c = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"Bootloader" }>, align 1
@alloc_5744b9b389bf03570071c2a8bf290e86 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"PageTable" }>, align 1
@alloc_0ef3b2f3b5e1f4c59937efee203e67e6 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"KernelStack" }>, align 1
@alloc_b4e8b8132b145931e9c7cf99d0317720 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Kernel" }>, align 1
@alloc_62ad37c25d6c0d46d197c76bab97f2f0 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"BadMemory" }>, align 1
@alloc_d897479b1372b34dee38d40b47b11c3f = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"AcpiNvs" }>, align 1
@alloc_70aaad55d371cf47a32d7972d7912351 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"AcpiReclaimable" }>, align 1
@alloc_9d0f7c0bcb6a78befd604d29ca4a2b9f = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Reserved" }>, align 1
@alloc_22019b3552d9fb1e3b84ed56eb2f3479 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"InUse" }>, align 1
@alloc_4a5787c94a5c6515544ea35b2874fefd = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Usable" }>, align 1
@alloc_fb51405d34b8cc7d74fd21ec999b3e3d = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"E820MemoryRegion" }>, align 1
@alloc_ebb3df5f4741a025241fddaef9755b83 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"start_addr" }>, align 1
@vtable.9 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17h6643c1c775e19fdfE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17ha8fd9c1831acb9abE" }>, align 8, !dbg !61
@alloc_396422043b272b6d52da89994a8da1bb = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"len" }>, align 1
@vtable.a = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17hb64f971d62858e48E", [16 x i8] c"\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hd1a51dee9cb224e7E" }>, align 8, !dbg !69
@alloc_290ba06092756bdd4500dba77c3cdc12 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"acpi_extended_attributes" }>, align 1
@vtable.b = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h97a2ac158cd47a91E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa9bc72092dee9e5E" }>, align 8, !dbg !77
@alloc_4e7412d5135123aff0c04211b5f288c9 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"memory_map" }>, align 1
@vtable.c = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17hac2f11c42cfb9a1cE", [16 x i8] c"\08\06\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bf80f3c8611fa19E" }>, align 8, !dbg !86
@alloc_8e0160ca79ce24ca073e8195c871164d = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"tls_template" }>, align 1
@vtable.d = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17h2f18dfc4aaadc409E", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h307bd47cff9c813bE" }>, align 8, !dbg !101
@alloc_c4e2ddd20c7a57f3c902942349194736 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"_non_exhaustive" }>, align 1
@vtable.e = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17hf05a55e5c9f1e909E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0b01fcf4ae544763E" }>, align 8, !dbg !114
@alloc_710d4329c6a9724cfbbd833b9a1b522f = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"TlsTemplate" }>, align 1
@alloc_d31be6207f88be80e372545306b67a74 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"file_size" }>, align 1
@alloc_b1d61471588d53fb5df97d58cc5ea8cf = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"mem_size" }>, align 1
@vtable.f = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h8148cd13a86f44f7E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7546b29596b3cbcaE" }>, align 8, !dbg !124

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h01361d41522453d9E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !163 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %new_len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_5 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !184, metadata !DIExpression()), !dbg !192
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !185, metadata !DIExpression()), !dbg !193
  call void @llvm.dbg.declare(metadata ptr %this, metadata !186, metadata !DIExpression()), !dbg !194
  store i64 %self.0, ptr %this, align 8, !dbg !195
  %6 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !195
  store i64 %self.1, ptr %6, align 8, !dbg !195
  %7 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !196
  %8 = load i64, ptr %7, align 8, !dbg !196, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !196
  %10 = load i64, ptr %9, align 8, !dbg !196, !noundef !24
  %11 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !196
  store i64 %8, ptr %11, align 8, !dbg !196
  %12 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !196
  store i64 %10, ptr %12, align 8, !dbg !196
  %13 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !196
  %14 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 0, !dbg !196
  store ptr %slice.0, ptr %14, align 8, !dbg !196
  %15 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 1, !dbg !196
  store i64 %slice.1, ptr %15, align 8, !dbg !196
  %16 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !196
  %17 = load i64, ptr %16, align 8, !dbg !196, !noundef !24
  %18 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !196
  %19 = load i64, ptr %18, align 8, !dbg !196, !noundef !24
  %20 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !196
  %21 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 0, !dbg !196
  %22 = load ptr, ptr %21, align 8, !dbg !196, !noundef !24
  %23 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 1, !dbg !196
  %24 = load i64, ptr %23, align 8, !dbg !196, !noundef !24
  store i64 %17, ptr %this.dbg.spill.i, align 8
  %25 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %19, ptr %25, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !197, metadata !DIExpression()), !dbg !205
  store ptr %22, ptr %slice.dbg.spill.i, align 8
  %26 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %24, ptr %26, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !204, metadata !DIExpression()), !dbg !205
  %_5.i = icmp uge i64 %19, %17, !dbg !207
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !207

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !207
  br label %bb3.i, !dbg !207

bb2.i:                                            ; preds = %start
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h7b445c194d2af29dE"(ptr %22, i64 %24) #10, !dbg !209
  %_8.i = icmp ule i64 %19, %_10.i, !dbg !210
  %27 = zext i1 %_8.i to i8, !dbg !207
  store i8 %27, ptr %_4.i, align 1, !dbg !207
  br label %bb3.i, !dbg !207

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %28 = load i8, ptr %_4.i, align 1, !dbg !211, !range !212, !noundef !24
  %29 = trunc i8 %28 to i1, !dbg !211
  %_3.i = xor i1 %29, true, !dbg !211
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h2ec63823b488252cE.exit", !dbg !211

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_7448c69d27aefedfd00f223051fa5351, i64 97) #11, !dbg !213
  unreachable, !dbg !213

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h2ec63823b488252cE.exit": ; preds = %bb3.i
  %30 = sub nuw i64 %self.1, %self.0, !dbg !214
  store i64 %30, ptr %1, align 8, !dbg !214
  %new_len = load i64, ptr %1, align 8, !dbg !214, !noundef !24
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !214
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !188, metadata !DIExpression()), !dbg !215
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_10 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1ecfccdfa8a3dcf6E"(ptr %slice.0, i64 %slice.1) #10, !dbg !216
  store ptr %_10, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !217, metadata !DIExpression()), !dbg !228
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !227, metadata !DIExpression()), !dbg !230
  store ptr %_10, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !231, metadata !DIExpression()), !dbg !238
  store i64 %self.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !237, metadata !DIExpression()), !dbg !240
  %31 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_10, i64 %self.0, !dbg !241
  store ptr %31, ptr %0, align 8, !dbg !241
  %32 = load ptr, ptr %0, align 8, !dbg !241, !noundef !24
; call core::ptr::slice_from_raw_parts
  %33 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h505c31c93c0fff88E(ptr %32, i64 %new_len) #10, !dbg !242
  %34 = extractvalue { ptr, i64 } %33, 0, !dbg !242
  %35 = extractvalue { ptr, i64 } %33, 1, !dbg !242
  %36 = insertvalue { ptr, i64 } undef, ptr %34, 0, !dbg !243
  %37 = insertvalue { ptr, i64 } %36, i64 %35, 1, !dbg !243
  ret { ptr, i64 } %37, !dbg !243
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h202392f75bbf82dcE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !244 {
start:
  %self.dbg.spill.i5 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i4 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %new_len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_5 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !252, metadata !DIExpression()), !dbg !258
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !253, metadata !DIExpression()), !dbg !259
  call void @llvm.dbg.declare(metadata ptr %this, metadata !254, metadata !DIExpression()), !dbg !260
  store i64 %self.0, ptr %this, align 8, !dbg !261
  %6 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !261
  store i64 %self.1, ptr %6, align 8, !dbg !261
  %7 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !262
  %8 = load i64, ptr %7, align 8, !dbg !262, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !262
  %10 = load i64, ptr %9, align 8, !dbg !262, !noundef !24
  %11 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !262
  store i64 %8, ptr %11, align 8, !dbg !262
  %12 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !262
  store i64 %10, ptr %12, align 8, !dbg !262
  %13 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !262
  %14 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 0, !dbg !262
  store ptr %slice.0, ptr %14, align 8, !dbg !262
  %15 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 1, !dbg !262
  store i64 %slice.1, ptr %15, align 8, !dbg !262
  %16 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !262
  %17 = load i64, ptr %16, align 8, !dbg !262, !noundef !24
  %18 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !262
  %19 = load i64, ptr %18, align 8, !dbg !262, !noundef !24
  %20 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !262
  %21 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 0, !dbg !262
  %22 = load ptr, ptr %21, align 8, !dbg !262, !noundef !24
  %23 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 1, !dbg !262
  %24 = load i64, ptr %23, align 8, !dbg !262, !noundef !24
  store i64 %17, ptr %this.dbg.spill.i, align 8
  %25 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %19, ptr %25, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !263, metadata !DIExpression()), !dbg !270
  store ptr %22, ptr %slice.dbg.spill.i, align 8
  %26 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %24, ptr %26, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !269, metadata !DIExpression()), !dbg !270
  %_5.i = icmp uge i64 %19, %17, !dbg !272
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !272

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !272
  br label %bb3.i, !dbg !272

bb2.i:                                            ; preds = %start
  store ptr %22, ptr %self.dbg.spill.i5, align 8
  %27 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i5, i32 0, i32 1
  store i64 %24, ptr %27, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !274, metadata !DIExpression()), !dbg !282
; call core::ptr::metadata::metadata
  %28 = call i64 @_ZN4core3ptr8metadata8metadata17hc1aa6460a717ef3dE(ptr %22, i64 %24) #10, !dbg !284
  %_8.i = icmp ule i64 %19, %28, !dbg !285
  %29 = zext i1 %_8.i to i8, !dbg !272
  store i8 %29, ptr %_4.i, align 1, !dbg !272
  br label %bb3.i, !dbg !272

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %30 = load i8, ptr %_4.i, align 1, !dbg !286, !range !212, !noundef !24
  %31 = trunc i8 %30 to i1, !dbg !286
  %_3.i = xor i1 %31, true, !dbg !286
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17hd00ddf68feedb094E.exit", !dbg !286

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_8161f293b9b66c8ac0a60d9d6c8f8635, i64 101) #11, !dbg !287
  unreachable, !dbg !287

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17hd00ddf68feedb094E.exit": ; preds = %bb3.i
  %32 = sub nuw i64 %self.1, %self.0, !dbg !288
  store i64 %32, ptr %1, align 8, !dbg !288
  %new_len = load i64, ptr %1, align 8, !dbg !288, !noundef !24
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !288
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !256, metadata !DIExpression()), !dbg !289
  store ptr %slice.0, ptr %self.dbg.spill.i4, align 8
  %33 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i4, i32 0, i32 1
  store i64 %slice.1, ptr %33, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !290, metadata !DIExpression()), !dbg !296
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !298, metadata !DIExpression()), !dbg !305
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !304, metadata !DIExpression()), !dbg !307
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !308, metadata !DIExpression()), !dbg !314
  store i64 %self.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !313, metadata !DIExpression()), !dbg !316
  %34 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %self.0, !dbg !317
  store ptr %34, ptr %0, align 8, !dbg !317
  %_3.i3 = load ptr, ptr %0, align 8, !dbg !317, !noundef !24
; call core::ptr::slice_from_raw_parts_mut
  %35 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h94970a4bfa2c5a79E(ptr %_3.i3, i64 %new_len) #10, !dbg !318
  %36 = extractvalue { ptr, i64 } %35, 0, !dbg !318
  %37 = extractvalue { ptr, i64 } %35, 1, !dbg !318
  %38 = insertvalue { ptr, i64 } undef, ptr %36, 0, !dbg !319
  %39 = insertvalue { ptr, i64 } %38, i64 %37, 1, !dbg !319
  ret { ptr, i64 } %39, !dbg !319
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h406a63f4bfd5143aE"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !320 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !341, metadata !DIExpression()), !dbg !343
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !342, metadata !DIExpression()), !dbg !344
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !345
  br i1 %_3, label %bb1, label %bb2, !dbg !345

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !346
  br i1 %_9, label %bb3, label %bb4, !dbg !346

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h8c73cb10d9ab3329E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !347
  unreachable, !dbg !347

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h01361d41522453d9E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !348
  %_15.0 = extractvalue { ptr, i64 } %5, 0, !dbg !348
  %_15.1 = extractvalue { ptr, i64 } %5, 1, !dbg !348
  %6 = insertvalue { ptr, i64 } undef, ptr %_15.0, 0, !dbg !349
  %7 = insertvalue { ptr, i64 } %6, i64 %_15.1, 1, !dbg !349
  ret { ptr, i64 } %7, !dbg !349

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h1cd0176f9202aacaE(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !350
  unreachable, !dbg !350
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h1b9025a7c2eacdb7E"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !351 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !359, metadata !DIExpression()), !dbg !361
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !360, metadata !DIExpression()), !dbg !362
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !363
  br i1 %_3, label %bb1, label %bb2, !dbg !363

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !364
  br i1 %_9, label %bb3, label %bb4, !dbg !364

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h8c73cb10d9ab3329E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !365
  unreachable, !dbg !365

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h202392f75bbf82dcE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !366
  %_17.0 = extractvalue { ptr, i64 } %5, 0, !dbg !366
  %_17.1 = extractvalue { ptr, i64 } %5, 1, !dbg !366
  %6 = insertvalue { ptr, i64 } undef, ptr %_17.0, 0, !dbg !367
  %7 = insertvalue { ptr, i64 } %6, i64 %_17.1, 1, !dbg !367
  ret { ptr, i64 } %7, !dbg !367

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h1cd0176f9202aacaE(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !368
  unreachable, !dbg !368
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h18893aedccd47536E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !369 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !377, metadata !DIExpression()), !dbg !379
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !378, metadata !DIExpression()), !dbg !380
  store i64 0, ptr %_4, align 8, !dbg !381
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !381
  store i64 %self, ptr %3, align 8, !dbg !381
  %4 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !381
  %5 = load i64, ptr %4, align 8, !dbg !381, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !381
  %7 = load i64, ptr %6, align 8, !dbg !381, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h1b9025a7c2eacdb7E"(i64 %5, i64 %7, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !381
  %_3.0 = extractvalue { ptr, i64 } %8, 0, !dbg !381
  %_3.1 = extractvalue { ptr, i64 } %8, 1, !dbg !381
  %9 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !382
  %10 = insertvalue { ptr, i64 } %9, i64 %_3.1, 1, !dbg !382
  ret { ptr, i64 } %10, !dbg !382
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h61dddd128cad722aE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !383 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !391, metadata !DIExpression()), !dbg !393
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !392, metadata !DIExpression()), !dbg !394
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !274, metadata !DIExpression()), !dbg !395
; call core::ptr::metadata::metadata
  %3 = call i64 @_ZN4core3ptr8metadata8metadata17hc1aa6460a717ef3dE(ptr %slice.0, i64 %slice.1) #10, !dbg !397
  store i64 %self, ptr %_3, align 8, !dbg !398
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !398
  store i64 %3, ptr %4, align 8, !dbg !398
  %5 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !398
  %6 = load i64, ptr %5, align 8, !dbg !398, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !398
  %8 = load i64, ptr %7, align 8, !dbg !398, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %9 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h202392f75bbf82dcE"(i64 %6, i64 %8, ptr %slice.0, i64 %slice.1) #10, !dbg !398
  %10 = extractvalue { ptr, i64 } %9, 0, !dbg !398
  %11 = extractvalue { ptr, i64 } %9, 1, !dbg !398
  %12 = insertvalue { ptr, i64 } undef, ptr %10, 0, !dbg !399
  %13 = insertvalue { ptr, i64 } %12, i64 %11, 1, !dbg !399
  ret { ptr, i64 } %13, !dbg !399
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc9f1df66d2642dbcE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !400 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !404, metadata !DIExpression()), !dbg !406
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !405, metadata !DIExpression()), !dbg !407
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !408
  br i1 %_3, label %bb1, label %bb2, !dbg !408

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h61dddd128cad722aE"(i64 %self, ptr %slice.0, i64 %slice.1) #10, !dbg !409
  %_11.0 = extractvalue { ptr, i64 } %3, 0, !dbg !409
  %_11.1 = extractvalue { ptr, i64 } %3, 1, !dbg !409
  %4 = insertvalue { ptr, i64 } undef, ptr %_11.0, 0, !dbg !410
  %5 = insertvalue { ptr, i64 } %4, i64 %_11.1, 1, !dbg !410
  ret { ptr, i64 } %5, !dbg !410

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h66b464fe7fd2e86bE(i64 %self, i64 %slice.1, ptr align 8 %0) #11, !dbg !411
  unreachable, !dbg !411
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4e9f4e6aca761bfaE"(ptr %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !412 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8, !dbg !425
  call void @llvm.dbg.declare(metadata ptr %self, metadata !423, metadata !DIExpression()), !dbg !425
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !424, metadata !DIExpression()), !dbg !426
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h08e5199ee7586c45E"(ptr align 8 %self) #10, !dbg !427
  %_4 = load i64, ptr %_5, align 8, !dbg !428, !noundef !24
  %_3 = icmp eq i64 %_4, -1, !dbg !428
  br i1 %_3, label %bb2, label %bb3, !dbg !428

bb3:                                              ; preds = %start
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %3 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17ha9edf494796602f0E"(ptr %self) #10, !dbg !429
  %_9.0 = extractvalue { i64, i64 } %3, 0, !dbg !429
  %_9.1 = extractvalue { i64, i64 } %3, 1, !dbg !429
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h1b9025a7c2eacdb7E"(i64 %_9.0, i64 %_9.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !429
  %_8.0 = extractvalue { ptr, i64 } %4, 0, !dbg !429
  %_8.1 = extractvalue { ptr, i64 } %4, 1, !dbg !429
  %5 = insertvalue { ptr, i64 } undef, ptr %_8.0, 0, !dbg !430
  %6 = insertvalue { ptr, i64 } %5, i64 %_8.1, 1, !dbg !430
  ret { ptr, i64 } %6, !dbg !430

bb2:                                              ; preds = %start
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17h17280eb0c6479a4dE(ptr align 8 %0) #11, !dbg !431
  unreachable, !dbg !431
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9a90a00cb3549364E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !432 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !440, metadata !DIExpression()), !dbg !442
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !441, metadata !DIExpression()), !dbg !443
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h51c20fb50a32a054E"(ptr sret(%"core::ops::range::RangeInclusive<usize>") %_4, i64 0, i64 %self) #10, !dbg !444
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4e9f4e6aca761bfaE"(ptr %_4, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !444
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !444
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !444
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !445
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !445
  ret { ptr, i64 } %5, !dbg !445
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1484d596ca396b6fE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !446 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !505, metadata !DIExpression()), !dbg !507
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !506, metadata !DIExpression()), !dbg !508
  %_3 = load ptr, ptr %self, align 8, !dbg !509, !nonnull !24, !align !510, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17he935b9fdaa8df5aeE"(ptr align 8 %_3, ptr align 8 %f) #10, !dbg !511
  ret i1 %0, !dbg !512
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17heb471c0ce559efb1E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !513 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !518, metadata !DIExpression()), !dbg !522
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !519, metadata !DIExpression()), !dbg !523
  %_3 = load ptr, ptr %self, align 8, !dbg !524, !nonnull !24, !align !525, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h7131edcbab57409bE"(ptr align 4 %_3, ptr align 8 %f) #10, !dbg !526
  ret i1 %0, !dbg !527
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h5c56d261f36d6e12E(ptr %src, ptr %dst, i64 %count) unnamed_addr #1 !dbg !528 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %diff = alloca i64, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !533, metadata !DIExpression()), !dbg !544
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !534, metadata !DIExpression()), !dbg !545
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !535, metadata !DIExpression()), !dbg !546
  call void @llvm.dbg.declare(metadata ptr %diff, metadata !542, metadata !DIExpression()), !dbg !547
  store ptr %src, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !548, metadata !DIExpression()), !dbg !553
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !555, metadata !DIExpression()), !dbg !562
  store ptr %src, ptr %0, align 8, !dbg !564
  %2 = load i64, ptr %0, align 8, !dbg !564, !noundef !24
  store i64 %2, ptr %src_usize.dbg.spill, align 8, !dbg !565
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !536, metadata !DIExpression()), !dbg !566
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !548, metadata !DIExpression()), !dbg !567
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !555, metadata !DIExpression()), !dbg !569
  store ptr %dst, ptr %1, align 8, !dbg !571
  %3 = load i64, ptr %1, align 8, !dbg !571, !noundef !24
  store i64 %3, ptr %dst_usize.dbg.spill, align 8, !dbg !572
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !538, metadata !DIExpression()), !dbg !573
; call core::num::<impl usize>::checked_mul
  %4 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h2fa8b69b5dab9e4eE"(i64 24, i64 %count) #10, !dbg !574
  %_7.0 = extractvalue { i64, i64 } %4, 0, !dbg !574
  %_7.1 = extractvalue { i64, i64 } %4, 1, !dbg !574
; call core::option::Option<T>::unwrap
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hcc01091c1f437e02E"(i64 %_7.0, i64 %_7.1, ptr align 8 @alloc_67d3192705742f4066a9d8236c8d1e20) #10, !dbg !574
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !574
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !540, metadata !DIExpression()), !dbg !575
  %_10 = icmp ugt i64 %2, %3, !dbg !576
  br i1 %_10, label %bb6, label %bb8, !dbg !576

bb8:                                              ; preds = %start
  %_18.0 = sub i64 %3, %2, !dbg !577
  %_18.1 = icmp ult i64 %3, %2, !dbg !577
  %5 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !577
  br i1 %5, label %panic1, label %bb9, !dbg !577

bb6:                                              ; preds = %start
  %_15.0 = sub i64 %2, %3, !dbg !578
  %_15.1 = icmp ult i64 %2, %3, !dbg !578
  %6 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !578
  br i1 %6, label %panic, label %bb7, !dbg !578

bb7:                                              ; preds = %bb6
  store i64 %_15.0, ptr %diff, align 8, !dbg !578
  br label %bb10, !dbg !579

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_8d7ed0f3ba7c7c3b3db6b6a96e967124) #11, !dbg !578
  unreachable, !dbg !578

bb10:                                             ; preds = %bb9, %bb7
  %_19 = load i64, ptr %diff, align 8, !dbg !580, !noundef !24
  %7 = icmp uge i64 %_19, %size, !dbg !580
  ret i1 %7, !dbg !581

bb9:                                              ; preds = %bb8
  store i64 %_18.0, ptr %diff, align 8, !dbg !577
  br label %bb10, !dbg !579

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_af0d195999a93dfccb20ccef2dcacd2f) #11, !dbg !577
  unreachable, !dbg !577
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !582 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !586, metadata !DIExpression()), !dbg !589
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !587, metadata !DIExpression()), !dbg !590
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !588, metadata !DIExpression()), !dbg !591
  store ptr %src, ptr %_5, align 8, !dbg !592
  %0 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !592
  store ptr %dst, ptr %0, align 8, !dbg !592
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !592
  store i64 %count, ptr %1, align 8, !dbg !592
  %2 = load ptr, ptr %_5, align 8, !dbg !592, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !592
  %4 = load ptr, ptr %3, align 8, !dbg !592, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !592
  %6 = load i64, ptr %5, align 8, !dbg !592, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !593, metadata !DIExpression()), !dbg !599
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !597, metadata !DIExpression()), !dbg !599
  store i64 %6, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !598, metadata !DIExpression()), !dbg !599
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %2) #10, !dbg !601
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !601

bb4.i:                                            ; preds = %start
  store i8 0, ptr %_6.i, align 1, !dbg !601
  br label %bb6.i, !dbg !601

bb5.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %4) #10, !dbg !602
  %7 = zext i1 %_8.i to i8, !dbg !601
  store i8 %7, ptr %_6.i, align 1, !dbg !601
  br label %bb6.i, !dbg !601

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %8 = load i8, ptr %_6.i, align 1, !dbg !601, !range !212, !noundef !24
  %9 = trunc i8 %8 to i1, !dbg !601
  br i1 %9, label %bb2.i, label %bb1.i, !dbg !601

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !601
  br label %bb3.i, !dbg !601

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h5c56d261f36d6e12E(ptr %2, ptr %4, i64 %6) #10, !dbg !603
  %10 = zext i1 %_10.i to i8, !dbg !601
  store i8 %10, ptr %_5.i, align 1, !dbg !601
  br label %bb3.i, !dbg !601

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %11 = load i8, ptr %_5.i, align 1, !dbg !604, !range !212, !noundef !24
  %12 = trunc i8 %11 to i1, !dbg !604
  %_4.i = xor i1 %12, true, !dbg !604
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h20abb14ad7aa314fE.exit, !dbg !604

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_b56be81cf5a058d5588216c6f79d2aee, i64 166) #11, !dbg !605
  unreachable, !dbg !605

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h20abb14ad7aa314fE.exit: ; preds = %bb3.i
  %13 = mul i64 %count, 24, !dbg !606
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %13, i1 false), !dbg !606
  ret void, !dbg !607
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17h520356a0fc1741dcE(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !608 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !614, metadata !DIExpression()), !dbg !617
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !615, metadata !DIExpression()), !dbg !618
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !616, metadata !DIExpression()), !dbg !619
  store ptr %src, ptr %_5, align 8, !dbg !620
  %0 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !620
  store ptr %dst, ptr %0, align 8, !dbg !620
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !620
  store i64 %count, ptr %1, align 8, !dbg !620
  %2 = load ptr, ptr %_5, align 8, !dbg !620, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !620
  %4 = load ptr, ptr %3, align 8, !dbg !620, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !620
  %6 = load i64, ptr %5, align 8, !dbg !620, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !621, metadata !DIExpression()), !dbg !626
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !624, metadata !DIExpression()), !dbg !626
  store i64 %6, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !625, metadata !DIExpression()), !dbg !626
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hde45d076821fe406E(ptr %2) #10, !dbg !628
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !628

bb4.i:                                            ; preds = %start
  store i8 0, ptr %_6.i, align 1, !dbg !628
  br label %bb6.i, !dbg !628

bb5.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hde45d076821fe406E(ptr %4) #10, !dbg !629
  %7 = zext i1 %_8.i to i8, !dbg !628
  store i8 %7, ptr %_6.i, align 1, !dbg !628
  br label %bb6.i, !dbg !628

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %8 = load i8, ptr %_6.i, align 1, !dbg !628, !range !212, !noundef !24
  %9 = trunc i8 %8 to i1, !dbg !628
  br i1 %9, label %bb2.i, label %bb1.i, !dbg !628

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !628
  br label %bb3.i, !dbg !628

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h5627a920b01761f6E(ptr %2, ptr %4, i64 %6) #10, !dbg !630
  %10 = zext i1 %_10.i to i8, !dbg !628
  store i8 %10, ptr %_5.i, align 1, !dbg !628
  br label %bb3.i, !dbg !628

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %11 = load i8, ptr %_5.i, align 1, !dbg !631, !range !212, !noundef !24
  %12 = trunc i8 %11 to i1, !dbg !631
  %_4.i = xor i1 %12, true, !dbg !631
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hb7bcf291927b3151E.exit, !dbg !631

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_b56be81cf5a058d5588216c6f79d2aee, i64 166) #11, !dbg !632
  unreachable, !dbg !632

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hb7bcf291927b3151E.exit: ; preds = %bb3.i
  %13 = mul i64 %count, 8, !dbg !633
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %13, i1 false), !dbg !633
  ret void, !dbg !634
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %ptr) unnamed_addr #1 !dbg !635 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !639, metadata !DIExpression()), !dbg !640
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4aa6254734848f2bE"(ptr %ptr) #10, !dbg !641
  %_2 = xor i1 %_3, true, !dbg !642
  br i1 %_2, label %bb2, label %bb1, !dbg !642

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !642
  br label %bb3, !dbg !642

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hd973fd8ab7949705E"(ptr %ptr) #10, !dbg !643
  %1 = zext i1 %_4 to i8, !dbg !642
  store i8 %1, ptr %0, align 1, !dbg !642
  br label %bb3, !dbg !642

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !644, !range !212, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !644
  ret i1 %3, !dbg !644
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h77b7d0c96435260eE(ptr %ptr) unnamed_addr #1 !dbg !645 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !660, metadata !DIExpression()), !dbg !663
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h137bc6af344c2718E"(ptr %ptr) #10, !dbg !664
  %_2 = xor i1 %_3, true, !dbg !665
  br i1 %_2, label %bb2, label %bb1, !dbg !665

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !665
  br label %bb3, !dbg !665

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h7c5dcdc1c1ed93efE"(ptr %ptr) #10, !dbg !666
  %1 = zext i1 %_4 to i8, !dbg !665
  store i8 %1, ptr %0, align 1, !dbg !665
  br label %bb3, !dbg !665

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !667, !range !212, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !667
  ret i1 %3, !dbg !667
}

; core::intrinsics::is_valid_allocation_size
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hb365c4273ba2c3adE(i64 %len) unnamed_addr #1 !dbg !668 {
start:
  %max_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !672, metadata !DIExpression()), !dbg !675
  store i64 384307168202282325, ptr %max_len.dbg.spill, align 8, !dbg !676
  call void @llvm.dbg.declare(metadata ptr %max_len.dbg.spill, metadata !673, metadata !DIExpression()), !dbg !677
  %0 = icmp ule i64 %len, 384307168202282325, !dbg !678
  ret i1 %0, !dbg !679
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17h05891d76475b3d26E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !680 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !682, metadata !DIExpression()), !dbg !685
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !683, metadata !DIExpression()), !dbg !686
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !684, metadata !DIExpression()), !dbg !687
  store ptr %src, ptr %_5, align 8, !dbg !688
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !688
  store ptr %dst, ptr %0, align 8, !dbg !688
  %1 = load ptr, ptr %_5, align 8, !dbg !688, !noundef !24
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !688
  %3 = load ptr, ptr %2, align 8, !dbg !688, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !689, metadata !DIExpression()), !dbg !696
  store ptr %3, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !695, metadata !DIExpression()), !dbg !696
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hde45d076821fe406E(ptr %1) #10, !dbg !698
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !698

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !698
  br label %bb3.i, !dbg !698

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hde45d076821fe406E(ptr %3) #10, !dbg !699
  %4 = zext i1 %_6.i to i8, !dbg !698
  store i8 %4, ptr %_4.i, align 1, !dbg !698
  br label %bb3.i, !dbg !698

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !700, !range !212, !noundef !24
  %6 = trunc i8 %5 to i1, !dbg !700
  %_3.i = xor i1 %6, true, !dbg !700
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17h939af37eba549770E.exit, !dbg !700

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_a1d063fc56d08794b1bf303ec0d8a16b, i64 112) #11, !dbg !701
  unreachable, !dbg !701

_ZN4core10intrinsics4copy7runtime17h939af37eba549770E.exit: ; preds = %bb3.i
  %7 = mul i64 8, %count, !dbg !702
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %7, i1 false), !dbg !702
  ret void, !dbg !703
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17h461b3c2ec587c164E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !704 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !706, metadata !DIExpression()), !dbg !709
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !707, metadata !DIExpression()), !dbg !710
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !708, metadata !DIExpression()), !dbg !711
  store ptr %src, ptr %_5, align 8, !dbg !712
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !712
  store ptr %dst, ptr %0, align 8, !dbg !712
  %1 = load ptr, ptr %_5, align 8, !dbg !712, !noundef !24
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !712
  %3 = load ptr, ptr %2, align 8, !dbg !712, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !713, metadata !DIExpression()), !dbg !719
  store ptr %3, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !718, metadata !DIExpression()), !dbg !719
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %1) #10, !dbg !721
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !721

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !721
  br label %bb3.i, !dbg !721

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %3) #10, !dbg !722
  %4 = zext i1 %_6.i to i8, !dbg !721
  store i8 %4, ptr %_4.i, align 1, !dbg !721
  br label %bb3.i, !dbg !721

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !723, !range !212, !noundef !24
  %6 = trunc i8 %5 to i1, !dbg !723
  %_3.i = xor i1 %6, true, !dbg !723
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17h75fbe6a23b22e187E.exit, !dbg !723

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_a1d063fc56d08794b1bf303ec0d8a16b, i64 112) #11, !dbg !724
  unreachable, !dbg !724

_ZN4core10intrinsics4copy7runtime17h75fbe6a23b22e187E.exit: ; preds = %bb3.i
  %7 = mul i64 24, %count, !dbg !725
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %7, i1 false), !dbg !725
  ret void, !dbg !726
}

; core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h17b0a92ea52cea06E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !727 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !734, metadata !DIExpression()), !dbg !736
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !735, metadata !DIExpression()), !dbg !737
  %_4 = load i64, ptr %self, align 8, !dbg !738, !noundef !24
  %_5 = load i64, ptr %other, align 8, !dbg !739, !noundef !24
  %_3 = icmp ult i64 %_4, %_5, !dbg !738
  br i1 %_3, label %bb1, label %bb2, !dbg !738

bb2:                                              ; preds = %start
  %_7 = load i64, ptr %self, align 8, !dbg !740, !noundef !24
  %_8 = load i64, ptr %other, align 8, !dbg !741, !noundef !24
  %_6 = icmp eq i64 %_7, %_8, !dbg !740
  br i1 %_6, label %bb3, label %bb4, !dbg !740

bb1:                                              ; preds = %start
  store i8 -1, ptr %0, align 1, !dbg !742
  br label %bb5, !dbg !743

bb5:                                              ; preds = %bb4, %bb3, %bb1
  %1 = load i8, ptr %0, align 1, !dbg !744, !range !745, !noundef !24
  ret i8 %1, !dbg !744

bb4:                                              ; preds = %bb2
  store i8 1, ptr %0, align 1, !dbg !746
  br label %bb5, !dbg !747

bb3:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !748
  br label %bb5, !dbg !747
}

; core::fmt::ArgumentV1::new_lower_hex
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_lower_hex17hf2216d6e6eea11b9E(ptr align 8 %x) unnamed_addr #0 !dbg !749 {
start:
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !763, metadata !DIExpression()), !dbg !766
; call core::fmt::ArgumentV1::new
  %0 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV13new17hac36df101f9f2416E(ptr align 8 %x, ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hd0ad6d1b7b8d7f05E") #10, !dbg !767
  %1 = extractvalue { ptr, ptr } %0, 0, !dbg !767
  %2 = extractvalue { ptr, ptr } %0, 1, !dbg !767
  %3 = insertvalue { ptr, ptr } undef, ptr %1, 0, !dbg !768
  %4 = insertvalue { ptr, ptr } %3, ptr %2, 1, !dbg !768
  ret { ptr, ptr } %4, !dbg !768
}

; core::fmt::num::<impl core::fmt::Debug for u32>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hd1a51dee9cb224e7E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #0 !dbg !769 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !776, metadata !DIExpression()), !dbg !778
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !777, metadata !DIExpression()), !dbg !779
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h8ae5bebd96008cd7E(ptr align 8 %f) #10, !dbg !780
  br i1 %_3, label %bb2, label %bb3, !dbg !780

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h15ce7912bcc9ca8eE(ptr align 8 %f) #10, !dbg !781
  br i1 %_5, label %bb5, label %bb6, !dbg !781

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17ha8f29dd971f907e2E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !782
  %2 = zext i1 %1 to i8, !dbg !782
  store i8 %2, ptr %0, align 1, !dbg !782
  br label %bb7, !dbg !782

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !783, !range !212, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !783
  ret i1 %4, !dbg !783

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h7911842e8b24a80dE"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !784
  %6 = zext i1 %5 to i8, !dbg !784
  store i8 %6, ptr %0, align 1, !dbg !784
  br label %bb7, !dbg !784

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17ha22198bbb68da755E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !785
  %8 = zext i1 %7 to i8, !dbg !785
  store i8 %8, ptr %0, align 1, !dbg !785
  br label %bb7, !dbg !785
}

; core::fmt::num::<impl core::fmt::Debug for u64>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17ha8fd9c1831acb9abE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !786 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !791, metadata !DIExpression()), !dbg !793
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !792, metadata !DIExpression()), !dbg !794
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h8ae5bebd96008cd7E(ptr align 8 %f) #10, !dbg !795
  br i1 %_3, label %bb2, label %bb3, !dbg !795

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h15ce7912bcc9ca8eE(ptr align 8 %f) #10, !dbg !796
  br i1 %_5, label %bb5, label %bb6, !dbg !796

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hd0ad6d1b7b8d7f05E"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !797
  %2 = zext i1 %1 to i8, !dbg !797
  store i8 %2, ptr %0, align 1, !dbg !797
  br label %bb7, !dbg !797

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !798, !range !212, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !798
  ret i1 %4, !dbg !798

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hbb0855bc7e2396e0E"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !799
  %6 = zext i1 %5 to i8, !dbg !799
  store i8 %6, ptr %0, align 1, !dbg !799
  br label %bb7, !dbg !799

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h3f450a69e65230e8E"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !800
  %8 = zext i1 %7 to i8, !dbg !800
  store i8 %8, ptr %0, align 1, !dbg !800
  br label %bb7, !dbg !800
}

; core::fmt::builders::DebugList::entries
; Function Attrs: noredzone nounwind
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17heea09fb09a6e8fd4E(ptr align 8 %self, ptr %entries.0, ptr %entries.1) unnamed_addr #1 !dbg !801 {
start:
  %entries.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %entry = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !830, metadata !DIExpression()), !dbg !839
  %0 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 0
  store ptr %entries.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 1
  store ptr %entries.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %entries.dbg.spill, metadata !831, metadata !DIExpression()), !dbg !840
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !832, metadata !DIExpression()), !dbg !841
  call void @llvm.dbg.declare(metadata ptr %entry, metadata !834, metadata !DIExpression()), !dbg !842
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4277524a2fe14442E"(ptr %entries.0, ptr %entries.1) #10, !dbg !843
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !843
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !843
  %3 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 0, !dbg !843
  store ptr %_3.0, ptr %3, align 8, !dbg !843
  %4 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 1, !dbg !843
  store ptr %_3.1, ptr %4, align 8, !dbg !843
  br label %bb2, !dbg !844

bb2:                                              ; preds = %bb4, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb5b6805f61ae872dE"(ptr align 8 %iter) #10, !dbg !841
  store ptr %5, ptr %_5, align 8, !dbg !841
  %6 = load ptr, ptr %_5, align 8, !dbg !841, !noundef !24
  %7 = ptrtoint ptr %6 to i64, !dbg !841
  %8 = icmp eq i64 %7, 0, !dbg !841
  %_7 = select i1 %8, i64 0, i64 1, !dbg !841
  %9 = icmp eq i64 %_7, 0, !dbg !841
  br i1 %9, label %bb6, label %bb4, !dbg !841

bb6:                                              ; preds = %bb2
  ret ptr %self, !dbg !845

bb4:                                              ; preds = %bb2
  %10 = load ptr, ptr %_5, align 8, !dbg !846, !nonnull !24, !align !510, !noundef !24
  store ptr %10, ptr %entry, align 8, !dbg !846
; call core::fmt::builders::DebugList::entry
  %_9 = call align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17hb5f0b3d001a6a099E(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.1) #10, !dbg !847
  br label %bb2, !dbg !848

bb5:                                              ; No predecessors!
  unreachable, !dbg !841
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17h5a0892b6564d3a6fE(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1, ptr align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 !dbg !849 {
start:
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::UnsafeArg", align 1
  %fmt.dbg.spill = alloca { ptr, i64 }, align 8
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_5 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !915, metadata !DIExpression()), !dbg !919
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !916, metadata !DIExpression()), !dbg !920
  %5 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 0
  store ptr %fmt.0, ptr %5, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 1
  store i64 %fmt.1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %fmt.dbg.spill, metadata !917, metadata !DIExpression()), !dbg !921
  call void @llvm.dbg.declare(metadata ptr %_unsafe_arg.dbg.spill, metadata !918, metadata !DIExpression()), !dbg !922
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !923
  store ptr %fmt.0, ptr %7, align 8, !dbg !923
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !923
  store i64 %fmt.1, ptr %8, align 8, !dbg !923
  %9 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !924
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !924
  store ptr %pieces.0, ptr %10, align 8, !dbg !924
  %11 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !924
  store i64 %pieces.1, ptr %11, align 8, !dbg !924
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !924
  %13 = load ptr, ptr %12, align 8, !dbg !924, !align !510, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !924
  %15 = load i64, ptr %14, align 8, !dbg !924
  %16 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !924
  store ptr %13, ptr %16, align 8, !dbg !924
  %17 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !924
  store i64 %15, ptr %17, align 8, !dbg !924
  %18 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !924
  %19 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 0, !dbg !924
  store ptr %args.0, ptr %19, align 8, !dbg !924
  %20 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 1, !dbg !924
  store i64 %args.1, ptr %20, align 8, !dbg !924
  ret void, !dbg !925
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments6new_v117h1d2dfdaa3c3dd788E(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !926 {
start:
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_16 = alloca { ptr, i64 }, align 8
  %_13 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !930, metadata !DIExpression()), !dbg !932
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !931, metadata !DIExpression()), !dbg !933
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !934
  br i1 %_4, label %bb1, label %bb2, !dbg !934

bb2:                                              ; preds = %start
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %args.1, i64 1), !dbg !935
  %_11.0 = extractvalue { i64, i1 } %5, 0, !dbg !935
  %_11.1 = extractvalue { i64, i1 } %5, 1, !dbg !935
  %6 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !935
  br i1 %6, label %panic, label %bb4, !dbg !935

bb1:                                              ; preds = %start
  store i8 1, ptr %_3, align 1, !dbg !934
  br label %bb3, !dbg !934

bb3:                                              ; preds = %bb4, %bb1
  %7 = load i8, ptr %_3, align 1, !dbg !934, !range !212, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !934
  br i1 %8, label %bb5, label %bb7, !dbg !934

bb4:                                              ; preds = %bb2
  %_7 = icmp ugt i64 %pieces.1, %_11.0, !dbg !936
  %9 = zext i1 %_7 to i8, !dbg !934
  store i8 %9, ptr %_3, align 1, !dbg !934
  br label %bb3, !dbg !934

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_47ee623a9f06017983b1b14793104f21) #11, !dbg !935
  unreachable, !dbg !935

bb7:                                              ; preds = %bb3
  store ptr null, ptr %_16, align 8, !dbg !937
  %10 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !938
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !938
  store ptr %pieces.0, ptr %11, align 8, !dbg !938
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !938
  store i64 %pieces.1, ptr %12, align 8, !dbg !938
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !938
  %14 = load ptr, ptr %13, align 8, !dbg !938, !align !510, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !938
  %16 = load i64, ptr %15, align 8, !dbg !938
  %17 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !938
  store ptr %14, ptr %17, align 8, !dbg !938
  %18 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !938
  store i64 %16, ptr %18, align 8, !dbg !938
  %19 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !938
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !938
  store ptr %args.0, ptr %20, align 8, !dbg !938
  %21 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !938
  store i64 %args.1, ptr %21, align 8, !dbg !938
  ret void, !dbg !939

bb5:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h1d2dfdaa3c3dd788E(ptr sret(%"core::fmt::Arguments<'_>") %_13, ptr align 8 @alloc_71b99a1804d93c013f301ec59bc480be, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #10, !dbg !940
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_13, ptr align 8 @alloc_06016551127ebd46210a364dc7059aaa) #11, !dbg !940
  unreachable, !dbg !940
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h4ddadd38c3f7a384E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !941 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_9 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %b = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %a = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !947, metadata !DIExpression()), !dbg !953
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !948, metadata !DIExpression()), !dbg !954
  call void @llvm.dbg.declare(metadata ptr %a, metadata !949, metadata !DIExpression()), !dbg !955
  call void @llvm.dbg.declare(metadata ptr %b, metadata !951, metadata !DIExpression()), !dbg !956
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf5dd81a4047cd85dE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %a, ptr %x) #10, !dbg !957
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf5dd81a4047cd85dE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %b, ptr %y) #10, !dbg !958
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !959
; call core::ptr::write
  call void @_ZN4core3ptr5write17h38a109b4e2f8401dE(ptr %x, ptr %_9) #10, !dbg !960
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !961
; call core::ptr::write
  call void @_ZN4core3ptr5write17h38a109b4e2f8401dE(ptr %y, ptr %_12) #10, !dbg !962
  ret void, !dbg !963
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17hfa435f99e9ce0eaaE(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !964 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %_9 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %b = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %a = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !969, metadata !DIExpression()), !dbg !975
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !970, metadata !DIExpression()), !dbg !976
  call void @llvm.dbg.declare(metadata ptr %a, metadata !971, metadata !DIExpression()), !dbg !977
  call void @llvm.dbg.declare(metadata ptr %b, metadata !973, metadata !DIExpression()), !dbg !978
; call core::ptr::read
  call void @_ZN4core3ptr4read17h7abe7af8e5337358E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %a, ptr %x) #10, !dbg !979
; call core::ptr::read
  call void @_ZN4core3ptr4read17h7abe7af8e5337358E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %b, ptr %y) #10, !dbg !980
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !981
; call core::ptr::write
  call void @_ZN4core3ptr5write17hd9220220f276d7eaE(ptr %x, ptr %_9) #10, !dbg !982
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !983
; call core::ptr::write
  call void @_ZN4core3ptr5write17hd9220220f276d7eaE(ptr %y, ptr %_12) #10, !dbg !984
  ret void, !dbg !985
}

; core::mem::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem4swap17hfd06fbd69cd1e95cE(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !986 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !988, metadata !DIExpression()), !dbg !990
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !989, metadata !DIExpression()), !dbg !991
  %_7 = icmp eq i64 8, 0, !dbg !992
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !992
  br i1 %0, label %panic, label %bb3, !dbg !992

bb3:                                              ; preds = %start
  %_4 = udiv i64 24, 8, !dbg !992
  %_3 = icmp ugt i64 %_4, 4, !dbg !992
  br i1 %_3, label %bb4, label %bb5, !dbg !992

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_398478f18b6274e70f5df548afd1dd42) #11, !dbg !992
  unreachable, !dbg !992

bb5:                                              ; preds = %bb3
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h4ddadd38c3f7a384E(ptr align 8 %x, ptr align 8 %y) #10, !dbg !993
  br label %bb6, !dbg !993

bb4:                                              ; preds = %bb3
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h9ea753f087a59795E(ptr %x, ptr %y, i64 1) #10, !dbg !994
  br label %bb6, !dbg !994

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !995
}

; core::mem::forget
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem6forget17h81dd88fda83363bcE(ptr %t) unnamed_addr #0 !dbg !996 {
start:
  %_2 = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  call void @llvm.dbg.declare(metadata ptr %t, metadata !1000, metadata !DIExpression()), !dbg !1001
  call void @llvm.dbg.declare(metadata ptr %t, metadata !1002, metadata !DIExpression()), !dbg !1008
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %t, i64 24, i1 false), !dbg !1010
  ret void, !dbg !1011
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h2fa8b69b5dab9e4eE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1012 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1019, metadata !DIExpression()), !dbg !1024
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !1020, metadata !DIExpression()), !dbg !1025
  store i64 %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1026, metadata !DIExpression()), !dbg !1039
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1035, metadata !DIExpression()), !dbg !1041
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1042
  %_5.0.i = extractvalue { i64, i1 } %3, 0, !dbg !1042
  %_5.1.i = extractvalue { i64, i1 } %3, 1, !dbg !1042
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !1043
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill.i, metadata !1036, metadata !DIExpression()), !dbg !1044
  %4 = zext i1 %_5.1.i to i8, !dbg !1045
  store i8 %4, ptr %b.dbg.spill.i, align 1, !dbg !1045
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill.i, metadata !1038, metadata !DIExpression()), !dbg !1046
  store i64 %_5.0.i, ptr %0, align 8, !dbg !1047
  %5 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1047
  %6 = zext i1 %_5.1.i to i8, !dbg !1047
  store i8 %6, ptr %5, align 8, !dbg !1047
  %7 = load i64, ptr %0, align 8, !dbg !1048, !noundef !24
  %8 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1048
  %9 = load i8, ptr %8, align 8, !dbg !1048, !range !212, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1048
  %11 = zext i1 %10 to i8, !dbg !1048
  %12 = insertvalue { i64, i8 } undef, i64 %7, 0, !dbg !1048
  %13 = insertvalue { i64, i8 } %12, i8 %11, 1, !dbg !1048
  %_5.0 = extractvalue { i64, i8 } %13, 0, !dbg !1049
  %14 = extractvalue { i64, i8 } %13, 1, !dbg !1049
  %_5.1 = trunc i8 %14 to i1, !dbg !1049
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !1050
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !1021, metadata !DIExpression()), !dbg !1051
  %15 = zext i1 %_5.1 to i8, !dbg !1052
  store i8 %15, ptr %b.dbg.spill, align 1, !dbg !1052
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1023, metadata !DIExpression()), !dbg !1053
  %16 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1054
  %17 = zext i1 %16 to i8, !dbg !1054
  store i8 %17, ptr %1, align 1, !dbg !1054
  %18 = load i8, ptr %1, align 1, !dbg !1054, !range !212, !noundef !24
  %_6 = trunc i8 %18 to i1, !dbg !1054
  br i1 %_6, label %bb3, label %bb4, !dbg !1054

bb4:                                              ; preds = %start
  %19 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1055
  store i64 %_5.0, ptr %19, align 8, !dbg !1055
  store i64 1, ptr %2, align 8, !dbg !1055
  br label %bb5, !dbg !1056

bb3:                                              ; preds = %start
  store i64 0, ptr %2, align 8, !dbg !1057
  br label %bb5, !dbg !1056

bb5:                                              ; preds = %bb4, %bb3
  %20 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !1058
  %21 = load i64, ptr %20, align 8, !dbg !1058, !range !1059, !noundef !24
  %22 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1058
  %23 = load i64, ptr %22, align 8, !dbg !1058
  %24 = insertvalue { i64, i64 } undef, i64 %21, 0, !dbg !1058
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1, !dbg !1058
  ret { i64, i64 } %25, !dbg !1058
}

; core::num::<impl usize>::next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17hee874ad4375dd456E"(i64 %self) unnamed_addr #0 !dbg !1060 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1064, metadata !DIExpression()), !dbg !1065
; call core::num::<impl usize>::one_less_than_next_power_of_two
  %_2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17hcaf48975b1f4b12cE"(i64 %self) #10, !dbg !1066
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_2, i64 1), !dbg !1066
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !1066
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !1066
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !1066
  br i1 %1, label %panic, label %bb2, !dbg !1066

bb2:                                              ; preds = %start
  ret i64 %_3.0, !dbg !1067

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_e478450343a835afd2261f28c76aea80) #11, !dbg !1066
  unreachable, !dbg !1066
}

; core::num::<impl usize>::one_less_than_next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17hcaf48975b1f4b12cE"(i64 %self) unnamed_addr #0 !dbg !1068 {
start:
  %z.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %p.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1070, metadata !DIExpression()), !dbg !1075
  %_2 = icmp ule i64 %self, 1, !dbg !1076
  br i1 %_2, label %bb1, label %bb2, !dbg !1076

bb2:                                              ; preds = %start
  %_4.0 = sub i64 %self, 1, !dbg !1077
  %_4.1 = icmp ult i64 %self, 1, !dbg !1077
  %2 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1077
  br i1 %2, label %panic, label %bb3, !dbg !1077

bb1:                                              ; preds = %start
  store i64 0, ptr %1, align 8, !dbg !1078
  br label %bb6, !dbg !1079

bb6:                                              ; preds = %bb5, %bb1
  %3 = load i64, ptr %1, align 8, !dbg !1079, !noundef !24
  ret i64 %3, !dbg !1079

bb3:                                              ; preds = %bb2
  store i64 %_4.0, ptr %p.dbg.spill, align 8, !dbg !1077
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !1071, metadata !DIExpression()), !dbg !1080
  %4 = call i64 @llvm.ctlz.i64(i64 %_4.0, i1 true), !dbg !1081
  store i64 %4, ptr %0, align 8, !dbg !1081
  %z = load i64, ptr %0, align 8, !dbg !1081, !noundef !24
  store i64 %z, ptr %z.dbg.spill, align 8, !dbg !1081
  call void @llvm.dbg.declare(metadata ptr %z.dbg.spill, metadata !1073, metadata !DIExpression()), !dbg !1082
  %5 = and i64 %z, -64, !dbg !1083
  %_7.1 = icmp ne i64 %5, 0, !dbg !1083
  %6 = and i64 %z, 63, !dbg !1083
  %_7.0 = lshr i64 -1, %6, !dbg !1083
  %7 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !1083
  br i1 %7, label %panic1, label %bb5, !dbg !1083

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_e478450343a835afd2261f28c76aea80) #11, !dbg !1077
  unreachable, !dbg !1077

bb5:                                              ; preds = %bb3
  store i64 %_7.0, ptr %1, align 8, !dbg !1083
  br label %bb6, !dbg !1079

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.4, i64 36, ptr align 8 @alloc_e478450343a835afd2261f28c76aea80) #11, !dbg !1083
  unreachable, !dbg !1083
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17ha9edf494796602f0E"(ptr %self) unnamed_addr #0 !dbg !1084 {
start:
  %exclusive_end.dbg.spill = alloca i64, align 8
  %start1 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1089, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.declare(metadata ptr %start1, metadata !1092, metadata !DIExpression()), !dbg !1095
  %1 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 1, !dbg !1096
  %_3 = load i64, ptr %1, align 8, !dbg !1096, !noundef !24
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_3, i64 1), !dbg !1096
  %_4.0 = extractvalue { i64, i1 } %2, 0, !dbg !1096
  %_4.1 = extractvalue { i64, i1 } %2, 1, !dbg !1096
  %3 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1096
  br i1 %3, label %panic, label %bb1, !dbg !1096

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %exclusive_end.dbg.spill, align 8, !dbg !1096
  call void @llvm.dbg.declare(metadata ptr %exclusive_end.dbg.spill, metadata !1090, metadata !DIExpression()), !dbg !1097
  %4 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 2, !dbg !1098
  %5 = load i8, ptr %4, align 8, !dbg !1098, !range !212, !noundef !24
  %_6 = trunc i8 %5 to i1, !dbg !1098
  br i1 %_6, label %bb2, label %bb3, !dbg !1098

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_be74afa4d7fc4fb0397e1cb39f3f7977) #11, !dbg !1096
  unreachable, !dbg !1096

bb3:                                              ; preds = %bb1
  %6 = load i64, ptr %self, align 8, !dbg !1099, !noundef !24
  store i64 %6, ptr %start1, align 8, !dbg !1099
  br label %bb4, !dbg !1100

bb2:                                              ; preds = %bb1
  store i64 %_4.0, ptr %start1, align 8, !dbg !1101
  br label %bb4, !dbg !1100

bb4:                                              ; preds = %bb3, %bb2
  %_7 = load i64, ptr %start1, align 8, !dbg !1102, !noundef !24
  store i64 %_7, ptr %0, align 8, !dbg !1102
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1102
  store i64 %_4.0, ptr %7, align 8, !dbg !1102
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !1103
  %9 = load i64, ptr %8, align 8, !dbg !1103, !noundef !24
  %10 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1103
  %11 = load i64, ptr %10, align 8, !dbg !1103, !noundef !24
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0, !dbg !1103
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1, !dbg !1103
  ret { i64, i64 } %13, !dbg !1103
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hf4e59da8d2b512fdE"(ptr align 8 %self, ptr align 8 %0, ptr align 8 %1) unnamed_addr #1 !dbg !1104 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %args = alloca { ptr, ptr }, align 8
  store ptr %0, ptr %args, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1
  store ptr %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1123, metadata !DIExpression()), !dbg !1132
  call void @llvm.dbg.declare(metadata ptr %args, metadata !1124, metadata !DIExpression()), !dbg !1133
  %_3 = load ptr, ptr %self, align 8, !dbg !1134, !nonnull !24, !align !510, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 0, !dbg !1134
  %4 = load ptr, ptr %3, align 8, !dbg !1134, !nonnull !24, !align !510, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1, !dbg !1134
  %6 = load ptr, ptr %5, align 8, !dbg !1134, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %7 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %_3, ptr align 8 %4, ptr align 8 %6) #10, !dbg !1134
  ret i1 %7, !dbg !1135
}

; core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hed262f49383e5c8cE"(ptr %_1) unnamed_addr #1 !dbg !1136 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1147, metadata !DIExpression()), !dbg !1150
; call <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h09989a2a92d3eda6E"(ptr align 8 %_1) #10, !dbg !1150
  ret void, !dbg !1150
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr19swap_nonoverlapping17h9ea753f087a59795E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1151 {
start:
  %self.dbg.spill.i20 = alloca ptr, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %y.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill16 = alloca i64, align 8
  %y.dbg.spill13 = alloca ptr, align 8
  %x.dbg.spill11 = alloca ptr, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %y.dbg.spill5 = alloca ptr, align 8
  %x.dbg.spill3 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_38 = alloca i8, align 1
  %_19 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %_5 = alloca { ptr, ptr, i64 }, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1155, metadata !DIExpression()), !dbg !1171
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1156, metadata !DIExpression()), !dbg !1172
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1157, metadata !DIExpression()), !dbg !1173
  store ptr %x, ptr %_5, align 8, !dbg !1174
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !1174
  store ptr %y, ptr %1, align 8, !dbg !1174
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !1174
  store i64 %count, ptr %2, align 8, !dbg !1174
  %3 = load ptr, ptr %_5, align 8, !dbg !1174, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !1174
  %5 = load ptr, ptr %4, align 8, !dbg !1174, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !1174
  %7 = load i64, ptr %6, align 8, !dbg !1174, !noundef !24
  store ptr %3, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !1175, metadata !DIExpression()), !dbg !1181
  store ptr %5, ptr %y.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill.i, metadata !1179, metadata !DIExpression()), !dbg !1181
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1180, metadata !DIExpression()), !dbg !1181
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %3) #10, !dbg !1183
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !1183

bb4.i:                                            ; preds = %start
  store i8 0, ptr %_6.i, align 1, !dbg !1183
  br label %bb6.i, !dbg !1183

bb5.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_9.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %5) #10, !dbg !1185
  %8 = zext i1 %_9.i to i8, !dbg !1183
  store i8 %8, ptr %_6.i, align 1, !dbg !1183
  br label %bb6.i, !dbg !1183

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !1183, !range !212, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1183
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !1183

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !1183
  br label %bb3.i, !dbg !1183

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_11.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h5c56d261f36d6e12E(ptr %3, ptr %5, i64 %7) #10, !dbg !1186
  %11 = zext i1 %_11.i to i8, !dbg !1183
  store i8 %11, ptr %_5.i, align 1, !dbg !1183
  br label %bb3.i, !dbg !1183

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !1187, !range !212, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !1187
  %_4.i = xor i1 %13, true, !dbg !1187
  br i1 %_4.i, label %bb10.i, label %_ZN4core3ptr19swap_nonoverlapping7runtime17h482dec2cc7724eebE.exit, !dbg !1187

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_d9a45cbc775fd4f6013ee9874736263f, i64 166) #11, !dbg !1188
  unreachable, !dbg !1188

_ZN4core3ptr19swap_nonoverlapping7runtime17h482dec2cc7724eebE.exit: ; preds = %bb3.i
  %_7 = icmp ule i64 8, 8, !dbg !1189
  br i1 %_7, label %bb3, label %bb2, !dbg !1189

bb2:                                              ; preds = %_ZN4core3ptr19swap_nonoverlapping7runtime17h482dec2cc7724eebE.exit
  store i8 0, ptr %_6, align 1, !dbg !1189
  br label %bb4, !dbg !1189

bb3:                                              ; preds = %_ZN4core3ptr19swap_nonoverlapping7runtime17h482dec2cc7724eebE.exit
  store i64 24, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1190, metadata !DIExpression()), !dbg !1193
  store i64 24, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1195, metadata !DIExpression()), !dbg !1200
  store i64 2, ptr %0, align 8, !dbg !1202
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1202, !noundef !24
  %14 = trunc i64 %_2.i.i to i32, !dbg !1202
  %15 = icmp eq i32 %14, 1, !dbg !1203
  %_11 = xor i1 %15, true, !dbg !1204
  br i1 %_11, label %bb7, label %bb8, !dbg !1205

bb8:                                              ; preds = %bb3
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 8, i64 2), !dbg !1206
  %_18.0 = extractvalue { i64, i1 } %16, 0, !dbg !1206
  %_18.1 = extractvalue { i64, i1 } %16, 1, !dbg !1206
  %17 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1206
  br i1 %17, label %panic, label %bb14, !dbg !1206

bb7:                                              ; preds = %bb3
  store i8 1, ptr %_10, align 1, !dbg !1205
  br label %bb9, !dbg !1205

bb9:                                              ; preds = %bb14, %bb7
  %18 = load i8, ptr %_10, align 1, !dbg !1189, !range !212, !noundef !24
  %19 = trunc i8 %18 to i1, !dbg !1189
  %20 = zext i1 %19 to i8, !dbg !1189
  store i8 %20, ptr %_6, align 1, !dbg !1189
  br label %bb4, !dbg !1189

bb14:                                             ; preds = %bb8
  %_14 = icmp ugt i64 24, %_18.0, !dbg !1207
  %21 = zext i1 %_14 to i8, !dbg !1205
  store i8 %21, ptr %_10, align 1, !dbg !1205
  br label %bb9, !dbg !1205

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_37325827c2b5768e6ac023a473cc3d84) #11, !dbg !1206
  unreachable, !dbg !1206

bb4:                                              ; preds = %bb2, %bb9
  %22 = load i8, ptr %_6, align 1, !dbg !1189, !range !212, !noundef !24
  %23 = trunc i8 %22 to i1, !dbg !1189
  br i1 %23, label %bb15, label %bb47, !dbg !1189

bb47:                                             ; preds = %bb34, %bb4
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h5bbeba14ca5f8065E(ptr %x, ptr %y, i64 %count) #10, !dbg !1208
  br label %bb48, !dbg !1208

bb15:                                             ; preds = %bb4
  %_20 = icmp uge i64 8, 8, !dbg !1209
  br i1 %_20, label %bb17, label %bb16, !dbg !1209

bb16:                                             ; preds = %bb15
  store i8 0, ptr %_19, align 1, !dbg !1209
  br label %bb18, !dbg !1209

bb17:                                             ; preds = %bb15
  %_27 = icmp eq i64 8, 0, !dbg !1209
  %24 = call i1 @llvm.expect.i1(i1 %_27, i1 false), !dbg !1209
  br i1 %24, label %panic1, label %bb23, !dbg !1209

bb23:                                             ; preds = %bb17
  %_24 = urem i64 24, 8, !dbg !1209
  %_23 = icmp eq i64 %_24, 0, !dbg !1209
  %25 = zext i1 %_23 to i8, !dbg !1209
  store i8 %25, ptr %_19, align 1, !dbg !1209
  br label %bb18, !dbg !1209

panic1:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.6, i64 57, ptr align 8 @alloc_8a5c32ab9581cb9cc3f9a1f2d694d9fd) #11, !dbg !1209
  unreachable, !dbg !1209

bb18:                                             ; preds = %bb16, %bb23
  %26 = load i8, ptr %_19, align 1, !dbg !1209, !range !212, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !1209
  br i1 %27, label %bb24, label %bb31, !dbg !1209

bb31:                                             ; preds = %bb18
  %_39 = icmp uge i64 8, 1, !dbg !1210
  br i1 %_39, label %bb33, label %bb32, !dbg !1210

bb24:                                             ; preds = %bb18
  store ptr %x, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !1211, metadata !DIExpression()), !dbg !1218
  store ptr %x, ptr %x.dbg.spill3, align 8, !dbg !1209
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill3, metadata !1158, metadata !DIExpression()), !dbg !1220
  store ptr %y, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !1211, metadata !DIExpression()), !dbg !1221
  store ptr %y, ptr %y.dbg.spill5, align 8, !dbg !1220
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill5, metadata !1160, metadata !DIExpression()), !dbg !1223
  %_34 = icmp eq i64 8, 0, !dbg !1223
  %28 = call i1 @llvm.expect.i1(i1 %_34, i1 false), !dbg !1223
  br i1 %28, label %panic6, label %bb29, !dbg !1223

bb29:                                             ; preds = %bb24
  %_31 = udiv i64 24, 8, !dbg !1223
  %29 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_31), !dbg !1223
  %_35.0 = extractvalue { i64, i1 } %29, 0, !dbg !1223
  %_35.1 = extractvalue { i64, i1 } %29, 1, !dbg !1223
  %30 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !1223
  br i1 %30, label %panic7, label %bb30, !dbg !1223

panic6:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_8a5c32ab9581cb9cc3f9a1f2d694d9fd) #11, !dbg !1223
  unreachable, !dbg !1223

bb30:                                             ; preds = %bb29
  store i64 %_35.0, ptr %count.dbg.spill8, align 8, !dbg !1223
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill8, metadata !1162, metadata !DIExpression()), !dbg !1224
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h15828749cfe69757E(ptr %x, ptr %y, i64 %_35.0) #10, !dbg !1224
  br label %bb48, !dbg !1224

panic7:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_8a5c32ab9581cb9cc3f9a1f2d694d9fd) #11, !dbg !1223
  unreachable, !dbg !1223

bb48:                                             ; preds = %bb47, %bb46, %bb30
  ret void, !dbg !1225

bb32:                                             ; preds = %bb31
  store i8 0, ptr %_38, align 1, !dbg !1210
  br label %bb34, !dbg !1210

bb33:                                             ; preds = %bb31
  %_46 = icmp eq i64 1, 0, !dbg !1210
  %31 = call i1 @llvm.expect.i1(i1 %_46, i1 false), !dbg !1210
  br i1 %31, label %panic9, label %bb39, !dbg !1210

bb39:                                             ; preds = %bb33
  %_43 = urem i64 24, 1, !dbg !1210
  %_42 = icmp eq i64 %_43, 0, !dbg !1210
  %32 = zext i1 %_42 to i8, !dbg !1210
  store i8 %32, ptr %_38, align 1, !dbg !1210
  br label %bb34, !dbg !1210

panic9:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.6, i64 57, ptr align 8 @alloc_aaea1f9bf75caf56a6c949d11fab6e87) #11, !dbg !1210
  unreachable, !dbg !1210

bb34:                                             ; preds = %bb32, %bb39
  %33 = load i8, ptr %_38, align 1, !dbg !1210, !range !212, !noundef !24
  %34 = trunc i8 %33 to i1, !dbg !1210
  br i1 %34, label %bb40, label %bb47, !dbg !1210

bb40:                                             ; preds = %bb34
  store ptr %x, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !1226, metadata !DIExpression()), !dbg !1233
  store ptr %x, ptr %x.dbg.spill11, align 8, !dbg !1210
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill11, metadata !1164, metadata !DIExpression()), !dbg !1235
  store ptr %y, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !1226, metadata !DIExpression()), !dbg !1236
  store ptr %y, ptr %y.dbg.spill13, align 8, !dbg !1235
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill13, metadata !1167, metadata !DIExpression()), !dbg !1238
  %_53 = icmp eq i64 1, 0, !dbg !1238
  %35 = call i1 @llvm.expect.i1(i1 %_53, i1 false), !dbg !1238
  br i1 %35, label %panic14, label %bb45, !dbg !1238

bb45:                                             ; preds = %bb40
  %_50 = udiv i64 24, 1, !dbg !1238
  %36 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_50), !dbg !1238
  %_54.0 = extractvalue { i64, i1 } %36, 0, !dbg !1238
  %_54.1 = extractvalue { i64, i1 } %36, 1, !dbg !1238
  %37 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !1238
  br i1 %37, label %panic15, label %bb46, !dbg !1238

panic14:                                          ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_aaea1f9bf75caf56a6c949d11fab6e87) #11, !dbg !1238
  unreachable, !dbg !1238

bb46:                                             ; preds = %bb45
  store i64 %_54.0, ptr %count.dbg.spill16, align 8, !dbg !1238
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill16, metadata !1169, metadata !DIExpression()), !dbg !1239
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17he171fd6bdbd0df88E(ptr %x, ptr %y, i64 %_54.0) #10, !dbg !1239
  br label %bb48, !dbg !1239

panic15:                                          ; preds = %bb45
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_aaea1f9bf75caf56a6c949d11fab6e87) #11, !dbg !1238
  unreachable, !dbg !1238
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h505c31c93c0fff88E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1240 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1244, metadata !DIExpression()), !dbg !1246
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1245, metadata !DIExpression()), !dbg !1247
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !555, metadata !DIExpression()), !dbg !1248
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hff856379fcd0049aE(ptr %data, i64 %len) #10, !dbg !1250
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1250
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1250
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !1251
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1251
  ret { ptr, i64 } %4, !dbg !1251
}

; core::ptr::drop_in_place<u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17hb64f971d62858e48E"(ptr %_1) unnamed_addr #0 !dbg !1252 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1257, metadata !DIExpression()), !dbg !1260
  ret void, !dbg !1260
}

; core::ptr::drop_in_place<u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17h6643c1c775e19fdfE"(ptr %_1) unnamed_addr #0 !dbg !1261 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1266, metadata !DIExpression()), !dbg !1267
  ret void, !dbg !1267
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h94970a4bfa2c5a79E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1268 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1272, metadata !DIExpression()), !dbg !1274
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1273, metadata !DIExpression()), !dbg !1275
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1276, metadata !DIExpression()), !dbg !1282
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hbd2ff5738d9f5e5aE(ptr %data, i64 %len) #10, !dbg !1284
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1284
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1284
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !1285
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1285
  ret { ptr, i64 } %4, !dbg !1285
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17hf05a55e5c9f1e909E"(ptr %_1) unnamed_addr #0 !dbg !1286 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1291, metadata !DIExpression()), !dbg !1294
  ret void, !dbg !1294
}

; core::ptr::drop_in_place<&u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h97a2ac158cd47a91E"(ptr %_1) unnamed_addr #0 !dbg !1295 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1300, metadata !DIExpression()), !dbg !1303
  ret void, !dbg !1303
}

; core::ptr::drop_in_place<&u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h8148cd13a86f44f7E"(ptr %_1) unnamed_addr #0 !dbg !1304 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1309, metadata !DIExpression()), !dbg !1312
  ret void, !dbg !1312
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h5bbeba14ca5f8065E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1313 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %self.dbg.spill.i9 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1315, metadata !DIExpression()), !dbg !1329
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1316, metadata !DIExpression()), !dbg !1330
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1317, metadata !DIExpression()), !dbg !1331
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1323, metadata !DIExpression()), !dbg !1332
  store ptr %x, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1333, metadata !DIExpression()), !dbg !1340
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1342
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1318, metadata !DIExpression()), !dbg !1343
  store ptr %y, ptr %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !1333, metadata !DIExpression()), !dbg !1344
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1346
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1321, metadata !DIExpression()), !dbg !1347
  store i64 0, ptr %i, align 8, !dbg !1348
  br label %bb3, !dbg !1349

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1350, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1350
  br i1 %_7, label %bb4, label %bb9, !dbg !1350

bb9:                                              ; preds = %bb3
  ret void, !dbg !1351

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !1352, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1353, metadata !DIExpression()), !dbg !1359
  store i64 %_12, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1358, metadata !DIExpression()), !dbg !1361
  store ptr %x, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !1362, metadata !DIExpression()), !dbg !1368
  store i64 %_12, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !1367, metadata !DIExpression()), !dbg !1370
  %2 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %x, i64 %_12, !dbg !1371
  store ptr %2, ptr %1, align 8, !dbg !1371
  %_3.i = load ptr, ptr %1, align 8, !dbg !1371, !noundef !24
  store ptr %_3.i, ptr %x.dbg.spill5, align 8, !dbg !1372
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1325, metadata !DIExpression()), !dbg !1373
  %_16 = load i64, ptr %i, align 8, !dbg !1374, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1353, metadata !DIExpression()), !dbg !1375
  store i64 %_16, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1358, metadata !DIExpression()), !dbg !1377
  store ptr %y, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !1362, metadata !DIExpression()), !dbg !1378
  store i64 %_16, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !1367, metadata !DIExpression()), !dbg !1380
  %3 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %y, i64 %_16, !dbg !1381
  store ptr %3, ptr %0, align 8, !dbg !1381
  %_3.i15 = load ptr, ptr %0, align 8, !dbg !1381, !noundef !24
  store ptr %_3.i15, ptr %y.dbg.spill6, align 8, !dbg !1382
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1327, metadata !DIExpression()), !dbg !1383
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17hfa435f99e9ce0eaaE(ptr align 8 %_3.i, ptr align 8 %_3.i15) #10, !dbg !1384
  %4 = load i64, ptr %i, align 8, !dbg !1385, !noundef !24
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %4, i64 1), !dbg !1385
  %_18.0 = extractvalue { i64, i1 } %5, 0, !dbg !1385
  %_18.1 = extractvalue { i64, i1 } %5, 1, !dbg !1385
  %6 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1385
  br i1 %6, label %panic, label %bb8, !dbg !1385

bb8:                                              ; preds = %bb4
  store i64 %_18.0, ptr %i, align 8, !dbg !1385
  br label %bb3, !dbg !1349

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_d622d686b486e5b7d66f3b5666247ed0) #11, !dbg !1385
  unreachable, !dbg !1385
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h7abe7af8e5337358E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %0, ptr %src) unnamed_addr #0 !dbg !1386 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>", align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>", align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>", align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1390, metadata !DIExpression()), !dbg !1400
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1391, metadata !DIExpression()), !dbg !1401
  store ptr %src, ptr %_4, align 8, !dbg !1402
  %1 = load ptr, ptr %_4, align 8, !dbg !1402, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1403, metadata !DIExpression()), !dbg !1409
; call core::intrinsics::is_aligned_and_not_null
  %_3.i1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h77b7d0c96435260eE(ptr %1) #10, !dbg !1411
  %_2.i = xor i1 %_3.i1, true, !dbg !1413
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h2bbfeeaac52359b1E.exit, !dbg !1413

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_efce4ff77543cc2403477cd546743a0c, i64 101) #11, !dbg !1414
  unreachable, !dbg !1414

_ZN4core3ptr4read7runtime17h2bbfeeaac52359b1E.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1415, metadata !DIExpression()), !dbg !1422
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %src, i64 24, i1 false), !dbg !1424
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tmp, i64 24, i1 false), !dbg !1425
  call void @llvm.dbg.declare(metadata ptr %_7, metadata !1426, metadata !DIExpression()), !dbg !1431
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3.i, ptr align 8 %_7, i64 24, i1 false), !dbg !1433
  call void @llvm.dbg.declare(metadata ptr %_3.i, metadata !1434, metadata !DIExpression()), !dbg !1439
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_3.i, i64 24, i1 false), !dbg !1441
  ret void, !dbg !1442
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17hf5dd81a4047cd85dE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %src) unnamed_addr #0 !dbg !1443 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1447, metadata !DIExpression()), !dbg !1450
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1448, metadata !DIExpression()), !dbg !1451
  store ptr %src, ptr %_4, align 8, !dbg !1452
  %1 = load ptr, ptr %_4, align 8, !dbg !1452, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1453, metadata !DIExpression()), !dbg !1458
; call core::intrinsics::is_aligned_and_not_null
  %_3.i1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %1) #10, !dbg !1460
  %_2.i = xor i1 %_3.i1, true, !dbg !1462
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h7756f71c9d146921E.exit, !dbg !1462

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_efce4ff77543cc2403477cd546743a0c, i64 101) #11, !dbg !1463
  unreachable, !dbg !1463

_ZN4core3ptr4read7runtime17h7756f71c9d146921E.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1464, metadata !DIExpression()), !dbg !1469
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %src, i64 24, i1 false), !dbg !1471
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tmp, i64 24, i1 false), !dbg !1472
  call void @llvm.dbg.declare(metadata ptr %_7, metadata !1473, metadata !DIExpression()), !dbg !1478
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3.i, ptr align 8 %_7, i64 24, i1 false), !dbg !1480
  call void @llvm.dbg.declare(metadata ptr %_3.i, metadata !1481, metadata !DIExpression()), !dbg !1486
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_3.i, i64 24, i1 false), !dbg !1488
  ret void, !dbg !1489
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h2af3b31cc01f7abcE(ptr %x, ptr %y) unnamed_addr #0 !dbg !1490 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1494, metadata !DIExpression()), !dbg !1498
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1495, metadata !DIExpression()), !dbg !1499
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1496, metadata !DIExpression()), !dbg !1500
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1464, metadata !DIExpression()), !dbg !1501
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %x, ptr %tmp, i64 1) #10, !dbg !1503
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h461b3c2ec587c164E(ptr %y, ptr %x, i64 1) #10, !dbg !1504
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1505, metadata !DIExpression()), !dbg !1511
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %tmp, ptr %y, i64 1) #10, !dbg !1513
  ret void, !dbg !1514
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h918312f0c5f20307E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1515 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1519, metadata !DIExpression()), !dbg !1530
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1520, metadata !DIExpression()), !dbg !1531
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1521, metadata !DIExpression()), !dbg !1532
  %1 = load i64, ptr %0, align 8, !dbg !1533
  store i64 %1, ptr %tmp, align 8, !dbg !1538
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1539, metadata !DIExpression()), !dbg !1545
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h520356a0fc1741dcE(ptr %x, ptr %tmp, i64 1) #10, !dbg !1547
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h05891d76475b3d26E(ptr %y, ptr %x, i64 1) #10, !dbg !1548
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1549, metadata !DIExpression()), !dbg !1555
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h520356a0fc1741dcE(ptr %tmp, ptr %y, i64 1) #10, !dbg !1557
  ret void, !dbg !1558
}

; core::ptr::drop_in_place<bootloader::bootinfo::TlsTemplate>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17h2f18dfc4aaadc409E"(ptr %_1) unnamed_addr #0 !dbg !1559 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1564, metadata !DIExpression()), !dbg !1567
  ret void, !dbg !1567
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h38a109b4e2f8401dE(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1568 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1572, metadata !DIExpression()), !dbg !1574
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1573, metadata !DIExpression()), !dbg !1575
  store ptr %dst, ptr %_4, align 8, !dbg !1576
  %0 = load ptr, ptr %_4, align 8, !dbg !1576, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1577, metadata !DIExpression()), !dbg !1583
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %0) #10, !dbg !1585
  %_2.i = xor i1 %_3.i, true, !dbg !1587
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17hbbc624b8cd0c93deE.exit, !dbg !1587

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_98d916830fc7cab3c43d0ae7d762d17f, i64 102) #11, !dbg !1588
  unreachable, !dbg !1588

_ZN4core3ptr5write7runtime17hbbc624b8cd0c93deE.exit: ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1589
  ret void, !dbg !1590
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hd9220220f276d7eaE(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1591 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1595, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1596, metadata !DIExpression()), !dbg !1598
  store ptr %dst, ptr %_4, align 8, !dbg !1599
  %0 = load ptr, ptr %_4, align 8, !dbg !1599, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1600, metadata !DIExpression()), !dbg !1605
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h77b7d0c96435260eE(ptr %0) #10, !dbg !1607
  %_2.i = xor i1 %_3.i, true, !dbg !1609
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17h3aa4a4cee022163aE.exit, !dbg !1609

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_98d916830fc7cab3c43d0ae7d762d17f, i64 102) #11, !dbg !1610
  unreachable, !dbg !1610

_ZN4core3ptr5write7runtime17h3aa4a4cee022163aE.exit: ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1611
  ret void, !dbg !1612
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17hac2f11c42cfb9a1cE"(ptr %_1) unnamed_addr #0 !dbg !1613 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1618, metadata !DIExpression()), !dbg !1621
  ret void, !dbg !1621
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::FrameRange>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17hce373ee1c77dbe72E"(ptr %_1) unnamed_addr #0 !dbg !1622 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1627, metadata !DIExpression()), !dbg !1630
  ret void, !dbg !1630
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h7f9abbc7b99f0eedE"(ptr %_1) unnamed_addr #0 !dbg !1631 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1636, metadata !DIExpression()), !dbg !1637
  ret void, !dbg !1637
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h0731c1b23d198b15E"(ptr %_1) unnamed_addr #0 !dbg !1638 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1643, metadata !DIExpression()), !dbg !1646
  ret void, !dbg !1646
}

; core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hf81e21e3852c5789E"(ptr %ptr) unnamed_addr #0 !dbg !1647 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1652, metadata !DIExpression()), !dbg !1653
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1654, metadata !DIExpression()), !dbg !1661
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1663, metadata !DIExpression()), !dbg !1669
  store ptr %ptr, ptr %0, align 8, !dbg !1671
  %1 = load i64, ptr %0, align 8, !dbg !1671, !noundef !24
  %2 = icmp eq i64 %1, 0, !dbg !1672
  ret i1 %2, !dbg !1673
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd1a6af8bc1e3a6afE"(ptr %self) unnamed_addr #0 !dbg !1674 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1678, metadata !DIExpression()), !dbg !1679
  store ptr %self, ptr %_2, align 8, !dbg !1680
  %0 = load ptr, ptr %_2, align 8, !dbg !1681, !noundef !24
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hf81e21e3852c5789E"(ptr %0) #10, !dbg !1681
  ret i1 %1, !dbg !1682
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define ptr @_ZN4core3ptr8metadata14from_raw_parts17h3fd2e693449dc896E(ptr %data_address) unnamed_addr #0 !dbg !1683 {
start:
  %metadata.dbg.spill = alloca {}, align 1
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"core::ptr::metadata::PtrComponents<bootinfo::memory_map::MemoryRegion>", align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1689, metadata !DIExpression()), !dbg !1691
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1690, metadata !DIExpression()), !dbg !1692
  store ptr %data_address, ptr %_4, align 8, !dbg !1693
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 8, i1 false), !dbg !1694
  %0 = load ptr, ptr %_3, align 8, !dbg !1694, !noundef !24
  ret ptr %0, !dbg !1695
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hff856379fcd0049aE(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1696 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1700, metadata !DIExpression()), !dbg !1702
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1701, metadata !DIExpression()), !dbg !1703
  store ptr %data_address, ptr %_4, align 8, !dbg !1704
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1704
  store i64 %metadata, ptr %0, align 8, !dbg !1704
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1705
  %2 = load ptr, ptr %1, align 8, !dbg !1705, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1705
  %4 = load i64, ptr %3, align 8, !dbg !1705, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1705
  store ptr %2, ptr %5, align 8, !dbg !1705
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1705
  store i64 %4, ptr %6, align 8, !dbg !1705
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1705
  %8 = load ptr, ptr %7, align 8, !dbg !1705, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1705
  %10 = load i64, ptr %9, align 8, !dbg !1705, !noundef !24
  %11 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !1706
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1706
  ret { ptr, i64 } %12, !dbg !1706
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hbd2ff5738d9f5e5aE(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1707 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1711, metadata !DIExpression()), !dbg !1713
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1712, metadata !DIExpression()), !dbg !1714
  store ptr %data_address, ptr %_4, align 8, !dbg !1715
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1715
  store i64 %metadata, ptr %0, align 8, !dbg !1715
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1716
  %2 = load ptr, ptr %1, align 8, !dbg !1716, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1716
  %4 = load i64, ptr %3, align 8, !dbg !1716, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1716
  store ptr %2, ptr %5, align 8, !dbg !1716
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1716
  store i64 %4, ptr %6, align 8, !dbg !1716
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1716
  %8 = load ptr, ptr %7, align 8, !dbg !1716, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1716
  %10 = load i64, ptr %9, align 8, !dbg !1716, !noundef !24
  %11 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !1717
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1717
  ret { ptr, i64 } %12, !dbg !1717
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr8metadata8metadata17h6540df51448649b6E(ptr %ptr) unnamed_addr #0 !dbg !1718 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1720, metadata !DIExpression()), !dbg !1721
  store ptr %ptr, ptr %_2, align 8, !dbg !1722
  ret void, !dbg !1723
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr8metadata8metadata17hc1aa6460a717ef3dE(ptr %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1724 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1728, metadata !DIExpression()), !dbg !1729
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 0, !dbg !1730
  store ptr %ptr.0, ptr %2, align 8, !dbg !1730
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1730
  store i64 %ptr.1, ptr %3, align 8, !dbg !1730
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1730
  %5 = load i64, ptr %4, align 8, !dbg !1730, !noundef !24
  ret i64 %5, !dbg !1731
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h358a6220fe179556E"(ptr %ptr) unnamed_addr #0 !dbg !1732 {
start:
  %ptr.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1737, metadata !DIExpression()), !dbg !1738
  store ptr %ptr, ptr %_3, align 8, !dbg !1739
  %1 = load ptr, ptr %_3, align 8, !dbg !1739, !noundef !24
  store ptr %1, ptr %ptr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !1740, metadata !DIExpression()), !dbg !1745
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd1a6af8bc1e3a6afE"(ptr %1) #10, !dbg !1747
  %_3.i = xor i1 %_4.i, true, !dbg !1749
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h4d515149a47c318dE.exit", !dbg !1750

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_d0afbdd8e12853f26980a9342bb4d429, i64 93) #11, !dbg !1751
  unreachable, !dbg !1751

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h4d515149a47c318dE.exit": ; preds = %start
  store ptr %ptr, ptr %0, align 8, !dbg !1752
  %2 = load ptr, ptr %0, align 8, !dbg !1753, !nonnull !24, !noundef !24
  ret ptr %2, !dbg !1753
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h7c5dcdc1c1ed93efE"(ptr %self) unnamed_addr #0 !dbg !1754 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1756, metadata !DIExpression()), !dbg !1757
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hb3e034956ac30275E"(ptr %self, i64 8) #10, !dbg !1758
  ret i1 %0, !dbg !1759
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hd973fd8ab7949705E"(ptr %self) unnamed_addr #0 !dbg !1760 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1762, metadata !DIExpression()), !dbg !1763
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h283c9ff5f3ff2f3eE"(ptr %self, i64 8) #10, !dbg !1764
  ret i1 %0, !dbg !1765
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h138415916c3c97e6E"(ptr %ptr, i64 %align) unnamed_addr #0 !dbg !1766 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %align.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1771, metadata !DIExpression()), !dbg !1773
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1772, metadata !DIExpression()), !dbg !1774
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1775, metadata !DIExpression()), !dbg !1781
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1783, metadata !DIExpression()), !dbg !1789
  store ptr %ptr, ptr %0, align 8, !dbg !1791
  %1 = load i64, ptr %0, align 8, !dbg !1791, !noundef !24
  %_6.0 = sub i64 %align, 1, !dbg !1792
  %_6.1 = icmp ult i64 %align, 1, !dbg !1792
  %2 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !1792
  br i1 %2, label %panic, label %bb2, !dbg !1792

bb2:                                              ; preds = %start
  %_3 = and i64 %1, %_6.0, !dbg !1793
  %3 = icmp eq i64 %_3, 0, !dbg !1793
  ret i1 %3, !dbg !1794

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4105d0742918b74e2c640d9349dca984) #11, !dbg !1792
  unreachable, !dbg !1792
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h283c9ff5f3ff2f3eE"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1795 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1799, metadata !DIExpression()), !dbg !1801
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1800, metadata !DIExpression()), !dbg !1802
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1190, metadata !DIExpression()), !dbg !1803
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1195, metadata !DIExpression()), !dbg !1805
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1807
  store i64 %1, ptr %0, align 8, !dbg !1807
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1807, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !1807
  %3 = icmp eq i32 %2, 1, !dbg !1808
  %_3 = xor i1 %3, true, !dbg !1809
  br i1 %_3, label %bb2, label %bb4, !dbg !1809

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !555, metadata !DIExpression()), !dbg !1810
  store ptr %self, ptr %_9, align 8, !dbg !1812
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !1812
  store i64 %align, ptr %4, align 8, !dbg !1812
  %5 = load ptr, ptr %_9, align 8, !dbg !1813, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !1813
  %7 = load i64, ptr %6, align 8, !dbg !1813, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h138415916c3c97e6E"(ptr %5, i64 %7) #10, !dbg !1813
  ret i1 %8, !dbg !1814

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h1d2dfdaa3c3dd788E(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_e5e5ee84beb26a7d629d956d12efff36, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #10, !dbg !1815
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_360e68377b15a3e0dd13581a5ee2cd6d) #11, !dbg !1815
  unreachable, !dbg !1815
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hb3e034956ac30275E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1816 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1820, metadata !DIExpression()), !dbg !1822
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1821, metadata !DIExpression()), !dbg !1823
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1190, metadata !DIExpression()), !dbg !1824
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1195, metadata !DIExpression()), !dbg !1826
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1828
  store i64 %1, ptr %0, align 8, !dbg !1828
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1828, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !1828
  %3 = icmp eq i32 %2, 1, !dbg !1829
  %_3 = xor i1 %3, true, !dbg !1830
  br i1 %_3, label %bb2, label %bb4, !dbg !1830

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1831, metadata !DIExpression()), !dbg !1837
  store ptr %self, ptr %_9, align 8, !dbg !1839
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !1839
  store i64 %align, ptr %4, align 8, !dbg !1839
  %5 = load ptr, ptr %_9, align 8, !dbg !1840, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !1840
  %7 = load i64, ptr %6, align 8, !dbg !1840, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h138415916c3c97e6E"(ptr %5, i64 %7) #10, !dbg !1840
  ret i1 %8, !dbg !1841

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h1d2dfdaa3c3dd788E(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_e5e5ee84beb26a7d629d956d12efff36, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #10, !dbg !1842
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_360e68377b15a3e0dd13581a5ee2cd6d) #11, !dbg !1842
  unreachable, !dbg !1842
}

; core::ptr::const_ptr::<impl *const T>::with_metadata_of
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h030bc1d33a4ae353E"(ptr %self, ptr %meta) unnamed_addr #0 !dbg !1843 {
start:
  %meta.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1848, metadata !DIExpression()), !dbg !1852
  store ptr %meta, ptr %meta.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %meta.dbg.spill, metadata !1849, metadata !DIExpression()), !dbg !1853
; call core::ptr::metadata::metadata
  call void @_ZN4core3ptr8metadata8metadata17h6540df51448649b6E(ptr %meta) #10, !dbg !1854
; call core::ptr::metadata::from_raw_parts
  %0 = call ptr @_ZN4core3ptr8metadata14from_raw_parts17h3fd2e693449dc896E(ptr %self) #10, !dbg !1855
  ret ptr %0, !dbg !1856
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h2b0f86c52e76939fE"(ptr %ptr) unnamed_addr #0 !dbg !1857 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1862, metadata !DIExpression()), !dbg !1863
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1864, metadata !DIExpression()), !dbg !1869
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1871, metadata !DIExpression()), !dbg !1876
  store ptr %ptr, ptr %0, align 8, !dbg !1878
  %1 = load i64, ptr %0, align 8, !dbg !1878, !noundef !24
  %2 = icmp eq i64 %1, 0, !dbg !1879
  ret i1 %2, !dbg !1880
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h137bc6af344c2718E"(ptr %self) unnamed_addr #0 !dbg !1881 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1883, metadata !DIExpression()), !dbg !1884
  store ptr %self, ptr %_2, align 8, !dbg !1885
  %0 = load ptr, ptr %_2, align 8, !dbg !1886, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h2b0f86c52e76939fE"(ptr %0) #10, !dbg !1886
  ret i1 %1, !dbg !1887
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4aa6254734848f2bE"(ptr %self) unnamed_addr #0 !dbg !1888 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1890, metadata !DIExpression()), !dbg !1891
  store ptr %self, ptr %_2, align 8, !dbg !1892
  %0 = load ptr, ptr %_2, align 8, !dbg !1893, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h2b0f86c52e76939fE"(ptr %0) #10, !dbg !1893
  ret i1 %1, !dbg !1894
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h58910af669914ae5E"(ptr %self, ptr %origin) unnamed_addr #0 !dbg !1895 {
start:
  %origin.dbg.spill.i = alloca ptr, align 8
  %this.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %pointee_size.dbg.spill = alloca i64, align 8
  %origin.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca i8, align 1
  %_4 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1899, metadata !DIExpression()), !dbg !1905
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1901, metadata !DIExpression()), !dbg !1906
  store ptr %origin, ptr %origin.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill, metadata !1900, metadata !DIExpression()), !dbg !1907
  store ptr %self, ptr %_4, align 8, !dbg !1908
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_4, i32 0, i32 1, !dbg !1908
  store ptr %origin, ptr %1, align 8, !dbg !1908
  %2 = load ptr, ptr %_4, align 8, !dbg !1908, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_4, i32 0, i32 1, !dbg !1908
  %4 = load ptr, ptr %3, align 8, !dbg !1908, !noundef !24
  store ptr %2, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !1909, metadata !DIExpression()), !dbg !1916
  store ptr %4, ptr %origin.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill.i, metadata !1915, metadata !DIExpression()), !dbg !1916
  %_4.i = icmp uge ptr %2, %4, !dbg !1918
  %_3.i = xor i1 %_4.i, true, !dbg !1920
  br i1 %_3.i, label %bb1.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h3aec9cd4dcb8b1b2E.exit", !dbg !1920

bb1.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_b1ed2cffeff660b0e56c8d9a60743218, i64 71) #11, !dbg !1921
  unreachable, !dbg !1921

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h3aec9cd4dcb8b1b2E.exit": ; preds = %start
  store i64 24, ptr %pointee_size.dbg.spill, align 8, !dbg !1922
  call void @llvm.dbg.declare(metadata ptr %pointee_size.dbg.spill, metadata !1903, metadata !DIExpression()), !dbg !1923
  %_8 = icmp ult i64 0, 24, !dbg !1924
  br i1 %_8, label %bb4, label %bb3, !dbg !1924

bb3:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h3aec9cd4dcb8b1b2E.exit"
  store i8 0, ptr %_7, align 1, !dbg !1924
  br label %bb5, !dbg !1924

bb4:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h3aec9cd4dcb8b1b2E.exit"
  %_10 = icmp ule i64 24, 9223372036854775807, !dbg !1925
  %5 = zext i1 %_10 to i8, !dbg !1924
  store i8 %5, ptr %_7, align 1, !dbg !1924
  br label %bb5, !dbg !1924

bb5:                                              ; preds = %bb3, %bb4
  %6 = load i8, ptr %_7, align 1, !dbg !1926, !range !212, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !1926
  %_6 = xor i1 %7, true, !dbg !1926
  br i1 %_6, label %bb6, label %bb7, !dbg !1926

bb7:                                              ; preds = %bb5
  %8 = ptrtoint ptr %self to i64, !dbg !1927
  %9 = ptrtoint ptr %origin to i64, !dbg !1927
  %10 = sub nuw i64 %8, %9, !dbg !1927
  %11 = udiv exact i64 %10, 24, !dbg !1927
  store i64 %11, ptr %0, align 8, !dbg !1927
  %12 = load i64, ptr %0, align 8, !dbg !1927, !noundef !24
  ret i64 %12, !dbg !1928

bb6:                                              ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_bb5ba7a338bdd5569ae85ad3deea92df, i64 73, ptr align 8 @alloc_59336975744c7e00b322ab83489cc670) #11, !dbg !1926
  unreachable, !dbg !1926
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h7b445c194d2af29dE"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !1929 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1932, metadata !DIExpression()), !dbg !1933
; call core::ptr::metadata::metadata
  %2 = call i64 @_ZN4core3ptr8metadata8metadata17hc1aa6460a717ef3dE(ptr %self.0, i64 %self.1) #10, !dbg !1934
  ret i64 %2, !dbg !1935
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1ecfccdfa8a3dcf6E"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !1936 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1940, metadata !DIExpression()), !dbg !1941
  ret ptr %self.0, !dbg !1942
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h08ad34a553a33f63E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !1943 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1951, metadata !DIExpression()), !dbg !1955
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1952, metadata !DIExpression()), !dbg !1956
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hfec816eab528aad6E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !1957
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !1957
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !1957
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !1958
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !1958
  ret { ptr, i64 } %7, !dbg !1958
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h3441dddc0c8eea40E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !1959 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1965, metadata !DIExpression()), !dbg !1967
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1966, metadata !DIExpression()), !dbg !1968
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h24a7347732aef70aE"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !1969
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !1969
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !1969
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !1970
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !1970
  ret { ptr, i64 } %5, !dbg !1970
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h510dd90ebd855d82E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid, ptr align 8 %1) unnamed_addr #0 !dbg !1971 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1980, metadata !DIExpression()), !dbg !1982
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !1981, metadata !DIExpression()), !dbg !1983
  %_4 = icmp ule i64 %mid, %self.1, !dbg !1984
  %_3 = xor i1 %_4, true, !dbg !1985
  br i1 %_3, label %bb1, label %bb2, !dbg !1985

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h3f6deb33b10d23aaE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) #10, !dbg !1986
  ret void, !dbg !1987

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_ac4f3d223bce7ffa9fb41b518dc7f04a, i64 35, ptr align 8 %1) #11, !dbg !1985
  unreachable, !dbg !1985
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !1988 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1992, metadata !DIExpression()), !dbg !1996
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1993, metadata !DIExpression()), !dbg !1997
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb02f824e656e53b8E"(i64 %index, ptr %self.0, i64 %self.1) #10, !dbg !1998
  ret ptr %_3, !dbg !1999
}

; core::slice::<impl [T]>::as_mut_ptr_range
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h367bf9c41ab67cbfE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2000 {
start:
  %self.dbg.spill.i4 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = alloca { ptr, ptr }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2010, metadata !DIExpression()), !dbg !2015
  store ptr %self.0, ptr %self.dbg.spill.i4, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i4, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !2016, metadata !DIExpression()), !dbg !2021
  store ptr %self.0, ptr %start.dbg.spill, align 8, !dbg !2023
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2011, metadata !DIExpression()), !dbg !2024
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !298, metadata !DIExpression()), !dbg !2025
  store i64 %self.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !304, metadata !DIExpression()), !dbg !2027
  store ptr %self.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !308, metadata !DIExpression()), !dbg !2028
  store i64 %self.1, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !313, metadata !DIExpression()), !dbg !2030
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %self.1, !dbg !2031
  store ptr %5, ptr %0, align 8, !dbg !2031
  %_3.i = load ptr, ptr %0, align 8, !dbg !2031, !noundef !24
  store ptr %_3.i, ptr %end.dbg.spill, align 8, !dbg !2032
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2013, metadata !DIExpression()), !dbg !2033
  store ptr %self.0, ptr %1, align 8, !dbg !2034
  %6 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !2034
  store ptr %_3.i, ptr %6, align 8, !dbg !2034
  %7 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0, !dbg !2035
  %8 = load ptr, ptr %7, align 8, !dbg !2035, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !2035
  %10 = load ptr, ptr %9, align 8, !dbg !2035, !noundef !24
  %11 = insertvalue { ptr, ptr } undef, ptr %8, 0, !dbg !2035
  %12 = insertvalue { ptr, ptr } %11, ptr %10, 1, !dbg !2035
  ret { ptr, ptr } %12, !dbg !2035
}

; core::slice::<impl [T]>::sort_unstable_by
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h031ffa24d38669c7E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2036 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_4 = alloca ptr, align 8
  %compare = alloca %"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]", align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2040, metadata !DIExpression()), !dbg !2044
  call void @llvm.dbg.declare(metadata ptr %compare, metadata !2041, metadata !DIExpression()), !dbg !2045
  store ptr %compare, ptr %_4, align 8, !dbg !2046
  %2 = load ptr, ptr %_4, align 8, !dbg !2047, !nonnull !24, !align !2048, !noundef !24
; call core::slice::sort::quicksort
  call void @_ZN4core5slice4sort9quicksort17h8a9ffd99e6bab11aE(ptr align 8 %self.0, i64 %self.1, ptr align 1 %2) #10, !dbg !2047
  ret void, !dbg !2049
}

; core::slice::<impl [T]>::sort_unstable_by::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2050 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  %_5 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2056, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2057
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2054, metadata !DIExpression()), !dbg !2058
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2055, metadata !DIExpression()), !dbg !2059
  %_8 = load ptr, ptr %_1, align 8, !dbg !2060, !nonnull !24, !align !2048, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2060
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2060
  store ptr %b, ptr %0, align 8, !dbg !2060
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2060
  %2 = load ptr, ptr %1, align 8, !dbg !2060, !nonnull !24, !align !510, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2060
  %4 = load ptr, ptr %3, align 8, !dbg !2060, !nonnull !24, !align !510, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %5 = call i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17hcdbd642f1a8e3b82E"(ptr align 1 %_8, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2060, !range !745
  store i8 %5, ptr %_5, align 1, !dbg !2060
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %6 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h028605ddb4c51453E"(ptr align 1 %_5, ptr align 1 @alloc_e9b05895811cc8f1a20d297db3c34a43) #10, !dbg !2060
  ret i1 %6, !dbg !2061
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h3f6deb33b10d23aaE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 !dbg !2062 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %mid.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i3 = alloca { ptr, i64 }, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2066, metadata !DIExpression()), !dbg !2072
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !2067, metadata !DIExpression()), !dbg !2073
  store i64 %self.1, ptr %len.dbg.spill, align 8, !dbg !2074
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2068, metadata !DIExpression()), !dbg !2075
  store ptr %self.0, ptr %self.dbg.spill.i3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i3, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !2016, metadata !DIExpression()), !dbg !2076
  store ptr %self.0, ptr %ptr.dbg.spill, align 8, !dbg !2078
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2070, metadata !DIExpression()), !dbg !2079
  store i64 %mid, ptr %_7, align 8, !dbg !2080
  %5 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !2080
  store i64 %self.1, ptr %5, align 8, !dbg !2080
  %6 = load i64, ptr %_7, align 8, !dbg !2080, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !2080
  %8 = load i64, ptr %7, align 8, !dbg !2080, !noundef !24
  store i64 %6, ptr %mid.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill.i, metadata !2081, metadata !DIExpression()), !dbg !2088
  store i64 %8, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2087, metadata !DIExpression()), !dbg !2088
  %_4.i = icmp ule i64 %6, %8, !dbg !2090
  %_3.i4 = xor i1 %_4.i, true, !dbg !2092
  br i1 %_3.i4, label %bb1.i, label %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h651179d681aba745E.exit", !dbg !2092

bb1.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_16dc63f8bc7e67d44de0aee890974f47, i64 104) #11, !dbg !2093
  unreachable, !dbg !2093

"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h651179d681aba745E.exit": ; preds = %start
; call core::slice::raw::from_raw_parts_mut
  %9 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6654d3baa6bb0397E(ptr %self.0, i64 %mid) #10, !dbg !2094
  %_9.0 = extractvalue { ptr, i64 } %9, 0, !dbg !2094
  %_9.1 = extractvalue { ptr, i64 } %9, 1, !dbg !2094
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !298, metadata !DIExpression()), !dbg !2095
  store i64 %mid, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !304, metadata !DIExpression()), !dbg !2097
  store ptr %self.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !308, metadata !DIExpression()), !dbg !2098
  store i64 %mid, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !313, metadata !DIExpression()), !dbg !2100
  %10 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %mid, !dbg !2101
  store ptr %10, ptr %1, align 8, !dbg !2101
  %_3.i = load ptr, ptr %1, align 8, !dbg !2101, !noundef !24
  %_16.0 = sub i64 %self.1, %mid, !dbg !2102
  %_16.1 = icmp ult i64 %self.1, %mid, !dbg !2102
  %11 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !2102
  br i1 %11, label %panic, label %bb5, !dbg !2102

bb5:                                              ; preds = %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h651179d681aba745E.exit"
; call core::slice::raw::from_raw_parts_mut
  %12 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6654d3baa6bb0397E(ptr %_3.i, i64 %_16.0) #10, !dbg !2103
  %_12.0 = extractvalue { ptr, i64 } %12, 0, !dbg !2103
  %_12.1 = extractvalue { ptr, i64 } %12, 1, !dbg !2103
  %13 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2104
  store ptr %_9.0, ptr %13, align 8, !dbg !2104
  %14 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2104
  store i64 %_9.1, ptr %14, align 8, !dbg !2104
  %15 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %0, i32 0, i32 1, !dbg !2104
  %16 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 0, !dbg !2104
  store ptr %_12.0, ptr %16, align 8, !dbg !2104
  %17 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 1, !dbg !2104
  store i64 %_12.1, ptr %17, align 8, !dbg !2104
  ret void, !dbg !2105

panic:                                            ; preds = %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h651179d681aba745E.exit"
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_5d294a602ce5a17755e37289ab68d465) #11, !dbg !2102
  unreachable, !dbg !2102
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17heee3b0195dddc17cE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2106 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2110, metadata !DIExpression()), !dbg !2111
; call core::slice::iter::Iter<T>::new
  %2 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8fe4de0b40b45dc1E"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2112
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !2112
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !2112
  %5 = insertvalue { ptr, ptr } undef, ptr %3, 0, !dbg !2113
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !2113
  ret { ptr, ptr } %6, !dbg !2113
}

; core::slice::<impl [T]>::swap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hfb1a6b474d31dd0dE"(ptr align 8 %self.0, i64 %self.1, i64 %a, i64 %b, ptr align 8 %0) unnamed_addr #0 !dbg !2114 {
start:
  %pb.dbg.spill = alloca ptr, align 8
  %pa.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2118, metadata !DIExpression()), !dbg !2125
  store i64 %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2119, metadata !DIExpression()), !dbg !2126
  store i64 %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2120, metadata !DIExpression()), !dbg !2127
  %_6 = icmp ult i64 %a, %self.1, !dbg !2128
  %3 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !2128
  br i1 %3, label %bb1, label %panic, !dbg !2128

bb1:                                              ; preds = %start
  %pa = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %a, !dbg !2129
  store ptr %pa, ptr %pa.dbg.spill, align 8, !dbg !2129
  call void @llvm.dbg.declare(metadata ptr %pa.dbg.spill, metadata !2121, metadata !DIExpression()), !dbg !2130
  %_9 = icmp ult i64 %b, %self.1, !dbg !2131
  %4 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !2131
  br i1 %4, label %bb2, label %panic1, !dbg !2131

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %a, i64 %self.1, ptr align 8 %0) #11, !dbg !2128
  unreachable, !dbg !2128

bb2:                                              ; preds = %bb1
  %pb = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %b, !dbg !2132
  store ptr %pb, ptr %pb.dbg.spill, align 8, !dbg !2132
  call void @llvm.dbg.declare(metadata ptr %pb.dbg.spill, metadata !2123, metadata !DIExpression()), !dbg !2133
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2af3b31cc01f7abcE(ptr %pa, ptr %pb) #10, !dbg !2134
  ret void, !dbg !2135

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %b, i64 %self.1, ptr align 8 %0) #11, !dbg !2131
  unreachable, !dbg !2131
}

; core::slice::<impl [T]>::reverse
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h8769afaba292f800E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2136 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %back_half.dbg.spill = alloca { ptr, i64 }, align 8
  %front_half.dbg.spill = alloca { ptr, i64 }, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %half_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_10 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2140, metadata !DIExpression()), !dbg !2149
  %half_len = udiv i64 %self.1, 2, !dbg !2150
  store i64 %half_len, ptr %half_len.dbg.spill, align 8, !dbg !2150
  call void @llvm.dbg.declare(metadata ptr %half_len.dbg.spill, metadata !2141, metadata !DIExpression()), !dbg !2151
; call core::slice::<impl [T]>::as_mut_ptr_range
  %3 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h367bf9c41ab67cbfE"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2152
  %_7.0 = extractvalue { ptr, ptr } %3, 0, !dbg !2152
  %_7.1 = extractvalue { ptr, ptr } %3, 1, !dbg !2152
  store ptr %_7.0, ptr %start.dbg.spill, align 8, !dbg !2153
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2143, metadata !DIExpression()), !dbg !2154
  store ptr %_7.1, ptr %end.dbg.spill, align 8, !dbg !2155
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2145, metadata !DIExpression()), !dbg !2156
; call core::slice::raw::from_raw_parts_mut
  %4 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6654d3baa6bb0397E(ptr %_7.0, i64 %half_len) #10, !dbg !2157
  %_11.0 = extractvalue { ptr, i64 } %4, 0, !dbg !2157
  %_11.1 = extractvalue { ptr, i64 } %4, 1, !dbg !2157
  store ptr %_7.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2158, metadata !DIExpression()), !dbg !2162
  store i64 %half_len, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2161, metadata !DIExpression()), !dbg !2164
  store i64 %half_len, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2165, metadata !DIExpression()), !dbg !2172
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2174, metadata !DIExpression()), !dbg !2180
  store i64 %half_len, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2179, metadata !DIExpression()), !dbg !2182
  %5 = sub i64 0, %half_len, !dbg !2183
  store ptr %_7.1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !308, metadata !DIExpression()), !dbg !2184
  store i64 %5, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !313, metadata !DIExpression()), !dbg !2186
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_7.1, i64 %5, !dbg !2187
  store ptr %6, ptr %0, align 8, !dbg !2187
  %_3.i = load ptr, ptr %0, align 8, !dbg !2187, !noundef !24
; call core::slice::raw::from_raw_parts_mut
  %7 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6654d3baa6bb0397E(ptr %_3.i, i64 %half_len) #10, !dbg !2188
  %_12.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2188
  %_12.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2188
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !2189
  store ptr %_11.0, ptr %8, align 8, !dbg !2189
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !2189
  store i64 %_11.1, ptr %9, align 8, !dbg !2189
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !2189
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2189
  store ptr %_12.0, ptr %11, align 8, !dbg !2189
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2189
  store i64 %_12.1, ptr %12, align 8, !dbg !2189
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !2190
  %front_half.0 = load ptr, ptr %13, align 8, !dbg !2190, !nonnull !24, !align !510, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !2190
  %front_half.1 = load i64, ptr %14, align 8, !dbg !2190, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 0, !dbg !2190
  store ptr %front_half.0, ptr %15, align 8, !dbg !2190
  %16 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 1, !dbg !2190
  store i64 %front_half.1, ptr %16, align 8, !dbg !2190
  call void @llvm.dbg.declare(metadata ptr %front_half.dbg.spill, metadata !2146, metadata !DIExpression()), !dbg !2191
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !2192
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2192
  %back_half.0 = load ptr, ptr %18, align 8, !dbg !2192, !nonnull !24, !align !510, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2192
  %back_half.1 = load i64, ptr %19, align 8, !dbg !2192, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 0, !dbg !2192
  store ptr %back_half.0, ptr %20, align 8, !dbg !2192
  %21 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 1, !dbg !2192
  store i64 %back_half.1, ptr %21, align 8, !dbg !2192
  call void @llvm.dbg.declare(metadata ptr %back_half.dbg.spill, metadata !2148, metadata !DIExpression()), !dbg !2193
; call core::slice::<impl [T]>::reverse::revswap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17hf8bf600a478b5065E"(ptr align 8 %front_half.0, i64 %front_half.1, ptr align 8 %back_half.0, i64 %back_half.1, i64 %half_len) #10, !dbg !2194
  ret void, !dbg !2195
}

; core::slice::<impl [T]>::reverse::revswap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17hf8bf600a478b5065E"(ptr align 8 %a.0, i64 %a.1, ptr align 8 %b.0, i64 %b.1, i64 %n) unnamed_addr #0 !dbg !2196 {
start:
  %b.dbg.spill6 = alloca { ptr, i64 }, align 8
  %a.dbg.spill3 = alloca { ptr, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %a.dbg.spill = alloca { ptr, i64 }, align 8
  %i = alloca i64, align 8
  %_22 = alloca i64, align 8
  %_19 = alloca i64, align 8
  %_16 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 0
  store ptr %a.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 1
  store i64 %a.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2201, metadata !DIExpression()), !dbg !2209
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2202, metadata !DIExpression()), !dbg !2210
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !2203, metadata !DIExpression()), !dbg !2211
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2207, metadata !DIExpression()), !dbg !2212
  %_5 = icmp eq i64 %a.1, %n, !dbg !2213
  %_4 = xor i1 %_5, true, !dbg !2214
  br i1 %_4, label %bb1, label %bb2, !dbg !2214

bb2:                                              ; preds = %start
  %_10 = icmp eq i64 %b.1, %n, !dbg !2215
  %_9 = xor i1 %_10, true, !dbg !2216
  br i1 %_9, label %bb3, label %bb4, !dbg !2216

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_a561e438276466e5df12dc2ee9037ac7, i64 30, ptr align 8 @alloc_deb1474422cb4e00a90f46c2893cd686) #11, !dbg !2214
  unreachable, !dbg !2214

bb4:                                              ; preds = %bb2
  store i64 %n, ptr %_19, align 8, !dbg !2217
  %4 = load i64, ptr %_19, align 8, !dbg !2218, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb8e723db52cf0423E"(ptr align 8 %a.0, i64 %a.1, i64 %4, ptr align 8 @alloc_73b66e6e6ef1f4f026a3a16459a93035) #10, !dbg !2218
  %_18.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2218
  %_18.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2218
  store i64 %n, ptr %_22, align 8, !dbg !2219
  %6 = load i64, ptr %_22, align 8, !dbg !2220, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %7 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb8e723db52cf0423E"(ptr align 8 %b.0, i64 %b.1, i64 %6, ptr align 8 @alloc_811b26e308c2c6ec2a288b2b160aac40) #10, !dbg !2220
  %_21.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2220
  %_21.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2220
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !2221
  store ptr %_18.0, ptr %8, align 8, !dbg !2221
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !2221
  store i64 %_18.1, ptr %9, align 8, !dbg !2221
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_16, i32 0, i32 1, !dbg !2221
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2221
  store ptr %_21.0, ptr %11, align 8, !dbg !2221
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2221
  store i64 %_21.1, ptr %12, align 8, !dbg !2221
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !2222
  %a.01 = load ptr, ptr %13, align 8, !dbg !2222, !nonnull !24, !align !510, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !2222
  %a.12 = load i64, ptr %14, align 8, !dbg !2222, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 0, !dbg !2222
  store ptr %a.01, ptr %15, align 8, !dbg !2222
  %16 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 1, !dbg !2222
  store i64 %a.12, ptr %16, align 8, !dbg !2222
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill3, metadata !2204, metadata !DIExpression()), !dbg !2223
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_16, i32 0, i32 1, !dbg !2224
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2224
  %b.04 = load ptr, ptr %18, align 8, !dbg !2224, !nonnull !24, !align !510, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2224
  %b.15 = load i64, ptr %19, align 8, !dbg !2224, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 0, !dbg !2224
  store ptr %b.04, ptr %20, align 8, !dbg !2224
  %21 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 1, !dbg !2224
  store i64 %b.15, ptr %21, align 8, !dbg !2224
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill6, metadata !2206, metadata !DIExpression()), !dbg !2225
  store i64 0, ptr %i, align 8, !dbg !2226
  br label %bb7, !dbg !2227

bb3:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_2b0983efa2ce17f757404c261b6508df, i64 30, ptr align 8 @alloc_de4d8e6e6022320cce882aa64e86143d) #11, !dbg !2216
  unreachable, !dbg !2216

bb7:                                              ; preds = %bb14, %bb4
  %_25 = load i64, ptr %i, align 8, !dbg !2228, !noundef !24
  %_24 = icmp ult i64 %_25, %n, !dbg !2228
  br i1 %_24, label %bb8, label %bb15, !dbg !2228

bb15:                                             ; preds = %bb7
  ret void, !dbg !2229

bb8:                                              ; preds = %bb7
  %_28 = load i64, ptr %i, align 8, !dbg !2230, !noundef !24
  %_30 = icmp ult i64 %_28, %a.12, !dbg !2231
  %22 = call i1 @llvm.expect.i1(i1 %_30, i1 true), !dbg !2231
  br i1 %22, label %bb9, label %panic, !dbg !2231

bb9:                                              ; preds = %bb8
  %_27 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %a.01, i64 0, i64 %_28, !dbg !2232
  %_34.0 = sub i64 %n, 1, !dbg !2233
  %_34.1 = icmp ult i64 %n, 1, !dbg !2233
  %23 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !2233
  br i1 %23, label %panic7, label %bb10, !dbg !2233

panic:                                            ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_28, i64 %a.12, ptr align 8 @alloc_944239dac115980e8ad324cb88c37bb6) #11, !dbg !2231
  unreachable, !dbg !2231

bb10:                                             ; preds = %bb9
  %_35 = load i64, ptr %i, align 8, !dbg !2234, !noundef !24
  %_36.0 = sub i64 %_34.0, %_35, !dbg !2233
  %_36.1 = icmp ult i64 %_34.0, %_35, !dbg !2233
  %24 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !2233
  br i1 %24, label %panic8, label %bb11, !dbg !2233

panic7:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_aad6ac8415f95f12b42b8dda073bb48d) #11, !dbg !2233
  unreachable, !dbg !2233

bb11:                                             ; preds = %bb10
  %_38 = icmp ult i64 %_36.0, %b.15, !dbg !2235
  %25 = call i1 @llvm.expect.i1(i1 %_38, i1 true), !dbg !2235
  br i1 %25, label %bb12, label %panic9, !dbg !2235

panic8:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_aad6ac8415f95f12b42b8dda073bb48d) #11, !dbg !2233
  unreachable, !dbg !2233

bb12:                                             ; preds = %bb11
  %_31 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %b.04, i64 0, i64 %_36.0, !dbg !2236
; call core::mem::swap
  call void @_ZN4core3mem4swap17hfd06fbd69cd1e95cE(ptr align 8 %_27, ptr align 8 %_31) #10, !dbg !2237
  %26 = load i64, ptr %i, align 8, !dbg !2238, !noundef !24
  %27 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %26, i64 1), !dbg !2238
  %_39.0 = extractvalue { i64, i1 } %27, 0, !dbg !2238
  %_39.1 = extractvalue { i64, i1 } %27, 1, !dbg !2238
  %28 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false), !dbg !2238
  br i1 %28, label %panic10, label %bb14, !dbg !2238

panic9:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_36.0, i64 %b.15, ptr align 8 @alloc_bf7bac295cefdb9d57cabecf7ac073ed) #11, !dbg !2235
  unreachable, !dbg !2235

bb14:                                             ; preds = %bb12
  store i64 %_39.0, ptr %i, align 8, !dbg !2238
  br label %bb7, !dbg !2227

panic10:                                          ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_01d251ffa3fdd203a0d15da7612aec55) #11, !dbg !2238
  unreachable, !dbg !2238
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6654d3baa6bb0397E(ptr %data, i64 %len) unnamed_addr #0 !dbg !2239 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !2245, metadata !DIExpression()), !dbg !2247
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2246, metadata !DIExpression()), !dbg !2248
  store ptr %data, ptr %_4, align 8, !dbg !2249
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !2249
  store i64 %len, ptr %0, align 8, !dbg !2249
  %1 = load ptr, ptr %_4, align 8, !dbg !2249, !noundef !24
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !2249
  %3 = load i64, ptr %2, align 8, !dbg !2249, !noundef !24
  store ptr %1, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !2250, metadata !DIExpression()), !dbg !2257
  store i64 %3, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2256, metadata !DIExpression()), !dbg !2257
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE(ptr %1) #10, !dbg !2259
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !2259

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !2259
  br label %bb3.i, !dbg !2259

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_valid_allocation_size
  %_7.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hb365c4273ba2c3adE(i64 %3) #10, !dbg !2261
  %4 = zext i1 %_7.i to i8, !dbg !2259
  store i8 %4, ptr %_4.i, align 1, !dbg !2259
  br label %bb3.i, !dbg !2259

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !2262, !range !212, !noundef !24
  %6 = trunc i8 %5 to i1, !dbg !2262
  %_3.i = xor i1 %6, true, !dbg !2262
  br i1 %_3.i, label %bb6.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17hd3684b07dc1ee6d3E.exit, !dbg !2262

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_eb29d283dadbfac1e0da90551ac8d261, i64 166) #11, !dbg !2263
  unreachable, !dbg !2263

_ZN4core5slice3raw18from_raw_parts_mut7runtime17hd3684b07dc1ee6d3E.exit: ; preds = %bb3.i
; call core::ptr::slice_from_raw_parts_mut
  %7 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h94970a4bfa2c5a79E(ptr %data, i64 %len) #10, !dbg !2264
  %_5.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2264
  %_5.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2264
  %8 = insertvalue { ptr, i64 } undef, ptr %_5.0, 0, !dbg !2265
  %9 = insertvalue { ptr, i64 } %8, i64 %_5.1, 1, !dbg !2265
  ret { ptr, i64 } %9, !dbg !2265
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8fe4de0b40b45dc1E"(ptr align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2266 {
start:
  %self.dbg.spill.i6 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca ptr, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %end = alloca ptr, align 8
  %2 = alloca { ptr, ptr }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !2269, metadata !DIExpression()), !dbg !2274
  call void @llvm.dbg.declare(metadata ptr %end, metadata !2272, metadata !DIExpression()), !dbg !2275
  store ptr %slice.0, ptr %self.dbg.spill.i6, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i6, i32 0, i32 1
  store i64 %slice.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !2276, metadata !DIExpression()), !dbg !2281
  store ptr %slice.0, ptr %ptr.dbg.spill, align 8, !dbg !2283
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2270, metadata !DIExpression()), !dbg !2284
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4aa6254734848f2bE"(ptr %slice.0) #10, !dbg !2285
  %_3 = xor i1 %_4, true, !dbg !2286
  call void @llvm.assume(i1 %_3), !dbg !2287
  br i1 false, label %bb3, label %bb4, !dbg !2288

bb4:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !217, metadata !DIExpression()), !dbg !2289
  store i64 %slice.1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !227, metadata !DIExpression()), !dbg !2291
  store ptr %slice.0, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !231, metadata !DIExpression()), !dbg !2292
  store i64 %slice.1, ptr %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i4, metadata !237, metadata !DIExpression()), !dbg !2294
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %slice.1, !dbg !2295
  store ptr %6, ptr %0, align 8, !dbg !2295
  %7 = load ptr, ptr %0, align 8, !dbg !2295, !noundef !24
  store ptr %7, ptr %end, align 8, !dbg !2296
  br label %bb5, !dbg !2296

bb3:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2297, metadata !DIExpression()), !dbg !2301
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2300, metadata !DIExpression()), !dbg !2303
  store ptr %slice.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !2304, metadata !DIExpression()), !dbg !2309
  store ptr %slice.0, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2311, metadata !DIExpression()), !dbg !2317
  store i64 %slice.1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !2316, metadata !DIExpression()), !dbg !2319
  store ptr %slice.0, ptr %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2.i, metadata !2320, metadata !DIExpression()), !dbg !2326
  store i64 %slice.1, ptr %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1.i, metadata !2325, metadata !DIExpression()), !dbg !2328
  %8 = getelementptr i8, ptr %slice.0, i64 %slice.1, !dbg !2329
  store ptr %8, ptr %1, align 8, !dbg !2329
  %9 = load ptr, ptr %1, align 8, !dbg !2329, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::with_metadata_of
  %10 = call ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h030bc1d33a4ae353E"(ptr %9, ptr %slice.0) #10, !dbg !2330
  store ptr %10, ptr %end, align 8, !dbg !2331
  br label %bb5, !dbg !2331

bb5:                                              ; preds = %bb4, %bb3
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_12 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h358a6220fe179556E"(ptr %slice.0) #10, !dbg !2332
  %_15 = load ptr, ptr %end, align 8, !dbg !2333, !noundef !24
  %11 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1, !dbg !2334
  store ptr %_12, ptr %11, align 8, !dbg !2334
  store ptr %_15, ptr %2, align 8, !dbg !2334
  %12 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0, !dbg !2335
  %13 = load ptr, ptr %12, align 8, !dbg !2335, !noundef !24
  %14 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1, !dbg !2335
  %15 = load ptr, ptr %14, align 8, !dbg !2335, !nonnull !24, !noundef !24
  %16 = insertvalue { ptr, ptr } undef, ptr %13, 0, !dbg !2335
  %17 = insertvalue { ptr, ptr } %16, ptr %15, 1, !dbg !2335
  ret { ptr, ptr } %17, !dbg !2335
}

; core::slice::sort::insert_head
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_head17hb00f1094bbc019a7E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2336 {
start:
  %self.dbg.spill.i30 = alloca ptr, align 8
  %self.dbg.spill.i29 = alloca ptr, align 8
  %self.dbg.spill.i28 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %count.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_47 = alloca ptr, align 8
  %_45 = alloca { ptr, ptr }, align 8
  %_39 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_35 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_18 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_9 = alloca { ptr, ptr }, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %6, align 8
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2341, metadata !DIExpression()), !dbg !2354
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2342, metadata !DIExpression()), !dbg !2355
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2345, metadata !DIExpression()), !dbg !2356
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2347, metadata !DIExpression()), !dbg !2357
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2349, metadata !DIExpression()), !dbg !2358
  %_4 = icmp uge i64 %v.1, 2, !dbg !2359
  %_3 = xor i1 %_4, true, !dbg !2360
  br i1 %_3, label %bb1, label %bb2, !dbg !2360

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::get_unchecked
  %_11 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %v.0, i64 %v.1, i64 1) #10, !dbg !2361
; call core::slice::<impl [T]>::get_unchecked
  %_14 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %v.0, i64 %v.1, i64 0) #10, !dbg !2362
  store ptr %_11, ptr %_9, align 8, !dbg !2363
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 1, !dbg !2363
  store ptr %_14, ptr %8, align 8, !dbg !2363
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 0, !dbg !2363
  %10 = load ptr, ptr %9, align 8, !dbg !2363, !nonnull !24, !align !510, !noundef !24
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 1, !dbg !2363
  %12 = load ptr, ptr %11, align 8, !dbg !2363, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_8 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %10, ptr align 8 %12) #10, !dbg !2363
  br i1 %_8, label %bb6, label %bb30, !dbg !2363

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_00b6f40daaa833578c32ba881b54269b, i64 30, ptr align 8 @alloc_6854ca22c1ff4b29e85edf658fa19473) #11, !dbg !2360
  unreachable, !dbg !2360

bb30:                                             ; preds = %bb29, %bb2
  ret void, !dbg !2364

bb6:                                              ; preds = %bb2
  store ptr %v.0, ptr %self.dbg.spill.i28, align 8
  %13 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i28, i32 0, i32 1
  store i64 %v.1, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !2016, metadata !DIExpression()), !dbg !2365
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2367
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2343, metadata !DIExpression()), !dbg !2368
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf5dd81a4047cd85dE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_18, ptr %v.0) #10, !dbg !2369
  call void @llvm.dbg.declare(metadata ptr %_18, metadata !1002, metadata !DIExpression()), !dbg !2370
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_18, i64 24, i1 false), !dbg !2372
  store ptr %tmp, ptr %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i30, metadata !2373, metadata !DIExpression()), !dbg !2380
  store ptr %v.0, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !298, metadata !DIExpression()), !dbg !2382
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !304, metadata !DIExpression()), !dbg !2384
  store ptr %v.0, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !308, metadata !DIExpression()), !dbg !2385
  store i64 1, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !313, metadata !DIExpression()), !dbg !2387
  %14 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2388
  store ptr %14, ptr %5, align 8, !dbg !2388
  %_3.i = load ptr, ptr %5, align 8, !dbg !2388, !noundef !24
  store ptr %tmp, ptr %hole, align 8, !dbg !2389
  %15 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2389
  store ptr %_3.i, ptr %15, align 8, !dbg !2389
  store ptr %v.0, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !298, metadata !DIExpression()), !dbg !2390
  store i64 1, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !304, metadata !DIExpression()), !dbg !2392
  store ptr %v.0, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !308, metadata !DIExpression()), !dbg !2393
  store i64 1, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !313, metadata !DIExpression()), !dbg !2395
  %16 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2396
  store ptr %16, ptr %4, align 8, !dbg !2396
  %_3.i15 = load ptr, ptr %4, align 8, !dbg !2396, !noundef !24
  store ptr %v.0, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !298, metadata !DIExpression()), !dbg !2397
  store i64 0, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !304, metadata !DIExpression()), !dbg !2399
  store ptr %v.0, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !308, metadata !DIExpression()), !dbg !2400
  store i64 0, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !313, metadata !DIExpression()), !dbg !2402
  store ptr %v.0, ptr %3, align 8, !dbg !2403
  %_3.i18 = load ptr, ptr %3, align 8, !dbg !2403, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %_3.i15, ptr %_3.i18, i64 1) #10, !dbg !2404
  store i64 2, ptr %_35, align 8, !dbg !2405
  %17 = getelementptr inbounds { i64, i64 }, ptr %_35, i32 0, i32 1, !dbg !2405
  store i64 %v.1, ptr %17, align 8, !dbg !2405
  %18 = getelementptr inbounds { i64, i64 }, ptr %_35, i32 0, i32 0, !dbg !2405
  %19 = load i64, ptr %18, align 8, !dbg !2405, !noundef !24
  %20 = getelementptr inbounds { i64, i64 }, ptr %_35, i32 0, i32 1, !dbg !2405
  %21 = load i64, ptr %20, align 8, !dbg !2405, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %22 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64 %19, i64 %21) #10, !dbg !2405
  %_34.0 = extractvalue { i64, i64 } %22, 0, !dbg !2405
  %_34.1 = extractvalue { i64, i64 } %22, 1, !dbg !2405
  %23 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2405
  store i64 %_34.0, ptr %23, align 8, !dbg !2405
  %24 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2405
  store i64 %_34.1, ptr %24, align 8, !dbg !2405
  br label %bb16, !dbg !2406

bb16:                                             ; preds = %bb25, %bb6
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %25 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8 %iter) #10, !dbg !2358
  store { i64, i64 } %25, ptr %_39, align 8, !dbg !2358
  %_41 = load i64, ptr %_39, align 8, !dbg !2358, !range !1059, !noundef !24
  %26 = icmp eq i64 %_41, 0, !dbg !2358
  br i1 %26, label %bb29, label %bb18, !dbg !2358

bb29:                                             ; preds = %bb18, %bb16
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hed262f49383e5c8cE"(ptr %hole) #10, !dbg !2407
  br label %bb30, !dbg !2407

bb18:                                             ; preds = %bb16
  %27 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 1, !dbg !2408
  %i = load i64, ptr %27, align 8, !dbg !2408, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2408
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2351, metadata !DIExpression()), !dbg !2409
; call core::slice::<impl [T]>::get_unchecked
  %28 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %v.0, i64 %v.1, i64 %i) #10, !dbg !2410
  store ptr %28, ptr %_47, align 8, !dbg !2410
  %_62 = load ptr, ptr %_47, align 8, !dbg !2411, !nonnull !24, !align !510, !noundef !24
  store ptr %tmp, ptr %self.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i29, metadata !2373, metadata !DIExpression()), !dbg !2412
  store ptr %_62, ptr %_45, align 8, !dbg !2414
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_45, i32 0, i32 1, !dbg !2414
  store ptr %tmp, ptr %29, align 8, !dbg !2414
  %30 = getelementptr inbounds { ptr, ptr }, ptr %_45, i32 0, i32 0, !dbg !2414
  %31 = load ptr, ptr %30, align 8, !dbg !2414, !nonnull !24, !align !510, !noundef !24
  %32 = getelementptr inbounds { ptr, ptr }, ptr %_45, i32 0, i32 1, !dbg !2414
  %33 = load ptr, ptr %32, align 8, !dbg !2414, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_44 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %31, ptr align 8 %33) #10, !dbg !2414
  %_43 = xor i1 %_44, true, !dbg !2415
  br i1 %_43, label %bb29, label %bb23, !dbg !2415

bb19:                                             ; No predecessors!
  unreachable, !dbg !2358

bb23:                                             ; preds = %bb18
  store ptr %v.0, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !298, metadata !DIExpression()), !dbg !2416
  store i64 %i, ptr %count.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i3, metadata !304, metadata !DIExpression()), !dbg !2418
  store ptr %v.0, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !308, metadata !DIExpression()), !dbg !2419
  store i64 %i, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !313, metadata !DIExpression()), !dbg !2421
  %34 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2422
  store ptr %34, ptr %2, align 8, !dbg !2422
  %_3.i21 = load ptr, ptr %2, align 8, !dbg !2422, !noundef !24
  %_59.0 = sub i64 %i, 1, !dbg !2423
  %_59.1 = icmp ult i64 %i, 1, !dbg !2423
  %35 = call i1 @llvm.expect.i1(i1 %_59.1, i1 false), !dbg !2423
  br i1 %35, label %panic, label %bb25, !dbg !2423

bb25:                                             ; preds = %bb23
  store ptr %v.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !298, metadata !DIExpression()), !dbg !2424
  store i64 %_59.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !304, metadata !DIExpression()), !dbg !2426
  store ptr %v.0, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !308, metadata !DIExpression()), !dbg !2427
  store i64 %_59.0, ptr %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i22, metadata !313, metadata !DIExpression()), !dbg !2429
  %36 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_59.0, !dbg !2430
  store ptr %36, ptr %1, align 8, !dbg !2430
  %_3.i24 = load ptr, ptr %1, align 8, !dbg !2430, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %_3.i21, ptr %_3.i24, i64 1) #10, !dbg !2431
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !298, metadata !DIExpression()), !dbg !2432
  store i64 %i, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !304, metadata !DIExpression()), !dbg !2434
  store ptr %v.0, ptr %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i26, metadata !308, metadata !DIExpression()), !dbg !2435
  store i64 %i, ptr %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i25, metadata !313, metadata !DIExpression()), !dbg !2437
  %37 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2438
  store ptr %37, ptr %0, align 8, !dbg !2438
  %_3.i27 = load ptr, ptr %0, align 8, !dbg !2438, !noundef !24
  %38 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2439
  store ptr %_3.i27, ptr %38, align 8, !dbg !2439
  br label %bb16, !dbg !2406

panic:                                            ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_f1698580964cd608ee66cd8009928f4d) #11, !dbg !2423
  unreachable, !dbg !2423
}

; core::slice::sort::insert_tail
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_tail17h7e21238243f0b54eE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2440 {
start:
  %self.dbg.spill.i24 = alloca ptr, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %self.dbg.spill.i22 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %rhs.dbg.spill.i.i6 = alloca i64, align 8
  %self.dbg.spill.i1.i7 = alloca i64, align 8
  %self.dbg.spill.i.i8 = alloca i64, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %j_ptr.dbg.spill = alloca ptr, align 8
  %j.dbg.spill = alloca i64, align 8
  %i_ptr.dbg.spill = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_50 = alloca { ptr, ptr }, align 8
  %_42 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_38 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_22 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_16 = alloca { ptr, ptr }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2442, metadata !DIExpression()), !dbg !2468
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2443, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2450, metadata !DIExpression()), !dbg !2470
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2452, metadata !DIExpression()), !dbg !2471
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2454, metadata !DIExpression()), !dbg !2472
  %_4 = icmp uge i64 %v.1, 2, !dbg !2473
  %_3 = xor i1 %_4, true, !dbg !2474
  br i1 %_3, label %bb1, label %bb2, !dbg !2474

bb2:                                              ; preds = %start
  store ptr %v.0, ptr %self.dbg.spill.i22, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i22, i32 0, i32 1
  store i64 %v.1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !2016, metadata !DIExpression()), !dbg !2475
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2477
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2444, metadata !DIExpression()), !dbg !2478
  %_12.0 = sub i64 %v.1, 1, !dbg !2479
  %_12.1 = icmp ult i64 %v.1, 1, !dbg !2479
  %7 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2479
  br i1 %7, label %panic, label %bb4, !dbg !2479

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_00b6f40daaa833578c32ba881b54269b, i64 30, ptr align 8 @alloc_f3590bc7ce241020d4a831f05900b436) #11, !dbg !2474
  unreachable, !dbg !2474

bb4:                                              ; preds = %bb2
  store i64 %_12.0, ptr %i.dbg.spill, align 8, !dbg !2479
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2446, metadata !DIExpression()), !dbg !2480
  store ptr %v.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !298, metadata !DIExpression()), !dbg !2481
  store i64 %_12.0, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !304, metadata !DIExpression()), !dbg !2483
  store ptr %v.0, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !308, metadata !DIExpression()), !dbg !2484
  store i64 %_12.0, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !313, metadata !DIExpression()), !dbg !2486
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_12.0, !dbg !2487
  store ptr %8, ptr %1, align 8, !dbg !2487
  %_3.i18 = load ptr, ptr %1, align 8, !dbg !2487, !noundef !24
  store ptr %_3.i18, ptr %i_ptr.dbg.spill, align 8, !dbg !2488
  call void @llvm.dbg.declare(metadata ptr %i_ptr.dbg.spill, metadata !2448, metadata !DIExpression()), !dbg !2489
  store ptr %_3.i18, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !2158, metadata !DIExpression()), !dbg !2490
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !2161, metadata !DIExpression()), !dbg !2492
  store i64 1, ptr %self.dbg.spill.i.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i8, metadata !2165, metadata !DIExpression()), !dbg !2493
  store i64 0, ptr %self.dbg.spill.i1.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i7, metadata !2174, metadata !DIExpression()), !dbg !2495
  store i64 1, ptr %rhs.dbg.spill.i.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i6, metadata !2179, metadata !DIExpression()), !dbg !2497
  store ptr %_3.i18, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !308, metadata !DIExpression()), !dbg !2498
  store i64 -1, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !313, metadata !DIExpression()), !dbg !2500
  %9 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_3.i18, i64 -1, !dbg !2501
  store ptr %9, ptr %3, align 8, !dbg !2501
  %_3.i = load ptr, ptr %3, align 8, !dbg !2501, !noundef !24
  store ptr %_3.i18, ptr %_16, align 8, !dbg !2502
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_16, i32 0, i32 1, !dbg !2502
  store ptr %_3.i, ptr %10, align 8, !dbg !2502
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_16, i32 0, i32 0, !dbg !2502
  %12 = load ptr, ptr %11, align 8, !dbg !2502, !nonnull !24, !align !510, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_16, i32 0, i32 1, !dbg !2502
  %14 = load ptr, ptr %13, align 8, !dbg !2502, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_15 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2502
  br i1 %_15, label %bb8, label %bb27, !dbg !2502

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_251f9655436dd42a6ca8f0354f234fd3) #11, !dbg !2479
  unreachable, !dbg !2479

bb27:                                             ; preds = %bb26, %bb4
  ret void, !dbg !2503

bb8:                                              ; preds = %bb4
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf5dd81a4047cd85dE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_22, ptr %_3.i18) #10, !dbg !2504
  call void @llvm.dbg.declare(metadata ptr %_22, metadata !1002, metadata !DIExpression()), !dbg !2505
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_22, i64 24, i1 false), !dbg !2507
  store ptr %tmp, ptr %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i24, metadata !2373, metadata !DIExpression()), !dbg !2508
  store ptr %_3.i18, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !2158, metadata !DIExpression()), !dbg !2510
  store i64 1, ptr %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i4, metadata !2161, metadata !DIExpression()), !dbg !2512
  store i64 1, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2165, metadata !DIExpression()), !dbg !2513
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2174, metadata !DIExpression()), !dbg !2515
  store i64 1, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2179, metadata !DIExpression()), !dbg !2517
  store ptr %_3.i18, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !308, metadata !DIExpression()), !dbg !2518
  store i64 -1, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !313, metadata !DIExpression()), !dbg !2520
  %15 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_3.i18, i64 -1, !dbg !2521
  store ptr %15, ptr %2, align 8, !dbg !2521
  %_3.i15 = load ptr, ptr %2, align 8, !dbg !2521, !noundef !24
  store ptr %tmp, ptr %hole, align 8, !dbg !2522
  %16 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2522
  store ptr %_3.i15, ptr %16, align 8, !dbg !2522
  %17 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2523
  %_34 = load ptr, ptr %17, align 8, !dbg !2523, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %_34, ptr %_3.i18, i64 1) #10, !dbg !2524
  %_40.0 = sub i64 %_12.0, 1, !dbg !2525
  %_40.1 = icmp ult i64 %_12.0, 1, !dbg !2525
  %18 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false), !dbg !2525
  br i1 %18, label %panic1, label %bb14, !dbg !2525

bb14:                                             ; preds = %bb8
  store i64 0, ptr %_38, align 8, !dbg !2526
  %19 = getelementptr inbounds { i64, i64 }, ptr %_38, i32 0, i32 1, !dbg !2526
  store i64 %_40.0, ptr %19, align 8, !dbg !2526
  %20 = getelementptr inbounds { i64, i64 }, ptr %_38, i32 0, i32 0, !dbg !2526
  %21 = load i64, ptr %20, align 8, !dbg !2526, !noundef !24
  %22 = getelementptr inbounds { i64, i64 }, ptr %_38, i32 0, i32 1, !dbg !2526
  %23 = load i64, ptr %22, align 8, !dbg !2526, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %24 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hedfd72d8da4be310E(i64 %21, i64 %23) #10, !dbg !2526
  %_37.0 = extractvalue { i64, i64 } %24, 0, !dbg !2526
  %_37.1 = extractvalue { i64, i64 } %24, 1, !dbg !2526
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %25 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h19a02a70245f0079E"(i64 %_37.0, i64 %_37.1) #10, !dbg !2526
  %_36.0 = extractvalue { i64, i64 } %25, 0, !dbg !2526
  %_36.1 = extractvalue { i64, i64 } %25, 1, !dbg !2526
  %26 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2526
  store i64 %_36.0, ptr %26, align 8, !dbg !2526
  %27 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2526
  store i64 %_36.1, ptr %27, align 8, !dbg !2526
  br label %bb17, !dbg !2527

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_fa862d1acd9e118fb8ded4e9bbffd0b7) #11, !dbg !2525
  unreachable, !dbg !2525

bb17:                                             ; preds = %bb24, %bb14
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %28 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf50e9e67c9edba3aE"(ptr align 8 %iter) #10, !dbg !2472
  store { i64, i64 } %28, ptr %_42, align 8, !dbg !2472
  %_44 = load i64, ptr %_42, align 8, !dbg !2472, !range !1059, !noundef !24
  %29 = icmp eq i64 %_44, 0, !dbg !2472
  br i1 %29, label %bb26, label %bb19, !dbg !2472

bb26:                                             ; preds = %bb19, %bb17
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hed262f49383e5c8cE"(ptr %hole) #10, !dbg !2528
  br label %bb27, !dbg !2528

bb19:                                             ; preds = %bb17
  %30 = getelementptr inbounds { i64, i64 }, ptr %_42, i32 0, i32 1, !dbg !2529
  %j = load i64, ptr %30, align 8, !dbg !2529, !noundef !24
  store i64 %j, ptr %j.dbg.spill, align 8, !dbg !2529
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !2464, metadata !DIExpression()), !dbg !2530
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !298, metadata !DIExpression()), !dbg !2531
  store i64 %j, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !304, metadata !DIExpression()), !dbg !2533
  store ptr %v.0, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !308, metadata !DIExpression()), !dbg !2534
  store i64 %j, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !313, metadata !DIExpression()), !dbg !2536
  %31 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %j, !dbg !2537
  store ptr %31, ptr %0, align 8, !dbg !2537
  %_3.i21 = load ptr, ptr %0, align 8, !dbg !2537, !noundef !24
  store ptr %_3.i21, ptr %j_ptr.dbg.spill, align 8, !dbg !2538
  call void @llvm.dbg.declare(metadata ptr %j_ptr.dbg.spill, metadata !2466, metadata !DIExpression()), !dbg !2539
  store ptr %tmp, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !2373, metadata !DIExpression()), !dbg !2540
  store ptr %tmp, ptr %_50, align 8, !dbg !2542
  %32 = getelementptr inbounds { ptr, ptr }, ptr %_50, i32 0, i32 1, !dbg !2542
  store ptr %_3.i21, ptr %32, align 8, !dbg !2542
  %33 = getelementptr inbounds { ptr, ptr }, ptr %_50, i32 0, i32 0, !dbg !2542
  %34 = load ptr, ptr %33, align 8, !dbg !2542, !nonnull !24, !align !510, !noundef !24
  %35 = getelementptr inbounds { ptr, ptr }, ptr %_50, i32 0, i32 1, !dbg !2542
  %36 = load ptr, ptr %35, align 8, !dbg !2542, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_49 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %34, ptr align 8 %36) #10, !dbg !2542
  %_48 = xor i1 %_49, true, !dbg !2543
  br i1 %_48, label %bb26, label %bb24, !dbg !2543

bb20:                                             ; No predecessors!
  unreachable, !dbg !2472

bb24:                                             ; preds = %bb19
  %37 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2544
  %_58 = load ptr, ptr %37, align 8, !dbg !2544, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %_3.i21, ptr %_58, i64 1) #10, !dbg !2545
  %38 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2546
  store ptr %_3.i21, ptr %38, align 8, !dbg !2546
  br label %bb17, !dbg !2527
}

; core::slice::sort::choose_pivot
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort12choose_pivot17h68c79886d4e1b0c8E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2547 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_38 = alloca { ptr, ptr, ptr }, align 8
  %_34 = alloca ptr, align 8
  %_30 = alloca ptr, align 8
  %_26 = alloca ptr, align 8
  %sort_adjacent = alloca ptr, align 8
  %sort3 = alloca ptr, align 8
  %sort2 = alloca %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", align 8
  %swaps = alloca i64, align 8
  %c = alloca i64, align 8
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2551, metadata !DIExpression()), !dbg !2584
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2552, metadata !DIExpression()), !dbg !2585
  call void @llvm.dbg.declare(metadata ptr %a, metadata !2555, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.declare(metadata ptr %b, metadata !2557, metadata !DIExpression()), !dbg !2587
  call void @llvm.dbg.declare(metadata ptr %c, metadata !2559, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.declare(metadata ptr %swaps, metadata !2561, metadata !DIExpression()), !dbg !2589
  call void @llvm.dbg.declare(metadata ptr %sort2, metadata !2563, metadata !DIExpression()), !dbg !2590
  call void @llvm.dbg.declare(metadata ptr %sort3, metadata !2572, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.declare(metadata ptr %sort_adjacent, metadata !2578, metadata !DIExpression()), !dbg !2592
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2593
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2553, metadata !DIExpression()), !dbg !2594
  %_6 = udiv i64 %v.1, 4, !dbg !2595
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_6, i64 1), !dbg !2595
  %_7.0 = extractvalue { i64, i1 } %3, 0, !dbg !2595
  %_7.1 = extractvalue { i64, i1 } %3, 1, !dbg !2595
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !2595
  br i1 %4, label %panic, label %bb1, !dbg !2595

bb1:                                              ; preds = %start
  store i64 %_7.0, ptr %a, align 8, !dbg !2595
  %_9 = udiv i64 %v.1, 4, !dbg !2596
  %5 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_9, i64 2), !dbg !2596
  %_10.0 = extractvalue { i64, i1 } %5, 0, !dbg !2596
  %_10.1 = extractvalue { i64, i1 } %5, 1, !dbg !2596
  %6 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !2596
  br i1 %6, label %panic1, label %bb2, !dbg !2596

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_e17d4ffc2b65fbd37220ec843cd22441) #11, !dbg !2595
  unreachable, !dbg !2595

bb2:                                              ; preds = %bb1
  store i64 %_10.0, ptr %b, align 8, !dbg !2596
  %_12 = udiv i64 %v.1, 4, !dbg !2597
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_12, i64 3), !dbg !2597
  %_13.0 = extractvalue { i64, i1 } %7, 0, !dbg !2597
  %_13.1 = extractvalue { i64, i1 } %7, 1, !dbg !2597
  %8 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !2597
  br i1 %8, label %panic2, label %bb3, !dbg !2597

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_fe569d326f83ed486b41a9c4bc0ee25e) #11, !dbg !2596
  unreachable, !dbg !2596

bb3:                                              ; preds = %bb2
  store i64 %_13.0, ptr %c, align 8, !dbg !2597
  store i64 0, ptr %swaps, align 8, !dbg !2598
  %_15 = icmp uge i64 %v.1, 8, !dbg !2599
  br i1 %_15, label %bb4, label %bb9, !dbg !2599

panic2:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_2f277c851c31292dad790275b8a5ccbf) #11, !dbg !2597
  unreachable, !dbg !2597

bb9:                                              ; preds = %bb8, %bb3
  %_43 = load i64, ptr %swaps, align 8, !dbg !2600, !noundef !24
  %_42 = icmp ult i64 %_43, 12, !dbg !2600
  br i1 %_42, label %bb10, label %bb11, !dbg !2600

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 1, !dbg !2601
  store ptr %is_less, ptr %9, align 8, !dbg !2601
  %10 = getelementptr inbounds { ptr, i64 }, ptr %sort2, i32 0, i32 0, !dbg !2601
  store ptr %v.0, ptr %10, align 8, !dbg !2601
  %11 = getelementptr inbounds { ptr, i64 }, ptr %sort2, i32 0, i32 1, !dbg !2601
  store i64 %v.1, ptr %11, align 8, !dbg !2601
  %12 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 2, !dbg !2601
  store ptr %swaps, ptr %12, align 8, !dbg !2601
  store ptr %sort2, ptr %sort3, align 8, !dbg !2602
  %_21 = icmp uge i64 %v.1, 50, !dbg !2603
  br i1 %_21, label %bb5, label %bb8, !dbg !2603

bb8:                                              ; preds = %bb5, %bb4
  store ptr %a, ptr %_38, align 8, !dbg !2604
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_38, i32 0, i32 1, !dbg !2604
  store ptr %b, ptr %13, align 8, !dbg !2604
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_38, i32 0, i32 2, !dbg !2604
  store ptr %c, ptr %14, align 8, !dbg !2604
  %15 = load ptr, ptr %_38, align 8, !dbg !2604, !nonnull !24, !align !510, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_38, i32 0, i32 1, !dbg !2604
  %17 = load ptr, ptr %16, align 8, !dbg !2604, !nonnull !24, !align !510, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_38, i32 0, i32 2, !dbg !2604
  %19 = load ptr, ptr %18, align 8, !dbg !2604, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hd88ff4efe2a136dfE"(ptr align 8 %sort3, ptr align 8 %15, ptr align 8 %17, ptr align 8 %19) #10, !dbg !2604
  br label %bb9, !dbg !2604

bb5:                                              ; preds = %bb4
  store ptr %sort3, ptr %sort_adjacent, align 8, !dbg !2605
  store ptr %a, ptr %_26, align 8, !dbg !2606
  %20 = load ptr, ptr %_26, align 8, !dbg !2606, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8a5e4999e87c02a4E"(ptr align 8 %sort_adjacent, ptr align 8 %20) #10, !dbg !2606
  store ptr %b, ptr %_30, align 8, !dbg !2607
  %21 = load ptr, ptr %_30, align 8, !dbg !2607, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8a5e4999e87c02a4E"(ptr align 8 %sort_adjacent, ptr align 8 %21) #10, !dbg !2607
  store ptr %c, ptr %_34, align 8, !dbg !2608
  %22 = load ptr, ptr %_34, align 8, !dbg !2608, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8a5e4999e87c02a4E"(ptr align 8 %sort_adjacent, ptr align 8 %22) #10, !dbg !2608
  br label %bb8, !dbg !2608

bb11:                                             ; preds = %bb9
; call core::slice::<impl [T]>::reverse
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h8769afaba292f800E"(ptr align 8 %v.0, i64 %v.1) #10, !dbg !2609
  %_50.0 = sub i64 %v.1, 1, !dbg !2610
  %_50.1 = icmp ult i64 %v.1, 1, !dbg !2610
  %23 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false), !dbg !2610
  br i1 %23, label %panic3, label %bb13, !dbg !2610

bb10:                                             ; preds = %bb9
  %_44 = load i64, ptr %b, align 8, !dbg !2611, !noundef !24
  %_46 = load i64, ptr %swaps, align 8, !dbg !2612, !noundef !24
  %_45 = icmp eq i64 %_46, 0, !dbg !2612
  store i64 %_44, ptr %0, align 8, !dbg !2613
  %24 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2613
  %25 = zext i1 %_45 to i8, !dbg !2613
  store i8 %25, ptr %24, align 8, !dbg !2613
  br label %bb15, !dbg !2614

bb15:                                             ; preds = %bb14, %bb10
  %26 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !2615
  %27 = load i64, ptr %26, align 8, !dbg !2615, !noundef !24
  %28 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2615
  %29 = load i8, ptr %28, align 8, !dbg !2615, !range !212, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !2615
  %31 = zext i1 %30 to i8, !dbg !2615
  %32 = insertvalue { i64, i8 } undef, i64 %27, 0, !dbg !2615
  %33 = insertvalue { i64, i8 } %32, i8 %31, 1, !dbg !2615
  ret { i64, i8 } %33, !dbg !2615

bb13:                                             ; preds = %bb11
  %_51 = load i64, ptr %b, align 8, !dbg !2616, !noundef !24
  %_52.0 = sub i64 %_50.0, %_51, !dbg !2610
  %_52.1 = icmp ult i64 %_50.0, %_51, !dbg !2610
  %34 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !2610
  br i1 %34, label %panic4, label %bb14, !dbg !2610

panic3:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_98f379435ee390d761d0d62cdcd5c923) #11, !dbg !2610
  unreachable, !dbg !2610

bb14:                                             ; preds = %bb13
  store i64 %_52.0, ptr %0, align 8, !dbg !2617
  %35 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2617
  store i8 1, ptr %35, align 8, !dbg !2617
  br label %bb15, !dbg !2614

panic4:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_98f379435ee390d761d0d62cdcd5c923) #11, !dbg !2610
  unreachable, !dbg !2610
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8a5e4999e87c02a4E"(ptr align 8 %_1, ptr align 8 %a) unnamed_addr #0 !dbg !2618 {
start:
  %tmp.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca i64, align 8
  %_5 = alloca { ptr, ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2624, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2627
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2623, metadata !DIExpression()), !dbg !2628
  %tmp = load i64, ptr %a, align 8, !dbg !2629, !noundef !24
  store i64 %tmp, ptr %tmp.dbg.spill, align 8, !dbg !2629
  call void @llvm.dbg.declare(metadata ptr %tmp.dbg.spill, metadata !2625, metadata !DIExpression()), !dbg !2630
  %_12 = load ptr, ptr %_1, align 8, !dbg !2631, !nonnull !24, !align !510, !noundef !24
  %_8.0 = sub i64 %tmp, 1, !dbg !2632
  %_8.1 = icmp ult i64 %tmp, 1, !dbg !2632
  %0 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2632
  br i1 %0, label %panic, label %bb1, !dbg !2632

bb1:                                              ; preds = %start
  store i64 %_8.0, ptr %_7, align 8, !dbg !2632
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %tmp, i64 1), !dbg !2633
  %_11.0 = extractvalue { i64, i1 } %1, 0, !dbg !2633
  %_11.1 = extractvalue { i64, i1 } %1, 1, !dbg !2633
  %2 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !2633
  br i1 %2, label %panic1, label %bb2, !dbg !2633

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_b0abc825f366de714652cb4403cd1dc0) #11, !dbg !2632
  unreachable, !dbg !2632

bb2:                                              ; preds = %bb1
  store i64 %_11.0, ptr %_10, align 8, !dbg !2633
  store ptr %_7, ptr %_5, align 8, !dbg !2631
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2631
  store ptr %a, ptr %3, align 8, !dbg !2631
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2631
  store ptr %_10, ptr %4, align 8, !dbg !2631
  %5 = load ptr, ptr %_5, align 8, !dbg !2631, !nonnull !24, !align !510, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2631
  %7 = load ptr, ptr %6, align 8, !dbg !2631, !nonnull !24, !align !510, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2631
  %9 = load ptr, ptr %8, align 8, !dbg !2631, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hd88ff4efe2a136dfE"(ptr align 8 %_12, ptr align 8 %5, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2631
  ret void, !dbg !2634

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_9dd09f52bcc60659466eba55032edc8d) #11, !dbg !2633
  unreachable, !dbg !2633
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8cc56def45354a4dE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2635 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2641, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 16, DW_OP_deref)), !dbg !2644
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2642, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2645
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2643, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 24, DW_OP_deref)), !dbg !2646
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2639, metadata !DIExpression()), !dbg !2647
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2640, metadata !DIExpression()), !dbg !2648
  %0 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 1, !dbg !2649
  %_16 = load ptr, ptr %0, align 8, !dbg !2649, !nonnull !24, !align !510, !noundef !24
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2650
  %_17.0 = load ptr, ptr %1, align 8, !dbg !2650, !nonnull !24, !align !510, !noundef !24
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2650
  %_17.1 = load i64, ptr %2, align 8, !dbg !2650, !noundef !24
  %_8 = load i64, ptr %b, align 8, !dbg !2651, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_7 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %_17.0, i64 %_17.1, i64 %_8) #10, !dbg !2650
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2652
  %_18.0 = load ptr, ptr %3, align 8, !dbg !2652, !nonnull !24, !align !510, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2652
  %_18.1 = load i64, ptr %4, align 8, !dbg !2652, !noundef !24
  %_11 = load i64, ptr %a, align 8, !dbg !2653, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_10 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %_18.0, i64 %_18.1, i64 %_11) #10, !dbg !2652
  store ptr %_7, ptr %_5, align 8, !dbg !2649
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2649
  store ptr %_10, ptr %5, align 8, !dbg !2649
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 0, !dbg !2649
  %7 = load ptr, ptr %6, align 8, !dbg !2649, !nonnull !24, !align !510, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2649
  %9 = load ptr, ptr %8, align 8, !dbg !2649, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %_16, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2649
  br i1 %_4, label %bb4, label %bb7, !dbg !2649

bb7:                                              ; preds = %bb6, %start
  ret void, !dbg !2654

bb4:                                              ; preds = %start
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h918312f0c5f20307E(ptr %a, ptr %b) #10, !dbg !2655
  %10 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2656
  %_19 = load ptr, ptr %10, align 8, !dbg !2656, !nonnull !24, !align !510, !noundef !24
  %11 = load i64, ptr %_19, align 8, !dbg !2656, !noundef !24
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %11, i64 1), !dbg !2656
  %_15.0 = extractvalue { i64, i1 } %12, 0, !dbg !2656
  %_15.1 = extractvalue { i64, i1 } %12, 1, !dbg !2656
  %13 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2656
  %_20 = load ptr, ptr %13, align 8, !dbg !2656, !nonnull !24, !align !510, !noundef !24
  %14 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !2656
  br i1 %14, label %panic, label %bb6, !dbg !2656

bb6:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2656
  %_21 = load ptr, ptr %15, align 8, !dbg !2656, !nonnull !24, !align !510, !noundef !24
  store i64 %_15.0, ptr %_21, align 8, !dbg !2656
  br label %bb7, !dbg !2657

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_e8eb684e395cde89550a1891c67c6a44) #11, !dbg !2656
  unreachable, !dbg !2656
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hd88ff4efe2a136dfE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b, ptr align 8 %c) unnamed_addr #0 !dbg !2658 {
start:
  %c.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca { ptr, ptr }, align 8
  %_8 = alloca { ptr, ptr }, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2665, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2666
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2662, metadata !DIExpression()), !dbg !2667
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2663, metadata !DIExpression()), !dbg !2668
  store ptr %c, ptr %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !2664, metadata !DIExpression()), !dbg !2669
  %_11 = load ptr, ptr %_1, align 8, !dbg !2670, !nonnull !24, !align !510, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2670
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2670
  store ptr %b, ptr %0, align 8, !dbg !2670
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2670
  %2 = load ptr, ptr %1, align 8, !dbg !2670, !nonnull !24, !align !510, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2670
  %4 = load ptr, ptr %3, align 8, !dbg !2670, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8cc56def45354a4dE"(ptr align 8 %_11, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2670
  %_12 = load ptr, ptr %_1, align 8, !dbg !2671, !nonnull !24, !align !510, !noundef !24
  store ptr %b, ptr %_8, align 8, !dbg !2671
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2671
  store ptr %c, ptr %5, align 8, !dbg !2671
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 0, !dbg !2671
  %7 = load ptr, ptr %6, align 8, !dbg !2671, !nonnull !24, !align !510, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2671
  %9 = load ptr, ptr %8, align 8, !dbg !2671, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8cc56def45354a4dE"(ptr align 8 %_12, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2671
  %_13 = load ptr, ptr %_1, align 8, !dbg !2672, !nonnull !24, !align !510, !noundef !24
  store ptr %a, ptr %_10, align 8, !dbg !2672
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2672
  store ptr %b, ptr %10, align 8, !dbg !2672
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2672
  %12 = load ptr, ptr %11, align 8, !dbg !2672, !nonnull !24, !align !510, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2672
  %14 = load ptr, ptr %13, align 8, !dbg !2672, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8cc56def45354a4dE"(ptr align 8 %_13, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2672
  ret void, !dbg !2673
}

; core::slice::sort::break_patterns
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort14break_patterns17hf8643adb856a1c34E(ptr align 8 %v.0, i64 %v.1) unnamed_addr #2 !dbg !2674 {
start:
  %i.dbg.spill = alloca i64, align 8
  %pos.dbg.spill = alloca i64, align 8
  %modulus.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %other = alloca i64, align 8
  %_15 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %gen_usize = alloca ptr, align 8
  %seed = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2676, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.declare(metadata ptr %seed, metadata !2679, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.declare(metadata ptr %gen_usize, metadata !2681, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2691, metadata !DIExpression()), !dbg !2700
  call void @llvm.dbg.declare(metadata ptr %other, metadata !2695, metadata !DIExpression()), !dbg !2701
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2702
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2677, metadata !DIExpression()), !dbg !2703
  %_4 = icmp uge i64 %v.1, 8, !dbg !2704
  br i1 %_4, label %bb1, label %bb16, !dbg !2704

bb16:                                             ; preds = %bb5, %start
  ret void, !dbg !2705

bb1:                                              ; preds = %start
  store i64 %v.1, ptr %seed, align 8, !dbg !2706
  store ptr %seed, ptr %gen_usize, align 8, !dbg !2707
; call core::num::<impl usize>::next_power_of_two
  %modulus = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17hee874ad4375dd456E"(i64 %v.1) #10, !dbg !2708
  store i64 %modulus, ptr %modulus.dbg.spill, align 8, !dbg !2708
  call void @llvm.dbg.declare(metadata ptr %modulus.dbg.spill, metadata !2687, metadata !DIExpression()), !dbg !2709
  %_10 = udiv i64 %v.1, 4, !dbg !2710
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2710
  %_11.0 = extractvalue { i64, i1 } %2, 0, !dbg !2710
  %_11.1 = extractvalue { i64, i1 } %2, 1, !dbg !2710
  %3 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !2710
  br i1 %3, label %panic, label %bb3, !dbg !2710

bb3:                                              ; preds = %bb1
  store i64 %_11.0, ptr %pos.dbg.spill, align 8, !dbg !2710
  call void @llvm.dbg.declare(metadata ptr %pos.dbg.spill, metadata !2689, metadata !DIExpression()), !dbg !2711
  store i64 0, ptr %_13, align 8, !dbg !2712
  %4 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !2712
  store i64 3, ptr %4, align 8, !dbg !2712
  %5 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 0, !dbg !2712
  %6 = load i64, ptr %5, align 8, !dbg !2712, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !2712
  %8 = load i64, ptr %7, align 8, !dbg !2712, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64 %6, i64 %8) #10, !dbg !2712
  %_12.0 = extractvalue { i64, i64 } %9, 0, !dbg !2712
  %_12.1 = extractvalue { i64, i64 } %9, 1, !dbg !2712
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2712
  store i64 %_12.0, ptr %10, align 8, !dbg !2712
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2712
  store i64 %_12.1, ptr %11, align 8, !dbg !2712
  br label %bb5, !dbg !2713

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_22c422242f351f89b5a830967c24444b) #11, !dbg !2710
  unreachable, !dbg !2710

bb5:                                              ; preds = %bb15, %bb3
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %12 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8 %iter) #10, !dbg !2700
  store { i64, i64 } %12, ptr %_15, align 8, !dbg !2700
  %_17 = load i64, ptr %_15, align 8, !dbg !2700, !range !1059, !noundef !24
  %13 = icmp eq i64 %_17, 0, !dbg !2700
  br i1 %13, label %bb16, label %bb7, !dbg !2700

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds { i64, i64 }, ptr %_15, i32 0, i32 1, !dbg !2714
  %i = load i64, ptr %14, align 8, !dbg !2714, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2714
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2693, metadata !DIExpression()), !dbg !2715
; call core::slice::sort::break_patterns::{{closure}}
  %_20 = call i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17he3339bb42c6e0e00E"(ptr align 8 %gen_usize) #10, !dbg !2716
  %_25.0 = sub i64 %modulus, 1, !dbg !2717
  %_25.1 = icmp ult i64 %modulus, 1, !dbg !2717
  %15 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false), !dbg !2717
  br i1 %15, label %panic1, label %bb10, !dbg !2717

bb8:                                              ; No predecessors!
  unreachable, !dbg !2700

bb10:                                             ; preds = %bb7
  %16 = and i64 %_20, %_25.0, !dbg !2716
  store i64 %16, ptr %other, align 8, !dbg !2716
  %_27 = load i64, ptr %other, align 8, !dbg !2718, !noundef !24
  %_26 = icmp uge i64 %_27, %v.1, !dbg !2718
  br i1 %_26, label %bb11, label %bb13, !dbg !2718

panic1:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_d4cc4dbebdbdf2575575e260dfd147eb) #11, !dbg !2717
  unreachable, !dbg !2717

bb13:                                             ; preds = %bb12, %bb10
  %_32.0 = sub i64 %_11.0, 1, !dbg !2719
  %_32.1 = icmp ult i64 %_11.0, 1, !dbg !2719
  %17 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !2719
  br i1 %17, label %panic3, label %bb14, !dbg !2719

bb11:                                             ; preds = %bb10
  %18 = load i64, ptr %other, align 8, !dbg !2720, !noundef !24
  %_28.0 = sub i64 %18, %v.1, !dbg !2720
  %_28.1 = icmp ult i64 %18, %v.1, !dbg !2720
  %19 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !2720
  br i1 %19, label %panic2, label %bb12, !dbg !2720

bb12:                                             ; preds = %bb11
  store i64 %_28.0, ptr %other, align 8, !dbg !2720
  br label %bb13, !dbg !2721

panic2:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2ee80aa5e2c7b28602cec54a7fb58afe) #11, !dbg !2720
  unreachable, !dbg !2720

bb14:                                             ; preds = %bb13
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_32.0, i64 %i), !dbg !2719
  %_33.0 = extractvalue { i64, i1 } %20, 0, !dbg !2719
  %_33.1 = extractvalue { i64, i1 } %20, 1, !dbg !2719
  %21 = call i1 @llvm.expect.i1(i1 %_33.1, i1 false), !dbg !2719
  br i1 %21, label %panic4, label %bb15, !dbg !2719

panic3:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2481e32a797a6a6d8cdccba86a9101f8) #11, !dbg !2719
  unreachable, !dbg !2719

bb15:                                             ; preds = %bb14
  %_34 = load i64, ptr %other, align 8, !dbg !2722, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hfb1a6b474d31dd0dE"(ptr align 8 %v.0, i64 %v.1, i64 %_33.0, i64 %_34, ptr align 8 @alloc_63307aa8dfaa70d58dc8578cc73e1e66) #10, !dbg !2723
  br label %bb5, !dbg !2723

panic4:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_2481e32a797a6a6d8cdccba86a9101f8) #11, !dbg !2719
  unreachable, !dbg !2719
}

; core::slice::sort::break_patterns::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17he3339bb42c6e0e00E"(ptr align 8 %_1) unnamed_addr #0 !dbg !2724 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  %r = alloca i64, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2729, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2734
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2732, metadata !DIExpression()), !dbg !2735
  %_15 = load ptr, ptr %_1, align 8, !dbg !2736, !nonnull !24, !align !510, !noundef !24
  %_4 = load i64, ptr %_15, align 8, !dbg !2736, !noundef !24
  store i64 %_4, ptr %r, align 8, !dbg !2736
  %_6 = load i64, ptr %r, align 8, !dbg !2737, !noundef !24
  %_7.0 = shl i64 %_6, 13, !dbg !2737
  %0 = load i64, ptr %r, align 8, !dbg !2738, !noundef !24
  %1 = xor i64 %0, %_7.0, !dbg !2738
  store i64 %1, ptr %r, align 8, !dbg !2738
  %_9 = load i64, ptr %r, align 8, !dbg !2739, !noundef !24
  %_10.0 = lshr i64 %_9, 7, !dbg !2739
  %2 = load i64, ptr %r, align 8, !dbg !2740, !noundef !24
  %3 = xor i64 %2, %_10.0, !dbg !2740
  store i64 %3, ptr %r, align 8, !dbg !2740
  %_12 = load i64, ptr %r, align 8, !dbg !2741, !noundef !24
  %_13.0 = shl i64 %_12, 17, !dbg !2741
  %4 = load i64, ptr %r, align 8, !dbg !2742, !noundef !24
  %5 = xor i64 %4, %_13.0, !dbg !2742
  store i64 %5, ptr %r, align 8, !dbg !2742
  %_14 = load i64, ptr %r, align 8, !dbg !2743, !noundef !24
  %_16 = load ptr, ptr %_1, align 8, !dbg !2744, !nonnull !24, !align !510, !noundef !24
  store i64 %_14, ptr %_16, align 8, !dbg !2744
  %_17 = load ptr, ptr %_1, align 8, !dbg !2745, !nonnull !24, !align !510, !noundef !24
  %6 = load i64, ptr %_17, align 8, !dbg !2745, !noundef !24
  ret i64 %6, !dbg !2746
}

; core::slice::sort::partition_equal
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort15partition_equal17hd09940ab2606d628E(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2747 {
start:
  %self.dbg.spill.i23 = alloca ptr, align 8
  %self.dbg.spill.i22 = alloca ptr, align 8
  %self.dbg.spill.i21 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i14 = alloca i64, align 8
  %self.dbg.spill.i15 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_44 = alloca { ptr, ptr }, align 8
  %_39 = alloca i8, align 1
  %_33 = alloca { ptr, ptr }, align 8
  %_27 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_13 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_7 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2751, metadata !DIExpression()), !dbg !2771
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2752, metadata !DIExpression()), !dbg !2772
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2753, metadata !DIExpression()), !dbg !2773
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2759, metadata !DIExpression()), !dbg !2774
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !2761, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2765, metadata !DIExpression()), !dbg !2776
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2767, metadata !DIExpression()), !dbg !2777
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hfb1a6b474d31dd0dE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_f6bed5e85d3d02917b18f4e03b55f967) #10, !dbg !2778
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h510dd90ebd855d82E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_7, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_9079ea652e0b859db4b95be3e591c986) #10, !dbg !2779
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !2780
  %pivot.0 = load ptr, ptr %4, align 8, !dbg !2780, !nonnull !24, !align !510, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !2780
  %pivot.1 = load i64, ptr %5, align 8, !dbg !2780, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !2780
  store ptr %pivot.0, ptr %6, align 8, !dbg !2780
  %7 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !2780
  store i64 %pivot.1, ptr %7, align 8, !dbg !2780
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !2754, metadata !DIExpression()), !dbg !2781
  %8 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !2782
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !2782
  %v.02 = load ptr, ptr %9, align 8, !dbg !2782, !nonnull !24, !align !510, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !2782
  %v.13 = load i64, ptr %10, align 8, !dbg !2782, !noundef !24
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !2782
  store ptr %v.02, ptr %11, align 8, !dbg !2782
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !2782
  store i64 %v.13, ptr %12, align 8, !dbg !2782
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !2756, metadata !DIExpression()), !dbg !2783
  %_11 = icmp ult i64 0, %pivot.1, !dbg !2784
  %13 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !2784
  br i1 %13, label %bb3, label %panic, !dbg !2784

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !2785
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !2785
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !2757, metadata !DIExpression()), !dbg !2786
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf5dd81a4047cd85dE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_13, ptr %pivot5) #10, !dbg !2787
  call void @llvm.dbg.declare(metadata ptr %_13, metadata !1002, metadata !DIExpression()), !dbg !2788
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_13, i64 24, i1 false), !dbg !2790
  store ptr %tmp, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !2373, metadata !DIExpression()), !dbg !2791
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !2793
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !2793
  store ptr %pivot5, ptr %14, align 8, !dbg !2793
  store ptr %tmp, ptr %self.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !2373, metadata !DIExpression()), !dbg !2794
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !2796
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !2763, metadata !DIExpression()), !dbg !2797
  store i64 0, ptr %l, align 8, !dbg !2798
  store i64 %v.13, ptr %r, align 8, !dbg !2799
  br label %bb8, !dbg !2800

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 0, i64 %pivot.1, ptr align 8 @alloc_fc6cd033ef0d9ecb628aa5fcbe6eb9d2) #11, !dbg !2784
  unreachable, !dbg !2784

bb8:                                              ; preds = %bb33, %bb15, %bb3
  %_29 = load i64, ptr %l, align 8, !dbg !2801, !noundef !24
  %_30 = load i64, ptr %r, align 8, !dbg !2802, !noundef !24
  %_28 = icmp ult i64 %_29, %_30, !dbg !2801
  br i1 %_28, label %bb10, label %bb9, !dbg !2801

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_27, align 1, !dbg !2801
  br label %bb11, !dbg !2801

bb10:                                             ; preds = %bb8
  %_37 = load i64, ptr %l, align 8, !dbg !2803, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_35 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %v.02, i64 %v.13, i64 %_37) #10, !dbg !2804
  store ptr %tmp, ptr %_33, align 8, !dbg !2805
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !2805
  store ptr %_35, ptr %15, align 8, !dbg !2805
  %16 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 0, !dbg !2805
  %17 = load ptr, ptr %16, align 8, !dbg !2805, !nonnull !24, !align !510, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !2805
  %19 = load ptr, ptr %18, align 8, !dbg !2805, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_32 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %17, ptr align 8 %19) #10, !dbg !2805
  %_31 = xor i1 %_32, true, !dbg !2806
  %20 = zext i1 %_31 to i8, !dbg !2801
  store i8 %20, ptr %_27, align 1, !dbg !2801
  br label %bb11, !dbg !2801

bb11:                                             ; preds = %bb9, %bb10
  %21 = load i8, ptr %_27, align 1, !dbg !2801, !range !212, !noundef !24
  %22 = trunc i8 %21 to i1, !dbg !2801
  br i1 %22, label %bb14, label %bb16, !dbg !2801

bb16:                                             ; preds = %bb24, %bb11
  %_41 = load i64, ptr %l, align 8, !dbg !2807, !noundef !24
  %_42 = load i64, ptr %r, align 8, !dbg !2808, !noundef !24
  %_40 = icmp ult i64 %_41, %_42, !dbg !2807
  br i1 %_40, label %bb18, label %bb17, !dbg !2807

bb14:                                             ; preds = %bb11
  %23 = load i64, ptr %l, align 8, !dbg !2809, !noundef !24
  %24 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %23, i64 1), !dbg !2809
  %_38.0 = extractvalue { i64, i1 } %24, 0, !dbg !2809
  %_38.1 = extractvalue { i64, i1 } %24, 1, !dbg !2809
  %25 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !2809
  br i1 %25, label %panic8, label %bb15, !dbg !2809

bb15:                                             ; preds = %bb14
  store i64 %_38.0, ptr %l, align 8, !dbg !2809
  br label %bb8, !dbg !2810

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_2a3802316915038e0680d78cab788aa9) #11, !dbg !2809
  unreachable, !dbg !2809

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_39, align 1, !dbg !2807
  br label %bb19, !dbg !2807

bb18:                                             ; preds = %bb16
  %_49 = load i64, ptr %r, align 8, !dbg !2811, !noundef !24
  %_50.0 = sub i64 %_49, 1, !dbg !2811
  %_50.1 = icmp ult i64 %_49, 1, !dbg !2811
  %26 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false), !dbg !2811
  br i1 %26, label %panic9, label %bb20, !dbg !2811

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_46 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %v.02, i64 %v.13, i64 %_50.0) #10, !dbg !2812
  store ptr %tmp, ptr %_44, align 8, !dbg !2813
  %27 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !2813
  store ptr %_46, ptr %27, align 8, !dbg !2813
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 0, !dbg !2813
  %29 = load ptr, ptr %28, align 8, !dbg !2813, !nonnull !24, !align !510, !noundef !24
  %30 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !2813
  %31 = load ptr, ptr %30, align 8, !dbg !2813, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_43 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %29, ptr align 8 %31) #10, !dbg !2813
  %32 = zext i1 %_43 to i8, !dbg !2807
  store i8 %32, ptr %_39, align 1, !dbg !2807
  br label %bb19, !dbg !2807

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_7af4a2b8ed9fa62b3bee6e126d16736a) #11, !dbg !2811
  unreachable, !dbg !2811

bb19:                                             ; preds = %bb17, %bb20
  %33 = load i8, ptr %_39, align 1, !dbg !2807, !range !212, !noundef !24
  %34 = trunc i8 %33 to i1, !dbg !2807
  br i1 %34, label %bb23, label %bb25, !dbg !2807

bb25:                                             ; preds = %bb19
  %_53 = load i64, ptr %l, align 8, !dbg !2814, !noundef !24
  %_54 = load i64, ptr %r, align 8, !dbg !2815, !noundef !24
  %_52 = icmp uge i64 %_53, %_54, !dbg !2814
  br i1 %_52, label %bb26, label %bb27, !dbg !2814

bb23:                                             ; preds = %bb19
  %35 = load i64, ptr %r, align 8, !dbg !2816, !noundef !24
  %_51.0 = sub i64 %35, 1, !dbg !2816
  %_51.1 = icmp ult i64 %35, 1, !dbg !2816
  %36 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false), !dbg !2816
  br i1 %36, label %panic10, label %bb24, !dbg !2816

bb24:                                             ; preds = %bb23
  store i64 %_51.0, ptr %r, align 8, !dbg !2816
  br label %bb16, !dbg !2817

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_3853b19179ca4e07adb5cfa49d1eace3) #11, !dbg !2816
  unreachable, !dbg !2816

bb27:                                             ; preds = %bb25
  %37 = load i64, ptr %r, align 8, !dbg !2818, !noundef !24
  %_55.0 = sub i64 %37, 1, !dbg !2818
  %_55.1 = icmp ult i64 %37, 1, !dbg !2818
  %38 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2818
  br i1 %38, label %panic12, label %bb28, !dbg !2818

bb26:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !2819, !noundef !24
  %39 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_65, i64 1), !dbg !2819
  %_66.0 = extractvalue { i64, i1 } %39, 0, !dbg !2819
  %_66.1 = extractvalue { i64, i1 } %39, 1, !dbg !2819
  %40 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !2819
  br i1 %40, label %panic11, label %bb34, !dbg !2819

bb34:                                             ; preds = %bb26
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hed262f49383e5c8cE"(ptr %_pivot_guard) #10, !dbg !2820
  ret i64 %_66.0, !dbg !2821

panic11:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0c85cb3bd77f623e57c5ca151bb4e2a4) #11, !dbg !2819
  unreachable, !dbg !2819

bb28:                                             ; preds = %bb27
  store i64 %_55.0, ptr %r, align 8, !dbg !2818
  store ptr %v.02, ptr %self.dbg.spill.i21, align 8
  %41 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i21, i32 0, i32 1
  store i64 %v.13, ptr %41, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i21, metadata !2016, metadata !DIExpression()), !dbg !2822
  store ptr %v.02, ptr %ptr.dbg.spill, align 8, !dbg !2824
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2769, metadata !DIExpression()), !dbg !2825
  %_60 = load i64, ptr %l, align 8, !dbg !2826, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i15, metadata !298, metadata !DIExpression()), !dbg !2827
  store i64 %_60, ptr %count.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i14, metadata !304, metadata !DIExpression()), !dbg !2829
  store ptr %v.02, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !308, metadata !DIExpression()), !dbg !2830
  store i64 %_60, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !313, metadata !DIExpression()), !dbg !2832
  %42 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_60, !dbg !2833
  store ptr %42, ptr %1, align 8, !dbg !2833
  %_3.i = load ptr, ptr %1, align 8, !dbg !2833, !noundef !24
  %_63 = load i64, ptr %r, align 8, !dbg !2834, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !298, metadata !DIExpression()), !dbg !2835
  store i64 %_63, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !304, metadata !DIExpression()), !dbg !2837
  store ptr %v.02, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !308, metadata !DIExpression()), !dbg !2838
  store i64 %_63, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !313, metadata !DIExpression()), !dbg !2840
  %43 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_63, !dbg !2841
  store ptr %43, ptr %0, align 8, !dbg !2841
  %_3.i20 = load ptr, ptr %0, align 8, !dbg !2841, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2af3b31cc01f7abcE(ptr %_3.i, ptr %_3.i20) #10, !dbg !2842
  %44 = load i64, ptr %l, align 8, !dbg !2843, !noundef !24
  %45 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %44, i64 1), !dbg !2843
  %_64.0 = extractvalue { i64, i1 } %45, 0, !dbg !2843
  %_64.1 = extractvalue { i64, i1 } %45, 1, !dbg !2843
  %46 = call i1 @llvm.expect.i1(i1 %_64.1, i1 false), !dbg !2843
  br i1 %46, label %panic13, label %bb33, !dbg !2843

panic12:                                          ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2034f022b1e18b3dbb9385e4cd132653) #11, !dbg !2818
  unreachable, !dbg !2818

bb33:                                             ; preds = %bb28
  store i64 %_64.0, ptr %l, align 8, !dbg !2843
  br label %bb8, !dbg !2800

panic13:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_f3edeead077d1e6008216d6b8c16e5ba) #11, !dbg !2843
  unreachable, !dbg !2843
}

; core::slice::sort::partition_in_blocks
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks17hf3e69fc4a3d42f73E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2844 {
start:
  %small.dbg.spill.i194 = alloca i8, align 1
  %small.dbg.spill.i193 = alloca i8, align 1
  %small.dbg.spill.i192 = alloca i8, align 1
  %small.dbg.spill.i191 = alloca i8, align 1
  %small.dbg.spill.i190 = alloca i8, align 1
  %small.dbg.spill.i189 = alloca i8, align 1
  %small.dbg.spill.i188 = alloca i8, align 1
  %small.dbg.spill.i187 = alloca i8, align 1
  %small.dbg.spill.i186 = alloca i8, align 1
  %small.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i185 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i184 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i183 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i182 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i181 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i180 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %addr.dbg.spill.i.i179 = alloca i64, align 8
  %1 = alloca ptr, align 8
  %addr.dbg.spill.i.i178 = alloca i64, align 8
  %2 = alloca ptr, align 8
  %addr.dbg.spill.i.i177 = alloca i64, align 8
  %3 = alloca ptr, align 8
  %addr.dbg.spill.i.i = alloca i64, align 8
  %4 = alloca ptr, align 8
  %count.dbg.spill.i174 = alloca i64, align 8
  %self.dbg.spill.i175 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %count.dbg.spill.i171 = alloca i64, align 8
  %self.dbg.spill.i172 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %count.dbg.spill.i168 = alloca i64, align 8
  %self.dbg.spill.i169 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %count.dbg.spill.i165 = alloca i64, align 8
  %self.dbg.spill.i166 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %count.dbg.spill.i162 = alloca i64, align 8
  %self.dbg.spill.i163 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %count.dbg.spill.i159 = alloca i64, align 8
  %self.dbg.spill.i160 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %count.dbg.spill.i156 = alloca i64, align 8
  %self.dbg.spill.i157 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %count.dbg.spill.i153 = alloca i64, align 8
  %self.dbg.spill.i154 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %count.dbg.spill.i150 = alloca i64, align 8
  %self.dbg.spill.i151 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %count.dbg.spill.i147 = alloca i64, align 8
  %self.dbg.spill.i148 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %count.dbg.spill.i144 = alloca i64, align 8
  %self.dbg.spill.i145 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %count.dbg.spill.i141 = alloca i64, align 8
  %self.dbg.spill.i142 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %count.dbg.spill.i138 = alloca i64, align 8
  %self.dbg.spill.i139 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %count.dbg.spill.i135 = alloca i64, align 8
  %self.dbg.spill.i136 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %count.dbg.spill.i132 = alloca i64, align 8
  %self.dbg.spill.i133 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %count.dbg.spill.i129 = alloca i64, align 8
  %self.dbg.spill.i130 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %count.dbg.spill.i126 = alloca i64, align 8
  %self.dbg.spill.i127 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %count.dbg.spill.i123 = alloca i64, align 8
  %self.dbg.spill.i124 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %count.dbg.spill.i120 = alloca i64, align 8
  %self.dbg.spill.i121 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %count.dbg.spill.i117 = alloca i64, align 8
  %self.dbg.spill.i118 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  %count.dbg.spill.i114 = alloca i64, align 8
  %self.dbg.spill.i115 = alloca ptr, align 8
  %25 = alloca ptr, align 8
  %count.dbg.spill.i111 = alloca i64, align 8
  %self.dbg.spill.i112 = alloca ptr, align 8
  %26 = alloca ptr, align 8
  %count.dbg.spill.i108 = alloca i64, align 8
  %self.dbg.spill.i109 = alloca ptr, align 8
  %27 = alloca ptr, align 8
  %count.dbg.spill.i105 = alloca i64, align 8
  %self.dbg.spill.i106 = alloca ptr, align 8
  %28 = alloca ptr, align 8
  %count.dbg.spill.i102 = alloca i64, align 8
  %self.dbg.spill.i103 = alloca ptr, align 8
  %29 = alloca ptr, align 8
  %count.dbg.spill.i100 = alloca i64, align 8
  %self.dbg.spill.i101 = alloca ptr, align 8
  %rhs.dbg.spill.i.i95 = alloca i64, align 8
  %self.dbg.spill.i1.i96 = alloca i64, align 8
  %self.dbg.spill.i.i97 = alloca i64, align 8
  %count.dbg.spill.i98 = alloca i64, align 8
  %self.dbg.spill.i99 = alloca ptr, align 8
  %rhs.dbg.spill.i.i90 = alloca i64, align 8
  %self.dbg.spill.i1.i91 = alloca i64, align 8
  %self.dbg.spill.i.i92 = alloca i64, align 8
  %count.dbg.spill.i93 = alloca i64, align 8
  %self.dbg.spill.i94 = alloca ptr, align 8
  %rhs.dbg.spill.i.i85 = alloca i64, align 8
  %self.dbg.spill.i1.i86 = alloca i64, align 8
  %self.dbg.spill.i.i87 = alloca i64, align 8
  %count.dbg.spill.i88 = alloca i64, align 8
  %self.dbg.spill.i89 = alloca ptr, align 8
  %rhs.dbg.spill.i.i80 = alloca i64, align 8
  %self.dbg.spill.i1.i81 = alloca i64, align 8
  %self.dbg.spill.i.i82 = alloca i64, align 8
  %count.dbg.spill.i83 = alloca i64, align 8
  %self.dbg.spill.i84 = alloca ptr, align 8
  %rhs.dbg.spill.i.i75 = alloca i64, align 8
  %self.dbg.spill.i1.i76 = alloca i64, align 8
  %self.dbg.spill.i.i77 = alloca i64, align 8
  %count.dbg.spill.i78 = alloca i64, align 8
  %self.dbg.spill.i79 = alloca ptr, align 8
  %rhs.dbg.spill.i.i70 = alloca i64, align 8
  %self.dbg.spill.i1.i71 = alloca i64, align 8
  %self.dbg.spill.i.i72 = alloca i64, align 8
  %count.dbg.spill.i73 = alloca i64, align 8
  %self.dbg.spill.i74 = alloca ptr, align 8
  %rhs.dbg.spill.i.i65 = alloca i64, align 8
  %self.dbg.spill.i1.i66 = alloca i64, align 8
  %self.dbg.spill.i.i67 = alloca i64, align 8
  %count.dbg.spill.i68 = alloca i64, align 8
  %self.dbg.spill.i69 = alloca ptr, align 8
  %rhs.dbg.spill.i.i60 = alloca i64, align 8
  %self.dbg.spill.i1.i61 = alloca i64, align 8
  %self.dbg.spill.i.i62 = alloca i64, align 8
  %count.dbg.spill.i63 = alloca i64, align 8
  %self.dbg.spill.i64 = alloca ptr, align 8
  %rhs.dbg.spill.i.i55 = alloca i64, align 8
  %self.dbg.spill.i1.i56 = alloca i64, align 8
  %self.dbg.spill.i.i57 = alloca i64, align 8
  %count.dbg.spill.i58 = alloca i64, align 8
  %self.dbg.spill.i59 = alloca ptr, align 8
  %rhs.dbg.spill.i.i50 = alloca i64, align 8
  %self.dbg.spill.i1.i51 = alloca i64, align 8
  %self.dbg.spill.i.i52 = alloca i64, align 8
  %count.dbg.spill.i53 = alloca i64, align 8
  %self.dbg.spill.i54 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i48 = alloca i64, align 8
  %self.dbg.spill.i49 = alloca ptr, align 8
  %count.dbg.spill.i46 = alloca i64, align 8
  %self.dbg.spill.i47 = alloca ptr, align 8
  %count.dbg.spill.i44 = alloca i64, align 8
  %self.dbg.spill.i45 = alloca ptr, align 8
  %count.dbg.spill.i42 = alloca i64, align 8
  %self.dbg.spill.i43 = alloca ptr, align 8
  %count.dbg.spill.i40 = alloca i64, align 8
  %self.dbg.spill.i41 = alloca ptr, align 8
  %count.dbg.spill.i38 = alloca i64, align 8
  %self.dbg.spill.i39 = alloca ptr, align 8
  %count.dbg.spill.i36 = alloca i64, align 8
  %self.dbg.spill.i37 = alloca ptr, align 8
  %count.dbg.spill.i34 = alloca i64, align 8
  %self.dbg.spill.i35 = alloca ptr, align 8
  %count.dbg.spill.i32 = alloca i64, align 8
  %self.dbg.spill.i33 = alloca ptr, align 8
  %count.dbg.spill.i30 = alloca i64, align 8
  %self.dbg.spill.i31 = alloca ptr, align 8
  %count.dbg.spill.i28 = alloca i64, align 8
  %self.dbg.spill.i29 = alloca ptr, align 8
  %count.dbg.spill.i26 = alloca i64, align 8
  %self.dbg.spill.i27 = alloca ptr, align 8
  %count.dbg.spill.i24 = alloca i64, align 8
  %self.dbg.spill.i25 = alloca ptr, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %count.dbg.spill.i20 = alloca i64, align 8
  %self.dbg.spill.i21 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %this.dbg.spill.i18 = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { ptr, i64 }, align 8
  %kind.dbg.spill16 = alloca i8, align 1
  %right_val.dbg.spill15 = alloca ptr, align 8
  %left_val.dbg.spill13 = alloca ptr, align 8
  %kind.dbg.spill = alloca i8, align 1
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %i.dbg.spill7 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %is_done.dbg.spill = alloca i8, align 1
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_253 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %_241 = alloca i64, align 8
  %_239 = alloca { ptr, ptr }, align 8
  %_219 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %_207 = alloca i64, align 8
  %_205 = alloca { ptr, ptr }, align 8
  %_185 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_144 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_141 = alloca { i64, i64 }, align 8
  %tmp = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_111 = alloca { ptr, ptr }, align 8
  %_101 = alloca { i64, i64 }, align 8
  %iter2 = alloca { i64, i64 }, align 8
  %_98 = alloca { i64, i64 }, align 8
  %elem1 = alloca ptr, align 8
  %_85 = alloca { ptr, ptr }, align 8
  %_76 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_73 = alloca { i64, i64 }, align 8
  %elem = alloca ptr, align 8
  %_48 = alloca i8, align 1
  %_27 = alloca i8, align 1
  %rem = alloca i64, align 8
  %offsets_r = alloca [128 x i8], align 1
  %end_r = alloca ptr, align 8
  %start_r = alloca ptr, align 8
  %block_r = alloca i64, align 8
  %r = alloca ptr, align 8
  %offsets_l = alloca [128 x i8], align 1
  %end_l = alloca ptr, align 8
  %start_l = alloca ptr, align 8
  %block_l = alloca i64, align 8
  %l = alloca ptr, align 8
  %32 = alloca i64, align 8
  %33 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %34, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2848, metadata !DIExpression()), !dbg !2919
  store ptr %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2849, metadata !DIExpression()), !dbg !2920
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2850, metadata !DIExpression()), !dbg !2921
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2851, metadata !DIExpression()), !dbg !2922
  call void @llvm.dbg.declare(metadata ptr %block_l, metadata !2853, metadata !DIExpression()), !dbg !2923
  call void @llvm.dbg.declare(metadata ptr %start_l, metadata !2855, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.declare(metadata ptr %end_l, metadata !2857, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.declare(metadata ptr %offsets_l, metadata !2859, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2871, metadata !DIExpression()), !dbg !2927
  call void @llvm.dbg.declare(metadata ptr %block_r, metadata !2873, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.declare(metadata ptr %start_r, metadata !2875, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.declare(metadata ptr %end_r, metadata !2877, metadata !DIExpression()), !dbg !2930
  call void @llvm.dbg.declare(metadata ptr %offsets_r, metadata !2879, metadata !DIExpression()), !dbg !2931
  call void @llvm.dbg.declare(metadata ptr %rem, metadata !2883, metadata !DIExpression()), !dbg !2932
  call void @llvm.dbg.declare(metadata ptr %elem, metadata !2885, metadata !DIExpression()), !dbg !2933
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2887, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.declare(metadata ptr %elem1, metadata !2891, metadata !DIExpression()), !dbg !2935
  call void @llvm.dbg.declare(metadata ptr %iter2, metadata !2893, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2899, metadata !DIExpression()), !dbg !2937
  call void @llvm.dbg.declare(metadata ptr %iter3, metadata !2901, metadata !DIExpression()), !dbg !2938
  store ptr %v.0, ptr %self.dbg.spill.i183, align 8
  %35 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i183, i32 0, i32 1
  store i64 %v.1, ptr %35, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i183, metadata !2016, metadata !DIExpression()), !dbg !2939
  store ptr %v.0, ptr %l, align 8, !dbg !2941
  store i64 128, ptr %block_l, align 8, !dbg !2942
  store i64 0, ptr %addr.dbg.spill.i.i179, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i179, metadata !2943, metadata !DIExpression()), !dbg !2948
  store i64 0, ptr %0, align 8, !dbg !2954
  %36 = load ptr, ptr %0, align 8, !dbg !2954, !noundef !24
; call core::ptr::metadata::from_raw_parts_mut
  %37 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3640d8a256ede84E(ptr %36) #10, !dbg !2955
  store ptr %37, ptr %start_l, align 8, !dbg !2956
  store i64 0, ptr %addr.dbg.spill.i.i178, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i178, metadata !2943, metadata !DIExpression()), !dbg !2957
  store i64 0, ptr %1, align 8, !dbg !2960
  %38 = load ptr, ptr %1, align 8, !dbg !2960, !noundef !24
; call core::ptr::metadata::from_raw_parts_mut
  %39 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3640d8a256ede84E(ptr %38) #10, !dbg !2961
  store ptr %39, ptr %end_l, align 8, !dbg !2962
  %40 = load i8, ptr %30, align 1, !dbg !2963
  %41 = getelementptr inbounds [128 x i8], ptr %offsets_l, i64 0, i64 0, !dbg !2968
  call void @llvm.memset.p0.i64(ptr align 1 %41, i8 %40, i64 128, i1 false), !dbg !2968
  %_11 = load ptr, ptr %l, align 8, !dbg !2969, !noundef !24
  store ptr %_11, ptr %self.dbg.spill.i47, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i47, metadata !298, metadata !DIExpression()), !dbg !2970
  store i64 %v.1, ptr %count.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i46, metadata !304, metadata !DIExpression()), !dbg !2972
  store ptr %_11, ptr %self.dbg.spill.i151, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i151, metadata !308, metadata !DIExpression()), !dbg !2973
  store i64 %v.1, ptr %count.dbg.spill.i150, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i150, metadata !313, metadata !DIExpression()), !dbg !2975
  %42 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %v.1, !dbg !2976
  store ptr %42, ptr %12, align 8, !dbg !2976
  %_3.i152 = load ptr, ptr %12, align 8, !dbg !2976, !noundef !24
  store ptr %_3.i152, ptr %r, align 8, !dbg !2969
  store i64 128, ptr %block_r, align 8, !dbg !2977
  store i64 0, ptr %addr.dbg.spill.i.i177, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i177, metadata !2943, metadata !DIExpression()), !dbg !2978
  store i64 0, ptr %2, align 8, !dbg !2981
  %43 = load ptr, ptr %2, align 8, !dbg !2981, !noundef !24
; call core::ptr::metadata::from_raw_parts_mut
  %44 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3640d8a256ede84E(ptr %43) #10, !dbg !2982
  store ptr %44, ptr %start_r, align 8, !dbg !2983
  store i64 0, ptr %addr.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i, metadata !2943, metadata !DIExpression()), !dbg !2984
  store i64 0, ptr %3, align 8, !dbg !2987
  %45 = load ptr, ptr %3, align 8, !dbg !2987, !noundef !24
; call core::ptr::metadata::from_raw_parts_mut
  %46 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3640d8a256ede84E(ptr %45) #10, !dbg !2988
  store ptr %46, ptr %end_r, align 8, !dbg !2989
  %47 = load i8, ptr %31, align 1, !dbg !2990
  %48 = getelementptr inbounds [128 x i8], ptr %offsets_r, i64 0, i64 0, !dbg !2992
  call void @llvm.memset.p0.i64(ptr align 1 %48, i8 %47, i64 128, i1 false), !dbg !2992
  br label %bb9, !dbg !2993

bb9:                                              ; preds = %bb101, %start
  %_21 = load ptr, ptr %l, align 8, !dbg !2994, !noundef !24
  %_22 = load ptr, ptr %r, align 8, !dbg !2995, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_20 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E(ptr %_21, ptr %_22) #10, !dbg !2996
  %is_done = icmp ule i64 %_20, 256, !dbg !2996
  %49 = zext i1 %is_done to i8, !dbg !2996
  store i8 %49, ptr %is_done.dbg.spill, align 1, !dbg !2996
  call void @llvm.dbg.declare(metadata ptr %is_done.dbg.spill, metadata !2881, metadata !DIExpression()), !dbg !2997
  br i1 %is_done, label %bb11, label %bb33, !dbg !2998

bb33:                                             ; preds = %bb31, %bb9
  %_65 = load ptr, ptr %start_l, align 8, !dbg !2999, !noundef !24
  %_66 = load ptr, ptr %end_l, align 8, !dbg !3000, !noundef !24
  %_64 = icmp eq ptr %_65, %_66, !dbg !2999
  br i1 %_64, label %bb34, label %bb44, !dbg !2999

bb11:                                             ; preds = %bb9
  %_25 = load ptr, ptr %l, align 8, !dbg !3001, !noundef !24
  %_26 = load ptr, ptr %r, align 8, !dbg !3002, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %50 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E(ptr %_25, ptr %_26) #10, !dbg !3003
  store i64 %50, ptr %rem, align 8, !dbg !3003
  %_29 = load ptr, ptr %start_l, align 8, !dbg !3004, !noundef !24
  %_30 = load ptr, ptr %end_l, align 8, !dbg !3005, !noundef !24
  %_28 = icmp ult ptr %_29, %_30, !dbg !3004
  br i1 %_28, label %bb13, label %bb14, !dbg !3004

bb14:                                             ; preds = %bb11
  %_32 = load ptr, ptr %start_r, align 8, !dbg !3006, !noundef !24
  %_33 = load ptr, ptr %end_r, align 8, !dbg !3007, !noundef !24
  %_31 = icmp ult ptr %_32, %_33, !dbg !3006
  %51 = zext i1 %_31 to i8, !dbg !3004
  store i8 %51, ptr %_27, align 1, !dbg !3004
  br label %bb15, !dbg !3004

bb13:                                             ; preds = %bb11
  store i8 1, ptr %_27, align 1, !dbg !3004
  br label %bb15, !dbg !3004

bb15:                                             ; preds = %bb14, %bb13
  %52 = load i8, ptr %_27, align 1, !dbg !3004, !range !212, !noundef !24
  %53 = trunc i8 %52 to i1, !dbg !3004
  br i1 %53, label %bb16, label %bb18, !dbg !3004

bb18:                                             ; preds = %bb17, %bb15
  %_36 = load ptr, ptr %start_l, align 8, !dbg !3008, !noundef !24
  %_37 = load ptr, ptr %end_l, align 8, !dbg !3009, !noundef !24
  %_35 = icmp ult ptr %_36, %_37, !dbg !3008
  br i1 %_35, label %bb19, label %bb20, !dbg !3008

bb16:                                             ; preds = %bb15
  %54 = load i64, ptr %rem, align 8, !dbg !3010, !noundef !24
  %_34.0 = sub i64 %54, 128, !dbg !3010
  %_34.1 = icmp ult i64 %54, 128, !dbg !3010
  %55 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !3010
  br i1 %55, label %panic, label %bb17, !dbg !3010

bb17:                                             ; preds = %bb16
  store i64 %_34.0, ptr %rem, align 8, !dbg !3010
  br label %bb18, !dbg !3011

panic:                                            ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_5a3fbd37a1800403b0e9352f6f1c62fd) #11, !dbg !3010
  unreachable, !dbg !3010

bb20:                                             ; preds = %bb18
  %_40 = load ptr, ptr %start_r, align 8, !dbg !3012, !noundef !24
  %_41 = load ptr, ptr %end_r, align 8, !dbg !3013, !noundef !24
  %_39 = icmp ult ptr %_40, %_41, !dbg !3012
  br i1 %_39, label %bb21, label %bb22, !dbg !3012

bb19:                                             ; preds = %bb18
  %_38 = load i64, ptr %rem, align 8, !dbg !3014, !noundef !24
  store i64 %_38, ptr %block_r, align 8, !dbg !3015
  br label %bb24, !dbg !3016

bb24:                                             ; preds = %bb23, %bb21, %bb19
  %_50 = load i64, ptr %block_l, align 8, !dbg !3017, !noundef !24
  %_49 = icmp ule i64 %_50, 128, !dbg !3017
  br i1 %_49, label %bb26, label %bb25, !dbg !3017

bb22:                                             ; preds = %bb20
  %_43 = load i64, ptr %rem, align 8, !dbg !3018, !noundef !24
  %56 = udiv i64 %_43, 2, !dbg !3019
  store i64 %56, ptr %block_l, align 8, !dbg !3019
  %_44 = load i64, ptr %rem, align 8, !dbg !3020, !noundef !24
  %_45 = load i64, ptr %block_l, align 8, !dbg !3021, !noundef !24
  %_46.0 = sub i64 %_44, %_45, !dbg !3020
  %_46.1 = icmp ult i64 %_44, %_45, !dbg !3020
  %57 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3020
  br i1 %57, label %panic4, label %bb23, !dbg !3020

bb21:                                             ; preds = %bb20
  %_42 = load i64, ptr %rem, align 8, !dbg !3022, !noundef !24
  store i64 %_42, ptr %block_l, align 8, !dbg !3023
  br label %bb24, !dbg !3024

bb23:                                             ; preds = %bb22
  store i64 %_46.0, ptr %block_r, align 8, !dbg !3025
  br label %bb24, !dbg !3024

panic4:                                           ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_a925e1d3976aff4911f54018ff03cd28) #11, !dbg !3020
  unreachable, !dbg !3020

bb25:                                             ; preds = %bb24
  store i8 0, ptr %_48, align 1, !dbg !3017
  br label %bb27, !dbg !3017

bb26:                                             ; preds = %bb24
  %_52 = load i64, ptr %block_r, align 8, !dbg !3026, !noundef !24
  %_51 = icmp ule i64 %_52, 128, !dbg !3026
  %58 = zext i1 %_51 to i8, !dbg !3017
  store i8 %58, ptr %_48, align 1, !dbg !3017
  br label %bb27, !dbg !3017

bb27:                                             ; preds = %bb25, %bb26
  %59 = load i8, ptr %_48, align 1, !dbg !3027, !range !212, !noundef !24
  %60 = trunc i8 %59 to i1, !dbg !3027
  %_47 = xor i1 %60, true, !dbg !3027
  br i1 %_47, label %bb28, label %bb29, !dbg !3027

bb29:                                             ; preds = %bb27
  %_57 = load ptr, ptr %l, align 8, !dbg !3028, !noundef !24
  %_58 = load ptr, ptr %r, align 8, !dbg !3029, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_56 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E(ptr %_57, ptr %_58) #10, !dbg !3030
  %_60 = load i64, ptr %block_l, align 8, !dbg !3031, !noundef !24
  %_61 = load i64, ptr %block_r, align 8, !dbg !3032, !noundef !24
  %61 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_60, i64 %_61), !dbg !3031
  %_62.0 = extractvalue { i64, i1 } %61, 0, !dbg !3031
  %_62.1 = extractvalue { i64, i1 } %61, 1, !dbg !3031
  %62 = call i1 @llvm.expect.i1(i1 %_62.1, i1 false), !dbg !3031
  br i1 %62, label %panic5, label %bb31, !dbg !3031

bb28:                                             ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_ceb89d5182fee5b458bee065ff593fff, i64 54, ptr align 8 @alloc_c9129f532e2b4d7b9be8f0d9add2f551) #11, !dbg !3027
  unreachable, !dbg !3027

bb31:                                             ; preds = %bb29
  %_55 = icmp eq i64 %_56, %_62.0, !dbg !3030
  %_54 = xor i1 %_55, true, !dbg !3033
  br i1 %_54, label %bb32, label %bb33, !dbg !3033

panic5:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0bff3126ea305b417c182e891e2d065d) #11, !dbg !3031
  unreachable, !dbg !3031

bb32:                                             ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_3dea5a8c375fadb5cd67952461229502, i64 50, ptr align 8 @alloc_cd7a4b7fd97c82d97355b5af9df817bc) #11, !dbg !3033
  unreachable, !dbg !3033

bb44:                                             ; preds = %bb37, %bb33
  %_90 = load ptr, ptr %start_r, align 8, !dbg !3034, !noundef !24
  %_91 = load ptr, ptr %end_r, align 8, !dbg !3035, !noundef !24
  %_89 = icmp eq ptr %_90, %_91, !dbg !3034
  br i1 %_89, label %bb45, label %bb55, !dbg !3034

bb34:                                             ; preds = %bb33
  store ptr %offsets_l, ptr %this.dbg.spill.i18, align 8
  %63 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i18, i32 0, i32 1
  store i64 128, ptr %63, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i18, metadata !3036, metadata !DIExpression()), !dbg !3046
  store ptr %offsets_l, ptr %self.dbg.spill.i184, align 8
  %64 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i184, i32 0, i32 1
  store i64 128, ptr %64, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i184, metadata !3048, metadata !DIExpression()), !dbg !3056
  store ptr %offsets_l, ptr %start_l, align 8, !dbg !3058
  %_70 = load ptr, ptr %start_l, align 8, !dbg !3059, !noundef !24
  store ptr %_70, ptr %end_l, align 8, !dbg !3060
  %65 = load ptr, ptr %l, align 8, !dbg !3061, !noundef !24
  store ptr %65, ptr %elem, align 8, !dbg !3061
  %_74 = load i64, ptr %block_l, align 8, !dbg !3062, !noundef !24
  store i64 0, ptr %_73, align 8, !dbg !3063
  %66 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 1, !dbg !3063
  store i64 %_74, ptr %66, align 8, !dbg !3063
  %67 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 0, !dbg !3063
  %68 = load i64, ptr %67, align 8, !dbg !3063, !noundef !24
  %69 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 1, !dbg !3063
  %70 = load i64, ptr %69, align 8, !dbg !3063, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %71 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64 %68, i64 %70) #10, !dbg !3063
  %_72.0 = extractvalue { i64, i64 } %71, 0, !dbg !3063
  %_72.1 = extractvalue { i64, i64 } %71, 1, !dbg !3063
  %72 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3063
  store i64 %_72.0, ptr %72, align 8, !dbg !3063
  %73 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3063
  store i64 %_72.1, ptr %73, align 8, !dbg !3063
  br label %bb37, !dbg !3064

bb37:                                             ; preds = %bb39, %bb34
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %74 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8 %iter) #10, !dbg !2934
  store { i64, i64 } %74, ptr %_76, align 8, !dbg !2934
  %_78 = load i64, ptr %_76, align 8, !dbg !2934, !range !1059, !noundef !24
  %75 = icmp eq i64 %_78, 0, !dbg !2934
  br i1 %75, label %bb44, label %bb39, !dbg !2934

bb39:                                             ; preds = %bb37
  %76 = getelementptr inbounds { i64, i64 }, ptr %_76, i32 0, i32 1, !dbg !3065
  %i = load i64, ptr %76, align 8, !dbg !3065, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3065
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2889, metadata !DIExpression()), !dbg !3066
  %77 = load ptr, ptr %end_l, align 8, !dbg !3067, !noundef !24
  %78 = trunc i64 %i to i8, !dbg !3067
  store i8 %78, ptr %77, align 1, !dbg !3067
  %_81 = load ptr, ptr %end_l, align 8, !dbg !3068, !noundef !24
  %_86 = load ptr, ptr %elem, align 8, !dbg !3069, !noundef !24
  store ptr %_86, ptr %_85, align 8, !dbg !3070
  %79 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 1, !dbg !3070
  store ptr %pivot, ptr %79, align 8, !dbg !3070
  %80 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 0, !dbg !3070
  %81 = load ptr, ptr %80, align 8, !dbg !3070, !nonnull !24, !align !510, !noundef !24
  %82 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 1, !dbg !3070
  %83 = load ptr, ptr %82, align 8, !dbg !3070, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_84 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %81, ptr align 8 %83) #10, !dbg !3070
  %_83 = xor i1 %_84, true, !dbg !3071
  %_82 = zext i1 %_83 to i64, !dbg !3071
  store ptr %_81, ptr %self.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i29, metadata !3072, metadata !DIExpression()), !dbg !3078
  store i64 %_82, ptr %count.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i28, metadata !3077, metadata !DIExpression()), !dbg !3080
  store ptr %_81, ptr %self.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i106, metadata !3081, metadata !DIExpression()), !dbg !3087
  store i64 %_82, ptr %count.dbg.spill.i105, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i105, metadata !3086, metadata !DIExpression()), !dbg !3089
  %84 = getelementptr inbounds i8, ptr %_81, i64 %_82, !dbg !3090
  store ptr %84, ptr %27, align 8, !dbg !3090
  %_3.i107 = load ptr, ptr %27, align 8, !dbg !3090, !noundef !24
  store ptr %_3.i107, ptr %end_l, align 8, !dbg !3091
  %_88 = load ptr, ptr %elem, align 8, !dbg !3092, !noundef !24
  store ptr %_88, ptr %self.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i45, metadata !298, metadata !DIExpression()), !dbg !3093
  store i64 1, ptr %count.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i44, metadata !304, metadata !DIExpression()), !dbg !3095
  store ptr %_88, ptr %self.dbg.spill.i154, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i154, metadata !308, metadata !DIExpression()), !dbg !3096
  store i64 1, ptr %count.dbg.spill.i153, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i153, metadata !313, metadata !DIExpression()), !dbg !3098
  %85 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_88, i64 1, !dbg !3099
  store ptr %85, ptr %11, align 8, !dbg !3099
  %_3.i155 = load ptr, ptr %11, align 8, !dbg !3099, !noundef !24
  store ptr %_3.i155, ptr %elem, align 8, !dbg !3100
  br label %bb37, !dbg !3064

bb40:                                             ; No predecessors!
  unreachable, !dbg !2934

bb55:                                             ; preds = %bb48, %bb44
  %_115 = load ptr, ptr %start_l, align 8, !dbg !3101, !noundef !24
  %_116 = load ptr, ptr %end_l, align 8, !dbg !3102, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_114 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hbdebd1c3af87ce41E(ptr %_115, ptr %_116) #10, !dbg !3103
  %_118 = load ptr, ptr %start_r, align 8, !dbg !3104, !noundef !24
  %_119 = load ptr, ptr %end_r, align 8, !dbg !3105, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_117 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hbdebd1c3af87ce41E(ptr %_118, ptr %_119) #10, !dbg !3106
; call core::cmp::min
  %count = call i64 @_ZN4core3cmp3min17h2cd815b39eadeab9E(i64 %_114, i64 %_117) #10, !dbg !3107
  store i64 %count, ptr %count.dbg.spill, align 8, !dbg !3107
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !2897, metadata !DIExpression()), !dbg !3108
  %_120 = icmp ugt i64 %count, 0, !dbg !3109
  br i1 %_120, label %bb59, label %bb95, !dbg !3109

bb45:                                             ; preds = %bb44
  store ptr %offsets_r, ptr %this.dbg.spill.i, align 8
  %86 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 128, ptr %86, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !3036, metadata !DIExpression()), !dbg !3110
  store ptr %offsets_r, ptr %self.dbg.spill.i185, align 8
  %87 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i185, i32 0, i32 1
  store i64 128, ptr %87, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i185, metadata !3048, metadata !DIExpression()), !dbg !3112
  store ptr %offsets_r, ptr %start_r, align 8, !dbg !3114
  %_95 = load ptr, ptr %start_r, align 8, !dbg !3115, !noundef !24
  store ptr %_95, ptr %end_r, align 8, !dbg !3116
  %88 = load ptr, ptr %r, align 8, !dbg !3117, !noundef !24
  store ptr %88, ptr %elem1, align 8, !dbg !3117
  %_99 = load i64, ptr %block_r, align 8, !dbg !3118, !noundef !24
  store i64 0, ptr %_98, align 8, !dbg !3119
  %89 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 1, !dbg !3119
  store i64 %_99, ptr %89, align 8, !dbg !3119
  %90 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 0, !dbg !3119
  %91 = load i64, ptr %90, align 8, !dbg !3119, !noundef !24
  %92 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 1, !dbg !3119
  %93 = load i64, ptr %92, align 8, !dbg !3119, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %94 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64 %91, i64 %93) #10, !dbg !3119
  %_97.0 = extractvalue { i64, i64 } %94, 0, !dbg !3119
  %_97.1 = extractvalue { i64, i64 } %94, 1, !dbg !3119
  %95 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 0, !dbg !3119
  store i64 %_97.0, ptr %95, align 8, !dbg !3119
  %96 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 1, !dbg !3119
  store i64 %_97.1, ptr %96, align 8, !dbg !3119
  br label %bb48, !dbg !3120

bb48:                                             ; preds = %bb50, %bb45
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %97 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8 %iter2) #10, !dbg !2936
  store { i64, i64 } %97, ptr %_101, align 8, !dbg !2936
  %_103 = load i64, ptr %_101, align 8, !dbg !2936, !range !1059, !noundef !24
  %98 = icmp eq i64 %_103, 0, !dbg !2936
  br i1 %98, label %bb55, label %bb50, !dbg !2936

bb50:                                             ; preds = %bb48
  %99 = getelementptr inbounds { i64, i64 }, ptr %_101, i32 0, i32 1, !dbg !3121
  %i6 = load i64, ptr %99, align 8, !dbg !3121, !noundef !24
  store i64 %i6, ptr %i.dbg.spill7, align 8, !dbg !3121
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill7, metadata !2895, metadata !DIExpression()), !dbg !3122
  %_106 = load ptr, ptr %elem1, align 8, !dbg !3123, !noundef !24
  store ptr %_106, ptr %self.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i89, metadata !2158, metadata !DIExpression()), !dbg !3124
  store i64 1, ptr %count.dbg.spill.i88, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i88, metadata !2161, metadata !DIExpression()), !dbg !3126
  store i64 1, ptr %self.dbg.spill.i.i87, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i87, metadata !2165, metadata !DIExpression()), !dbg !3127
  store i64 0, ptr %self.dbg.spill.i1.i86, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i86, metadata !2174, metadata !DIExpression()), !dbg !3129
  store i64 1, ptr %rhs.dbg.spill.i.i85, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i85, metadata !2179, metadata !DIExpression()), !dbg !3131
  store ptr %_106, ptr %self.dbg.spill.i124, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i124, metadata !308, metadata !DIExpression()), !dbg !3132
  store i64 -1, ptr %count.dbg.spill.i123, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i123, metadata !313, metadata !DIExpression()), !dbg !3134
  %100 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_106, i64 -1, !dbg !3135
  store ptr %100, ptr %21, align 8, !dbg !3135
  %_3.i125 = load ptr, ptr %21, align 8, !dbg !3135, !noundef !24
  store ptr %_3.i125, ptr %elem1, align 8, !dbg !3136
  %101 = load ptr, ptr %end_r, align 8, !dbg !3137, !noundef !24
  %102 = trunc i64 %i6 to i8, !dbg !3137
  store i8 %102, ptr %101, align 1, !dbg !3137
  %_108 = load ptr, ptr %end_r, align 8, !dbg !3138, !noundef !24
  %_112 = load ptr, ptr %elem1, align 8, !dbg !3139, !noundef !24
  store ptr %_112, ptr %_111, align 8, !dbg !3140
  %103 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 1, !dbg !3140
  store ptr %pivot, ptr %103, align 8, !dbg !3140
  %104 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 0, !dbg !3140
  %105 = load ptr, ptr %104, align 8, !dbg !3140, !nonnull !24, !align !510, !noundef !24
  %106 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 1, !dbg !3140
  %107 = load ptr, ptr %106, align 8, !dbg !3140, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_110 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %105, ptr align 8 %107) #10, !dbg !3140
  %_109 = zext i1 %_110 to i64, !dbg !3140
  store ptr %_108, ptr %self.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i27, metadata !3072, metadata !DIExpression()), !dbg !3141
  store i64 %_109, ptr %count.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i26, metadata !3077, metadata !DIExpression()), !dbg !3143
  store ptr %_108, ptr %self.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i109, metadata !3081, metadata !DIExpression()), !dbg !3144
  store i64 %_109, ptr %count.dbg.spill.i108, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i108, metadata !3086, metadata !DIExpression()), !dbg !3146
  %108 = getelementptr inbounds i8, ptr %_108, i64 %_109, !dbg !3147
  store ptr %108, ptr %26, align 8, !dbg !3147
  %_3.i110 = load ptr, ptr %26, align 8, !dbg !3147, !noundef !24
  store ptr %_3.i110, ptr %end_r, align 8, !dbg !3148
  br label %bb48, !dbg !3120

bb51:                                             ; No predecessors!
  unreachable, !dbg !2936

bb95:                                             ; preds = %bb89, %bb55
  %_191 = load ptr, ptr %start_l, align 8, !dbg !3149, !noundef !24
  %_192 = load ptr, ptr %end_l, align 8, !dbg !3150, !noundef !24
  %_190 = icmp eq ptr %_191, %_192, !dbg !3149
  br i1 %_190, label %bb96, label %bb98, !dbg !3149

bb59:                                             ; preds = %bb55
  %_125 = load ptr, ptr %l, align 8, !dbg !3151, !noundef !24
  %109 = load ptr, ptr %start_l, align 8, !dbg !3151, !noundef !24
  %_127 = load i8, ptr %109, align 1, !dbg !3151, !noundef !24
  store i8 %_127, ptr %small.dbg.spill.i194, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i194, metadata !3152, metadata !DIExpression()), !dbg !3161
  %110 = zext i8 %_127 to i64, !dbg !3163
  store ptr %_125, ptr %self.dbg.spill.i43, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i43, metadata !298, metadata !DIExpression()), !dbg !3164
  store i64 %110, ptr %count.dbg.spill.i42, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i42, metadata !304, metadata !DIExpression()), !dbg !3166
  store ptr %_125, ptr %self.dbg.spill.i157, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i157, metadata !308, metadata !DIExpression()), !dbg !3167
  store i64 %110, ptr %count.dbg.spill.i156, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i156, metadata !313, metadata !DIExpression()), !dbg !3169
  %111 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_125, i64 %110, !dbg !3170
  store ptr %111, ptr %10, align 8, !dbg !3170
  %_3.i158 = load ptr, ptr %10, align 8, !dbg !3170, !noundef !24
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf5dd81a4047cd85dE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %tmp, ptr %_3.i158) #10, !dbg !3171
  %_131 = load ptr, ptr %r, align 8, !dbg !3172, !noundef !24
  %112 = load ptr, ptr %start_r, align 8, !dbg !3172, !noundef !24
  %_134 = load i8, ptr %112, align 1, !dbg !3172, !noundef !24
  store i8 %_134, ptr %small.dbg.spill.i193, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i193, metadata !3152, metadata !DIExpression()), !dbg !3173
  %113 = zext i8 %_134 to i64, !dbg !3175
  %114 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %113, i64 1), !dbg !3172
  %_135.0 = extractvalue { i64, i1 } %114, 0, !dbg !3172
  %_135.1 = extractvalue { i64, i1 } %114, 1, !dbg !3172
  %115 = call i1 @llvm.expect.i1(i1 %_135.1, i1 false), !dbg !3172
  br i1 %115, label %panic8, label %bb64, !dbg !3172

bb64:                                             ; preds = %bb59
  store ptr %_131, ptr %self.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i84, metadata !2158, metadata !DIExpression()), !dbg !3176
  store i64 %_135.0, ptr %count.dbg.spill.i83, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i83, metadata !2161, metadata !DIExpression()), !dbg !3178
  store i64 %_135.0, ptr %self.dbg.spill.i.i82, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i82, metadata !2165, metadata !DIExpression()), !dbg !3179
  store i64 0, ptr %self.dbg.spill.i1.i81, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i81, metadata !2174, metadata !DIExpression()), !dbg !3181
  store i64 %_135.0, ptr %rhs.dbg.spill.i.i80, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i80, metadata !2179, metadata !DIExpression()), !dbg !3183
  %116 = sub i64 0, %_135.0, !dbg !3184
  store ptr %_131, ptr %self.dbg.spill.i127, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i127, metadata !308, metadata !DIExpression()), !dbg !3185
  store i64 %116, ptr %count.dbg.spill.i126, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i126, metadata !313, metadata !DIExpression()), !dbg !3187
  %117 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_131, i64 %116, !dbg !3188
  store ptr %117, ptr %20, align 8, !dbg !3188
  %_3.i128 = load ptr, ptr %20, align 8, !dbg !3188, !noundef !24
  %_137 = load ptr, ptr %l, align 8, !dbg !3189, !noundef !24
  %118 = load ptr, ptr %start_l, align 8, !dbg !3189, !noundef !24
  %_139 = load i8, ptr %118, align 1, !dbg !3189, !noundef !24
  store i8 %_139, ptr %small.dbg.spill.i192, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i192, metadata !3152, metadata !DIExpression()), !dbg !3190
  %119 = zext i8 %_139 to i64, !dbg !3192
  store ptr %_137, ptr %self.dbg.spill.i41, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i41, metadata !298, metadata !DIExpression()), !dbg !3193
  store i64 %119, ptr %count.dbg.spill.i40, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i40, metadata !304, metadata !DIExpression()), !dbg !3195
  store ptr %_137, ptr %self.dbg.spill.i160, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i160, metadata !308, metadata !DIExpression()), !dbg !3196
  store i64 %119, ptr %count.dbg.spill.i159, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i159, metadata !313, metadata !DIExpression()), !dbg !3198
  %120 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_137, i64 %119, !dbg !3199
  store ptr %120, ptr %9, align 8, !dbg !3199
  %_3.i161 = load ptr, ptr %9, align 8, !dbg !3199, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %_3.i128, ptr %_3.i161, i64 1) #10, !dbg !3200
  store i64 1, ptr %_141, align 8, !dbg !3201
  %121 = getelementptr inbounds { i64, i64 }, ptr %_141, i32 0, i32 1, !dbg !3201
  store i64 %count, ptr %121, align 8, !dbg !3201
  %122 = getelementptr inbounds { i64, i64 }, ptr %_141, i32 0, i32 0, !dbg !3201
  %123 = load i64, ptr %122, align 8, !dbg !3201, !noundef !24
  %124 = getelementptr inbounds { i64, i64 }, ptr %_141, i32 0, i32 1, !dbg !3201
  %125 = load i64, ptr %124, align 8, !dbg !3201, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %126 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64 %123, i64 %125) #10, !dbg !3201
  %_140.0 = extractvalue { i64, i64 } %126, 0, !dbg !3201
  %_140.1 = extractvalue { i64, i64 } %126, 1, !dbg !3201
  %127 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 0, !dbg !3201
  store i64 %_140.0, ptr %127, align 8, !dbg !3201
  %128 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 1, !dbg !3201
  store i64 %_140.1, ptr %128, align 8, !dbg !3201
  br label %bb70, !dbg !3202

panic8:                                           ; preds = %bb59
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_85041fc735c1873f26f9b9183d775ffb) #11, !dbg !3172
  unreachable, !dbg !3172

bb70:                                             ; preds = %bb84, %bb64
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %129 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8 %iter3) #10, !dbg !2938
  store { i64, i64 } %129, ptr %_144, align 8, !dbg !2938
  %_146 = load i64, ptr %_144, align 8, !dbg !2938, !range !1059, !noundef !24
  %130 = icmp eq i64 %_146, 0, !dbg !2938
  br i1 %130, label %bb74, label %bb72, !dbg !2938

bb74:                                             ; preds = %bb70
  %_179 = load ptr, ptr %r, align 8, !dbg !3203, !noundef !24
  %131 = load ptr, ptr %start_r, align 8, !dbg !3203, !noundef !24
  %_182 = load i8, ptr %131, align 1, !dbg !3203, !noundef !24
  store i8 %_182, ptr %small.dbg.spill.i187, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i187, metadata !3152, metadata !DIExpression()), !dbg !3204
  %132 = zext i8 %_182 to i64, !dbg !3206
  %133 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %132, i64 1), !dbg !3203
  %_183.0 = extractvalue { i64, i1 } %133, 0, !dbg !3203
  %_183.1 = extractvalue { i64, i1 } %133, 1, !dbg !3203
  %134 = call i1 @llvm.expect.i1(i1 %_183.1, i1 false), !dbg !3203
  br i1 %134, label %panic11, label %bb89, !dbg !3203

bb72:                                             ; preds = %bb70
  %_148 = load ptr, ptr %start_l, align 8, !dbg !3207, !noundef !24
  store ptr %_148, ptr %self.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i25, metadata !3072, metadata !DIExpression()), !dbg !3208
  store i64 1, ptr %count.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i24, metadata !3077, metadata !DIExpression()), !dbg !3210
  store ptr %_148, ptr %self.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i112, metadata !3081, metadata !DIExpression()), !dbg !3211
  store i64 1, ptr %count.dbg.spill.i111, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i111, metadata !3086, metadata !DIExpression()), !dbg !3213
  %135 = getelementptr inbounds i8, ptr %_148, i64 1, !dbg !3214
  store ptr %135, ptr %25, align 8, !dbg !3214
  %_3.i113 = load ptr, ptr %25, align 8, !dbg !3214, !noundef !24
  store ptr %_3.i113, ptr %start_l, align 8, !dbg !3215
  %_152 = load ptr, ptr %l, align 8, !dbg !3216, !noundef !24
  %136 = load ptr, ptr %start_l, align 8, !dbg !3216, !noundef !24
  %_154 = load i8, ptr %136, align 1, !dbg !3216, !noundef !24
  store i8 %_154, ptr %small.dbg.spill.i191, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i191, metadata !3152, metadata !DIExpression()), !dbg !3217
  %137 = zext i8 %_154 to i64, !dbg !3219
  store ptr %_152, ptr %self.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i39, metadata !298, metadata !DIExpression()), !dbg !3220
  store i64 %137, ptr %count.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i38, metadata !304, metadata !DIExpression()), !dbg !3222
  store ptr %_152, ptr %self.dbg.spill.i163, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i163, metadata !308, metadata !DIExpression()), !dbg !3223
  store i64 %137, ptr %count.dbg.spill.i162, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i162, metadata !313, metadata !DIExpression()), !dbg !3225
  %138 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_152, i64 %137, !dbg !3226
  store ptr %138, ptr %8, align 8, !dbg !3226
  %_3.i164 = load ptr, ptr %8, align 8, !dbg !3226, !noundef !24
  %_156 = load ptr, ptr %r, align 8, !dbg !3227, !noundef !24
  %139 = load ptr, ptr %start_r, align 8, !dbg !3227, !noundef !24
  %_159 = load i8, ptr %139, align 1, !dbg !3227, !noundef !24
  store i8 %_159, ptr %small.dbg.spill.i190, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i190, metadata !3152, metadata !DIExpression()), !dbg !3228
  %140 = zext i8 %_159 to i64, !dbg !3230
  %141 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %140, i64 1), !dbg !3227
  %_160.0 = extractvalue { i64, i1 } %141, 0, !dbg !3227
  %_160.1 = extractvalue { i64, i1 } %141, 1, !dbg !3227
  %142 = call i1 @llvm.expect.i1(i1 %_160.1, i1 false), !dbg !3227
  br i1 %142, label %panic9, label %bb79, !dbg !3227

bb73:                                             ; No predecessors!
  unreachable, !dbg !2938

bb79:                                             ; preds = %bb72
  store ptr %_156, ptr %self.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i79, metadata !2158, metadata !DIExpression()), !dbg !3231
  store i64 %_160.0, ptr %count.dbg.spill.i78, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i78, metadata !2161, metadata !DIExpression()), !dbg !3233
  store i64 %_160.0, ptr %self.dbg.spill.i.i77, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i77, metadata !2165, metadata !DIExpression()), !dbg !3234
  store i64 0, ptr %self.dbg.spill.i1.i76, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i76, metadata !2174, metadata !DIExpression()), !dbg !3236
  store i64 %_160.0, ptr %rhs.dbg.spill.i.i75, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i75, metadata !2179, metadata !DIExpression()), !dbg !3238
  %143 = sub i64 0, %_160.0, !dbg !3239
  store ptr %_156, ptr %self.dbg.spill.i130, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i130, metadata !308, metadata !DIExpression()), !dbg !3240
  store i64 %143, ptr %count.dbg.spill.i129, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i129, metadata !313, metadata !DIExpression()), !dbg !3242
  %144 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_156, i64 %143, !dbg !3243
  store ptr %144, ptr %19, align 8, !dbg !3243
  %_3.i131 = load ptr, ptr %19, align 8, !dbg !3243, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %_3.i164, ptr %_3.i131, i64 1) #10, !dbg !3244
  %_162 = load ptr, ptr %start_r, align 8, !dbg !3245, !noundef !24
  store ptr %_162, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !3072, metadata !DIExpression()), !dbg !3246
  store i64 1, ptr %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i22, metadata !3077, metadata !DIExpression()), !dbg !3248
  store ptr %_162, ptr %self.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i115, metadata !3081, metadata !DIExpression()), !dbg !3249
  store i64 1, ptr %count.dbg.spill.i114, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i114, metadata !3086, metadata !DIExpression()), !dbg !3251
  %145 = getelementptr inbounds i8, ptr %_162, i64 1, !dbg !3252
  store ptr %145, ptr %24, align 8, !dbg !3252
  %_3.i116 = load ptr, ptr %24, align 8, !dbg !3252, !noundef !24
  store ptr %_3.i116, ptr %start_r, align 8, !dbg !3253
  %_166 = load ptr, ptr %r, align 8, !dbg !3254, !noundef !24
  %146 = load ptr, ptr %start_r, align 8, !dbg !3254, !noundef !24
  %_169 = load i8, ptr %146, align 1, !dbg !3254, !noundef !24
  store i8 %_169, ptr %small.dbg.spill.i189, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i189, metadata !3152, metadata !DIExpression()), !dbg !3255
  %147 = zext i8 %_169 to i64, !dbg !3257
  %148 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %147, i64 1), !dbg !3254
  %_170.0 = extractvalue { i64, i1 } %148, 0, !dbg !3254
  %_170.1 = extractvalue { i64, i1 } %148, 1, !dbg !3254
  %149 = call i1 @llvm.expect.i1(i1 %_170.1, i1 false), !dbg !3254
  br i1 %149, label %panic10, label %bb84, !dbg !3254

panic9:                                           ; preds = %bb72
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_12b2eee1a7da6a16a51b17676508323c) #11, !dbg !3227
  unreachable, !dbg !3227

bb84:                                             ; preds = %bb79
  store ptr %_166, ptr %self.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i74, metadata !2158, metadata !DIExpression()), !dbg !3258
  store i64 %_170.0, ptr %count.dbg.spill.i73, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i73, metadata !2161, metadata !DIExpression()), !dbg !3260
  store i64 %_170.0, ptr %self.dbg.spill.i.i72, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i72, metadata !2165, metadata !DIExpression()), !dbg !3261
  store i64 0, ptr %self.dbg.spill.i1.i71, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i71, metadata !2174, metadata !DIExpression()), !dbg !3263
  store i64 %_170.0, ptr %rhs.dbg.spill.i.i70, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i70, metadata !2179, metadata !DIExpression()), !dbg !3265
  %150 = sub i64 0, %_170.0, !dbg !3266
  store ptr %_166, ptr %self.dbg.spill.i133, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i133, metadata !308, metadata !DIExpression()), !dbg !3267
  store i64 %150, ptr %count.dbg.spill.i132, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i132, metadata !313, metadata !DIExpression()), !dbg !3269
  %151 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_166, i64 %150, !dbg !3270
  store ptr %151, ptr %18, align 8, !dbg !3270
  %_3.i134 = load ptr, ptr %18, align 8, !dbg !3270, !noundef !24
  %_172 = load ptr, ptr %l, align 8, !dbg !3271, !noundef !24
  %152 = load ptr, ptr %start_l, align 8, !dbg !3271, !noundef !24
  %_174 = load i8, ptr %152, align 1, !dbg !3271, !noundef !24
  store i8 %_174, ptr %small.dbg.spill.i188, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i188, metadata !3152, metadata !DIExpression()), !dbg !3272
  %153 = zext i8 %_174 to i64, !dbg !3274
  store ptr %_172, ptr %self.dbg.spill.i37, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i37, metadata !298, metadata !DIExpression()), !dbg !3275
  store i64 %153, ptr %count.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i36, metadata !304, metadata !DIExpression()), !dbg !3277
  store ptr %_172, ptr %self.dbg.spill.i166, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i166, metadata !308, metadata !DIExpression()), !dbg !3278
  store i64 %153, ptr %count.dbg.spill.i165, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i165, metadata !313, metadata !DIExpression()), !dbg !3280
  %154 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_172, i64 %153, !dbg !3281
  store ptr %154, ptr %7, align 8, !dbg !3281
  %_3.i167 = load ptr, ptr %7, align 8, !dbg !3281, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %_3.i134, ptr %_3.i167, i64 1) #10, !dbg !3282
  br label %bb70, !dbg !3282

panic10:                                          ; preds = %bb79
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_6aeaa22a25fdbd6317317ce6c9c175d3) #11, !dbg !3254
  unreachable, !dbg !3254

bb89:                                             ; preds = %bb74
  store ptr %_179, ptr %self.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i69, metadata !2158, metadata !DIExpression()), !dbg !3283
  store i64 %_183.0, ptr %count.dbg.spill.i68, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i68, metadata !2161, metadata !DIExpression()), !dbg !3285
  store i64 %_183.0, ptr %self.dbg.spill.i.i67, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i67, metadata !2165, metadata !DIExpression()), !dbg !3286
  store i64 0, ptr %self.dbg.spill.i1.i66, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i66, metadata !2174, metadata !DIExpression()), !dbg !3288
  store i64 %_183.0, ptr %rhs.dbg.spill.i.i65, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i65, metadata !2179, metadata !DIExpression()), !dbg !3290
  %155 = sub i64 0, %_183.0, !dbg !3291
  store ptr %_179, ptr %self.dbg.spill.i136, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i136, metadata !308, metadata !DIExpression()), !dbg !3292
  store i64 %155, ptr %count.dbg.spill.i135, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i135, metadata !313, metadata !DIExpression()), !dbg !3294
  %156 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_179, i64 %155, !dbg !3295
  store ptr %156, ptr %17, align 8, !dbg !3295
  %_3.i137 = load ptr, ptr %17, align 8, !dbg !3295, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %tmp, ptr %_3.i137, i64 1) #10, !dbg !3296
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_185, ptr align 8 %tmp, i64 24, i1 false), !dbg !3297
; call core::mem::forget
  call void @_ZN4core3mem6forget17h81dd88fda83363bcE(ptr %_185) #10, !dbg !3298
  %_187 = load ptr, ptr %start_l, align 8, !dbg !3299, !noundef !24
  store ptr %_187, ptr %self.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i21, metadata !3072, metadata !DIExpression()), !dbg !3300
  store i64 1, ptr %count.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i20, metadata !3077, metadata !DIExpression()), !dbg !3302
  store ptr %_187, ptr %self.dbg.spill.i118, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i118, metadata !3081, metadata !DIExpression()), !dbg !3303
  store i64 1, ptr %count.dbg.spill.i117, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i117, metadata !3086, metadata !DIExpression()), !dbg !3305
  %157 = getelementptr inbounds i8, ptr %_187, i64 1, !dbg !3306
  store ptr %157, ptr %23, align 8, !dbg !3306
  %_3.i119 = load ptr, ptr %23, align 8, !dbg !3306, !noundef !24
  store ptr %_3.i119, ptr %start_l, align 8, !dbg !3307
  %_189 = load ptr, ptr %start_r, align 8, !dbg !3308, !noundef !24
  store ptr %_189, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3072, metadata !DIExpression()), !dbg !3309
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !3077, metadata !DIExpression()), !dbg !3311
  store ptr %_189, ptr %self.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i121, metadata !3081, metadata !DIExpression()), !dbg !3312
  store i64 1, ptr %count.dbg.spill.i120, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i120, metadata !3086, metadata !DIExpression()), !dbg !3314
  %158 = getelementptr inbounds i8, ptr %_189, i64 1, !dbg !3315
  store ptr %158, ptr %22, align 8, !dbg !3315
  %_3.i122 = load ptr, ptr %22, align 8, !dbg !3315, !noundef !24
  store ptr %_3.i122, ptr %start_r, align 8, !dbg !3316
  br label %bb95, !dbg !3317

panic11:                                          ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_05e2683215c1d8600cfd55f7fbdce971) #11, !dbg !3203
  unreachable, !dbg !3203

bb98:                                             ; preds = %bb96, %bb95
  %_197 = load ptr, ptr %start_r, align 8, !dbg !3318, !noundef !24
  %_198 = load ptr, ptr %end_r, align 8, !dbg !3319, !noundef !24
  %_196 = icmp eq ptr %_197, %_198, !dbg !3318
  br i1 %_196, label %bb99, label %bb101, !dbg !3318

bb96:                                             ; preds = %bb95
  %_194 = load ptr, ptr %l, align 8, !dbg !3320, !noundef !24
  %_195 = load i64, ptr %block_l, align 8, !dbg !3321, !noundef !24
  store ptr %_194, ptr %self.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i35, metadata !298, metadata !DIExpression()), !dbg !3322
  store i64 %_195, ptr %count.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i34, metadata !304, metadata !DIExpression()), !dbg !3324
  store ptr %_194, ptr %self.dbg.spill.i169, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i169, metadata !308, metadata !DIExpression()), !dbg !3325
  store i64 %_195, ptr %count.dbg.spill.i168, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i168, metadata !313, metadata !DIExpression()), !dbg !3327
  %159 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_194, i64 %_195, !dbg !3328
  store ptr %159, ptr %6, align 8, !dbg !3328
  %_3.i170 = load ptr, ptr %6, align 8, !dbg !3328, !noundef !24
  store ptr %_3.i170, ptr %l, align 8, !dbg !3329
  br label %bb98, !dbg !3330

bb101:                                            ; preds = %bb99, %bb98
  br i1 %is_done, label %bb102, label %bb9, !dbg !3331

bb99:                                             ; preds = %bb98
  %_200 = load ptr, ptr %r, align 8, !dbg !3332, !noundef !24
  %_201 = load i64, ptr %block_r, align 8, !dbg !3333, !noundef !24
  store ptr %_200, ptr %self.dbg.spill.i64, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i64, metadata !2158, metadata !DIExpression()), !dbg !3334
  store i64 %_201, ptr %count.dbg.spill.i63, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i63, metadata !2161, metadata !DIExpression()), !dbg !3336
  store i64 %_201, ptr %self.dbg.spill.i.i62, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i62, metadata !2165, metadata !DIExpression()), !dbg !3337
  store i64 0, ptr %self.dbg.spill.i1.i61, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i61, metadata !2174, metadata !DIExpression()), !dbg !3339
  store i64 %_201, ptr %rhs.dbg.spill.i.i60, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i60, metadata !2179, metadata !DIExpression()), !dbg !3341
  %160 = sub i64 0, %_201, !dbg !3342
  store ptr %_200, ptr %self.dbg.spill.i139, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i139, metadata !308, metadata !DIExpression()), !dbg !3343
  store i64 %160, ptr %count.dbg.spill.i138, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i138, metadata !313, metadata !DIExpression()), !dbg !3345
  %161 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_200, i64 %160, !dbg !3346
  store ptr %161, ptr %16, align 8, !dbg !3346
  %_3.i140 = load ptr, ptr %16, align 8, !dbg !3346, !noundef !24
  store ptr %_3.i140, ptr %r, align 8, !dbg !3347
  br label %bb101, !dbg !3348

bb102:                                            ; preds = %bb101
  %_203 = load ptr, ptr %start_l, align 8, !dbg !3349, !noundef !24
  %_204 = load ptr, ptr %end_l, align 8, !dbg !3350, !noundef !24
  %_202 = icmp ult ptr %_203, %_204, !dbg !3349
  br i1 %_202, label %bb103, label %bb104, !dbg !3349

bb104:                                            ; preds = %bb102
  %_237 = load ptr, ptr %start_r, align 8, !dbg !3351, !noundef !24
  %_238 = load ptr, ptr %end_r, align 8, !dbg !3352, !noundef !24
  %_236 = icmp ult ptr %_237, %_238, !dbg !3351
  br i1 %_236, label %bb117, label %bb118, !dbg !3351

bb103:                                            ; preds = %bb102
  %_208 = load ptr, ptr %l, align 8, !dbg !3353, !noundef !24
  %_209 = load ptr, ptr %r, align 8, !dbg !3354, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %162 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E(ptr %_208, ptr %_209) #10, !dbg !3355
  store i64 %162, ptr %_207, align 8, !dbg !3355
  store ptr %_207, ptr %_205, align 8, !dbg !3356
  %163 = getelementptr inbounds { ptr, ptr }, ptr %_205, i32 0, i32 1, !dbg !3356
  store ptr %block_l, ptr %163, align 8, !dbg !3356
  %left_val = load ptr, ptr %_205, align 8, !dbg !3356, !nonnull !24, !align !510, !noundef !24
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !3356
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !2903, metadata !DIExpression()), !dbg !3357
  %164 = getelementptr inbounds { ptr, ptr }, ptr %_205, i32 0, i32 1, !dbg !3356
  %right_val = load ptr, ptr %164, align 8, !dbg !3356, !nonnull !24, !align !510, !noundef !24
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !3356
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !2908, metadata !DIExpression()), !dbg !3357
  %_215 = load i64, ptr %left_val, align 8, !dbg !3357, !noundef !24
  %_216 = load i64, ptr %right_val, align 8, !dbg !3357, !noundef !24
  %_214 = icmp eq i64 %_215, %_216, !dbg !3357
  %_213 = xor i1 %_214, true, !dbg !3357
  br i1 %_213, label %bb106, label %bb107, !dbg !3357

bb107:                                            ; preds = %bb108, %bb103
  %_221 = load ptr, ptr %start_l, align 8, !dbg !3358, !noundef !24
  %_222 = load ptr, ptr %end_l, align 8, !dbg !3359, !noundef !24
  %_220 = icmp ult ptr %_221, %_222, !dbg !3358
  br i1 %_220, label %bb108, label %bb115, !dbg !3358

bb106:                                            ; preds = %bb103
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !3357
  call void @llvm.dbg.declare(metadata ptr %kind.dbg.spill, metadata !2909, metadata !DIExpression()), !dbg !3360
  %165 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_219, i32 0, i32 1, !dbg !3360
  store ptr null, ptr %165, align 8, !dbg !3360
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha2a9c290507d1ce0E(i8 0, ptr align 8 %left_val, ptr align 8 %right_val, ptr %_219, ptr align 8 @alloc_4c9eb7be33960644b7aeb6fba29a2a01) #11, !dbg !3360
  unreachable, !dbg !3360

bb115:                                            ; preds = %bb107
  store ptr %v.0, ptr %self.dbg.spill.i182, align 8
  %166 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i182, i32 0, i32 1
  store i64 %v.1, ptr %166, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i182, metadata !2016, metadata !DIExpression()), !dbg !3361
  %_235 = load ptr, ptr %r, align 8, !dbg !3363, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %167 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E(ptr %v.0, ptr %_235) #10, !dbg !3364
  store i64 %167, ptr %32, align 8, !dbg !3364
  br label %bb132, !dbg !3364

bb108:                                            ; preds = %bb107
  %_224 = load ptr, ptr %end_l, align 8, !dbg !3365, !noundef !24
  store ptr %_224, ptr %self.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i99, metadata !3366, metadata !DIExpression()), !dbg !3370
  store i64 1, ptr %count.dbg.spill.i98, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i98, metadata !3369, metadata !DIExpression()), !dbg !3372
  store i64 1, ptr %self.dbg.spill.i.i97, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i97, metadata !2165, metadata !DIExpression()), !dbg !3373
  store i64 0, ptr %self.dbg.spill.i1.i96, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i96, metadata !2174, metadata !DIExpression()), !dbg !3375
  store i64 1, ptr %rhs.dbg.spill.i.i95, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i95, metadata !2179, metadata !DIExpression()), !dbg !3377
  store ptr %_224, ptr %self.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i101, metadata !3081, metadata !DIExpression()), !dbg !3378
  store i64 -1, ptr %count.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i100, metadata !3086, metadata !DIExpression()), !dbg !3380
  %168 = getelementptr inbounds i8, ptr %_224, i64 -1, !dbg !3381
  store ptr %168, ptr %29, align 8, !dbg !3381
  %_3.i = load ptr, ptr %29, align 8, !dbg !3381, !noundef !24
  store ptr %_3.i, ptr %end_l, align 8, !dbg !3382
  %_227 = load ptr, ptr %l, align 8, !dbg !3383, !noundef !24
  %169 = load ptr, ptr %end_l, align 8, !dbg !3384, !noundef !24
  %_229 = load i8, ptr %169, align 1, !dbg !3384, !noundef !24
  store i8 %_229, ptr %small.dbg.spill.i186, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i186, metadata !3152, metadata !DIExpression()), !dbg !3385
  %170 = zext i8 %_229 to i64, !dbg !3387
  store ptr %_227, ptr %self.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i33, metadata !298, metadata !DIExpression()), !dbg !3388
  store i64 %170, ptr %count.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i32, metadata !304, metadata !DIExpression()), !dbg !3390
  store ptr %_227, ptr %self.dbg.spill.i172, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i172, metadata !308, metadata !DIExpression()), !dbg !3391
  store i64 %170, ptr %count.dbg.spill.i171, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i171, metadata !313, metadata !DIExpression()), !dbg !3393
  %171 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_227, i64 %170, !dbg !3394
  store ptr %171, ptr %5, align 8, !dbg !3394
  %_3.i173 = load ptr, ptr %5, align 8, !dbg !3394, !noundef !24
  %_231 = load ptr, ptr %r, align 8, !dbg !3395, !noundef !24
  store ptr %_231, ptr %self.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i59, metadata !2158, metadata !DIExpression()), !dbg !3396
  store i64 1, ptr %count.dbg.spill.i58, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i58, metadata !2161, metadata !DIExpression()), !dbg !3398
  store i64 1, ptr %self.dbg.spill.i.i57, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i57, metadata !2165, metadata !DIExpression()), !dbg !3399
  store i64 0, ptr %self.dbg.spill.i1.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i56, metadata !2174, metadata !DIExpression()), !dbg !3401
  store i64 1, ptr %rhs.dbg.spill.i.i55, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i55, metadata !2179, metadata !DIExpression()), !dbg !3403
  store ptr %_231, ptr %self.dbg.spill.i142, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i142, metadata !308, metadata !DIExpression()), !dbg !3404
  store i64 -1, ptr %count.dbg.spill.i141, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i141, metadata !313, metadata !DIExpression()), !dbg !3406
  %172 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_231, i64 -1, !dbg !3407
  store ptr %172, ptr %15, align 8, !dbg !3407
  %_3.i143 = load ptr, ptr %15, align 8, !dbg !3407, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2af3b31cc01f7abcE(ptr %_3.i173, ptr %_3.i143) #10, !dbg !3408
  %_233 = load ptr, ptr %r, align 8, !dbg !3409, !noundef !24
  store ptr %_233, ptr %self.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i54, metadata !2158, metadata !DIExpression()), !dbg !3410
  store i64 1, ptr %count.dbg.spill.i53, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i53, metadata !2161, metadata !DIExpression()), !dbg !3412
  store i64 1, ptr %self.dbg.spill.i.i52, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i52, metadata !2165, metadata !DIExpression()), !dbg !3413
  store i64 0, ptr %self.dbg.spill.i1.i51, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i51, metadata !2174, metadata !DIExpression()), !dbg !3415
  store i64 1, ptr %rhs.dbg.spill.i.i50, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i50, metadata !2179, metadata !DIExpression()), !dbg !3417
  store ptr %_233, ptr %self.dbg.spill.i145, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i145, metadata !308, metadata !DIExpression()), !dbg !3418
  store i64 -1, ptr %count.dbg.spill.i144, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i144, metadata !313, metadata !DIExpression()), !dbg !3420
  %173 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_233, i64 -1, !dbg !3421
  store ptr %173, ptr %14, align 8, !dbg !3421
  %_3.i146 = load ptr, ptr %14, align 8, !dbg !3421, !noundef !24
  store ptr %_3.i146, ptr %r, align 8, !dbg !3422
  br label %bb107, !dbg !3423

bb132:                                            ; preds = %bb118, %bb129, %bb115
  %174 = load i64, ptr %32, align 8, !dbg !3424, !noundef !24
  ret i64 %174, !dbg !3424

bb118:                                            ; preds = %bb104
  store ptr %v.0, ptr %self.dbg.spill.i180, align 8
  %175 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i180, i32 0, i32 1
  store i64 %v.1, ptr %175, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i180, metadata !2016, metadata !DIExpression()), !dbg !3425
  %_272 = load ptr, ptr %l, align 8, !dbg !3427, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %176 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E(ptr %v.0, ptr %_272) #10, !dbg !3428
  store i64 %176, ptr %32, align 8, !dbg !3428
  br label %bb132, !dbg !3428

bb117:                                            ; preds = %bb104
  %_242 = load ptr, ptr %l, align 8, !dbg !3429, !noundef !24
  %_243 = load ptr, ptr %r, align 8, !dbg !3430, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %177 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E(ptr %_242, ptr %_243) #10, !dbg !3431
  store i64 %177, ptr %_241, align 8, !dbg !3431
  store ptr %_241, ptr %_239, align 8, !dbg !3432
  %178 = getelementptr inbounds { ptr, ptr }, ptr %_239, i32 0, i32 1, !dbg !3432
  store ptr %block_r, ptr %178, align 8, !dbg !3432
  %left_val12 = load ptr, ptr %_239, align 8, !dbg !3432, !nonnull !24, !align !510, !noundef !24
  store ptr %left_val12, ptr %left_val.dbg.spill13, align 8, !dbg !3432
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill13, metadata !2912, metadata !DIExpression()), !dbg !3433
  %179 = getelementptr inbounds { ptr, ptr }, ptr %_239, i32 0, i32 1, !dbg !3432
  %right_val14 = load ptr, ptr %179, align 8, !dbg !3432, !nonnull !24, !align !510, !noundef !24
  store ptr %right_val14, ptr %right_val.dbg.spill15, align 8, !dbg !3432
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill15, metadata !2915, metadata !DIExpression()), !dbg !3433
  %_249 = load i64, ptr %left_val12, align 8, !dbg !3433, !noundef !24
  %_250 = load i64, ptr %right_val14, align 8, !dbg !3433, !noundef !24
  %_248 = icmp eq i64 %_249, %_250, !dbg !3433
  %_247 = xor i1 %_248, true, !dbg !3433
  br i1 %_247, label %bb120, label %bb121, !dbg !3433

bb121:                                            ; preds = %bb125, %bb117
  %_255 = load ptr, ptr %start_r, align 8, !dbg !3434, !noundef !24
  %_256 = load ptr, ptr %end_r, align 8, !dbg !3435, !noundef !24
  %_254 = icmp ult ptr %_255, %_256, !dbg !3434
  br i1 %_254, label %bb122, label %bb129, !dbg !3434

bb120:                                            ; preds = %bb117
  store i8 0, ptr %kind.dbg.spill16, align 1, !dbg !3433
  call void @llvm.dbg.declare(metadata ptr %kind.dbg.spill16, metadata !2916, metadata !DIExpression()), !dbg !3436
  %180 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_253, i32 0, i32 1, !dbg !3436
  store ptr null, ptr %180, align 8, !dbg !3436
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha2a9c290507d1ce0E(i8 0, ptr align 8 %left_val12, ptr align 8 %right_val14, ptr %_253, ptr align 8 @alloc_e68a47e57f76ff56e4571db803b042a9) #11, !dbg !3436
  unreachable, !dbg !3436

bb129:                                            ; preds = %bb121
  store ptr %v.0, ptr %self.dbg.spill.i181, align 8
  %181 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i181, i32 0, i32 1
  store i64 %v.1, ptr %181, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i181, metadata !2016, metadata !DIExpression()), !dbg !3437
  %_270 = load ptr, ptr %l, align 8, !dbg !3439, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %182 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E(ptr %v.0, ptr %_270) #10, !dbg !3440
  store i64 %182, ptr %32, align 8, !dbg !3440
  br label %bb132, !dbg !3440

bb122:                                            ; preds = %bb121
  %_258 = load ptr, ptr %end_r, align 8, !dbg !3441, !noundef !24
  store ptr %_258, ptr %self.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i94, metadata !3366, metadata !DIExpression()), !dbg !3442
  store i64 1, ptr %count.dbg.spill.i93, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i93, metadata !3369, metadata !DIExpression()), !dbg !3444
  store i64 1, ptr %self.dbg.spill.i.i92, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i92, metadata !2165, metadata !DIExpression()), !dbg !3445
  store i64 0, ptr %self.dbg.spill.i1.i91, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i91, metadata !2174, metadata !DIExpression()), !dbg !3447
  store i64 1, ptr %rhs.dbg.spill.i.i90, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i90, metadata !2179, metadata !DIExpression()), !dbg !3449
  store ptr %_258, ptr %self.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i103, metadata !3081, metadata !DIExpression()), !dbg !3450
  store i64 -1, ptr %count.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i102, metadata !3086, metadata !DIExpression()), !dbg !3452
  %183 = getelementptr inbounds i8, ptr %_258, i64 -1, !dbg !3453
  store ptr %183, ptr %28, align 8, !dbg !3453
  %_3.i104 = load ptr, ptr %28, align 8, !dbg !3453, !noundef !24
  store ptr %_3.i104, ptr %end_r, align 8, !dbg !3454
  %_260 = load ptr, ptr %l, align 8, !dbg !3455, !noundef !24
  %_262 = load ptr, ptr %r, align 8, !dbg !3456, !noundef !24
  %184 = load ptr, ptr %end_r, align 8, !dbg !3457, !noundef !24
  %_265 = load i8, ptr %184, align 1, !dbg !3457, !noundef !24
  store i8 %_265, ptr %small.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i, metadata !3152, metadata !DIExpression()), !dbg !3458
  %185 = zext i8 %_265 to i64, !dbg !3460
  %186 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %185, i64 1), !dbg !3461
  %_266.0 = extractvalue { i64, i1 } %186, 0, !dbg !3461
  %_266.1 = extractvalue { i64, i1 } %186, 1, !dbg !3461
  %187 = call i1 @llvm.expect.i1(i1 %_266.1, i1 false), !dbg !3461
  br i1 %187, label %panic17, label %bb125, !dbg !3461

bb125:                                            ; preds = %bb122
  store ptr %_262, ptr %self.dbg.spill.i49, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i49, metadata !2158, metadata !DIExpression()), !dbg !3462
  store i64 %_266.0, ptr %count.dbg.spill.i48, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i48, metadata !2161, metadata !DIExpression()), !dbg !3464
  store i64 %_266.0, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2165, metadata !DIExpression()), !dbg !3465
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2174, metadata !DIExpression()), !dbg !3467
  store i64 %_266.0, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2179, metadata !DIExpression()), !dbg !3469
  %188 = sub i64 0, %_266.0, !dbg !3470
  store ptr %_262, ptr %self.dbg.spill.i148, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i148, metadata !308, metadata !DIExpression()), !dbg !3471
  store i64 %188, ptr %count.dbg.spill.i147, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i147, metadata !313, metadata !DIExpression()), !dbg !3473
  %189 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_262, i64 %188, !dbg !3474
  store ptr %189, ptr %13, align 8, !dbg !3474
  %_3.i149 = load ptr, ptr %13, align 8, !dbg !3474, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2af3b31cc01f7abcE(ptr %_260, ptr %_3.i149) #10, !dbg !3475
  %_268 = load ptr, ptr %l, align 8, !dbg !3476, !noundef !24
  store ptr %_268, ptr %self.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i31, metadata !298, metadata !DIExpression()), !dbg !3477
  store i64 1, ptr %count.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i30, metadata !304, metadata !DIExpression()), !dbg !3479
  store ptr %_268, ptr %self.dbg.spill.i175, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i175, metadata !308, metadata !DIExpression()), !dbg !3480
  store i64 1, ptr %count.dbg.spill.i174, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i174, metadata !313, metadata !DIExpression()), !dbg !3482
  %190 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_268, i64 1, !dbg !3483
  store ptr %190, ptr %4, align 8, !dbg !3483
  %_3.i176 = load ptr, ptr %4, align 8, !dbg !3483, !noundef !24
  store ptr %_3.i176, ptr %l, align 8, !dbg !3484
  br label %bb121, !dbg !3485

panic17:                                          ; preds = %bb122
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_95cd5ef29f0518fdd5e93c2a0c793d79) #11, !dbg !3461
  unreachable, !dbg !3461
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3486 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3491, metadata !DIExpression()), !dbg !3493
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3492, metadata !DIExpression()), !dbg !3494
  %_4 = icmp ugt i64 24, 0, !dbg !3495
  %_3 = xor i1 %_4, true, !dbg !3496
  br i1 %_3, label %bb2, label %bb3, !dbg !3496

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3497, metadata !DIExpression()), !dbg !3502
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1276, metadata !DIExpression()), !dbg !3504
  store ptr %r, ptr %0, align 8, !dbg !3506
  %2 = load i64, ptr %0, align 8, !dbg !3506, !noundef !24
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3497, metadata !DIExpression()), !dbg !3507
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1276, metadata !DIExpression()), !dbg !3509
  store ptr %l, ptr %1, align 8, !dbg !3511
  %3 = load i64, ptr %1, align 8, !dbg !3511, !noundef !24
  %_10.0 = sub i64 %2, %3, !dbg !3512
  %_10.1 = icmp ult i64 %2, %3, !dbg !3512
  %4 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3512
  br i1 %4, label %panic, label %bb6, !dbg !3512

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_9f5eac1701dd210e63d0fdfed08deb00, i64 41, ptr align 8 @alloc_40e921f5b89c547ca7cb2a686def055b) #11, !dbg !3496
  unreachable, !dbg !3496

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 24, 0, !dbg !3512
  %5 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3512
  br i1 %5, label %panic1, label %bb8, !dbg !3512

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_eb9ff3c3e62ed9a6080a33a1531d61cf) #11, !dbg !3512
  unreachable, !dbg !3512

bb8:                                              ; preds = %bb6
  %6 = udiv i64 %_10.0, 24, !dbg !3512
  ret i64 %6, !dbg !3513

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_eb9ff3c3e62ed9a6080a33a1531d61cf) #11, !dbg !3512
  unreachable, !dbg !3512
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17hbdebd1c3af87ce41E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3514 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3518, metadata !DIExpression()), !dbg !3520
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3519, metadata !DIExpression()), !dbg !3521
  %_4 = icmp ugt i64 1, 0, !dbg !3522
  %_3 = xor i1 %_4, true, !dbg !3523
  br i1 %_3, label %bb2, label %bb3, !dbg !3523

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !1654, metadata !DIExpression()), !dbg !3524
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1663, metadata !DIExpression()), !dbg !3526
  store ptr %r, ptr %0, align 8, !dbg !3528
  %2 = load i64, ptr %0, align 8, !dbg !3528, !noundef !24
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1654, metadata !DIExpression()), !dbg !3529
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1663, metadata !DIExpression()), !dbg !3531
  store ptr %l, ptr %1, align 8, !dbg !3533
  %3 = load i64, ptr %1, align 8, !dbg !3533, !noundef !24
  %_10.0 = sub i64 %2, %3, !dbg !3534
  %_10.1 = icmp ult i64 %2, %3, !dbg !3534
  %4 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3534
  br i1 %4, label %panic, label %bb6, !dbg !3534

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_9f5eac1701dd210e63d0fdfed08deb00, i64 41, ptr align 8 @alloc_40e921f5b89c547ca7cb2a686def055b) #11, !dbg !3523
  unreachable, !dbg !3523

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 1, 0, !dbg !3534
  %5 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3534
  br i1 %5, label %panic1, label %bb8, !dbg !3534

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_eb9ff3c3e62ed9a6080a33a1531d61cf) #11, !dbg !3534
  unreachable, !dbg !3534

bb8:                                              ; preds = %bb6
  %6 = udiv i64 %_10.0, 1, !dbg !3534
  ret i64 %6, !dbg !3535

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_eb9ff3c3e62ed9a6080a33a1531d61cf) #11, !dbg !3534
  unreachable, !dbg !3534
}

; core::slice::sort::partial_insertion_sort
; Function Attrs: cold noredzone nounwind
define zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17h200c50a677d97f2cE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #2 !dbg !3536 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_50 = alloca i64, align 8
  %_42 = alloca i64, align 8
  %_17 = alloca { ptr, ptr }, align 8
  %_12 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %i = alloca i64, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3540, metadata !DIExpression()), !dbg !3548
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3541, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.declare(metadata ptr %i, metadata !3544, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3546, metadata !DIExpression()), !dbg !3551
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3552
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3542, metadata !DIExpression()), !dbg !3553
  store i64 1, ptr %i, align 8, !dbg !3554
  store i64 0, ptr %_7, align 8, !dbg !3555
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3555
  store i64 5, ptr %3, align 8, !dbg !3555
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3555
  %5 = load i64, ptr %4, align 8, !dbg !3555, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3555
  %7 = load i64, ptr %6, align 8, !dbg !3555, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64 %5, i64 %7) #10, !dbg !3555
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3555
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3555
  %9 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3555
  store i64 %_6.0, ptr %9, align 8, !dbg !3555
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3555
  store i64 %_6.1, ptr %10, align 8, !dbg !3555
  br label %bb2, !dbg !3556

bb2:                                              ; preds = %bb25, %bb21, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %11 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8 %iter) #10, !dbg !3551
  store { i64, i64 } %11, ptr %_9, align 8, !dbg !3551
  %_11 = load i64, ptr %_9, align 8, !dbg !3551, !range !1059, !noundef !24
  %12 = icmp eq i64 %_11, 0, !dbg !3551
  br i1 %12, label %bb5, label %bb6, !dbg !3551

bb5:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !3557
  br label %bb28, !dbg !3558

bb6:                                              ; preds = %bb15, %bb2
  %_14 = load i64, ptr %i, align 8, !dbg !3559, !noundef !24
  %_13 = icmp ult i64 %_14, %v.1, !dbg !3559
  br i1 %_13, label %bb8, label %bb7, !dbg !3559

bb4:                                              ; No predecessors!
  unreachable, !dbg !3551

bb7:                                              ; preds = %bb6
  store i8 0, ptr %_12, align 1, !dbg !3559
  br label %bb9, !dbg !3559

bb8:                                              ; preds = %bb6
  %_21 = load i64, ptr %i, align 8, !dbg !3560, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_19 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %v.0, i64 %v.1, i64 %_21) #10, !dbg !3561
  %_26 = load i64, ptr %i, align 8, !dbg !3562, !noundef !24
  %_27.0 = sub i64 %_26, 1, !dbg !3562
  %_27.1 = icmp ult i64 %_26, 1, !dbg !3562
  %13 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !3562
  br i1 %13, label %panic, label %bb11, !dbg !3562

bb11:                                             ; preds = %bb8
; call core::slice::<impl [T]>::get_unchecked
  %_23 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %v.0, i64 %v.1, i64 %_27.0) #10, !dbg !3563
  store ptr %_19, ptr %_17, align 8, !dbg !3564
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3564
  store ptr %_23, ptr %14, align 8, !dbg !3564
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 0, !dbg !3564
  %16 = load ptr, ptr %15, align 8, !dbg !3564, !nonnull !24, !align !510, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3564
  %18 = load ptr, ptr %17, align 8, !dbg !3564, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_16 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3564
  %_15 = xor i1 %_16, true, !dbg !3565
  %19 = zext i1 %_15 to i8, !dbg !3559
  store i8 %19, ptr %_12, align 1, !dbg !3559
  br label %bb9, !dbg !3559

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_1b0364f570c3f3f1c1af025f5e783cc6) #11, !dbg !3562
  unreachable, !dbg !3562

bb9:                                              ; preds = %bb7, %bb11
  %20 = load i8, ptr %_12, align 1, !dbg !3559, !range !212, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3559
  br i1 %21, label %bb14, label %bb16, !dbg !3559

bb16:                                             ; preds = %bb9
  %_30 = load i64, ptr %i, align 8, !dbg !3566, !noundef !24
  %_29 = icmp eq i64 %_30, %v.1, !dbg !3566
  br i1 %_29, label %bb17, label %bb18, !dbg !3566

bb14:                                             ; preds = %bb9
  %22 = load i64, ptr %i, align 8, !dbg !3567, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !3567
  %_28.0 = extractvalue { i64, i1 } %23, 0, !dbg !3567
  %_28.1 = extractvalue { i64, i1 } %23, 1, !dbg !3567
  %24 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !3567
  br i1 %24, label %panic1, label %bb15, !dbg !3567

bb15:                                             ; preds = %bb14
  store i64 %_28.0, ptr %i, align 8, !dbg !3567
  br label %bb6, !dbg !3568

panic1:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_b9bd92873c8864922e2a1bc25228a503) #11, !dbg !3567
  unreachable, !dbg !3567

bb18:                                             ; preds = %bb16
  %_31 = icmp ult i64 %v.1, 50, !dbg !3569
  br i1 %_31, label %bb19, label %bb20, !dbg !3569

bb17:                                             ; preds = %bb16
  store i8 1, ptr %0, align 1, !dbg !3570
  br label %bb28, !dbg !3571

bb28:                                             ; preds = %bb5, %bb19, %bb17
  %25 = load i8, ptr %0, align 1, !dbg !3558, !range !212, !noundef !24
  %26 = trunc i8 %25 to i1, !dbg !3558
  ret i1 %26, !dbg !3558

bb20:                                             ; preds = %bb18
  %_34 = load i64, ptr %i, align 8, !dbg !3574, !noundef !24
  %_35.0 = sub i64 %_34, 1, !dbg !3574
  %_35.1 = icmp ult i64 %_34, 1, !dbg !3574
  %27 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !3574
  br i1 %27, label %panic2, label %bb21, !dbg !3574

bb19:                                             ; preds = %bb18
  store i8 0, ptr %0, align 1, !dbg !3575
  br label %bb28, !dbg !3571

bb21:                                             ; preds = %bb20
  %_36 = load i64, ptr %i, align 8, !dbg !3576, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hfb1a6b474d31dd0dE"(ptr align 8 %v.0, i64 %v.1, i64 %_35.0, i64 %_36, ptr align 8 @alloc_fee97dfe87b21721044ce3fabb239dc6) #10, !dbg !3577
  %_38 = load i64, ptr %i, align 8, !dbg !3578, !noundef !24
  %_37 = icmp uge i64 %_38, 2, !dbg !3578
  br i1 %_37, label %bb23, label %bb2, !dbg !3578

panic2:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c695703731237b99eddff9afba3df2b5) #11, !dbg !3574
  unreachable, !dbg !3574

bb23:                                             ; preds = %bb21
  %_43 = load i64, ptr %i, align 8, !dbg !3579, !noundef !24
  store i64 %_43, ptr %_42, align 8, !dbg !3580
  %28 = load i64, ptr %_42, align 8, !dbg !3581, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %29 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb8e723db52cf0423E"(ptr align 8 %v.0, i64 %v.1, i64 %28, ptr align 8 @alloc_e5c322dbc634d1a43b2bd608756bc9dc) #10, !dbg !3581
  %_41.0 = extractvalue { ptr, i64 } %29, 0, !dbg !3581
  %_41.1 = extractvalue { ptr, i64 } %29, 1, !dbg !3581
  %_45 = load i64, ptr %i, align 8, !dbg !3582, !noundef !24
  %_46.0 = sub i64 %_45, 1, !dbg !3582
  %_46.1 = icmp ult i64 %_45, 1, !dbg !3582
  %30 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3582
  br i1 %30, label %panic3, label %bb25, !dbg !3582

bb25:                                             ; preds = %bb23
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17h08602fcfded903daE(ptr align 8 %_41.0, i64 %_41.1, i64 %_46.0, ptr align 8 %is_less) #10, !dbg !3583
  %_51 = load i64, ptr %i, align 8, !dbg !3584, !noundef !24
  store i64 %_51, ptr %_50, align 8, !dbg !3585
  %31 = load i64, ptr %_50, align 8, !dbg !3586, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %32 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb8e723db52cf0423E"(ptr align 8 %v.0, i64 %v.1, i64 %31, ptr align 8 @alloc_5f51a9cdc9a0eb43c97a381a94864e3d) #10, !dbg !3586
  %_49.0 = extractvalue { ptr, i64 } %32, 0, !dbg !3586
  %_49.1 = extractvalue { ptr, i64 } %32, 1, !dbg !3586
; call core::slice::sort::insertion_sort_shift_right
  call void @_ZN4core5slice4sort26insertion_sort_shift_right17h23465846f6116262E(ptr align 8 %_49.0, i64 %_49.1, i64 1, ptr align 8 %is_less) #10, !dbg !3587
  br label %bb2, !dbg !3587

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_70c32dc456736fcf29cf7c086924026f) #11, !dbg !3582
  unreachable, !dbg !3582
}

; core::slice::sort::insertion_sort_shift_left
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort25insertion_sort_shift_left17h08602fcfded903daE(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3588 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_20 = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3592, metadata !DIExpression()), !dbg !3601
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3593, metadata !DIExpression()), !dbg !3602
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3594, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3597, metadata !DIExpression()), !dbg !3604
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3605
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3595, metadata !DIExpression()), !dbg !3606
  %2 = icmp eq i64 %offset, 0, !dbg !3607
  br i1 %2, label %bb1, label %bb2, !dbg !3607

bb1:                                              ; preds = %start
  store i8 0, ptr %_7, align 1, !dbg !3607
  br label %bb3, !dbg !3607

bb2:                                              ; preds = %start
  %_8 = icmp ule i64 %offset, %v.1, !dbg !3608
  %3 = zext i1 %_8 to i8, !dbg !3607
  store i8 %3, ptr %_7, align 1, !dbg !3607
  br label %bb3, !dbg !3607

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, ptr %_7, align 1, !dbg !3609, !range !212, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3609
  %_6 = xor i1 %5, true, !dbg !3609
  br i1 %_6, label %bb4, label %bb5, !dbg !3609

bb5:                                              ; preds = %bb3
  store i64 %offset, ptr %_11, align 8, !dbg !3610
  %6 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3610
  store i64 %v.1, ptr %6, align 8, !dbg !3610
  %7 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 0, !dbg !3610
  %8 = load i64, ptr %7, align 8, !dbg !3610, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3610
  %10 = load i64, ptr %9, align 8, !dbg !3610, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %11 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64 %8, i64 %10) #10, !dbg !3610
  %_10.0 = extractvalue { i64, i64 } %11, 0, !dbg !3610
  %_10.1 = extractvalue { i64, i64 } %11, 1, !dbg !3610
  %12 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3610
  store i64 %_10.0, ptr %12, align 8, !dbg !3610
  %13 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3610
  store i64 %_10.1, ptr %13, align 8, !dbg !3610
  br label %bb7, !dbg !3611

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_9e39c800f048d213258e66d982cdf28e, i64 46, ptr align 8 @alloc_279a77f6f3fdc6ce693ddb57cebbb269) #11, !dbg !3609
  unreachable, !dbg !3609

bb7:                                              ; preds = %bb9, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %14 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8 %iter) #10, !dbg !3604
  store { i64, i64 } %14, ptr %_13, align 8, !dbg !3604
  %_15 = load i64, ptr %_13, align 8, !dbg !3604, !range !1059, !noundef !24
  %15 = icmp eq i64 %_15, 0, !dbg !3604
  br i1 %15, label %bb11, label %bb9, !dbg !3604

bb11:                                             ; preds = %bb7
  ret void, !dbg !3612

bb9:                                              ; preds = %bb7
  %16 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3613
  %i = load i64, ptr %16, align 8, !dbg !3613, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3613
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3599, metadata !DIExpression()), !dbg !3614
  store i64 %i, ptr %_20, align 8, !dbg !3615
  %17 = load i64, ptr %_20, align 8, !dbg !3616, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %18 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5488d93d2bd9a2b1E"(ptr align 8 %v.0, i64 %v.1, i64 %17, ptr align 8 @alloc_567f7856390b0909cc556030781e52cf) #10, !dbg !3616
  %_19.0 = extractvalue { ptr, i64 } %18, 0, !dbg !3616
  %_19.1 = extractvalue { ptr, i64 } %18, 1, !dbg !3616
; call core::slice::sort::insert_tail
  call void @_ZN4core5slice4sort11insert_tail17h7e21238243f0b54eE(ptr align 8 %_19.0, i64 %_19.1, ptr align 8 %is_less) #10, !dbg !3617
  br label %bb7, !dbg !3617

bb10:                                             ; No predecessors!
  unreachable, !dbg !3604
}

; core::slice::sort::insertion_sort_shift_right
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort26insertion_sort_shift_right17h23465846f6116262E(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3618 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3620, metadata !DIExpression()), !dbg !3629
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3621, metadata !DIExpression()), !dbg !3630
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3622, metadata !DIExpression()), !dbg !3631
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3625, metadata !DIExpression()), !dbg !3632
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3633
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3623, metadata !DIExpression()), !dbg !3634
  %2 = icmp eq i64 %offset, 0, !dbg !3635
  br i1 %2, label %bb4, label %bb5, !dbg !3635

bb4:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !3635
  br label %bb6, !dbg !3635

bb5:                                              ; preds = %start
  %_9 = icmp ule i64 %offset, %v.1, !dbg !3636
  %3 = zext i1 %_9 to i8, !dbg !3635
  store i8 %3, ptr %_8, align 1, !dbg !3635
  br label %bb6, !dbg !3635

bb6:                                              ; preds = %bb4, %bb5
  %4 = load i8, ptr %_8, align 1, !dbg !3635, !range !212, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3635
  br i1 %5, label %bb2, label %bb1, !dbg !3635

bb1:                                              ; preds = %bb6
  store i8 0, ptr %_7, align 1, !dbg !3635
  br label %bb3, !dbg !3635

bb2:                                              ; preds = %bb6
  %_10 = icmp uge i64 %v.1, 2, !dbg !3637
  %6 = zext i1 %_10 to i8, !dbg !3635
  store i8 %6, ptr %_7, align 1, !dbg !3635
  br label %bb3, !dbg !3635

bb3:                                              ; preds = %bb1, %bb2
  %7 = load i8, ptr %_7, align 1, !dbg !3638, !range !212, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !3638
  %_6 = xor i1 %8, true, !dbg !3638
  br i1 %_6, label %bb7, label %bb8, !dbg !3638

bb8:                                              ; preds = %bb3
  store i64 0, ptr %_14, align 8, !dbg !3639
  %9 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3639
  store i64 %offset, ptr %9, align 8, !dbg !3639
  %10 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !3639
  %11 = load i64, ptr %10, align 8, !dbg !3639, !noundef !24
  %12 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3639
  %13 = load i64, ptr %12, align 8, !dbg !3639, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %14 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hedfd72d8da4be310E(i64 %11, i64 %13) #10, !dbg !3639
  %_13.0 = extractvalue { i64, i64 } %14, 0, !dbg !3639
  %_13.1 = extractvalue { i64, i64 } %14, 1, !dbg !3639
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %15 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h19a02a70245f0079E"(i64 %_13.0, i64 %_13.1) #10, !dbg !3639
  %_12.0 = extractvalue { i64, i64 } %15, 0, !dbg !3639
  %_12.1 = extractvalue { i64, i64 } %15, 1, !dbg !3639
  %16 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3639
  store i64 %_12.0, ptr %16, align 8, !dbg !3639
  %17 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3639
  store i64 %_12.1, ptr %17, align 8, !dbg !3639
  br label %bb11, !dbg !3640

bb7:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_d07cf4d056c601bb7f235c04bb3f2a92, i64 58, ptr align 8 @alloc_76a6a2a8de78715ffc6423e290546ad3) #11, !dbg !3638
  unreachable, !dbg !3638

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %18 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf50e9e67c9edba3aE"(ptr align 8 %iter) #10, !dbg !3632
  store { i64, i64 } %18, ptr %_16, align 8, !dbg !3632
  %_18 = load i64, ptr %_16, align 8, !dbg !3632, !range !1059, !noundef !24
  %19 = icmp eq i64 %_18, 0, !dbg !3632
  br i1 %19, label %bb15, label %bb13, !dbg !3632

bb15:                                             ; preds = %bb11
  ret void, !dbg !3641

bb13:                                             ; preds = %bb11
  %20 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !3642
  %i = load i64, ptr %20, align 8, !dbg !3642, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3642
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3627, metadata !DIExpression()), !dbg !3643
  store i64 %i, ptr %_23, align 8, !dbg !3644
  %21 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3644
  store i64 %v.1, ptr %21, align 8, !dbg !3644
  %22 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !3645
  %23 = load i64, ptr %22, align 8, !dbg !3645, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3645
  %25 = load i64, ptr %24, align 8, !dbg !3645, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %26 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h24a7347732aef70aE"(ptr align 8 %v.0, i64 %v.1, i64 %23, i64 %25, ptr align 8 @alloc_358f9362dd0408a7b81aa9f27fddb533) #10, !dbg !3645
  %_22.0 = extractvalue { ptr, i64 } %26, 0, !dbg !3645
  %_22.1 = extractvalue { ptr, i64 } %26, 1, !dbg !3645
; call core::slice::sort::insert_head
  call void @_ZN4core5slice4sort11insert_head17hb00f1094bbc019a7E(ptr align 8 %_22.0, i64 %_22.1, ptr align 8 %is_less) #10, !dbg !3646
  br label %bb11, !dbg !3646

bb14:                                             ; No predecessors!
  unreachable, !dbg !3632
}

; core::slice::sort::recurse
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort7recurse17hc3b3c0b42fe2b898E(ptr align 8 %0, i64 %1, ptr align 8 %is_less, ptr align 8 %2, i32 %3) unnamed_addr #1 !dbg !3647 {
start:
  %pivot.dbg.spill9 = alloca ptr, align 8
  %right.dbg.spill7 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill4 = alloca { ptr, i64 }, align 8
  %right.dbg.spill = alloca { ptr, i64 }, align 8
  %left.dbg.spill = alloca { ptr, i64 }, align 8
  %was_p.dbg.spill = alloca i8, align 1
  %mid.dbg.spill2 = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %p.dbg.spill = alloca ptr, align 8
  %likely_sorted.dbg.spill = alloca i8, align 1
  %pivot.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %_75 = alloca ptr, align 8
  %_73 = alloca ptr, align 8
  %_60 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_56 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_44 = alloca i64, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_26 = alloca i8, align 1
  %_25 = alloca i8, align 1
  %was_partitioned = alloca i8, align 1
  %was_balanced = alloca i8, align 1
  %limit = alloca i32, align 4
  %pred = alloca ptr, align 8
  %v = alloca { ptr, i64 }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %pred, align 8
  store i32 %3, ptr %limit, align 4
  call void @llvm.dbg.declare(metadata ptr %v, metadata !3662, metadata !DIExpression()), !dbg !3690
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3663, metadata !DIExpression()), !dbg !3691
  call void @llvm.dbg.declare(metadata ptr %pred, metadata !3664, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.declare(metadata ptr %limit, metadata !3665, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.declare(metadata ptr %was_balanced, metadata !3666, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.declare(metadata ptr %was_partitioned, metadata !3668, metadata !DIExpression()), !dbg !3695
  store i8 1, ptr %was_balanced, align 1, !dbg !3696
  store i8 1, ptr %was_partitioned, align 1, !dbg !3697
  br label %bb1, !dbg !3698

bb1:                                              ; preds = %bb36, %bb34, %bb24, %start
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3699
  %_8.0 = load ptr, ptr %6, align 8, !dbg !3699, !nonnull !24, !align !510, !noundef !24
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3699
  %_8.1 = load i64, ptr %7, align 8, !dbg !3699, !noundef !24
  store i64 %_8.1, ptr %len.dbg.spill, align 8, !dbg !3699
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3670, metadata !DIExpression()), !dbg !3700
  %_9 = icmp ule i64 %_8.1, 20, !dbg !3701
  br i1 %_9, label %bb2, label %bb4, !dbg !3701

bb4:                                              ; preds = %bb1
  %_13 = load i32, ptr %limit, align 4, !dbg !3702, !noundef !24
  %8 = icmp eq i32 %_13, 0, !dbg !3702
  br i1 %8, label %bb5, label %bb6, !dbg !3702

bb2:                                              ; preds = %bb1
  %_10 = icmp uge i64 %_8.1, 2, !dbg !3703
  br i1 %_10, label %bb3, label %bb38, !dbg !3703

bb38:                                             ; preds = %bb5, %bb18, %bb3, %bb2
  ret void, !dbg !3704

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3705
  %_12.0 = load ptr, ptr %9, align 8, !dbg !3705, !nonnull !24, !align !510, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3705
  %_12.1 = load i64, ptr %10, align 8, !dbg !3705, !noundef !24
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17h08602fcfded903daE(ptr align 8 %_12.0, i64 %_12.1, i64 1, ptr align 8 %is_less) #10, !dbg !3706
  br label %bb38, !dbg !3706

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3707
  %_15.0 = load ptr, ptr %11, align 8, !dbg !3707, !nonnull !24, !align !510, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3707
  %_15.1 = load i64, ptr %12, align 8, !dbg !3707, !noundef !24
; call core::slice::sort::heapsort
  call void @_ZN4core5slice4sort8heapsort17h740f83468f1a1e0eE(ptr align 8 %_15.0, i64 %_15.1, ptr align 8 %is_less) #10, !dbg !3708
  br label %bb38, !dbg !3708

bb6:                                              ; preds = %bb4
  %13 = load i8, ptr %was_balanced, align 1, !dbg !3709, !range !212, !noundef !24
  %_17 = trunc i8 %13 to i1, !dbg !3709
  %_16 = xor i1 %_17, true, !dbg !3710
  br i1 %_16, label %bb7, label %bb10, !dbg !3710

bb10:                                             ; preds = %bb9, %bb6
  %14 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3711
  %_24.0 = load ptr, ptr %14, align 8, !dbg !3711, !nonnull !24, !align !510, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3711
  %_24.1 = load i64, ptr %15, align 8, !dbg !3711, !noundef !24
; call core::slice::sort::choose_pivot
  %16 = call { i64, i8 } @_ZN4core5slice4sort12choose_pivot17h68c79886d4e1b0c8E(ptr align 8 %_24.0, i64 %_24.1, ptr align 8 %is_less) #10, !dbg !3712
  %_23.0 = extractvalue { i64, i8 } %16, 0, !dbg !3712
  %17 = extractvalue { i64, i8 } %16, 1, !dbg !3712
  %_23.1 = trunc i8 %17 to i1, !dbg !3712
  store i64 %_23.0, ptr %pivot.dbg.spill, align 8, !dbg !3713
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3672, metadata !DIExpression()), !dbg !3714
  %18 = zext i1 %_23.1 to i8, !dbg !3715
  store i8 %18, ptr %likely_sorted.dbg.spill, align 1, !dbg !3715
  call void @llvm.dbg.declare(metadata ptr %likely_sorted.dbg.spill, metadata !3674, metadata !DIExpression()), !dbg !3716
  %19 = load i8, ptr %was_balanced, align 1, !dbg !3717, !range !212, !noundef !24
  %_27 = trunc i8 %19 to i1, !dbg !3717
  br i1 %_27, label %bb16, label %bb15, !dbg !3717

bb7:                                              ; preds = %bb6
  %20 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3718
  %_19.0 = load ptr, ptr %20, align 8, !dbg !3718, !nonnull !24, !align !510, !noundef !24
  %21 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3718
  %_19.1 = load i64, ptr %21, align 8, !dbg !3718, !noundef !24
; call core::slice::sort::break_patterns
  call void @_ZN4core5slice4sort14break_patterns17hf8643adb856a1c34E(ptr align 8 %_19.0, i64 %_19.1) #10, !dbg !3719
  %22 = load i32, ptr %limit, align 4, !dbg !3720, !noundef !24
  %_20.0 = sub i32 %22, 1, !dbg !3720
  %_20.1 = icmp ult i32 %22, 1, !dbg !3720
  %23 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !3720
  br i1 %23, label %panic, label %bb9, !dbg !3720

bb9:                                              ; preds = %bb7
  store i32 %_20.0, ptr %limit, align 4, !dbg !3720
  br label %bb10, !dbg !3721

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_cbcb86f332d4e7f734812b679d51fa9f) #11, !dbg !3720
  unreachable, !dbg !3720

bb15:                                             ; preds = %bb10
  store i8 0, ptr %_26, align 1, !dbg !3717
  br label %bb17, !dbg !3717

bb16:                                             ; preds = %bb10
  %24 = load i8, ptr %was_partitioned, align 1, !dbg !3722, !range !212, !noundef !24
  %_28 = trunc i8 %24 to i1, !dbg !3722
  %25 = zext i1 %_28 to i8, !dbg !3717
  store i8 %25, ptr %_26, align 1, !dbg !3717
  br label %bb17, !dbg !3717

bb17:                                             ; preds = %bb15, %bb16
  %26 = load i8, ptr %_26, align 1, !dbg !3717, !range !212, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !3717
  br i1 %27, label %bb13, label %bb12, !dbg !3717

bb12:                                             ; preds = %bb17
  store i8 0, ptr %_25, align 1, !dbg !3717
  br label %bb14, !dbg !3717

bb13:                                             ; preds = %bb17
  %28 = zext i1 %_23.1 to i8, !dbg !3717
  store i8 %28, ptr %_25, align 1, !dbg !3717
  br label %bb14, !dbg !3717

bb14:                                             ; preds = %bb12, %bb13
  %29 = load i8, ptr %_25, align 1, !dbg !3717, !range !212, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !3717
  br i1 %30, label %bb18, label %bb20, !dbg !3717

bb20:                                             ; preds = %bb18, %bb14
  %31 = load ptr, ptr %pred, align 8, !dbg !3723, !noundef !24
  %32 = ptrtoint ptr %31 to i64, !dbg !3723
  %33 = icmp eq i64 %32, 0, !dbg !3723
  %_31 = select i1 %33, i64 0, i64 1, !dbg !3723
  %34 = icmp eq i64 %_31, 1, !dbg !3723
  br i1 %34, label %bb21, label %bb27, !dbg !3723

bb18:                                             ; preds = %bb14
  %35 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3724
  %_30.0 = load ptr, ptr %35, align 8, !dbg !3724, !nonnull !24, !align !510, !noundef !24
  %36 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3724
  %_30.1 = load i64, ptr %36, align 8, !dbg !3724, !noundef !24
; call core::slice::sort::partial_insertion_sort
  %_29 = call zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17h200c50a677d97f2cE(ptr align 8 %_30.0, i64 %_30.1, ptr align 8 %is_less) #10, !dbg !3725
  br i1 %_29, label %bb38, label %bb20, !dbg !3725

bb21:                                             ; preds = %bb20
  %p = load ptr, ptr %pred, align 8, !dbg !3726, !nonnull !24, !align !510, !noundef !24
  store ptr %p, ptr %p.dbg.spill, align 8, !dbg !3726
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !3675, metadata !DIExpression()), !dbg !3726
  %37 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3727
  %38 = load ptr, ptr %37, align 8, !dbg !3727, !nonnull !24, !align !510, !noundef !24
  %39 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3727
  %_37 = load i64, ptr %39, align 8, !dbg !3727, !noundef !24
  %_38 = icmp ult i64 %_23.0, %_37, !dbg !3727
  %40 = call i1 @llvm.expect.i1(i1 %_38, i1 true), !dbg !3727
  br i1 %40, label %bb22, label %panic1, !dbg !3727

bb27:                                             ; preds = %bb22, %bb20
  %41 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3728
  %_49.0 = load ptr, ptr %41, align 8, !dbg !3728, !nonnull !24, !align !510, !noundef !24
  %42 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3728
  %_49.1 = load i64, ptr %42, align 8, !dbg !3728, !noundef !24
; call core::slice::sort::partition
  %43 = call { i64, i8 } @_ZN4core5slice4sort9partition17h9e52fda665425d78E(ptr align 8 %_49.0, i64 %_49.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3729
  %_48.0 = extractvalue { i64, i8 } %43, 0, !dbg !3729
  %44 = extractvalue { i64, i8 } %43, 1, !dbg !3729
  %_48.1 = trunc i8 %44 to i1, !dbg !3729
  store i64 %_48.0, ptr %mid.dbg.spill2, align 8, !dbg !3730
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill2, metadata !3679, metadata !DIExpression()), !dbg !3731
  %45 = zext i1 %_48.1 to i8, !dbg !3732
  store i8 %45, ptr %was_p.dbg.spill, align 1, !dbg !3732
  call void @llvm.dbg.declare(metadata ptr %was_p.dbg.spill, metadata !3681, metadata !DIExpression()), !dbg !3733
  %_52.0 = sub i64 %_8.1, %_48.0, !dbg !3734
  %_52.1 = icmp ult i64 %_8.1, %_48.0, !dbg !3734
  %46 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !3734
  br i1 %46, label %panic3, label %bb29, !dbg !3734

bb22:                                             ; preds = %bb21
  %47 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3735
  %48 = load ptr, ptr %47, align 8, !dbg !3735, !nonnull !24, !align !510, !noundef !24
  %49 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3735
  %50 = load i64, ptr %49, align 8, !dbg !3735, !noundef !24
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %48, i64 0, i64 %_23.0, !dbg !3735
  store ptr %p, ptr %_35, align 8, !dbg !3736
  %51 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3736
  store ptr %_36, ptr %51, align 8, !dbg !3736
  %52 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3736
  %53 = load ptr, ptr %52, align 8, !dbg !3736, !nonnull !24, !align !510, !noundef !24
  %54 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3736
  %55 = load ptr, ptr %54, align 8, !dbg !3736, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %53, ptr align 8 %55) #10, !dbg !3736
  %_33 = xor i1 %_34, true, !dbg !3737
  br i1 %_33, label %bb24, label %bb27, !dbg !3737

panic1:                                           ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_23.0, i64 %_37, ptr align 8 @alloc_ad05988ca89b859817054745c50077fd) #11, !dbg !3727
  unreachable, !dbg !3727

bb24:                                             ; preds = %bb22
  %56 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3738
  %_40.0 = load ptr, ptr %56, align 8, !dbg !3738, !nonnull !24, !align !510, !noundef !24
  %57 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3738
  %_40.1 = load i64, ptr %57, align 8, !dbg !3738, !noundef !24
; call core::slice::sort::partition_equal
  %mid = call i64 @_ZN4core5slice4sort15partition_equal17hd09940ab2606d628E(ptr align 8 %_40.0, i64 %_40.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3739
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3739
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3677, metadata !DIExpression()), !dbg !3740
  %58 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3741
  %_43.0 = load ptr, ptr %58, align 8, !dbg !3741, !nonnull !24, !align !510, !noundef !24
  %59 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3741
  %_43.1 = load i64, ptr %59, align 8, !dbg !3741, !noundef !24
  store i64 %mid, ptr %_44, align 8, !dbg !3742
  %60 = load i64, ptr %_44, align 8, !dbg !3741, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %61 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hbb192473bdfad3fdE"(ptr align 8 %_43.0, i64 %_43.1, i64 %60, ptr align 8 @alloc_973477e74e390e850c7b9a61ecb4d704) #10, !dbg !3741
  %_42.0 = extractvalue { ptr, i64 } %61, 0, !dbg !3741
  %_42.1 = extractvalue { ptr, i64 } %61, 1, !dbg !3741
  %62 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3743
  store ptr %_42.0, ptr %62, align 8, !dbg !3743
  %63 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3743
  store i64 %_42.1, ptr %63, align 8, !dbg !3743
  br label %bb1, !dbg !3744

bb29:                                             ; preds = %bb27
; call core::cmp::min
  %_50 = call i64 @_ZN4core3cmp3min17h2cd815b39eadeab9E(i64 %_48.0, i64 %_52.0) #10, !dbg !3746
  %_53 = udiv i64 %_8.1, 8, !dbg !3747
  %64 = icmp uge i64 %_50, %_53, !dbg !3748
  %65 = zext i1 %64 to i8, !dbg !3748
  store i8 %65, ptr %was_balanced, align 1, !dbg !3748
  %66 = zext i1 %_48.1 to i8, !dbg !3749
  store i8 %66, ptr %was_partitioned, align 1, !dbg !3749
  %67 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3750
  %_57.0 = load ptr, ptr %67, align 8, !dbg !3750, !nonnull !24, !align !510, !noundef !24
  %68 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3750
  %_57.1 = load i64, ptr %68, align 8, !dbg !3750, !noundef !24
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h510dd90ebd855d82E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_56, ptr align 8 %_57.0, i64 %_57.1, i64 %_48.0, ptr align 8 @alloc_32c054bbe0aceca970db8bea1d863075) #10, !dbg !3750
  %69 = getelementptr inbounds { ptr, i64 }, ptr %_56, i32 0, i32 0, !dbg !3751
  %left.0 = load ptr, ptr %69, align 8, !dbg !3751, !nonnull !24, !align !510, !noundef !24
  %70 = getelementptr inbounds { ptr, i64 }, ptr %_56, i32 0, i32 1, !dbg !3751
  %left.1 = load i64, ptr %70, align 8, !dbg !3751, !noundef !24
  %71 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 0, !dbg !3751
  store ptr %left.0, ptr %71, align 8, !dbg !3751
  %72 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 1, !dbg !3751
  store i64 %left.1, ptr %72, align 8, !dbg !3751
  call void @llvm.dbg.declare(metadata ptr %left.dbg.spill, metadata !3682, metadata !DIExpression()), !dbg !3752
  %73 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_56, i32 0, i32 1, !dbg !3753
  %74 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 0, !dbg !3753
  %right.0 = load ptr, ptr %74, align 8, !dbg !3753, !nonnull !24, !align !510, !noundef !24
  %75 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 1, !dbg !3753
  %right.1 = load i64, ptr %75, align 8, !dbg !3753, !noundef !24
  %76 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 0, !dbg !3753
  store ptr %right.0, ptr %76, align 8, !dbg !3753
  %77 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 1, !dbg !3753
  store i64 %right.1, ptr %77, align 8, !dbg !3753
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill, metadata !3684, metadata !DIExpression()), !dbg !3754
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h510dd90ebd855d82E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_60, ptr align 8 %right.0, i64 %right.1, i64 1, ptr align 8 @alloc_6923a33d4ddb6fc9d18a2edda44866f2) #10, !dbg !3755
  %78 = getelementptr inbounds { ptr, i64 }, ptr %_60, i32 0, i32 0, !dbg !3756
  %pivot.0 = load ptr, ptr %78, align 8, !dbg !3756, !nonnull !24, !align !510, !noundef !24
  %79 = getelementptr inbounds { ptr, i64 }, ptr %_60, i32 0, i32 1, !dbg !3756
  %pivot.1 = load i64, ptr %79, align 8, !dbg !3756, !noundef !24
  %80 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 0, !dbg !3756
  store ptr %pivot.0, ptr %80, align 8, !dbg !3756
  %81 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 1, !dbg !3756
  store i64 %pivot.1, ptr %81, align 8, !dbg !3756
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill4, metadata !3685, metadata !DIExpression()), !dbg !3757
  %82 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_60, i32 0, i32 1, !dbg !3758
  %83 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 0, !dbg !3758
  %right.05 = load ptr, ptr %83, align 8, !dbg !3758, !nonnull !24, !align !510, !noundef !24
  %84 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 1, !dbg !3758
  %right.16 = load i64, ptr %84, align 8, !dbg !3758, !noundef !24
  %85 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 0, !dbg !3758
  store ptr %right.05, ptr %85, align 8, !dbg !3758
  %86 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 1, !dbg !3758
  store i64 %right.16, ptr %86, align 8, !dbg !3758
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill7, metadata !3687, metadata !DIExpression()), !dbg !3759
  %_64 = icmp ult i64 0, %pivot.1, !dbg !3760
  %87 = call i1 @llvm.expect.i1(i1 %_64, i1 true), !dbg !3760
  br i1 %87, label %bb33, label %panic8, !dbg !3760

panic3:                                           ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_1bacda564c3ab0238f0c8f2006838ba3) #11, !dbg !3734
  unreachable, !dbg !3734

bb33:                                             ; preds = %bb29
  %pivot = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3761
  store ptr %pivot, ptr %pivot.dbg.spill9, align 8, !dbg !3761
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill9, metadata !3688, metadata !DIExpression()), !dbg !3762
  %_65 = icmp ult i64 %left.1, %right.16, !dbg !3763
  br i1 %_65, label %bb34, label %bb36, !dbg !3763

panic8:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 0, i64 %pivot.1, ptr align 8 @alloc_51cd39307bd8bcac3bc8bfea5d25ea17) #11, !dbg !3760
  unreachable, !dbg !3760

bb36:                                             ; preds = %bb33
  store ptr %pivot, ptr %_75, align 8, !dbg !3764
  %_76 = load i32, ptr %limit, align 4, !dbg !3765, !noundef !24
  %88 = load ptr, ptr %_75, align 8, !dbg !3766, !align !510, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17hc3b3c0b42fe2b898E(ptr align 8 %right.05, i64 %right.16, ptr align 8 %is_less, ptr align 8 %88, i32 %_76) #10, !dbg !3766
  %89 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3767
  store ptr %left.0, ptr %89, align 8, !dbg !3767
  %90 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3767
  store i64 %left.1, ptr %90, align 8, !dbg !3767
  br label %bb1, !dbg !3768

bb34:                                             ; preds = %bb33
  %_71 = load ptr, ptr %pred, align 8, !dbg !3769, !align !510, !noundef !24
  %_72 = load i32, ptr %limit, align 4, !dbg !3770, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17hc3b3c0b42fe2b898E(ptr align 8 %left.0, i64 %left.1, ptr align 8 %is_less, ptr align 8 %_71, i32 %_72) #10, !dbg !3771
  %91 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3772
  store ptr %right.05, ptr %91, align 8, !dbg !3772
  %92 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3772
  store i64 %right.16, ptr %92, align 8, !dbg !3772
  store ptr %pivot, ptr %_73, align 8, !dbg !3773
  %93 = load ptr, ptr %_73, align 8, !dbg !3774, !align !510, !noundef !24
  store ptr %93, ptr %pred, align 8, !dbg !3774
  br label %bb1, !dbg !3768
}

; core::slice::sort::heapsort
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort8heapsort17h740f83468f1a1e0eE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %0) unnamed_addr #2 !dbg !3775 {
start:
  %i.dbg.spill3 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_35 = alloca i64, align 8
  %_32 = alloca { { ptr, i64 }, i64 }, align 8
  %_25 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_21 = alloca { i64, i64 }, align 8
  %_18 = alloca { { ptr, i64 }, i64 }, align 8
  %_12 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %sift_down = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3777, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3778, metadata !DIExpression()), !dbg !3796
  call void @llvm.dbg.declare(metadata ptr %sift_down, metadata !3779, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3785, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !3789, metadata !DIExpression()), !dbg !3799
  store ptr %is_less, ptr %sift_down, align 8, !dbg !3800
  %_8 = udiv i64 %v.1, 2, !dbg !3801
  store i64 0, ptr %_7, align 8, !dbg !3802
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3802
  store i64 %_8, ptr %3, align 8, !dbg !3802
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3802
  %5 = load i64, ptr %4, align 8, !dbg !3802, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3802
  %7 = load i64, ptr %6, align 8, !dbg !3802, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %8 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hedfd72d8da4be310E(i64 %5, i64 %7) #10, !dbg !3802
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3802
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3802
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h19a02a70245f0079E"(i64 %_6.0, i64 %_6.1) #10, !dbg !3802
  %_5.0 = extractvalue { i64, i64 } %9, 0, !dbg !3802
  %_5.1 = extractvalue { i64, i64 } %9, 1, !dbg !3802
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3802
  store i64 %_5.0, ptr %10, align 8, !dbg !3802
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3802
  store i64 %_5.1, ptr %11, align 8, !dbg !3802
  br label %bb3, !dbg !3803

bb3:                                              ; preds = %bb5, %start
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf50e9e67c9edba3aE"(ptr align 8 %iter) #10, !dbg !3798
  store { i64, i64 } %12, ptr %_12, align 8, !dbg !3798
  %_14 = load i64, ptr %_12, align 8, !dbg !3798, !range !1059, !noundef !24
  %13 = icmp eq i64 %_14, 0, !dbg !3798
  br i1 %13, label %bb7, label %bb5, !dbg !3798

bb7:                                              ; preds = %bb3
  store i64 1, ptr %_21, align 8, !dbg !3804
  %14 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 1, !dbg !3804
  store i64 %v.1, ptr %14, align 8, !dbg !3804
  %15 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 0, !dbg !3804
  %16 = load i64, ptr %15, align 8, !dbg !3804, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 1, !dbg !3804
  %18 = load i64, ptr %17, align 8, !dbg !3804, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %19 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hedfd72d8da4be310E(i64 %16, i64 %18) #10, !dbg !3804
  %_20.0 = extractvalue { i64, i64 } %19, 0, !dbg !3804
  %_20.1 = extractvalue { i64, i64 } %19, 1, !dbg !3804
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h19a02a70245f0079E"(i64 %_20.0, i64 %_20.1) #10, !dbg !3804
  %_19.0 = extractvalue { i64, i64 } %20, 0, !dbg !3804
  %_19.1 = extractvalue { i64, i64 } %20, 1, !dbg !3804
  %21 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 0, !dbg !3804
  store i64 %_19.0, ptr %21, align 8, !dbg !3804
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 1, !dbg !3804
  store i64 %_19.1, ptr %22, align 8, !dbg !3804
  br label %bb10, !dbg !3805

bb5:                                              ; preds = %bb3
  %23 = getelementptr inbounds { i64, i64 }, ptr %_12, i32 0, i32 1, !dbg !3806
  %i = load i64, ptr %23, align 8, !dbg !3806, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3806
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3787, metadata !DIExpression()), !dbg !3807
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !3808
  store ptr %v.0, ptr %24, align 8, !dbg !3808
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !3808
  store i64 %v.1, ptr %25, align 8, !dbg !3808
  %26 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_18, i32 0, i32 1, !dbg !3808
  store i64 %i, ptr %26, align 8, !dbg !3808
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !3808
  %28 = load ptr, ptr %27, align 8, !dbg !3808, !nonnull !24, !align !510, !noundef !24
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !3808
  %30 = load i64, ptr %29, align 8, !dbg !3808, !noundef !24
  %31 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_18, i32 0, i32 1, !dbg !3808
  %32 = load i64, ptr %31, align 8, !dbg !3808, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hb586cf36be65f1d1E"(ptr align 8 %sift_down, ptr align 8 %28, i64 %30, i64 %32) #10, !dbg !3808
  br label %bb3, !dbg !3808

bb6:                                              ; No predecessors!
  unreachable, !dbg !3798

bb10:                                             ; preds = %bb12, %bb7
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %33 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf50e9e67c9edba3aE"(ptr align 8 %iter1) #10, !dbg !3799
  store { i64, i64 } %33, ptr %_25, align 8, !dbg !3799
  %_27 = load i64, ptr %_25, align 8, !dbg !3799, !range !1059, !noundef !24
  %34 = icmp eq i64 %_27, 0, !dbg !3799
  br i1 %34, label %bb14, label %bb12, !dbg !3799

bb14:                                             ; preds = %bb10
  ret void, !dbg !3809

bb12:                                             ; preds = %bb10
  %35 = getelementptr inbounds { i64, i64 }, ptr %_25, i32 0, i32 1, !dbg !3810
  %i2 = load i64, ptr %35, align 8, !dbg !3810, !noundef !24
  store i64 %i2, ptr %i.dbg.spill3, align 8, !dbg !3810
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill3, metadata !3791, metadata !DIExpression()), !dbg !3811
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hfb1a6b474d31dd0dE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %i2, ptr align 8 @alloc_62156c0655ba3dfe9e59825cf1896fe6) #10, !dbg !3812
  store i64 %i2, ptr %_35, align 8, !dbg !3813
  %36 = load i64, ptr %_35, align 8, !dbg !3814, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %37 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb8e723db52cf0423E"(ptr align 8 %v.0, i64 %v.1, i64 %36, ptr align 8 @alloc_c950ac94360d86a24f4c94a7f995d246) #10, !dbg !3814
  %_34.0 = extractvalue { ptr, i64 } %37, 0, !dbg !3814
  %_34.1 = extractvalue { ptr, i64 } %37, 1, !dbg !3814
  %38 = getelementptr inbounds { ptr, i64 }, ptr %_32, i32 0, i32 0, !dbg !3815
  store ptr %_34.0, ptr %38, align 8, !dbg !3815
  %39 = getelementptr inbounds { ptr, i64 }, ptr %_32, i32 0, i32 1, !dbg !3815
  store i64 %_34.1, ptr %39, align 8, !dbg !3815
  %40 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_32, i32 0, i32 1, !dbg !3815
  store i64 0, ptr %40, align 8, !dbg !3815
  %41 = getelementptr inbounds { ptr, i64 }, ptr %_32, i32 0, i32 0, !dbg !3815
  %42 = load ptr, ptr %41, align 8, !dbg !3815, !nonnull !24, !align !510, !noundef !24
  %43 = getelementptr inbounds { ptr, i64 }, ptr %_32, i32 0, i32 1, !dbg !3815
  %44 = load i64, ptr %43, align 8, !dbg !3815, !noundef !24
  %45 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_32, i32 0, i32 1, !dbg !3815
  %46 = load i64, ptr %45, align 8, !dbg !3815, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hb586cf36be65f1d1E"(ptr align 8 %sift_down, ptr align 8 %42, i64 %44, i64 %46) #10, !dbg !3815
  br label %bb10, !dbg !3815

bb13:                                             ; No predecessors!
  unreachable, !dbg !3799
}

; core::slice::sort::heapsort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hb586cf36be65f1d1E"(ptr align 8 %_1, ptr align 8 %v.0, i64 %v.1, i64 %0) unnamed_addr #0 !dbg !3816 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_21 = alloca { ptr, ptr }, align 8
  %child = alloca i64, align 8
  %node = alloca i64, align 8
  store i64 %0, ptr %node, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !3823, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !3826
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3821, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.declare(metadata ptr %node, metadata !3822, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.declare(metadata ptr %child, metadata !3824, metadata !DIExpression()), !dbg !3829
  br label %bb1, !dbg !3830

bb1:                                              ; preds = %bb16, %start
  %_6 = load i64, ptr %node, align 8, !dbg !3831, !noundef !24
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 %_6), !dbg !3832
  %_7.0 = extractvalue { i64, i1 } %3, 0, !dbg !3832
  %_7.1 = extractvalue { i64, i1 } %3, 1, !dbg !3832
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !3832
  br i1 %4, label %panic, label %bb2, !dbg !3832

bb2:                                              ; preds = %bb1
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7.0, i64 1), !dbg !3832
  %_8.0 = extractvalue { i64, i1 } %5, 0, !dbg !3832
  %_8.1 = extractvalue { i64, i1 } %5, 1, !dbg !3832
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3832
  br i1 %6, label %panic1, label %bb3, !dbg !3832

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_9695292c9e3d363dcb39d420417d0ed9) #11, !dbg !3832
  unreachable, !dbg !3832

bb3:                                              ; preds = %bb2
  store i64 %_8.0, ptr %child, align 8, !dbg !3832
  %_10 = load i64, ptr %child, align 8, !dbg !3833, !noundef !24
  %_9 = icmp uge i64 %_10, %v.1, !dbg !3833
  br i1 %_9, label %bb18, label %bb4, !dbg !3833

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_9695292c9e3d363dcb39d420417d0ed9) #11, !dbg !3832
  unreachable, !dbg !3832

bb4:                                              ; preds = %bb3
  %_15 = load i64, ptr %child, align 8, !dbg !3834, !noundef !24
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 1), !dbg !3834
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !3834
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !3834
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !3834
  br i1 %8, label %panic2, label %bb5, !dbg !3834

bb18:                                             ; preds = %bb14, %bb3
  ret void, !dbg !3835

bb5:                                              ; preds = %bb4
  %_13 = icmp ult i64 %_16.0, %v.1, !dbg !3834
  br i1 %_13, label %bb6, label %bb12, !dbg !3834

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_d56365db6fc6463a3f048442ce997084) #11, !dbg !3834
  unreachable, !dbg !3834

bb12:                                             ; preds = %bb11, %bb5
  %_49 = load ptr, ptr %_1, align 8, !dbg !3836, !nonnull !24, !align !510, !noundef !24
  %_37 = load i64, ptr %node, align 8, !dbg !3837, !noundef !24
  %_39 = icmp ult i64 %_37, %v.1, !dbg !3838
  %9 = call i1 @llvm.expect.i1(i1 %_39, i1 true), !dbg !3838
  br i1 %9, label %bb13, label %panic7, !dbg !3838

bb6:                                              ; preds = %bb5
  %_48 = load ptr, ptr %_1, align 8, !dbg !3839, !nonnull !24, !align !510, !noundef !24
  %_23 = load i64, ptr %child, align 8, !dbg !3840, !noundef !24
  %_25 = icmp ult i64 %_23, %v.1, !dbg !3841
  %10 = call i1 @llvm.expect.i1(i1 %_25, i1 true), !dbg !3841
  br i1 %10, label %bb7, label %panic3, !dbg !3841

bb7:                                              ; preds = %bb6
  %_22 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_23, !dbg !3842
  %_28 = load i64, ptr %child, align 8, !dbg !3843, !noundef !24
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_28, i64 1), !dbg !3843
  %_29.0 = extractvalue { i64, i1 } %11, 0, !dbg !3843
  %_29.1 = extractvalue { i64, i1 } %11, 1, !dbg !3843
  %12 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !3843
  br i1 %12, label %panic4, label %bb8, !dbg !3843

panic3:                                           ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_23, i64 %v.1, ptr align 8 @alloc_29f798d3bcc8a1bcf3a658926d5d1015) #11, !dbg !3841
  unreachable, !dbg !3841

bb8:                                              ; preds = %bb7
  %_31 = icmp ult i64 %_29.0, %v.1, !dbg !3844
  %13 = call i1 @llvm.expect.i1(i1 %_31, i1 true), !dbg !3844
  br i1 %13, label %bb9, label %panic5, !dbg !3844

panic4:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_e5ead88f19d7037ba4d310b798190b71) #11, !dbg !3843
  unreachable, !dbg !3843

bb9:                                              ; preds = %bb8
  %_26 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_29.0, !dbg !3845
  store ptr %_22, ptr %_21, align 8, !dbg !3839
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3839
  store ptr %_26, ptr %14, align 8, !dbg !3839
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 0, !dbg !3839
  %16 = load ptr, ptr %15, align 8, !dbg !3839, !nonnull !24, !align !510, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3839
  %18 = load ptr, ptr %17, align 8, !dbg !3839, !nonnull !24, !align !510, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_20 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hf4e59da8d2b512fdE"(ptr align 8 %_48, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3839
  %_19 = zext i1 %_20 to i64, !dbg !3839
  %19 = load i64, ptr %child, align 8, !dbg !3846, !noundef !24
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 %_19), !dbg !3846
  %_32.0 = extractvalue { i64, i1 } %20, 0, !dbg !3846
  %_32.1 = extractvalue { i64, i1 } %20, 1, !dbg !3846
  %21 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !3846
  br i1 %21, label %panic6, label %bb11, !dbg !3846

panic5:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_29.0, i64 %v.1, ptr align 8 @alloc_61c99759d62a52158842d07700bdf5ed) #11, !dbg !3844
  unreachable, !dbg !3844

bb11:                                             ; preds = %bb9
  store i64 %_32.0, ptr %child, align 8, !dbg !3846
  br label %bb12, !dbg !3847

panic6:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_9103f795df2240632e392140ce5ff239) #11, !dbg !3846
  unreachable, !dbg !3846

bb13:                                             ; preds = %bb12
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_37, !dbg !3848
  %_41 = load i64, ptr %child, align 8, !dbg !3849, !noundef !24
  %_43 = icmp ult i64 %_41, %v.1, !dbg !3850
  %22 = call i1 @llvm.expect.i1(i1 %_43, i1 true), !dbg !3850
  br i1 %22, label %bb14, label %panic8, !dbg !3850

panic7:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_37, i64 %v.1, ptr align 8 @alloc_7f64380e599a5318b5f09bce5df2784a) #11, !dbg !3838
  unreachable, !dbg !3838

bb14:                                             ; preds = %bb13
  %_40 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_41, !dbg !3851
  store ptr %_36, ptr %_35, align 8, !dbg !3836
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3836
  store ptr %_40, ptr %23, align 8, !dbg !3836
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3836
  %25 = load ptr, ptr %24, align 8, !dbg !3836, !nonnull !24, !align !510, !noundef !24
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3836
  %27 = load ptr, ptr %26, align 8, !dbg !3836, !nonnull !24, !align !510, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_34 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hf4e59da8d2b512fdE"(ptr align 8 %_49, ptr align 8 %25, ptr align 8 %27) #10, !dbg !3836
  %_33 = xor i1 %_34, true, !dbg !3852
  br i1 %_33, label %bb18, label %bb16, !dbg !3852

panic8:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_41, i64 %v.1, ptr align 8 @alloc_c545692b757105133b1ebc79f22e2b7b) #11, !dbg !3850
  unreachable, !dbg !3850

bb16:                                             ; preds = %bb14
  %_45 = load i64, ptr %node, align 8, !dbg !3853, !noundef !24
  %_46 = load i64, ptr %child, align 8, !dbg !3854, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hfb1a6b474d31dd0dE"(ptr align 8 %v.0, i64 %v.1, i64 %_45, i64 %_46, ptr align 8 @alloc_df57f38b46cc30b70ba2c28fa7c20fd3) #10, !dbg !3855
  %_47 = load i64, ptr %child, align 8, !dbg !3856, !noundef !24
  store i64 %_47, ptr %node, align 8, !dbg !3857
  br label %bb1, !dbg !3830
}

; core::slice::sort::partition
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort9partition17h9e52fda665425d78E(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !3858 {
start:
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %was_partitioned.dbg.spill = alloca i8, align 1
  %mid.dbg.spill = alloca i64, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_60 = alloca { i64, i64 }, align 8
  %_47 = alloca { ptr, ptr }, align 8
  %_41 = alloca i8, align 1
  %_35 = alloca { ptr, ptr }, align 8
  %_30 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_16 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_6 = alloca { i64, i8 }, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3862, metadata !DIExpression()), !dbg !3883
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3863, metadata !DIExpression()), !dbg !3884
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3864, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3873, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !3875, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.declare(metadata ptr %l, metadata !3879, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.declare(metadata ptr %r, metadata !3881, metadata !DIExpression()), !dbg !3889
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hfb1a6b474d31dd0dE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_11e6a3552569b12175281f6a4eb60483) #10, !dbg !3890
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h510dd90ebd855d82E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_10, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_26492f2376e6789c223f4c1994b58a74) #10, !dbg !3891
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !3892
  %pivot.0 = load ptr, ptr %3, align 8, !dbg !3892, !nonnull !24, !align !510, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !3892
  %pivot.1 = load i64, ptr %4, align 8, !dbg !3892, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !3892
  store ptr %pivot.0, ptr %5, align 8, !dbg !3892
  %6 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !3892
  store i64 %pivot.1, ptr %6, align 8, !dbg !3892
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !3868, metadata !DIExpression()), !dbg !3893
  %7 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !3894
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !3894
  %v.02 = load ptr, ptr %8, align 8, !dbg !3894, !nonnull !24, !align !510, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !3894
  %v.13 = load i64, ptr %9, align 8, !dbg !3894, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !3894
  store ptr %v.02, ptr %10, align 8, !dbg !3894
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !3894
  store i64 %v.13, ptr %11, align 8, !dbg !3894
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !3870, metadata !DIExpression()), !dbg !3895
  %_14 = icmp ult i64 0, %pivot.1, !dbg !3896
  %12 = call i1 @llvm.expect.i1(i1 %_14, i1 true), !dbg !3896
  br i1 %12, label %bb3, label %panic, !dbg !3896

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3897
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !3897
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !3871, metadata !DIExpression()), !dbg !3898
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf5dd81a4047cd85dE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_16, ptr %pivot5) #10, !dbg !3899
  call void @llvm.dbg.declare(metadata ptr %_16, metadata !1002, metadata !DIExpression()), !dbg !3900
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_16, i64 24, i1 false), !dbg !3902
  store ptr %tmp, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2373, metadata !DIExpression()), !dbg !3903
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !3905
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !3905
  store ptr %pivot5, ptr %13, align 8, !dbg !3905
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2373, metadata !DIExpression()), !dbg !3906
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !3908
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !3877, metadata !DIExpression()), !dbg !3909
  store i64 0, ptr %l, align 8, !dbg !3910
  store i64 %v.13, ptr %r, align 8, !dbg !3911
  br label %bb8, !dbg !3912

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 0, i64 %pivot.1, ptr align 8 @alloc_c7092da788685af654b1a9fdfd45efe3) #11, !dbg !3896
  unreachable, !dbg !3896

bb8:                                              ; preds = %bb15, %bb3
  %_32 = load i64, ptr %l, align 8, !dbg !3913, !noundef !24
  %_33 = load i64, ptr %r, align 8, !dbg !3914, !noundef !24
  %_31 = icmp ult i64 %_32, %_33, !dbg !3913
  br i1 %_31, label %bb10, label %bb9, !dbg !3913

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_30, align 1, !dbg !3913
  br label %bb11, !dbg !3913

bb10:                                             ; preds = %bb8
  %_39 = load i64, ptr %l, align 8, !dbg !3915, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_37 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %v.02, i64 %v.13, i64 %_39) #10, !dbg !3916
  store ptr %_37, ptr %_35, align 8, !dbg !3917
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3917
  store ptr %tmp, ptr %14, align 8, !dbg !3917
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3917
  %16 = load ptr, ptr %15, align 8, !dbg !3917, !nonnull !24, !align !510, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3917
  %18 = load ptr, ptr %17, align 8, !dbg !3917, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3917
  %19 = zext i1 %_34 to i8, !dbg !3913
  store i8 %19, ptr %_30, align 1, !dbg !3913
  br label %bb11, !dbg !3913

bb11:                                             ; preds = %bb9, %bb10
  %20 = load i8, ptr %_30, align 1, !dbg !3913, !range !212, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3913
  br i1 %21, label %bb14, label %bb16, !dbg !3913

bb16:                                             ; preds = %bb24, %bb11
  %_43 = load i64, ptr %l, align 8, !dbg !3918, !noundef !24
  %_44 = load i64, ptr %r, align 8, !dbg !3919, !noundef !24
  %_42 = icmp ult i64 %_43, %_44, !dbg !3918
  br i1 %_42, label %bb18, label %bb17, !dbg !3918

bb14:                                             ; preds = %bb11
  %22 = load i64, ptr %l, align 8, !dbg !3920, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !3920
  %_40.0 = extractvalue { i64, i1 } %23, 0, !dbg !3920
  %_40.1 = extractvalue { i64, i1 } %23, 1, !dbg !3920
  %24 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false), !dbg !3920
  br i1 %24, label %panic8, label %bb15, !dbg !3920

bb15:                                             ; preds = %bb14
  store i64 %_40.0, ptr %l, align 8, !dbg !3920
  br label %bb8, !dbg !3912

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_2ea9cf29d18d0ed4d381d69765922321) #11, !dbg !3920
  unreachable, !dbg !3920

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_41, align 1, !dbg !3918
  br label %bb19, !dbg !3918

bb18:                                             ; preds = %bb16
  %_52 = load i64, ptr %r, align 8, !dbg !3921, !noundef !24
  %_53.0 = sub i64 %_52, 1, !dbg !3921
  %_53.1 = icmp ult i64 %_52, 1, !dbg !3921
  %25 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !3921
  br i1 %25, label %panic9, label %bb20, !dbg !3921

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_49 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE"(ptr align 8 %v.02, i64 %v.13, i64 %_53.0) #10, !dbg !3922
  store ptr %_49, ptr %_47, align 8, !dbg !3923
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !3923
  store ptr %tmp, ptr %26, align 8, !dbg !3923
  %27 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 0, !dbg !3923
  %28 = load ptr, ptr %27, align 8, !dbg !3923, !nonnull !24, !align !510, !noundef !24
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !3923
  %30 = load ptr, ptr %29, align 8, !dbg !3923, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_46 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E"(ptr align 8 %is_less, ptr align 8 %28, ptr align 8 %30) #10, !dbg !3923
  %_45 = xor i1 %_46, true, !dbg !3924
  %31 = zext i1 %_45 to i8, !dbg !3918
  store i8 %31, ptr %_41, align 1, !dbg !3918
  br label %bb19, !dbg !3918

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_77392cac3d065b6e63120432bd0620c3) #11, !dbg !3921
  unreachable, !dbg !3921

bb19:                                             ; preds = %bb17, %bb20
  %32 = load i8, ptr %_41, align 1, !dbg !3918, !range !212, !noundef !24
  %33 = trunc i8 %32 to i1, !dbg !3918
  br i1 %33, label %bb23, label %bb25, !dbg !3918

bb25:                                             ; preds = %bb19
  %_56 = load i64, ptr %l, align 8, !dbg !3925, !noundef !24
  %_61 = load i64, ptr %l, align 8, !dbg !3926, !noundef !24
  %_62 = load i64, ptr %r, align 8, !dbg !3927, !noundef !24
  store i64 %_61, ptr %_60, align 8, !dbg !3926
  %34 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !3926
  store i64 %_62, ptr %34, align 8, !dbg !3926
  %35 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 0, !dbg !3928
  %36 = load i64, ptr %35, align 8, !dbg !3928, !noundef !24
  %37 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !3928
  %38 = load i64, ptr %37, align 8, !dbg !3928, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %39 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h24a7347732aef70aE"(ptr align 8 %v.02, i64 %v.13, i64 %36, i64 %38, ptr align 8 @alloc_fb364d725dbd0599b56f2e14753ffd88) #10, !dbg !3928
  %_59.0 = extractvalue { ptr, i64 } %39, 0, !dbg !3928
  %_59.1 = extractvalue { ptr, i64 } %39, 1, !dbg !3928
; call core::slice::sort::partition_in_blocks
  %_57 = call i64 @_ZN4core5slice4sort19partition_in_blocks17hf3e69fc4a3d42f73E(ptr align 8 %_59.0, i64 %_59.1, ptr align 8 %tmp, ptr align 8 %is_less) #10, !dbg !3929
  %40 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_56, i64 %_57), !dbg !3925
  %_63.0 = extractvalue { i64, i1 } %40, 0, !dbg !3925
  %_63.1 = extractvalue { i64, i1 } %40, 1, !dbg !3925
  %41 = call i1 @llvm.expect.i1(i1 %_63.1, i1 false), !dbg !3925
  br i1 %41, label %panic11, label %bb28, !dbg !3925

bb23:                                             ; preds = %bb19
  %42 = load i64, ptr %r, align 8, !dbg !3930, !noundef !24
  %_54.0 = sub i64 %42, 1, !dbg !3930
  %_54.1 = icmp ult i64 %42, 1, !dbg !3930
  %43 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !3930
  br i1 %43, label %panic10, label %bb24, !dbg !3930

bb24:                                             ; preds = %bb23
  store i64 %_54.0, ptr %r, align 8, !dbg !3930
  br label %bb16, !dbg !3931

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_724b3d93e818c27723f221185131a7a4) #11, !dbg !3930
  unreachable, !dbg !3930

bb28:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !3932, !noundef !24
  %_66 = load i64, ptr %r, align 8, !dbg !3933, !noundef !24
  %_64 = icmp uge i64 %_65, %_66, !dbg !3932
  store i64 %_63.0, ptr %_6, align 8, !dbg !3934
  %44 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3934
  %45 = zext i1 %_64 to i8, !dbg !3934
  store i8 %45, ptr %44, align 8, !dbg !3934
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hed262f49383e5c8cE"(ptr %_pivot_guard) #10, !dbg !3935
  %mid = load i64, ptr %_6, align 8, !dbg !3936, !noundef !24
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3936
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3865, metadata !DIExpression()), !dbg !3937
  %46 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3938
  %47 = load i8, ptr %46, align 8, !dbg !3938, !range !212, !noundef !24
  %was_partitioned = trunc i8 %47 to i1, !dbg !3938
  %48 = zext i1 %was_partitioned to i8, !dbg !3938
  store i8 %48, ptr %was_partitioned.dbg.spill, align 1, !dbg !3938
  call void @llvm.dbg.declare(metadata ptr %was_partitioned.dbg.spill, metadata !3867, metadata !DIExpression()), !dbg !3939
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hfb1a6b474d31dd0dE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %mid, ptr align 8 @alloc_2a04d551a07d88c747401d2ba7079f20) #10, !dbg !3940
  store i64 %mid, ptr %0, align 8, !dbg !3941
  %49 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !3941
  %50 = zext i1 %was_partitioned to i8, !dbg !3941
  store i8 %50, ptr %49, align 8, !dbg !3941
  %51 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !3942
  %52 = load i64, ptr %51, align 8, !dbg !3942, !noundef !24
  %53 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !3942
  %54 = load i8, ptr %53, align 8, !dbg !3942, !range !212, !noundef !24
  %55 = trunc i8 %54 to i1, !dbg !3942
  %56 = zext i1 %55 to i8, !dbg !3942
  %57 = insertvalue { i64, i8 } undef, i64 %52, 0, !dbg !3942
  %58 = insertvalue { i64, i8 } %57, i8 %56, 1, !dbg !3942
  ret { i64, i8 } %58, !dbg !3942

panic11:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_f3172065760924cbf2c2be5e51e973b6) #11, !dbg !3925
  unreachable, !dbg !3925
}

; core::slice::sort::quicksort
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort9quicksort17h8a9ffd99e6bab11aE(ptr align 8 %v.0, i64 %v.1, ptr align 1 %0) unnamed_addr #1 !dbg !3943 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %limit.dbg.spill = alloca i32, align 4
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3947, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3948, metadata !DIExpression()), !dbg !3952
  br i1 false, label %bb1, label %bb2, !dbg !3953

bb2:                                              ; preds = %start
  store i64 %v.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3954, metadata !DIExpression()), !dbg !3957
  %4 = call i64 @llvm.ctlz.i64(i64 %v.1, i1 false), !dbg !3959
  store i64 %4, ptr %1, align 8, !dbg !3959
  %_2.i = load i64, ptr %1, align 8, !dbg !3959, !noundef !24
  %5 = trunc i64 %_2.i to i32, !dbg !3959
  %_8.0 = sub i32 64, %5, !dbg !3960
  %_8.1 = icmp ult i32 64, %5, !dbg !3960
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3960
  br i1 %6, label %panic, label %bb4, !dbg !3960

bb1:                                              ; preds = %start
  br label %bb6, !dbg !3961

bb6:                                              ; preds = %bb4, %bb1
  ret void, !dbg !3962

bb4:                                              ; preds = %bb2
  store i32 %_8.0, ptr %limit.dbg.spill, align 4, !dbg !3960
  call void @llvm.dbg.declare(metadata ptr %limit.dbg.spill, metadata !3949, metadata !DIExpression()), !dbg !3963
  store ptr null, ptr %_11, align 8, !dbg !3964
  %7 = load ptr, ptr %_11, align 8, !dbg !3965, !align !510, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17hc3b3c0b42fe2b898E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less, ptr align 8 %7, i32 %_8.0) #10, !dbg !3965
  br label %bb6, !dbg !3961

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_32def85e6ae301694e28023444cdd9f0) #11, !dbg !3960
  unreachable, !dbg !3960
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hfec816eab528aad6E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !3966 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3971, metadata !DIExpression()), !dbg !3973
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3972, metadata !DIExpression()), !dbg !3974
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h406a63f4bfd5143aE"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3975
  %6 = extractvalue { ptr, i64 } %5, 0, !dbg !3975
  %7 = extractvalue { ptr, i64 } %5, 1, !dbg !3975
  %8 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !3976
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !3976
  ret { ptr, i64 } %9, !dbg !3976
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h24a7347732aef70aE"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !3977 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3982, metadata !DIExpression()), !dbg !3984
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3983, metadata !DIExpression()), !dbg !3985
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h1b9025a7c2eacdb7E"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3986
  %_3.0 = extractvalue { ptr, i64 } %5, 0, !dbg !3986
  %_3.1 = extractvalue { ptr, i64 } %5, 1, !dbg !3986
  %6 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !3987
  %7 = insertvalue { ptr, i64 } %6, i64 %_3.1, 1, !dbg !3987
  ret { ptr, i64 } %7, !dbg !3987
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5488d93d2bd9a2b1E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !3988 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3992, metadata !DIExpression()), !dbg !3996
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3993, metadata !DIExpression()), !dbg !3997
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9a90a00cb3549364E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3998
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3998
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3998
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !3999
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !3999
  ret { ptr, i64 } %5, !dbg !3999
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb8e723db52cf0423E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4000 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4004, metadata !DIExpression()), !dbg !4008
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4005, metadata !DIExpression()), !dbg !4009
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h18893aedccd47536E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4010
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4010
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4010
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !4011
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !4011
  ret { ptr, i64 } %5, !dbg !4011
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hbb192473bdfad3fdE"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4012 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4016, metadata !DIExpression()), !dbg !4020
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4017, metadata !DIExpression()), !dbg !4021
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc9f1df66d2642dbcE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4022
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4022
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4022
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !4023
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !4023
  ret { ptr, i64 } %5, !dbg !4023
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h1650d6feda0d52aeE"(ptr sret(%"bootinfo::TlsTemplate") %0, ptr %self, ptr %default) unnamed_addr #0 !dbg !4024 {
start:
  %_5 = alloca i8, align 1
  %x = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4040, metadata !DIExpression()), !dbg !4044
  call void @llvm.dbg.declare(metadata ptr %default, metadata !4041, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.declare(metadata ptr %x, metadata !4042, metadata !DIExpression()), !dbg !4046
  store i8 0, ptr %_5, align 1, !dbg !4047
  store i8 1, ptr %_5, align 1, !dbg !4047
  %_3 = load i64, ptr %self, align 8, !dbg !4047, !range !1059, !noundef !24
  %1 = icmp eq i64 %_3, 0, !dbg !4048
  br i1 %1, label %bb1, label %bb3, !dbg !4048

bb1:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !4049
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %default, i64 24, i1 false), !dbg !4049
  br label %bb6, !dbg !4049

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %self, i32 0, i32 1, !dbg !4050
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %2, i64 24, i1 false), !dbg !4050
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %x, i64 24, i1 false), !dbg !4051
  br label %bb6, !dbg !4052

bb2:                                              ; No predecessors!
  unreachable, !dbg !4047

bb6:                                              ; preds = %bb1, %bb3
  %3 = load i8, ptr %_5, align 1, !dbg !4053, !range !212, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !4053
  br i1 %4, label %bb5, label %bb4, !dbg !4053

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !4054

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !4053
}

; <core::cmp::Ordering as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h028605ddb4c51453E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !4055 {
start:
  %__arg1_tag.dbg.spill = alloca i8, align 1
  %__self_tag.dbg.spill = alloca i8, align 1
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4061, metadata !DIExpression()), !dbg !4067
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !4062, metadata !DIExpression()), !dbg !4067
  %__self_tag = load i8, ptr %self, align 1, !dbg !4067, !range !745, !noundef !24
  store i8 %__self_tag, ptr %__self_tag.dbg.spill, align 1, !dbg !4067
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill, metadata !4063, metadata !DIExpression()), !dbg !4068
  %__arg1_tag = load i8, ptr %other, align 1, !dbg !4068, !range !745, !noundef !24
  store i8 %__arg1_tag, ptr %__arg1_tag.dbg.spill, align 1, !dbg !4068
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill, metadata !4065, metadata !DIExpression()), !dbg !4069
  %0 = icmp eq i8 %__self_tag, %__arg1_tag, !dbg !4069
  ret i1 %0, !dbg !4070
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4277524a2fe14442E"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !4071 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4079, metadata !DIExpression()), !dbg !4081
  %2 = insertvalue { ptr, ptr } undef, ptr %self.0, 0, !dbg !4082
  %3 = insertvalue { ptr, ptr } %2, ptr %self.1, 1, !dbg !4082
  ret { ptr, ptr } %3, !dbg !4082
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb02f824e656e53b8E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !4083 {
start:
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca i64, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, { ptr, i64 } }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4088, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4090, metadata !DIExpression()), !dbg !4093
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !4089, metadata !DIExpression()), !dbg !4094
  store i64 %self, ptr %_4, align 8, !dbg !4095
  %3 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4095
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !4095
  store ptr %slice.0, ptr %4, align 8, !dbg !4095
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !4095
  store i64 %slice.1, ptr %5, align 8, !dbg !4095
  %6 = load i64, ptr %_4, align 8, !dbg !4095, !noundef !24
  %7 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4095
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !4095
  %9 = load ptr, ptr %8, align 8, !dbg !4095, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !4095
  %11 = load i64, ptr %10, align 8, !dbg !4095, !noundef !24
  store i64 %6, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !4096, metadata !DIExpression()), !dbg !4103
  store ptr %9, ptr %slice.dbg.spill.i, align 8
  %12 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %11, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !4102, metadata !DIExpression()), !dbg !4103
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h7b445c194d2af29dE"(ptr %9, i64 %11) #10, !dbg !4105
  %_4.i = icmp ult i64 %6, %_5.i, !dbg !4107
  %_3.i = xor i1 %_4.i, true, !dbg !4108
  br i1 %_3.i, label %bb2.i, label %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h8f0d90e967084ee7E.exit", !dbg !4108

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_fd1fbb272cd847786704851d0bc9a531, i64 97) #11, !dbg !4109
  unreachable, !dbg !4109

"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h8f0d90e967084ee7E.exit": ; preds = %start
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_5 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1ecfccdfa8a3dcf6E"(ptr %slice.0, i64 %slice.1) #10, !dbg !4110
  store ptr %_5, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !217, metadata !DIExpression()), !dbg !4111
  store i64 %self, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !227, metadata !DIExpression()), !dbg !4113
  store ptr %_5, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !231, metadata !DIExpression()), !dbg !4114
  store i64 %self, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !237, metadata !DIExpression()), !dbg !4116
  %13 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_5, i64 %self, !dbg !4117
  store ptr %13, ptr %0, align 8, !dbg !4117
  %14 = load ptr, ptr %0, align 8, !dbg !4117, !noundef !24
  ret ptr %14, !dbg !4118
}

; <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h09989a2a92d3eda6E"(ptr align 8 %self) unnamed_addr #1 !dbg !4119 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4125, metadata !DIExpression()), !dbg !4126
  %_3 = load ptr, ptr %self, align 8, !dbg !4127, !noundef !24
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4128
  %_4 = load ptr, ptr %0, align 8, !dbg !4128, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE(ptr %_3, ptr %_4, i64 1) #10, !dbg !4129
  ret void, !dbg !4130
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb5b6805f61ae872dE"(ptr align 8 %self) unnamed_addr #0 !dbg !4131 {
start:
  %self.dbg.spill.i5.i = alloca ptr, align 8
  %self.dbg.spill.i4.i = alloca ptr, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca ptr, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %old.dbg.spill.i = alloca ptr, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4138, metadata !DIExpression()), !dbg !4139
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4140
  %_5 = load ptr, ptr %3, align 8, !dbg !4140, !nonnull !24, !noundef !24
  store ptr %_5, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !4141, metadata !DIExpression()), !dbg !4146
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd1a6af8bc1e3a6afE"(ptr %_5) #10, !dbg !4140
  %_2 = xor i1 %_3, true, !dbg !4148
  call void @llvm.assume(i1 %_2), !dbg !4149
  br i1 true, label %bb3, label %bb5, !dbg !4150

bb5:                                              ; preds = %bb3, %start
  %4 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4151
  %_13 = load ptr, ptr %4, align 8, !dbg !4151, !nonnull !24, !noundef !24
  store ptr %_13, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4141, metadata !DIExpression()), !dbg !4152
  %_14 = load ptr, ptr %self, align 8, !dbg !4151, !noundef !24
  %_10 = icmp eq ptr %_13, %_14, !dbg !4151
  br i1 %_10, label %bb7, label %bb8, !dbg !4151

bb3:                                              ; preds = %start
  %_9 = load ptr, ptr %self, align 8, !dbg !4154, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4aa6254734848f2bE"(ptr %_9) #10, !dbg !4154
  %_7 = xor i1 %_8, true, !dbg !4155
  call void @llvm.assume(i1 %_7), !dbg !4156
  br label %bb5, !dbg !4157

bb8:                                              ; preds = %bb5
  store ptr %self, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !4158, metadata !DIExpression()), !dbg !4166
  store i64 1, ptr %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill.i, metadata !4163, metadata !DIExpression()), !dbg !4168
  %5 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4169
  %_9.i = load ptr, ptr %5, align 8, !dbg !4169, !nonnull !24, !noundef !24
  store ptr %_9.i, ptr %self.dbg.spill.i5.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5.i, metadata !4141, metadata !DIExpression()), !dbg !4170
  store ptr %_9.i, ptr %old.dbg.spill.i, align 8, !dbg !4169
  call void @llvm.dbg.declare(metadata ptr %old.dbg.spill.i, metadata !4164, metadata !DIExpression()), !dbg !4172
  %6 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4173
  %_13.i = load ptr, ptr %6, align 8, !dbg !4173, !nonnull !24, !noundef !24
  store ptr %_13.i, ptr %self.dbg.spill.i4.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4.i, metadata !4141, metadata !DIExpression()), !dbg !4174
  store ptr %_13.i, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !298, metadata !DIExpression()), !dbg !4176
  store i64 1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !304, metadata !DIExpression()), !dbg !4178
  store ptr %_13.i, ptr %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2.i, metadata !308, metadata !DIExpression()), !dbg !4179
  store i64 1, ptr %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1.i, metadata !313, metadata !DIExpression()), !dbg !4181
  %7 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_13.i, i64 1, !dbg !4182
  store ptr %7, ptr %0, align 8, !dbg !4182
  %_3.i.i = load ptr, ptr %0, align 8, !dbg !4182, !noundef !24
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_10.i = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h358a6220fe179556E"(ptr %_3.i.i) #10, !dbg !4183
  %8 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4184
  store ptr %_10.i, ptr %8, align 8, !dbg !4184
  store ptr %_9.i, ptr %1, align 8, !dbg !4185
  %9 = load ptr, ptr %1, align 8, !dbg !4186, !noundef !24
  store ptr %9, ptr %2, align 8, !dbg !4187
  br label %bb10, !dbg !4188

bb7:                                              ; preds = %bb5
  store ptr null, ptr %2, align 8, !dbg !4189
  br label %bb10, !dbg !4188

bb10:                                             ; preds = %bb8, %bb7
  %10 = load ptr, ptr %2, align 8, !dbg !4190, !align !510, !noundef !24
  ret ptr %10, !dbg !4190
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h7cf901f47c0df857E"(ptr align 8 %self) unnamed_addr #0 !dbg !4191 {
start:
  %self.dbg.spill.i7 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %x.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_19 = alloca ptr, align 8
  %_14 = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %predicate = alloca %"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]", align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4196, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.declare(metadata ptr %predicate, metadata !4197, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4198, metadata !DIExpression()), !dbg !4210
  call void @llvm.dbg.declare(metadata ptr %i, metadata !4202, metadata !DIExpression()), !dbg !4211
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4212
  %start1 = load ptr, ptr %3, align 8, !dbg !4212, !nonnull !24, !noundef !24
  store ptr %start1, ptr %start.dbg.spill, align 8, !dbg !4212
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !4200, metadata !DIExpression()), !dbg !4213
  br i1 false, label %bb1, label %bb5, !dbg !4213

bb5:                                              ; preds = %start
  %_10 = load ptr, ptr %self, align 8, !dbg !4213, !noundef !24
  store ptr %start1, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !4141, metadata !DIExpression()), !dbg !4214
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %4 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h58910af669914ae5E"(ptr %_10, ptr %start1) #10, !dbg !4213
  store i64 %4, ptr %n, align 8, !dbg !4213
  br label %bb7, !dbg !4213

bb1:                                              ; preds = %start
  %_7 = load ptr, ptr %self, align 8, !dbg !4213, !noundef !24
  store ptr %_7, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !548, metadata !DIExpression()), !dbg !4216
  store ptr %_7, ptr %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i7, metadata !555, metadata !DIExpression()), !dbg !4218
  store ptr %_7, ptr %0, align 8, !dbg !4220
  %5 = load i64, ptr %0, align 8, !dbg !4220, !noundef !24
  store ptr %start1, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !4141, metadata !DIExpression()), !dbg !4221
  store ptr %start1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3497, metadata !DIExpression()), !dbg !4223
  store ptr %start1, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !1276, metadata !DIExpression()), !dbg !4225
  store ptr %start1, ptr %1, align 8, !dbg !4227
  %6 = load i64, ptr %1, align 8, !dbg !4227, !noundef !24
  store i64 %5, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4228, metadata !DIExpression()), !dbg !4234
  store i64 %6, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !4233, metadata !DIExpression()), !dbg !4236
  %7 = sub i64 %5, %6, !dbg !4237
  store i64 %7, ptr %n, align 8, !dbg !4213
  br label %bb7, !dbg !4213

bb7:                                              ; preds = %bb5, %bb1
  store i64 0, ptr %i, align 8, !dbg !4238
  br label %bb8, !dbg !4239

bb8:                                              ; preds = %bb14, %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %8 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb5b6805f61ae872dE"(ptr align 8 %self) #10, !dbg !4240
  store ptr %8, ptr %_14, align 8, !dbg !4240
  %9 = load ptr, ptr %_14, align 8, !dbg !4241, !noundef !24
  %10 = ptrtoint ptr %9 to i64, !dbg !4241
  %11 = icmp eq i64 %10, 0, !dbg !4241
  %_15 = select i1 %11, i64 0, i64 1, !dbg !4241
  %12 = icmp eq i64 %_15, 1, !dbg !4241
  br i1 %12, label %bb10, label %bb15, !dbg !4241

bb10:                                             ; preds = %bb8
  %x = load ptr, ptr %_14, align 8, !dbg !4242, !nonnull !24, !align !510, !noundef !24
  store ptr %x, ptr %x.dbg.spill, align 8, !dbg !4242
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4204, metadata !DIExpression()), !dbg !4242
  store ptr %x, ptr %_19, align 8, !dbg !4243
  %13 = load ptr, ptr %_19, align 8, !dbg !4243, !nonnull !24, !align !510, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %_17 = call zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h940b8e5711041e83E"(ptr align 1 %predicate, ptr align 8 %13) #10, !dbg !4243
  br i1 %_17, label %bb12, label %bb13, !dbg !4243

bb15:                                             ; preds = %bb8
  store i64 0, ptr %2, align 8, !dbg !4244
  br label %bb16, !dbg !4245

bb16:                                             ; preds = %bb12, %bb15
  %14 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !4246
  %15 = load i64, ptr %14, align 8, !dbg !4246, !range !1059, !noundef !24
  %16 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !4246
  %17 = load i64, ptr %16, align 8, !dbg !4246
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0, !dbg !4246
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1, !dbg !4246
  ret { i64, i64 } %19, !dbg !4246

bb13:                                             ; preds = %bb10
  %20 = load i64, ptr %i, align 8, !dbg !4247, !noundef !24
  %21 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 1), !dbg !4247
  %_24.0 = extractvalue { i64, i1 } %21, 0, !dbg !4247
  %_24.1 = extractvalue { i64, i1 } %21, 1, !dbg !4247
  %22 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !4247
  br i1 %22, label %panic, label %bb14, !dbg !4247

bb12:                                             ; preds = %bb10
  %_21 = load i64, ptr %i, align 8, !dbg !4248, !noundef !24
  %_22 = load i64, ptr %n, align 8, !dbg !4249, !noundef !24
  %_20 = icmp ult i64 %_21, %_22, !dbg !4248
  call void @llvm.assume(i1 %_20), !dbg !4250
  %_23 = load i64, ptr %i, align 8, !dbg !4251, !noundef !24
  %23 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !4252
  store i64 %_23, ptr %23, align 8, !dbg !4252
  store i64 1, ptr %2, align 8, !dbg !4252
  br label %bb16, !dbg !4245

bb14:                                             ; preds = %bb13
  store i64 %_24.0, ptr %i, align 8, !dbg !4247
  br label %bb8, !dbg !4239

panic:                                            ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_ec7e927c44e6f6ba8ba764905d928993) #11, !dbg !4247
  unreachable, !dbg !4247
}

; bootloader::bootinfo::memory_map::MemoryMap::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h61bfeb355ca9c755E(ptr sret(%"bootinfo::memory_map::MemoryMap") %0) unnamed_addr #1 !dbg !4253 {
start:
  %_2 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_1 = alloca [64 x %"bootinfo::memory_map::MemoryRegion"], align 8
; call bootloader::bootinfo::memory_map::MemoryRegion::empty
  call void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h8b51fabb921fc3daE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_2) #10, !dbg !4257
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 0, !dbg !4258
  %2 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 64, !dbg !4258
  br label %repeat_loop_header, !dbg !4258

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %3 = phi ptr [ %1, %start ], [ %5, %repeat_loop_body ]
  %4 = icmp ne ptr %3, %2
  br i1 %4, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_2, i64 24, i1 false)
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %3, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_1, i64 1536, i1 false), !dbg !4259
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %0, i32 0, i32 1, !dbg !4259
  store i64 0, ptr %6, align 8, !dbg !4259
  ret void, !dbg !4260
}

; bootloader::bootinfo::memory_map::MemoryMap::add_region
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17heb1ede358689ef15E(ptr align 8 %self, ptr %region) unnamed_addr #1 !dbg !4261 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4266, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4267, metadata !DIExpression()), !dbg !4269
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17heded6b242795c018E(ptr align 8 %self) #10, !dbg !4270
  %_4 = icmp ult i64 %_5, 64, !dbg !4270
  %_3 = xor i1 %_4, true, !dbg !4271
  br i1 %_3, label %bb2, label %bb3, !dbg !4271

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_8 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17heded6b242795c018E(ptr align 8 %self) #10, !dbg !4272
  %_11 = icmp ult i64 %_8, 64, !dbg !4273
  %0 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !4273
  br i1 %0, label %bb5, label %panic, !dbg !4273

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_e355651d1880c5ee1b41d330bdb74e70, i64 37, ptr align 8 @alloc_5d5a1267c4f890a564bd718157fe3536) #11, !dbg !4271
  unreachable, !dbg !4271

bb5:                                              ; preds = %bb3
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %self, i64 0, i64 %_8, !dbg !4273
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %region, i64 24, i1 false), !dbg !4273
  %2 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4274
  %3 = load i64, ptr %2, align 8, !dbg !4274, !noundef !24
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %3, i64 1), !dbg !4274
  %_12.0 = extractvalue { i64, i1 } %4, 0, !dbg !4274
  %_12.1 = extractvalue { i64, i1 } %4, 1, !dbg !4274
  %5 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !4274
  br i1 %5, label %panic1, label %bb6, !dbg !4274

panic:                                            ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_8, i64 64, ptr align 8 @alloc_92280f9f2a88ce1b84d8985d89998ab8) #11, !dbg !4273
  unreachable, !dbg !4273

bb6:                                              ; preds = %bb5
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4274
  store i64 %_12.0, ptr %6, align 8, !dbg !4274
; call bootloader::bootinfo::memory_map::MemoryMap::sort
  call void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17he7ad238fed524a0cE(ptr align 8 %self) #10, !dbg !4275
  ret void, !dbg !4276

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_c92ccd97009dfd12af282b075b265066) #11, !dbg !4274
  unreachable, !dbg !4274
}

; bootloader::bootinfo::memory_map::MemoryMap::sort
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17he7ad238fed524a0cE(ptr align 8 %self) unnamed_addr #1 !dbg !4277 {
start:
  %first_zero_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { ptr, ptr }, align 8
  %_6 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4281, metadata !DIExpression()), !dbg !4284
; call core::slice::<impl [T]>::sort_unstable_by
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h031ffa24d38669c7E"(ptr align 8 %self, i64 64) #10, !dbg !4285
; call core::slice::<impl [T]>::iter
  %0 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17heee3b0195dddc17cE"(ptr align 8 %self, i64 64) #10, !dbg !4286
  store { ptr, ptr } %0, ptr %_8, align 8, !dbg !4286
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %1 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h7cf901f47c0df857E"(ptr align 8 %_8) #10, !dbg !4286
  store { i64, i64 } %1, ptr %_6, align 8, !dbg !4286
  %_12 = load i64, ptr %_6, align 8, !dbg !4287, !range !1059, !noundef !24
  %2 = icmp eq i64 %_12, 1, !dbg !4287
  br i1 %2, label %bb4, label %bb5, !dbg !4287

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4288
  %first_zero_index = load i64, ptr %3, align 8, !dbg !4288, !noundef !24
  store i64 %first_zero_index, ptr %first_zero_index.dbg.spill, align 8, !dbg !4288
  call void @llvm.dbg.declare(metadata ptr %first_zero_index.dbg.spill, metadata !4282, metadata !DIExpression()), !dbg !4288
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4289
  store i64 %first_zero_index, ptr %4, align 8, !dbg !4289
  br label %bb5, !dbg !4290

bb5:                                              ; preds = %bb4, %start
  ret void, !dbg !4291
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17hcdbd642f1a8e3b82E"(ptr align 1 %_1, ptr align 8 %r1, ptr align 8 %r2) unnamed_addr #0 !dbg !4292 {
start:
  %r2.dbg.spill = alloca ptr, align 8
  %r1.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %ordering = alloca i8, align 1
  %0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4300, metadata !DIExpression()), !dbg !4301
  store ptr %r1, ptr %r1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r1.dbg.spill, metadata !4296, metadata !DIExpression()), !dbg !4302
  store ptr %r2, ptr %r2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r2.dbg.spill, metadata !4297, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.declare(metadata ptr %ordering, metadata !4298, metadata !DIExpression()), !dbg !4304
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_4 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3b3b826c1145a4aaE(ptr align 8 %r1) #10, !dbg !4305
  br i1 %_4, label %bb2, label %bb3, !dbg !4305

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_6 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3b3b826c1145a4aaE(ptr align 8 %r2) #10, !dbg !4306
  br i1 %_6, label %bb5, label %bb6, !dbg !4306

bb2:                                              ; preds = %start
  store i8 1, ptr %0, align 1, !dbg !4307
  br label %bb11, !dbg !4308

bb11:                                             ; preds = %bb10, %bb9, %bb5, %bb2
  %1 = load i8, ptr %0, align 1, !dbg !4309, !range !745, !noundef !24
  ret i8 %1, !dbg !4309

bb6:                                              ; preds = %bb3
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %2 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h17b0a92ea52cea06E"(ptr align 8 %r1, ptr align 8 %r2) #10, !dbg !4310, !range !745
  store i8 %2, ptr %ordering, align 1, !dbg !4310
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %_11 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h028605ddb4c51453E"(ptr align 1 %ordering, ptr align 1 @alloc_9d317c40d2249666f5c687230a67e458) #10, !dbg !4311
  br i1 %_11, label %bb9, label %bb10, !dbg !4311

bb5:                                              ; preds = %bb3
  store i8 -1, ptr %0, align 1, !dbg !4312
  br label %bb11, !dbg !4313

bb10:                                             ; preds = %bb6
  %3 = load i8, ptr %ordering, align 1, !dbg !4314, !range !745, !noundef !24
  store i8 %3, ptr %0, align 1, !dbg !4314
  br label %bb11, !dbg !4315

bb9:                                              ; preds = %bb6
  %_13 = getelementptr inbounds { i64, i64 }, ptr %r1, i32 0, i32 1, !dbg !4316
  %_14 = getelementptr inbounds { i64, i64 }, ptr %r2, i32 0, i32 1, !dbg !4317
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %4 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h17b0a92ea52cea06E"(ptr align 8 %_13, ptr align 8 %_14) #10, !dbg !4316, !range !745
  store i8 %4, ptr %0, align 1, !dbg !4316
  br label %bb11, !dbg !4316
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h940b8e5711041e83E"(ptr align 1 %_1, ptr align 8 %r) unnamed_addr #0 !dbg !4318 {
start:
  %r.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4324, metadata !DIExpression()), !dbg !4325
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !4323, metadata !DIExpression()), !dbg !4326
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %0 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3b3b826c1145a4aaE(ptr align 8 %r) #10, !dbg !4327
  ret i1 %0, !dbg !4328
}

; bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
; Function Attrs: noredzone nounwind
define internal i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17heded6b242795c018E(ptr align 8 %self) unnamed_addr #1 !dbg !4329 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4334, metadata !DIExpression()), !dbg !4335
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4336
  %_2 = load i64, ptr %0, align 8, !dbg !4336, !noundef !24
  ret i64 %_2, !dbg !4337
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf330e07fe7f1ac98E"(ptr align 8 %self) unnamed_addr #1 !dbg !4338 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4343, metadata !DIExpression()), !dbg !4344
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17heded6b242795c018E(ptr align 8 %self) #10, !dbg !4345
  store i64 0, ptr %_4, align 8, !dbg !4346
  %0 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4346
  store i64 %_5, ptr %0, align 8, !dbg !4346
  %1 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !4347
  %2 = load i64, ptr %1, align 8, !dbg !4347, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4347
  %4 = load i64, ptr %3, align 8, !dbg !4347, !noundef !24
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %5 = call { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h08ad34a553a33f63E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_4f8245751742bc2efa1e741a6b1c1882) #10, !dbg !4347
  %_2.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4347
  %_2.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4347
  %6 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !4348
  %7 = insertvalue { ptr, i64 } %6, i64 %_2.1, 1, !dbg !4348
  ret { ptr, i64 } %7, !dbg !4348
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7b1545ba8c89fe48E"(ptr align 8 %self) unnamed_addr #1 !dbg !4349 {
start:
  %next_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4354, metadata !DIExpression()), !dbg !4357
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %next_index = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17heded6b242795c018E(ptr align 8 %self) #10, !dbg !4358
  store i64 %next_index, ptr %next_index.dbg.spill, align 8, !dbg !4358
  call void @llvm.dbg.declare(metadata ptr %next_index.dbg.spill, metadata !4355, metadata !DIExpression()), !dbg !4359
  store i64 0, ptr %_6, align 8, !dbg !4360
  %0 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4360
  store i64 %next_index, ptr %0, align 8, !dbg !4360
  %1 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !4361
  %2 = load i64, ptr %1, align 8, !dbg !4361, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4361
  %4 = load i64, ptr %3, align 8, !dbg !4361, !noundef !24
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h3441dddc0c8eea40E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_b91e56a1c9f0252aa388be399f86d205) #10, !dbg !4361
  %_4.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4361
  %_4.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4361
  %6 = insertvalue { ptr, i64 } undef, ptr %_4.0, 0, !dbg !4362
  %7 = insertvalue { ptr, i64 } %6, i64 %_4.1, 1, !dbg !4362
  ret { ptr, i64 } %7, !dbg !4362
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bf80f3c8611fa19E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4363 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca %"core::fmt::builders::DebugList<'_, '_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4368, metadata !DIExpression()), !dbg !4370
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4369, metadata !DIExpression()), !dbg !4371
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17h5cdc12f3ee6bbd1bE(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") %_6, ptr align 8 %f) #10, !dbg !4372
; call <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf330e07fe7f1ac98E"(ptr align 8 %self) #10, !dbg !4373
  %_9.0 = extractvalue { ptr, i64 } %0, 0, !dbg !4373
  %_9.1 = extractvalue { ptr, i64 } %0, 1, !dbg !4373
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17heee3b0195dddc17cE"(ptr align 8 %_9.0, i64 %_9.1) #10, !dbg !4373
  %_7.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4373
  %_7.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4373
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17heea09fb09a6e8fd4E(ptr align 8 %_6, ptr %_7.0, ptr %_7.1) #10, !dbg !4372
; call core::fmt::builders::DebugList::finish
  %2 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hd60aae39096e1491E(ptr align 8 %_4) #10, !dbg !4372
  ret i1 %2, !dbg !4374
}

; bootloader::bootinfo::memory_map::MemoryRegion::empty
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h8b51fabb921fc3daE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0) unnamed_addr #1 !dbg !4375 {
start:
  %_1 = alloca { i64, i64 }, align 8
  store i64 0, ptr %_1, align 8, !dbg !4378
  %1 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4378
  store i64 0, ptr %1, align 8, !dbg !4378
  %2 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 0, !dbg !4379
  %3 = load i64, ptr %2, align 8, !dbg !4379, !noundef !24
  %4 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4379
  %5 = load i64, ptr %4, align 8, !dbg !4379, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4379
  store i64 %3, ptr %6, align 8, !dbg !4379
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4379
  store i64 %5, ptr %7, align 8, !dbg !4379
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4379
  store i32 11, ptr %8, align 8, !dbg !4379
  ret void, !dbg !4380
}

; bootloader::bootinfo::memory_map::FrameRange::new
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17hc95fe8c3b38d9c8aE(i64 %start_addr, i64 %end_addr) unnamed_addr #1 !dbg !4381 {
start:
  %last_byte.dbg.spill = alloca i64, align 8
  %end_addr.dbg.spill = alloca i64, align 8
  %start_addr.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %start_addr, ptr %start_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %start_addr.dbg.spill, metadata !4385, metadata !DIExpression()), !dbg !4389
  store i64 %end_addr, ptr %end_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %end_addr.dbg.spill, metadata !4386, metadata !DIExpression()), !dbg !4390
  %_4.0 = sub i64 %end_addr, 1, !dbg !4391
  %_4.1 = icmp ult i64 %end_addr, 1, !dbg !4391
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !4391
  br i1 %1, label %panic, label %bb1, !dbg !4391

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %last_byte.dbg.spill, align 8, !dbg !4391
  call void @llvm.dbg.declare(metadata ptr %last_byte.dbg.spill, metadata !4387, metadata !DIExpression()), !dbg !4392
  %_5 = udiv i64 %start_addr, 4096, !dbg !4393
  %_7 = udiv i64 %_4.0, 4096, !dbg !4394
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7, i64 1), !dbg !4394
  %_8.0 = extractvalue { i64, i1 } %2, 0, !dbg !4394
  %_8.1 = extractvalue { i64, i1 } %2, 1, !dbg !4394
  %3 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4394
  br i1 %3, label %panic1, label %bb2, !dbg !4394

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4493035a7c972a9a1372d6ddbae1c967) #11, !dbg !4391
  unreachable, !dbg !4391

bb2:                                              ; preds = %bb1
  store i64 %_5, ptr %0, align 8, !dbg !4395
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4395
  store i64 %_8.0, ptr %4, align 8, !dbg !4395
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4396
  %6 = load i64, ptr %5, align 8, !dbg !4396, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4396
  %8 = load i64, ptr %7, align 8, !dbg !4396, !noundef !24
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !4396
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !4396
  ret { i64, i64 } %10, !dbg !4396

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_14d10cc8fb5e9e5650e78fc64dc8fe00) #11, !dbg !4394
  unreachable, !dbg !4394
}

; bootloader::bootinfo::memory_map::FrameRange::is_empty
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3b3b826c1145a4aaE(ptr align 8 %self) unnamed_addr #1 !dbg !4397 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4402, metadata !DIExpression()), !dbg !4403
  %_2 = load i64, ptr %self, align 8, !dbg !4404, !noundef !24
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4405
  %_3 = load i64, ptr %0, align 8, !dbg !4405, !noundef !24
  %1 = icmp eq i64 %_2, %_3, !dbg !4404
  ret i1 %1, !dbg !4406
}

; bootloader::bootinfo::memory_map::FrameRange::start_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h3be0a80fc8d87ce6E(ptr align 8 %self) unnamed_addr #1 !dbg !4407 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4411, metadata !DIExpression()), !dbg !4412
  %_2 = load i64, ptr %self, align 8, !dbg !4413, !noundef !24
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4413
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !4413
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !4413
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4413
  br i1 %1, label %panic, label %bb1, !dbg !4413

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4414

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_f1caba4c88c0e95c17f4840283d2be4f) #11, !dbg !4413
  unreachable, !dbg !4413
}

; bootloader::bootinfo::memory_map::FrameRange::end_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h991c1a92c81f2525E(ptr align 8 %self) unnamed_addr #1 !dbg !4415 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4417, metadata !DIExpression()), !dbg !4418
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4419
  %_2 = load i64, ptr %0, align 8, !dbg !4419, !noundef !24
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4419
  %_3.0 = extractvalue { i64, i1 } %1, 0, !dbg !4419
  %_3.1 = extractvalue { i64, i1 } %1, 1, !dbg !4419
  %2 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4419
  br i1 %2, label %panic, label %bb1, !dbg !4419

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4420

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_9f9beccd708440a41289b2e3a74bbd4c) #11, !dbg !4419
  unreachable, !dbg !4419
}

; <bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h1a0754a1757e464cE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4421 {
start:
  %width.dbg.spill.i1 = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i2 = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i3 = alloca i32, align 4
  %align.dbg.spill.i4 = alloca i8, align 1
  %fill.dbg.spill.i5 = alloca i32, align 4
  %position.dbg.spill.i6 = alloca i64, align 8
  %_7.i7 = alloca %"core::fmt::rt::v1::FormatSpec", align 8
  %width.dbg.spill.i = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i = alloca i32, align 4
  %align.dbg.spill.i = alloca i8, align 1
  %fill.dbg.spill.i = alloca i32, align 4
  %position.dbg.spill.i = alloca i64, align 8
  %_7.i = alloca %"core::fmt::rt::v1::FormatSpec", align 8
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_24 = alloca { i64, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_21 = alloca %"core::fmt::rt::v1::Argument", align 8
  %_20 = alloca { i64, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_17 = alloca %"core::fmt::rt::v1::Argument", align 8
  %_16 = alloca [2 x %"core::fmt::rt::v1::Argument"], align 8
  %_13 = alloca i64, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca [2 x { ptr, ptr }], align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4426, metadata !DIExpression()), !dbg !4428
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4427, metadata !DIExpression()), !dbg !4429
; call bootloader::bootinfo::memory_map::FrameRange::start_addr
  %0 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h3be0a80fc8d87ce6E(ptr align 8 %self) #10, !dbg !4430
  store i64 %0, ptr %_10, align 8, !dbg !4430
; call core::fmt::ArgumentV1::new_lower_hex
  %1 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_lower_hex17hf2216d6e6eea11b9E(ptr align 8 %_10) #10, !dbg !4431
  %_8.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4431
  %_8.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4431
; call bootloader::bootinfo::memory_map::FrameRange::end_addr
  %2 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h991c1a92c81f2525E(ptr align 8 %self) #10, !dbg !4432
  store i64 %2, ptr %_13, align 8, !dbg !4432
; call core::fmt::ArgumentV1::new_lower_hex
  %3 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_lower_hex17hf2216d6e6eea11b9E(ptr align 8 %_13) #10, !dbg !4431
  %_11.0 = extractvalue { ptr, ptr } %3, 0, !dbg !4431
  %_11.1 = extractvalue { ptr, ptr } %3, 1, !dbg !4431
  %4 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 0, !dbg !4431
  %5 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 0, !dbg !4431
  store ptr %_8.0, ptr %5, align 8, !dbg !4431
  %6 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 1, !dbg !4431
  store ptr %_8.1, ptr %6, align 8, !dbg !4431
  %7 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 1, !dbg !4431
  %8 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 0, !dbg !4431
  store ptr %_11.0, ptr %8, align 8, !dbg !4431
  %9 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 1, !dbg !4431
  store ptr %_11.1, ptr %9, align 8, !dbg !4431
  store i64 2, ptr %_19, align 8, !dbg !4431
  store i64 2, ptr %_20, align 8, !dbg !4431
  %10 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !4431
  %11 = load i64, ptr %10, align 8, !dbg !4431, !range !4433, !noundef !24
  %12 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !4431
  %13 = load i64, ptr %12, align 8, !dbg !4431
  %14 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 0, !dbg !4431
  %15 = load i64, ptr %14, align 8, !dbg !4431, !range !4433, !noundef !24
  %16 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !4431
  %17 = load i64, ptr %16, align 8, !dbg !4431
  store i64 0, ptr %position.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i6, metadata !4434, metadata !DIExpression()), !dbg !4445
  store i32 32, ptr %fill.dbg.spill.i5, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i5, metadata !4440, metadata !DIExpression()), !dbg !4447
  store i8 3, ptr %align.dbg.spill.i4, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i4, metadata !4441, metadata !DIExpression()), !dbg !4448
  store i32 4, ptr %flags.dbg.spill.i3, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i3, metadata !4442, metadata !DIExpression()), !dbg !4449
  store i64 %11, ptr %precision.dbg.spill.i2, align 8
  %18 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i2, i32 0, i32 1
  store i64 %13, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i2, metadata !4443, metadata !DIExpression()), !dbg !4450
  store i64 %15, ptr %width.dbg.spill.i1, align 8
  %19 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i1, i32 0, i32 1
  store i64 %17, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i1, metadata !4444, metadata !DIExpression()), !dbg !4451
  %20 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 3, !dbg !4452
  store i32 32, ptr %20, align 4, !dbg !4452
  %21 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 4, !dbg !4452
  store i8 3, ptr %21, align 8, !dbg !4452
  %22 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 2, !dbg !4452
  store i32 4, ptr %22, align 8, !dbg !4452
  store i64 %11, ptr %_7.i7, align 8, !dbg !4452
  %23 = getelementptr inbounds { i64, i64 }, ptr %_7.i7, i32 0, i32 1, !dbg !4452
  store i64 %13, ptr %23, align 8, !dbg !4452
  %24 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 1, !dbg !4452
  store i64 %15, ptr %24, align 8, !dbg !4452
  %25 = getelementptr inbounds { i64, i64 }, ptr %24, i32 0, i32 1, !dbg !4452
  store i64 %17, ptr %25, align 8, !dbg !4452
  %26 = getelementptr inbounds %"core::fmt::rt::v1::Argument", ptr %_17, i32 0, i32 1, !dbg !4453
  store i64 0, ptr %26, align 8, !dbg !4453
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_17, ptr align 8 %_7.i7, i64 48, i1 false), !dbg !4453
  store i64 2, ptr %_23, align 8, !dbg !4431
  store i64 2, ptr %_24, align 8, !dbg !4431
  %27 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !4431
  %28 = load i64, ptr %27, align 8, !dbg !4431, !range !4433, !noundef !24
  %29 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !4431
  %30 = load i64, ptr %29, align 8, !dbg !4431
  %31 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 0, !dbg !4431
  %32 = load i64, ptr %31, align 8, !dbg !4431, !range !4433, !noundef !24
  %33 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 1, !dbg !4431
  %34 = load i64, ptr %33, align 8, !dbg !4431
  store i64 1, ptr %position.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i, metadata !4434, metadata !DIExpression()), !dbg !4454
  store i32 32, ptr %fill.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i, metadata !4440, metadata !DIExpression()), !dbg !4456
  store i8 3, ptr %align.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !4441, metadata !DIExpression()), !dbg !4457
  store i32 4, ptr %flags.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i, metadata !4442, metadata !DIExpression()), !dbg !4458
  store i64 %28, ptr %precision.dbg.spill.i, align 8
  %35 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i, i32 0, i32 1
  store i64 %30, ptr %35, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i, metadata !4443, metadata !DIExpression()), !dbg !4459
  store i64 %32, ptr %width.dbg.spill.i, align 8
  %36 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i, i32 0, i32 1
  store i64 %34, ptr %36, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i, metadata !4444, metadata !DIExpression()), !dbg !4460
  %37 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 3, !dbg !4461
  store i32 32, ptr %37, align 4, !dbg !4461
  %38 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 4, !dbg !4461
  store i8 3, ptr %38, align 8, !dbg !4461
  %39 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 2, !dbg !4461
  store i32 4, ptr %39, align 8, !dbg !4461
  store i64 %28, ptr %_7.i, align 8, !dbg !4461
  %40 = getelementptr inbounds { i64, i64 }, ptr %_7.i, i32 0, i32 1, !dbg !4461
  store i64 %30, ptr %40, align 8, !dbg !4461
  %41 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 1, !dbg !4461
  store i64 %32, ptr %41, align 8, !dbg !4461
  %42 = getelementptr inbounds { i64, i64 }, ptr %41, i32 0, i32 1, !dbg !4461
  store i64 %34, ptr %42, align 8, !dbg !4461
  %43 = getelementptr inbounds %"core::fmt::rt::v1::Argument", ptr %_21, i32 0, i32 1, !dbg !4462
  store i64 1, ptr %43, align 8, !dbg !4462
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_21, ptr align 8 %_7.i, i64 48, i1 false), !dbg !4462
  %44 = getelementptr inbounds [2 x %"core::fmt::rt::v1::Argument"], ptr %_16, i64 0, i64 0, !dbg !4431
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %44, ptr align 8 %_17, i64 56, i1 false), !dbg !4431
  %45 = getelementptr inbounds [2 x %"core::fmt::rt::v1::Argument"], ptr %_16, i64 0, i64 1, !dbg !4431
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %_21, i64 56, i1 false), !dbg !4431
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17h5a0892b6564d3a6fE(ptr sret(%"core::fmt::Arguments<'_>") %_3, ptr align 8 @alloc_52eab4ed1d8dfae9ee9b8459a77a80d1, i64 3, ptr align 8 %_7, i64 2, ptr align 8 %_16, i64 2) #10, !dbg !4431
; call core::fmt::Formatter::write_fmt
  %46 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd4a6383714610d49E(ptr align 8 %f, ptr %_3) #10, !dbg !4431
  ret i1 %46, !dbg !4463
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::convert::From<bootloader::bootinfo::memory_map::E820MemoryRegion>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17hcf4e8ff5809508afE"(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %region) unnamed_addr #1 !dbg !4464 {
start:
  %_9 = alloca [1 x { ptr, ptr }], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %t = alloca i32, align 4
  %region_type = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4475, metadata !DIExpression()), !dbg !4480
  call void @llvm.dbg.declare(metadata ptr %region_type, metadata !4476, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.declare(metadata ptr %t, metadata !4478, metadata !DIExpression()), !dbg !4482
  %1 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4483
  %2 = load i32, ptr %1, align 8, !dbg !4483, !noundef !24
  switch i32 %2, label %bb1 [
    i32 1, label %bb2
    i32 2, label %bb3
    i32 3, label %bb4
    i32 4, label %bb5
    i32 5, label %bb6
  ], !dbg !4483

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4484
  %4 = load i32, ptr %3, align 8, !dbg !4484, !noundef !24
  store i32 %4, ptr %t, align 4, !dbg !4484
; call core::fmt::ArgumentV1::new_display
  %5 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17h261ef5736cc0ac78E(ptr align 4 %t) #10, !dbg !4485
  %_10.0 = extractvalue { ptr, ptr } %5, 0, !dbg !4485
  %_10.1 = extractvalue { ptr, ptr } %5, 1, !dbg !4485
  %6 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_9, i64 0, i64 0, !dbg !4485
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0, !dbg !4485
  store ptr %_10.0, ptr %7, align 8, !dbg !4485
  %8 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1, !dbg !4485
  store ptr %_10.1, ptr %8, align 8, !dbg !4485
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h1d2dfdaa3c3dd788E(ptr sret(%"core::fmt::Arguments<'_>") %_5, ptr align 8 @alloc_c94b4fb4cdf35e275d5134e5fead1d29, i64 1, ptr align 8 %_9, i64 1) #10, !dbg !4485
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_5, ptr align 8 @alloc_1349b728df1eb2f6859ac0a782f2ae74) #11, !dbg !4485
  unreachable, !dbg !4485

bb2:                                              ; preds = %start
  store i32 0, ptr %region_type, align 4, !dbg !4486
  br label %bb9, !dbg !4486

bb3:                                              ; preds = %start
  store i32 2, ptr %region_type, align 4, !dbg !4487
  br label %bb9, !dbg !4487

bb4:                                              ; preds = %start
  store i32 3, ptr %region_type, align 4, !dbg !4488
  br label %bb9, !dbg !4488

bb5:                                              ; preds = %start
  store i32 4, ptr %region_type, align 4, !dbg !4489
  br label %bb9, !dbg !4489

bb6:                                              ; preds = %start
  store i32 5, ptr %region_type, align 4, !dbg !4490
  br label %bb9, !dbg !4490

bb9:                                              ; preds = %bb2, %bb3, %bb4, %bb5, %bb6
  %_13 = load i64, ptr %region, align 8, !dbg !4491, !noundef !24
  %_15 = load i64, ptr %region, align 8, !dbg !4492, !noundef !24
  %9 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 1, !dbg !4493
  %_16 = load i64, ptr %9, align 8, !dbg !4493, !noundef !24
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 %_16), !dbg !4492
  %_17.0 = extractvalue { i64, i1 } %10, 0, !dbg !4492
  %_17.1 = extractvalue { i64, i1 } %10, 1, !dbg !4492
  %11 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !4492
  br i1 %11, label %panic, label %bb10, !dbg !4492

bb10:                                             ; preds = %bb9
; call bootloader::bootinfo::memory_map::FrameRange::new
  %12 = call { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17hc95fe8c3b38d9c8aE(i64 %_13, i64 %_17.0) #10, !dbg !4494
  %_12.0 = extractvalue { i64, i64 } %12, 0, !dbg !4494
  %_12.1 = extractvalue { i64, i64 } %12, 1, !dbg !4494
  %_18 = load i32, ptr %region_type, align 4, !dbg !4495, !range !4496, !noundef !24
  %13 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4497
  store i64 %_12.0, ptr %13, align 8, !dbg !4497
  %14 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4497
  store i64 %_12.1, ptr %14, align 8, !dbg !4497
  %15 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4497
  store i32 %_18, ptr %15, align 8, !dbg !4497
  ret void, !dbg !4498

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_ed9c9ba9e63d1de34dcec58a215ecdf1) #11, !dbg !4492
  unreachable, !dbg !4492
}

; bootloader::bootinfo::BootInfo::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo3new17ha19f2f6d51091a3bE(ptr sret(%"bootinfo::BootInfo") %0, ptr %memory_map, ptr %tls_template, i64 %recursive_page_table_addr, i64 %physical_memory_offset) unnamed_addr #1 !dbg !4499 {
start:
  %1 = alloca %"core::option::Option<bootinfo::TlsTemplate>", align 8
  %physical_memory_offset.dbg.spill = alloca i64, align 8
  %recursive_page_table_addr.dbg.spill = alloca i64, align 8
  %_7 = alloca %"bootinfo::TlsTemplate", align 8
  %_6 = alloca %"bootinfo::TlsTemplate", align 8
  %tls_template1 = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %memory_map, metadata !4509, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata ptr %tls_template, metadata !4510, metadata !DIExpression()), !dbg !4516
  store i64 %recursive_page_table_addr, ptr %recursive_page_table_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %recursive_page_table_addr.dbg.spill, metadata !4511, metadata !DIExpression()), !dbg !4517
  store i64 %physical_memory_offset, ptr %physical_memory_offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %physical_memory_offset.dbg.spill, metadata !4512, metadata !DIExpression()), !dbg !4518
  call void @llvm.dbg.declare(metadata ptr %tls_template1, metadata !4513, metadata !DIExpression()), !dbg !4519
  store i64 0, ptr %_6, align 8, !dbg !4520
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 1, !dbg !4520
  store i64 0, ptr %2, align 8, !dbg !4520
  %3 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 2, !dbg !4520
  store i64 0, ptr %3, align 8, !dbg !4520
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %tls_template, i64 32, i1 false), !dbg !4521
; call core::option::Option<T>::unwrap_or
  call void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h1650d6feda0d52aeE"(ptr sret(%"bootinfo::TlsTemplate") %tls_template1, ptr %1, ptr %_6) #10, !dbg !4521
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tls_template1, i64 24, i1 false), !dbg !4522
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %memory_map, i64 1544, i1 false), !dbg !4523
  %4 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 1, !dbg !4523
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_7, i64 24, i1 false), !dbg !4523
  %5 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 2, !dbg !4523
  store i8 0, ptr %5, align 8, !dbg !4523
  ret void, !dbg !4524
}

; bootloader::bootinfo::BootInfo::tls_template
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo12tls_template17h85ec92cec7996c05E(ptr sret(%"core::option::Option<bootinfo::TlsTemplate>") %0, ptr align 8 %self) unnamed_addr #1 !dbg !4525 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"bootinfo::TlsTemplate", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4530, metadata !DIExpression()), !dbg !4531
  %1 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4532
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %1, i32 0, i32 2, !dbg !4532
  %_3 = load i64, ptr %2, align 8, !dbg !4532, !noundef !24
  %_2 = icmp ugt i64 %_3, 0, !dbg !4532
  br i1 %_2, label %bb1, label %bb2, !dbg !4532

bb2:                                              ; preds = %start
  store i64 0, ptr %0, align 8, !dbg !4533
  br label %bb3, !dbg !4534

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4535
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %3, i64 24, i1 false), !dbg !4535
  %4 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %0, i32 0, i32 1, !dbg !4536
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_4, i64 24, i1 false), !dbg !4536
  store i64 1, ptr %0, align 8, !dbg !4536
  br label %bb3, !dbg !4534

bb3:                                              ; preds = %bb2, %bb1
  ret void, !dbg !4537
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17he935b9fdaa8df5aeE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4538 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4543, metadata !DIExpression()), !dbg !4545
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4544, metadata !DIExpression()), !dbg !4545
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4546
  store ptr %0, ptr %_10, align 8, !dbg !4546
; call core::fmt::Formatter::debug_struct_field2_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17ha3908ba9ddf284ffE(ptr align 8 %f, ptr align 1 @alloc_123635884473960dd56c86dc3790206d, i64 12, ptr align 1 @alloc_34a481c507d4186bf7fae10d1bd79e92, i64 5, ptr align 1 %self, ptr align 8 @vtable.7, ptr align 1 @alloc_d364441870b2b0649252b7ed86076f49, i64 11, ptr align 1 %_10, ptr align 8 @vtable.8) #10, !dbg !4545
  ret i1 %1, !dbg !4547
}

; <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h7131edcbab57409bE"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4548 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_3 = alloca { ptr, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4553, metadata !DIExpression()), !dbg !4555
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4554, metadata !DIExpression()), !dbg !4555
  %0 = load i32, ptr %self, align 4, !dbg !4555, !range !4496, !noundef !24
  %_4 = zext i32 %0 to i64, !dbg !4555
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
    i64 10, label %bb13
    i64 11, label %bb14
    i64 12, label %bb15
    i64 13, label %bb16
    i64 14, label %bb1
  ], !dbg !4555

bb2:                                              ; preds = %start
  unreachable, !dbg !4555

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_4a5787c94a5c6515544ea35b2874fefd, ptr %1, align 8, !dbg !4555
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 6, ptr %2, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_22019b3552d9fb1e3b84ed56eb2f3479, ptr %3, align 8, !dbg !4555
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 5, ptr %4, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb5:                                              ; preds = %start
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_9d0f7c0bcb6a78befd604d29ca4a2b9f, ptr %5, align 8, !dbg !4555
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 8, ptr %6, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb6:                                              ; preds = %start
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_70aaad55d371cf47a32d7972d7912351, ptr %7, align 8, !dbg !4555
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 15, ptr %8, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb7:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_d897479b1372b34dee38d40b47b11c3f, ptr %9, align 8, !dbg !4555
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 7, ptr %10, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb8:                                              ; preds = %start
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_62ad37c25d6c0d46d197c76bab97f2f0, ptr %11, align 8, !dbg !4555
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 9, ptr %12, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb9:                                              ; preds = %start
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_b4e8b8132b145931e9c7cf99d0317720, ptr %13, align 8, !dbg !4555
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 6, ptr %14, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb10:                                             ; preds = %start
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_0ef3b2f3b5e1f4c59937efee203e67e6, ptr %15, align 8, !dbg !4555
  %16 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 11, ptr %16, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb11:                                             ; preds = %start
  %17 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_5744b9b389bf03570071c2a8bf290e86, ptr %17, align 8, !dbg !4555
  %18 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 9, ptr %18, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb12:                                             ; preds = %start
  %19 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_39295ce556b75ac6615c30f2deeb1d2c, ptr %19, align 8, !dbg !4555
  %20 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 10, ptr %20, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb13:                                             ; preds = %start
  %21 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_2776b0f4e67dd6ab609c8d161360a094, ptr %21, align 8, !dbg !4555
  %22 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 9, ptr %22, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb14:                                             ; preds = %start
  %23 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_e005ee52f1412cdac050eeb3921fb7d1, ptr %23, align 8, !dbg !4555
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 5, ptr %24, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb15:                                             ; preds = %start
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_58b15b18bd6fcbfbd0f539fc6ec70124, ptr %25, align 8, !dbg !4555
  %26 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 8, ptr %26, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb16:                                             ; preds = %start
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_9123534cf01caf4ddcc5f12a5f42e81d, ptr %27, align 8, !dbg !4555
  %28 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 7, ptr %28, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb1:                                              ; preds = %start
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  store ptr @alloc_d01d8fd7d9f5acb46596f8741940b1b9, ptr %29, align 8, !dbg !4555
  %30 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  store i64 13, ptr %30, align 8, !dbg !4555
  br label %bb17, !dbg !4556

bb17:                                             ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb14, %bb15, %bb16, %bb1
  %31 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4555
  %32 = load ptr, ptr %31, align 8, !dbg !4555, !nonnull !24, !align !2048, !noundef !24
  %33 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4555
  %34 = load i64, ptr %33, align 8, !dbg !4555, !noundef !24
; call core::fmt::Formatter::write_str
  %35 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h84efc8e991470cf4E(ptr align 8 %f, ptr align 1 %32, i64 %34) #10, !dbg !4555
  ret i1 %35, !dbg !4557
}

; <bootloader::bootinfo::memory_map::E820MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h67900054391d94fcE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4558 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_16 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4564, metadata !DIExpression()), !dbg !4566
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4565, metadata !DIExpression()), !dbg !4566
  %_9 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4567
  %_12 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 2, !dbg !4568
  %0 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 3, !dbg !4569
  store ptr %0, ptr %_16, align 8, !dbg !4569
; call core::fmt::Formatter::debug_struct_field4_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17h5806d729ac0714acE(ptr align 8 %f, ptr align 1 @alloc_fb51405d34b8cc7d74fd21ec999b3e3d, i64 16, ptr align 1 @alloc_ebb3df5f4741a025241fddaef9755b83, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc_396422043b272b6d52da89994a8da1bb, i64 3, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc_d364441870b2b0649252b7ed86076f49, i64 11, ptr align 1 %_12, ptr align 8 @vtable.a, ptr align 1 @alloc_290ba06092756bdd4500dba77c3cdc12, i64 24, ptr align 1 %_16, ptr align 8 @vtable.b) #10, !dbg !4566
  ret i1 %1, !dbg !4570
}

; <bootloader::bootinfo::BootInfo as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17h6d847c2750a13edeE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4571 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4576, metadata !DIExpression()), !dbg !4578
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4577, metadata !DIExpression()), !dbg !4578
  %_9 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4579
  %0 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 2, !dbg !4580
  store ptr %0, ptr %_13, align 8, !dbg !4580
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h5272c459d10a4cc6E(ptr align 8 %f, ptr align 1 @alloc_58b15b18bd6fcbfbd0f539fc6ec70124, i64 8, ptr align 1 @alloc_4e7412d5135123aff0c04211b5f288c9, i64 10, ptr align 1 %self, ptr align 8 @vtable.c, ptr align 1 @alloc_8e0160ca79ce24ca073e8195c871164d, i64 12, ptr align 1 %_9, ptr align 8 @vtable.d, ptr align 1 @alloc_c4e2ddd20c7a57f3c902942349194736, i64 15, ptr align 1 %_13, ptr align 8 @vtable.e) #10, !dbg !4578
  ret i1 %1, !dbg !4581
}

; <bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h307bd47cff9c813bE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4582 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4588, metadata !DIExpression()), !dbg !4590
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4589, metadata !DIExpression()), !dbg !4590
  %_9 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 1, !dbg !4591
  %0 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 2, !dbg !4592
  store ptr %0, ptr %_13, align 8, !dbg !4592
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h5272c459d10a4cc6E(ptr align 8 %f, ptr align 1 @alloc_710d4329c6a9724cfbbd833b9a1b522f, i64 11, ptr align 1 @alloc_ebb3df5f4741a025241fddaef9755b83, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc_d31be6207f88be80e372545306b67a74, i64 9, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc_b1d61471588d53fb5df97d58cc5ea8cf, i64 8, ptr align 1 %_13, ptr align 8 @vtable.f) #10, !dbg !4590
  ret i1 %1, !dbg !4593
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1, i64) unnamed_addr #5

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17h8c73cb10d9ab3329E(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h1cd0176f9202aacaE(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h66b464fe7fd2e86bE(i64, i64, ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint noredzone nounwind
declare align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h08e5199ee7586c45E"(ptr align 8) unnamed_addr #0

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17h17280eb0c6479a4dE(ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint noredzone nounwind
declare void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h51c20fb50a32a054E"(ptr sret(%"core::ops::range::RangeInclusive<usize>"), i64, i64) unnamed_addr #0

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hcc01091c1f437e02E"(i64, i64, ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #6

; core::panicking::panic
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1, i64, ptr align 8) unnamed_addr #5

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #7

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hde45d076821fe406E(ptr) unnamed_addr #1

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h5627a920b01761f6E(ptr, ptr, i64) unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #7

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hd0ad6d1b7b8d7f05E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @_ZN4core3fmt10ArgumentV13new17hac36df101f9f2416E(ptr align 8, ptr) unnamed_addr #0

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h8ae5bebd96008cd7E(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17ha8f29dd971f907e2E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h15ce7912bcc9ca8eE(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17ha22198bbb68da755E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h7911842e8b24a80dE"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h3f450a69e65230e8E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hbb0855bc7e2396e0E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: noredzone nounwind
declare align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17hb5f0b3d001a6a099E(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; core::panicking::panic_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h15828749cfe69757E(ptr, ptr, i64) unnamed_addr #0

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17he171fd6bdbd0df88E(ptr, ptr, i64) unnamed_addr #0

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
declare ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3640d8a256ede84E(ptr) unnamed_addr #0

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64, i64, ptr align 8) unnamed_addr #5

; Function Attrs: inaccessiblememonly nocallback nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #8

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64, i64) unnamed_addr #0

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8) unnamed_addr #0

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hedfd72d8da4be310E(i64, i64) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h19a02a70245f0079E"(i64, i64) unnamed_addr #0

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf50e9e67c9edba3aE"(ptr align 8) unnamed_addr #0

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #9

; core::cmp::min
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3cmp3min17h2cd815b39eadeab9E(i64, i64) unnamed_addr #0

; core::panicking::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking13assert_failed17ha2a9c290507d1ce0E(i8, ptr align 8, ptr align 8, ptr, ptr align 8) unnamed_addr #5

; core::fmt::Formatter::debug_list
; Function Attrs: noredzone nounwind
declare void @_ZN4core3fmt9Formatter10debug_list17h5cdc12f3ee6bbd1bE(ptr sret(%"core::fmt::builders::DebugList<'_, '_>"), ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hd60aae39096e1491E(ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd4a6383714610d49E(ptr align 8, ptr) unnamed_addr #1

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17h261ef5736cc0ac78E(ptr align 4) unnamed_addr #0

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17ha3908ba9ddf284ffE(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h84efc8e991470cf4E(ptr align 8, ptr align 1, i64) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa9bc72092dee9e5E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field4_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17h5806d729ac0714acE(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0b01fcf4ae544763E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field3_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h5272c459d10a4cc6E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7546b29596b3cbcaE"(ptr align 8, ptr align 8) unnamed_addr #1

attributes #0 = { inlinehint noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #1 = { noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #2 = { cold noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #3 = { noinline noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #4 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { cold noinline noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #6 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #7 = { argmemonly nocallback nofree nounwind willreturn }
attributes #8 = { inaccessiblememonly nocallback nofree nosync nounwind willreturn }
attributes #9 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!133, !134, !135}
!llvm.dbg.cu = !{!136}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !24, identifier: "c546fe0483c488e9e9c45ceeb8a737fa")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !17, templateParams: !24, identifier: "8ed342ef475793d783a172808af5275f")
!14 = !DINamespace(name: "memory_map", scope: !15)
!15 = !DINamespace(name: "bootinfo", scope: !16)
!16 = !DINamespace(name: "bootloader", scope: null)
!17 = !{!18, !25}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !13, file: !2, baseType: !19, size: 128, align: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "FrameRange", scope: !14, file: !2, size: 128, align: 64, elements: !20, templateParams: !24, identifier: "3b867001a47ec42fac11900805495c72")
!20 = !{!21, !23}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64)
!22 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!24 = !{}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !13, file: !2, baseType: !26, size: 32, align: 32, offset: 128)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MemoryRegionType", scope: !14, file: !2, baseType: !27, size: 32, align: 32, flags: DIFlagEnumClass, elements: !28)
!27 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43}
!29 = !DIEnumerator(name: "Usable", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "InUse", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "Reserved", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "AcpiReclaimable", value: 3, isUnsigned: true)
!33 = !DIEnumerator(name: "AcpiNvs", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "BadMemory", value: 5, isUnsigned: true)
!35 = !DIEnumerator(name: "Kernel", value: 6, isUnsigned: true)
!36 = !DIEnumerator(name: "KernelStack", value: 7, isUnsigned: true)
!37 = !DIEnumerator(name: "PageTable", value: 8, isUnsigned: true)
!38 = !DIEnumerator(name: "Bootloader", value: 9, isUnsigned: true)
!39 = !DIEnumerator(name: "FrameZero", value: 10, isUnsigned: true)
!40 = !DIEnumerator(name: "Empty", value: 11, isUnsigned: true)
!41 = !DIEnumerator(name: "BootInfo", value: 12, isUnsigned: true)
!42 = !DIEnumerator(name: "Package", value: 13, isUnsigned: true)
!43 = !DIEnumerator(name: "NonExhaustive", value: 14, isUnsigned: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !46, isLocal: true, isDefinition: true)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !47, vtableHolder: !19, templateParams: !24, identifier: "9619534a641401472dc42129a6860822")
!47 = !{!48, !49, !50, !51}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !46, file: !2, baseType: !6, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !46, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !54, isLocal: true, isDefinition: true)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !55, vtableHolder: !60, templateParams: !24, identifier: "5f8d8bc9a008c10bb39d338f7e7602b7")
!55 = !{!56, !57, !58, !59}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !54, file: !2, baseType: !6, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !54, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !26, size: 64, align: 64, dwarfAddressSpace: 0)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "<u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !63, isLocal: true, isDefinition: true)
!63 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !64, vtableHolder: !22, templateParams: !24, identifier: "66ff2dcbfb38c216c91c93b33c8afb87")
!64 = !{!65, !66, !67, !68}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !63, file: !2, baseType: !6, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !63, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!69 = !DIGlobalVariableExpression(var: !70, expr: !DIExpression())
!70 = distinct !DIGlobalVariable(name: "<u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !71, isLocal: true, isDefinition: true)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !72, vtableHolder: !27, templateParams: !24, identifier: "1fe14ef0b638e6ac439cbcdfc6c4b85a")
!72 = !{!73, !74, !75, !76}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !71, file: !2, baseType: !6, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !71, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!77 = !DIGlobalVariableExpression(var: !78, expr: !DIExpression())
!78 = distinct !DIGlobalVariable(name: "<&u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !79, isLocal: true, isDefinition: true)
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !80, vtableHolder: !85, templateParams: !24, identifier: "76a36f92706138bc96068bd075a152f1")
!80 = !{!81, !82, !83, !84}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !79, file: !2, baseType: !6, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !79, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !88, isLocal: true, isDefinition: true)
!88 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !89, vtableHolder: !94, templateParams: !24, identifier: "e83d82324c180bc28d13ffeb5e6d6edf")
!89 = !{!90, !91, !92, !93}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !88, file: !2, baseType: !6, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !88, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!94 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryMap", scope: !14, file: !2, size: 12352, align: 64, elements: !95, templateParams: !24, identifier: "989fb4aea1a4161d614b0726cc27e6fb")
!95 = !{!96, !100}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !94, file: !2, baseType: !97, size: 12288, align: 64)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 12288, align: 64, elements: !98)
!98 = !{!99}
!99 = !DISubrange(count: 64, lowerBound: 0)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "next_entry_index", scope: !94, file: !2, baseType: !22, size: 64, align: 64, offset: 12288)
!101 = !DIGlobalVariableExpression(var: !102, expr: !DIExpression())
!102 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !103, isLocal: true, isDefinition: true)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !104, vtableHolder: !109, templateParams: !24, identifier: "778dd39aa88855aa410dab5423c32a0")
!104 = !{!105, !106, !107, !108}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !103, file: !2, baseType: !6, size: 64, align: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !103, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!109 = !DICompositeType(tag: DW_TAG_structure_type, name: "TlsTemplate", scope: !15, file: !2, size: 192, align: 64, elements: !110, templateParams: !24, identifier: "e037b49fac83d2dc55bcc45435618a87")
!110 = !{!111, !112, !113}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !109, file: !2, baseType: !22, size: 64, align: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "file_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "mem_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 128)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "<&u8 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !116, isLocal: true, isDefinition: true)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u8 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !117, vtableHolder: !122, templateParams: !24, identifier: "cbd012db968e3b3ab1f8d3265fbe90e1")
!117 = !{!118, !119, !120, !121}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !116, file: !2, baseType: !6, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !116, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!123 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "<&u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !126, isLocal: true, isDefinition: true)
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !127, vtableHolder: !132, templateParams: !24, identifier: "70647e3b853d5fbc78a98226bf104528")
!127 = !{!128, !129, !130, !131}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !126, file: !2, baseType: !6, size: 64, align: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !126, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!133 = !{i32 7, !"PIC Level", i32 2}
!134 = !{i32 2, !"Dwarf Version", i32 4}
!135 = !{i32 2, !"Debug Info Version", i32 3}
!136 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !137, producer: "clang LLVM (rustc version 1.70.0-nightly (900c35403 2023-03-08))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !138, globals: !162, splitDebugInlining: false)
!137 = !DIFile(filename: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/lib.rs/@/bootloader.ebac9e79-cgu.0", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23")
!138 = !{!26, !139, !149, !156}
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !140, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !144)
!140 = !DINamespace(name: "v1", scope: !141)
!141 = !DINamespace(name: "rt", scope: !142)
!142 = !DINamespace(name: "fmt", scope: !143)
!143 = !DINamespace(name: "core", scope: null)
!144 = !{!145, !146, !147, !148}
!145 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !150, file: !2, baseType: !151, size: 8, align: 8, flags: DIFlagEnumClass, elements: !152)
!150 = !DINamespace(name: "cmp", scope: !143)
!151 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!152 = !{!153, !154, !155}
!153 = !DIEnumerator(name: "Less", value: -1)
!154 = !DIEnumerator(name: "Equal", value: 0)
!155 = !DIEnumerator(name: "Greater", value: 1)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !157, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !158)
!157 = !DINamespace(name: "panicking", scope: !143)
!158 = !{!159, !160, !161}
!159 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!160 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!161 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!162 = !{!0, !44, !52, !61, !69, !77, !86, !101, !114, !124}
!163 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h01361d41522453d9E", scope: !165, file: !164, line: 374, type: !168, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !183)
!164 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "1350c165f4aa6e79d8fe4fa0de29c328")
!165 = !DINamespace(name: "{impl#4}", scope: !166)
!166 = !DINamespace(name: "index", scope: !167)
!167 = !DINamespace(name: "slice", scope: !143)
!168 = !DISubroutineType(types: !169)
!169 = !{!170, !175, !170}
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !171, templateParams: !24, identifier: "5797476d2273060f8d7bda1f5194a52")
!171 = !{!172, !174}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !170, file: !2, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !170, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!175 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !176, file: !2, size: 128, align: 64, elements: !178, templateParams: !181, identifier: "a38539fb613303b2a542584743e0908e")
!176 = !DINamespace(name: "range", scope: !177)
!177 = !DINamespace(name: "ops", scope: !143)
!178 = !{!179, !180}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !175, file: !2, baseType: !9, size: 64, align: 64)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !175, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!181 = !{!182}
!182 = !DITemplateTypeParameter(name: "Idx", type: !9)
!183 = !{!184, !185, !186, !188}
!184 = !DILocalVariable(name: "self", arg: 1, scope: !163, file: !164, line: 374, type: !175)
!185 = !DILocalVariable(name: "slice", arg: 2, scope: !163, file: !164, line: 374, type: !170)
!186 = !DILocalVariable(name: "this", scope: !187, file: !164, line: 375, type: !175, align: 8)
!187 = distinct !DILexicalBlock(scope: !163, file: !164, line: 375, column: 9)
!188 = !DILocalVariable(name: "new_len", scope: !189, file: !164, line: 386, type: !9, align: 8)
!189 = distinct !DILexicalBlock(scope: !187, file: !164, line: 386, column: 13)
!190 = !{!191}
!191 = !DITemplateTypeParameter(name: "T", type: !13)
!192 = !DILocation(line: 374, column: 29, scope: !163)
!193 = !DILocation(line: 374, column: 35, scope: !163)
!194 = !DILocation(line: 375, column: 13, scope: !187)
!195 = !DILocation(line: 375, column: 20, scope: !163)
!196 = !DILocation(line: 381, column: 13, scope: !187)
!197 = !DILocalVariable(name: "this", arg: 1, scope: !198, file: !199, line: 2241, type: !175)
!198 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h2ec63823b488252cE", scope: !200, file: !199, line: 2241, type: !201, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !203)
!199 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "890eee47c720221d7463b825943ce452")
!200 = !DINamespace(name: "get_unchecked", scope: !165)
!201 = !DISubroutineType(types: !202)
!202 = !{null, !175, !170}
!203 = !{!197, !204}
!204 = !DILocalVariable(name: "slice", arg: 2, scope: !198, file: !199, line: 2241, type: !170)
!205 = !DILocation(line: 2241, column: 39, scope: !198, inlinedAt: !206)
!206 = distinct !DILocation(line: 381, column: 13, scope: !187)
!207 = !DILocation(line: 384, column: 17, scope: !208, inlinedAt: !206)
!208 = !DILexicalBlockFile(scope: !198, file: !164, discriminator: 0)
!209 = !DILocation(line: 384, column: 55, scope: !208, inlinedAt: !206)
!210 = !DILocation(line: 384, column: 43, scope: !208, inlinedAt: !206)
!211 = !DILocation(line: 2242, column: 20, scope: !198, inlinedAt: !206)
!212 = !{i8 0, i8 2}
!213 = !DILocation(line: 2244, column: 21, scope: !198, inlinedAt: !206)
!214 = !DILocation(line: 386, column: 27, scope: !187)
!215 = !DILocation(line: 386, column: 17, scope: !189)
!216 = !DILocation(line: 387, column: 39, scope: !189)
!217 = !DILocalVariable(name: "self", arg: 1, scope: !218, file: !219, line: 915, type: !225)
!218 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h995ff155af770048E", scope: !220, file: !219, line: 915, type: !223, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !226)
!219 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "310ccb1a5479a9302756ed4297f2c8bd")
!220 = !DINamespace(name: "{impl#0}", scope: !221)
!221 = !DINamespace(name: "const_ptr", scope: !222)
!222 = !DINamespace(name: "ptr", scope: !143)
!223 = !DISubroutineType(types: !224)
!224 = !{!225, !225, !9}
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!226 = !{!217, !227}
!227 = !DILocalVariable(name: "count", arg: 2, scope: !218, file: !219, line: 915, type: !9)
!228 = !DILocation(line: 915, column: 29, scope: !218, inlinedAt: !229)
!229 = distinct !DILocation(line: 387, column: 39, scope: !189)
!230 = !DILocation(line: 915, column: 35, scope: !218, inlinedAt: !229)
!231 = !DILocalVariable(name: "self", arg: 1, scope: !232, file: !219, line: 460, type: !225)
!232 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17haeeea06ee69b2584E", scope: !220, file: !219, line: 460, type: !233, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !236)
!233 = !DISubroutineType(types: !234)
!234 = !{!225, !225, !235}
!235 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!236 = !{!231, !237}
!237 = !DILocalVariable(name: "count", arg: 2, scope: !232, file: !219, line: 460, type: !235)
!238 = !DILocation(line: 460, column: 32, scope: !232, inlinedAt: !239)
!239 = distinct !DILocation(line: 920, column: 18, scope: !218, inlinedAt: !229)
!240 = !DILocation(line: 460, column: 38, scope: !232, inlinedAt: !239)
!241 = !DILocation(line: 465, column: 18, scope: !232, inlinedAt: !239)
!242 = !DILocation(line: 387, column: 13, scope: !189)
!243 = !DILocation(line: 389, column: 6, scope: !163)
!244 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h202392f75bbf82dcE", scope: !165, file: !164, line: 392, type: !245, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !251)
!245 = !DISubroutineType(types: !246)
!246 = !{!247, !175, !247}
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !248, templateParams: !24, identifier: "538f63368f63e612b22e7d3cb1555069")
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !247, file: !2, baseType: !173, size: 64, align: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !247, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!251 = !{!252, !253, !254, !256}
!252 = !DILocalVariable(name: "self", arg: 1, scope: !244, file: !164, line: 392, type: !175)
!253 = !DILocalVariable(name: "slice", arg: 2, scope: !244, file: !164, line: 392, type: !247)
!254 = !DILocalVariable(name: "this", scope: !255, file: !164, line: 393, type: !175, align: 8)
!255 = distinct !DILexicalBlock(scope: !244, file: !164, line: 393, column: 9)
!256 = !DILocalVariable(name: "new_len", scope: !257, file: !164, line: 401, type: !9, align: 8)
!257 = distinct !DILexicalBlock(scope: !255, file: !164, line: 401, column: 13)
!258 = !DILocation(line: 392, column: 33, scope: !244)
!259 = !DILocation(line: 392, column: 39, scope: !244)
!260 = !DILocation(line: 393, column: 13, scope: !255)
!261 = !DILocation(line: 393, column: 20, scope: !244)
!262 = !DILocation(line: 396, column: 13, scope: !255)
!263 = !DILocalVariable(name: "this", arg: 1, scope: !264, file: !199, line: 2241, type: !175)
!264 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17hd00ddf68feedb094E", scope: !265, file: !199, line: 2241, type: !266, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !268)
!265 = !DINamespace(name: "get_unchecked_mut", scope: !165)
!266 = !DISubroutineType(types: !267)
!267 = !{null, !175, !247}
!268 = !{!263, !269}
!269 = !DILocalVariable(name: "slice", arg: 2, scope: !264, file: !199, line: 2241, type: !247)
!270 = !DILocation(line: 2241, column: 39, scope: !264, inlinedAt: !271)
!271 = distinct !DILocation(line: 396, column: 13, scope: !255)
!272 = !DILocation(line: 399, column: 17, scope: !273, inlinedAt: !271)
!273 = !DILexicalBlockFile(scope: !264, file: !164, discriminator: 0)
!274 = !DILocalVariable(name: "self", arg: 1, scope: !275, file: !276, line: 1878, type: !247)
!275 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17hd04d3e9db1b39a63E", scope: !277, file: !276, line: 1878, type: !279, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !281)
!276 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "8f9c2a68da2d937402d223242416154f")
!277 = !DINamespace(name: "{impl#1}", scope: !278)
!278 = !DINamespace(name: "mut_ptr", scope: !222)
!279 = !DISubroutineType(types: !280)
!280 = !{!9, !247}
!281 = !{!274}
!282 = !DILocation(line: 1878, column: 22, scope: !275, inlinedAt: !283)
!283 = distinct !DILocation(line: 399, column: 55, scope: !273, inlinedAt: !271)
!284 = !DILocation(line: 1879, column: 9, scope: !275, inlinedAt: !283)
!285 = !DILocation(line: 399, column: 43, scope: !273, inlinedAt: !271)
!286 = !DILocation(line: 2242, column: 20, scope: !264, inlinedAt: !271)
!287 = !DILocation(line: 2244, column: 21, scope: !264, inlinedAt: !271)
!288 = !DILocation(line: 401, column: 27, scope: !255)
!289 = !DILocation(line: 401, column: 17, scope: !257)
!290 = !DILocalVariable(name: "self", arg: 1, scope: !291, file: !276, line: 2014, type: !247)
!291 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hb51cbd1a342bd3abE", scope: !277, file: !276, line: 2014, type: !292, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !295)
!292 = !DISubroutineType(types: !293)
!293 = !{!294, !247}
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!295 = !{!290}
!296 = !DILocation(line: 2014, column: 29, scope: !291, inlinedAt: !297)
!297 = distinct !DILocation(line: 402, column: 43, scope: !257)
!298 = !DILocalVariable(name: "self", arg: 1, scope: !299, file: !276, line: 1015, type: !294)
!299 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd6d5461b94be3585E", scope: !300, file: !276, line: 1015, type: !301, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !303)
!300 = !DINamespace(name: "{impl#0}", scope: !278)
!301 = !DISubroutineType(types: !302)
!302 = !{!294, !294, !9}
!303 = !{!298, !304}
!304 = !DILocalVariable(name: "count", arg: 2, scope: !299, file: !276, line: 1015, type: !9)
!305 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !306)
!306 = distinct !DILocation(line: 402, column: 43, scope: !257)
!307 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !306)
!308 = !DILocalVariable(name: "self", arg: 1, scope: !309, file: !276, line: 472, type: !294)
!309 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h936bc12661a38c4eE", scope: !300, file: !276, line: 472, type: !310, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !312)
!310 = !DISubroutineType(types: !311)
!311 = !{!294, !294, !235}
!312 = !{!308, !313}
!313 = !DILocalVariable(name: "count", arg: 2, scope: !309, file: !276, line: 472, type: !235)
!314 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !315)
!315 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !306)
!316 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !315)
!317 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !315)
!318 = !DILocation(line: 402, column: 13, scope: !257)
!319 = !DILocation(line: 404, column: 6, scope: !244)
!320 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h406a63f4bfd5143aE", scope: !165, file: !164, line: 407, type: !321, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !340)
!321 = !DISubroutineType(types: !322)
!322 = !{!323, !175, !323, !327}
!323 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !324, templateParams: !24, identifier: "1d67cf81949e39173126ea85579b3671")
!324 = !{!325, !326}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !323, file: !2, baseType: !173, size: 64, align: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !323, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !328, size: 64, align: 64, dwarfAddressSpace: 0)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !329, file: !2, size: 192, align: 64, elements: !331, templateParams: !24, identifier: "ce713e8941e9786f7cd6b9ed5cdf02a8")
!329 = !DINamespace(name: "location", scope: !330)
!330 = !DINamespace(name: "panic", scope: !143)
!331 = !{!332, !338, !339}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !328, file: !2, baseType: !333, size: 128, align: 64)
!333 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !334, templateParams: !24, identifier: "c67d244f92c53ee233f4a290be1c6ff8")
!334 = !{!335, !337}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !333, file: !2, baseType: !336, size: 64, align: 64)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !333, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !328, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !328, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!340 = !{!341, !342}
!341 = !DILocalVariable(name: "self", arg: 1, scope: !320, file: !164, line: 407, type: !175)
!342 = !DILocalVariable(name: "slice", arg: 2, scope: !320, file: !164, line: 407, type: !323)
!343 = !DILocation(line: 407, column: 14, scope: !320)
!344 = !DILocation(line: 407, column: 20, scope: !320)
!345 = !DILocation(line: 408, column: 12, scope: !320)
!346 = !DILocation(line: 410, column: 19, scope: !320)
!347 = !DILocation(line: 409, column: 13, scope: !320)
!348 = !DILocation(line: 414, column: 20, scope: !320)
!349 = !DILocation(line: 415, column: 6, scope: !320)
!350 = !DILocation(line: 411, column: 13, scope: !320)
!351 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h1b9025a7c2eacdb7E", scope: !165, file: !164, line: 418, type: !352, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !358)
!352 = !DISubroutineType(types: !353)
!353 = !{!354, !175, !354, !327}
!354 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !355, templateParams: !24, identifier: "6c0b6b6f98ebaee45f3544413fce9d70")
!355 = !{!356, !357}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !354, file: !2, baseType: !173, size: 64, align: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !354, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!358 = !{!359, !360}
!359 = !DILocalVariable(name: "self", arg: 1, scope: !351, file: !164, line: 418, type: !175)
!360 = !DILocalVariable(name: "slice", arg: 2, scope: !351, file: !164, line: 418, type: !354)
!361 = !DILocation(line: 418, column: 18, scope: !351)
!362 = !DILocation(line: 418, column: 24, scope: !351)
!363 = !DILocation(line: 419, column: 12, scope: !351)
!364 = !DILocation(line: 421, column: 19, scope: !351)
!365 = !DILocation(line: 420, column: 13, scope: !351)
!366 = !DILocation(line: 425, column: 24, scope: !351)
!367 = !DILocation(line: 426, column: 6, scope: !351)
!368 = !DILocation(line: 422, column: 13, scope: !351)
!369 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h18893aedccd47536E", scope: !370, file: !164, line: 462, type: !371, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !376)
!370 = !DINamespace(name: "{impl#5}", scope: !166)
!371 = !DISubroutineType(types: !372)
!372 = !{!354, !373, !354, !327}
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !176, file: !2, size: 64, align: 64, elements: !374, templateParams: !181, identifier: "eef9e250acf500f29d1a295d662e643c")
!374 = !{!375}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !373, file: !2, baseType: !9, size: 64, align: 64)
!376 = !{!377, !378}
!377 = !DILocalVariable(name: "self", arg: 1, scope: !369, file: !164, line: 462, type: !373)
!378 = !DILocalVariable(name: "slice", arg: 2, scope: !369, file: !164, line: 462, type: !354)
!379 = !DILocation(line: 462, column: 18, scope: !369)
!380 = !DILocation(line: 462, column: 24, scope: !369)
!381 = !DILocation(line: 463, column: 9, scope: !369)
!382 = !DILocation(line: 464, column: 6, scope: !369)
!383 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h61dddd128cad722aE", scope: !384, file: !164, line: 489, type: !385, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !390)
!384 = !DINamespace(name: "{impl#6}", scope: !166)
!385 = !DISubroutineType(types: !386)
!386 = !{!247, !387, !247}
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !176, file: !2, size: 64, align: 64, elements: !388, templateParams: !181, identifier: "99fed6f0a894aa5b34f9722931a161de")
!388 = !{!389}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !387, file: !2, baseType: !9, size: 64, align: 64)
!390 = !{!391, !392}
!391 = !DILocalVariable(name: "self", arg: 1, scope: !383, file: !164, line: 489, type: !387)
!392 = !DILocalVariable(name: "slice", arg: 2, scope: !383, file: !164, line: 489, type: !247)
!393 = !DILocation(line: 489, column: 33, scope: !383)
!394 = !DILocation(line: 489, column: 39, scope: !383)
!395 = !DILocation(line: 1878, column: 22, scope: !275, inlinedAt: !396)
!396 = distinct !DILocation(line: 491, column: 31, scope: !383)
!397 = !DILocation(line: 1879, column: 9, scope: !275, inlinedAt: !396)
!398 = !DILocation(line: 491, column: 18, scope: !383)
!399 = !DILocation(line: 492, column: 6, scope: !383)
!400 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc9f1df66d2642dbcE", scope: !384, file: !164, line: 504, type: !401, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !403)
!401 = !DISubroutineType(types: !402)
!402 = !{!354, !387, !354, !327}
!403 = !{!404, !405}
!404 = !DILocalVariable(name: "self", arg: 1, scope: !400, file: !164, line: 504, type: !387)
!405 = !DILocalVariable(name: "slice", arg: 2, scope: !400, file: !164, line: 504, type: !354)
!406 = !DILocation(line: 504, column: 18, scope: !400)
!407 = !DILocation(line: 504, column: 24, scope: !400)
!408 = !DILocation(line: 505, column: 12, scope: !400)
!409 = !DILocation(line: 509, column: 24, scope: !400)
!410 = !DILocation(line: 510, column: 6, scope: !400)
!411 = !DILocation(line: 506, column: 13, scope: !400)
!412 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4e9f4e6aca761bfaE", scope: !413, file: !164, line: 585, type: !414, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !422)
!413 = !DINamespace(name: "{impl#8}", scope: !166)
!414 = !DISubroutineType(types: !415)
!415 = !{!354, !416, !354, !327}
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !176, file: !2, size: 192, align: 64, elements: !417, templateParams: !181, identifier: "b64482fb51ba2b5cdadb166cbbe28d89")
!417 = !{!418, !419, !420}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !416, file: !2, baseType: !9, size: 64, align: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !416, file: !2, baseType: !421, size: 8, align: 8, offset: 128)
!421 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!422 = !{!423, !424}
!423 = !DILocalVariable(name: "self", arg: 1, scope: !412, file: !164, line: 585, type: !416)
!424 = !DILocalVariable(name: "slice", arg: 2, scope: !412, file: !164, line: 585, type: !354)
!425 = !DILocation(line: 585, column: 18, scope: !412)
!426 = !DILocation(line: 585, column: 24, scope: !412)
!427 = !DILocation(line: 586, column: 13, scope: !412)
!428 = !DILocation(line: 586, column: 12, scope: !412)
!429 = !DILocation(line: 589, column: 9, scope: !412)
!430 = !DILocation(line: 590, column: 6, scope: !412)
!431 = !DILocation(line: 587, column: 13, scope: !412)
!432 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9a90a00cb3549364E", scope: !433, file: !164, line: 626, type: !434, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !439)
!433 = !DINamespace(name: "{impl#9}", scope: !166)
!434 = !DISubroutineType(types: !435)
!435 = !{!354, !436, !354, !327}
!436 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeToInclusive<usize>", scope: !176, file: !2, size: 64, align: 64, elements: !437, templateParams: !181, identifier: "ec941d5de8b2d79bd435b04e7bdf9715")
!437 = !{!438}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !436, file: !2, baseType: !9, size: 64, align: 64)
!439 = !{!440, !441}
!440 = !DILocalVariable(name: "self", arg: 1, scope: !432, file: !164, line: 626, type: !436)
!441 = !DILocalVariable(name: "slice", arg: 2, scope: !432, file: !164, line: 626, type: !354)
!442 = !DILocation(line: 626, column: 18, scope: !432)
!443 = !DILocation(line: 626, column: 24, scope: !432)
!444 = !DILocation(line: 627, column: 9, scope: !432)
!445 = !DILocation(line: 628, column: 6, scope: !432)
!446 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1484d596ca396b6fE", scope: !448, file: !447, line: 2396, type: !449, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !504)
!447 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "3da37f0da8b4e2a4936cc4d503a5a432")
!448 = !DINamespace(name: "{impl#59}", scope: !142)
!449 = !DISubroutineType(types: !450)
!450 = !{!451, !469, !470}
!451 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !452, file: !2, size: 8, align: 8, elements: !453, templateParams: !24, identifier: "ab4fdd4ae7b9c0609a3e563b345100af")
!452 = !DINamespace(name: "result", scope: !143)
!453 = !{!454}
!454 = !DICompositeType(tag: DW_TAG_variant_part, scope: !451, file: !2, size: 8, align: 8, elements: !455, templateParams: !24, identifier: "b1509727e34e792adf97c998c8b09839", discriminator: !468)
!455 = !{!456, !464}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !454, file: !2, baseType: !457, size: 8, align: 8, extraData: i64 0)
!457 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !451, file: !2, size: 8, align: 8, elements: !458, templateParams: !460, identifier: "7b72f9a6c523523a3efe2fa3bc75af66")
!458 = !{!459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !457, file: !2, baseType: !7, align: 8, offset: 8)
!460 = !{!461, !462}
!461 = !DITemplateTypeParameter(name: "T", type: !7)
!462 = !DITemplateTypeParameter(name: "E", type: !463)
!463 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !142, file: !2, align: 8, elements: !24, identifier: "c2c8f2f945c37359aa57422093183824")
!464 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !454, file: !2, baseType: !465, size: 8, align: 8, extraData: i64 1)
!465 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !451, file: !2, size: 8, align: 8, elements: !466, templateParams: !460, identifier: "7e7f93e4d1c31285722aa9db6f824275")
!466 = !{!467}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !465, file: !2, baseType: !463, align: 8, offset: 8)
!468 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagArtificial)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !471, size: 64, align: 64, dwarfAddressSpace: 0)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !142, file: !2, size: 512, align: 64, elements: !472, templateParams: !24, identifier: "f926d77f60c5c9d319d3b7845f5fe267")
!472 = !{!473, !474, !476, !477, !492, !493}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !471, file: !2, baseType: !27, size: 32, align: 32, offset: 384)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !471, file: !2, baseType: !475, size: 32, align: 32, offset: 416)
!475 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !471, file: !2, baseType: !139, size: 8, align: 8, offset: 448)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !471, file: !2, baseType: !478, size: 128, align: 64, offset: 128)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !479, file: !2, size: 128, align: 64, elements: !480, templateParams: !24, identifier: "cb26f181a711fbe83b3afb348d7c01cb")
!479 = !DINamespace(name: "option", scope: !143)
!480 = !{!481}
!481 = !DICompositeType(tag: DW_TAG_variant_part, scope: !478, file: !2, size: 128, align: 64, elements: !482, templateParams: !24, identifier: "8d3067b891c8f12a45e965020aca888f", discriminator: !491)
!482 = !{!483, !487}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !481, file: !2, baseType: !484, size: 128, align: 64, extraData: i64 0)
!484 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !478, file: !2, size: 128, align: 64, elements: !24, templateParams: !485, identifier: "c8b9aa2632d7f877a99d298efe41260c")
!485 = !{!486}
!486 = !DITemplateTypeParameter(name: "T", type: !9)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !481, file: !2, baseType: !488, size: 128, align: 64, extraData: i64 1)
!488 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !478, file: !2, size: 128, align: 64, elements: !489, templateParams: !485, identifier: "eec942390a307d7c8c2162b2092f63f3")
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !488, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, scope: !478, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !471, file: !2, baseType: !478, size: 128, align: 64, offset: 256)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !471, file: !2, baseType: !494, size: 128, align: 64)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !495, templateParams: !24, identifier: "21e2737f9b3dccde2bd3f02defa8704f")
!495 = !{!496, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !494, file: !2, baseType: !497, size: 64, align: 64)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64, align: 64, dwarfAddressSpace: 0)
!498 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !24, identifier: "bb744bac75d5d19249a16512e8e296c")
!499 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !494, file: !2, baseType: !500, size: 64, align: 64, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !501, size: 64, align: 64, dwarfAddressSpace: 0)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !502)
!502 = !{!503}
!503 = !DISubrange(count: 3, lowerBound: 0)
!504 = !{!505, !506}
!505 = !DILocalVariable(name: "self", arg: 1, scope: !446, file: !447, line: 2396, type: !469)
!506 = !DILocalVariable(name: "f", arg: 2, scope: !446, file: !447, line: 2396, type: !470)
!507 = !DILocation(line: 2396, column: 20, scope: !446)
!508 = !DILocation(line: 2396, column: 27, scope: !446)
!509 = !DILocation(line: 2396, column: 71, scope: !446)
!510 = !{i64 8}
!511 = !DILocation(line: 2396, column: 62, scope: !446)
!512 = !DILocation(line: 2396, column: 84, scope: !446)
!513 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17heb471c0ce559efb1E", scope: !448, file: !447, line: 2396, type: !514, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !520, retainedNodes: !517)
!514 = !DISubroutineType(types: !515)
!515 = !{!451, !516, !470}
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!517 = !{!518, !519}
!518 = !DILocalVariable(name: "self", arg: 1, scope: !513, file: !447, line: 2396, type: !516)
!519 = !DILocalVariable(name: "f", arg: 2, scope: !513, file: !447, line: 2396, type: !470)
!520 = !{!521}
!521 = !DITemplateTypeParameter(name: "T", type: !26)
!522 = !DILocation(line: 2396, column: 20, scope: !513)
!523 = !DILocation(line: 2396, column: 27, scope: !513)
!524 = !DILocation(line: 2396, column: 71, scope: !513)
!525 = !{i64 4}
!526 = !DILocation(line: 2396, column: 62, scope: !513)
!527 = !DILocation(line: 2396, column: 84, scope: !513)
!528 = distinct !DISubprogram(name: "is_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17h5c56d261f36d6e12E", scope: !529, file: !199, line: 2276, type: !530, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !532)
!529 = !DINamespace(name: "intrinsics", scope: !143)
!530 = !DISubroutineType(types: !531)
!531 = !{!421, !225, !225, !9}
!532 = !{!533, !534, !535, !536, !538, !540, !542}
!533 = !DILocalVariable(name: "src", arg: 1, scope: !528, file: !199, line: 2276, type: !225)
!534 = !DILocalVariable(name: "dst", arg: 2, scope: !528, file: !199, line: 2276, type: !225)
!535 = !DILocalVariable(name: "count", arg: 3, scope: !528, file: !199, line: 2276, type: !9)
!536 = !DILocalVariable(name: "src_usize", scope: !537, file: !199, line: 2277, type: !9, align: 8)
!537 = distinct !DILexicalBlock(scope: !528, file: !199, line: 2277, column: 5)
!538 = !DILocalVariable(name: "dst_usize", scope: !539, file: !199, line: 2278, type: !9, align: 8)
!539 = distinct !DILexicalBlock(scope: !537, file: !199, line: 2278, column: 5)
!540 = !DILocalVariable(name: "size", scope: !541, file: !199, line: 2279, type: !9, align: 8)
!541 = distinct !DILexicalBlock(scope: !539, file: !199, line: 2279, column: 5)
!542 = !DILocalVariable(name: "diff", scope: !543, file: !199, line: 2280, type: !9, align: 8)
!543 = distinct !DILexicalBlock(scope: !541, file: !199, line: 2280, column: 5)
!544 = !DILocation(line: 2276, column: 36, scope: !528)
!545 = !DILocation(line: 2276, column: 51, scope: !528)
!546 = !DILocation(line: 2276, column: 66, scope: !528)
!547 = !DILocation(line: 2280, column: 9, scope: !543)
!548 = !DILocalVariable(name: "self", arg: 1, scope: !549, file: !219, line: 203, type: !225)
!549 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0a99ed6458449ea9E", scope: !220, file: !219, line: 203, type: !550, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !552)
!550 = !DISubroutineType(types: !551)
!551 = !{!9, !225}
!552 = !{!548}
!553 = !DILocation(line: 203, column: 17, scope: !549, inlinedAt: !554)
!554 = distinct !DILocation(line: 2277, column: 21, scope: !528)
!555 = !DILocalVariable(name: "self", arg: 1, scope: !556, file: !219, line: 58, type: !225)
!556 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h1b8afa316f16578aE", scope: !220, file: !219, line: 58, type: !557, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !560, retainedNodes: !559)
!557 = !DISubroutineType(types: !558)
!558 = !{!6, !225}
!559 = !{!555}
!560 = !{!191, !561}
!561 = !DITemplateTypeParameter(name: "U", type: !7)
!562 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !563)
!563 = distinct !DILocation(line: 207, column: 33, scope: !549, inlinedAt: !554)
!564 = !DILocation(line: 207, column: 18, scope: !549, inlinedAt: !554)
!565 = !DILocation(line: 2277, column: 21, scope: !528)
!566 = !DILocation(line: 2277, column: 9, scope: !537)
!567 = !DILocation(line: 203, column: 17, scope: !549, inlinedAt: !568)
!568 = distinct !DILocation(line: 2278, column: 21, scope: !537)
!569 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !570)
!570 = distinct !DILocation(line: 207, column: 33, scope: !549, inlinedAt: !568)
!571 = !DILocation(line: 207, column: 18, scope: !549, inlinedAt: !568)
!572 = !DILocation(line: 2278, column: 21, scope: !537)
!573 = !DILocation(line: 2278, column: 9, scope: !539)
!574 = !DILocation(line: 2279, column: 16, scope: !539)
!575 = !DILocation(line: 2279, column: 9, scope: !541)
!576 = !DILocation(line: 2280, column: 19, scope: !541)
!577 = !DILocation(line: 2280, column: 74, scope: !541)
!578 = !DILocation(line: 2280, column: 43, scope: !541)
!579 = !DILocation(line: 2280, column: 16, scope: !541)
!580 = !DILocation(line: 2283, column: 5, scope: !543)
!581 = !DILocation(line: 2284, column: 2, scope: !528)
!582 = distinct !DISubprogram(name: "copy_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h2200521e5e5761abE", scope: !529, file: !199, line: 2376, type: !583, scopeLine: 2376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !585)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !225, !294, !9}
!585 = !{!586, !587, !588}
!586 = !DILocalVariable(name: "src", arg: 1, scope: !582, file: !199, line: 2376, type: !225)
!587 = !DILocalVariable(name: "dst", arg: 2, scope: !582, file: !199, line: 2376, type: !294)
!588 = !DILocalVariable(name: "count", arg: 3, scope: !582, file: !199, line: 2376, type: !9)
!589 = !DILocation(line: 2376, column: 44, scope: !582)
!590 = !DILocation(line: 2376, column: 59, scope: !582)
!591 = !DILocation(line: 2376, column: 72, scope: !582)
!592 = !DILocation(line: 2385, column: 9, scope: !582)
!593 = !DILocalVariable(name: "src", arg: 1, scope: !594, file: !199, line: 2241, type: !225)
!594 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h20abb14ad7aa314fE", scope: !595, file: !199, line: 2241, type: !583, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !596)
!595 = !DINamespace(name: "copy_nonoverlapping", scope: !529)
!596 = !{!593, !597, !598}
!597 = !DILocalVariable(name: "dst", arg: 2, scope: !594, file: !199, line: 2241, type: !294)
!598 = !DILocalVariable(name: "count", arg: 3, scope: !594, file: !199, line: 2241, type: !9)
!599 = !DILocation(line: 2241, column: 39, scope: !594, inlinedAt: !600)
!600 = distinct !DILocation(line: 2385, column: 9, scope: !582)
!601 = !DILocation(line: 2389, column: 13, scope: !594, inlinedAt: !600)
!602 = !DILocation(line: 2390, column: 20, scope: !594, inlinedAt: !600)
!603 = !DILocation(line: 2391, column: 20, scope: !594, inlinedAt: !600)
!604 = !DILocation(line: 2242, column: 20, scope: !594, inlinedAt: !600)
!605 = !DILocation(line: 2244, column: 21, scope: !594, inlinedAt: !600)
!606 = !DILocation(line: 2393, column: 9, scope: !582)
!607 = !DILocation(line: 2395, column: 2, scope: !582)
!608 = distinct !DISubprogram(name: "copy_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h520356a0fc1741dcE", scope: !529, file: !199, line: 2376, type: !609, scopeLine: 2376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !613)
!609 = !DISubroutineType(types: !610)
!610 = !{null, !611, !612, !9}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!613 = !{!614, !615, !616}
!614 = !DILocalVariable(name: "src", arg: 1, scope: !608, file: !199, line: 2376, type: !611)
!615 = !DILocalVariable(name: "dst", arg: 2, scope: !608, file: !199, line: 2376, type: !612)
!616 = !DILocalVariable(name: "count", arg: 3, scope: !608, file: !199, line: 2376, type: !9)
!617 = !DILocation(line: 2376, column: 44, scope: !608)
!618 = !DILocation(line: 2376, column: 59, scope: !608)
!619 = !DILocation(line: 2376, column: 72, scope: !608)
!620 = !DILocation(line: 2385, column: 9, scope: !608)
!621 = !DILocalVariable(name: "src", arg: 1, scope: !622, file: !199, line: 2241, type: !611)
!622 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17hb7bcf291927b3151E", scope: !595, file: !199, line: 2241, type: !609, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !623)
!623 = !{!621, !624, !625}
!624 = !DILocalVariable(name: "dst", arg: 2, scope: !622, file: !199, line: 2241, type: !612)
!625 = !DILocalVariable(name: "count", arg: 3, scope: !622, file: !199, line: 2241, type: !9)
!626 = !DILocation(line: 2241, column: 39, scope: !622, inlinedAt: !627)
!627 = distinct !DILocation(line: 2385, column: 9, scope: !608)
!628 = !DILocation(line: 2389, column: 13, scope: !622, inlinedAt: !627)
!629 = !DILocation(line: 2390, column: 20, scope: !622, inlinedAt: !627)
!630 = !DILocation(line: 2391, column: 20, scope: !622, inlinedAt: !627)
!631 = !DILocation(line: 2242, column: 20, scope: !622, inlinedAt: !627)
!632 = !DILocation(line: 2244, column: 21, scope: !622, inlinedAt: !627)
!633 = !DILocation(line: 2393, column: 9, scope: !608)
!634 = !DILocation(line: 2395, column: 2, scope: !608)
!635 = distinct !DISubprogram(name: "is_aligned_and_not_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h39b99bb979a2c2caE", scope: !529, file: !199, line: 2260, type: !636, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !638)
!636 = !DISubroutineType(types: !637)
!637 = !{!421, !225}
!638 = !{!639}
!639 = !DILocalVariable(name: "ptr", arg: 1, scope: !635, file: !199, line: 2260, type: !225)
!640 = !DILocation(line: 2260, column: 42, scope: !635)
!641 = !DILocation(line: 2261, column: 6, scope: !635)
!642 = !DILocation(line: 2261, column: 5, scope: !635)
!643 = !DILocation(line: 2261, column: 23, scope: !635)
!644 = !DILocation(line: 2262, column: 2, scope: !635)
!645 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h77b7d0c96435260eE", scope: !529, file: !199, line: 2260, type: !646, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !659)
!646 = !DISubroutineType(types: !647)
!647 = !{!421, !648}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !649, size: 64, align: 64, dwarfAddressSpace: 0)
!649 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !650, file: !2, size: 192, align: 64, elements: !652, templateParams: !190, identifier: "14f08a375902d32ab0cd4ad1c34080c2")
!650 = !DINamespace(name: "maybe_uninit", scope: !651)
!651 = !DINamespace(name: "mem", scope: !143)
!652 = !{!653, !654}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !649, file: !2, baseType: !7, align: 8)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !649, file: !2, baseType: !655, size: 192, align: 64)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !656, file: !2, size: 192, align: 64, elements: !657, templateParams: !190, identifier: "cc541f23c3ecc5864b26671b2c8849c9")
!656 = !DINamespace(name: "manually_drop", scope: !651)
!657 = !{!658}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !655, file: !2, baseType: !13, size: 192, align: 64)
!659 = !{!660}
!660 = !DILocalVariable(name: "ptr", arg: 1, scope: !645, file: !199, line: 2260, type: !648)
!661 = !{!662}
!662 = !DITemplateTypeParameter(name: "T", type: !649)
!663 = !DILocation(line: 2260, column: 42, scope: !645)
!664 = !DILocation(line: 2261, column: 6, scope: !645)
!665 = !DILocation(line: 2261, column: 5, scope: !645)
!666 = !DILocation(line: 2261, column: 23, scope: !645)
!667 = !DILocation(line: 2262, column: 2, scope: !645)
!668 = distinct !DISubprogram(name: "is_valid_allocation_size<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics24is_valid_allocation_size17hb365c4273ba2c3adE", scope: !529, file: !199, line: 2266, type: !669, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !671)
!669 = !DISubroutineType(types: !670)
!670 = !{!421, !9}
!671 = !{!672, !673}
!672 = !DILocalVariable(name: "len", arg: 1, scope: !668, file: !199, line: 2266, type: !9)
!673 = !DILocalVariable(name: "max_len", scope: !674, file: !199, line: 2267, type: !9, align: 8)
!674 = distinct !DILexicalBlock(scope: !668, file: !199, line: 2267, column: 5)
!675 = !DILocation(line: 2266, column: 43, scope: !668)
!676 = !DILocation(line: 2267, column: 19, scope: !668)
!677 = !DILocation(line: 2267, column: 9, scope: !674)
!678 = !DILocation(line: 2271, column: 5, scope: !674)
!679 = !DILocation(line: 2272, column: 2, scope: !668)
!680 = distinct !DISubprogram(name: "copy<usize>", linkageName: "_ZN4core10intrinsics4copy17h05891d76475b3d26E", scope: !529, file: !199, line: 2466, type: !609, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !681)
!681 = !{!682, !683, !684}
!682 = !DILocalVariable(name: "src", arg: 1, scope: !680, file: !199, line: 2466, type: !611)
!683 = !DILocalVariable(name: "dst", arg: 2, scope: !680, file: !199, line: 2466, type: !612)
!684 = !DILocalVariable(name: "count", arg: 3, scope: !680, file: !199, line: 2466, type: !9)
!685 = !DILocation(line: 2466, column: 29, scope: !680)
!686 = !DILocation(line: 2466, column: 44, scope: !680)
!687 = !DILocation(line: 2466, column: 57, scope: !680)
!688 = !DILocation(line: 2474, column: 9, scope: !680)
!689 = !DILocalVariable(name: "src", arg: 1, scope: !690, file: !199, line: 2241, type: !611)
!690 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics4copy7runtime17h939af37eba549770E", scope: !691, file: !199, line: 2241, type: !692, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !694)
!691 = !DINamespace(name: "copy", scope: !529)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !611, !612}
!694 = !{!689, !695}
!695 = !DILocalVariable(name: "dst", arg: 2, scope: !690, file: !199, line: 2241, type: !612)
!696 = !DILocation(line: 2241, column: 39, scope: !690, inlinedAt: !697)
!697 = distinct !DILocation(line: 2474, column: 9, scope: !680)
!698 = !DILocation(line: 2477, column: 13, scope: !690, inlinedAt: !697)
!699 = !DILocation(line: 2477, column: 45, scope: !690, inlinedAt: !697)
!700 = !DILocation(line: 2242, column: 20, scope: !690, inlinedAt: !697)
!701 = !DILocation(line: 2244, column: 21, scope: !690, inlinedAt: !697)
!702 = !DILocation(line: 2479, column: 9, scope: !680)
!703 = !DILocation(line: 2481, column: 2, scope: !680)
!704 = distinct !DISubprogram(name: "copy<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy17h461b3c2ec587c164E", scope: !529, file: !199, line: 2466, type: !583, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !705)
!705 = !{!706, !707, !708}
!706 = !DILocalVariable(name: "src", arg: 1, scope: !704, file: !199, line: 2466, type: !225)
!707 = !DILocalVariable(name: "dst", arg: 2, scope: !704, file: !199, line: 2466, type: !294)
!708 = !DILocalVariable(name: "count", arg: 3, scope: !704, file: !199, line: 2466, type: !9)
!709 = !DILocation(line: 2466, column: 29, scope: !704)
!710 = !DILocation(line: 2466, column: 44, scope: !704)
!711 = !DILocation(line: 2466, column: 57, scope: !704)
!712 = !DILocation(line: 2474, column: 9, scope: !704)
!713 = !DILocalVariable(name: "src", arg: 1, scope: !714, file: !199, line: 2241, type: !225)
!714 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy7runtime17h75fbe6a23b22e187E", scope: !691, file: !199, line: 2241, type: !715, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !717)
!715 = !DISubroutineType(types: !716)
!716 = !{null, !225, !294}
!717 = !{!713, !718}
!718 = !DILocalVariable(name: "dst", arg: 2, scope: !714, file: !199, line: 2241, type: !294)
!719 = !DILocation(line: 2241, column: 39, scope: !714, inlinedAt: !720)
!720 = distinct !DILocation(line: 2474, column: 9, scope: !704)
!721 = !DILocation(line: 2477, column: 13, scope: !714, inlinedAt: !720)
!722 = !DILocation(line: 2477, column: 45, scope: !714, inlinedAt: !720)
!723 = !DILocation(line: 2242, column: 20, scope: !714, inlinedAt: !720)
!724 = !DILocation(line: 2244, column: 21, scope: !714, inlinedAt: !720)
!725 = !DILocation(line: 2479, column: 9, scope: !704)
!726 = !DILocation(line: 2481, column: 2, scope: !704)
!727 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h17b0a92ea52cea06E", scope: !729, file: !728, line: 1412, type: !731, scopeLine: 1412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !733)
!728 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "b91f20a51804d5cdbda7bdba75d392d5")
!729 = !DINamespace(name: "{impl#63}", scope: !730)
!730 = !DINamespace(name: "impls", scope: !150)
!731 = !DISubroutineType(types: !732)
!732 = !{!149, !132, !132}
!733 = !{!734, !735}
!734 = !DILocalVariable(name: "self", arg: 1, scope: !727, file: !728, line: 1412, type: !132)
!735 = !DILocalVariable(name: "other", arg: 2, scope: !727, file: !728, line: 1412, type: !132)
!736 = !DILocation(line: 1412, column: 24, scope: !727)
!737 = !DILocation(line: 1412, column: 31, scope: !727)
!738 = !DILocation(line: 1415, column: 24, scope: !727)
!739 = !DILocation(line: 1415, column: 32, scope: !727)
!740 = !DILocation(line: 1416, column: 29, scope: !727)
!741 = !DILocation(line: 1416, column: 38, scope: !727)
!742 = !DILocation(line: 1415, column: 41, scope: !727)
!743 = !DILocation(line: 1415, column: 21, scope: !727)
!744 = !DILocation(line: 1418, column: 18, scope: !727)
!745 = !{i8 -1, i8 2}
!746 = !DILocation(line: 1417, column: 28, scope: !727)
!747 = !DILocation(line: 1416, column: 26, scope: !727)
!748 = !DILocation(line: 1416, column: 47, scope: !727)
!749 = distinct !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt10ArgumentV113new_lower_hex17hf2216d6e6eea11b9E", scope: !750, file: !447, line: 329, type: !760, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !764, retainedNodes: !762)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !142, file: !2, size: 128, align: 64, elements: !751, templateParams: !24, identifier: "ea6cf7b811e43b9e7b4d363768d4d9d6")
!751 = !{!752, !756}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !750, file: !2, baseType: !753, size: 64, align: 64)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !754, size: 64, align: 64, dwarfAddressSpace: 0)
!754 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !755, file: !2, align: 8, elements: !24, identifier: "309a12208c9a77154ceb9b2c501d7d92")
!755 = !DINamespace(name: "{extern#0}", scope: !142)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !750, file: !2, baseType: !757, size: 64, align: 64, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !758, size: 64, align: 64, dwarfAddressSpace: 0)
!758 = !DISubroutineType(types: !759)
!759 = !{!451, !753, !470}
!760 = !DISubroutineType(types: !761)
!761 = !{!750, !132}
!762 = !{!763}
!763 = !DILocalVariable(name: "x", arg: 1, scope: !749, file: !447, line: 329, type: !132)
!764 = !{!765}
!765 = !DITemplateTypeParameter(name: "T", type: !22)
!766 = !DILocation(line: 329, column: 30, scope: !749)
!767 = !DILocation(line: 330, column: 13, scope: !749)
!768 = !DILocation(line: 331, column: 10, scope: !749)
!769 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hd1a51dee9cb224e7E", scope: !771, file: !770, line: 185, type: !773, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !775)
!770 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "02359a317e793c1b82de7b934f87f847")
!771 = !DINamespace(name: "{impl#86}", scope: !772)
!772 = !DINamespace(name: "num", scope: !142)
!773 = !DISubroutineType(types: !774)
!774 = !{!451, !85, !470}
!775 = !{!776, !777}
!776 = !DILocalVariable(name: "self", arg: 1, scope: !769, file: !770, line: 185, type: !85)
!777 = !DILocalVariable(name: "f", arg: 2, scope: !769, file: !770, line: 185, type: !470)
!778 = !DILocation(line: 185, column: 20, scope: !769)
!779 = !DILocation(line: 185, column: 27, scope: !769)
!780 = !DILocation(line: 186, column: 20, scope: !769)
!781 = !DILocation(line: 188, column: 27, scope: !769)
!782 = !DILocation(line: 187, column: 21, scope: !769)
!783 = !DILocation(line: 193, column: 14, scope: !769)
!784 = !DILocation(line: 191, column: 21, scope: !769)
!785 = !DILocation(line: 189, column: 21, scope: !769)
!786 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17ha8fd9c1831acb9abE", scope: !787, file: !770, line: 185, type: !788, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !790)
!787 = !DINamespace(name: "{impl#87}", scope: !772)
!788 = !DISubroutineType(types: !789)
!789 = !{!451, !132, !470}
!790 = !{!791, !792}
!791 = !DILocalVariable(name: "self", arg: 1, scope: !786, file: !770, line: 185, type: !132)
!792 = !DILocalVariable(name: "f", arg: 2, scope: !786, file: !770, line: 185, type: !470)
!793 = !DILocation(line: 185, column: 20, scope: !786)
!794 = !DILocation(line: 185, column: 27, scope: !786)
!795 = !DILocation(line: 186, column: 20, scope: !786)
!796 = !DILocation(line: 188, column: 27, scope: !786)
!797 = !DILocation(line: 187, column: 21, scope: !786)
!798 = !DILocation(line: 193, column: 14, scope: !786)
!799 = !DILocation(line: 191, column: 21, scope: !786)
!800 = !DILocation(line: 189, column: 21, scope: !786)
!801 = distinct !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17heea09fb09a6e8fd4E", scope: !803, file: !802, line: 627, type: !812, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !836, retainedNodes: !829)
!802 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "3a909d1cde985fb0d953605fd1b0e0e2")
!803 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !804, file: !2, size: 128, align: 64, elements: !805, templateParams: !24, identifier: "359b827f5af0b285a339c514d5b771c5")
!804 = !DINamespace(name: "builders", scope: !142)
!805 = !{!806}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !803, file: !2, baseType: !807, size: 128, align: 64)
!807 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !804, file: !2, size: 128, align: 64, elements: !808, templateParams: !24, identifier: "14b54b19ea742c9f9a96cbcbfee439ac")
!808 = !{!809, !810, !811}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !807, file: !2, baseType: !470, size: 64, align: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !807, file: !2, baseType: !451, size: 8, align: 8, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !807, file: !2, baseType: !421, size: 8, align: 8, offset: 72)
!812 = !DISubroutineType(types: !813)
!813 = !{!814, !814, !815}
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !803, size: 64, align: 64, dwarfAddressSpace: 0)
!815 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !816, file: !2, size: 128, align: 64, elements: !817, templateParams: !190, identifier: "13e412909f00faea6d7a78cfbd3738a7")
!816 = !DINamespace(name: "iter", scope: !167)
!817 = !{!818, !823, !824}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !815, file: !2, baseType: !819, size: 64, align: 64, offset: 64)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !820, file: !2, size: 64, align: 64, elements: !821, templateParams: !190, identifier: "9c3cbaf4cec1c60ae0b47c65ec531e1d")
!820 = !DINamespace(name: "non_null", scope: !222)
!821 = !{!822}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !819, file: !2, baseType: !225, size: 64, align: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !815, file: !2, baseType: !225, size: 64, align: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !815, file: !2, baseType: !825, align: 8)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !826, file: !2, align: 8, elements: !24, templateParams: !827, identifier: "8fbd1266d8c69db4ece0a90c2dd721fc")
!826 = !DINamespace(name: "marker", scope: !143)
!827 = !{!828}
!828 = !DITemplateTypeParameter(name: "T", type: !12)
!829 = !{!830, !831, !832, !834}
!830 = !DILocalVariable(name: "self", arg: 1, scope: !801, file: !802, line: 627, type: !814)
!831 = !DILocalVariable(name: "entries", arg: 2, scope: !801, file: !802, line: 627, type: !815)
!832 = !DILocalVariable(name: "iter", scope: !833, file: !802, line: 632, type: !815, align: 8)
!833 = distinct !DILexicalBlock(scope: !801, file: !802, line: 632, column: 9)
!834 = !DILocalVariable(name: "entry", scope: !835, file: !802, line: 632, type: !12, align: 8)
!835 = distinct !DILexicalBlock(scope: !833, file: !802, line: 632, column: 30)
!836 = !{!837, !838}
!837 = !DITemplateTypeParameter(name: "D", type: !12)
!838 = !DITemplateTypeParameter(name: "I", type: !815)
!839 = !DILocation(line: 627, column: 26, scope: !801)
!840 = !DILocation(line: 627, column: 37, scope: !801)
!841 = !DILocation(line: 632, column: 22, scope: !833)
!842 = !DILocation(line: 632, column: 13, scope: !835)
!843 = !DILocation(line: 632, column: 22, scope: !801)
!844 = !DILocation(line: 632, column: 9, scope: !833)
!845 = !DILocation(line: 636, column: 6, scope: !801)
!846 = !DILocation(line: 632, column: 13, scope: !833)
!847 = !DILocation(line: 633, column: 13, scope: !835)
!848 = !DILocation(line: 634, column: 9, scope: !833)
!849 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17h5a0892b6564d3a6fE", scope: !850, file: !447, line: 421, type: !909, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !914)
!850 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !142, file: !2, size: 384, align: 64, elements: !851, templateParams: !24, identifier: "e0fec765575fe1c67e1965cae9eb37c")
!851 = !{!852, !858, !903}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !850, file: !2, baseType: !853, size: 128, align: 64, offset: 128)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !854, templateParams: !24, identifier: "1bd0df68c6cb6036a2bb36aa5621bbdb")
!854 = !{!855, !857}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !853, file: !2, baseType: !856, size: 64, align: 64)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64, align: 64, dwarfAddressSpace: 0)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !853, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !850, file: !2, baseType: !859, size: 128, align: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !479, file: !2, size: 128, align: 64, elements: !860, templateParams: !24, identifier: "37e4e944ba32344d635147f54bf9f4df")
!860 = !{!861}
!861 = !DICompositeType(tag: DW_TAG_variant_part, scope: !859, file: !2, size: 128, align: 64, elements: !862, templateParams: !24, identifier: "eff75c39088f38f57b6ca1fc85a0229a", discriminator: !902)
!862 = !{!863, !898}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !861, file: !2, baseType: !864, size: 128, align: 64, extraData: i64 0)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !859, file: !2, size: 128, align: 64, elements: !24, templateParams: !865, identifier: "caff66e7c4f3d2646e85b521ac86f85a")
!865 = !{!866}
!866 = !DITemplateTypeParameter(name: "T", type: !867)
!867 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !868, templateParams: !24, identifier: "2225a8a3217ca2e4230086a86939d931")
!868 = !{!869, !897}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !867, file: !2, baseType: !870, size: 64, align: 64)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64, align: 64, dwarfAddressSpace: 0)
!871 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !140, file: !2, size: 448, align: 64, elements: !872, templateParams: !24, identifier: "bd6e29dcdd1c85099e937af3adb84f39")
!872 = !{!873, !874}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !871, file: !2, baseType: !9, size: 64, align: 64, offset: 384)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !871, file: !2, baseType: !875, size: 384, align: 64)
!875 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !140, file: !2, size: 384, align: 64, elements: !876, templateParams: !24, identifier: "6cc4f16dc004a368eb7a2afb2c6178c")
!876 = !{!877, !878, !879, !880, !896}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !875, file: !2, baseType: !475, size: 32, align: 32, offset: 288)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !875, file: !2, baseType: !139, size: 8, align: 8, offset: 320)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !875, file: !2, baseType: !27, size: 32, align: 32, offset: 256)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !875, file: !2, baseType: !881, size: 128, align: 64)
!881 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !140, file: !2, size: 128, align: 64, elements: !882, templateParams: !24, identifier: "32660758978696a09244873a5d6fbb61")
!882 = !{!883}
!883 = !DICompositeType(tag: DW_TAG_variant_part, scope: !881, file: !2, size: 128, align: 64, elements: !884, templateParams: !24, identifier: "28e5bb3a090c14f2cd182db549a068a6", discriminator: !895)
!884 = !{!885, !889, !893}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !883, file: !2, baseType: !886, size: 128, align: 64, extraData: i64 0)
!886 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !881, file: !2, size: 128, align: 64, elements: !887, templateParams: !24, identifier: "341e2e1a54680fcd4e0a11a9f090ffaa")
!887 = !{!888}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !886, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !883, file: !2, baseType: !890, size: 128, align: 64, extraData: i64 1)
!890 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !881, file: !2, size: 128, align: 64, elements: !891, templateParams: !24, identifier: "4a82d78f7563c7ad8c72200904d871bb")
!891 = !{!892}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !890, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !883, file: !2, baseType: !894, size: 128, align: 64, extraData: i64 2)
!894 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !881, file: !2, size: 128, align: 64, elements: !24, identifier: "4f9ef5bac5220bb9412e1e0f55484c15")
!895 = !DIDerivedType(tag: DW_TAG_member, scope: !881, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !875, file: !2, baseType: !881, size: 128, align: 64, offset: 128)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !867, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !861, file: !2, baseType: !899, size: 128, align: 64)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !859, file: !2, size: 128, align: 64, elements: !900, templateParams: !865, identifier: "f64c0c4a3e31ce946976d4995d49649a")
!900 = !{!901}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !899, file: !2, baseType: !867, size: 128, align: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, scope: !859, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !850, file: !2, baseType: !904, size: 128, align: 64, offset: 256)
!904 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !905, templateParams: !24, identifier: "5e6975564bb19db54eba15ca2ba01c7")
!905 = !{!906, !908}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !904, file: !2, baseType: !907, size: 64, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64, align: 64, dwarfAddressSpace: 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !904, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!850, !853, !904, !867, !911}
!911 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !142, file: !2, align: 8, elements: !912, templateParams: !24, identifier: "9da388efda58098f3ebab1da42679df")
!912 = !{!913}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !911, file: !2, baseType: !7, align: 8)
!914 = !{!915, !916, !917, !918}
!915 = !DILocalVariable(name: "pieces", arg: 1, scope: !849, file: !447, line: 422, type: !853)
!916 = !DILocalVariable(name: "args", arg: 2, scope: !849, file: !447, line: 423, type: !904)
!917 = !DILocalVariable(name: "fmt", arg: 3, scope: !849, file: !447, line: 424, type: !867)
!918 = !DILocalVariable(name: "_unsafe_arg", arg: 4, scope: !849, file: !447, line: 425, type: !911)
!919 = !DILocation(line: 422, column: 9, scope: !849)
!920 = !DILocation(line: 423, column: 9, scope: !849)
!921 = !DILocation(line: 424, column: 9, scope: !849)
!922 = !DILocation(line: 425, column: 9, scope: !849)
!923 = !DILocation(line: 427, column: 34, scope: !849)
!924 = !DILocation(line: 427, column: 9, scope: !849)
!925 = !DILocation(line: 428, column: 6, scope: !849)
!926 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h1d2dfdaa3c3dd788E", scope: !850, file: !447, line: 401, type: !927, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !929)
!927 = !DISubroutineType(types: !928)
!928 = !{!850, !853, !904}
!929 = !{!930, !931}
!930 = !DILocalVariable(name: "pieces", arg: 1, scope: !926, file: !447, line: 401, type: !853)
!931 = !DILocalVariable(name: "args", arg: 2, scope: !926, file: !447, line: 401, type: !904)
!932 = !DILocation(line: 401, column: 25, scope: !926)
!933 = !DILocation(line: 401, column: 53, scope: !926)
!934 = !DILocation(line: 402, column: 12, scope: !926)
!935 = !DILocation(line: 402, column: 56, scope: !926)
!936 = !DILocation(line: 402, column: 41, scope: !926)
!937 = !DILocation(line: 405, column: 34, scope: !926)
!938 = !DILocation(line: 405, column: 9, scope: !926)
!939 = !DILocation(line: 406, column: 6, scope: !926)
!940 = !DILocation(line: 403, column: 13, scope: !926)
!941 = distinct !DISubprogram(name: "swap_simple<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem11swap_simple17h4ddadd38c3f7a384E", scope: !651, file: !942, line: 756, type: !943, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !946)
!942 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "2818803a2f5479a3883c65b3bb9963fd")
!943 = !DISubroutineType(types: !944)
!944 = !{null, !945, !945}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!946 = !{!947, !948, !949, !951}
!947 = !DILocalVariable(name: "x", arg: 1, scope: !941, file: !942, line: 756, type: !945)
!948 = !DILocalVariable(name: "y", arg: 2, scope: !941, file: !942, line: 756, type: !945)
!949 = !DILocalVariable(name: "a", scope: !950, file: !942, line: 773, type: !13, align: 8)
!950 = distinct !DILexicalBlock(scope: !941, file: !942, line: 773, column: 9)
!951 = !DILocalVariable(name: "b", scope: !952, file: !942, line: 774, type: !13, align: 8)
!952 = distinct !DILexicalBlock(scope: !950, file: !942, line: 774, column: 9)
!953 = !DILocation(line: 756, column: 36, scope: !941)
!954 = !DILocation(line: 756, column: 47, scope: !941)
!955 = !DILocation(line: 773, column: 13, scope: !950)
!956 = !DILocation(line: 774, column: 13, scope: !952)
!957 = !DILocation(line: 773, column: 17, scope: !941)
!958 = !DILocation(line: 774, column: 17, scope: !950)
!959 = !DILocation(line: 775, column: 23, scope: !952)
!960 = !DILocation(line: 775, column: 9, scope: !952)
!961 = !DILocation(line: 776, column: 23, scope: !952)
!962 = !DILocation(line: 776, column: 9, scope: !952)
!963 = !DILocation(line: 778, column: 2, scope: !941)
!964 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem11swap_simple17hfa435f99e9ce0eaaE", scope: !651, file: !942, line: 756, type: !965, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !968)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !967, !967}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !649, size: 64, align: 64, dwarfAddressSpace: 0)
!968 = !{!969, !970, !971, !973}
!969 = !DILocalVariable(name: "x", arg: 1, scope: !964, file: !942, line: 756, type: !967)
!970 = !DILocalVariable(name: "y", arg: 2, scope: !964, file: !942, line: 756, type: !967)
!971 = !DILocalVariable(name: "a", scope: !972, file: !942, line: 773, type: !649, align: 8)
!972 = distinct !DILexicalBlock(scope: !964, file: !942, line: 773, column: 9)
!973 = !DILocalVariable(name: "b", scope: !974, file: !942, line: 774, type: !649, align: 8)
!974 = distinct !DILexicalBlock(scope: !972, file: !942, line: 774, column: 9)
!975 = !DILocation(line: 756, column: 36, scope: !964)
!976 = !DILocation(line: 756, column: 47, scope: !964)
!977 = !DILocation(line: 773, column: 13, scope: !972)
!978 = !DILocation(line: 774, column: 13, scope: !974)
!979 = !DILocation(line: 773, column: 17, scope: !964)
!980 = !DILocation(line: 774, column: 17, scope: !972)
!981 = !DILocation(line: 775, column: 23, scope: !974)
!982 = !DILocation(line: 775, column: 9, scope: !974)
!983 = !DILocation(line: 776, column: 23, scope: !974)
!984 = !DILocation(line: 776, column: 9, scope: !974)
!985 = !DILocation(line: 778, column: 2, scope: !964)
!986 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem4swap17hfd06fbd69cd1e95cE", scope: !651, file: !942, line: 719, type: !943, scopeLine: 719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !987)
!987 = !{!988, !989}
!988 = !DILocalVariable(name: "x", arg: 1, scope: !986, file: !942, line: 719, type: !945)
!989 = !DILocalVariable(name: "y", arg: 2, scope: !986, file: !942, line: 719, type: !945)
!990 = !DILocation(line: 719, column: 22, scope: !986)
!991 = !DILocation(line: 719, column: 33, scope: !986)
!992 = !DILocation(line: 734, column: 12, scope: !986)
!993 = !DILocation(line: 748, column: 5, scope: !986)
!994 = !DILocation(line: 737, column: 29, scope: !986)
!995 = !DILocation(line: 749, column: 2, scope: !986)
!996 = distinct !DISubprogram(name: "forget<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem6forget17h81dd88fda83363bcE", scope: !651, file: !942, line: 148, type: !997, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !999)
!997 = !DISubroutineType(types: !998)
!998 = !{null, !13}
!999 = !{!1000}
!1000 = !DILocalVariable(name: "t", arg: 1, scope: !996, file: !942, line: 148, type: !13)
!1001 = !DILocation(line: 148, column: 24, scope: !996)
!1002 = !DILocalVariable(name: "value", arg: 1, scope: !1003, file: !1004, line: 70, type: !13)
!1003 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he17141b11a1a907cE", scope: !655, file: !1004, line: 70, type: !1005, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1007)
!1004 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!655, !13}
!1007 = !{!1002}
!1008 = !DILocation(line: 70, column: 22, scope: !1003, inlinedAt: !1009)
!1009 = distinct !DILocation(line: 149, column: 13, scope: !996)
!1010 = !DILocation(line: 71, column: 9, scope: !1003, inlinedAt: !1009)
!1011 = !DILocation(line: 150, column: 2, scope: !996)
!1012 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h2fa8b69b5dab9e4eE", scope: !1014, file: !1013, line: 576, type: !1016, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1018)
!1013 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "3eed1b8baad53fb1e7d6811c678f60f8")
!1014 = !DINamespace(name: "{impl#11}", scope: !1015)
!1015 = !DINamespace(name: "num", scope: !143)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!478, !9, !9}
!1018 = !{!1019, !1020, !1021, !1023}
!1019 = !DILocalVariable(name: "self", arg: 1, scope: !1012, file: !1013, line: 576, type: !9)
!1020 = !DILocalVariable(name: "rhs", arg: 2, scope: !1012, file: !1013, line: 576, type: !9)
!1021 = !DILocalVariable(name: "a", scope: !1022, file: !1013, line: 577, type: !9, align: 8)
!1022 = distinct !DILexicalBlock(scope: !1012, file: !1013, line: 577, column: 13)
!1023 = !DILocalVariable(name: "b", scope: !1022, file: !1013, line: 577, type: !421, align: 1)
!1024 = !DILocation(line: 576, column: 34, scope: !1012)
!1025 = !DILocation(line: 576, column: 40, scope: !1012)
!1026 = !DILocalVariable(name: "self", arg: 1, scope: !1027, file: !1013, line: 1703, type: !9)
!1027 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17haec0d6bf1efe3798E", scope: !1014, file: !1013, line: 1703, type: !1028, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1034)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!1030, !9, !9}
!1030 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1031, templateParams: !24, identifier: "5d4cb4b3e2da4aeebd47965411ffedac")
!1031 = !{!1032, !1033}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1030, file: !2, baseType: !9, size: 64, align: 64)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1030, file: !2, baseType: !421, size: 8, align: 8, offset: 64)
!1034 = !{!1026, !1035, !1036, !1038}
!1035 = !DILocalVariable(name: "rhs", arg: 2, scope: !1027, file: !1013, line: 1703, type: !9)
!1036 = !DILocalVariable(name: "a", scope: !1037, file: !1013, line: 1704, type: !22, align: 8)
!1037 = distinct !DILexicalBlock(scope: !1027, file: !1013, line: 1704, column: 13)
!1038 = !DILocalVariable(name: "b", scope: !1037, file: !1013, line: 1704, type: !421, align: 1)
!1039 = !DILocation(line: 1703, column: 38, scope: !1027, inlinedAt: !1040)
!1040 = distinct !DILocation(line: 577, column: 26, scope: !1012)
!1041 = !DILocation(line: 1703, column: 44, scope: !1027, inlinedAt: !1040)
!1042 = !DILocation(line: 1704, column: 26, scope: !1027, inlinedAt: !1040)
!1043 = !DILocation(line: 1704, column: 18, scope: !1027, inlinedAt: !1040)
!1044 = !DILocation(line: 1704, column: 18, scope: !1037, inlinedAt: !1040)
!1045 = !DILocation(line: 1704, column: 21, scope: !1027, inlinedAt: !1040)
!1046 = !DILocation(line: 1704, column: 21, scope: !1037, inlinedAt: !1040)
!1047 = !DILocation(line: 1705, column: 13, scope: !1037, inlinedAt: !1040)
!1048 = !DILocation(line: 1706, column: 10, scope: !1027, inlinedAt: !1040)
!1049 = !DILocation(line: 577, column: 26, scope: !1012)
!1050 = !DILocation(line: 577, column: 18, scope: !1012)
!1051 = !DILocation(line: 577, column: 18, scope: !1022)
!1052 = !DILocation(line: 577, column: 21, scope: !1012)
!1053 = !DILocation(line: 577, column: 21, scope: !1022)
!1054 = !DILocation(line: 578, column: 16, scope: !1022)
!1055 = !DILocation(line: 578, column: 42, scope: !1022)
!1056 = !DILocation(line: 578, column: 13, scope: !1022)
!1057 = !DILocation(line: 578, column: 30, scope: !1022)
!1058 = !DILocation(line: 579, column: 10, scope: !1012)
!1059 = !{i64 0, i64 2}
!1060 = distinct !DISubprogram(name: "next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17hee874ad4375dd456E", scope: !1014, file: !1013, line: 2217, type: !1061, scopeLine: 2217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1063)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!9, !9}
!1063 = !{!1064}
!1064 = !DILocalVariable(name: "self", arg: 1, scope: !1060, file: !1013, line: 2217, type: !9)
!1065 = !DILocation(line: 2217, column: 40, scope: !1060)
!1066 = !DILocation(line: 2218, column: 13, scope: !1060)
!1067 = !DILocation(line: 2219, column: 10, scope: !1060)
!1068 = distinct !DISubprogram(name: "one_less_than_next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17hcaf48975b1f4b12cE", scope: !1014, file: !1013, line: 2185, type: !1061, scopeLine: 2185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1069)
!1069 = !{!1070, !1071, !1073}
!1070 = !DILocalVariable(name: "self", arg: 1, scope: !1068, file: !1013, line: 2185, type: !9)
!1071 = !DILocalVariable(name: "p", scope: !1072, file: !1013, line: 2188, type: !9, align: 8)
!1072 = distinct !DILexicalBlock(scope: !1068, file: !1013, line: 2188, column: 13)
!1073 = !DILocalVariable(name: "z", scope: !1074, file: !1013, line: 2193, type: !9, align: 8)
!1074 = distinct !DILexicalBlock(scope: !1072, file: !1013, line: 2193, column: 13)
!1075 = !DILocation(line: 2185, column: 50, scope: !1068)
!1076 = !DILocation(line: 2186, column: 16, scope: !1068)
!1077 = !DILocation(line: 2188, column: 21, scope: !1068)
!1078 = !DILocation(line: 2186, column: 35, scope: !1068)
!1079 = !DILocation(line: 2195, column: 10, scope: !1068)
!1080 = !DILocation(line: 2188, column: 17, scope: !1072)
!1081 = !DILocation(line: 2193, column: 30, scope: !1072)
!1082 = !DILocation(line: 2193, column: 17, scope: !1074)
!1083 = !DILocation(line: 2194, column: 13, scope: !1074)
!1084 = distinct !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17ha9edf494796602f0E", scope: !416, file: !1085, line: 454, type: !1086, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1088)
!1085 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "c1aecaf6a5b28eb8d294ea6247bce985")
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!175, !416}
!1088 = !{!1089, !1090, !1092}
!1089 = !DILocalVariable(name: "self", arg: 1, scope: !1084, file: !1085, line: 454, type: !416)
!1090 = !DILocalVariable(name: "exclusive_end", scope: !1091, file: !1085, line: 458, type: !9, align: 8)
!1091 = distinct !DILexicalBlock(scope: !1084, file: !1085, line: 458, column: 9)
!1092 = !DILocalVariable(name: "start", scope: !1093, file: !1085, line: 459, type: !9, align: 8)
!1093 = distinct !DILexicalBlock(scope: !1091, file: !1085, line: 459, column: 9)
!1094 = !DILocation(line: 454, column: 42, scope: !1084)
!1095 = !DILocation(line: 459, column: 13, scope: !1093)
!1096 = !DILocation(line: 458, column: 29, scope: !1084)
!1097 = !DILocation(line: 458, column: 13, scope: !1091)
!1098 = !DILocation(line: 459, column: 24, scope: !1091)
!1099 = !DILocation(line: 459, column: 64, scope: !1091)
!1100 = !DILocation(line: 459, column: 21, scope: !1091)
!1101 = !DILocation(line: 459, column: 41, scope: !1091)
!1102 = !DILocation(line: 460, column: 9, scope: !1093)
!1103 = !DILocation(line: 461, column: 6, scope: !1084)
!1104 = distinct !DISubprogram(name: "call_mut<(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion), core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hf4e59da8d2b512fdE", scope: !1106, file: !1105, line: 297, type: !1109, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1129, retainedNodes: !1122)
!1105 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "56fb008eac3df8d06ce524ffb023f0b6")
!1106 = !DINamespace(name: "{impl#3}", scope: !1107)
!1107 = !DINamespace(name: "impls", scope: !1108)
!1108 = !DINamespace(name: "function", scope: !177)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!421, !1111, !12, !12}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1112, size: 64, align: 64, dwarfAddressSpace: 0)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1113, size: 64, align: 64, dwarfAddressSpace: 0)
!1113 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", scope: !1114, file: !2, size: 64, align: 64, elements: !1116, templateParams: !24, identifier: "977fa713e9b8cab34ee5ba5346604ddb")
!1114 = !DINamespace(name: "sort_unstable_by", scope: !1115)
!1115 = !DINamespace(name: "{impl#0}", scope: !167)
!1116 = !{!1117}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__compare", scope: !1113, file: !2, baseType: !1118, size: 64, align: 64)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}", baseType: !1119, size: 64, align: 64, dwarfAddressSpace: 0)
!1119 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1120, file: !2, align: 8, elements: !24, identifier: "24657d9abcd8cc7a9d062e264969bc7")
!1120 = !DINamespace(name: "sort", scope: !1121)
!1121 = !DINamespace(name: "{impl#0}", scope: !14)
!1122 = !{!1123, !1124}
!1123 = !DILocalVariable(name: "self", arg: 1, scope: !1104, file: !1105, line: 297, type: !1111)
!1124 = !DILocalVariable(name: "args", arg: 2, scope: !1104, file: !1105, line: 297, type: !1125)
!1125 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion)", file: !2, size: 128, align: 64, elements: !1126, templateParams: !24, identifier: "9cad26204313deff9217f693956fb3d")
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1125, file: !2, baseType: !12, size: 64, align: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1125, file: !2, baseType: !12, size: 64, align: 64, offset: 64)
!1129 = !{!1130, !1131}
!1130 = !DITemplateTypeParameter(name: "A", type: !1125)
!1131 = !DITemplateTypeParameter(name: "F", type: !1113)
!1132 = !DILocation(line: 297, column: 40, scope: !1104)
!1133 = !DILocation(line: 297, column: 51, scope: !1104)
!1134 = !DILocation(line: 298, column: 13, scope: !1104)
!1135 = !DILocation(line: 299, column: 10, scope: !1104)
!1136 = distinct !DISubprogram(name: "drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hed262f49383e5c8cE", scope: !222, file: !1137, line: 490, type: !1138, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1148, retainedNodes: !1146)
!1137 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "bdd6b96186b52f0612a564cb734428a7")
!1138 = !DISubroutineType(types: !1139)
!1139 = !{null, !1140}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1141, size: 64, align: 64, dwarfAddressSpace: 0)
!1141 = !DICompositeType(tag: DW_TAG_structure_type, name: "InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !1142, file: !2, size: 128, align: 64, elements: !1143, templateParams: !190, identifier: "42fc248802fea08e9c742fb083485b3")
!1142 = !DINamespace(name: "sort", scope: !167)
!1143 = !{!1144, !1145}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1141, file: !2, baseType: !225, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1141, file: !2, baseType: !294, size: 64, align: 64, offset: 64)
!1146 = !{!1147}
!1147 = !DILocalVariable(arg: 1, scope: !1136, file: !1137, line: 490, type: !1140)
!1148 = !{!1149}
!1149 = !DITemplateTypeParameter(name: "T", type: !1141)
!1150 = !DILocation(line: 490, column: 1, scope: !1136)
!1151 = distinct !DISubprogram(name: "swap_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping17h9ea753f087a59795E", scope: !222, file: !1137, line: 902, type: !1152, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1154)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{null, !294, !294, !9}
!1154 = !{!1155, !1156, !1157, !1158, !1160, !1162, !1164, !1167, !1169}
!1155 = !DILocalVariable(name: "x", arg: 1, scope: !1151, file: !1137, line: 902, type: !294)
!1156 = !DILocalVariable(name: "y", arg: 2, scope: !1151, file: !1137, line: 902, type: !294)
!1157 = !DILocalVariable(name: "count", arg: 3, scope: !1151, file: !1137, line: 902, type: !9)
!1158 = !DILocalVariable(name: "x", scope: !1159, file: !1137, line: 942, type: !612, align: 8)
!1159 = distinct !DILexicalBlock(scope: !1151, file: !1137, line: 909, column: 17)
!1160 = !DILocalVariable(name: "y", scope: !1161, file: !1137, line: 942, type: !612, align: 8)
!1161 = distinct !DILexicalBlock(scope: !1159, file: !1137, line: 910, column: 17)
!1162 = !DILocalVariable(name: "count", scope: !1163, file: !1137, line: 942, type: !9, align: 8)
!1163 = distinct !DILexicalBlock(scope: !1161, file: !1137, line: 911, column: 17)
!1164 = !DILocalVariable(name: "x", scope: !1165, file: !1137, line: 943, type: !1166, align: 8)
!1165 = distinct !DILexicalBlock(scope: !1151, file: !1137, line: 909, column: 17)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!1167 = !DILocalVariable(name: "y", scope: !1168, file: !1137, line: 943, type: !1166, align: 8)
!1168 = distinct !DILexicalBlock(scope: !1165, file: !1137, line: 910, column: 17)
!1169 = !DILocalVariable(name: "count", scope: !1170, file: !1137, line: 943, type: !9, align: 8)
!1170 = distinct !DILexicalBlock(scope: !1168, file: !1137, line: 911, column: 17)
!1171 = !DILocation(line: 902, column: 44, scope: !1151)
!1172 = !DILocation(line: 902, column: 55, scope: !1151)
!1173 = !DILocation(line: 902, column: 66, scope: !1151)
!1174 = !DILocation(line: 925, column: 9, scope: !1151)
!1175 = !DILocalVariable(name: "x", arg: 1, scope: !1176, file: !199, line: 2241, type: !294)
!1176 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping7runtime17h482dec2cc7724eebE", scope: !1177, file: !199, line: 2241, type: !1152, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1178)
!1177 = !DINamespace(name: "swap_nonoverlapping", scope: !222)
!1178 = !{!1175, !1179, !1180}
!1179 = !DILocalVariable(name: "y", arg: 2, scope: !1176, file: !199, line: 2241, type: !294)
!1180 = !DILocalVariable(name: "count", arg: 3, scope: !1176, file: !199, line: 2241, type: !9)
!1181 = !DILocation(line: 2241, column: 39, scope: !1176, inlinedAt: !1182)
!1182 = distinct !DILocation(line: 925, column: 9, scope: !1151)
!1183 = !DILocation(line: 929, column: 13, scope: !1184, inlinedAt: !1182)
!1184 = !DILexicalBlockFile(scope: !1176, file: !1137, discriminator: 0)
!1185 = !DILocation(line: 930, column: 20, scope: !1184, inlinedAt: !1182)
!1186 = !DILocation(line: 931, column: 20, scope: !1184, inlinedAt: !1182)
!1187 = !DILocation(line: 2242, column: 20, scope: !1176, inlinedAt: !1182)
!1188 = !DILocation(line: 2244, column: 21, scope: !1176, inlinedAt: !1182)
!1189 = !DILocation(line: 938, column: 8, scope: !1151)
!1190 = !DILocalVariable(name: "self", arg: 1, scope: !1191, file: !1013, line: 2170, type: !9)
!1191 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h00feaeb49d8ab95eE", scope: !1014, file: !1013, line: 2170, type: !669, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1192)
!1192 = !{!1190}
!1193 = !DILocation(line: 2170, column: 38, scope: !1191, inlinedAt: !1194)
!1194 = distinct !DILocation(line: 939, column: 14, scope: !1151)
!1195 = !DILocalVariable(name: "self", arg: 1, scope: !1196, file: !1013, line: 106, type: !9)
!1196 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h94acbaeb5f1528a0E", scope: !1014, file: !1013, line: 106, type: !1197, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1199)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!27, !9}
!1199 = !{!1195}
!1200 = !DILocation(line: 106, column: 33, scope: !1196, inlinedAt: !1201)
!1201 = distinct !DILocation(line: 2171, column: 13, scope: !1191, inlinedAt: !1194)
!1202 = !DILocation(line: 107, column: 13, scope: !1196, inlinedAt: !1201)
!1203 = !DILocation(line: 2171, column: 13, scope: !1191, inlinedAt: !1194)
!1204 = !DILocation(line: 939, column: 13, scope: !1151)
!1205 = !DILocation(line: 939, column: 12, scope: !1151)
!1206 = !DILocation(line: 940, column: 38, scope: !1151)
!1207 = !DILocation(line: 940, column: 16, scope: !1151)
!1208 = !DILocation(line: 947, column: 14, scope: !1151)
!1209 = !DILocation(line: 942, column: 9, scope: !1151)
!1210 = !DILocation(line: 943, column: 9, scope: !1151)
!1211 = !DILocalVariable(name: "self", arg: 1, scope: !1212, file: !276, line: 57, type: !294)
!1212 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h861f85706bcea6c6E", scope: !300, file: !276, line: 57, type: !1213, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1216, retainedNodes: !1215)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!612, !294}
!1215 = !{!1211}
!1216 = !{!191, !1217}
!1217 = !DITemplateTypeParameter(name: "U", type: !9)
!1218 = !DILocation(line: 57, column: 26, scope: !1212, inlinedAt: !1219)
!1219 = distinct !DILocation(line: 942, column: 9, scope: !1151)
!1220 = !DILocation(line: 942, column: 9, scope: !1159)
!1221 = !DILocation(line: 57, column: 26, scope: !1212, inlinedAt: !1222)
!1222 = distinct !DILocation(line: 942, column: 9, scope: !1159)
!1223 = !DILocation(line: 942, column: 9, scope: !1161)
!1224 = !DILocation(line: 942, column: 9, scope: !1163)
!1225 = !DILocation(line: 948, column: 2, scope: !1151)
!1226 = !DILocalVariable(name: "self", arg: 1, scope: !1227, file: !276, line: 57, type: !294)
!1227 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hd616562eabf15f00E", scope: !300, file: !276, line: 57, type: !1228, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1231, retainedNodes: !1230)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!1166, !294}
!1230 = !{!1226}
!1231 = !{!191, !1232}
!1232 = !DITemplateTypeParameter(name: "U", type: !123)
!1233 = !DILocation(line: 57, column: 26, scope: !1227, inlinedAt: !1234)
!1234 = distinct !DILocation(line: 943, column: 9, scope: !1151)
!1235 = !DILocation(line: 943, column: 9, scope: !1165)
!1236 = !DILocation(line: 57, column: 26, scope: !1227, inlinedAt: !1237)
!1237 = distinct !DILocation(line: 943, column: 9, scope: !1165)
!1238 = !DILocation(line: 943, column: 9, scope: !1168)
!1239 = !DILocation(line: 943, column: 9, scope: !1170)
!1240 = distinct !DISubprogram(name: "slice_from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h505c31c93c0fff88E", scope: !222, file: !1137, line: 733, type: !1241, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1243)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!170, !225, !9}
!1243 = !{!1244, !1245}
!1244 = !DILocalVariable(name: "data", arg: 1, scope: !1240, file: !1137, line: 733, type: !225)
!1245 = !DILocalVariable(name: "len", arg: 2, scope: !1240, file: !1137, line: 733, type: !9)
!1246 = !DILocation(line: 733, column: 38, scope: !1240)
!1247 = !DILocation(line: 733, column: 54, scope: !1240)
!1248 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !1249)
!1249 = distinct !DILocation(line: 734, column: 20, scope: !1240)
!1250 = !DILocation(line: 734, column: 5, scope: !1240)
!1251 = !DILocation(line: 735, column: 2, scope: !1240)
!1252 = distinct !DISubprogram(name: "drop_in_place<u32>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u32$GT$17hb64f971d62858e48E", scope: !222, file: !1137, line: 490, type: !1253, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1258, retainedNodes: !1256)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{null, !1255}
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!1256 = !{!1257}
!1257 = !DILocalVariable(arg: 1, scope: !1252, file: !1137, line: 490, type: !1255)
!1258 = !{!1259}
!1259 = !DITemplateTypeParameter(name: "T", type: !27)
!1260 = !DILocation(line: 490, column: 1, scope: !1252)
!1261 = distinct !DISubprogram(name: "drop_in_place<u64>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u64$GT$17h6643c1c775e19fdfE", scope: !222, file: !1137, line: 490, type: !1262, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !764, retainedNodes: !1265)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{null, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!1265 = !{!1266}
!1266 = !DILocalVariable(arg: 1, scope: !1261, file: !1137, line: 490, type: !1264)
!1267 = !DILocation(line: 490, column: 1, scope: !1261)
!1268 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h94970a4bfa2c5a79E", scope: !222, file: !1137, line: 765, type: !1269, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1271)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!247, !294, !9}
!1271 = !{!1272, !1273}
!1272 = !DILocalVariable(name: "data", arg: 1, scope: !1268, file: !1137, line: 765, type: !294)
!1273 = !DILocalVariable(name: "len", arg: 2, scope: !1268, file: !1137, line: 765, type: !9)
!1274 = !DILocation(line: 765, column: 42, scope: !1268)
!1275 = !DILocation(line: 765, column: 56, scope: !1268)
!1276 = !DILocalVariable(name: "self", arg: 1, scope: !1277, file: !276, line: 57, type: !294)
!1277 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hb212853980f6bef6E", scope: !300, file: !276, line: 57, type: !1278, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !560, retainedNodes: !1281)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!1280, !294}
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1281 = !{!1276}
!1282 = !DILocation(line: 57, column: 26, scope: !1277, inlinedAt: !1283)
!1283 = distinct !DILocation(line: 766, column: 24, scope: !1268)
!1284 = !DILocation(line: 766, column: 5, scope: !1268)
!1285 = !DILocation(line: 767, column: 2, scope: !1268)
!1286 = distinct !DISubprogram(name: "drop_in_place<&u8>", linkageName: "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17hf05a55e5c9f1e909E", scope: !222, file: !1137, line: 490, type: !1287, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1292, retainedNodes: !1290)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{null, !1289}
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u8", baseType: !122, size: 64, align: 64, dwarfAddressSpace: 0)
!1290 = !{!1291}
!1291 = !DILocalVariable(arg: 1, scope: !1286, file: !1137, line: 490, type: !1289)
!1292 = !{!1293}
!1293 = !DITemplateTypeParameter(name: "T", type: !122)
!1294 = !DILocation(line: 490, column: 1, scope: !1286)
!1295 = distinct !DISubprogram(name: "drop_in_place<&u32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h97a2ac158cd47a91E", scope: !222, file: !1137, line: 490, type: !1296, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1301, retainedNodes: !1299)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{null, !1298}
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u32", baseType: !85, size: 64, align: 64, dwarfAddressSpace: 0)
!1299 = !{!1300}
!1300 = !DILocalVariable(arg: 1, scope: !1295, file: !1137, line: 490, type: !1298)
!1301 = !{!1302}
!1302 = !DITemplateTypeParameter(name: "T", type: !85)
!1303 = !DILocation(line: 490, column: 1, scope: !1295)
!1304 = distinct !DISubprogram(name: "drop_in_place<&u64>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h8148cd13a86f44f7E", scope: !222, file: !1137, line: 490, type: !1305, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1310, retainedNodes: !1308)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{null, !1307}
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u64", baseType: !132, size: 64, align: 64, dwarfAddressSpace: 0)
!1308 = !{!1309}
!1309 = !DILocalVariable(arg: 1, scope: !1304, file: !1137, line: 490, type: !1307)
!1310 = !{!1311}
!1311 = !DITemplateTypeParameter(name: "T", type: !132)
!1312 = !DILocation(line: 490, column: 1, scope: !1304)
!1313 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h5bbeba14ca5f8065E", scope: !222, file: !1137, line: 956, type: !1152, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1321, !1323, !1325, !1327}
!1315 = !DILocalVariable(name: "x", arg: 1, scope: !1313, file: !1137, line: 956, type: !294)
!1316 = !DILocalVariable(name: "y", arg: 2, scope: !1313, file: !1137, line: 956, type: !294)
!1317 = !DILocalVariable(name: "count", arg: 3, scope: !1313, file: !1137, line: 956, type: !9)
!1318 = !DILocalVariable(name: "x", scope: !1319, file: !1137, line: 957, type: !1320, align: 8)
!1319 = distinct !DILexicalBlock(scope: !1313, file: !1137, line: 957, column: 5)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !649, size: 64, align: 64, dwarfAddressSpace: 0)
!1321 = !DILocalVariable(name: "y", scope: !1322, file: !1137, line: 958, type: !1320, align: 8)
!1322 = distinct !DILexicalBlock(scope: !1319, file: !1137, line: 958, column: 5)
!1323 = !DILocalVariable(name: "i", scope: !1324, file: !1137, line: 959, type: !9, align: 8)
!1324 = distinct !DILexicalBlock(scope: !1322, file: !1137, line: 959, column: 5)
!1325 = !DILocalVariable(name: "x", scope: !1326, file: !1137, line: 962, type: !967, align: 8)
!1326 = distinct !DILexicalBlock(scope: !1324, file: !1137, line: 962, column: 9)
!1327 = !DILocalVariable(name: "y", scope: !1328, file: !1137, line: 965, type: !967, align: 8)
!1328 = distinct !DILexicalBlock(scope: !1326, file: !1137, line: 965, column: 9)
!1329 = !DILocation(line: 956, column: 55, scope: !1313)
!1330 = !DILocation(line: 956, column: 66, scope: !1313)
!1331 = !DILocation(line: 956, column: 77, scope: !1313)
!1332 = !DILocation(line: 959, column: 9, scope: !1324)
!1333 = !DILocalVariable(name: "self", arg: 1, scope: !1334, file: !276, line: 57, type: !294)
!1334 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h54fcb0867f274f40E", scope: !300, file: !276, line: 57, type: !1335, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1338, retainedNodes: !1337)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!1320, !294}
!1337 = !{!1333}
!1338 = !{!191, !1339}
!1339 = !DITemplateTypeParameter(name: "U", type: !649)
!1340 = !DILocation(line: 57, column: 26, scope: !1334, inlinedAt: !1341)
!1341 = distinct !DILocation(line: 957, column: 13, scope: !1313)
!1342 = !DILocation(line: 957, column: 13, scope: !1313)
!1343 = !DILocation(line: 957, column: 9, scope: !1319)
!1344 = !DILocation(line: 57, column: 26, scope: !1334, inlinedAt: !1345)
!1345 = distinct !DILocation(line: 958, column: 13, scope: !1319)
!1346 = !DILocation(line: 958, column: 13, scope: !1319)
!1347 = !DILocation(line: 958, column: 9, scope: !1322)
!1348 = !DILocation(line: 959, column: 17, scope: !1322)
!1349 = !DILocation(line: 960, column: 5, scope: !1324)
!1350 = !DILocation(line: 960, column: 11, scope: !1324)
!1351 = !DILocation(line: 970, column: 2, scope: !1313)
!1352 = !DILocation(line: 962, column: 38, scope: !1324)
!1353 = !DILocalVariable(name: "self", arg: 1, scope: !1354, file: !276, line: 1015, type: !1320)
!1354 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he97b04676504ea06E", scope: !300, file: !276, line: 1015, type: !1355, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1357)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!1320, !1320, !9}
!1357 = !{!1353, !1358}
!1358 = !DILocalVariable(name: "count", arg: 2, scope: !1354, file: !276, line: 1015, type: !9)
!1359 = !DILocation(line: 1015, column: 29, scope: !1354, inlinedAt: !1360)
!1360 = distinct !DILocation(line: 962, column: 32, scope: !1324)
!1361 = !DILocation(line: 1015, column: 35, scope: !1354, inlinedAt: !1360)
!1362 = !DILocalVariable(name: "self", arg: 1, scope: !1363, file: !276, line: 472, type: !1320)
!1363 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hac16ce4cbebb739dE", scope: !300, file: !276, line: 472, type: !1364, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1366)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{!1320, !1320, !235}
!1366 = !{!1362, !1367}
!1367 = !DILocalVariable(name: "count", arg: 2, scope: !1363, file: !276, line: 472, type: !235)
!1368 = !DILocation(line: 472, column: 32, scope: !1363, inlinedAt: !1369)
!1369 = distinct !DILocation(line: 1020, column: 18, scope: !1354, inlinedAt: !1360)
!1370 = !DILocation(line: 472, column: 38, scope: !1363, inlinedAt: !1369)
!1371 = !DILocation(line: 479, column: 18, scope: !1363, inlinedAt: !1369)
!1372 = !DILocation(line: 962, column: 26, scope: !1324)
!1373 = !DILocation(line: 962, column: 13, scope: !1326)
!1374 = !DILocation(line: 965, column: 38, scope: !1326)
!1375 = !DILocation(line: 1015, column: 29, scope: !1354, inlinedAt: !1376)
!1376 = distinct !DILocation(line: 965, column: 32, scope: !1326)
!1377 = !DILocation(line: 1015, column: 35, scope: !1354, inlinedAt: !1376)
!1378 = !DILocation(line: 472, column: 32, scope: !1363, inlinedAt: !1379)
!1379 = distinct !DILocation(line: 1020, column: 18, scope: !1354, inlinedAt: !1376)
!1380 = !DILocation(line: 472, column: 38, scope: !1363, inlinedAt: !1379)
!1381 = !DILocation(line: 479, column: 18, scope: !1363, inlinedAt: !1379)
!1382 = !DILocation(line: 965, column: 26, scope: !1326)
!1383 = !DILocation(line: 965, column: 13, scope: !1328)
!1384 = !DILocation(line: 966, column: 9, scope: !1328)
!1385 = !DILocation(line: 968, column: 9, scope: !1328)
!1386 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read17h7abe7af8e5337358E", scope: !222, file: !1137, line: 1137, type: !1387, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1389)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!649, !648}
!1389 = !{!1390, !1391}
!1390 = !DILocalVariable(name: "src", arg: 1, scope: !1386, file: !1137, line: 1137, type: !648)
!1391 = !DILocalVariable(name: "tmp", scope: !1392, file: !1137, line: 1145, type: !1393, align: 8)
!1392 = distinct !DILexicalBlock(scope: !1386, file: !1137, line: 1145, column: 5)
!1393 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", scope: !650, file: !2, size: 192, align: 64, elements: !1394, templateParams: !661, identifier: "2923fb11e13ada24673e34e7950e690")
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1393, file: !2, baseType: !7, align: 8)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1393, file: !2, baseType: !1397, size: 192, align: 64)
!1397 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", scope: !656, file: !2, size: 192, align: 64, elements: !1398, templateParams: !661, identifier: "151a846482453dde75b011f7142c789e")
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1397, file: !2, baseType: !649, size: 192, align: 64)
!1400 = !DILocation(line: 1137, column: 29, scope: !1386)
!1401 = !DILocation(line: 1145, column: 9, scope: !1392)
!1402 = !DILocation(line: 1153, column: 9, scope: !1392)
!1403 = !DILocalVariable(name: "src", arg: 1, scope: !1404, file: !199, line: 2241, type: !648)
!1404 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read7runtime17h2bbfeeaac52359b1E", scope: !1405, file: !199, line: 2241, type: !1406, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1408)
!1405 = !DINamespace(name: "read", scope: !222)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{null, !648}
!1408 = !{!1403}
!1409 = !DILocation(line: 2241, column: 39, scope: !1404, inlinedAt: !1410)
!1410 = distinct !DILocation(line: 1153, column: 9, scope: !1392)
!1411 = !DILocation(line: 1155, column: 35, scope: !1412, inlinedAt: !1410)
!1412 = !DILexicalBlockFile(scope: !1404, file: !1137, discriminator: 0)
!1413 = !DILocation(line: 2242, column: 20, scope: !1404, inlinedAt: !1410)
!1414 = !DILocation(line: 2244, column: 21, scope: !1404, inlinedAt: !1410)
!1415 = !DILocalVariable(name: "self", arg: 1, scope: !1416, file: !1417, line: 567, type: !1420)
!1416 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h6e5369bb706d8522E", scope: !1393, file: !1417, line: 567, type: !1418, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1421)
!1417 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "1414c0f1ab8ce712ce2deada2fd51b28")
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!1320, !1420}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", baseType: !1393, size: 64, align: 64, dwarfAddressSpace: 0)
!1421 = !{!1415}
!1422 = !DILocation(line: 567, column: 29, scope: !1416, inlinedAt: !1423)
!1423 = distinct !DILocation(line: 1157, column: 34, scope: !1392)
!1424 = !DILocation(line: 1157, column: 9, scope: !1392)
!1425 = !DILocation(line: 1158, column: 9, scope: !1392)
!1426 = !DILocalVariable(name: "self", arg: 1, scope: !1427, file: !1417, line: 622, type: !1393)
!1427 = distinct !DISubprogram(name: "assume_init<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h49cc9b02b1f6fe84E", scope: !1393, file: !1417, line: 622, type: !1428, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1430)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!649, !1393, !327}
!1430 = !{!1426}
!1431 = !DILocation(line: 622, column: 37, scope: !1427, inlinedAt: !1432)
!1432 = distinct !DILocation(line: 1158, column: 9, scope: !1392)
!1433 = !DILocation(line: 627, column: 38, scope: !1427, inlinedAt: !1432)
!1434 = !DILocalVariable(name: "slot", arg: 1, scope: !1435, file: !1004, line: 88, type: !1397)
!1435 = distinct !DISubprogram(name: "into_inner<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h83b84b1afcf3c91cE", scope: !1397, file: !1004, line: 88, type: !1436, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1438)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!649, !1397}
!1438 = !{!1434}
!1439 = !DILocation(line: 88, column: 29, scope: !1435, inlinedAt: !1440)
!1440 = distinct !DILocation(line: 627, column: 13, scope: !1427, inlinedAt: !1432)
!1441 = !DILocation(line: 89, column: 9, scope: !1435, inlinedAt: !1440)
!1442 = !DILocation(line: 1160, column: 2, scope: !1386)
!1443 = distinct !DISubprogram(name: "read<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read17hf5dd81a4047cd85dE", scope: !222, file: !1137, line: 1137, type: !1444, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1446)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!13, !225}
!1446 = !{!1447, !1448}
!1447 = !DILocalVariable(name: "src", arg: 1, scope: !1443, file: !1137, line: 1137, type: !225)
!1448 = !DILocalVariable(name: "tmp", scope: !1449, file: !1137, line: 1145, type: !649, align: 8)
!1449 = distinct !DILexicalBlock(scope: !1443, file: !1137, line: 1145, column: 5)
!1450 = !DILocation(line: 1137, column: 29, scope: !1443)
!1451 = !DILocation(line: 1145, column: 9, scope: !1449)
!1452 = !DILocation(line: 1153, column: 9, scope: !1449)
!1453 = !DILocalVariable(name: "src", arg: 1, scope: !1454, file: !199, line: 2241, type: !225)
!1454 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read7runtime17h7756f71c9d146921E", scope: !1405, file: !199, line: 2241, type: !1455, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1457)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{null, !225}
!1457 = !{!1453}
!1458 = !DILocation(line: 2241, column: 39, scope: !1454, inlinedAt: !1459)
!1459 = distinct !DILocation(line: 1153, column: 9, scope: !1449)
!1460 = !DILocation(line: 1155, column: 35, scope: !1461, inlinedAt: !1459)
!1461 = !DILexicalBlockFile(scope: !1454, file: !1137, discriminator: 0)
!1462 = !DILocation(line: 2242, column: 20, scope: !1454, inlinedAt: !1459)
!1463 = !DILocation(line: 2244, column: 21, scope: !1454, inlinedAt: !1459)
!1464 = !DILocalVariable(name: "self", arg: 1, scope: !1465, file: !1417, line: 567, type: !967)
!1465 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h07a73b7e3eeefc30E", scope: !649, file: !1417, line: 567, type: !1466, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1468)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!294, !967}
!1468 = !{!1464}
!1469 = !DILocation(line: 567, column: 29, scope: !1465, inlinedAt: !1470)
!1470 = distinct !DILocation(line: 1157, column: 34, scope: !1449)
!1471 = !DILocation(line: 1157, column: 9, scope: !1449)
!1472 = !DILocation(line: 1158, column: 9, scope: !1449)
!1473 = !DILocalVariable(name: "self", arg: 1, scope: !1474, file: !1417, line: 622, type: !649)
!1474 = distinct !DISubprogram(name: "assume_init<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h4cb3879f6e61c47aE", scope: !649, file: !1417, line: 622, type: !1475, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1477)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!13, !649, !327}
!1477 = !{!1473}
!1478 = !DILocation(line: 622, column: 37, scope: !1474, inlinedAt: !1479)
!1479 = distinct !DILocation(line: 1158, column: 9, scope: !1449)
!1480 = !DILocation(line: 627, column: 38, scope: !1474, inlinedAt: !1479)
!1481 = !DILocalVariable(name: "slot", arg: 1, scope: !1482, file: !1004, line: 88, type: !655)
!1482 = distinct !DISubprogram(name: "into_inner<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h9fdce389ab8e2ca6E", scope: !655, file: !1004, line: 88, type: !1483, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1485)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!13, !655}
!1485 = !{!1481}
!1486 = !DILocation(line: 88, column: 29, scope: !1482, inlinedAt: !1487)
!1487 = distinct !DILocation(line: 627, column: 13, scope: !1474, inlinedAt: !1479)
!1488 = !DILocation(line: 89, column: 9, scope: !1482, inlinedAt: !1487)
!1489 = !DILocation(line: 1160, column: 2, scope: !1443)
!1490 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4swap17h2af3b31cc01f7abcE", scope: !222, file: !1137, line: 841, type: !1491, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1493)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{null, !294, !294}
!1493 = !{!1494, !1495, !1496}
!1494 = !DILocalVariable(name: "x", arg: 1, scope: !1490, file: !1137, line: 841, type: !294)
!1495 = !DILocalVariable(name: "y", arg: 2, scope: !1490, file: !1137, line: 841, type: !294)
!1496 = !DILocalVariable(name: "tmp", scope: !1497, file: !1137, line: 844, type: !649, align: 8)
!1497 = distinct !DILexicalBlock(scope: !1490, file: !1137, line: 844, column: 5)
!1498 = !DILocation(line: 841, column: 29, scope: !1490)
!1499 = !DILocation(line: 841, column: 40, scope: !1490)
!1500 = !DILocation(line: 844, column: 9, scope: !1497)
!1501 = !DILocation(line: 567, column: 29, scope: !1465, inlinedAt: !1502)
!1502 = distinct !DILocation(line: 852, column: 32, scope: !1497)
!1503 = !DILocation(line: 852, column: 9, scope: !1497)
!1504 = !DILocation(line: 853, column: 9, scope: !1497)
!1505 = !DILocalVariable(name: "self", arg: 1, scope: !1506, file: !1417, line: 528, type: !1509)
!1506 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17haf23ebcb0229c2b9E", scope: !649, file: !1417, line: 528, type: !1507, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1510)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!225, !1509}
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !649, size: 64, align: 64, dwarfAddressSpace: 0)
!1510 = !{!1505}
!1511 = !DILocation(line: 528, column: 25, scope: !1506, inlinedAt: !1512)
!1512 = distinct !DILocation(line: 854, column: 29, scope: !1497)
!1513 = !DILocation(line: 854, column: 9, scope: !1497)
!1514 = !DILocation(line: 856, column: 2, scope: !1490)
!1515 = distinct !DISubprogram(name: "swap<usize>", linkageName: "_ZN4core3ptr4swap17h918312f0c5f20307E", scope: !222, file: !1137, line: 841, type: !1516, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !1518)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{null, !612, !612}
!1518 = !{!1519, !1520, !1521}
!1519 = !DILocalVariable(name: "x", arg: 1, scope: !1515, file: !1137, line: 841, type: !612)
!1520 = !DILocalVariable(name: "y", arg: 2, scope: !1515, file: !1137, line: 841, type: !612)
!1521 = !DILocalVariable(name: "tmp", scope: !1522, file: !1137, line: 844, type: !1523, align: 8)
!1522 = distinct !DILexicalBlock(scope: !1515, file: !1137, line: 844, column: 5)
!1523 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !650, file: !2, size: 64, align: 64, elements: !1524, templateParams: !485, identifier: "9c7a09a9267fe860447813a94ea84929")
!1524 = !{!1525, !1526}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1523, file: !2, baseType: !7, align: 8)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1523, file: !2, baseType: !1527, size: 64, align: 64)
!1527 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !656, file: !2, size: 64, align: 64, elements: !1528, templateParams: !485, identifier: "d74608575ada8fc9533e31be519346c0")
!1528 = !{!1529}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1527, file: !2, baseType: !9, size: 64, align: 64)
!1530 = !DILocation(line: 841, column: 29, scope: !1515)
!1531 = !DILocation(line: 841, column: 40, scope: !1515)
!1532 = !DILocation(line: 844, column: 9, scope: !1522)
!1533 = !DILocation(line: 315, column: 6, scope: !1534, inlinedAt: !1537)
!1534 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h80f84b413697e131E", scope: !1523, file: !1417, line: 313, type: !1535, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !24)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!1523}
!1537 = distinct !DILocation(line: 844, column: 19, scope: !1515)
!1538 = !DILocation(line: 844, column: 19, scope: !1515)
!1539 = !DILocalVariable(name: "self", arg: 1, scope: !1540, file: !1417, line: 567, type: !1543)
!1540 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h55282feacebb5a19E", scope: !1523, file: !1417, line: 567, type: !1541, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !1544)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!612, !1543}
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !1523, size: 64, align: 64, dwarfAddressSpace: 0)
!1544 = !{!1539}
!1545 = !DILocation(line: 567, column: 29, scope: !1540, inlinedAt: !1546)
!1546 = distinct !DILocation(line: 852, column: 32, scope: !1522)
!1547 = !DILocation(line: 852, column: 9, scope: !1522)
!1548 = !DILocation(line: 853, column: 9, scope: !1522)
!1549 = !DILocalVariable(name: "self", arg: 1, scope: !1550, file: !1417, line: 528, type: !1553)
!1550 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hfbb01a14819d5783E", scope: !1523, file: !1417, line: 528, type: !1551, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !1554)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!611, !1553}
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !1523, size: 64, align: 64, dwarfAddressSpace: 0)
!1554 = !{!1549}
!1555 = !DILocation(line: 528, column: 25, scope: !1550, inlinedAt: !1556)
!1556 = distinct !DILocation(line: 854, column: 29, scope: !1522)
!1557 = !DILocation(line: 854, column: 9, scope: !1522)
!1558 = !DILocation(line: 856, column: 2, scope: !1515)
!1559 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17h2f18dfc4aaadc409E", scope: !222, file: !1137, line: 490, type: !1560, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1565, retainedNodes: !1563)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{null, !1562}
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!1563 = !{!1564}
!1564 = !DILocalVariable(arg: 1, scope: !1559, file: !1137, line: 490, type: !1562)
!1565 = !{!1566}
!1566 = !DITemplateTypeParameter(name: "T", type: !109)
!1567 = !DILocation(line: 490, column: 1, scope: !1559)
!1568 = distinct !DISubprogram(name: "write<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write17h38a109b4e2f8401dE", scope: !222, file: !1137, line: 1338, type: !1569, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1571)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{null, !294, !13}
!1571 = !{!1572, !1573}
!1572 = !DILocalVariable(name: "dst", arg: 1, scope: !1568, file: !1137, line: 1338, type: !294)
!1573 = !DILocalVariable(name: "src", arg: 2, scope: !1568, file: !1137, line: 1338, type: !13)
!1574 = !DILocation(line: 1338, column: 30, scope: !1568)
!1575 = !DILocation(line: 1338, column: 43, scope: !1568)
!1576 = !DILocation(line: 1350, column: 9, scope: !1568)
!1577 = !DILocalVariable(name: "dst", arg: 1, scope: !1578, file: !199, line: 2241, type: !294)
!1578 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write7runtime17hbbc624b8cd0c93deE", scope: !1579, file: !199, line: 2241, type: !1580, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1582)
!1579 = !DINamespace(name: "write", scope: !222)
!1580 = !DISubroutineType(types: !1581)
!1581 = !{null, !294}
!1582 = !{!1577}
!1583 = !DILocation(line: 2241, column: 39, scope: !1578, inlinedAt: !1584)
!1584 = distinct !DILocation(line: 1350, column: 9, scope: !1568)
!1585 = !DILocation(line: 1352, column: 33, scope: !1586, inlinedAt: !1584)
!1586 = !DILexicalBlockFile(scope: !1578, file: !1137, discriminator: 0)
!1587 = !DILocation(line: 2242, column: 20, scope: !1578, inlinedAt: !1584)
!1588 = !DILocation(line: 2244, column: 21, scope: !1578, inlinedAt: !1584)
!1589 = !DILocation(line: 1354, column: 9, scope: !1568)
!1590 = !DILocation(line: 1357, column: 2, scope: !1568)
!1591 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write17hd9220220f276d7eaE", scope: !222, file: !1137, line: 1338, type: !1592, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1594)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{null, !1320, !649}
!1594 = !{!1595, !1596}
!1595 = !DILocalVariable(name: "dst", arg: 1, scope: !1591, file: !1137, line: 1338, type: !1320)
!1596 = !DILocalVariable(name: "src", arg: 2, scope: !1591, file: !1137, line: 1338, type: !649)
!1597 = !DILocation(line: 1338, column: 30, scope: !1591)
!1598 = !DILocation(line: 1338, column: 43, scope: !1591)
!1599 = !DILocation(line: 1350, column: 9, scope: !1591)
!1600 = !DILocalVariable(name: "dst", arg: 1, scope: !1601, file: !199, line: 2241, type: !1320)
!1601 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write7runtime17h3aa4a4cee022163aE", scope: !1579, file: !199, line: 2241, type: !1602, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1604)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{null, !1320}
!1604 = !{!1600}
!1605 = !DILocation(line: 2241, column: 39, scope: !1601, inlinedAt: !1606)
!1606 = distinct !DILocation(line: 1350, column: 9, scope: !1591)
!1607 = !DILocation(line: 1352, column: 33, scope: !1608, inlinedAt: !1606)
!1608 = !DILexicalBlockFile(scope: !1601, file: !1137, discriminator: 0)
!1609 = !DILocation(line: 2242, column: 20, scope: !1601, inlinedAt: !1606)
!1610 = !DILocation(line: 2244, column: 21, scope: !1601, inlinedAt: !1606)
!1611 = !DILocation(line: 1354, column: 9, scope: !1591)
!1612 = !DILocation(line: 1357, column: 2, scope: !1591)
!1613 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>", linkageName: "_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17hac2f11c42cfb9a1cE", scope: !222, file: !1137, line: 490, type: !1614, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1619, retainedNodes: !1617)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{null, !1616}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!1617 = !{!1618}
!1618 = !DILocalVariable(arg: 1, scope: !1613, file: !1137, line: 490, type: !1616)
!1619 = !{!1620}
!1620 = !DITemplateTypeParameter(name: "T", type: !94)
!1621 = !DILocation(line: 490, column: 1, scope: !1613)
!1622 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::FrameRange>", linkageName: "_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17hce373ee1c77dbe72E", scope: !222, file: !1137, line: 490, type: !1623, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1628, retainedNodes: !1626)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{null, !1625}
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!1626 = !{!1627}
!1627 = !DILocalVariable(arg: 1, scope: !1622, file: !1137, line: 490, type: !1625)
!1628 = !{!1629}
!1629 = !DITemplateTypeParameter(name: "T", type: !19)
!1630 = !DILocation(line: 490, column: 1, scope: !1622)
!1631 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h7f9abbc7b99f0eedE", scope: !222, file: !1137, line: 490, type: !1632, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !827, retainedNodes: !1635)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{null, !1634}
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!1635 = !{!1636}
!1636 = !DILocalVariable(arg: 1, scope: !1631, file: !1137, line: 490, type: !1634)
!1637 = !DILocation(line: 490, column: 1, scope: !1631)
!1638 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h0731c1b23d198b15E", scope: !222, file: !1137, line: 490, type: !1639, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1644, retainedNodes: !1642)
!1639 = !DISubroutineType(types: !1640)
!1640 = !{null, !1641}
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!1642 = !{!1643}
!1643 = !DILocalVariable(arg: 1, scope: !1638, file: !1137, line: 490, type: !1641)
!1644 = !{!1645}
!1645 = !DITemplateTypeParameter(name: "T", type: !60)
!1646 = !DILocation(line: 490, column: 1, scope: !1638)
!1647 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hf81e21e3852c5789E", scope: !1648, file: !276, line: 35, type: !1649, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1651)
!1648 = !DINamespace(name: "is_null", scope: !300)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{!421, !1166}
!1651 = !{!1652}
!1652 = !DILocalVariable(name: "ptr", arg: 1, scope: !1647, file: !276, line: 35, type: !1166)
!1653 = !DILocation(line: 35, column: 25, scope: !1647)
!1654 = !DILocalVariable(name: "self", arg: 1, scope: !1655, file: !276, line: 209, type: !1166)
!1655 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hc24dbe026b8bdbadE", scope: !300, file: !276, line: 209, type: !1656, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !1658)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!9, !1166}
!1658 = !{!1654}
!1659 = !{!1660}
!1660 = !DITemplateTypeParameter(name: "T", type: !123)
!1661 = !DILocation(line: 209, column: 17, scope: !1655, inlinedAt: !1662)
!1662 = distinct !DILocation(line: 36, column: 13, scope: !1647)
!1663 = !DILocalVariable(name: "self", arg: 1, scope: !1664, file: !276, line: 57, type: !1166)
!1664 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h222740346c57e859E", scope: !300, file: !276, line: 57, type: !1665, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1668, retainedNodes: !1667)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!1280, !1166}
!1667 = !{!1663}
!1668 = !{!1660, !561}
!1669 = !DILocation(line: 57, column: 26, scope: !1664, inlinedAt: !1670)
!1670 = distinct !DILocation(line: 213, column: 33, scope: !1655, inlinedAt: !1662)
!1671 = !DILocation(line: 213, column: 18, scope: !1655, inlinedAt: !1662)
!1672 = !DILocation(line: 36, column: 13, scope: !1647)
!1673 = !DILocation(line: 37, column: 10, scope: !1647)
!1674 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd1a6af8bc1e3a6afE", scope: !300, file: !276, line: 33, type: !1675, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1677)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!421, !294}
!1677 = !{!1678}
!1678 = !DILocalVariable(name: "self", arg: 1, scope: !1674, file: !276, line: 33, type: !294)
!1679 = !DILocation(line: 33, column: 26, scope: !1674)
!1680 = !DILocation(line: 50, column: 36, scope: !1674)
!1681 = !DILocation(line: 50, column: 18, scope: !1674)
!1682 = !DILocation(line: 51, column: 6, scope: !1674)
!1683 = distinct !DISubprogram(name: "from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h3fd2e693449dc896E", scope: !1685, file: !1684, line: 111, type: !1686, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1688)
!1684 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1e1a461bde75de7a93357ca7e628f393")
!1685 = !DINamespace(name: "metadata", scope: !222)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!225, !6, !7}
!1688 = !{!1689, !1690}
!1689 = !DILocalVariable(name: "data_address", arg: 1, scope: !1683, file: !1684, line: 112, type: !6)
!1690 = !DILocalVariable(name: "metadata", arg: 2, scope: !1683, file: !1684, line: 113, type: !7)
!1691 = !DILocation(line: 112, column: 5, scope: !1683)
!1692 = !DILocation(line: 113, column: 5, scope: !1683)
!1693 = !DILocation(line: 118, column: 36, scope: !1683)
!1694 = !DILocation(line: 118, column: 14, scope: !1683)
!1695 = !DILocation(line: 119, column: 2, scope: !1683)
!1696 = distinct !DISubprogram(name: "from_raw_parts<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hff856379fcd0049aE", scope: !1685, file: !1684, line: 111, type: !1697, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1699)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{!170, !6, !9}
!1699 = !{!1700, !1701}
!1700 = !DILocalVariable(name: "data_address", arg: 1, scope: !1696, file: !1684, line: 112, type: !6)
!1701 = !DILocalVariable(name: "metadata", arg: 2, scope: !1696, file: !1684, line: 113, type: !9)
!1702 = !DILocation(line: 112, column: 5, scope: !1696)
!1703 = !DILocation(line: 113, column: 5, scope: !1696)
!1704 = !DILocation(line: 118, column: 36, scope: !1696)
!1705 = !DILocation(line: 118, column: 14, scope: !1696)
!1706 = !DILocation(line: 119, column: 2, scope: !1696)
!1707 = distinct !DISubprogram(name: "from_raw_parts_mut<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbd2ff5738d9f5e5aE", scope: !1685, file: !1684, line: 128, type: !1708, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1710)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!247, !1280, !9}
!1710 = !{!1711, !1712}
!1711 = !DILocalVariable(name: "data_address", arg: 1, scope: !1707, file: !1684, line: 129, type: !1280)
!1712 = !DILocalVariable(name: "metadata", arg: 2, scope: !1707, file: !1684, line: 130, type: !9)
!1713 = !DILocation(line: 129, column: 5, scope: !1707)
!1714 = !DILocation(line: 130, column: 5, scope: !1707)
!1715 = !DILocation(line: 135, column: 36, scope: !1707)
!1716 = !DILocation(line: 135, column: 14, scope: !1707)
!1717 = !DILocation(line: 136, column: 2, scope: !1707)
!1718 = distinct !DISubprogram(name: "metadata<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8metadata8metadata17h6540df51448649b6E", scope: !1685, file: !1684, line: 94, type: !1455, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1719)
!1719 = !{!1720}
!1720 = !DILocalVariable(name: "ptr", arg: 1, scope: !1718, file: !1684, line: 94, type: !225)
!1721 = !DILocation(line: 94, column: 34, scope: !1718)
!1722 = !DILocation(line: 98, column: 14, scope: !1718)
!1723 = !DILocation(line: 99, column: 2, scope: !1718)
!1724 = distinct !DISubprogram(name: "metadata<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata8metadata17hc1aa6460a717ef3dE", scope: !1685, file: !1684, line: 94, type: !1725, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1727)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{!9, !170}
!1727 = !{!1728}
!1728 = !DILocalVariable(name: "ptr", arg: 1, scope: !1724, file: !1684, line: 94, type: !170)
!1729 = !DILocation(line: 94, column: 34, scope: !1724)
!1730 = !DILocation(line: 98, column: 14, scope: !1724)
!1731 = !DILocation(line: 99, column: 2, scope: !1724)
!1732 = distinct !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h358a6220fe179556E", scope: !819, file: !1733, line: 197, type: !1734, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1736)
!1733 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "489a545a71841a1f316d99c11467aaa5")
!1734 = !DISubroutineType(types: !1735)
!1735 = !{!819, !294}
!1736 = !{!1737}
!1737 = !DILocalVariable(name: "ptr", arg: 1, scope: !1732, file: !1733, line: 197, type: !294)
!1738 = !DILocation(line: 197, column: 39, scope: !1732)
!1739 = !DILocation(line: 200, column: 13, scope: !1732)
!1740 = !DILocalVariable(name: "ptr", arg: 1, scope: !1741, file: !199, line: 2241, type: !294)
!1741 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h4d515149a47c318dE", scope: !1742, file: !199, line: 2241, type: !1580, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1744)
!1742 = !DINamespace(name: "new_unchecked", scope: !1743)
!1743 = !DINamespace(name: "{impl#3}", scope: !820)
!1744 = !{!1740}
!1745 = !DILocation(line: 2241, column: 39, scope: !1741, inlinedAt: !1746)
!1746 = distinct !DILocation(line: 200, column: 13, scope: !1732)
!1747 = !DILocation(line: 200, column: 134, scope: !1748, inlinedAt: !1746)
!1748 = !DILexicalBlockFile(scope: !1741, file: !1733, discriminator: 0)
!1749 = !DILocation(line: 200, column: 133, scope: !1748, inlinedAt: !1746)
!1750 = !DILocation(line: 2242, column: 20, scope: !1741, inlinedAt: !1746)
!1751 = !DILocation(line: 2244, column: 21, scope: !1741, inlinedAt: !1746)
!1752 = !DILocation(line: 201, column: 13, scope: !1732)
!1753 = !DILocation(line: 203, column: 6, scope: !1732)
!1754 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h7c5dcdc1c1ed93efE", scope: !220, file: !219, line: 1448, type: !646, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1755)
!1755 = !{!1756}
!1756 = !DILocalVariable(name: "self", arg: 1, scope: !1754, file: !219, line: 1448, type: !648)
!1757 = !DILocation(line: 1448, column: 29, scope: !1754)
!1758 = !DILocation(line: 1452, column: 9, scope: !1754)
!1759 = !DILocation(line: 1453, column: 6, scope: !1754)
!1760 = distinct !DISubprogram(name: "is_aligned<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hd973fd8ab7949705E", scope: !220, file: !219, line: 1448, type: !636, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1761)
!1761 = !{!1762}
!1762 = !DILocalVariable(name: "self", arg: 1, scope: !1760, file: !219, line: 1448, type: !225)
!1763 = !DILocation(line: 1448, column: 29, scope: !1760)
!1764 = !DILocation(line: 1452, column: 9, scope: !1760)
!1765 = !DILocation(line: 1453, column: 6, scope: !1760)
!1766 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h138415916c3c97e6E", scope: !1767, file: !219, line: 1570, type: !1768, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1770)
!1767 = !DINamespace(name: "is_aligned_to", scope: !220)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!421, !6, !9}
!1770 = !{!1771, !1772}
!1771 = !DILocalVariable(name: "ptr", arg: 1, scope: !1766, file: !219, line: 1570, type: !6)
!1772 = !DILocalVariable(name: "align", arg: 2, scope: !1766, file: !219, line: 1570, type: !9)
!1773 = !DILocation(line: 1570, column: 25, scope: !1766)
!1774 = !DILocation(line: 1570, column: 41, scope: !1766)
!1775 = !DILocalVariable(name: "self", arg: 1, scope: !1776, file: !219, line: 203, type: !6)
!1776 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h23c38f925c7a1a41E", scope: !220, file: !219, line: 203, type: !1777, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1780, retainedNodes: !1779)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!9, !6}
!1779 = !{!1775}
!1780 = !{!461}
!1781 = !DILocation(line: 203, column: 17, scope: !1776, inlinedAt: !1782)
!1782 = distinct !DILocation(line: 1571, column: 13, scope: !1766)
!1783 = !DILocalVariable(name: "self", arg: 1, scope: !1784, file: !219, line: 58, type: !6)
!1784 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hfc83bd2baaa41e9eE", scope: !220, file: !219, line: 58, type: !1785, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1788, retainedNodes: !1787)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!6, !6}
!1787 = !{!1783}
!1788 = !{!461, !561}
!1789 = !DILocation(line: 58, column: 26, scope: !1784, inlinedAt: !1790)
!1790 = distinct !DILocation(line: 207, column: 33, scope: !1776, inlinedAt: !1782)
!1791 = !DILocation(line: 207, column: 18, scope: !1776, inlinedAt: !1782)
!1792 = !DILocation(line: 1571, column: 26, scope: !1766)
!1793 = !DILocation(line: 1571, column: 13, scope: !1766)
!1794 = !DILocation(line: 1572, column: 10, scope: !1766)
!1795 = distinct !DISubprogram(name: "is_aligned_to<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h283c9ff5f3ff2f3eE", scope: !220, file: !219, line: 1564, type: !1796, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1798)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{!421, !225, !9}
!1798 = !{!1799, !1800}
!1799 = !DILocalVariable(name: "self", arg: 1, scope: !1795, file: !219, line: 1564, type: !225)
!1800 = !DILocalVariable(name: "align", arg: 2, scope: !1795, file: !219, line: 1564, type: !9)
!1801 = !DILocation(line: 1564, column: 32, scope: !1795)
!1802 = !DILocation(line: 1564, column: 38, scope: !1795)
!1803 = !DILocation(line: 2170, column: 38, scope: !1191, inlinedAt: !1804)
!1804 = distinct !DILocation(line: 1565, column: 13, scope: !1795)
!1805 = !DILocation(line: 106, column: 33, scope: !1196, inlinedAt: !1806)
!1806 = distinct !DILocation(line: 2171, column: 13, scope: !1191, inlinedAt: !1804)
!1807 = !DILocation(line: 107, column: 13, scope: !1196, inlinedAt: !1806)
!1808 = !DILocation(line: 2171, column: 13, scope: !1191, inlinedAt: !1804)
!1809 = !DILocation(line: 1565, column: 12, scope: !1795)
!1810 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !1811)
!1811 = distinct !DILocation(line: 1584, column: 37, scope: !1795)
!1812 = !DILocation(line: 1584, column: 36, scope: !1795)
!1813 = !DILocation(line: 1584, column: 18, scope: !1795)
!1814 = !DILocation(line: 1585, column: 6, scope: !1795)
!1815 = !DILocation(line: 1566, column: 13, scope: !1795)
!1816 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hb3e034956ac30275E", scope: !220, file: !219, line: 1564, type: !1817, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1819)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!421, !648, !9}
!1819 = !{!1820, !1821}
!1820 = !DILocalVariable(name: "self", arg: 1, scope: !1816, file: !219, line: 1564, type: !648)
!1821 = !DILocalVariable(name: "align", arg: 2, scope: !1816, file: !219, line: 1564, type: !9)
!1822 = !DILocation(line: 1564, column: 32, scope: !1816)
!1823 = !DILocation(line: 1564, column: 38, scope: !1816)
!1824 = !DILocation(line: 2170, column: 38, scope: !1191, inlinedAt: !1825)
!1825 = distinct !DILocation(line: 1565, column: 13, scope: !1816)
!1826 = !DILocation(line: 106, column: 33, scope: !1196, inlinedAt: !1827)
!1827 = distinct !DILocation(line: 2171, column: 13, scope: !1191, inlinedAt: !1825)
!1828 = !DILocation(line: 107, column: 13, scope: !1196, inlinedAt: !1827)
!1829 = !DILocation(line: 2171, column: 13, scope: !1191, inlinedAt: !1825)
!1830 = !DILocation(line: 1565, column: 12, scope: !1816)
!1831 = !DILocalVariable(name: "self", arg: 1, scope: !1832, file: !219, line: 58, type: !648)
!1832 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h7d84cbd08baf7963E", scope: !220, file: !219, line: 58, type: !1833, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1836, retainedNodes: !1835)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!6, !648}
!1835 = !{!1831}
!1836 = !{!662, !561}
!1837 = !DILocation(line: 58, column: 26, scope: !1832, inlinedAt: !1838)
!1838 = distinct !DILocation(line: 1584, column: 37, scope: !1816)
!1839 = !DILocation(line: 1584, column: 36, scope: !1816)
!1840 = !DILocation(line: 1584, column: 18, scope: !1816)
!1841 = !DILocation(line: 1585, column: 6, scope: !1816)
!1842 = !DILocation(line: 1566, column: 13, scope: !1816)
!1843 = distinct !DISubprogram(name: "with_metadata_of<u8, bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h030bc1d33a4ae353E", scope: !220, file: !219, line: 94, type: !1844, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1850, retainedNodes: !1847)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!225, !1846, !225}
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!1847 = !{!1848, !1849}
!1848 = !DILocalVariable(name: "self", arg: 1, scope: !1843, file: !219, line: 94, type: !1846)
!1849 = !DILocalVariable(name: "meta", arg: 2, scope: !1843, file: !219, line: 94, type: !225)
!1850 = !{!1660, !1851}
!1851 = !DITemplateTypeParameter(name: "U", type: !13)
!1852 = !DILocation(line: 94, column: 38, scope: !1843)
!1853 = !DILocation(line: 94, column: 44, scope: !1843)
!1854 = !DILocation(line: 98, column: 48, scope: !1843)
!1855 = !DILocation(line: 98, column: 9, scope: !1843)
!1856 = !DILocation(line: 99, column: 6, scope: !1843)
!1857 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h2b0f86c52e76939fE", scope: !1858, file: !219, line: 36, type: !1859, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1861)
!1858 = !DINamespace(name: "is_null", scope: !220)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!421, !1846}
!1861 = !{!1862}
!1862 = !DILocalVariable(name: "ptr", arg: 1, scope: !1857, file: !219, line: 36, type: !1846)
!1863 = !DILocation(line: 36, column: 25, scope: !1857)
!1864 = !DILocalVariable(name: "self", arg: 1, scope: !1865, file: !219, line: 203, type: !1846)
!1865 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17he8b8532923708121E", scope: !220, file: !219, line: 203, type: !1866, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !1868)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!9, !1846}
!1868 = !{!1864}
!1869 = !DILocation(line: 203, column: 17, scope: !1865, inlinedAt: !1870)
!1870 = distinct !DILocation(line: 37, column: 13, scope: !1857)
!1871 = !DILocalVariable(name: "self", arg: 1, scope: !1872, file: !219, line: 58, type: !1846)
!1872 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h417f56d00838e117E", scope: !220, file: !219, line: 58, type: !1873, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1668, retainedNodes: !1875)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!6, !1846}
!1875 = !{!1871}
!1876 = !DILocation(line: 58, column: 26, scope: !1872, inlinedAt: !1877)
!1877 = distinct !DILocation(line: 207, column: 33, scope: !1865, inlinedAt: !1870)
!1878 = !DILocation(line: 207, column: 18, scope: !1865, inlinedAt: !1870)
!1879 = !DILocation(line: 37, column: 13, scope: !1857)
!1880 = !DILocation(line: 38, column: 10, scope: !1857)
!1881 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h137bc6af344c2718E", scope: !220, file: !219, line: 34, type: !646, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !661, retainedNodes: !1882)
!1882 = !{!1883}
!1883 = !DILocalVariable(name: "self", arg: 1, scope: !1881, file: !219, line: 34, type: !648)
!1884 = !DILocation(line: 34, column: 26, scope: !1881)
!1885 = !DILocation(line: 51, column: 36, scope: !1881)
!1886 = !DILocation(line: 51, column: 18, scope: !1881)
!1887 = !DILocation(line: 52, column: 6, scope: !1881)
!1888 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4aa6254734848f2bE", scope: !220, file: !219, line: 34, type: !636, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1889)
!1889 = !{!1890}
!1890 = !DILocalVariable(name: "self", arg: 1, scope: !1888, file: !219, line: 34, type: !225)
!1891 = !DILocation(line: 34, column: 26, scope: !1888)
!1892 = !DILocation(line: 51, column: 36, scope: !1888)
!1893 = !DILocation(line: 51, column: 18, scope: !1888)
!1894 = !DILocation(line: 52, column: 6, scope: !1888)
!1895 = distinct !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h58910af669914ae5E", scope: !220, file: !219, line: 781, type: !1896, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1898)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!9, !225, !225}
!1898 = !{!1899, !1900, !1901, !1903}
!1899 = !DILocalVariable(name: "self", arg: 1, scope: !1895, file: !219, line: 781, type: !225)
!1900 = !DILocalVariable(name: "origin", arg: 2, scope: !1895, file: !219, line: 781, type: !225)
!1901 = !DILocalVariable(name: "this", scope: !1902, file: !219, line: 785, type: !225, align: 8)
!1902 = distinct !DILexicalBlock(scope: !1895, file: !219, line: 785, column: 9)
!1903 = !DILocalVariable(name: "pointee_size", scope: !1904, file: !219, line: 795, type: !9, align: 8)
!1904 = distinct !DILexicalBlock(scope: !1902, file: !219, line: 795, column: 9)
!1905 = !DILocation(line: 781, column: 33, scope: !1895)
!1906 = !DILocation(line: 785, column: 13, scope: !1902)
!1907 = !DILocation(line: 781, column: 39, scope: !1895)
!1908 = !DILocation(line: 789, column: 13, scope: !1902)
!1909 = !DILocalVariable(name: "this", arg: 1, scope: !1910, file: !199, line: 2241, type: !225)
!1910 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h3aec9cd4dcb8b1b2E", scope: !1911, file: !199, line: 2241, type: !1912, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1914)
!1911 = !DINamespace(name: "sub_ptr", scope: !220)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{null, !225, !225}
!1914 = !{!1909, !1915}
!1915 = !DILocalVariable(name: "origin", arg: 2, scope: !1910, file: !199, line: 2241, type: !225)
!1916 = !DILocation(line: 2241, column: 39, scope: !1910, inlinedAt: !1917)
!1917 = distinct !DILocation(line: 789, column: 13, scope: !1902)
!1918 = !DILocation(line: 791, column: 58, scope: !1919, inlinedAt: !1917)
!1919 = !DILexicalBlockFile(scope: !1910, file: !219, discriminator: 0)
!1920 = !DILocation(line: 2242, column: 20, scope: !1910, inlinedAt: !1917)
!1921 = !DILocation(line: 2244, column: 21, scope: !1910, inlinedAt: !1917)
!1922 = !DILocation(line: 795, column: 28, scope: !1902)
!1923 = !DILocation(line: 795, column: 13, scope: !1904)
!1924 = !DILocation(line: 796, column: 17, scope: !1904)
!1925 = !DILocation(line: 796, column: 37, scope: !1904)
!1926 = !DILocation(line: 796, column: 9, scope: !1904)
!1927 = !DILocation(line: 798, column: 18, scope: !1904)
!1928 = !DILocation(line: 799, column: 6, scope: !1895)
!1929 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h7b445c194d2af29dE", scope: !1930, file: !219, line: 1609, type: !1725, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1931)
!1930 = !DINamespace(name: "{impl#1}", scope: !221)
!1931 = !{!1932}
!1932 = !DILocalVariable(name: "self", arg: 1, scope: !1929, file: !219, line: 1609, type: !170)
!1933 = !DILocation(line: 1609, column: 22, scope: !1929)
!1934 = !DILocation(line: 1610, column: 9, scope: !1929)
!1935 = !DILocation(line: 1611, column: 6, scope: !1929)
!1936 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1ecfccdfa8a3dcf6E", scope: !1930, file: !219, line: 1629, type: !1937, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1939)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!225, !170}
!1939 = !{!1940}
!1940 = !DILocalVariable(name: "self", arg: 1, scope: !1936, file: !219, line: 1629, type: !170)
!1941 = !DILocation(line: 1629, column: 25, scope: !1936)
!1942 = !DILocation(line: 1631, column: 6, scope: !1936)
!1943 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h08ad34a553a33f63E", scope: !1945, file: !1944, line: 347, type: !1947, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1953, retainedNodes: !1950)
!1944 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "a3c36e35ceb67ad777a82e040f0657ec")
!1945 = !DINamespace(name: "{impl#15}", scope: !1946)
!1946 = !DINamespace(name: "array", scope: !143)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!323, !1949, !175, !327}
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!1950 = !{!1951, !1952}
!1951 = !DILocalVariable(name: "self", arg: 1, scope: !1943, file: !1944, line: 347, type: !1949)
!1952 = !DILocalVariable(name: "index", arg: 2, scope: !1943, file: !1944, line: 347, type: !175)
!1953 = !{!191, !1954}
!1954 = !DITemplateTypeParameter(name: "I", type: !175)
!1955 = !DILocation(line: 347, column: 14, scope: !1943)
!1956 = !DILocation(line: 347, column: 21, scope: !1943)
!1957 = !DILocation(line: 348, column: 9, scope: !1943)
!1958 = !DILocation(line: 349, column: 6, scope: !1943)
!1959 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h3441dddc0c8eea40E", scope: !1960, file: !1944, line: 359, type: !1961, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1953, retainedNodes: !1964)
!1960 = !DINamespace(name: "{impl#16}", scope: !1946)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!354, !1963, !175, !327}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!1964 = !{!1965, !1966}
!1965 = !DILocalVariable(name: "self", arg: 1, scope: !1959, file: !1944, line: 359, type: !1963)
!1966 = !DILocalVariable(name: "index", arg: 2, scope: !1959, file: !1944, line: 359, type: !175)
!1967 = !DILocation(line: 359, column: 18, scope: !1959)
!1968 = !DILocation(line: 359, column: 29, scope: !1959)
!1969 = !DILocation(line: 360, column: 9, scope: !1959)
!1970 = !DILocation(line: 361, column: 6, scope: !1959)
!1971 = distinct !DISubprogram(name: "split_at_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h510dd90ebd855d82E", scope: !1115, file: !1972, line: 1636, type: !1973, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1979)
!1972 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "659742f64ef071169c3779d650b2f3ba")
!1973 = !DISubroutineType(types: !1974)
!1974 = !{!1975, !354, !9, !327}
!1975 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut [bootloader::bootinfo::memory_map::MemoryRegion], &mut [bootloader::bootinfo::memory_map::MemoryRegion])", file: !2, size: 256, align: 64, elements: !1976, templateParams: !24, identifier: "3e5803f1505ec5609b2781662b2b366")
!1976 = !{!1977, !1978}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1975, file: !2, baseType: !354, size: 128, align: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1975, file: !2, baseType: !354, size: 128, align: 64, offset: 128)
!1979 = !{!1980, !1981}
!1980 = !DILocalVariable(name: "self", arg: 1, scope: !1971, file: !1972, line: 1636, type: !354)
!1981 = !DILocalVariable(name: "mid", arg: 2, scope: !1971, file: !1972, line: 1636, type: !9)
!1982 = !DILocation(line: 1636, column: 31, scope: !1971)
!1983 = !DILocation(line: 1636, column: 42, scope: !1971)
!1984 = !DILocation(line: 1637, column: 17, scope: !1971)
!1985 = !DILocation(line: 1637, column: 9, scope: !1971)
!1986 = !DILocation(line: 1640, column: 18, scope: !1971)
!1987 = !DILocation(line: 1641, column: 6, scope: !1971)
!1988 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1a33f4b62539bcaaE", scope: !1115, file: !1972, line: 398, type: !1989, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1994, retainedNodes: !1991)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!12, !323, !9}
!1991 = !{!1992, !1993}
!1992 = !DILocalVariable(name: "self", arg: 1, scope: !1988, file: !1972, line: 398, type: !323)
!1993 = !DILocalVariable(name: "index", arg: 2, scope: !1988, file: !1972, line: 398, type: !9)
!1994 = !{!191, !1995}
!1995 = !DITemplateTypeParameter(name: "I", type: !9)
!1996 = !DILocation(line: 398, column: 42, scope: !1988)
!1997 = !DILocation(line: 398, column: 49, scope: !1988)
!1998 = !DILocation(line: 405, column: 20, scope: !1988)
!1999 = !DILocation(line: 406, column: 6, scope: !1988)
!2000 = distinct !DISubprogram(name: "as_mut_ptr_range<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h367bf9c41ab67cbfE", scope: !1115, file: !1972, line: 586, type: !2001, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2009)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!2003, !354}
!2003 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<*mut bootloader::bootinfo::memory_map::MemoryRegion>", scope: !176, file: !2, size: 128, align: 64, elements: !2004, templateParams: !2007, identifier: "8127a27b8aa9ccec20a1c04b876ad996")
!2004 = !{!2005, !2006}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2003, file: !2, baseType: !294, size: 64, align: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2003, file: !2, baseType: !294, size: 64, align: 64, offset: 64)
!2007 = !{!2008}
!2008 = !DITemplateTypeParameter(name: "Idx", type: !294)
!2009 = !{!2010, !2011, !2013}
!2010 = !DILocalVariable(name: "self", arg: 1, scope: !2000, file: !1972, line: 586, type: !354)
!2011 = !DILocalVariable(name: "start", scope: !2012, file: !1972, line: 587, type: !294, align: 8)
!2012 = distinct !DILexicalBlock(scope: !2000, file: !1972, line: 587, column: 9)
!2013 = !DILocalVariable(name: "end", scope: !2014, file: !1972, line: 589, type: !294, align: 8)
!2014 = distinct !DILexicalBlock(scope: !2012, file: !1972, line: 589, column: 9)
!2015 = !DILocation(line: 586, column: 35, scope: !2000)
!2016 = !DILocalVariable(name: "self", arg: 1, scope: !2017, file: !1972, line: 506, type: !354)
!2017 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h4780e86b786ccd92E", scope: !1115, file: !1972, line: 506, type: !2018, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2020)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{!294, !354}
!2020 = !{!2016}
!2021 = !DILocation(line: 506, column: 29, scope: !2017, inlinedAt: !2022)
!2022 = distinct !DILocation(line: 587, column: 21, scope: !2000)
!2023 = !DILocation(line: 587, column: 21, scope: !2000)
!2024 = !DILocation(line: 587, column: 13, scope: !2012)
!2025 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2026)
!2026 = distinct !DILocation(line: 589, column: 28, scope: !2012)
!2027 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2026)
!2028 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2029)
!2029 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2026)
!2030 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2029)
!2031 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2029)
!2032 = !DILocation(line: 589, column: 28, scope: !2012)
!2033 = !DILocation(line: 589, column: 13, scope: !2014)
!2034 = !DILocation(line: 590, column: 9, scope: !2014)
!2035 = !DILocation(line: 591, column: 6, scope: !2000)
!2036 = distinct !DISubprogram(name: "sort_unstable_by<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h031ffa24d38669c7E", scope: !1115, file: !1972, line: 2688, type: !2037, scopeLine: 2688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2042, retainedNodes: !2039)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{null, !354, !1119}
!2039 = !{!2040, !2041}
!2040 = !DILocalVariable(name: "self", arg: 1, scope: !2036, file: !1972, line: 2688, type: !354)
!2041 = !DILocalVariable(name: "compare", arg: 2, scope: !2036, file: !1972, line: 2688, type: !1119)
!2042 = !{!191, !2043}
!2043 = !DITemplateTypeParameter(name: "F", type: !1119)
!2044 = !DILocation(line: 2688, column: 32, scope: !2036)
!2045 = !DILocation(line: 2688, column: 43, scope: !2036)
!2046 = !DILocation(line: 2692, column: 31, scope: !2036)
!2047 = !DILocation(line: 2692, column: 9, scope: !2036)
!2048 = !{i64 1}
!2049 = !DILocation(line: 2693, column: 6, scope: !2036)
!2050 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h96005e6f6279b1c3E", scope: !1114, file: !1972, line: 2692, type: !2051, scopeLine: 2692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2042, retainedNodes: !2053)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{!421, !1112, !12, !12}
!2053 = !{!2054, !2055, !2056}
!2054 = !DILocalVariable(name: "a", arg: 2, scope: !2050, file: !1972, line: 2692, type: !12)
!2055 = !DILocalVariable(name: "b", arg: 3, scope: !2050, file: !1972, line: 2692, type: !12)
!2056 = !DILocalVariable(name: "compare", scope: !2050, file: !1972, line: 2688, type: !1119, align: 1)
!2057 = !DILocation(line: 2688, column: 47, scope: !2050)
!2058 = !DILocation(line: 2692, column: 32, scope: !2050)
!2059 = !DILocation(line: 2692, column: 35, scope: !2050)
!2060 = !DILocation(line: 2692, column: 38, scope: !2050)
!2061 = !DILocation(line: 2692, column: 69, scope: !2050)
!2062 = distinct !DISubprogram(name: "split_at_mut_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h3f6deb33b10d23aaE", scope: !1115, file: !1972, line: 1744, type: !2063, scopeLine: 1744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2065)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{!1975, !354, !9}
!2065 = !{!2066, !2067, !2068, !2070}
!2066 = !DILocalVariable(name: "self", arg: 1, scope: !2062, file: !1972, line: 1744, type: !354)
!2067 = !DILocalVariable(name: "mid", arg: 2, scope: !2062, file: !1972, line: 1744, type: !9)
!2068 = !DILocalVariable(name: "len", scope: !2069, file: !1972, line: 1745, type: !9, align: 8)
!2069 = distinct !DILexicalBlock(scope: !2062, file: !1972, line: 1745, column: 9)
!2070 = !DILocalVariable(name: "ptr", scope: !2071, file: !1972, line: 1746, type: !294, align: 8)
!2071 = distinct !DILexicalBlock(scope: !2069, file: !1972, line: 1746, column: 9)
!2072 = !DILocation(line: 1744, column: 48, scope: !2062)
!2073 = !DILocation(line: 1744, column: 59, scope: !2062)
!2074 = !DILocation(line: 1745, column: 19, scope: !2062)
!2075 = !DILocation(line: 1745, column: 13, scope: !2069)
!2076 = !DILocation(line: 506, column: 29, scope: !2017, inlinedAt: !2077)
!2077 = distinct !DILocation(line: 1746, column: 19, scope: !2069)
!2078 = !DILocation(line: 1746, column: 19, scope: !2069)
!2079 = !DILocation(line: 1746, column: 13, scope: !2071)
!2080 = !DILocation(line: 1753, column: 13, scope: !2071)
!2081 = !DILocalVariable(name: "mid", arg: 1, scope: !2082, file: !199, line: 2241, type: !9)
!2082 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h651179d681aba745E", scope: !2083, file: !199, line: 2241, type: !2084, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2086)
!2083 = !DINamespace(name: "split_at_mut_unchecked", scope: !1115)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{null, !9, !9}
!2086 = !{!2081, !2087}
!2087 = !DILocalVariable(name: "len", arg: 2, scope: !2082, file: !199, line: 2241, type: !9)
!2088 = !DILocation(line: 2241, column: 39, scope: !2082, inlinedAt: !2089)
!2089 = distinct !DILocation(line: 1753, column: 13, scope: !2071)
!2090 = !DILocation(line: 1755, column: 45, scope: !2091, inlinedAt: !2089)
!2091 = !DILexicalBlockFile(scope: !2082, file: !1972, discriminator: 0)
!2092 = !DILocation(line: 2242, column: 20, scope: !2082, inlinedAt: !2089)
!2093 = !DILocation(line: 2244, column: 21, scope: !2082, inlinedAt: !2089)
!2094 = !DILocation(line: 1757, column: 14, scope: !2071)
!2095 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2096)
!2096 = distinct !DILocation(line: 1757, column: 63, scope: !2071)
!2097 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2096)
!2098 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2099)
!2099 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2096)
!2100 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2099)
!2101 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2099)
!2102 = !DILocation(line: 1757, column: 77, scope: !2071)
!2103 = !DILocation(line: 1757, column: 44, scope: !2071)
!2104 = !DILocation(line: 1757, column: 13, scope: !2071)
!2105 = !DILocation(line: 1759, column: 6, scope: !2062)
!2106 = distinct !DISubprogram(name: "iter<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17heee3b0195dddc17cE", scope: !1115, file: !1972, line: 741, type: !2107, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2109)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{!815, !323}
!2109 = !{!2110}
!2110 = !DILocalVariable(name: "self", arg: 1, scope: !2106, file: !1972, line: 741, type: !323)
!2111 = !DILocation(line: 741, column: 17, scope: !2106)
!2112 = !DILocation(line: 742, column: 9, scope: !2106)
!2113 = !DILocation(line: 743, column: 6, scope: !2106)
!2114 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hfb1a6b474d31dd0dE", scope: !1115, file: !1972, line: 615, type: !2115, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2117)
!2115 = !DISubroutineType(types: !2116)
!2116 = !{null, !354, !9, !9, !327}
!2117 = !{!2118, !2119, !2120, !2121, !2123}
!2118 = !DILocalVariable(name: "self", arg: 1, scope: !2114, file: !1972, line: 615, type: !354)
!2119 = !DILocalVariable(name: "a", arg: 2, scope: !2114, file: !1972, line: 615, type: !9)
!2120 = !DILocalVariable(name: "b", arg: 3, scope: !2114, file: !1972, line: 615, type: !9)
!2121 = !DILocalVariable(name: "pa", scope: !2122, file: !1972, line: 618, type: !294, align: 8)
!2122 = distinct !DILexicalBlock(scope: !2114, file: !1972, line: 618, column: 9)
!2123 = !DILocalVariable(name: "pb", scope: !2124, file: !1972, line: 619, type: !294, align: 8)
!2124 = distinct !DILexicalBlock(scope: !2122, file: !1972, line: 619, column: 9)
!2125 = !DILocation(line: 615, column: 23, scope: !2114)
!2126 = !DILocation(line: 615, column: 34, scope: !2114)
!2127 = !DILocation(line: 615, column: 44, scope: !2114)
!2128 = !DILocation(line: 618, column: 36, scope: !2114)
!2129 = !DILocation(line: 618, column: 18, scope: !2114)
!2130 = !DILocation(line: 618, column: 13, scope: !2122)
!2131 = !DILocation(line: 619, column: 36, scope: !2122)
!2132 = !DILocation(line: 619, column: 18, scope: !2122)
!2133 = !DILocation(line: 619, column: 13, scope: !2124)
!2134 = !DILocation(line: 625, column: 13, scope: !2124)
!2135 = !DILocation(line: 627, column: 6, scope: !2114)
!2136 = distinct !DISubprogram(name: "reverse<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h8769afaba292f800E", scope: !1115, file: !1972, line: 683, type: !2137, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2139)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{null, !354}
!2139 = !{!2140, !2141, !2143, !2145, !2146, !2148}
!2140 = !DILocalVariable(name: "self", arg: 1, scope: !2136, file: !1972, line: 683, type: !354)
!2141 = !DILocalVariable(name: "half_len", scope: !2142, file: !1972, line: 684, type: !9, align: 8)
!2142 = distinct !DILexicalBlock(scope: !2136, file: !1972, line: 684, column: 9)
!2143 = !DILocalVariable(name: "start", scope: !2144, file: !1972, line: 685, type: !294, align: 8)
!2144 = distinct !DILexicalBlock(scope: !2142, file: !1972, line: 685, column: 9)
!2145 = !DILocalVariable(name: "end", scope: !2144, file: !1972, line: 685, type: !294, align: 8)
!2146 = !DILocalVariable(name: "front_half", scope: !2147, file: !1972, line: 689, type: !354, align: 8)
!2147 = distinct !DILexicalBlock(scope: !2144, file: !1972, line: 689, column: 9)
!2148 = !DILocalVariable(name: "back_half", scope: !2147, file: !1972, line: 689, type: !354, align: 8)
!2149 = !DILocation(line: 683, column: 26, scope: !2136)
!2150 = !DILocation(line: 684, column: 24, scope: !2136)
!2151 = !DILocation(line: 684, column: 13, scope: !2142)
!2152 = !DILocation(line: 685, column: 36, scope: !2142)
!2153 = !DILocation(line: 685, column: 21, scope: !2142)
!2154 = !DILocation(line: 685, column: 21, scope: !2144)
!2155 = !DILocation(line: 685, column: 28, scope: !2142)
!2156 = !DILocation(line: 685, column: 28, scope: !2144)
!2157 = !DILocation(line: 695, column: 21, scope: !2144)
!2158 = !DILocalVariable(name: "self", arg: 1, scope: !2159, file: !276, line: 1098, type: !294)
!2159 = distinct !DISubprogram(name: "sub<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h57648b3d4c52fe61E", scope: !300, file: !276, line: 1098, type: !301, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2160)
!2160 = !{!2158, !2161}
!2161 = !DILocalVariable(name: "count", arg: 2, scope: !2159, file: !276, line: 1098, type: !9)
!2162 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !2163)
!2163 = distinct !DILocation(line: 696, column: 47, scope: !2144)
!2164 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !2163)
!2165 = !DILocalVariable(name: "self", arg: 1, scope: !2166, file: !2167, line: 1358, type: !235)
!2166 = distinct !DISubprogram(name: "wrapping_neg", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17hb7b4e2dd2b5a7575E", scope: !2168, file: !2167, line: 1358, type: !2169, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2171)
!2167 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "7c9d22d8d2e1d9742bccc1dbc079da0e")
!2168 = !DINamespace(name: "{impl#5}", scope: !1015)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!235, !235}
!2171 = !{!2165}
!2172 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !2173)
!2173 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !2163)
!2174 = !DILocalVariable(name: "self", arg: 1, scope: !2175, file: !2167, line: 1183, type: !235)
!2175 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_sub17h13b3cf5a1e5bdc9bE", scope: !2168, file: !2167, line: 1183, type: !2176, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2178)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!235, !235, !235}
!2178 = !{!2174, !2179}
!2179 = !DILocalVariable(name: "rhs", arg: 2, scope: !2175, file: !2167, line: 1183, type: !235)
!2180 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !2181)
!2181 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !2173)
!2182 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !2181)
!2183 = !DILocation(line: 1184, column: 13, scope: !2175, inlinedAt: !2181)
!2184 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2185)
!2185 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !2163)
!2186 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2185)
!2187 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2185)
!2188 = !DILocation(line: 696, column: 21, scope: !2144)
!2189 = !DILocation(line: 694, column: 17, scope: !2144)
!2190 = !DILocation(line: 689, column: 14, scope: !2144)
!2191 = !DILocation(line: 689, column: 14, scope: !2147)
!2192 = !DILocation(line: 689, column: 26, scope: !2144)
!2193 = !DILocation(line: 689, column: 26, scope: !2147)
!2194 = !DILocation(line: 703, column: 9, scope: !2147)
!2195 = !DILocation(line: 722, column: 6, scope: !2136)
!2196 = distinct !DISubprogram(name: "revswap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17hf8bf600a478b5065E", scope: !2197, file: !1972, line: 706, type: !2198, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2200)
!2197 = !DINamespace(name: "reverse", scope: !1115)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{null, !354, !354, !9}
!2200 = !{!2201, !2202, !2203, !2204, !2206, !2207}
!2201 = !DILocalVariable(name: "a", arg: 1, scope: !2196, file: !1972, line: 706, type: !354)
!2202 = !DILocalVariable(name: "b", arg: 2, scope: !2196, file: !1972, line: 706, type: !354)
!2203 = !DILocalVariable(name: "n", arg: 3, scope: !2196, file: !1972, line: 706, type: !9)
!2204 = !DILocalVariable(name: "a", scope: !2205, file: !1972, line: 714, type: !354, align: 8)
!2205 = distinct !DILexicalBlock(scope: !2196, file: !1972, line: 714, column: 13)
!2206 = !DILocalVariable(name: "b", scope: !2205, file: !1972, line: 714, type: !354, align: 8)
!2207 = !DILocalVariable(name: "i", scope: !2208, file: !1972, line: 716, type: !9, align: 8)
!2208 = distinct !DILexicalBlock(scope: !2205, file: !1972, line: 716, column: 13)
!2209 = !DILocation(line: 706, column: 29, scope: !2196)
!2210 = !DILocation(line: 706, column: 42, scope: !2196)
!2211 = !DILocation(line: 706, column: 55, scope: !2196)
!2212 = !DILocation(line: 716, column: 17, scope: !2208)
!2213 = !DILocation(line: 707, column: 27, scope: !2196)
!2214 = !DILocation(line: 707, column: 13, scope: !2196)
!2215 = !DILocation(line: 708, column: 27, scope: !2196)
!2216 = !DILocation(line: 708, column: 13, scope: !2196)
!2217 = !DILocation(line: 714, column: 34, scope: !2196)
!2218 = !DILocation(line: 714, column: 32, scope: !2196)
!2219 = !DILocation(line: 714, column: 47, scope: !2196)
!2220 = !DILocation(line: 714, column: 45, scope: !2196)
!2221 = !DILocation(line: 714, column: 26, scope: !2196)
!2222 = !DILocation(line: 714, column: 18, scope: !2196)
!2223 = !DILocation(line: 714, column: 18, scope: !2205)
!2224 = !DILocation(line: 714, column: 21, scope: !2196)
!2225 = !DILocation(line: 714, column: 21, scope: !2205)
!2226 = !DILocation(line: 716, column: 25, scope: !2205)
!2227 = !DILocation(line: 717, column: 13, scope: !2208)
!2228 = !DILocation(line: 717, column: 19, scope: !2208)
!2229 = !DILocation(line: 721, column: 10, scope: !2196)
!2230 = !DILocation(line: 718, column: 34, scope: !2208)
!2231 = !DILocation(line: 718, column: 32, scope: !2208)
!2232 = !DILocation(line: 718, column: 27, scope: !2208)
!2233 = !DILocation(line: 718, column: 45, scope: !2208)
!2234 = !DILocation(line: 718, column: 53, scope: !2208)
!2235 = !DILocation(line: 718, column: 43, scope: !2208)
!2236 = !DILocation(line: 718, column: 38, scope: !2208)
!2237 = !DILocation(line: 718, column: 17, scope: !2208)
!2238 = !DILocation(line: 719, column: 17, scope: !2208)
!2239 = distinct !DISubprogram(name: "from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h6654d3baa6bb0397E", scope: !2241, file: !2240, line: 137, type: !2242, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2244)
!2240 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "4e9e8b780584cc248c586456197d9cf5")
!2241 = !DINamespace(name: "raw", scope: !167)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!354, !294, !9}
!2244 = !{!2245, !2246}
!2245 = !DILocalVariable(name: "data", arg: 1, scope: !2239, file: !2240, line: 137, type: !294)
!2246 = !DILocalVariable(name: "len", arg: 2, scope: !2239, file: !2240, line: 137, type: !9)
!2247 = !DILocation(line: 137, column: 47, scope: !2239)
!2248 = !DILocation(line: 137, column: 61, scope: !2239)
!2249 = !DILocation(line: 140, column: 9, scope: !2239)
!2250 = !DILocalVariable(name: "data", arg: 1, scope: !2251, file: !199, line: 2241, type: !294)
!2251 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17hd3684b07dc1ee6d3E", scope: !2252, file: !199, line: 2241, type: !2253, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2255)
!2252 = !DINamespace(name: "from_raw_parts_mut", scope: !2241)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{null, !294, !9}
!2255 = !{!2250, !2256}
!2256 = !DILocalVariable(name: "len", arg: 2, scope: !2251, file: !199, line: 2241, type: !9)
!2257 = !DILocation(line: 2241, column: 39, scope: !2251, inlinedAt: !2258)
!2258 = distinct !DILocation(line: 140, column: 9, scope: !2239)
!2259 = !DILocation(line: 142, column: 46, scope: !2260, inlinedAt: !2258)
!2260 = !DILexicalBlockFile(scope: !2251, file: !2240, discriminator: 0)
!2261 = !DILocation(line: 143, column: 20, scope: !2260, inlinedAt: !2258)
!2262 = !DILocation(line: 2242, column: 20, scope: !2251, inlinedAt: !2258)
!2263 = !DILocation(line: 2244, column: 21, scope: !2251, inlinedAt: !2258)
!2264 = !DILocation(line: 145, column: 15, scope: !2239)
!2265 = !DILocation(line: 147, column: 2, scope: !2239)
!2266 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8fe4de0b40b45dc1E", scope: !815, file: !2267, line: 84, type: !2107, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2268)
!2267 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "873209af95ace3fbbcdd03c09eda7332")
!2268 = !{!2269, !2270, !2272}
!2269 = !DILocalVariable(name: "slice", arg: 1, scope: !2266, file: !2267, line: 84, type: !323)
!2270 = !DILocalVariable(name: "ptr", scope: !2271, file: !2267, line: 85, type: !225, align: 8)
!2271 = distinct !DILexicalBlock(scope: !2266, file: !2267, line: 85, column: 9)
!2272 = !DILocalVariable(name: "end", scope: !2273, file: !2267, line: 90, type: !225, align: 8)
!2273 = distinct !DILexicalBlock(scope: !2271, file: !2267, line: 90, column: 13)
!2274 = !DILocation(line: 84, column: 23, scope: !2266)
!2275 = !DILocation(line: 90, column: 17, scope: !2273)
!2276 = !DILocalVariable(name: "self", arg: 1, scope: !2277, file: !1972, line: 476, type: !323)
!2277 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h72dfb138e731785dE", scope: !1115, file: !1972, line: 476, type: !2278, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2280)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{!225, !323}
!2280 = !{!2276}
!2281 = !DILocation(line: 476, column: 25, scope: !2277, inlinedAt: !2282)
!2282 = distinct !DILocation(line: 85, column: 19, scope: !2266)
!2283 = !DILocation(line: 85, column: 19, scope: !2266)
!2284 = !DILocation(line: 85, column: 13, scope: !2271)
!2285 = !DILocation(line: 88, column: 21, scope: !2271)
!2286 = !DILocation(line: 88, column: 20, scope: !2271)
!2287 = !DILocation(line: 88, column: 13, scope: !2271)
!2288 = !DILocation(line: 91, column: 20, scope: !2271)
!2289 = !DILocation(line: 915, column: 29, scope: !218, inlinedAt: !2290)
!2290 = distinct !DILocation(line: 91, column: 76, scope: !2271)
!2291 = !DILocation(line: 915, column: 35, scope: !218, inlinedAt: !2290)
!2292 = !DILocation(line: 460, column: 32, scope: !232, inlinedAt: !2293)
!2293 = distinct !DILocation(line: 920, column: 18, scope: !218, inlinedAt: !2290)
!2294 = !DILocation(line: 460, column: 38, scope: !232, inlinedAt: !2293)
!2295 = !DILocation(line: 465, column: 18, scope: !232, inlinedAt: !2293)
!2296 = !DILocation(line: 91, column: 76, scope: !2271)
!2297 = !DILocalVariable(name: "self", arg: 1, scope: !2298, file: !219, line: 1101, type: !225)
!2298 = distinct !DISubprogram(name: "wrapping_byte_add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$17wrapping_byte_add17hfb7b8961e5895d6fE", scope: !220, file: !219, line: 1101, type: !223, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2299)
!2299 = !{!2297, !2300}
!2300 = !DILocalVariable(name: "count", arg: 2, scope: !2298, file: !219, line: 1101, type: !9)
!2301 = !DILocation(line: 1101, column: 36, scope: !2298, inlinedAt: !2302)
!2302 = distinct !DILocation(line: 91, column: 32, scope: !2271)
!2303 = !DILocation(line: 1101, column: 42, scope: !2298, inlinedAt: !2302)
!2304 = !DILocalVariable(name: "self", arg: 1, scope: !2305, file: !219, line: 58, type: !225)
!2305 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h853c112eb38468d9E", scope: !220, file: !219, line: 58, type: !2306, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1231, retainedNodes: !2308)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{!1846, !225}
!2308 = !{!2304}
!2309 = !DILocation(line: 58, column: 26, scope: !2305, inlinedAt: !2310)
!2310 = distinct !DILocation(line: 1102, column: 9, scope: !2298, inlinedAt: !2302)
!2311 = !DILocalVariable(name: "self", arg: 1, scope: !2312, file: !219, line: 1080, type: !1846)
!2312 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17hedf2539a268335acE", scope: !220, file: !219, line: 1080, type: !2313, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !2315)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!1846, !1846, !9}
!2315 = !{!2311, !2316}
!2316 = !DILocalVariable(name: "count", arg: 2, scope: !2312, file: !219, line: 1080, type: !9)
!2317 = !DILocation(line: 1080, column: 31, scope: !2312, inlinedAt: !2318)
!2318 = distinct !DILocation(line: 1102, column: 9, scope: !2298, inlinedAt: !2302)
!2319 = !DILocation(line: 1080, column: 37, scope: !2312, inlinedAt: !2318)
!2320 = !DILocalVariable(name: "self", arg: 1, scope: !2321, file: !219, line: 540, type: !1846)
!2321 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hda92cc98f0661b63E", scope: !220, file: !219, line: 540, type: !2322, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !2324)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!1846, !1846, !235}
!2324 = !{!2320, !2325}
!2325 = !DILocalVariable(name: "count", arg: 2, scope: !2321, file: !219, line: 540, type: !235)
!2326 = !DILocation(line: 540, column: 34, scope: !2321, inlinedAt: !2327)
!2327 = distinct !DILocation(line: 1084, column: 9, scope: !2312, inlinedAt: !2318)
!2328 = !DILocation(line: 540, column: 40, scope: !2321, inlinedAt: !2327)
!2329 = !DILocation(line: 545, column: 18, scope: !2321, inlinedAt: !2327)
!2330 = !DILocation(line: 1102, column: 9, scope: !2298, inlinedAt: !2302)
!2331 = !DILocation(line: 91, column: 32, scope: !2271)
!2332 = !DILocation(line: 93, column: 25, scope: !2273)
!2333 = !DILocation(line: 93, column: 64, scope: !2273)
!2334 = !DILocation(line: 93, column: 13, scope: !2273)
!2335 = !DILocation(line: 95, column: 6, scope: !2266)
!2336 = distinct !DISubprogram(name: "insert_head<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_head17hb00f1094bbc019a7E", scope: !1142, file: !2337, line: 88, type: !2338, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !2340)
!2337 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs", directory: "", checksumkind: CSK_MD5, checksum: "cac0cfdd770f78018515ac352993cd5b")
!2338 = !DISubroutineType(types: !2339)
!2339 = !{null, !354, !1112}
!2340 = !{!2341, !2342, !2343, !2345, !2347, !2349, !2351}
!2341 = !DILocalVariable(name: "v", arg: 1, scope: !2336, file: !2337, line: 88, type: !354)
!2342 = !DILocalVariable(name: "is_less", arg: 2, scope: !2336, file: !2337, line: 88, type: !1112)
!2343 = !DILocalVariable(name: "arr_ptr", scope: !2344, file: !2337, line: 97, type: !294, align: 8)
!2344 = distinct !DILexicalBlock(scope: !2336, file: !2337, line: 97, column: 13)
!2345 = !DILocalVariable(name: "tmp", scope: !2346, file: !2337, line: 116, type: !655, align: 8)
!2346 = distinct !DILexicalBlock(scope: !2344, file: !2337, line: 116, column: 13)
!2347 = !DILocalVariable(name: "hole", scope: !2348, file: !2337, line: 128, type: !1141, align: 8)
!2348 = distinct !DILexicalBlock(scope: !2346, file: !2337, line: 128, column: 13)
!2349 = !DILocalVariable(name: "iter", scope: !2350, file: !2337, line: 131, type: !175, align: 8)
!2350 = distinct !DILexicalBlock(scope: !2348, file: !2337, line: 131, column: 13)
!2351 = !DILocalVariable(name: "i", scope: !2352, file: !2337, line: 131, type: !9, align: 8)
!2352 = distinct !DILexicalBlock(scope: !2350, file: !2337, line: 131, column: 33)
!2353 = !{!191, !1131}
!2354 = !DILocation(line: 88, column: 29, scope: !2336)
!2355 = !DILocation(line: 88, column: 42, scope: !2336)
!2356 = !DILocation(line: 116, column: 17, scope: !2346)
!2357 = !DILocation(line: 128, column: 17, scope: !2348)
!2358 = !DILocation(line: 131, column: 22, scope: !2350)
!2359 = !DILocation(line: 92, column: 19, scope: !2336)
!2360 = !DILocation(line: 92, column: 5, scope: !2336)
!2361 = !DILocation(line: 96, column: 20, scope: !2336)
!2362 = !DILocation(line: 96, column: 40, scope: !2336)
!2363 = !DILocation(line: 96, column: 12, scope: !2336)
!2364 = !DILocation(line: 141, column: 2, scope: !2336)
!2365 = !DILocation(line: 506, column: 29, scope: !2017, inlinedAt: !2366)
!2366 = distinct !DILocation(line: 97, column: 27, scope: !2336)
!2367 = !DILocation(line: 97, column: 27, scope: !2336)
!2368 = !DILocation(line: 97, column: 17, scope: !2344)
!2369 = !DILocation(line: 116, column: 46, scope: !2344)
!2370 = !DILocation(line: 70, column: 22, scope: !1003, inlinedAt: !2371)
!2371 = distinct !DILocation(line: 116, column: 23, scope: !2344)
!2372 = !DILocation(line: 71, column: 9, scope: !1003, inlinedAt: !2371)
!2373 = !DILocalVariable(name: "self", arg: 1, scope: !2374, file: !1004, line: 153, type: !2378)
!2374 = distinct !DISubprogram(name: "deref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha4b3f980261beedaE", scope: !2375, file: !1004, line: 153, type: !2376, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2379)
!2375 = !DINamespace(name: "{impl#2}", scope: !656)
!2376 = !DISubroutineType(types: !2377)
!2377 = !{!12, !2378}
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !655, size: 64, align: 64, dwarfAddressSpace: 0)
!2379 = !{!2373}
!2380 = !DILocation(line: 153, column: 14, scope: !2374, inlinedAt: !2381)
!2381 = distinct !DILocation(line: 128, column: 50, scope: !2346)
!2382 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2383)
!2383 = distinct !DILocation(line: 128, column: 62, scope: !2346)
!2384 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2383)
!2385 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2386)
!2386 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2383)
!2387 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2386)
!2388 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2386)
!2389 = !DILocation(line: 128, column: 28, scope: !2346)
!2390 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2391)
!2391 = distinct !DILocation(line: 129, column: 38, scope: !2348)
!2392 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2391)
!2393 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2394)
!2394 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2391)
!2395 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2394)
!2396 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2394)
!2397 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2398)
!2398 = distinct !DILocation(line: 129, column: 54, scope: !2348)
!2399 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2398)
!2400 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2401)
!2401 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2398)
!2402 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2401)
!2403 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2401)
!2404 = !DILocation(line: 129, column: 13, scope: !2348)
!2405 = !DILocation(line: 131, column: 22, scope: !2348)
!2406 = !DILocation(line: 131, column: 13, scope: !2350)
!2407 = !DILocation(line: 139, column: 9, scope: !2346)
!2408 = !DILocation(line: 131, column: 17, scope: !2350)
!2409 = !DILocation(line: 131, column: 17, scope: !2352)
!2410 = !DILocation(line: 132, column: 30, scope: !2352)
!2411 = !DILocation(line: 132, column: 29, scope: !2352)
!2412 = !DILocation(line: 153, column: 14, scope: !2374, inlinedAt: !2413)
!2413 = distinct !DILocation(line: 132, column: 51, scope: !2352)
!2414 = !DILocation(line: 132, column: 21, scope: !2352)
!2415 = !DILocation(line: 132, column: 20, scope: !2352)
!2416 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2417)
!2417 = distinct !DILocation(line: 135, column: 42, scope: !2352)
!2418 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2417)
!2419 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2420)
!2420 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2417)
!2421 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2420)
!2422 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2420)
!2423 = !DILocation(line: 135, column: 70, scope: !2352)
!2424 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2425)
!2425 = distinct !DILocation(line: 135, column: 58, scope: !2352)
!2426 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2425)
!2427 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2428)
!2428 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2425)
!2429 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2428)
!2430 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2428)
!2431 = !DILocation(line: 135, column: 17, scope: !2352)
!2432 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2433)
!2433 = distinct !DILocation(line: 136, column: 29, scope: !2352)
!2434 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2433)
!2435 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2436)
!2436 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2433)
!2437 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2436)
!2438 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2436)
!2439 = !DILocation(line: 136, column: 17, scope: !2352)
!2440 = distinct !DISubprogram(name: "insert_tail<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_tail17h7e21238243f0b54eE", scope: !1142, file: !2337, line: 35, type: !2338, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !2441)
!2441 = !{!2442, !2443, !2444, !2446, !2448, !2450, !2452, !2454, !2464, !2466}
!2442 = !DILocalVariable(name: "v", arg: 1, scope: !2440, file: !2337, line: 35, type: !354)
!2443 = !DILocalVariable(name: "is_less", arg: 2, scope: !2440, file: !2337, line: 35, type: !1112)
!2444 = !DILocalVariable(name: "arr_ptr", scope: !2445, file: !2337, line: 41, type: !294, align: 8)
!2445 = distinct !DILexicalBlock(scope: !2440, file: !2337, line: 41, column: 5)
!2446 = !DILocalVariable(name: "i", scope: !2447, file: !2337, line: 42, type: !9, align: 8)
!2447 = distinct !DILexicalBlock(scope: !2445, file: !2337, line: 42, column: 5)
!2448 = !DILocalVariable(name: "i_ptr", scope: !2449, file: !2337, line: 47, type: !294, align: 8)
!2449 = distinct !DILexicalBlock(scope: !2447, file: !2337, line: 47, column: 9)
!2450 = !DILocalVariable(name: "tmp", scope: !2451, file: !2337, line: 56, type: !655, align: 8)
!2451 = distinct !DILexicalBlock(scope: !2449, file: !2337, line: 56, column: 13)
!2452 = !DILocalVariable(name: "hole", scope: !2453, file: !2337, line: 67, type: !1141, align: 8)
!2453 = distinct !DILexicalBlock(scope: !2451, file: !2337, line: 67, column: 13)
!2454 = !DILocalVariable(name: "iter", scope: !2455, file: !2337, line: 71, type: !2456, align: 8)
!2455 = distinct !DILexicalBlock(scope: !2453, file: !2337, line: 71, column: 13)
!2456 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !2457, file: !2, size: 128, align: 64, elements: !2460, templateParams: !2462, identifier: "b035ab8d35b9218171532b8555d261f")
!2457 = !DINamespace(name: "rev", scope: !2458)
!2458 = !DINamespace(name: "adapters", scope: !2459)
!2459 = !DINamespace(name: "iter", scope: !143)
!2460 = !{!2461}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2456, file: !2, baseType: !175, size: 128, align: 64)
!2462 = !{!2463}
!2463 = !DITemplateTypeParameter(name: "T", type: !175)
!2464 = !DILocalVariable(name: "j", scope: !2465, file: !2337, line: 71, type: !9, align: 8)
!2465 = distinct !DILexicalBlock(scope: !2455, file: !2337, line: 71, column: 41)
!2466 = !DILocalVariable(name: "j_ptr", scope: !2467, file: !2337, line: 72, type: !294, align: 8)
!2467 = distinct !DILexicalBlock(scope: !2465, file: !2337, line: 72, column: 17)
!2468 = !DILocation(line: 35, column: 29, scope: !2440)
!2469 = !DILocation(line: 35, column: 42, scope: !2440)
!2470 = !DILocation(line: 56, column: 17, scope: !2451)
!2471 = !DILocation(line: 67, column: 17, scope: !2453)
!2472 = !DILocation(line: 71, column: 22, scope: !2455)
!2473 = !DILocation(line: 39, column: 19, scope: !2440)
!2474 = !DILocation(line: 39, column: 5, scope: !2440)
!2475 = !DILocation(line: 506, column: 29, scope: !2017, inlinedAt: !2476)
!2476 = distinct !DILocation(line: 41, column: 19, scope: !2440)
!2477 = !DILocation(line: 41, column: 19, scope: !2440)
!2478 = !DILocation(line: 41, column: 9, scope: !2445)
!2479 = !DILocation(line: 42, column: 13, scope: !2445)
!2480 = !DILocation(line: 42, column: 9, scope: !2447)
!2481 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2482)
!2482 = distinct !DILocation(line: 47, column: 21, scope: !2447)
!2483 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2482)
!2484 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2485)
!2485 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2482)
!2486 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2485)
!2487 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2485)
!2488 = !DILocation(line: 47, column: 21, scope: !2447)
!2489 = !DILocation(line: 47, column: 13, scope: !2449)
!2490 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !2491)
!2491 = distinct !DILocation(line: 52, column: 31, scope: !2449)
!2492 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !2491)
!2493 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !2494)
!2494 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !2491)
!2495 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !2496)
!2496 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !2494)
!2497 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !2496)
!2498 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2499)
!2499 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !2491)
!2500 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2499)
!2501 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2499)
!2502 = !DILocation(line: 52, column: 12, scope: !2449)
!2503 = !DILocation(line: 83, column: 2, scope: !2440)
!2504 = !DILocation(line: 56, column: 46, scope: !2449)
!2505 = !DILocation(line: 70, column: 22, scope: !1003, inlinedAt: !2506)
!2506 = distinct !DILocation(line: 56, column: 23, scope: !2449)
!2507 = !DILocation(line: 71, column: 9, scope: !1003, inlinedAt: !2506)
!2508 = !DILocation(line: 153, column: 14, scope: !2374, inlinedAt: !2509)
!2509 = distinct !DILocation(line: 67, column: 50, scope: !2451)
!2510 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !2511)
!2511 = distinct !DILocation(line: 67, column: 62, scope: !2451)
!2512 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !2511)
!2513 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !2514)
!2514 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !2511)
!2515 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !2516)
!2516 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !2514)
!2517 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !2516)
!2518 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2519)
!2519 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !2511)
!2520 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2519)
!2521 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2519)
!2522 = !DILocation(line: 67, column: 28, scope: !2451)
!2523 = !DILocation(line: 68, column: 38, scope: !2453)
!2524 = !DILocation(line: 68, column: 13, scope: !2453)
!2525 = !DILocation(line: 71, column: 26, scope: !2453)
!2526 = !DILocation(line: 71, column: 22, scope: !2453)
!2527 = !DILocation(line: 71, column: 13, scope: !2455)
!2528 = !DILocation(line: 81, column: 9, scope: !2451)
!2529 = !DILocation(line: 71, column: 17, scope: !2455)
!2530 = !DILocation(line: 71, column: 17, scope: !2465)
!2531 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2532)
!2532 = distinct !DILocation(line: 72, column: 29, scope: !2465)
!2533 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2532)
!2534 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2535)
!2535 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2532)
!2536 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2535)
!2537 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2535)
!2538 = !DILocation(line: 72, column: 29, scope: !2465)
!2539 = !DILocation(line: 72, column: 21, scope: !2467)
!2540 = !DILocation(line: 153, column: 14, scope: !2374, inlinedAt: !2541)
!2541 = distinct !DILocation(line: 73, column: 30, scope: !2467)
!2542 = !DILocation(line: 73, column: 21, scope: !2467)
!2543 = !DILocation(line: 73, column: 20, scope: !2467)
!2544 = !DILocation(line: 77, column: 49, scope: !2467)
!2545 = !DILocation(line: 77, column: 17, scope: !2467)
!2546 = !DILocation(line: 78, column: 17, scope: !2467)
!2547 = distinct !DISubprogram(name: "choose_pivot<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot17h68c79886d4e1b0c8E", scope: !1142, file: !2337, line: 722, type: !2548, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !2550)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!1030, !354, !1112}
!2550 = !{!2551, !2552, !2553, !2555, !2557, !2559, !2561, !2563, !2572, !2578}
!2551 = !DILocalVariable(name: "v", arg: 1, scope: !2547, file: !2337, line: 722, type: !354)
!2552 = !DILocalVariable(name: "is_less", arg: 2, scope: !2547, file: !2337, line: 722, type: !1112)
!2553 = !DILocalVariable(name: "len", scope: !2554, file: !2337, line: 732, type: !9, align: 8)
!2554 = distinct !DILexicalBlock(scope: !2547, file: !2337, line: 732, column: 5)
!2555 = !DILocalVariable(name: "a", scope: !2556, file: !2337, line: 735, type: !9, align: 8)
!2556 = distinct !DILexicalBlock(scope: !2554, file: !2337, line: 735, column: 5)
!2557 = !DILocalVariable(name: "b", scope: !2558, file: !2337, line: 736, type: !9, align: 8)
!2558 = distinct !DILexicalBlock(scope: !2556, file: !2337, line: 736, column: 5)
!2559 = !DILocalVariable(name: "c", scope: !2560, file: !2337, line: 737, type: !9, align: 8)
!2560 = distinct !DILexicalBlock(scope: !2558, file: !2337, line: 737, column: 5)
!2561 = !DILocalVariable(name: "swaps", scope: !2562, file: !2337, line: 740, type: !9, align: 8)
!2562 = distinct !DILexicalBlock(scope: !2560, file: !2337, line: 740, column: 5)
!2563 = !DILocalVariable(name: "sort2", scope: !2564, file: !2337, line: 750, type: !2565, align: 8)
!2564 = distinct !DILexicalBlock(scope: !2562, file: !2337, line: 750, column: 9)
!2565 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2566, file: !2, size: 256, align: 64, elements: !2567, templateParams: !24, identifier: "aadd7bf073b7cdef942084071e8fc340")
!2566 = !DINamespace(name: "choose_pivot", scope: !1142)
!2567 = !{!2568, !2569, !2570}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !2565, file: !2, baseType: !1112, size: 64, align: 64, offset: 128)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__v", scope: !2565, file: !2, baseType: !323, size: 128, align: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__swaps", scope: !2565, file: !2, baseType: !2571, size: 64, align: 64, offset: 192)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2572 = !DILocalVariable(name: "sort3", scope: !2573, file: !2337, line: 758, type: !2574, align: 8)
!2573 = distinct !DILexicalBlock(scope: !2564, file: !2337, line: 758, column: 9)
!2574 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2566, file: !2, size: 64, align: 64, elements: !2575, templateParams: !24, identifier: "289df59eae77e1d792bd97875dbbb0a")
!2575 = !{!2576}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort2", scope: !2574, file: !2, baseType: !2577, size: 64, align: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2565, size: 64, align: 64, dwarfAddressSpace: 0)
!2578 = !DILocalVariable(name: "sort_adjacent", scope: !2579, file: !2337, line: 766, type: !2580, align: 8)
!2579 = distinct !DILexicalBlock(scope: !2573, file: !2337, line: 766, column: 13)
!2580 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2566, file: !2, size: 64, align: 64, elements: !2581, templateParams: !24, identifier: "e556df00fe9bce14ea0e7ef2fd1ffed8")
!2581 = !{!2582}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort3", scope: !2580, file: !2, baseType: !2583, size: 64, align: 64)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2574, size: 64, align: 64, dwarfAddressSpace: 0)
!2584 = !DILocation(line: 722, column: 23, scope: !2547)
!2585 = !DILocation(line: 722, column: 36, scope: !2547)
!2586 = !DILocation(line: 735, column: 9, scope: !2556)
!2587 = !DILocation(line: 736, column: 9, scope: !2558)
!2588 = !DILocation(line: 737, column: 9, scope: !2560)
!2589 = !DILocation(line: 740, column: 9, scope: !2562)
!2590 = !DILocation(line: 750, column: 13, scope: !2564)
!2591 = !DILocation(line: 758, column: 13, scope: !2573)
!2592 = !DILocation(line: 766, column: 17, scope: !2579)
!2593 = !DILocation(line: 732, column: 15, scope: !2547)
!2594 = !DILocation(line: 732, column: 9, scope: !2554)
!2595 = !DILocation(line: 735, column: 17, scope: !2554)
!2596 = !DILocation(line: 736, column: 17, scope: !2556)
!2597 = !DILocation(line: 737, column: 17, scope: !2558)
!2598 = !DILocation(line: 740, column: 21, scope: !2560)
!2599 = !DILocation(line: 742, column: 8, scope: !2562)
!2600 = !DILocation(line: 781, column: 8, scope: !2562)
!2601 = !DILocation(line: 750, column: 25, scope: !2562)
!2602 = !DILocation(line: 758, column: 25, scope: !2564)
!2603 = !DILocation(line: 764, column: 12, scope: !2573)
!2604 = !DILocation(line: 778, column: 9, scope: !2573)
!2605 = !DILocation(line: 766, column: 37, scope: !2573)
!2606 = !DILocation(line: 772, column: 13, scope: !2579)
!2607 = !DILocation(line: 773, column: 13, scope: !2579)
!2608 = !DILocation(line: 774, column: 13, scope: !2579)
!2609 = !DILocation(line: 786, column: 9, scope: !2562)
!2610 = !DILocation(line: 787, column: 10, scope: !2562)
!2611 = !DILocation(line: 782, column: 10, scope: !2562)
!2612 = !DILocation(line: 782, column: 13, scope: !2562)
!2613 = !DILocation(line: 782, column: 9, scope: !2562)
!2614 = !DILocation(line: 781, column: 5, scope: !2562)
!2615 = !DILocation(line: 789, column: 2, scope: !2547)
!2616 = !DILocation(line: 787, column: 20, scope: !2562)
!2617 = !DILocation(line: 787, column: 9, scope: !2562)
!2618 = distinct !DISubprogram(name: "{closure#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8a5e4999e87c02a4E", scope: !2566, file: !2337, line: 766, type: !2619, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !2622)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{null, !2621, !2571}
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2580, size: 64, align: 64, dwarfAddressSpace: 0)
!2622 = !{!2623, !2624, !2625}
!2623 = !DILocalVariable(name: "a", arg: 2, scope: !2618, file: !2337, line: 766, type: !2571)
!2624 = !DILocalVariable(name: "sort3", scope: !2618, file: !2337, line: 758, type: !2574, align: 8)
!2625 = !DILocalVariable(name: "tmp", scope: !2626, file: !2337, line: 767, type: !9, align: 8)
!2626 = distinct !DILexicalBlock(scope: !2618, file: !2337, line: 767, column: 17)
!2627 = !DILocation(line: 758, column: 17, scope: !2618)
!2628 = !DILocation(line: 766, column: 38, scope: !2618)
!2629 = !DILocation(line: 767, column: 27, scope: !2618)
!2630 = !DILocation(line: 767, column: 21, scope: !2626)
!2631 = !DILocation(line: 768, column: 17, scope: !2626)
!2632 = !DILocation(line: 768, column: 28, scope: !2626)
!2633 = !DILocation(line: 768, column: 47, scope: !2626)
!2634 = !DILocation(line: 769, column: 14, scope: !2618)
!2635 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8cc56def45354a4dE", scope: !2566, file: !2337, line: 750, type: !2636, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !2638)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{null, !2577, !2571, !2571}
!2638 = !{!2639, !2640, !2641, !2642, !2643}
!2639 = !DILocalVariable(name: "a", arg: 2, scope: !2635, file: !2337, line: 750, type: !2571)
!2640 = !DILocalVariable(name: "b", arg: 3, scope: !2635, file: !2337, line: 750, type: !2571)
!2641 = !DILocalVariable(name: "is_less", scope: !2635, file: !2337, line: 722, type: !1113, align: 8)
!2642 = !DILocalVariable(name: "v", scope: !2635, file: !2337, line: 722, type: !13, align: 8)
!2643 = !DILocalVariable(name: "swaps", scope: !2635, file: !2337, line: 740, type: !9, align: 8)
!2644 = !DILocation(line: 722, column: 36, scope: !2635)
!2645 = !DILocation(line: 722, column: 23, scope: !2635)
!2646 = !DILocation(line: 740, column: 13, scope: !2635)
!2647 = !DILocation(line: 750, column: 26, scope: !2635)
!2648 = !DILocation(line: 750, column: 41, scope: !2635)
!2649 = !DILocation(line: 751, column: 16, scope: !2635)
!2650 = !DILocation(line: 751, column: 24, scope: !2635)
!2651 = !DILocation(line: 751, column: 40, scope: !2635)
!2652 = !DILocation(line: 751, column: 45, scope: !2635)
!2653 = !DILocation(line: 751, column: 61, scope: !2635)
!2654 = !DILocation(line: 755, column: 10, scope: !2635)
!2655 = !DILocation(line: 752, column: 17, scope: !2635)
!2656 = !DILocation(line: 753, column: 17, scope: !2635)
!2657 = !DILocation(line: 751, column: 13, scope: !2635)
!2658 = distinct !DISubprogram(name: "{closure#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hd88ff4efe2a136dfE", scope: !2566, file: !2337, line: 758, type: !2659, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !2661)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null, !2583, !2571, !2571, !2571}
!2661 = !{!2662, !2663, !2664, !2665}
!2662 = !DILocalVariable(name: "a", arg: 2, scope: !2658, file: !2337, line: 758, type: !2571)
!2663 = !DILocalVariable(name: "b", arg: 3, scope: !2658, file: !2337, line: 758, type: !2571)
!2664 = !DILocalVariable(name: "c", arg: 4, scope: !2658, file: !2337, line: 758, type: !2571)
!2665 = !DILocalVariable(name: "sort2", scope: !2658, file: !2337, line: 750, type: !2565, align: 8)
!2666 = !DILocation(line: 750, column: 17, scope: !2658)
!2667 = !DILocation(line: 758, column: 26, scope: !2658)
!2668 = !DILocation(line: 758, column: 41, scope: !2658)
!2669 = !DILocation(line: 758, column: 56, scope: !2658)
!2670 = !DILocation(line: 759, column: 13, scope: !2658)
!2671 = !DILocation(line: 760, column: 13, scope: !2658)
!2672 = !DILocation(line: 761, column: 13, scope: !2658)
!2673 = !DILocation(line: 762, column: 10, scope: !2658)
!2674 = distinct !DISubprogram(name: "break_patterns<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns17hf8643adb856a1c34E", scope: !1142, file: !2337, line: 673, type: !2137, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2675)
!2675 = !{!2676, !2677, !2679, !2681, !2687, !2689, !2691, !2693, !2695}
!2676 = !DILocalVariable(name: "v", arg: 1, scope: !2674, file: !2337, line: 673, type: !354)
!2677 = !DILocalVariable(name: "len", scope: !2678, file: !2337, line: 674, type: !9, align: 8)
!2678 = distinct !DILexicalBlock(scope: !2674, file: !2337, line: 674, column: 5)
!2679 = !DILocalVariable(name: "seed", scope: !2680, file: !2337, line: 676, type: !9, align: 8)
!2680 = distinct !DILexicalBlock(scope: !2678, file: !2337, line: 676, column: 9)
!2681 = !DILocalVariable(name: "gen_usize", scope: !2682, file: !2337, line: 677, type: !2683, align: 8)
!2682 = distinct !DILexicalBlock(scope: !2680, file: !2337, line: 677, column: 9)
!2683 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !2684, file: !2, size: 64, align: 64, elements: !2685, templateParams: !24, identifier: "32654077e411baa2e0856eba223606d9")
!2684 = !DINamespace(name: "break_patterns", scope: !1142)
!2685 = !{!2686}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__seed", scope: !2683, file: !2, baseType: !2571, size: 64, align: 64)
!2687 = !DILocalVariable(name: "modulus", scope: !2688, file: !2337, line: 698, type: !9, align: 8)
!2688 = distinct !DILexicalBlock(scope: !2682, file: !2337, line: 698, column: 9)
!2689 = !DILocalVariable(name: "pos", scope: !2690, file: !2337, line: 701, type: !9, align: 8)
!2690 = distinct !DILexicalBlock(scope: !2688, file: !2337, line: 701, column: 9)
!2691 = !DILocalVariable(name: "iter", scope: !2692, file: !2337, line: 703, type: !175, align: 8)
!2692 = distinct !DILexicalBlock(scope: !2690, file: !2337, line: 703, column: 9)
!2693 = !DILocalVariable(name: "i", scope: !2694, file: !2337, line: 703, type: !9, align: 8)
!2694 = distinct !DILexicalBlock(scope: !2692, file: !2337, line: 703, column: 23)
!2695 = !DILocalVariable(name: "other", scope: !2696, file: !2337, line: 707, type: !9, align: 8)
!2696 = distinct !DILexicalBlock(scope: !2694, file: !2337, line: 707, column: 13)
!2697 = !DILocation(line: 673, column: 22, scope: !2674)
!2698 = !DILocation(line: 676, column: 13, scope: !2680)
!2699 = !DILocation(line: 677, column: 13, scope: !2682)
!2700 = !DILocation(line: 703, column: 18, scope: !2692)
!2701 = !DILocation(line: 707, column: 17, scope: !2696)
!2702 = !DILocation(line: 674, column: 15, scope: !2674)
!2703 = !DILocation(line: 674, column: 9, scope: !2678)
!2704 = !DILocation(line: 675, column: 8, scope: !2678)
!2705 = !DILocation(line: 717, column: 2, scope: !2674)
!2706 = !DILocation(line: 676, column: 24, scope: !2678)
!2707 = !DILocation(line: 677, column: 29, scope: !2680)
!2708 = !DILocation(line: 698, column: 23, scope: !2682)
!2709 = !DILocation(line: 698, column: 13, scope: !2688)
!2710 = !DILocation(line: 701, column: 19, scope: !2688)
!2711 = !DILocation(line: 701, column: 13, scope: !2690)
!2712 = !DILocation(line: 703, column: 18, scope: !2690)
!2713 = !DILocation(line: 703, column: 9, scope: !2692)
!2714 = !DILocation(line: 703, column: 13, scope: !2692)
!2715 = !DILocation(line: 703, column: 13, scope: !2694)
!2716 = !DILocation(line: 707, column: 29, scope: !2694)
!2717 = !DILocation(line: 707, column: 43, scope: !2694)
!2718 = !DILocation(line: 710, column: 16, scope: !2696)
!2719 = !DILocation(line: 714, column: 20, scope: !2696)
!2720 = !DILocation(line: 711, column: 17, scope: !2696)
!2721 = !DILocation(line: 710, column: 13, scope: !2696)
!2722 = !DILocation(line: 714, column: 33, scope: !2696)
!2723 = !DILocation(line: 714, column: 13, scope: !2696)
!2724 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17he3339bb42c6e0e00E", scope: !2684, file: !2337, line: 677, type: !2725, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2728)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!9, !2727}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::break_patterns::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !2683, size: 64, align: 64, dwarfAddressSpace: 0)
!2728 = !{!2729, !2730, !2732}
!2729 = !DILocalVariable(name: "seed", scope: !2724, file: !2337, line: 676, type: !9, align: 8)
!2730 = !DILocalVariable(name: "r", scope: !2731, file: !2337, line: 680, type: !27, align: 4)
!2731 = distinct !DILexicalBlock(scope: !2724, file: !2337, line: 680, column: 17)
!2732 = !DILocalVariable(name: "r", scope: !2733, file: !2337, line: 687, type: !22, align: 8)
!2733 = distinct !DILexicalBlock(scope: !2724, file: !2337, line: 687, column: 17)
!2734 = !DILocation(line: 676, column: 17, scope: !2724)
!2735 = !DILocation(line: 687, column: 21, scope: !2733)
!2736 = !DILocation(line: 687, column: 29, scope: !2724)
!2737 = !DILocation(line: 688, column: 22, scope: !2733)
!2738 = !DILocation(line: 688, column: 17, scope: !2733)
!2739 = !DILocation(line: 689, column: 22, scope: !2733)
!2740 = !DILocation(line: 689, column: 17, scope: !2733)
!2741 = !DILocation(line: 690, column: 22, scope: !2733)
!2742 = !DILocation(line: 690, column: 17, scope: !2733)
!2743 = !DILocation(line: 691, column: 24, scope: !2733)
!2744 = !DILocation(line: 691, column: 17, scope: !2733)
!2745 = !DILocation(line: 692, column: 17, scope: !2733)
!2746 = !DILocation(line: 694, column: 10, scope: !2724)
!2747 = distinct !DISubprogram(name: "partition_equal<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort15partition_equal17hd09940ab2606d628E", scope: !1142, file: !2337, line: 615, type: !2748, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !2750)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!9, !354, !9, !1112}
!2750 = !{!2751, !2752, !2753, !2754, !2756, !2757, !2759, !2761, !2763, !2765, !2767, !2769}
!2751 = !DILocalVariable(name: "v", arg: 1, scope: !2747, file: !2337, line: 615, type: !354)
!2752 = !DILocalVariable(name: "pivot", arg: 2, scope: !2747, file: !2337, line: 615, type: !9)
!2753 = !DILocalVariable(name: "is_less", arg: 3, scope: !2747, file: !2337, line: 615, type: !1112)
!2754 = !DILocalVariable(name: "pivot", scope: !2755, file: !2337, line: 621, type: !354, align: 8)
!2755 = distinct !DILexicalBlock(scope: !2747, file: !2337, line: 621, column: 5)
!2756 = !DILocalVariable(name: "v", scope: !2755, file: !2337, line: 621, type: !354, align: 8)
!2757 = !DILocalVariable(name: "pivot", scope: !2758, file: !2337, line: 622, type: !945, align: 8)
!2758 = distinct !DILexicalBlock(scope: !2755, file: !2337, line: 622, column: 5)
!2759 = !DILocalVariable(name: "tmp", scope: !2760, file: !2337, line: 627, type: !655, align: 8)
!2760 = distinct !DILexicalBlock(scope: !2758, file: !2337, line: 627, column: 5)
!2761 = !DILocalVariable(name: "_pivot_guard", scope: !2762, file: !2337, line: 628, type: !1141, align: 8)
!2762 = distinct !DILexicalBlock(scope: !2760, file: !2337, line: 628, column: 5)
!2763 = !DILocalVariable(name: "pivot", scope: !2764, file: !2337, line: 629, type: !12, align: 8)
!2764 = distinct !DILexicalBlock(scope: !2762, file: !2337, line: 629, column: 5)
!2765 = !DILocalVariable(name: "l", scope: !2766, file: !2337, line: 632, type: !9, align: 8)
!2766 = distinct !DILexicalBlock(scope: !2764, file: !2337, line: 632, column: 5)
!2767 = !DILocalVariable(name: "r", scope: !2768, file: !2337, line: 633, type: !9, align: 8)
!2768 = distinct !DILexicalBlock(scope: !2766, file: !2337, line: 633, column: 5)
!2769 = !DILocalVariable(name: "ptr", scope: !2770, file: !2337, line: 657, type: !294, align: 8)
!2770 = distinct !DILexicalBlock(scope: !2768, file: !2337, line: 657, column: 13)
!2771 = !DILocation(line: 615, column: 26, scope: !2747)
!2772 = !DILocation(line: 615, column: 39, scope: !2747)
!2773 = !DILocation(line: 615, column: 53, scope: !2747)
!2774 = !DILocation(line: 627, column: 9, scope: !2760)
!2775 = !DILocation(line: 628, column: 9, scope: !2762)
!2776 = !DILocation(line: 632, column: 9, scope: !2766)
!2777 = !DILocation(line: 633, column: 9, scope: !2768)
!2778 = !DILocation(line: 620, column: 5, scope: !2747)
!2779 = !DILocation(line: 621, column: 22, scope: !2747)
!2780 = !DILocation(line: 621, column: 10, scope: !2747)
!2781 = !DILocation(line: 621, column: 10, scope: !2755)
!2782 = !DILocation(line: 621, column: 17, scope: !2747)
!2783 = !DILocation(line: 621, column: 17, scope: !2755)
!2784 = !DILocation(line: 622, column: 22, scope: !2755)
!2785 = !DILocation(line: 622, column: 17, scope: !2755)
!2786 = !DILocation(line: 622, column: 9, scope: !2758)
!2787 = !DILocation(line: 627, column: 47, scope: !2758)
!2788 = !DILocation(line: 70, column: 22, scope: !1003, inlinedAt: !2789)
!2789 = distinct !DILocation(line: 627, column: 15, scope: !2758)
!2790 = !DILocation(line: 71, column: 9, scope: !1003, inlinedAt: !2789)
!2791 = !DILocation(line: 153, column: 14, scope: !2374, inlinedAt: !2792)
!2792 = distinct !DILocation(line: 628, column: 46, scope: !2760)
!2793 = !DILocation(line: 628, column: 24, scope: !2760)
!2794 = !DILocation(line: 153, column: 14, scope: !2374, inlinedAt: !2795)
!2795 = distinct !DILocation(line: 629, column: 18, scope: !2762)
!2796 = !DILocation(line: 629, column: 17, scope: !2762)
!2797 = !DILocation(line: 629, column: 9, scope: !2764)
!2798 = !DILocation(line: 632, column: 17, scope: !2764)
!2799 = !DILocation(line: 633, column: 17, scope: !2766)
!2800 = !DILocation(line: 634, column: 5, scope: !2768)
!2801 = !DILocation(line: 641, column: 19, scope: !2768)
!2802 = !DILocation(line: 641, column: 23, scope: !2768)
!2803 = !DILocation(line: 641, column: 60, scope: !2768)
!2804 = !DILocation(line: 641, column: 44, scope: !2768)
!2805 = !DILocation(line: 641, column: 29, scope: !2768)
!2806 = !DILocation(line: 641, column: 28, scope: !2768)
!2807 = !DILocation(line: 646, column: 19, scope: !2768)
!2808 = !DILocation(line: 646, column: 23, scope: !2768)
!2809 = !DILocation(line: 642, column: 17, scope: !2768)
!2810 = !DILocation(line: 641, column: 13, scope: !2768)
!2811 = !DILocation(line: 646, column: 59, scope: !2768)
!2812 = !DILocation(line: 646, column: 43, scope: !2768)
!2813 = !DILocation(line: 646, column: 28, scope: !2768)
!2814 = !DILocation(line: 651, column: 16, scope: !2768)
!2815 = !DILocation(line: 651, column: 21, scope: !2768)
!2816 = !DILocation(line: 647, column: 17, scope: !2768)
!2817 = !DILocation(line: 646, column: 13, scope: !2768)
!2818 = !DILocation(line: 656, column: 13, scope: !2768)
!2819 = !DILocation(line: 664, column: 5, scope: !2768)
!2820 = !DILocation(line: 668, column: 1, scope: !2760)
!2821 = !DILocation(line: 668, column: 2, scope: !2747)
!2822 = !DILocation(line: 506, column: 29, scope: !2017, inlinedAt: !2823)
!2823 = distinct !DILocation(line: 657, column: 23, scope: !2768)
!2824 = !DILocation(line: 657, column: 23, scope: !2768)
!2825 = !DILocation(line: 657, column: 17, scope: !2770)
!2826 = !DILocation(line: 658, column: 31, scope: !2770)
!2827 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2828)
!2828 = distinct !DILocation(line: 658, column: 23, scope: !2770)
!2829 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2828)
!2830 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2831)
!2831 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2828)
!2832 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2831)
!2833 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2831)
!2834 = !DILocation(line: 658, column: 43, scope: !2770)
!2835 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2836)
!2836 = distinct !DILocation(line: 658, column: 35, scope: !2770)
!2837 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2836)
!2838 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2839)
!2839 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2836)
!2840 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2839)
!2841 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2839)
!2842 = !DILocation(line: 658, column: 13, scope: !2770)
!2843 = !DILocation(line: 659, column: 13, scope: !2770)
!2844 = distinct !DISubprogram(name: "partition_in_blocks<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort19partition_in_blocks17hf3e69fc4a3d42f73E", scope: !1142, file: !2337, line: 302, type: !2845, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !2847)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!9, !354, !12, !1112}
!2847 = !{!2848, !2849, !2850, !2851, !2853, !2855, !2857, !2859, !2871, !2873, !2875, !2877, !2879, !2881, !2883, !2885, !2887, !2889, !2891, !2893, !2895, !2897, !2899, !2901, !2903, !2908, !2909, !2912, !2915, !2916}
!2848 = !DILocalVariable(name: "v", arg: 1, scope: !2844, file: !2337, line: 302, type: !354)
!2849 = !DILocalVariable(name: "pivot", arg: 2, scope: !2844, file: !2337, line: 302, type: !12)
!2850 = !DILocalVariable(name: "is_less", arg: 3, scope: !2844, file: !2337, line: 302, type: !1112)
!2851 = !DILocalVariable(name: "l", scope: !2852, file: !2337, line: 323, type: !294, align: 8)
!2852 = distinct !DILexicalBlock(scope: !2844, file: !2337, line: 323, column: 5)
!2853 = !DILocalVariable(name: "block_l", scope: !2854, file: !2337, line: 324, type: !9, align: 8)
!2854 = distinct !DILexicalBlock(scope: !2852, file: !2337, line: 324, column: 5)
!2855 = !DILocalVariable(name: "start_l", scope: !2856, file: !2337, line: 325, type: !1166, align: 8)
!2856 = distinct !DILexicalBlock(scope: !2854, file: !2337, line: 325, column: 5)
!2857 = !DILocalVariable(name: "end_l", scope: !2858, file: !2337, line: 326, type: !1166, align: 8)
!2858 = distinct !DILexicalBlock(scope: !2856, file: !2337, line: 326, column: 5)
!2859 = !DILocalVariable(name: "offsets_l", scope: !2860, file: !2337, line: 327, type: !2861, align: 1)
!2860 = distinct !DILexicalBlock(scope: !2858, file: !2337, line: 327, column: 5)
!2861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2862, size: 1024, align: 8, elements: !2869)
!2862 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !650, file: !2, size: 8, align: 8, elements: !2863, templateParams: !1659, identifier: "40fd747698d94c057e48eb3c7fee6fc")
!2863 = !{!2864, !2865}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2862, file: !2, baseType: !7, align: 8)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2862, file: !2, baseType: !2866, size: 8, align: 8)
!2866 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !656, file: !2, size: 8, align: 8, elements: !2867, templateParams: !1659, identifier: "5dbc9cafe97ace481d2dac1d5bd5267a")
!2867 = !{!2868}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2866, file: !2, baseType: !123, size: 8, align: 8)
!2869 = !{!2870}
!2870 = !DISubrange(count: 128, lowerBound: 0)
!2871 = !DILocalVariable(name: "r", scope: !2872, file: !2337, line: 331, type: !294, align: 8)
!2872 = distinct !DILexicalBlock(scope: !2860, file: !2337, line: 331, column: 5)
!2873 = !DILocalVariable(name: "block_r", scope: !2874, file: !2337, line: 332, type: !9, align: 8)
!2874 = distinct !DILexicalBlock(scope: !2872, file: !2337, line: 332, column: 5)
!2875 = !DILocalVariable(name: "start_r", scope: !2876, file: !2337, line: 333, type: !1166, align: 8)
!2876 = distinct !DILexicalBlock(scope: !2874, file: !2337, line: 333, column: 5)
!2877 = !DILocalVariable(name: "end_r", scope: !2878, file: !2337, line: 334, type: !1166, align: 8)
!2878 = distinct !DILexicalBlock(scope: !2876, file: !2337, line: 334, column: 5)
!2879 = !DILocalVariable(name: "offsets_r", scope: !2880, file: !2337, line: 335, type: !2861, align: 1)
!2880 = distinct !DILexicalBlock(scope: !2878, file: !2337, line: 335, column: 5)
!2881 = !DILocalVariable(name: "is_done", scope: !2882, file: !2337, line: 351, type: !421, align: 1)
!2882 = distinct !DILexicalBlock(scope: !2880, file: !2337, line: 351, column: 9)
!2883 = !DILocalVariable(name: "rem", scope: !2884, file: !2337, line: 355, type: !9, align: 8)
!2884 = distinct !DILexicalBlock(scope: !2882, file: !2337, line: 355, column: 13)
!2885 = !DILocalVariable(name: "elem", scope: !2886, file: !2337, line: 381, type: !294, align: 8)
!2886 = distinct !DILexicalBlock(scope: !2882, file: !2337, line: 381, column: 13)
!2887 = !DILocalVariable(name: "iter", scope: !2888, file: !2337, line: 383, type: !175, align: 8)
!2888 = distinct !DILexicalBlock(scope: !2886, file: !2337, line: 383, column: 13)
!2889 = !DILocalVariable(name: "i", scope: !2890, file: !2337, line: 383, type: !9, align: 8)
!2890 = distinct !DILexicalBlock(scope: !2888, file: !2337, line: 383, column: 33)
!2891 = !DILocalVariable(name: "elem", scope: !2892, file: !2337, line: 407, type: !294, align: 8)
!2892 = distinct !DILexicalBlock(scope: !2882, file: !2337, line: 407, column: 13)
!2893 = !DILocalVariable(name: "iter", scope: !2894, file: !2337, line: 409, type: !175, align: 8)
!2894 = distinct !DILexicalBlock(scope: !2892, file: !2337, line: 409, column: 13)
!2895 = !DILocalVariable(name: "i", scope: !2896, file: !2337, line: 409, type: !9, align: 8)
!2896 = distinct !DILexicalBlock(scope: !2894, file: !2337, line: 409, column: 33)
!2897 = !DILocalVariable(name: "count", scope: !2898, file: !2337, line: 431, type: !9, align: 8)
!2898 = distinct !DILexicalBlock(scope: !2882, file: !2337, line: 431, column: 9)
!2899 = !DILocalVariable(name: "tmp", scope: !2900, file: !2337, line: 465, type: !13, align: 8)
!2900 = distinct !DILexicalBlock(scope: !2898, file: !2337, line: 465, column: 17)
!2901 = !DILocalVariable(name: "iter", scope: !2902, file: !2337, line: 468, type: !175, align: 8)
!2902 = distinct !DILexicalBlock(scope: !2900, file: !2337, line: 468, column: 17)
!2903 = !DILocalVariable(name: "left_val", scope: !2904, file: !2337, line: 514, type: !2907, align: 8)
!2904 = !DILexicalBlockFile(scope: !2905, file: !2337, discriminator: 0)
!2905 = distinct !DILexicalBlock(scope: !2880, file: !2906, line: 39, column: 13)
!2906 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "0168b0d49598552ba64770ba9401c336")
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2908 = !DILocalVariable(name: "right_val", scope: !2904, file: !2337, line: 514, type: !2907, align: 8)
!2909 = !DILocalVariable(name: "kind", scope: !2910, file: !2337, line: 514, type: !156, align: 1)
!2910 = !DILexicalBlockFile(scope: !2911, file: !2337, discriminator: 0)
!2911 = distinct !DILexicalBlock(scope: !2905, file: !2906, line: 41, column: 21)
!2912 = !DILocalVariable(name: "left_val", scope: !2913, file: !2337, line: 537, type: !2907, align: 8)
!2913 = !DILexicalBlockFile(scope: !2914, file: !2337, discriminator: 0)
!2914 = distinct !DILexicalBlock(scope: !2880, file: !2906, line: 39, column: 13)
!2915 = !DILocalVariable(name: "right_val", scope: !2913, file: !2337, line: 537, type: !2907, align: 8)
!2916 = !DILocalVariable(name: "kind", scope: !2917, file: !2337, line: 537, type: !156, align: 1)
!2917 = !DILexicalBlockFile(scope: !2918, file: !2337, discriminator: 0)
!2918 = distinct !DILexicalBlock(scope: !2914, file: !2906, line: 41, column: 21)
!2919 = !DILocation(line: 302, column: 30, scope: !2844)
!2920 = !DILocation(line: 302, column: 43, scope: !2844)
!2921 = !DILocation(line: 302, column: 54, scope: !2844)
!2922 = !DILocation(line: 323, column: 9, scope: !2852)
!2923 = !DILocation(line: 324, column: 9, scope: !2854)
!2924 = !DILocation(line: 325, column: 9, scope: !2856)
!2925 = !DILocation(line: 326, column: 9, scope: !2858)
!2926 = !DILocation(line: 327, column: 9, scope: !2860)
!2927 = !DILocation(line: 331, column: 9, scope: !2872)
!2928 = !DILocation(line: 332, column: 9, scope: !2874)
!2929 = !DILocation(line: 333, column: 9, scope: !2876)
!2930 = !DILocation(line: 334, column: 9, scope: !2878)
!2931 = !DILocation(line: 335, column: 9, scope: !2880)
!2932 = !DILocation(line: 355, column: 17, scope: !2884)
!2933 = !DILocation(line: 381, column: 17, scope: !2886)
!2934 = !DILocation(line: 383, column: 22, scope: !2888)
!2935 = !DILocation(line: 407, column: 17, scope: !2892)
!2936 = !DILocation(line: 409, column: 22, scope: !2894)
!2937 = !DILocation(line: 465, column: 21, scope: !2900)
!2938 = !DILocation(line: 468, column: 26, scope: !2902)
!2939 = !DILocation(line: 506, column: 29, scope: !2017, inlinedAt: !2940)
!2940 = distinct !DILocation(line: 323, column: 17, scope: !2844)
!2941 = !DILocation(line: 323, column: 17, scope: !2844)
!2942 = !DILocation(line: 324, column: 23, scope: !2852)
!2943 = !DILocalVariable(name: "addr", arg: 1, scope: !2944, file: !1137, line: 593, type: !9)
!2944 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h1b4f10b6a74a804cE", scope: !222, file: !1137, line: 593, type: !2945, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1780, retainedNodes: !2947)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{!1280, !9}
!2947 = !{!2943}
!2948 = !DILocation(line: 593, column: 29, scope: !2944, inlinedAt: !2949)
!2949 = distinct !DILocation(line: 537, column: 24, scope: !2950, inlinedAt: !2953)
!2950 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17he2326d1672bc2addE", scope: !222, file: !1137, line: 536, type: !2951, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !24)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!1166}
!2953 = distinct !DILocation(line: 325, column: 23, scope: !2854)
!2954 = !DILocation(line: 599, column: 14, scope: !2944, inlinedAt: !2949)
!2955 = !DILocation(line: 537, column: 5, scope: !2950, inlinedAt: !2953)
!2956 = !DILocation(line: 325, column: 23, scope: !2854)
!2957 = !DILocation(line: 593, column: 29, scope: !2944, inlinedAt: !2958)
!2958 = distinct !DILocation(line: 537, column: 24, scope: !2950, inlinedAt: !2959)
!2959 = distinct !DILocation(line: 326, column: 21, scope: !2856)
!2960 = !DILocation(line: 599, column: 14, scope: !2944, inlinedAt: !2958)
!2961 = !DILocation(line: 537, column: 5, scope: !2950, inlinedAt: !2959)
!2962 = !DILocation(line: 326, column: 21, scope: !2856)
!2963 = !DILocation(line: 315, column: 6, scope: !2964, inlinedAt: !2967)
!2964 = distinct !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hb7d0df104ca593f7E", scope: !2862, file: !1417, line: 313, type: !2965, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !24)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{!2862}
!2967 = distinct !DILocation(line: 327, column: 26, scope: !2858)
!2968 = !DILocation(line: 327, column: 25, scope: !2858)
!2969 = !DILocation(line: 331, column: 26, scope: !2860)
!2970 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !2971)
!2971 = distinct !DILocation(line: 331, column: 26, scope: !2860)
!2972 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !2971)
!2973 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !2974)
!2974 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !2971)
!2975 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !2974)
!2976 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !2974)
!2977 = !DILocation(line: 332, column: 23, scope: !2872)
!2978 = !DILocation(line: 593, column: 29, scope: !2944, inlinedAt: !2979)
!2979 = distinct !DILocation(line: 537, column: 24, scope: !2950, inlinedAt: !2980)
!2980 = distinct !DILocation(line: 333, column: 23, scope: !2874)
!2981 = !DILocation(line: 599, column: 14, scope: !2944, inlinedAt: !2979)
!2982 = !DILocation(line: 537, column: 5, scope: !2950, inlinedAt: !2980)
!2983 = !DILocation(line: 333, column: 23, scope: !2874)
!2984 = !DILocation(line: 593, column: 29, scope: !2944, inlinedAt: !2985)
!2985 = distinct !DILocation(line: 537, column: 24, scope: !2950, inlinedAt: !2986)
!2986 = distinct !DILocation(line: 334, column: 21, scope: !2876)
!2987 = !DILocation(line: 599, column: 14, scope: !2944, inlinedAt: !2985)
!2988 = !DILocation(line: 537, column: 5, scope: !2950, inlinedAt: !2986)
!2989 = !DILocation(line: 334, column: 21, scope: !2876)
!2990 = !DILocation(line: 315, column: 6, scope: !2964, inlinedAt: !2991)
!2991 = distinct !DILocation(line: 335, column: 26, scope: !2878)
!2992 = !DILocation(line: 335, column: 25, scope: !2878)
!2993 = !DILocation(line: 348, column: 5, scope: !2880)
!2994 = !DILocation(line: 351, column: 29, scope: !2880)
!2995 = !DILocation(line: 351, column: 32, scope: !2880)
!2996 = !DILocation(line: 351, column: 23, scope: !2880)
!2997 = !DILocation(line: 351, column: 13, scope: !2882)
!2998 = !DILocation(line: 353, column: 12, scope: !2882)
!2999 = !DILocation(line: 377, column: 12, scope: !2882)
!3000 = !DILocation(line: 377, column: 23, scope: !2882)
!3001 = !DILocation(line: 355, column: 33, scope: !2882)
!3002 = !DILocation(line: 355, column: 36, scope: !2882)
!3003 = !DILocation(line: 355, column: 27, scope: !2882)
!3004 = !DILocation(line: 356, column: 16, scope: !2884)
!3005 = !DILocation(line: 356, column: 26, scope: !2884)
!3006 = !DILocation(line: 356, column: 35, scope: !2884)
!3007 = !DILocation(line: 356, column: 45, scope: !2884)
!3008 = !DILocation(line: 362, column: 16, scope: !2884)
!3009 = !DILocation(line: 362, column: 26, scope: !2884)
!3010 = !DILocation(line: 357, column: 17, scope: !2884)
!3011 = !DILocation(line: 356, column: 13, scope: !2884)
!3012 = !DILocation(line: 364, column: 23, scope: !2884)
!3013 = !DILocation(line: 364, column: 33, scope: !2884)
!3014 = !DILocation(line: 363, column: 27, scope: !2884)
!3015 = !DILocation(line: 363, column: 17, scope: !2884)
!3016 = !DILocation(line: 362, column: 13, scope: !2884)
!3017 = !DILocation(line: 373, column: 27, scope: !2884)
!3018 = !DILocation(line: 370, column: 27, scope: !2884)
!3019 = !DILocation(line: 370, column: 17, scope: !2884)
!3020 = !DILocation(line: 371, column: 27, scope: !2884)
!3021 = !DILocation(line: 371, column: 33, scope: !2884)
!3022 = !DILocation(line: 365, column: 27, scope: !2884)
!3023 = !DILocation(line: 365, column: 17, scope: !2884)
!3024 = !DILocation(line: 364, column: 20, scope: !2884)
!3025 = !DILocation(line: 371, column: 17, scope: !2884)
!3026 = !DILocation(line: 373, column: 47, scope: !2884)
!3027 = !DILocation(line: 373, column: 13, scope: !2884)
!3028 = !DILocation(line: 374, column: 33, scope: !2884)
!3029 = !DILocation(line: 374, column: 36, scope: !2884)
!3030 = !DILocation(line: 374, column: 27, scope: !2884)
!3031 = !DILocation(line: 374, column: 42, scope: !2884)
!3032 = !DILocation(line: 374, column: 52, scope: !2884)
!3033 = !DILocation(line: 374, column: 13, scope: !2884)
!3034 = !DILocation(line: 403, column: 12, scope: !2882)
!3035 = !DILocation(line: 403, column: 23, scope: !2882)
!3036 = !DILocalVariable(name: "this", arg: 1, scope: !3037, file: !1417, line: 1012, type: !3040)
!3037 = distinct !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17h1e053be495aff9caE", scope: !2862, file: !1417, line: 1012, type: !3038, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !3045)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!1166, !3040}
!3040 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !3041, templateParams: !24, identifier: "4d481f9d3187460ca04a0f9a7ac35644")
!3041 = !{!3042, !3044}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3040, file: !2, baseType: !3043, size: 64, align: 64)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64, align: 64, dwarfAddressSpace: 0)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3040, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3045 = !{!3036}
!3046 = !DILocation(line: 1012, column: 35, scope: !3037, inlinedAt: !3047)
!3047 = distinct !DILocation(line: 379, column: 23, scope: !2882)
!3048 = !DILocalVariable(name: "self", arg: 1, scope: !3049, file: !1972, line: 506, type: !3040)
!3049 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hfa820f27182c08d5E", scope: !1115, file: !1972, line: 506, type: !3050, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3054, retainedNodes: !3053)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!3052, !3040}
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !2862, size: 64, align: 64, dwarfAddressSpace: 0)
!3053 = !{!3048}
!3054 = !{!3055}
!3055 = !DITemplateTypeParameter(name: "T", type: !2862)
!3056 = !DILocation(line: 506, column: 29, scope: !3049, inlinedAt: !3057)
!3057 = distinct !DILocation(line: 1013, column: 9, scope: !3037, inlinedAt: !3047)
!3058 = !DILocation(line: 379, column: 13, scope: !2882)
!3059 = !DILocation(line: 380, column: 21, scope: !2882)
!3060 = !DILocation(line: 380, column: 13, scope: !2882)
!3061 = !DILocation(line: 381, column: 28, scope: !2882)
!3062 = !DILocation(line: 383, column: 25, scope: !2886)
!3063 = !DILocation(line: 383, column: 22, scope: !2886)
!3064 = !DILocation(line: 383, column: 13, scope: !2888)
!3065 = !DILocation(line: 383, column: 17, scope: !2888)
!3066 = !DILocation(line: 383, column: 17, scope: !2890)
!3067 = !DILocation(line: 396, column: 21, scope: !2890)
!3068 = !DILocation(line: 397, column: 29, scope: !2890)
!3069 = !DILocation(line: 397, column: 48, scope: !2890)
!3070 = !DILocation(line: 397, column: 40, scope: !2890)
!3071 = !DILocation(line: 397, column: 39, scope: !2890)
!3072 = !DILocalVariable(name: "self", arg: 1, scope: !3073, file: !276, line: 1015, type: !1166)
!3073 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h9c202fa4da428f95E", scope: !300, file: !276, line: 1015, type: !3074, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !3076)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!1166, !1166, !9}
!3076 = !{!3072, !3077}
!3077 = !DILocalVariable(name: "count", arg: 2, scope: !3073, file: !276, line: 1015, type: !9)
!3078 = !DILocation(line: 1015, column: 29, scope: !3073, inlinedAt: !3079)
!3079 = distinct !DILocation(line: 397, column: 29, scope: !2890)
!3080 = !DILocation(line: 1015, column: 35, scope: !3073, inlinedAt: !3079)
!3081 = !DILocalVariable(name: "self", arg: 1, scope: !3082, file: !276, line: 472, type: !1166)
!3082 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h65a321caa3d9b9a5E", scope: !300, file: !276, line: 472, type: !3083, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !3085)
!3083 = !DISubroutineType(types: !3084)
!3084 = !{!1166, !1166, !235}
!3085 = !{!3081, !3086}
!3086 = !DILocalVariable(name: "count", arg: 2, scope: !3082, file: !276, line: 472, type: !235)
!3087 = !DILocation(line: 472, column: 32, scope: !3082, inlinedAt: !3088)
!3088 = distinct !DILocation(line: 1020, column: 18, scope: !3073, inlinedAt: !3079)
!3089 = !DILocation(line: 472, column: 38, scope: !3082, inlinedAt: !3088)
!3090 = !DILocation(line: 479, column: 18, scope: !3082, inlinedAt: !3088)
!3091 = !DILocation(line: 397, column: 21, scope: !2890)
!3092 = !DILocation(line: 398, column: 28, scope: !2890)
!3093 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !3094)
!3094 = distinct !DILocation(line: 398, column: 28, scope: !2890)
!3095 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !3094)
!3096 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3097)
!3097 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !3094)
!3098 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3097)
!3099 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3097)
!3100 = !DILocation(line: 398, column: 21, scope: !2890)
!3101 = !DILocation(line: 431, column: 36, scope: !2882)
!3102 = !DILocation(line: 431, column: 45, scope: !2882)
!3103 = !DILocation(line: 431, column: 30, scope: !2882)
!3104 = !DILocation(line: 431, column: 59, scope: !2882)
!3105 = !DILocation(line: 431, column: 68, scope: !2882)
!3106 = !DILocation(line: 431, column: 53, scope: !2882)
!3107 = !DILocation(line: 431, column: 21, scope: !2882)
!3108 = !DILocation(line: 431, column: 13, scope: !2898)
!3109 = !DILocation(line: 433, column: 12, scope: !2898)
!3110 = !DILocation(line: 1012, column: 35, scope: !3037, inlinedAt: !3111)
!3111 = distinct !DILocation(line: 405, column: 23, scope: !2882)
!3112 = !DILocation(line: 506, column: 29, scope: !3049, inlinedAt: !3113)
!3113 = distinct !DILocation(line: 1013, column: 9, scope: !3037, inlinedAt: !3111)
!3114 = !DILocation(line: 405, column: 13, scope: !2882)
!3115 = !DILocation(line: 406, column: 21, scope: !2882)
!3116 = !DILocation(line: 406, column: 13, scope: !2882)
!3117 = !DILocation(line: 407, column: 28, scope: !2882)
!3118 = !DILocation(line: 409, column: 25, scope: !2892)
!3119 = !DILocation(line: 409, column: 22, scope: !2892)
!3120 = !DILocation(line: 409, column: 13, scope: !2894)
!3121 = !DILocation(line: 409, column: 17, scope: !2894)
!3122 = !DILocation(line: 409, column: 17, scope: !2896)
!3123 = !DILocation(line: 423, column: 28, scope: !2896)
!3124 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !3125)
!3125 = distinct !DILocation(line: 423, column: 28, scope: !2896)
!3126 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !3125)
!3127 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3128)
!3128 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !3125)
!3129 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3130)
!3130 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3128)
!3131 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3130)
!3132 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3133)
!3133 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !3125)
!3134 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3133)
!3135 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3133)
!3136 = !DILocation(line: 423, column: 21, scope: !2896)
!3137 = !DILocation(line: 424, column: 21, scope: !2896)
!3138 = !DILocation(line: 425, column: 29, scope: !2896)
!3139 = !DILocation(line: 425, column: 47, scope: !2896)
!3140 = !DILocation(line: 425, column: 39, scope: !2896)
!3141 = !DILocation(line: 1015, column: 29, scope: !3073, inlinedAt: !3142)
!3142 = distinct !DILocation(line: 425, column: 29, scope: !2896)
!3143 = !DILocation(line: 1015, column: 35, scope: !3073, inlinedAt: !3142)
!3144 = !DILocation(line: 472, column: 32, scope: !3082, inlinedAt: !3145)
!3145 = distinct !DILocation(line: 1020, column: 18, scope: !3073, inlinedAt: !3142)
!3146 = !DILocation(line: 472, column: 38, scope: !3082, inlinedAt: !3145)
!3147 = !DILocation(line: 479, column: 18, scope: !3082, inlinedAt: !3145)
!3148 = !DILocation(line: 425, column: 21, scope: !2896)
!3149 = !DILocation(line: 482, column: 12, scope: !2898)
!3150 = !DILocation(line: 482, column: 23, scope: !2898)
!3151 = !DILocation(line: 465, column: 37, scope: !2898)
!3152 = !DILocalVariable(name: "small", arg: 1, scope: !3153, file: !3154, line: 53, type: !123)
!3153 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h70dc20f2cb14aaa3E", scope: !3155, file: !3154, line: 53, type: !3158, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3160)
!3154 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "a4a9b089b86ec74888517cdccbe35dbc")
!3155 = !DINamespace(name: "{impl#44}", scope: !3156)
!3156 = !DINamespace(name: "num", scope: !3157)
!3157 = !DINamespace(name: "convert", scope: !143)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{!9, !123}
!3160 = !{!3152}
!3161 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3162)
!3162 = distinct !DILocation(line: 465, column: 37, scope: !2898)
!3163 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3162)
!3164 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !3165)
!3165 = distinct !DILocation(line: 465, column: 37, scope: !2898)
!3166 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !3165)
!3167 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3168)
!3168 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !3165)
!3169 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3168)
!3170 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3168)
!3171 = !DILocation(line: 465, column: 27, scope: !2898)
!3172 = !DILocation(line: 466, column: 42, scope: !2900)
!3173 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3174)
!3174 = distinct !DILocation(line: 466, column: 42, scope: !2900)
!3175 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3174)
!3176 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !3177)
!3177 = distinct !DILocation(line: 466, column: 42, scope: !2900)
!3178 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !3177)
!3179 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3180)
!3180 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !3177)
!3181 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3182)
!3182 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3180)
!3183 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3182)
!3184 = !DILocation(line: 1184, column: 13, scope: !2175, inlinedAt: !3182)
!3185 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3186)
!3186 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !3177)
!3187 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3186)
!3188 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3186)
!3189 = !DILocation(line: 466, column: 52, scope: !2900)
!3190 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3191)
!3191 = distinct !DILocation(line: 466, column: 52, scope: !2900)
!3192 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3191)
!3193 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !3194)
!3194 = distinct !DILocation(line: 466, column: 52, scope: !2900)
!3195 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !3194)
!3196 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3197)
!3197 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !3194)
!3198 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3197)
!3199 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3197)
!3200 = !DILocation(line: 466, column: 17, scope: !2900)
!3201 = !DILocation(line: 468, column: 26, scope: !2900)
!3202 = !DILocation(line: 468, column: 17, scope: !2902)
!3203 = !DILocation(line: 475, column: 48, scope: !2900)
!3204 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3205)
!3205 = distinct !DILocation(line: 475, column: 48, scope: !2900)
!3206 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3205)
!3207 = !DILocation(line: 469, column: 31, scope: !2902)
!3208 = !DILocation(line: 1015, column: 29, scope: !3073, inlinedAt: !3209)
!3209 = distinct !DILocation(line: 469, column: 31, scope: !2902)
!3210 = !DILocation(line: 1015, column: 35, scope: !3073, inlinedAt: !3209)
!3211 = !DILocation(line: 472, column: 32, scope: !3082, inlinedAt: !3212)
!3212 = distinct !DILocation(line: 1020, column: 18, scope: !3073, inlinedAt: !3209)
!3213 = !DILocation(line: 472, column: 38, scope: !3082, inlinedAt: !3212)
!3214 = !DILocation(line: 479, column: 18, scope: !3082, inlinedAt: !3212)
!3215 = !DILocation(line: 469, column: 21, scope: !2902)
!3216 = !DILocation(line: 470, column: 46, scope: !2902)
!3217 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3218)
!3218 = distinct !DILocation(line: 470, column: 46, scope: !2902)
!3219 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3218)
!3220 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !3221)
!3221 = distinct !DILocation(line: 470, column: 46, scope: !2902)
!3222 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !3221)
!3223 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3224)
!3224 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !3221)
!3225 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3224)
!3226 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3224)
!3227 = !DILocation(line: 470, column: 55, scope: !2902)
!3228 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3229)
!3229 = distinct !DILocation(line: 470, column: 55, scope: !2902)
!3230 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3229)
!3231 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !3232)
!3232 = distinct !DILocation(line: 470, column: 55, scope: !2902)
!3233 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !3232)
!3234 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3235)
!3235 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !3232)
!3236 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3237)
!3237 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3235)
!3238 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3237)
!3239 = !DILocation(line: 1184, column: 13, scope: !2175, inlinedAt: !3237)
!3240 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3241)
!3241 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !3232)
!3242 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3241)
!3243 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3241)
!3244 = !DILocation(line: 470, column: 21, scope: !2902)
!3245 = !DILocation(line: 471, column: 31, scope: !2902)
!3246 = !DILocation(line: 1015, column: 29, scope: !3073, inlinedAt: !3247)
!3247 = distinct !DILocation(line: 471, column: 31, scope: !2902)
!3248 = !DILocation(line: 1015, column: 35, scope: !3073, inlinedAt: !3247)
!3249 = !DILocation(line: 472, column: 32, scope: !3082, inlinedAt: !3250)
!3250 = distinct !DILocation(line: 1020, column: 18, scope: !3073, inlinedAt: !3247)
!3251 = !DILocation(line: 472, column: 38, scope: !3082, inlinedAt: !3250)
!3252 = !DILocation(line: 479, column: 18, scope: !3082, inlinedAt: !3250)
!3253 = !DILocation(line: 471, column: 21, scope: !2902)
!3254 = !DILocation(line: 472, column: 46, scope: !2902)
!3255 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3256)
!3256 = distinct !DILocation(line: 472, column: 46, scope: !2902)
!3257 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3256)
!3258 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !3259)
!3259 = distinct !DILocation(line: 472, column: 46, scope: !2902)
!3260 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !3259)
!3261 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3262)
!3262 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !3259)
!3263 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3264)
!3264 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3262)
!3265 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3264)
!3266 = !DILocation(line: 1184, column: 13, scope: !2175, inlinedAt: !3264)
!3267 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3268)
!3268 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !3259)
!3269 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3268)
!3270 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3268)
!3271 = !DILocation(line: 472, column: 56, scope: !2902)
!3272 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3273)
!3273 = distinct !DILocation(line: 472, column: 56, scope: !2902)
!3274 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3273)
!3275 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !3276)
!3276 = distinct !DILocation(line: 472, column: 56, scope: !2902)
!3277 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !3276)
!3278 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3279)
!3279 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !3276)
!3280 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3279)
!3281 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3279)
!3282 = !DILocation(line: 472, column: 21, scope: !2902)
!3283 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !3284)
!3284 = distinct !DILocation(line: 475, column: 48, scope: !2900)
!3285 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !3284)
!3286 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3287)
!3287 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !3284)
!3288 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3289)
!3289 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3287)
!3290 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3289)
!3291 = !DILocation(line: 1184, column: 13, scope: !2175, inlinedAt: !3289)
!3292 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3293)
!3293 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !3284)
!3294 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3293)
!3295 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3293)
!3296 = !DILocation(line: 475, column: 17, scope: !2900)
!3297 = !DILocation(line: 476, column: 29, scope: !2900)
!3298 = !DILocation(line: 476, column: 17, scope: !2900)
!3299 = !DILocation(line: 477, column: 27, scope: !2900)
!3300 = !DILocation(line: 1015, column: 29, scope: !3073, inlinedAt: !3301)
!3301 = distinct !DILocation(line: 477, column: 27, scope: !2900)
!3302 = !DILocation(line: 1015, column: 35, scope: !3073, inlinedAt: !3301)
!3303 = !DILocation(line: 472, column: 32, scope: !3082, inlinedAt: !3304)
!3304 = distinct !DILocation(line: 1020, column: 18, scope: !3073, inlinedAt: !3301)
!3305 = !DILocation(line: 472, column: 38, scope: !3082, inlinedAt: !3304)
!3306 = !DILocation(line: 479, column: 18, scope: !3082, inlinedAt: !3304)
!3307 = !DILocation(line: 477, column: 17, scope: !2900)
!3308 = !DILocation(line: 478, column: 27, scope: !2900)
!3309 = !DILocation(line: 1015, column: 29, scope: !3073, inlinedAt: !3310)
!3310 = distinct !DILocation(line: 478, column: 27, scope: !2900)
!3311 = !DILocation(line: 1015, column: 35, scope: !3073, inlinedAt: !3310)
!3312 = !DILocation(line: 472, column: 32, scope: !3082, inlinedAt: !3313)
!3313 = distinct !DILocation(line: 1020, column: 18, scope: !3073, inlinedAt: !3310)
!3314 = !DILocation(line: 472, column: 38, scope: !3082, inlinedAt: !3313)
!3315 = !DILocation(line: 479, column: 18, scope: !3082, inlinedAt: !3313)
!3316 = !DILocation(line: 478, column: 17, scope: !2900)
!3317 = !DILocation(line: 433, column: 9, scope: !2898)
!3318 = !DILocation(line: 494, column: 12, scope: !2898)
!3319 = !DILocation(line: 494, column: 23, scope: !2898)
!3320 = !DILocation(line: 491, column: 26, scope: !2898)
!3321 = !DILocation(line: 491, column: 32, scope: !2898)
!3322 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !3323)
!3323 = distinct !DILocation(line: 491, column: 26, scope: !2898)
!3324 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !3323)
!3325 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3326)
!3326 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !3323)
!3327 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3326)
!3328 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3326)
!3329 = !DILocation(line: 491, column: 13, scope: !2898)
!3330 = !DILocation(line: 482, column: 9, scope: !2898)
!3331 = !DILocation(line: 502, column: 12, scope: !2898)
!3332 = !DILocation(line: 499, column: 26, scope: !2898)
!3333 = !DILocation(line: 499, column: 32, scope: !2898)
!3334 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !3335)
!3335 = distinct !DILocation(line: 499, column: 26, scope: !2898)
!3336 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !3335)
!3337 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3338)
!3338 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !3335)
!3339 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3340)
!3340 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3338)
!3341 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3340)
!3342 = !DILocation(line: 1184, column: 13, scope: !2175, inlinedAt: !3340)
!3343 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3344)
!3344 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !3335)
!3345 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3344)
!3346 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3344)
!3347 = !DILocation(line: 499, column: 13, scope: !2898)
!3348 = !DILocation(line: 494, column: 9, scope: !2898)
!3349 = !DILocation(line: 511, column: 8, scope: !2880)
!3350 = !DILocation(line: 511, column: 18, scope: !2880)
!3351 = !DILocation(line: 534, column: 15, scope: !2880)
!3352 = !DILocation(line: 534, column: 25, scope: !2880)
!3353 = !DILocation(line: 514, column: 32, scope: !2880)
!3354 = !DILocation(line: 514, column: 35, scope: !2880)
!3355 = !DILocation(line: 514, column: 26, scope: !2880)
!3356 = !DILocation(line: 514, column: 9, scope: !2880)
!3357 = !DILocation(line: 514, column: 9, scope: !2904)
!3358 = !DILocation(line: 515, column: 15, scope: !2880)
!3359 = !DILocation(line: 515, column: 25, scope: !2880)
!3360 = !DILocation(line: 514, column: 9, scope: !2910)
!3361 = !DILocation(line: 506, column: 29, scope: !2017, inlinedAt: !3362)
!3362 = distinct !DILocation(line: 533, column: 15, scope: !2880)
!3363 = !DILocation(line: 533, column: 31, scope: !2880)
!3364 = !DILocation(line: 533, column: 9, scope: !2880)
!3365 = !DILocation(line: 528, column: 25, scope: !2880)
!3366 = !DILocalVariable(name: "self", arg: 1, scope: !3367, file: !276, line: 1098, type: !1166)
!3367 = distinct !DISubprogram(name: "sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h9806c7189095a3fcE", scope: !300, file: !276, line: 1098, type: !3074, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !3368)
!3368 = !{!3366, !3369}
!3369 = !DILocalVariable(name: "count", arg: 2, scope: !3367, file: !276, line: 1098, type: !9)
!3370 = !DILocation(line: 1098, column: 29, scope: !3367, inlinedAt: !3371)
!3371 = distinct !DILocation(line: 528, column: 25, scope: !2880)
!3372 = !DILocation(line: 1098, column: 35, scope: !3367, inlinedAt: !3371)
!3373 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3374)
!3374 = distinct !DILocation(line: 1103, column: 30, scope: !3367, inlinedAt: !3371)
!3375 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3376)
!3376 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3374)
!3377 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3376)
!3378 = !DILocation(line: 472, column: 32, scope: !3082, inlinedAt: !3379)
!3379 = distinct !DILocation(line: 1103, column: 18, scope: !3367, inlinedAt: !3371)
!3380 = !DILocation(line: 472, column: 38, scope: !3082, inlinedAt: !3379)
!3381 = !DILocation(line: 479, column: 18, scope: !3082, inlinedAt: !3379)
!3382 = !DILocation(line: 528, column: 17, scope: !2880)
!3383 = !DILocation(line: 529, column: 27, scope: !2880)
!3384 = !DILocation(line: 529, column: 45, scope: !2880)
!3385 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3386)
!3386 = distinct !DILocation(line: 529, column: 33, scope: !2880)
!3387 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3386)
!3388 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !3389)
!3389 = distinct !DILocation(line: 529, column: 27, scope: !2880)
!3390 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !3389)
!3391 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3392)
!3392 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !3389)
!3393 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3392)
!3394 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3392)
!3395 = !DILocation(line: 529, column: 55, scope: !2880)
!3396 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !3397)
!3397 = distinct !DILocation(line: 529, column: 55, scope: !2880)
!3398 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !3397)
!3399 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3400)
!3400 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !3397)
!3401 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3402)
!3402 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3400)
!3403 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3402)
!3404 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3405)
!3405 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !3397)
!3406 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3405)
!3407 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3405)
!3408 = !DILocation(line: 529, column: 17, scope: !2880)
!3409 = !DILocation(line: 530, column: 21, scope: !2880)
!3410 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !3411)
!3411 = distinct !DILocation(line: 530, column: 21, scope: !2880)
!3412 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !3411)
!3413 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3414)
!3414 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !3411)
!3415 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3416)
!3416 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3414)
!3417 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3416)
!3418 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3419)
!3419 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !3411)
!3420 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3419)
!3421 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3419)
!3422 = !DILocation(line: 530, column: 17, scope: !2880)
!3423 = !DILocation(line: 515, column: 9, scope: !2880)
!3424 = !DILocation(line: 551, column: 2, scope: !2844)
!3425 = !DILocation(line: 506, column: 29, scope: !2017, inlinedAt: !3426)
!3426 = distinct !DILocation(line: 549, column: 15, scope: !2880)
!3427 = !DILocation(line: 549, column: 31, scope: !2880)
!3428 = !DILocation(line: 549, column: 9, scope: !2880)
!3429 = !DILocation(line: 537, column: 32, scope: !2880)
!3430 = !DILocation(line: 537, column: 35, scope: !2880)
!3431 = !DILocation(line: 537, column: 26, scope: !2880)
!3432 = !DILocation(line: 537, column: 9, scope: !2880)
!3433 = !DILocation(line: 537, column: 9, scope: !2913)
!3434 = !DILocation(line: 538, column: 15, scope: !2880)
!3435 = !DILocation(line: 538, column: 25, scope: !2880)
!3436 = !DILocation(line: 537, column: 9, scope: !2917)
!3437 = !DILocation(line: 506, column: 29, scope: !2017, inlinedAt: !3438)
!3438 = distinct !DILocation(line: 546, column: 15, scope: !2880)
!3439 = !DILocation(line: 546, column: 31, scope: !2880)
!3440 = !DILocation(line: 546, column: 9, scope: !2880)
!3441 = !DILocation(line: 541, column: 25, scope: !2880)
!3442 = !DILocation(line: 1098, column: 29, scope: !3367, inlinedAt: !3443)
!3443 = distinct !DILocation(line: 541, column: 25, scope: !2880)
!3444 = !DILocation(line: 1098, column: 35, scope: !3367, inlinedAt: !3443)
!3445 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3446)
!3446 = distinct !DILocation(line: 1103, column: 30, scope: !3367, inlinedAt: !3443)
!3447 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3448)
!3448 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3446)
!3449 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3448)
!3450 = !DILocation(line: 472, column: 32, scope: !3082, inlinedAt: !3451)
!3451 = distinct !DILocation(line: 1103, column: 18, scope: !3367, inlinedAt: !3443)
!3452 = !DILocation(line: 472, column: 38, scope: !3082, inlinedAt: !3451)
!3453 = !DILocation(line: 479, column: 18, scope: !3082, inlinedAt: !3451)
!3454 = !DILocation(line: 541, column: 17, scope: !2880)
!3455 = !DILocation(line: 542, column: 27, scope: !2880)
!3456 = !DILocation(line: 542, column: 30, scope: !2880)
!3457 = !DILocation(line: 542, column: 48, scope: !2880)
!3458 = !DILocation(line: 53, column: 21, scope: !3153, inlinedAt: !3459)
!3459 = distinct !DILocation(line: 542, column: 36, scope: !2880)
!3460 = !DILocation(line: 54, column: 17, scope: !3153, inlinedAt: !3459)
!3461 = !DILocation(line: 542, column: 36, scope: !2880)
!3462 = !DILocation(line: 1098, column: 29, scope: !2159, inlinedAt: !3463)
!3463 = distinct !DILocation(line: 542, column: 30, scope: !2880)
!3464 = !DILocation(line: 1098, column: 35, scope: !2159, inlinedAt: !3463)
!3465 = !DILocation(line: 1358, column: 35, scope: !2166, inlinedAt: !3466)
!3466 = distinct !DILocation(line: 1103, column: 30, scope: !2159, inlinedAt: !3463)
!3467 = !DILocation(line: 1183, column: 35, scope: !2175, inlinedAt: !3468)
!3468 = distinct !DILocation(line: 1359, column: 13, scope: !2166, inlinedAt: !3466)
!3469 = !DILocation(line: 1183, column: 41, scope: !2175, inlinedAt: !3468)
!3470 = !DILocation(line: 1184, column: 13, scope: !2175, inlinedAt: !3468)
!3471 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3472)
!3472 = distinct !DILocation(line: 1103, column: 18, scope: !2159, inlinedAt: !3463)
!3473 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3472)
!3474 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3472)
!3475 = !DILocation(line: 542, column: 17, scope: !2880)
!3476 = !DILocation(line: 543, column: 21, scope: !2880)
!3477 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !3478)
!3478 = distinct !DILocation(line: 543, column: 21, scope: !2880)
!3479 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !3478)
!3480 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !3481)
!3481 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !3478)
!3482 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !3481)
!3483 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !3481)
!3484 = !DILocation(line: 543, column: 17, scope: !2880)
!3485 = !DILocation(line: 538, column: 9, scope: !2880)
!3486 = distinct !DISubprogram(name: "width<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h0c21c9ca181fb087E", scope: !3487, file: !2337, line: 341, type: !3488, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !3490)
!3487 = !DINamespace(name: "partition_in_blocks", scope: !1142)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!9, !294, !294}
!3490 = !{!3491, !3492}
!3491 = !DILocalVariable(name: "l", arg: 1, scope: !3486, file: !2337, line: 341, type: !294)
!3492 = !DILocalVariable(name: "r", arg: 2, scope: !3486, file: !2337, line: 341, type: !294)
!3493 = !DILocation(line: 341, column: 17, scope: !3486)
!3494 = !DILocation(line: 341, column: 28, scope: !3486)
!3495 = !DILocation(line: 342, column: 17, scope: !3486)
!3496 = !DILocation(line: 342, column: 9, scope: !3486)
!3497 = !DILocalVariable(name: "self", arg: 1, scope: !3498, file: !276, line: 209, type: !294)
!3498 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h0e24e821ad99af30E", scope: !300, file: !276, line: 209, type: !3499, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !3501)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{!9, !294}
!3501 = !{!3497}
!3502 = !DILocation(line: 209, column: 17, scope: !3498, inlinedAt: !3503)
!3503 = distinct !DILocation(line: 345, column: 10, scope: !3486)
!3504 = !DILocation(line: 57, column: 26, scope: !1277, inlinedAt: !3505)
!3505 = distinct !DILocation(line: 213, column: 33, scope: !3498, inlinedAt: !3503)
!3506 = !DILocation(line: 213, column: 18, scope: !3498, inlinedAt: !3503)
!3507 = !DILocation(line: 209, column: 17, scope: !3498, inlinedAt: !3508)
!3508 = distinct !DILocation(line: 345, column: 21, scope: !3486)
!3509 = !DILocation(line: 57, column: 26, scope: !1277, inlinedAt: !3510)
!3510 = distinct !DILocation(line: 213, column: 33, scope: !3498, inlinedAt: !3508)
!3511 = !DILocation(line: 213, column: 18, scope: !3498, inlinedAt: !3508)
!3512 = !DILocation(line: 345, column: 9, scope: !3486)
!3513 = !DILocation(line: 346, column: 6, scope: !3486)
!3514 = distinct !DISubprogram(name: "width<u8>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17hbdebd1c3af87ce41E", scope: !3487, file: !2337, line: 341, type: !3515, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1659, retainedNodes: !3517)
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!9, !1166, !1166}
!3517 = !{!3518, !3519}
!3518 = !DILocalVariable(name: "l", arg: 1, scope: !3514, file: !2337, line: 341, type: !1166)
!3519 = !DILocalVariable(name: "r", arg: 2, scope: !3514, file: !2337, line: 341, type: !1166)
!3520 = !DILocation(line: 341, column: 17, scope: !3514)
!3521 = !DILocation(line: 341, column: 28, scope: !3514)
!3522 = !DILocation(line: 342, column: 17, scope: !3514)
!3523 = !DILocation(line: 342, column: 9, scope: !3514)
!3524 = !DILocation(line: 209, column: 17, scope: !1655, inlinedAt: !3525)
!3525 = distinct !DILocation(line: 345, column: 10, scope: !3514)
!3526 = !DILocation(line: 57, column: 26, scope: !1664, inlinedAt: !3527)
!3527 = distinct !DILocation(line: 213, column: 33, scope: !1655, inlinedAt: !3525)
!3528 = !DILocation(line: 213, column: 18, scope: !1655, inlinedAt: !3525)
!3529 = !DILocation(line: 209, column: 17, scope: !1655, inlinedAt: !3530)
!3530 = distinct !DILocation(line: 345, column: 21, scope: !3514)
!3531 = !DILocation(line: 57, column: 26, scope: !1664, inlinedAt: !3532)
!3532 = distinct !DILocation(line: 213, column: 33, scope: !1655, inlinedAt: !3530)
!3533 = !DILocation(line: 213, column: 18, scope: !1655, inlinedAt: !3530)
!3534 = !DILocation(line: 345, column: 9, scope: !3514)
!3535 = !DILocation(line: 346, column: 6, scope: !3514)
!3536 = distinct !DISubprogram(name: "partial_insertion_sort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort22partial_insertion_sort17h200c50a677d97f2cE", scope: !1142, file: !2337, line: 198, type: !3537, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !3539)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!421, !354, !1112}
!3539 = !{!3540, !3541, !3542, !3544, !3546}
!3540 = !DILocalVariable(name: "v", arg: 1, scope: !3536, file: !2337, line: 198, type: !354)
!3541 = !DILocalVariable(name: "is_less", arg: 2, scope: !3536, file: !2337, line: 198, type: !1112)
!3542 = !DILocalVariable(name: "len", scope: !3543, file: !2337, line: 207, type: !9, align: 8)
!3543 = distinct !DILexicalBlock(scope: !3536, file: !2337, line: 207, column: 5)
!3544 = !DILocalVariable(name: "i", scope: !3545, file: !2337, line: 208, type: !9, align: 8)
!3545 = distinct !DILexicalBlock(scope: !3543, file: !2337, line: 208, column: 5)
!3546 = !DILocalVariable(name: "iter", scope: !3547, file: !2337, line: 210, type: !175, align: 8)
!3547 = distinct !DILexicalBlock(scope: !3545, file: !2337, line: 210, column: 5)
!3548 = !DILocation(line: 198, column: 33, scope: !3536)
!3549 = !DILocation(line: 198, column: 46, scope: !3536)
!3550 = !DILocation(line: 208, column: 9, scope: !3545)
!3551 = !DILocation(line: 210, column: 14, scope: !3547)
!3552 = !DILocation(line: 207, column: 15, scope: !3536)
!3553 = !DILocation(line: 207, column: 9, scope: !3543)
!3554 = !DILocation(line: 208, column: 17, scope: !3543)
!3555 = !DILocation(line: 210, column: 14, scope: !3545)
!3556 = !DILocation(line: 210, column: 5, scope: !3547)
!3557 = !DILocation(line: 243, column: 5, scope: !3545)
!3558 = !DILocation(line: 244, column: 2, scope: !3536)
!3559 = !DILocation(line: 215, column: 19, scope: !3547)
!3560 = !DILocation(line: 215, column: 55, scope: !3547)
!3561 = !DILocation(line: 215, column: 39, scope: !3547)
!3562 = !DILocation(line: 215, column: 75, scope: !3547)
!3563 = !DILocation(line: 215, column: 59, scope: !3547)
!3564 = !DILocation(line: 215, column: 31, scope: !3547)
!3565 = !DILocation(line: 215, column: 30, scope: !3547)
!3566 = !DILocation(line: 221, column: 12, scope: !3547)
!3567 = !DILocation(line: 216, column: 17, scope: !3547)
!3568 = !DILocation(line: 215, column: 13, scope: !3547)
!3569 = !DILocation(line: 226, column: 12, scope: !3547)
!3570 = !DILocation(line: 222, column: 20, scope: !3547)
!3571 = !DILocation(line: 1, column: 1, scope: !3572)
!3572 = !DILexicalBlockFile(scope: !3547, file: !3573, discriminator: 0)
!3573 = !DIFile(filename: "src/lib.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "ef3e180ca1e13bae3e0904cdd600c8e7")
!3574 = !DILocation(line: 231, column: 16, scope: !3547)
!3575 = !DILocation(line: 227, column: 20, scope: !3547)
!3576 = !DILocation(line: 231, column: 23, scope: !3547)
!3577 = !DILocation(line: 231, column: 9, scope: !3547)
!3578 = !DILocation(line: 233, column: 12, scope: !3547)
!3579 = !DILocation(line: 235, column: 48, scope: !3547)
!3580 = !DILocation(line: 235, column: 46, scope: !3547)
!3581 = !DILocation(line: 235, column: 44, scope: !3547)
!3582 = !DILocation(line: 235, column: 52, scope: !3547)
!3583 = !DILocation(line: 235, column: 13, scope: !3547)
!3584 = !DILocation(line: 238, column: 49, scope: !3547)
!3585 = !DILocation(line: 238, column: 47, scope: !3547)
!3586 = !DILocation(line: 238, column: 45, scope: !3547)
!3587 = !DILocation(line: 238, column: 13, scope: !3547)
!3588 = distinct !DISubprogram(name: "insertion_sort_shift_left<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort25insertion_sort_shift_left17h08602fcfded903daE", scope: !1142, file: !2337, line: 148, type: !3589, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !3591)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{null, !354, !9, !1112}
!3591 = !{!3592, !3593, !3594, !3595, !3597, !3599}
!3592 = !DILocalVariable(name: "v", arg: 1, scope: !3588, file: !2337, line: 148, type: !354)
!3593 = !DILocalVariable(name: "offset", arg: 2, scope: !3588, file: !2337, line: 148, type: !9)
!3594 = !DILocalVariable(name: "is_less", arg: 3, scope: !3588, file: !2337, line: 148, type: !1112)
!3595 = !DILocalVariable(name: "len", scope: !3596, file: !2337, line: 152, type: !9, align: 8)
!3596 = distinct !DILexicalBlock(scope: !3588, file: !2337, line: 152, column: 5)
!3597 = !DILocalVariable(name: "iter", scope: !3598, file: !2337, line: 158, type: !175, align: 8)
!3598 = distinct !DILexicalBlock(scope: !3596, file: !2337, line: 158, column: 5)
!3599 = !DILocalVariable(name: "i", scope: !3600, file: !2337, line: 158, type: !9, align: 8)
!3600 = distinct !DILexicalBlock(scope: !3598, file: !2337, line: 158, column: 26)
!3601 = !DILocation(line: 148, column: 36, scope: !3588)
!3602 = !DILocation(line: 148, column: 49, scope: !3588)
!3603 = !DILocation(line: 148, column: 64, scope: !3588)
!3604 = !DILocation(line: 158, column: 14, scope: !3598)
!3605 = !DILocation(line: 152, column: 15, scope: !3588)
!3606 = !DILocation(line: 152, column: 9, scope: !3596)
!3607 = !DILocation(line: 155, column: 13, scope: !3596)
!3608 = !DILocation(line: 155, column: 28, scope: !3596)
!3609 = !DILocation(line: 155, column: 5, scope: !3596)
!3610 = !DILocation(line: 158, column: 14, scope: !3596)
!3611 = !DILocation(line: 158, column: 5, scope: !3598)
!3612 = !DILocation(line: 166, column: 2, scope: !3588)
!3613 = !DILocation(line: 158, column: 9, scope: !3598)
!3614 = !DILocation(line: 158, column: 9, scope: !3600)
!3615 = !DILocation(line: 163, column: 32, scope: !3600)
!3616 = !DILocation(line: 163, column: 30, scope: !3600)
!3617 = !DILocation(line: 163, column: 13, scope: !3600)
!3618 = distinct !DISubprogram(name: "insertion_sort_shift_right<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort26insertion_sort_shift_right17h23465846f6116262E", scope: !1142, file: !2337, line: 173, type: !3589, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !3619)
!3619 = !{!3620, !3621, !3622, !3623, !3625, !3627}
!3620 = !DILocalVariable(name: "v", arg: 1, scope: !3618, file: !2337, line: 173, type: !354)
!3621 = !DILocalVariable(name: "offset", arg: 2, scope: !3618, file: !2337, line: 173, type: !9)
!3622 = !DILocalVariable(name: "is_less", arg: 3, scope: !3618, file: !2337, line: 173, type: !1112)
!3623 = !DILocalVariable(name: "len", scope: !3624, file: !2337, line: 177, type: !9, align: 8)
!3624 = distinct !DILexicalBlock(scope: !3618, file: !2337, line: 177, column: 5)
!3625 = !DILocalVariable(name: "iter", scope: !3626, file: !2337, line: 183, type: !2456, align: 8)
!3626 = distinct !DILexicalBlock(scope: !3624, file: !2337, line: 183, column: 5)
!3627 = !DILocalVariable(name: "i", scope: !3628, file: !2337, line: 183, type: !9, align: 8)
!3628 = distinct !DILexicalBlock(scope: !3626, file: !2337, line: 183, column: 32)
!3629 = !DILocation(line: 173, column: 37, scope: !3618)
!3630 = !DILocation(line: 173, column: 50, scope: !3618)
!3631 = !DILocation(line: 173, column: 65, scope: !3618)
!3632 = !DILocation(line: 183, column: 14, scope: !3626)
!3633 = !DILocation(line: 177, column: 15, scope: !3618)
!3634 = !DILocation(line: 177, column: 9, scope: !3624)
!3635 = !DILocation(line: 180, column: 13, scope: !3624)
!3636 = !DILocation(line: 180, column: 28, scope: !3624)
!3637 = !DILocation(line: 180, column: 45, scope: !3624)
!3638 = !DILocation(line: 180, column: 5, scope: !3624)
!3639 = !DILocation(line: 183, column: 14, scope: !3624)
!3640 = !DILocation(line: 183, column: 5, scope: !3626)
!3641 = !DILocation(line: 192, column: 2, scope: !3618)
!3642 = !DILocation(line: 183, column: 9, scope: !3626)
!3643 = !DILocation(line: 183, column: 9, scope: !3628)
!3644 = !DILocation(line: 189, column: 32, scope: !3628)
!3645 = !DILocation(line: 189, column: 30, scope: !3628)
!3646 = !DILocation(line: 189, column: 13, scope: !3628)
!3647 = distinct !DISubprogram(name: "recurse<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort7recurse17hc3b3c0b42fe2b898E", scope: !1142, file: !2337, line: 797, type: !3648, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !3661)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{null, !354, !1112, !3650, !27}
!3650 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !479, file: !2, size: 64, align: 64, elements: !3651, templateParams: !24, identifier: "2ba5750ce15ebe9688355766e2725fb3")
!3651 = !{!3652}
!3652 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3650, file: !2, size: 64, align: 64, elements: !3653, templateParams: !24, identifier: "fe0111d66300804266ff868b1a231886", discriminator: !3660)
!3653 = !{!3654, !3656}
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3652, file: !2, baseType: !3655, size: 64, align: 64, extraData: i64 0)
!3655 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3650, file: !2, size: 64, align: 64, elements: !24, templateParams: !827, identifier: "39c86858dfa36ab935c50eae7dce999a")
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3652, file: !2, baseType: !3657, size: 64, align: 64)
!3657 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3650, file: !2, size: 64, align: 64, elements: !3658, templateParams: !827, identifier: "6da596d5e7d4c5149254751bc519726")
!3658 = !{!3659}
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3657, file: !2, baseType: !12, size: 64, align: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, scope: !3650, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!3661 = !{!3662, !3663, !3664, !3665, !3666, !3668, !3670, !3672, !3674, !3675, !3677, !3679, !3681, !3682, !3684, !3685, !3687, !3688}
!3662 = !DILocalVariable(name: "v", arg: 1, scope: !3647, file: !2337, line: 797, type: !354)
!3663 = !DILocalVariable(name: "is_less", arg: 2, scope: !3647, file: !2337, line: 797, type: !1112)
!3664 = !DILocalVariable(name: "pred", arg: 3, scope: !3647, file: !2337, line: 797, type: !3650)
!3665 = !DILocalVariable(name: "limit", arg: 4, scope: !3647, file: !2337, line: 797, type: !27)
!3666 = !DILocalVariable(name: "was_balanced", scope: !3667, file: !2337, line: 805, type: !421, align: 1)
!3667 = distinct !DILexicalBlock(scope: !3647, file: !2337, line: 805, column: 5)
!3668 = !DILocalVariable(name: "was_partitioned", scope: !3669, file: !2337, line: 807, type: !421, align: 1)
!3669 = distinct !DILexicalBlock(scope: !3667, file: !2337, line: 807, column: 5)
!3670 = !DILocalVariable(name: "len", scope: !3671, file: !2337, line: 810, type: !9, align: 8)
!3671 = distinct !DILexicalBlock(scope: !3669, file: !2337, line: 810, column: 9)
!3672 = !DILocalVariable(name: "pivot", scope: !3673, file: !2337, line: 835, type: !9, align: 8)
!3673 = distinct !DILexicalBlock(scope: !3671, file: !2337, line: 835, column: 9)
!3674 = !DILocalVariable(name: "likely_sorted", scope: !3673, file: !2337, line: 835, type: !421, align: 1)
!3675 = !DILocalVariable(name: "p", scope: !3676, file: !2337, line: 850, type: !12, align: 8)
!3676 = distinct !DILexicalBlock(scope: !3673, file: !2337, line: 850, column: 31)
!3677 = !DILocalVariable(name: "mid", scope: !3678, file: !2337, line: 852, type: !9, align: 8)
!3678 = distinct !DILexicalBlock(scope: !3676, file: !2337, line: 852, column: 17)
!3679 = !DILocalVariable(name: "mid", scope: !3680, file: !2337, line: 861, type: !9, align: 8)
!3680 = distinct !DILexicalBlock(scope: !3673, file: !2337, line: 861, column: 9)
!3681 = !DILocalVariable(name: "was_p", scope: !3680, file: !2337, line: 861, type: !421, align: 1)
!3682 = !DILocalVariable(name: "left", scope: !3683, file: !2337, line: 866, type: !354, align: 8)
!3683 = distinct !DILexicalBlock(scope: !3680, file: !2337, line: 866, column: 9)
!3684 = !DILocalVariable(name: "right", scope: !3683, file: !2337, line: 866, type: !354, align: 8)
!3685 = !DILocalVariable(name: "pivot", scope: !3686, file: !2337, line: 867, type: !354, align: 8)
!3686 = distinct !DILexicalBlock(scope: !3683, file: !2337, line: 867, column: 9)
!3687 = !DILocalVariable(name: "right", scope: !3686, file: !2337, line: 867, type: !354, align: 8)
!3688 = !DILocalVariable(name: "pivot", scope: !3689, file: !2337, line: 868, type: !12, align: 8)
!3689 = distinct !DILexicalBlock(scope: !3686, file: !2337, line: 868, column: 9)
!3690 = !DILocation(line: 797, column: 22, scope: !3647)
!3691 = !DILocation(line: 797, column: 42, scope: !3647)
!3692 = !DILocation(line: 797, column: 59, scope: !3647)
!3693 = !DILocation(line: 797, column: 84, scope: !3647)
!3694 = !DILocation(line: 805, column: 9, scope: !3667)
!3695 = !DILocation(line: 807, column: 9, scope: !3669)
!3696 = !DILocation(line: 805, column: 28, scope: !3647)
!3697 = !DILocation(line: 807, column: 31, scope: !3667)
!3698 = !DILocation(line: 809, column: 5, scope: !3669)
!3699 = !DILocation(line: 810, column: 19, scope: !3669)
!3700 = !DILocation(line: 810, column: 13, scope: !3671)
!3701 = !DILocation(line: 813, column: 12, scope: !3671)
!3702 = !DILocation(line: 822, column: 12, scope: !3671)
!3703 = !DILocation(line: 814, column: 16, scope: !3671)
!3704 = !DILocation(line: 882, column: 2, scope: !3647)
!3705 = !DILocation(line: 815, column: 43, scope: !3671)
!3706 = !DILocation(line: 815, column: 17, scope: !3671)
!3707 = !DILocation(line: 823, column: 22, scope: !3671)
!3708 = !DILocation(line: 823, column: 13, scope: !3671)
!3709 = !DILocation(line: 829, column: 13, scope: !3671)
!3710 = !DILocation(line: 829, column: 12, scope: !3671)
!3711 = !DILocation(line: 835, column: 51, scope: !3671)
!3712 = !DILocation(line: 835, column: 38, scope: !3671)
!3713 = !DILocation(line: 835, column: 14, scope: !3671)
!3714 = !DILocation(line: 835, column: 14, scope: !3673)
!3715 = !DILocation(line: 835, column: 21, scope: !3671)
!3716 = !DILocation(line: 835, column: 21, scope: !3673)
!3717 = !DILocation(line: 839, column: 12, scope: !3673)
!3718 = !DILocation(line: 830, column: 28, scope: !3671)
!3719 = !DILocation(line: 830, column: 13, scope: !3671)
!3720 = !DILocation(line: 831, column: 13, scope: !3671)
!3721 = !DILocation(line: 829, column: 9, scope: !3671)
!3722 = !DILocation(line: 839, column: 28, scope: !3673)
!3723 = !DILocation(line: 850, column: 16, scope: !3676)
!3724 = !DILocation(line: 842, column: 39, scope: !3673)
!3725 = !DILocation(line: 842, column: 16, scope: !3673)
!3726 = !DILocation(line: 850, column: 21, scope: !3676)
!3727 = !DILocation(line: 851, column: 29, scope: !3676)
!3728 = !DILocation(line: 861, column: 38, scope: !3673)
!3729 = !DILocation(line: 861, column: 28, scope: !3673)
!3730 = !DILocation(line: 861, column: 14, scope: !3673)
!3731 = !DILocation(line: 861, column: 14, scope: !3680)
!3732 = !DILocation(line: 861, column: 19, scope: !3673)
!3733 = !DILocation(line: 861, column: 19, scope: !3680)
!3734 = !DILocation(line: 862, column: 38, scope: !3680)
!3735 = !DILocation(line: 851, column: 28, scope: !3676)
!3736 = !DILocation(line: 851, column: 17, scope: !3676)
!3737 = !DILocation(line: 851, column: 16, scope: !3676)
!3738 = !DILocation(line: 852, column: 43, scope: !3676)
!3739 = !DILocation(line: 852, column: 27, scope: !3676)
!3740 = !DILocation(line: 852, column: 21, scope: !3678)
!3741 = !DILocation(line: 855, column: 26, scope: !3678)
!3742 = !DILocation(line: 855, column: 28, scope: !3678)
!3743 = !DILocation(line: 855, column: 17, scope: !3678)
!3744 = !DILocation(line: 1, column: 1, scope: !3745)
!3745 = !DILexicalBlockFile(scope: !3669, file: !3573, discriminator: 0)
!3746 = !DILocation(line: 862, column: 24, scope: !3680)
!3747 = !DILocation(line: 862, column: 52, scope: !3680)
!3748 = !DILocation(line: 862, column: 9, scope: !3680)
!3749 = !DILocation(line: 863, column: 9, scope: !3680)
!3750 = !DILocation(line: 866, column: 29, scope: !3680)
!3751 = !DILocation(line: 866, column: 14, scope: !3680)
!3752 = !DILocation(line: 866, column: 14, scope: !3683)
!3753 = !DILocation(line: 866, column: 20, scope: !3680)
!3754 = !DILocation(line: 866, column: 20, scope: !3683)
!3755 = !DILocation(line: 867, column: 30, scope: !3683)
!3756 = !DILocation(line: 867, column: 14, scope: !3683)
!3757 = !DILocation(line: 867, column: 14, scope: !3686)
!3758 = !DILocation(line: 867, column: 21, scope: !3683)
!3759 = !DILocation(line: 867, column: 21, scope: !3686)
!3760 = !DILocation(line: 868, column: 22, scope: !3686)
!3761 = !DILocation(line: 868, column: 21, scope: !3686)
!3762 = !DILocation(line: 868, column: 13, scope: !3689)
!3763 = !DILocation(line: 873, column: 12, scope: !3689)
!3764 = !DILocation(line: 878, column: 37, scope: !3689)
!3765 = !DILocation(line: 878, column: 50, scope: !3689)
!3766 = !DILocation(line: 878, column: 13, scope: !3689)
!3767 = !DILocation(line: 879, column: 13, scope: !3689)
!3768 = !DILocation(line: 873, column: 9, scope: !3689)
!3769 = !DILocation(line: 874, column: 36, scope: !3689)
!3770 = !DILocation(line: 874, column: 42, scope: !3689)
!3771 = !DILocation(line: 874, column: 13, scope: !3689)
!3772 = !DILocation(line: 875, column: 13, scope: !3689)
!3773 = !DILocation(line: 876, column: 20, scope: !3689)
!3774 = !DILocation(line: 876, column: 13, scope: !3689)
!3775 = distinct !DISubprogram(name: "heapsort<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort17h740f83468f1a1e0eE", scope: !1142, file: !2337, line: 249, type: !2338, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3793, retainedNodes: !3776)
!3776 = !{!3777, !3778, !3779, !3785, !3787, !3789, !3791}
!3777 = !DILocalVariable(name: "v", arg: 1, scope: !3775, file: !2337, line: 249, type: !354)
!3778 = !DILocalVariable(name: "is_less", arg: 2, scope: !3775, file: !2337, line: 249, type: !1112)
!3779 = !DILocalVariable(name: "sift_down", scope: !3780, file: !2337, line: 254, type: !3781, align: 8)
!3780 = distinct !DILexicalBlock(scope: !3775, file: !2337, line: 254, column: 5)
!3781 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !3782, file: !2, size: 64, align: 64, elements: !3783, templateParams: !24, identifier: "6b89150e72cdbd15df731cd5e37d1ad4")
!3782 = !DINamespace(name: "heapsort", scope: !1142)
!3783 = !{!3784}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !3781, file: !2, baseType: !1111, size: 64, align: 64)
!3785 = !DILocalVariable(name: "iter", scope: !3786, file: !2337, line: 282, type: !2456, align: 8)
!3786 = distinct !DILexicalBlock(scope: !3780, file: !2337, line: 282, column: 5)
!3787 = !DILocalVariable(name: "i", scope: !3788, file: !2337, line: 282, type: !9, align: 8)
!3788 = distinct !DILexicalBlock(scope: !3786, file: !2337, line: 282, column: 37)
!3789 = !DILocalVariable(name: "iter", scope: !3790, file: !2337, line: 287, type: !2456, align: 8)
!3790 = distinct !DILexicalBlock(scope: !3780, file: !2337, line: 287, column: 5)
!3791 = !DILocalVariable(name: "i", scope: !3792, file: !2337, line: 287, type: !9, align: 8)
!3792 = distinct !DILexicalBlock(scope: !3790, file: !2337, line: 287, column: 33)
!3793 = !{!191, !3794}
!3794 = !DITemplateTypeParameter(name: "F", type: !1112)
!3795 = !DILocation(line: 249, column: 23, scope: !3775)
!3796 = !DILocation(line: 249, column: 36, scope: !3775)
!3797 = !DILocation(line: 254, column: 9, scope: !3780)
!3798 = !DILocation(line: 282, column: 14, scope: !3786)
!3799 = !DILocation(line: 287, column: 14, scope: !3790)
!3800 = !DILocation(line: 254, column: 25, scope: !3775)
!3801 = !DILocation(line: 282, column: 18, scope: !3780)
!3802 = !DILocation(line: 282, column: 14, scope: !3780)
!3803 = !DILocation(line: 282, column: 5, scope: !3786)
!3804 = !DILocation(line: 287, column: 14, scope: !3780)
!3805 = !DILocation(line: 287, column: 5, scope: !3790)
!3806 = !DILocation(line: 282, column: 9, scope: !3786)
!3807 = !DILocation(line: 282, column: 9, scope: !3788)
!3808 = !DILocation(line: 283, column: 9, scope: !3788)
!3809 = !DILocation(line: 291, column: 2, scope: !3775)
!3810 = !DILocation(line: 287, column: 9, scope: !3790)
!3811 = !DILocation(line: 287, column: 9, scope: !3792)
!3812 = !DILocation(line: 288, column: 9, scope: !3792)
!3813 = !DILocation(line: 289, column: 26, scope: !3792)
!3814 = !DILocation(line: 289, column: 24, scope: !3792)
!3815 = !DILocation(line: 289, column: 9, scope: !3792)
!3816 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hb586cf36be65f1d1E", scope: !3782, file: !2337, line: 254, type: !3817, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3793, retainedNodes: !3820)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{null, !3819, !354, !9}
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::heapsort::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !3781, size: 64, align: 64, dwarfAddressSpace: 0)
!3820 = !{!3821, !3822, !3823, !3824}
!3821 = !DILocalVariable(name: "v", arg: 2, scope: !3816, file: !2337, line: 254, type: !354)
!3822 = !DILocalVariable(name: "node", arg: 3, scope: !3816, file: !2337, line: 254, type: !9)
!3823 = !DILocalVariable(name: "is_less", scope: !3816, file: !2337, line: 249, type: !1112, align: 8)
!3824 = !DILocalVariable(name: "child", scope: !3825, file: !2337, line: 257, type: !9, align: 8)
!3825 = distinct !DILexicalBlock(scope: !3816, file: !2337, line: 257, column: 13)
!3826 = !DILocation(line: 249, column: 40, scope: !3816)
!3827 = !DILocation(line: 254, column: 26, scope: !3816)
!3828 = !DILocation(line: 254, column: 39, scope: !3816)
!3829 = !DILocation(line: 257, column: 17, scope: !3825)
!3830 = !DILocation(line: 255, column: 9, scope: !3816)
!3831 = !DILocation(line: 257, column: 33, scope: !3816)
!3832 = !DILocation(line: 257, column: 29, scope: !3816)
!3833 = !DILocation(line: 258, column: 16, scope: !3825)
!3834 = !DILocation(line: 263, column: 16, scope: !3825)
!3835 = !DILocation(line: 279, column: 6, scope: !3816)
!3836 = !DILocation(line: 271, column: 17, scope: !3825)
!3837 = !DILocation(line: 271, column: 28, scope: !3825)
!3838 = !DILocation(line: 271, column: 26, scope: !3825)
!3839 = !DILocation(line: 267, column: 26, scope: !3825)
!3840 = !DILocation(line: 267, column: 37, scope: !3825)
!3841 = !DILocation(line: 267, column: 35, scope: !3825)
!3842 = !DILocation(line: 267, column: 34, scope: !3825)
!3843 = !DILocation(line: 267, column: 48, scope: !3825)
!3844 = !DILocation(line: 267, column: 46, scope: !3825)
!3845 = !DILocation(line: 267, column: 45, scope: !3825)
!3846 = !DILocation(line: 267, column: 17, scope: !3825)
!3847 = !DILocation(line: 263, column: 13, scope: !3825)
!3848 = !DILocation(line: 271, column: 25, scope: !3825)
!3849 = !DILocation(line: 271, column: 38, scope: !3825)
!3850 = !DILocation(line: 271, column: 36, scope: !3825)
!3851 = !DILocation(line: 271, column: 35, scope: !3825)
!3852 = !DILocation(line: 271, column: 16, scope: !3825)
!3853 = !DILocation(line: 276, column: 20, scope: !3825)
!3854 = !DILocation(line: 276, column: 26, scope: !3825)
!3855 = !DILocation(line: 276, column: 13, scope: !3825)
!3856 = !DILocation(line: 277, column: 20, scope: !3825)
!3857 = !DILocation(line: 277, column: 13, scope: !3825)
!3858 = distinct !DISubprogram(name: "partition<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9partition17h9e52fda665425d78E", scope: !1142, file: !2337, line: 560, type: !3859, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !3861)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!1030, !354, !9, !1112}
!3861 = !{!3862, !3863, !3864, !3865, !3867, !3868, !3870, !3871, !3873, !3875, !3877, !3879, !3881}
!3862 = !DILocalVariable(name: "v", arg: 1, scope: !3858, file: !2337, line: 560, type: !354)
!3863 = !DILocalVariable(name: "pivot", arg: 2, scope: !3858, file: !2337, line: 560, type: !9)
!3864 = !DILocalVariable(name: "is_less", arg: 3, scope: !3858, file: !2337, line: 560, type: !1112)
!3865 = !DILocalVariable(name: "mid", scope: !3866, file: !2337, line: 564, type: !9, align: 8)
!3866 = distinct !DILexicalBlock(scope: !3858, file: !2337, line: 564, column: 5)
!3867 = !DILocalVariable(name: "was_partitioned", scope: !3866, file: !2337, line: 564, type: !421, align: 1)
!3868 = !DILocalVariable(name: "pivot", scope: !3869, file: !2337, line: 567, type: !354, align: 8)
!3869 = distinct !DILexicalBlock(scope: !3858, file: !2337, line: 567, column: 9)
!3870 = !DILocalVariable(name: "v", scope: !3869, file: !2337, line: 567, type: !354, align: 8)
!3871 = !DILocalVariable(name: "pivot", scope: !3872, file: !2337, line: 568, type: !945, align: 8)
!3872 = distinct !DILexicalBlock(scope: !3869, file: !2337, line: 568, column: 9)
!3873 = !DILocalVariable(name: "tmp", scope: !3874, file: !2337, line: 574, type: !655, align: 8)
!3874 = distinct !DILexicalBlock(scope: !3872, file: !2337, line: 574, column: 9)
!3875 = !DILocalVariable(name: "_pivot_guard", scope: !3876, file: !2337, line: 575, type: !1141, align: 8)
!3876 = distinct !DILexicalBlock(scope: !3874, file: !2337, line: 575, column: 9)
!3877 = !DILocalVariable(name: "pivot", scope: !3878, file: !2337, line: 576, type: !12, align: 8)
!3878 = distinct !DILexicalBlock(scope: !3876, file: !2337, line: 576, column: 9)
!3879 = !DILocalVariable(name: "l", scope: !3880, file: !2337, line: 579, type: !9, align: 8)
!3880 = distinct !DILexicalBlock(scope: !3878, file: !2337, line: 579, column: 9)
!3881 = !DILocalVariable(name: "r", scope: !3882, file: !2337, line: 580, type: !9, align: 8)
!3882 = distinct !DILexicalBlock(scope: !3880, file: !2337, line: 580, column: 9)
!3883 = !DILocation(line: 560, column: 20, scope: !3858)
!3884 = !DILocation(line: 560, column: 33, scope: !3858)
!3885 = !DILocation(line: 560, column: 47, scope: !3858)
!3886 = !DILocation(line: 574, column: 13, scope: !3874)
!3887 = !DILocation(line: 575, column: 13, scope: !3876)
!3888 = !DILocation(line: 579, column: 13, scope: !3880)
!3889 = !DILocation(line: 580, column: 13, scope: !3882)
!3890 = !DILocation(line: 566, column: 9, scope: !3858)
!3891 = !DILocation(line: 567, column: 26, scope: !3858)
!3892 = !DILocation(line: 567, column: 14, scope: !3858)
!3893 = !DILocation(line: 567, column: 14, scope: !3869)
!3894 = !DILocation(line: 567, column: 21, scope: !3858)
!3895 = !DILocation(line: 567, column: 21, scope: !3869)
!3896 = !DILocation(line: 568, column: 26, scope: !3869)
!3897 = !DILocation(line: 568, column: 21, scope: !3869)
!3898 = !DILocation(line: 568, column: 13, scope: !3872)
!3899 = !DILocation(line: 574, column: 51, scope: !3872)
!3900 = !DILocation(line: 70, column: 22, scope: !1003, inlinedAt: !3901)
!3901 = distinct !DILocation(line: 574, column: 19, scope: !3872)
!3902 = !DILocation(line: 71, column: 9, scope: !1003, inlinedAt: !3901)
!3903 = !DILocation(line: 153, column: 14, scope: !2374, inlinedAt: !3904)
!3904 = distinct !DILocation(line: 575, column: 50, scope: !3874)
!3905 = !DILocation(line: 575, column: 28, scope: !3874)
!3906 = !DILocation(line: 153, column: 14, scope: !2374, inlinedAt: !3907)
!3907 = distinct !DILocation(line: 576, column: 22, scope: !3876)
!3908 = !DILocation(line: 576, column: 21, scope: !3876)
!3909 = !DILocation(line: 576, column: 13, scope: !3878)
!3910 = !DILocation(line: 579, column: 21, scope: !3878)
!3911 = !DILocation(line: 580, column: 21, scope: !3880)
!3912 = !DILocation(line: 588, column: 13, scope: !3882)
!3913 = !DILocation(line: 588, column: 19, scope: !3882)
!3914 = !DILocation(line: 588, column: 23, scope: !3882)
!3915 = !DILocation(line: 588, column: 52, scope: !3882)
!3916 = !DILocation(line: 588, column: 36, scope: !3882)
!3917 = !DILocation(line: 588, column: 28, scope: !3882)
!3918 = !DILocation(line: 593, column: 19, scope: !3882)
!3919 = !DILocation(line: 593, column: 23, scope: !3882)
!3920 = !DILocation(line: 589, column: 17, scope: !3882)
!3921 = !DILocation(line: 593, column: 53, scope: !3882)
!3922 = !DILocation(line: 593, column: 37, scope: !3882)
!3923 = !DILocation(line: 593, column: 29, scope: !3882)
!3924 = !DILocation(line: 593, column: 28, scope: !3882)
!3925 = !DILocation(line: 598, column: 10, scope: !3882)
!3926 = !DILocation(line: 598, column: 41, scope: !3882)
!3927 = !DILocation(line: 598, column: 44, scope: !3882)
!3928 = !DILocation(line: 598, column: 39, scope: !3882)
!3929 = !DILocation(line: 598, column: 14, scope: !3882)
!3930 = !DILocation(line: 594, column: 17, scope: !3882)
!3931 = !DILocation(line: 593, column: 13, scope: !3882)
!3932 = !DILocation(line: 598, column: 65, scope: !3882)
!3933 = !DILocation(line: 598, column: 70, scope: !3882)
!3934 = !DILocation(line: 598, column: 9, scope: !3882)
!3935 = !DILocation(line: 603, column: 5, scope: !3874)
!3936 = !DILocation(line: 564, column: 10, scope: !3858)
!3937 = !DILocation(line: 564, column: 10, scope: !3866)
!3938 = !DILocation(line: 564, column: 15, scope: !3858)
!3939 = !DILocation(line: 564, column: 15, scope: !3866)
!3940 = !DILocation(line: 606, column: 5, scope: !3866)
!3941 = !DILocation(line: 608, column: 5, scope: !3866)
!3942 = !DILocation(line: 609, column: 2, scope: !3858)
!3943 = distinct !DISubprogram(name: "quicksort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9quicksort17h8a9ffd99e6bab11aE", scope: !1142, file: !2337, line: 885, type: !3944, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2353, retainedNodes: !3946)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{null, !354, !1113}
!3946 = !{!3947, !3948, !3949}
!3947 = !DILocalVariable(name: "v", arg: 1, scope: !3943, file: !2337, line: 885, type: !354)
!3948 = !DILocalVariable(name: "is_less", arg: 2, scope: !3943, file: !2337, line: 885, type: !1113)
!3949 = !DILocalVariable(name: "limit", scope: !3950, file: !2337, line: 895, type: !27, align: 4)
!3950 = distinct !DILexicalBlock(scope: !3943, file: !2337, line: 895, column: 5)
!3951 = !DILocation(line: 885, column: 24, scope: !3943)
!3952 = !DILocation(line: 885, column: 37, scope: !3943)
!3953 = !DILocation(line: 890, column: 8, scope: !3943)
!3954 = !DILocalVariable(name: "self", arg: 1, scope: !3955, file: !1013, line: 148, type: !9)
!3955 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13leading_zeros17h186f5cc5cdb96a45E", scope: !1014, file: !1013, line: 148, type: !1197, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3956)
!3956 = !{!3954}
!3957 = !DILocation(line: 148, column: 36, scope: !3955, inlinedAt: !3958)
!3958 = distinct !DILocation(line: 895, column: 31, scope: !3943)
!3959 = !DILocation(line: 149, column: 13, scope: !3955, inlinedAt: !3958)
!3960 = !DILocation(line: 895, column: 17, scope: !3943)
!3961 = !DILocation(line: 898, column: 1, scope: !3943)
!3962 = !DILocation(line: 898, column: 2, scope: !3943)
!3963 = !DILocation(line: 895, column: 9, scope: !3950)
!3964 = !DILocation(line: 897, column: 30, scope: !3950)
!3965 = !DILocation(line: 897, column: 5, scope: !3950)
!3966 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hfec816eab528aad6E", scope: !3967, file: !164, line: 18, type: !3968, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1953, retainedNodes: !3970)
!3967 = !DINamespace(name: "{impl#0}", scope: !166)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!323, !323, !175, !327}
!3970 = !{!3971, !3972}
!3971 = !DILocalVariable(name: "self", arg: 1, scope: !3966, file: !164, line: 18, type: !323)
!3972 = !DILocalVariable(name: "index", arg: 2, scope: !3966, file: !164, line: 18, type: !175)
!3973 = !DILocation(line: 18, column: 14, scope: !3966)
!3974 = !DILocation(line: 18, column: 21, scope: !3966)
!3975 = !DILocation(line: 19, column: 9, scope: !3966)
!3976 = !DILocation(line: 20, column: 6, scope: !3966)
!3977 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h24a7347732aef70aE", scope: !3978, file: !164, line: 30, type: !3979, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1953, retainedNodes: !3981)
!3978 = !DINamespace(name: "{impl#1}", scope: !166)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!354, !354, !175, !327}
!3981 = !{!3982, !3983}
!3982 = !DILocalVariable(name: "self", arg: 1, scope: !3977, file: !164, line: 30, type: !354)
!3983 = !DILocalVariable(name: "index", arg: 2, scope: !3977, file: !164, line: 30, type: !175)
!3984 = !DILocation(line: 30, column: 18, scope: !3977)
!3985 = !DILocation(line: 30, column: 29, scope: !3977)
!3986 = !DILocation(line: 31, column: 9, scope: !3977)
!3987 = !DILocation(line: 32, column: 6, scope: !3977)
!3988 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeToInclusive<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5488d93d2bd9a2b1E", scope: !3978, file: !164, line: 30, type: !3989, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3994, retainedNodes: !3991)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!354, !354, !436, !327}
!3991 = !{!3992, !3993}
!3992 = !DILocalVariable(name: "self", arg: 1, scope: !3988, file: !164, line: 30, type: !354)
!3993 = !DILocalVariable(name: "index", arg: 2, scope: !3988, file: !164, line: 30, type: !436)
!3994 = !{!191, !3995}
!3995 = !DITemplateTypeParameter(name: "I", type: !436)
!3996 = !DILocation(line: 30, column: 18, scope: !3988)
!3997 = !DILocation(line: 30, column: 29, scope: !3988)
!3998 = !DILocation(line: 31, column: 9, scope: !3988)
!3999 = !DILocation(line: 32, column: 6, scope: !3988)
!4000 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb8e723db52cf0423E", scope: !3978, file: !164, line: 30, type: !4001, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4006, retainedNodes: !4003)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!354, !354, !373, !327}
!4003 = !{!4004, !4005}
!4004 = !DILocalVariable(name: "self", arg: 1, scope: !4000, file: !164, line: 30, type: !354)
!4005 = !DILocalVariable(name: "index", arg: 2, scope: !4000, file: !164, line: 30, type: !373)
!4006 = !{!191, !4007}
!4007 = !DITemplateTypeParameter(name: "I", type: !373)
!4008 = !DILocation(line: 30, column: 18, scope: !4000)
!4009 = !DILocation(line: 30, column: 29, scope: !4000)
!4010 = !DILocation(line: 31, column: 9, scope: !4000)
!4011 = !DILocation(line: 32, column: 6, scope: !4000)
!4012 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hbb192473bdfad3fdE", scope: !3978, file: !164, line: 30, type: !4013, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4018, retainedNodes: !4015)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{!354, !354, !387, !327}
!4015 = !{!4016, !4017}
!4016 = !DILocalVariable(name: "self", arg: 1, scope: !4012, file: !164, line: 30, type: !354)
!4017 = !DILocalVariable(name: "index", arg: 2, scope: !4012, file: !164, line: 30, type: !387)
!4018 = !{!191, !4019}
!4019 = !DITemplateTypeParameter(name: "I", type: !387)
!4020 = !DILocation(line: 30, column: 18, scope: !4012)
!4021 = !DILocation(line: 30, column: 29, scope: !4012)
!4022 = !DILocation(line: 31, column: 9, scope: !4012)
!4023 = !DILocation(line: 32, column: 6, scope: !4012)
!4024 = distinct !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h1650d6feda0d52aeE", scope: !4026, file: !4025, line: 963, type: !4037, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1565, retainedNodes: !4039)
!4025 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "d6f90b4fba5d6fbabc4ac99b183a8294")
!4026 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<bootloader::bootinfo::TlsTemplate>", scope: !479, file: !2, size: 256, align: 64, elements: !4027, templateParams: !24, identifier: "14c6267563a576a51a4f3202a9222461")
!4027 = !{!4028}
!4028 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4026, file: !2, size: 256, align: 64, elements: !4029, templateParams: !24, identifier: "3bc28f4ce92a8264d7bfe311ebbb304e", discriminator: !4036)
!4029 = !{!4030, !4032}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4028, file: !2, baseType: !4031, size: 256, align: 64, extraData: i64 0)
!4031 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4026, file: !2, size: 256, align: 64, elements: !24, templateParams: !1565, identifier: "2790c89e961835e8c0ddc3b2e83eb00")
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4028, file: !2, baseType: !4033, size: 256, align: 64, extraData: i64 1)
!4033 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4026, file: !2, size: 256, align: 64, elements: !4034, templateParams: !1565, identifier: "82ee1b550703e59017cb0c83d3997c34")
!4034 = !{!4035}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4033, file: !2, baseType: !109, size: 192, align: 64, offset: 64)
!4036 = !DIDerivedType(tag: DW_TAG_member, scope: !4026, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{!109, !4026, !109}
!4039 = !{!4040, !4041, !4042}
!4040 = !DILocalVariable(name: "self", arg: 1, scope: !4024, file: !4025, line: 963, type: !4026)
!4041 = !DILocalVariable(name: "default", arg: 2, scope: !4024, file: !4025, line: 963, type: !109)
!4042 = !DILocalVariable(name: "x", scope: !4043, file: !4025, line: 968, type: !109, align: 8)
!4043 = distinct !DILexicalBlock(scope: !4024, file: !4025, line: 968, column: 13)
!4044 = !DILocation(line: 963, column: 28, scope: !4024)
!4045 = !DILocation(line: 963, column: 34, scope: !4024)
!4046 = !DILocation(line: 968, column: 18, scope: !4043)
!4047 = !DILocation(line: 967, column: 15, scope: !4024)
!4048 = !DILocation(line: 967, column: 9, scope: !4024)
!4049 = !DILocation(line: 969, column: 21, scope: !4024)
!4050 = !DILocation(line: 968, column: 18, scope: !4024)
!4051 = !DILocation(line: 968, column: 24, scope: !4043)
!4052 = !DILocation(line: 968, column: 24, scope: !4024)
!4053 = !DILocation(line: 971, column: 5, scope: !4024)
!4054 = !DILocation(line: 971, column: 6, scope: !4024)
!4055 = distinct !DISubprogram(name: "eq", linkageName: "_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h028605ddb4c51453E", scope: !4056, file: !728, line: 336, type: !4057, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4060)
!4056 = !DINamespace(name: "{impl#13}", scope: !150)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!421, !4059, !4059}
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cmp::Ordering", baseType: !149, size: 64, align: 64, dwarfAddressSpace: 0)
!4060 = !{!4061, !4062, !4063, !4065}
!4061 = !DILocalVariable(name: "self", arg: 1, scope: !4055, file: !728, line: 336, type: !4059)
!4062 = !DILocalVariable(name: "other", arg: 2, scope: !4055, file: !728, line: 336, type: !4059)
!4063 = !DILocalVariable(name: "__self_tag", scope: !4064, file: !728, line: 336, type: !151, align: 1)
!4064 = distinct !DILexicalBlock(scope: !4055, file: !728, line: 336, column: 33)
!4065 = !DILocalVariable(name: "__arg1_tag", scope: !4066, file: !728, line: 336, type: !151, align: 1)
!4066 = distinct !DILexicalBlock(scope: !4064, file: !728, line: 336, column: 33)
!4067 = !DILocation(line: 336, column: 33, scope: !4055)
!4068 = !DILocation(line: 336, column: 33, scope: !4064)
!4069 = !DILocation(line: 336, column: 33, scope: !4066)
!4070 = !DILocation(line: 336, column: 42, scope: !4055)
!4071 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4277524a2fe14442E", scope: !4073, file: !4072, line: 272, type: !4076, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4080, retainedNodes: !4078)
!4072 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "697d559cdba63f105535b8b53d6ea422")
!4073 = !DINamespace(name: "{impl#0}", scope: !4074)
!4074 = !DINamespace(name: "collect", scope: !4075)
!4075 = !DINamespace(name: "traits", scope: !2459)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{!815, !815}
!4078 = !{!4079}
!4079 = !DILocalVariable(name: "self", arg: 1, scope: !4071, file: !4072, line: 272, type: !815)
!4080 = !{!838}
!4081 = !DILocation(line: 272, column: 18, scope: !4071)
!4082 = !DILocation(line: 274, column: 6, scope: !4071)
!4083 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb02f824e656e53b8E", scope: !4084, file: !164, line: 230, type: !4085, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4087)
!4084 = !DINamespace(name: "{impl#2}", scope: !166)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!225, !9, !170}
!4087 = !{!4088, !4089, !4090}
!4088 = !DILocalVariable(name: "self", arg: 1, scope: !4083, file: !164, line: 230, type: !9)
!4089 = !DILocalVariable(name: "slice", arg: 2, scope: !4083, file: !164, line: 230, type: !170)
!4090 = !DILocalVariable(name: "this", scope: !4091, file: !164, line: 231, type: !9, align: 8)
!4091 = distinct !DILexicalBlock(scope: !4083, file: !164, line: 231, column: 9)
!4092 = !DILocation(line: 230, column: 29, scope: !4083)
!4093 = !DILocation(line: 231, column: 13, scope: !4091)
!4094 = !DILocation(line: 230, column: 35, scope: !4083)
!4095 = !DILocation(line: 237, column: 13, scope: !4091)
!4096 = !DILocalVariable(name: "this", arg: 1, scope: !4097, file: !199, line: 2241, type: !9)
!4097 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h8f0d90e967084ee7E", scope: !4098, file: !199, line: 2241, type: !4099, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4101)
!4098 = !DINamespace(name: "get_unchecked", scope: !4084)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{null, !9, !170}
!4101 = !{!4096, !4102}
!4102 = !DILocalVariable(name: "slice", arg: 2, scope: !4097, file: !199, line: 2241, type: !170)
!4103 = !DILocation(line: 2241, column: 39, scope: !4097, inlinedAt: !4104)
!4104 = distinct !DILocation(line: 237, column: 13, scope: !4091)
!4105 = !DILocation(line: 239, column: 63, scope: !4106, inlinedAt: !4104)
!4106 = !DILexicalBlockFile(scope: !4097, file: !164, discriminator: 0)
!4107 = !DILocation(line: 239, column: 56, scope: !4106, inlinedAt: !4104)
!4108 = !DILocation(line: 2242, column: 20, scope: !4097, inlinedAt: !4104)
!4109 = !DILocation(line: 2244, column: 21, scope: !4097, inlinedAt: !4104)
!4110 = !DILocation(line: 241, column: 13, scope: !4091)
!4111 = !DILocation(line: 915, column: 29, scope: !218, inlinedAt: !4112)
!4112 = distinct !DILocation(line: 241, column: 13, scope: !4091)
!4113 = !DILocation(line: 915, column: 35, scope: !218, inlinedAt: !4112)
!4114 = !DILocation(line: 460, column: 32, scope: !232, inlinedAt: !4115)
!4115 = distinct !DILocation(line: 920, column: 18, scope: !218, inlinedAt: !4112)
!4116 = !DILocation(line: 460, column: 38, scope: !232, inlinedAt: !4115)
!4117 = !DILocation(line: 465, column: 18, scope: !232, inlinedAt: !4115)
!4118 = !DILocation(line: 243, column: 6, scope: !4083)
!4119 = distinct !DISubprogram(name: "drop<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h09989a2a92d3eda6E", scope: !4120, file: !2337, line: 23, type: !4121, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4124)
!4120 = !DINamespace(name: "{impl#0}", scope: !1142)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{null, !4123}
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1141, size: 64, align: 64, dwarfAddressSpace: 0)
!4124 = !{!4125}
!4125 = !DILocalVariable(name: "self", arg: 1, scope: !4119, file: !2337, line: 23, type: !4123)
!4126 = !DILocation(line: 23, column: 13, scope: !4119)
!4127 = !DILocation(line: 28, column: 38, scope: !4119)
!4128 = !DILocation(line: 28, column: 48, scope: !4119)
!4129 = !DILocation(line: 28, column: 13, scope: !4119)
!4130 = !DILocation(line: 30, column: 6, scope: !4119)
!4131 = distinct !DISubprogram(name: "next<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb5b6805f61ae872dE", scope: !4133, file: !4132, line: 124, type: !4134, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4137)
!4132 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "471ba458e4027bbd8c4174bbeafb0c53")
!4133 = !DINamespace(name: "{impl#181}", scope: !816)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!3650, !4136}
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !815, size: 64, align: 64, dwarfAddressSpace: 0)
!4137 = !{!4138}
!4138 = !DILocalVariable(name: "self", arg: 1, scope: !4131, file: !4132, line: 124, type: !4136)
!4139 = !DILocation(line: 124, column: 21, scope: !4131)
!4140 = !DILocation(line: 132, column: 29, scope: !4131)
!4141 = !DILocalVariable(name: "self", arg: 1, scope: !4142, file: !1733, line: 325, type: !819)
!4142 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0d3f6aa2caf2c25bE", scope: !819, file: !1733, line: 325, type: !4143, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4145)
!4143 = !DISubroutineType(types: !4144)
!4144 = !{!294, !819}
!4145 = !{!4141}
!4146 = !DILocation(line: 325, column: 25, scope: !4142, inlinedAt: !4147)
!4147 = distinct !DILocation(line: 132, column: 29, scope: !4131)
!4148 = !DILocation(line: 132, column: 28, scope: !4131)
!4149 = !DILocation(line: 132, column: 21, scope: !4131)
!4150 = !DILocation(line: 133, column: 24, scope: !4131)
!4151 = !DILocation(line: 136, column: 24, scope: !4131)
!4152 = !DILocation(line: 325, column: 25, scope: !4142, inlinedAt: !4153)
!4153 = distinct !DILocation(line: 136, column: 24, scope: !4131)
!4154 = !DILocation(line: 134, column: 33, scope: !4131)
!4155 = !DILocation(line: 134, column: 32, scope: !4131)
!4156 = !DILocation(line: 134, column: 25, scope: !4131)
!4157 = !DILocation(line: 133, column: 21, scope: !4131)
!4158 = !DILocalVariable(name: "self", arg: 1, scope: !4159, file: !4132, line: 75, type: !4136)
!4159 = distinct !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h6b455383703fd556E", scope: !815, file: !4132, line: 75, type: !4160, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4162)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{!225, !4136, !9}
!4162 = !{!4158, !4163, !4164}
!4163 = !DILocalVariable(name: "offset", arg: 2, scope: !4159, file: !4132, line: 75, type: !9)
!4164 = !DILocalVariable(name: "old", scope: !4165, file: !4132, line: 80, type: !294, align: 8)
!4165 = distinct !DILexicalBlock(scope: !4159, file: !4132, line: 80, column: 21)
!4166 = !DILocation(line: 75, column: 38, scope: !4159, inlinedAt: !4167)
!4167 = distinct !DILocation(line: 139, column: 30, scope: !4131)
!4168 = !DILocation(line: 75, column: 49, scope: !4159, inlinedAt: !4167)
!4169 = !DILocation(line: 80, column: 31, scope: !4159, inlinedAt: !4167)
!4170 = !DILocation(line: 325, column: 25, scope: !4142, inlinedAt: !4171)
!4171 = distinct !DILocation(line: 80, column: 31, scope: !4159, inlinedAt: !4167)
!4172 = !DILocation(line: 80, column: 25, scope: !4165, inlinedAt: !4167)
!4173 = !DILocation(line: 83, column: 64, scope: !4165, inlinedAt: !4167)
!4174 = !DILocation(line: 325, column: 25, scope: !4142, inlinedAt: !4175)
!4175 = distinct !DILocation(line: 83, column: 64, scope: !4165, inlinedAt: !4167)
!4176 = !DILocation(line: 1015, column: 29, scope: !299, inlinedAt: !4177)
!4177 = distinct !DILocation(line: 83, column: 64, scope: !4165, inlinedAt: !4167)
!4178 = !DILocation(line: 1015, column: 35, scope: !299, inlinedAt: !4177)
!4179 = !DILocation(line: 472, column: 32, scope: !309, inlinedAt: !4180)
!4180 = distinct !DILocation(line: 1020, column: 18, scope: !299, inlinedAt: !4177)
!4181 = !DILocation(line: 472, column: 38, scope: !309, inlinedAt: !4180)
!4182 = !DILocation(line: 479, column: 18, scope: !309, inlinedAt: !4180)
!4183 = !DILocation(line: 83, column: 41, scope: !4165, inlinedAt: !4167)
!4184 = !DILocation(line: 83, column: 21, scope: !4165, inlinedAt: !4167)
!4185 = !DILocation(line: 84, column: 21, scope: !4165, inlinedAt: !4167)
!4186 = !DILocation(line: 86, column: 14, scope: !4159, inlinedAt: !4167)
!4187 = !DILocation(line: 139, column: 25, scope: !4131)
!4188 = !DILocation(line: 136, column: 21, scope: !4131)
!4189 = !DILocation(line: 137, column: 25, scope: !4131)
!4190 = !DILocation(line: 142, column: 14, scope: !4131)
!4191 = distinct !DISubprogram(name: "position<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h7cf901f47c0df857E", scope: !4133, file: !4132, line: 278, type: !4192, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4206, retainedNodes: !4195)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!478, !4136, !4194}
!4194 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !1120, file: !2, align: 8, elements: !24, identifier: "6542d454fe361ec7aaca52d7927c18cc")
!4195 = !{!4196, !4197, !4198, !4200, !4202, !4204}
!4196 = !DILocalVariable(name: "self", arg: 1, scope: !4191, file: !4132, line: 278, type: !4136)
!4197 = !DILocalVariable(name: "predicate", arg: 2, scope: !4191, file: !4132, line: 278, type: !4194)
!4198 = !DILocalVariable(name: "n", scope: !4199, file: !4132, line: 282, type: !9, align: 8)
!4199 = distinct !DILexicalBlock(scope: !4191, file: !4132, line: 282, column: 17)
!4200 = !DILocalVariable(name: "start", scope: !4201, file: !4132, line: 282, type: !819, align: 8)
!4201 = distinct !DILexicalBlock(scope: !4191, file: !4132, line: 16, column: 9)
!4202 = !DILocalVariable(name: "i", scope: !4203, file: !4132, line: 283, type: !9, align: 8)
!4203 = distinct !DILexicalBlock(scope: !4199, file: !4132, line: 283, column: 17)
!4204 = !DILocalVariable(name: "x", scope: !4205, file: !4132, line: 284, type: !12, align: 8)
!4205 = distinct !DILexicalBlock(scope: !4203, file: !4132, line: 284, column: 49)
!4206 = !{!191, !4207}
!4207 = !DITemplateTypeParameter(name: "P", type: !4194)
!4208 = !DILocation(line: 278, column: 28, scope: !4191)
!4209 = !DILocation(line: 278, column: 39, scope: !4191)
!4210 = !DILocation(line: 282, column: 21, scope: !4199)
!4211 = !DILocation(line: 283, column: 21, scope: !4203)
!4212 = !DILocation(line: 282, column: 25, scope: !4191)
!4213 = !DILocation(line: 282, column: 25, scope: !4201)
!4214 = !DILocation(line: 325, column: 25, scope: !4142, inlinedAt: !4215)
!4215 = distinct !DILocation(line: 282, column: 25, scope: !4201)
!4216 = !DILocation(line: 203, column: 17, scope: !549, inlinedAt: !4217)
!4217 = distinct !DILocation(line: 282, column: 25, scope: !4201)
!4218 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !4219)
!4219 = distinct !DILocation(line: 207, column: 33, scope: !549, inlinedAt: !4217)
!4220 = !DILocation(line: 207, column: 18, scope: !549, inlinedAt: !4217)
!4221 = !DILocation(line: 325, column: 25, scope: !4142, inlinedAt: !4222)
!4222 = distinct !DILocation(line: 282, column: 25, scope: !4201)
!4223 = !DILocation(line: 209, column: 17, scope: !3498, inlinedAt: !4224)
!4224 = distinct !DILocation(line: 282, column: 25, scope: !4201)
!4225 = !DILocation(line: 57, column: 26, scope: !1277, inlinedAt: !4226)
!4226 = distinct !DILocation(line: 213, column: 33, scope: !3498, inlinedAt: !4224)
!4227 = !DILocation(line: 213, column: 18, scope: !3498, inlinedAt: !4224)
!4228 = !DILocalVariable(name: "self", arg: 1, scope: !4229, file: !1013, line: 1229, type: !9)
!4229 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hb439ccf953d631e6E", scope: !1014, file: !1013, line: 1229, type: !4230, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4232)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{!9, !9, !9}
!4232 = !{!4228, !4233}
!4233 = !DILocalVariable(name: "rhs", arg: 2, scope: !4229, file: !1013, line: 1229, type: !9)
!4234 = !DILocation(line: 1229, column: 35, scope: !4229, inlinedAt: !4235)
!4235 = distinct !DILocation(line: 282, column: 25, scope: !4201)
!4236 = !DILocation(line: 1229, column: 41, scope: !4229, inlinedAt: !4235)
!4237 = !DILocation(line: 1230, column: 13, scope: !4229, inlinedAt: !4235)
!4238 = !DILocation(line: 283, column: 29, scope: !4199)
!4239 = !DILocation(line: 284, column: 17, scope: !4203)
!4240 = !DILocation(line: 284, column: 37, scope: !4205)
!4241 = !DILocation(line: 284, column: 27, scope: !4205)
!4242 = !DILocation(line: 284, column: 32, scope: !4205)
!4243 = !DILocation(line: 285, column: 24, scope: !4205)
!4244 = !DILocation(line: 293, column: 17, scope: !4203)
!4245 = !DILocation(line: 294, column: 13, scope: !4191)
!4246 = !DILocation(line: 294, column: 14, scope: !4191)
!4247 = !DILocation(line: 291, column: 21, scope: !4205)
!4248 = !DILocation(line: 288, column: 41, scope: !4205)
!4249 = !DILocation(line: 288, column: 45, scope: !4205)
!4250 = !DILocation(line: 288, column: 34, scope: !4205)
!4251 = !DILocation(line: 289, column: 37, scope: !4205)
!4252 = !DILocation(line: 289, column: 32, scope: !4205)
!4253 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h61bfeb355ca9c755E", scope: !94, file: !4254, line: 20, type: !4255, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !24)
!4254 = !DIFile(filename: "src/bootinfo/memory_map.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "e5c49912468d9331b5d84640370affee")
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!94}
!4257 = !DILocation(line: 22, column: 23, scope: !4253)
!4258 = !DILocation(line: 22, column: 22, scope: !4253)
!4259 = !DILocation(line: 21, column: 9, scope: !4253)
!4260 = !DILocation(line: 25, column: 6, scope: !4253)
!4261 = distinct !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17heb1ede358689ef15E", scope: !94, file: !4254, line: 27, type: !4262, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4265)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{null, !4264, !13}
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4265 = !{!4266, !4267}
!4266 = !DILocalVariable(name: "self", arg: 1, scope: !4261, file: !4254, line: 27, type: !4264)
!4267 = !DILocalVariable(name: "region", arg: 2, scope: !4261, file: !4254, line: 27, type: !13)
!4268 = !DILocation(line: 27, column: 23, scope: !4261)
!4269 = !DILocation(line: 27, column: 34, scope: !4261)
!4270 = !DILocation(line: 29, column: 13, scope: !4261)
!4271 = !DILocation(line: 28, column: 9, scope: !4261)
!4272 = !DILocation(line: 32, column: 22, scope: !4261)
!4273 = !DILocation(line: 32, column: 9, scope: !4261)
!4274 = !DILocation(line: 33, column: 9, scope: !4261)
!4275 = !DILocation(line: 34, column: 9, scope: !4261)
!4276 = !DILocation(line: 35, column: 6, scope: !4261)
!4277 = distinct !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17he7ad238fed524a0cE", scope: !94, file: !4254, line: 37, type: !4278, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4280)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{null, !4264}
!4280 = !{!4281, !4282}
!4281 = !DILocalVariable(name: "self", arg: 1, scope: !4277, file: !4254, line: 37, type: !4264)
!4282 = !DILocalVariable(name: "first_zero_index", scope: !4283, file: !4254, line: 58, type: !9, align: 8)
!4283 = distinct !DILexicalBlock(scope: !4277, file: !4254, line: 58, column: 94)
!4284 = !DILocation(line: 37, column: 17, scope: !4277)
!4285 = !DILocation(line: 40, column: 9, scope: !4277)
!4286 = !DILocation(line: 58, column: 41, scope: !4283)
!4287 = !DILocation(line: 58, column: 16, scope: !4283)
!4288 = !DILocation(line: 58, column: 21, scope: !4283)
!4289 = !DILocation(line: 59, column: 13, scope: !4283)
!4290 = !DILocation(line: 58, column: 9, scope: !4277)
!4291 = !DILocation(line: 61, column: 6, scope: !4277)
!4292 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17hcdbd642f1a8e3b82E", scope: !1120, file: !4254, line: 40, type: !4293, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4295)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!149, !1118, !12, !12}
!4295 = !{!4296, !4297, !4298, !4300}
!4296 = !DILocalVariable(name: "r1", arg: 2, scope: !4292, file: !4254, line: 40, type: !12)
!4297 = !DILocalVariable(name: "r2", arg: 3, scope: !4292, file: !4254, line: 40, type: !12)
!4298 = !DILocalVariable(name: "ordering", scope: !4299, file: !4254, line: 46, type: !149, align: 1)
!4299 = distinct !DILexicalBlock(scope: !4292, file: !4254, line: 46, column: 17)
!4300 = !DILocalVariable(arg: 1, scope: !4292, file: !4254, line: 40, type: !1118)
!4301 = !DILocation(line: 40, column: 39, scope: !4292)
!4302 = !DILocation(line: 40, column: 40, scope: !4292)
!4303 = !DILocation(line: 40, column: 44, scope: !4292)
!4304 = !DILocation(line: 46, column: 21, scope: !4299)
!4305 = !DILocation(line: 41, column: 16, scope: !4292)
!4306 = !DILocation(line: 43, column: 23, scope: !4292)
!4307 = !DILocation(line: 42, column: 17, scope: !4292)
!4308 = !DILocation(line: 41, column: 13, scope: !4292)
!4309 = !DILocation(line: 57, column: 10, scope: !4292)
!4310 = !DILocation(line: 46, column: 32, scope: !4292)
!4311 = !DILocation(line: 51, column: 20, scope: !4299)
!4312 = !DILocation(line: 44, column: 17, scope: !4292)
!4313 = !DILocation(line: 43, column: 20, scope: !4292)
!4314 = !DILocation(line: 54, column: 21, scope: !4299)
!4315 = !DILocation(line: 51, column: 17, scope: !4299)
!4316 = !DILocation(line: 52, column: 21, scope: !4299)
!4317 = !DILocation(line: 52, column: 51, scope: !4299)
!4318 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h940b8e5711041e83E", scope: !1120, file: !4254, line: 58, type: !4319, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4322)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!421, !4321, !12}
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}", baseType: !4194, size: 64, align: 64, dwarfAddressSpace: 0)
!4322 = !{!4323, !4324}
!4323 = !DILocalVariable(name: "r", arg: 2, scope: !4318, file: !4254, line: 58, type: !12)
!4324 = !DILocalVariable(arg: 1, scope: !4318, file: !4254, line: 58, type: !4321)
!4325 = !DILocation(line: 58, column: 70, scope: !4318)
!4326 = !DILocation(line: 58, column: 71, scope: !4318)
!4327 = !DILocation(line: 58, column: 74, scope: !4318)
!4328 = !DILocation(line: 58, column: 92, scope: !4318)
!4329 = distinct !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17heded6b242795c018E", scope: !94, file: !4254, line: 63, type: !4330, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4333)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!9, !4332}
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4333 = !{!4334}
!4334 = !DILocalVariable(name: "self", arg: 1, scope: !4329, file: !4254, line: 63, type: !4332)
!4335 = !DILocation(line: 63, column: 25, scope: !4329)
!4336 = !DILocation(line: 64, column: 9, scope: !4329)
!4337 = !DILocation(line: 65, column: 6, scope: !4329)
!4338 = distinct !DISubprogram(name: "deref", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf330e07fe7f1ac98E", scope: !4339, file: !4254, line: 71, type: !4340, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4342)
!4339 = !DINamespace(name: "{impl#1}", scope: !14)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!323, !4332}
!4342 = !{!4343}
!4343 = !DILocalVariable(name: "self", arg: 1, scope: !4338, file: !4254, line: 71, type: !4332)
!4344 = !DILocation(line: 71, column: 14, scope: !4338)
!4345 = !DILocation(line: 72, column: 26, scope: !4338)
!4346 = !DILocation(line: 72, column: 23, scope: !4338)
!4347 = !DILocation(line: 72, column: 10, scope: !4338)
!4348 = !DILocation(line: 73, column: 6, scope: !4338)
!4349 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7b1545ba8c89fe48E", scope: !4350, file: !4254, line: 77, type: !4351, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4353)
!4350 = !DINamespace(name: "{impl#2}", scope: !14)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{!354, !4264}
!4353 = !{!4354, !4355}
!4354 = !DILocalVariable(name: "self", arg: 1, scope: !4349, file: !4254, line: 77, type: !4264)
!4355 = !DILocalVariable(name: "next_index", scope: !4356, file: !4254, line: 78, type: !9, align: 8)
!4356 = distinct !DILexicalBlock(scope: !4349, file: !4254, line: 78, column: 9)
!4357 = !DILocation(line: 77, column: 18, scope: !4349)
!4358 = !DILocation(line: 78, column: 26, scope: !4349)
!4359 = !DILocation(line: 78, column: 13, scope: !4356)
!4360 = !DILocation(line: 79, column: 27, scope: !4356)
!4361 = !DILocation(line: 79, column: 14, scope: !4356)
!4362 = !DILocation(line: 80, column: 6, scope: !4349)
!4363 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bf80f3c8611fa19E", scope: !4364, file: !4254, line: 84, type: !4365, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4367)
!4364 = !DINamespace(name: "{impl#3}", scope: !14)
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!451, !4332, !470}
!4367 = !{!4368, !4369}
!4368 = !DILocalVariable(name: "self", arg: 1, scope: !4363, file: !4254, line: 84, type: !4332)
!4369 = !DILocalVariable(name: "f", arg: 2, scope: !4363, file: !4254, line: 84, type: !470)
!4370 = !DILocation(line: 84, column: 12, scope: !4363)
!4371 = !DILocation(line: 84, column: 19, scope: !4363)
!4372 = !DILocation(line: 85, column: 9, scope: !4363)
!4373 = !DILocation(line: 85, column: 32, scope: !4363)
!4374 = !DILocation(line: 86, column: 6, scope: !4363)
!4375 = distinct !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h8b51fabb921fc3daE", scope: !13, file: !4254, line: 101, type: !4376, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !24)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!13}
!4378 = !DILocation(line: 103, column: 20, scope: !4375)
!4379 = !DILocation(line: 102, column: 9, scope: !4375)
!4380 = !DILocation(line: 109, column: 6, scope: !4375)
!4381 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17hc95fe8c3b38d9c8aE", scope: !19, file: !4254, line: 132, type: !4382, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4384)
!4382 = !DISubroutineType(types: !4383)
!4383 = !{!19, !22, !22}
!4384 = !{!4385, !4386, !4387}
!4385 = !DILocalVariable(name: "start_addr", arg: 1, scope: !4381, file: !4254, line: 132, type: !22)
!4386 = !DILocalVariable(name: "end_addr", arg: 2, scope: !4381, file: !4254, line: 132, type: !22)
!4387 = !DILocalVariable(name: "last_byte", scope: !4388, file: !4254, line: 133, type: !22, align: 8)
!4388 = distinct !DILexicalBlock(scope: !4381, file: !4254, line: 133, column: 9)
!4389 = !DILocation(line: 132, column: 16, scope: !4381)
!4390 = !DILocation(line: 132, column: 33, scope: !4381)
!4391 = !DILocation(line: 133, column: 25, scope: !4381)
!4392 = !DILocation(line: 133, column: 13, scope: !4388)
!4393 = !DILocation(line: 135, column: 33, scope: !4388)
!4394 = !DILocation(line: 136, column: 31, scope: !4388)
!4395 = !DILocation(line: 134, column: 9, scope: !4388)
!4396 = !DILocation(line: 138, column: 6, scope: !4381)
!4397 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3b3b826c1145a4aaE", scope: !19, file: !4254, line: 141, type: !4398, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4401)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{!421, !4400}
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4401 = !{!4402}
!4402 = !DILocalVariable(name: "self", arg: 1, scope: !4397, file: !4254, line: 141, type: !4400)
!4403 = !DILocation(line: 141, column: 21, scope: !4397)
!4404 = !DILocation(line: 142, column: 9, scope: !4397)
!4405 = !DILocation(line: 142, column: 36, scope: !4397)
!4406 = !DILocation(line: 143, column: 6, scope: !4397)
!4407 = distinct !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h3be0a80fc8d87ce6E", scope: !19, file: !4254, line: 146, type: !4408, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4410)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{!22, !4400}
!4410 = !{!4411}
!4411 = !DILocalVariable(name: "self", arg: 1, scope: !4407, file: !4254, line: 146, type: !4400)
!4412 = !DILocation(line: 146, column: 23, scope: !4407)
!4413 = !DILocation(line: 147, column: 9, scope: !4407)
!4414 = !DILocation(line: 148, column: 6, scope: !4407)
!4415 = distinct !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h991c1a92c81f2525E", scope: !19, file: !4254, line: 151, type: !4408, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4416)
!4416 = !{!4417}
!4417 = !DILocalVariable(name: "self", arg: 1, scope: !4415, file: !4254, line: 151, type: !4400)
!4418 = !DILocation(line: 151, column: 21, scope: !4415)
!4419 = !DILocation(line: 152, column: 9, scope: !4415)
!4420 = !DILocation(line: 153, column: 6, scope: !4415)
!4421 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h1a0754a1757e464cE", scope: !4422, file: !4254, line: 157, type: !4423, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4425)
!4422 = !DINamespace(name: "{impl#6}", scope: !14)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!451, !4400, !470}
!4425 = !{!4426, !4427}
!4426 = !DILocalVariable(name: "self", arg: 1, scope: !4421, file: !4254, line: 157, type: !4400)
!4427 = !DILocalVariable(name: "f", arg: 2, scope: !4421, file: !4254, line: 157, type: !470)
!4428 = !DILocation(line: 157, column: 12, scope: !4421)
!4429 = !DILocation(line: 157, column: 19, scope: !4421)
!4430 = !DILocation(line: 161, column: 13, scope: !4421)
!4431 = !DILocation(line: 158, column: 9, scope: !4421)
!4432 = !DILocation(line: 162, column: 13, scope: !4421)
!4433 = !{i64 0, i64 3}
!4434 = !DILocalVariable(name: "position", arg: 1, scope: !4435, file: !4436, line: 28, type: !9)
!4435 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt2v18Argument3new17h29f28116e0adeefbE", scope: !871, file: !4436, line: 27, type: !4437, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4439)
!4436 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/rt/v1.rs", directory: "", checksumkind: CSK_MD5, checksum: "7ef9505ab9453fb51d2a0f5873641c71")
!4437 = !DISubroutineType(types: !4438)
!4438 = !{!871, !9, !475, !139, !27, !881, !881}
!4439 = !{!4434, !4440, !4441, !4442, !4443, !4444}
!4440 = !DILocalVariable(name: "fill", arg: 2, scope: !4435, file: !4436, line: 29, type: !475)
!4441 = !DILocalVariable(name: "align", arg: 3, scope: !4435, file: !4436, line: 30, type: !139)
!4442 = !DILocalVariable(name: "flags", arg: 4, scope: !4435, file: !4436, line: 31, type: !27)
!4443 = !DILocalVariable(name: "precision", arg: 5, scope: !4435, file: !4436, line: 32, type: !881)
!4444 = !DILocalVariable(name: "width", arg: 6, scope: !4435, file: !4436, line: 33, type: !881)
!4445 = !DILocation(line: 28, column: 9, scope: !4435, inlinedAt: !4446)
!4446 = distinct !DILocation(line: 158, column: 9, scope: !4421)
!4447 = !DILocation(line: 29, column: 9, scope: !4435, inlinedAt: !4446)
!4448 = !DILocation(line: 30, column: 9, scope: !4435, inlinedAt: !4446)
!4449 = !DILocation(line: 31, column: 9, scope: !4435, inlinedAt: !4446)
!4450 = !DILocation(line: 32, column: 9, scope: !4435, inlinedAt: !4446)
!4451 = !DILocation(line: 33, column: 9, scope: !4435, inlinedAt: !4446)
!4452 = !DILocation(line: 35, column: 34, scope: !4435, inlinedAt: !4446)
!4453 = !DILocation(line: 35, column: 9, scope: !4435, inlinedAt: !4446)
!4454 = !DILocation(line: 28, column: 9, scope: !4435, inlinedAt: !4455)
!4455 = distinct !DILocation(line: 158, column: 9, scope: !4421)
!4456 = !DILocation(line: 29, column: 9, scope: !4435, inlinedAt: !4455)
!4457 = !DILocation(line: 30, column: 9, scope: !4435, inlinedAt: !4455)
!4458 = !DILocation(line: 31, column: 9, scope: !4435, inlinedAt: !4455)
!4459 = !DILocation(line: 32, column: 9, scope: !4435, inlinedAt: !4455)
!4460 = !DILocation(line: 33, column: 9, scope: !4435, inlinedAt: !4455)
!4461 = !DILocation(line: 35, column: 34, scope: !4435, inlinedAt: !4455)
!4462 = !DILocation(line: 35, column: 9, scope: !4435, inlinedAt: !4455)
!4463 = !DILocation(line: 164, column: 6, scope: !4421)
!4464 = distinct !DISubprogram(name: "from", linkageName: "_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17hcf4e8ff5809508afE", scope: !4465, file: !4254, line: 218, type: !4466, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4474)
!4465 = !DINamespace(name: "{impl#7}", scope: !14)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{!13, !4468}
!4468 = !DICompositeType(tag: DW_TAG_structure_type, name: "E820MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !4469, templateParams: !24, identifier: "9242350e36b2681f7471128257ffe90f")
!4469 = !{!4470, !4471, !4472, !4473}
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !4468, file: !2, baseType: !22, size: 64, align: 64)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4468, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !4468, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_extended_attributes", scope: !4468, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!4474 = !{!4475, !4476, !4478}
!4475 = !DILocalVariable(name: "region", arg: 1, scope: !4464, file: !4254, line: 218, type: !4468)
!4476 = !DILocalVariable(name: "region_type", scope: !4477, file: !4254, line: 219, type: !26, align: 4)
!4477 = distinct !DILexicalBlock(scope: !4464, file: !4254, line: 219, column: 9)
!4478 = !DILocalVariable(name: "t", scope: !4479, file: !4254, line: 225, type: !27, align: 4)
!4479 = distinct !DILexicalBlock(scope: !4464, file: !4254, line: 225, column: 13)
!4480 = !DILocation(line: 218, column: 13, scope: !4464)
!4481 = !DILocation(line: 219, column: 13, scope: !4477)
!4482 = !DILocation(line: 225, column: 13, scope: !4479)
!4483 = !DILocation(line: 219, column: 27, scope: !4464)
!4484 = !DILocation(line: 225, column: 13, scope: !4464)
!4485 = !DILocation(line: 225, column: 18, scope: !4479)
!4486 = !DILocation(line: 220, column: 18, scope: !4464)
!4487 = !DILocation(line: 221, column: 18, scope: !4464)
!4488 = !DILocation(line: 222, column: 18, scope: !4464)
!4489 = !DILocation(line: 223, column: 18, scope: !4464)
!4490 = !DILocation(line: 224, column: 18, scope: !4464)
!4491 = !DILocation(line: 228, column: 36, scope: !4477)
!4492 = !DILocation(line: 228, column: 55, scope: !4477)
!4493 = !DILocation(line: 228, column: 75, scope: !4477)
!4494 = !DILocation(line: 228, column: 20, scope: !4477)
!4495 = !DILocation(line: 229, column: 13, scope: !4477)
!4496 = !{i32 0, i32 15}
!4497 = !DILocation(line: 227, column: 9, scope: !4477)
!4498 = !DILocation(line: 231, column: 6, scope: !4464)
!4499 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17ha19f2f6d51091a3bE", scope: !4501, file: !4500, line: 53, type: !4506, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4508)
!4500 = !DIFile(filename: "src/bootinfo/mod.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "a171ea6c439575860461f3a713fd0ff5")
!4501 = !DICompositeType(tag: DW_TAG_structure_type, name: "BootInfo", scope: !15, file: !2, size: 12608, align: 64, elements: !4502, templateParams: !24, identifier: "7e57579a7d34f1c3ae7e243c3c4246cb")
!4502 = !{!4503, !4504, !4505}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "memory_map", scope: !4501, file: !2, baseType: !94, size: 12352, align: 64)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "tls_template", scope: !4501, file: !2, baseType: !109, size: 192, align: 64, offset: 12352)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "_non_exhaustive", scope: !4501, file: !2, baseType: !123, size: 8, align: 8, offset: 12544)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{!4501, !94, !4026, !22, !22}
!4508 = !{!4509, !4510, !4511, !4512, !4513}
!4509 = !DILocalVariable(name: "memory_map", arg: 1, scope: !4499, file: !4500, line: 54, type: !94)
!4510 = !DILocalVariable(name: "tls_template", arg: 2, scope: !4499, file: !4500, line: 55, type: !4026)
!4511 = !DILocalVariable(name: "recursive_page_table_addr", arg: 3, scope: !4499, file: !4500, line: 56, type: !22)
!4512 = !DILocalVariable(name: "physical_memory_offset", arg: 4, scope: !4499, file: !4500, line: 57, type: !22)
!4513 = !DILocalVariable(name: "tls_template", scope: !4514, file: !4500, line: 59, type: !109, align: 8)
!4514 = distinct !DILexicalBlock(scope: !4499, file: !4500, line: 59, column: 9)
!4515 = !DILocation(line: 54, column: 9, scope: !4499)
!4516 = !DILocation(line: 55, column: 9, scope: !4499)
!4517 = !DILocation(line: 56, column: 9, scope: !4499)
!4518 = !DILocation(line: 57, column: 9, scope: !4499)
!4519 = !DILocation(line: 59, column: 13, scope: !4514)
!4520 = !DILocation(line: 59, column: 51, scope: !4499)
!4521 = !DILocation(line: 59, column: 28, scope: !4499)
!4522 = !DILocation(line: 66, column: 13, scope: !4514)
!4523 = !DILocation(line: 64, column: 9, scope: !4514)
!4524 = !DILocation(line: 73, column: 6, scope: !4499)
!4525 = distinct !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17h85ec92cec7996c05E", scope: !4501, file: !4500, line: 81, type: !4526, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4529)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{!4026, !4528}
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::BootInfo", baseType: !4501, size: 64, align: 64, dwarfAddressSpace: 0)
!4529 = !{!4530}
!4530 = !DILocalVariable(name: "self", arg: 1, scope: !4525, file: !4500, line: 81, type: !4528)
!4531 = !DILocation(line: 81, column: 25, scope: !4525)
!4532 = !DILocation(line: 82, column: 12, scope: !4525)
!4533 = !DILocation(line: 85, column: 13, scope: !4525)
!4534 = !DILocation(line: 82, column: 9, scope: !4525)
!4535 = !DILocation(line: 83, column: 18, scope: !4525)
!4536 = !DILocation(line: 83, column: 13, scope: !4525)
!4537 = !DILocation(line: 87, column: 6, scope: !4525)
!4538 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17he935b9fdaa8df5aeE", scope: !4539, file: !4254, line: 90, type: !4540, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4542)
!4539 = !DINamespace(name: "{impl#8}", scope: !14)
!4540 = !DISubroutineType(types: !4541)
!4541 = !{!451, !12, !470}
!4542 = !{!4543, !4544}
!4543 = !DILocalVariable(name: "self", arg: 1, scope: !4538, file: !4254, line: 90, type: !12)
!4544 = !DILocalVariable(name: "f", arg: 2, scope: !4538, file: !4254, line: 90, type: !470)
!4545 = !DILocation(line: 90, column: 10, scope: !4538)
!4546 = !DILocation(line: 96, column: 5, scope: !4538)
!4547 = !DILocation(line: 90, column: 15, scope: !4538)
!4548 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h7131edcbab57409bE", scope: !4549, file: !4254, line: 168, type: !4550, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4552)
!4549 = !DINamespace(name: "{impl#21}", scope: !14)
!4550 = !DISubroutineType(types: !4551)
!4551 = !{!451, !60, !470}
!4552 = !{!4553, !4554}
!4553 = !DILocalVariable(name: "self", arg: 1, scope: !4548, file: !4254, line: 168, type: !60)
!4554 = !DILocalVariable(name: "f", arg: 2, scope: !4548, file: !4254, line: 168, type: !470)
!4555 = !DILocation(line: 168, column: 10, scope: !4548)
!4556 = !DILocation(line: 168, column: 14, scope: !4548)
!4557 = !DILocation(line: 168, column: 15, scope: !4548)
!4558 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h67900054391d94fcE", scope: !4559, file: !4254, line: 208, type: !4560, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4563)
!4559 = !DINamespace(name: "{impl#28}", scope: !14)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!451, !4562, !470}
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::E820MemoryRegion", baseType: !4468, size: 64, align: 64, dwarfAddressSpace: 0)
!4563 = !{!4564, !4565}
!4564 = !DILocalVariable(name: "self", arg: 1, scope: !4558, file: !4254, line: 208, type: !4562)
!4565 = !DILocalVariable(name: "f", arg: 2, scope: !4558, file: !4254, line: 208, type: !470)
!4566 = !DILocation(line: 208, column: 10, scope: !4558)
!4567 = !DILocation(line: 212, column: 5, scope: !4558)
!4568 = !DILocation(line: 213, column: 5, scope: !4558)
!4569 = !DILocation(line: 214, column: 5, scope: !4558)
!4570 = !DILocation(line: 208, column: 15, scope: !4558)
!4571 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17h6d847c2750a13edeE", scope: !4572, file: !4500, line: 22, type: !4573, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4575)
!4572 = !DINamespace(name: "{impl#1}", scope: !15)
!4573 = !DISubroutineType(types: !4574)
!4574 = !{!451, !4528, !470}
!4575 = !{!4576, !4577}
!4576 = !DILocalVariable(name: "self", arg: 1, scope: !4571, file: !4500, line: 22, type: !4528)
!4577 = !DILocalVariable(name: "f", arg: 2, scope: !4571, file: !4500, line: 22, type: !470)
!4578 = !DILocation(line: 22, column: 10, scope: !4571)
!4579 = !DILocation(line: 45, column: 5, scope: !4571)
!4580 = !DILocation(line: 46, column: 5, scope: !4571)
!4581 = !DILocation(line: 22, column: 15, scope: !4571)
!4582 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h307bd47cff9c813bE", scope: !4583, file: !4500, line: 103, type: !4584, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4587)
!4583 = !DINamespace(name: "{impl#2}", scope: !15)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!451, !4586, !470}
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!4587 = !{!4588, !4589}
!4588 = !DILocalVariable(name: "self", arg: 1, scope: !4582, file: !4500, line: 103, type: !4586)
!4589 = !DILocalVariable(name: "f", arg: 2, scope: !4582, file: !4500, line: 103, type: !470)
!4590 = !DILocation(line: 103, column: 10, scope: !4582)
!4591 = !DILocation(line: 111, column: 5, scope: !4582)
!4592 = !DILocation(line: 115, column: 5, scope: !4582)
!4593 = !DILocation(line: 103, column: 15, scope: !4582)
