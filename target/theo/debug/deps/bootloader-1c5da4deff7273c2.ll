; ModuleID = 'bootloader.6c9291e87e921d15-cgu.0'
source_filename = "bootloader.6c9291e87e921d15-cgu.0"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-obuasi-unknown-none"

%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, { ptr, i64 } }
%"bootinfo::memory_map::MemoryRegion" = type { { i64, i64 }, i32, [1 x i32] }
%"core::ops::range::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"core::fmt::rt::UnsafeArg" = type { {} }
%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>" = type { %"bootinfo::memory_map::MemoryRegion" }
%"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<u8>" = type { ptr, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}" = type {}
%"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}" = type { ptr, { ptr, i64 }, ptr }
%"core::option::Option<core::fmt::Arguments<'_>>" = type { ptr, [5 x i64] }
%"bootinfo::TlsTemplate" = type { i64, i64, i64 }
%"core::option::Option<bootinfo::TlsTemplate>::Some" = type { [1 x i64], %"bootinfo::TlsTemplate" }
%"{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73}" = type {}
%"bootinfo::memory_map::MemoryMap" = type { [64 x %"bootinfo::memory_map::MemoryRegion"], i64 }
%"core::fmt::builders::DebugList<'_, '_>" = type { %"core::fmt::builders::DebugInner<'_, '_>" }
%"core::fmt::builders::DebugInner<'_, '_>" = type { ptr, i8, i8, [6 x i8] }
%"core::fmt::rt::Placeholder" = type { { i64, i64 }, { i64, i64 }, i64, i32, i32, i8, [7 x i8] }
%"bootinfo::memory_map::E820MemoryRegion" = type { i64, i64, i32, i32 }
%"bootinfo::BootInfo" = type { %"bootinfo::memory_map::MemoryMap", i64, %"bootinfo::TlsTemplate", i8, [7 x i8] }
%"core::option::Option<bootinfo::TlsTemplate>" = type { i64, [3 x i64] }

@alloc_0dc6db72fcead760fba2799443fc0f82 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"slice::get_unchecked requires that the range is within the slice" }>, align 1
@alloc_42b089c51c40a4752ce1a5c7011c4eea = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_0dc6db72fcead760fba2799443fc0f82, [8 x i8] c"@\00\00\00\00\00\00\00" }>, align 8
@alloc_d80fb6a1110381016d8aca3995978459 = private unnamed_addr constant <{ [111 x i8] }> <{ [111 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs" }>, align 1
@alloc_49a804b428593483c1d611886a317f03 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80fb6a1110381016d8aca3995978459, [16 x i8] c"o\00\00\00\00\00\00\00j\01\00\00\09\00\00\00" }>, align 8
@alloc_8bc4d99c9de504799214701ea609a64b = private unnamed_addr constant <{ [68 x i8] }> <{ [68 x i8] c"slice::get_unchecked_mut requires that the range is within the slice" }>, align 1
@alloc_9017f8eeb2152f6e4c9452a9bedc71c3 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_8bc4d99c9de504799214701ea609a64b, [8 x i8] c"D\00\00\00\00\00\00\00" }>, align 8
@alloc_e19c428c10f540cb2b975c03c12649e0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80fb6a1110381016d8aca3995978459, [16 x i8] c"o\00\00\00\00\00\00\00z\01\00\00\09\00\00\00" }>, align 8
@alloc_763310d78c99c2c1ad3f8a9821e942f3 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"is_nonoverlapping: `size_of::<T>() * count` overflows a usize" }>, align 1
@alloc_cf71ba46b07f75a509e946b584ee4f31 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs" }>, align 1
@alloc_793df85d5c24952e4b4a6de0f309817f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\1A\0A\00\00\0A\00\00\00" }>, align 8
@alloc_8df0580a595a87d56789d20c7318e185 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_2f5fae7ca9908dec8d13988b47dc9dc4 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned and non-null" }>, align 1
@vtable.0 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h08dd9189e56d3885E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e387e31321d4425E" }>, align 8, !dbg !0
@alloc_c2ea93c90919bb7b1e482f917e413fa1 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc_1d488b18c5f7c1d3858ca9f0071c91c8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00L\01\00\008\00\00\00" }>, align 8
@str.1 = internal unnamed_addr constant [28 x i8] c"attempt to add with overflow"
@alloc_91c7fa63c3cfeaa3c795652d5cf060e4 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc_af99043bc04c419363a7f04d23183506 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_91c7fa63c3cfeaa3c795652d5cf060e4, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_a128bb0331e9cbfe13a5df140fd20243 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00M\01\00\00\0D\00\00\00" }>, align 8
@alloc_513570631223a12912d85da2bec3b15a = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc_40dc4a2e4fa36320ad05a7f7aeedf921 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00C\01\00\00\0D\00\00\00" }>, align 8
@alloc_062d8212fd02b81dce3f023edbf3244d = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs" }>, align 1
@alloc_6cf74fdfa9a84869e78181d3776b84df = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_062d8212fd02b81dce3f023edbf3244d, [16 x i8] c"k\00\00\00\00\00\00\00\E3\02\00\00\0C\00\00\00" }>, align 8
@str.2 = internal unnamed_addr constant [25 x i8] c"attempt to divide by zero"
@alloc_8b72e65625de3e221368553edb4591ff = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs" }>, align 1
@alloc_710c4bfa6ec09446dd0c473b046f8ffb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8b72e65625de3e221368553edb4591ff, [16 x i8] c"k\00\00\00\00\00\00\00O\01\00\00\05\00\00\00" }>, align 8
@str.3 = internal unnamed_addr constant [31 x i8] c"attempt to negate with overflow"
@alloc_d9985fae612aba2c1bbfc17404e3b546 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8b72e65625de3e221368553edb4591ff, [16 x i8] c"k\00\00\00\00\00\00\00\F5\04\00\00\05\00\00\00" }>, align 8
@str.4 = internal unnamed_addr constant [33 x i8] c"attempt to subtract with overflow"
@str.5 = internal unnamed_addr constant [36 x i8] c"attempt to shift right with overflow"
@alloc_444495105b9016883a01942a28847d22 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs" }>, align 1
@alloc_5455a6f2bbf0249b2427e5f4c6b99636 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_444495105b9016883a01942a28847d22, [16 x i8] c"m\00\00\00\00\00\00\00\CA\01\00\00\1D\00\00\00" }>, align 8
@alloc_29f87e6ac6e7e4317253d26531c5c81c = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc_1ba0b8d2f5ff80a25c99bf2fe2a940c0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\D6\03\00\00&\00\00\00" }>, align 8
@str.6 = internal unnamed_addr constant [33 x i8] c"attempt to multiply with overflow"
@alloc_b8a2dfce373db2ab26cf6cf192b770f4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\D8\03\00\00\09\00\00\00" }>, align 8
@str.7 = internal unnamed_addr constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc_5b768f5d22c028c89f66f1bf95262972 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\D9\03\00\00\09\00\00\00" }>, align 8
@alloc_546a48d82dbbd37bfd409d4513b73f46 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::swap_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_8a5df3c21f42ca2f361b15352b2cfd1d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\F2\03\00\00\09\00\00\00" }>, align 8
@alloc_981fd9513041e1603a1d1d7b668a749d = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_b7474065d782af00c4610bb4ef55210b = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_20b3d155afd5c58c42e598b7e6d186ef = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc_cc91f7045aeea4ab0f301c62c00dba06 = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_48773a840e98f1e32da0fd9b325ef6e3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00L\06\00\00\1A\00\00\00" }>, align 8
@alloc_fad0cd83b7d1858a846a172eb260e593 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc_041983ee8170efdaaf95ba67fd072d26 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_fad0cd83b7d1858a846a172eb260e593, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_7bd3afe836cf46cfac83f40d25e28016 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00G\06\00\00\0D\00\00\00" }>, align 8
@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc_cded01c69e6a68529aa461ed66ab1ca7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\004\03\00\00\09\00\00\00" }>, align 8
@alloc_cb50775363ffdd1238910b6e9573721d = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"unsafe precondition(s) violated: ptr::sub_ptr requires `this >= origin`" }>, align 1
@alloc_fddaeef1fe1a23c45402ef8f58614acb = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc_9a72dc1c87ddefcce62e4b5ab68e5150 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\FF" }>, align 1
@alloc_5608a802eadf92ab5cc52fce46559946 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"slice::split_at_mut_unchecked requires the index to be within the slice" }>, align 1
@alloc_ed26ae13a208991431ec3bc12b4bf9a8 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_5608a802eadf92ab5cc52fce46559946, [8 x i8] c"G\00\00\00\00\00\00\00" }>, align 8
@alloc_0e767b22ac99e9123f3c482417f77f98 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc_45c4befca51d26b012e6846c9059d693 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DA\07\00\00\09\00\00\00" }>, align 8
@alloc_fb41d5273ff6af4f3395d1148ba2f911 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\E3\07\00\00R\00\00\00" }>, align 8
@alloc_dd0dc542054f5a3bd5e0287046a20794 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: a.len() == n" }>, align 1
@alloc_7d63de7160c884c9ac495adcaa035083 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CF\03\00\00\0D\00\00\00" }>, align 8
@alloc_deedf7aeab1a7c66b5420b58a4093bcc = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: b.len() == n" }>, align 1
@alloc_b39594566532d372761c25c7b3a9b7f7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\D0\03\00\00\0D\00\00\00" }>, align 8
@alloc_1ec177b06bec02a734b9cedfc5d286b0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\D6\03\00\00!\00\00\00" }>, align 8
@alloc_993d57cfbdeb1134740408c696d9ab0d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\D6\03\00\00.\00\00\00" }>, align 8
@alloc_a77b1a3fa80b3ab33d224883e8b4cd1d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DA\03\00\00 \00\00\00" }>, align 8
@alloc_ac23a8f2c783a5a26393c853985eb5b2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DA\03\00\00-\00\00\00" }>, align 8
@alloc_ba54ae2ce298037908a2b7cfa61b194c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DA\03\00\00+\00\00\00" }>, align 8
@alloc_d58863939d0dee1c97fc12f7c81c31ee = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DB\03\00\00\11\00\00\00" }>, align 8
@alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_140877f72603b53a2926afdc5b6562c1 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: v.len() >= 2" }>, align 1
@alloc_d80990e1774d1c38795ebd415913ef0a = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs" }>, align 1
@alloc_b18733840ed4f95b7455af06b80af98e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\\\00\00\00\05\00\00\00" }>, align 8
@alloc_a6ff681768d076017ea95b6d4975ff4f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\00\00\00F\00\00\00" }>, align 8
@alloc_305449b93870325777cb03e1c2ef3560 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00'\00\00\00\05\00\00\00" }>, align 8
@alloc_cc2195d6c87d9b61b855864d0a431fd1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00*\00\00\00\0D\00\00\00" }>, align 8
@alloc_26d971e13280eea49644c90fb64034bc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00G\00\00\00\1A\00\00\00" }>, align 8
@alloc_b06d9ef39409ad6732fa47bfee802603 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E6\02\00\00\11\00\00\00" }>, align 8
@alloc_2644e2881879bc6bc25ef3ad9aca9bf1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\02\00\00\11\00\00\00" }>, align 8
@alloc_c0308ee6ba4419c7862ad8efa6c1ef4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E8\02\00\00\11\00\00\00" }>, align 8
@alloc_48cf8f64fdeea9f2a5141a9021355e71 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\1A\03\00\00\0A\00\00\00" }>, align 8
@alloc_0a2be255056e864be27d3328bf6673e5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\07\03\00\00\1C\00\00\00" }>, align 8
@alloc_7ad731f8dacd386b68e0de756a06f860 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\07\03\00\00/\00\00\00" }>, align 8
@alloc_d5f1870acd5d367b5d3c31e93060a2be = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\F8\02\00\00\11\00\00\00" }>, align 8
@alloc_b9d7bdd88a4cebe1be021579a64e0ca8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\C4\02\00\00\13\00\00\00" }>, align 8
@alloc_6887c178a28e8bbae6e43e59630d3d2c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00+\00\00\00" }>, align 8
@alloc_9af97c80b26b0bfce6c179afa862315a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CE\02\00\00\11\00\00\00" }>, align 8
@alloc_7376a1d63f68c7177f89fcd865fb0650 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D1\02\00\00\14\00\00\00" }>, align 8
@alloc_56f843af5916e171fa1470abb31fd59a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D1\02\00\00\0F\00\00\00" }>, align 8
@alloc_872135f360078c5f4e607b0df48b06b2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00l\02\00\00\07\00\00\00" }>, align 8
@alloc_d3188ee70710b2b806e6c6f4ab6e8fd0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00m\02\00\00\18\00\00\00" }>, align 8
@alloc_73c27161068a06f4d08984e776740044 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00n\02\00\00\16\00\00\00" }>, align 8
@alloc_e59f723377c5083a3e78f726d32b50b2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\02\00\00\11\00\00\00" }>, align 8
@alloc_5b54b074511e09f70c97b06c5d7a830d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\8C\02\00\00\11\00\00\00" }>, align 8
@alloc_dd4bd51df64166f92e8437af026ac54b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\9A\02\00\00\0D\00\00\00" }>, align 8
@alloc_bc20396b6ce9b5af445341e61f64076e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\9F\02\00\00\05\00\00\00" }>, align 8
@alloc_3e649b28ea51a3db7a560c10123c739c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00_\01\00\00&\00\00\00" }>, align 8
@alloc_f626c7ac081a727beb7e10f97fdb919e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00e\01\00\00\11\00\00\00" }>, align 8
@alloc_10531e9362860d55eaf5806724f0c125 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00s\01\00\00\1B\00\00\00" }>, align 8
@alloc_8221bdf38a3766feb9723f333c95dc9e = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"assertion failed: block_l <= BLOCK && block_r <= BLOCK" }>, align 1
@alloc_097a940721e6a8baa481d3729fc9518a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00u\01\00\00\0D\00\00\00" }>, align 8
@alloc_f0e1f21121e28b58fdd54bf6051a1f38 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00*\00\00\00" }>, align 8
@alloc_a3f9d5911d83d2dfd6ee66814bbe6049 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"assertion failed: width(l, r) == block_l + block_r" }>, align 1
@alloc_5c9936d8328a0f5d89d90870d6127f61 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00\0D\00\00\00" }>, align 8
@alloc_6b92c27c2891eb908338af014a6a3d36 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D2\01\00\00*\00\00\00" }>, align 8
@alloc_9d44e44c8d239a1692fc87e41a4755a6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\DB\01\00\000\00\00\00" }>, align 8
@alloc_f1dd8b197d5cc4301200d98f5c568f42 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\19\02\00\00\09\00\00\00" }>, align 8
@alloc_c77bd063d1f3488fe1ecad3000191614 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\1E\02\00\00$\00\00\00" }>, align 8
@alloc_bce10c27435588d70caaeb1e31e7ed1b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\02\02\00\00\09\00\00\00" }>, align 8
@alloc_82f8d41c4f6c217ecb338573a0b4850d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D6\01\00\007\00\00\00" }>, align 8
@alloc_15626d8f43b09b5416b02dd3b687152a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\01\00\00.\00\00\00" }>, align 8
@alloc_60cd9f07f649265b0b23f897aad9bad7 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: mem::size_of::<T>() > 0" }>, align 1
@alloc_fce046c10af11fd43762995f151c5095 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\01\00\00\09\00\00\00" }>, align 8
@alloc_640f35fd1cfd54c2ff846760bec94d82 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Y\01\00\00\09\00\00\00" }>, align 8
@alloc_5f0f101382d821a798b9d20f1930ca3c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D7\00\00\00K\00\00\00" }>, align 8
@alloc_516f56e032c7adcb72fbee6e086e8106 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\00\00\00\11\00\00\00" }>, align 8
@alloc_6ef0a83a3bc322d241362dda17319c1b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\10\00\00\00" }>, align 8
@alloc_c24109fd354c9f4493ad3956830e8fcd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\0B\00\00\00" }>, align 8
@alloc_173228404dcc0f1f85a341382318ddf8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\00-\00\00\00" }>, align 8
@alloc_30eeae45f7745520eaea2afbff01ff94 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\004\00\00\00" }>, align 8
@alloc_f9a588d8b691921f9f4729bda19af76e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EE\00\00\00.\00\00\00" }>, align 8
@alloc_5429279aa16fa0cdfc25e6fc8726a06a = private unnamed_addr constant <{ [46 x i8] }> <{ [46 x i8] c"assertion failed: offset != 0 && offset <= len" }>, align 1
@alloc_ad0e06a3182d9bb7dafcdeed10cc2e6b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\9B\00\00\00\05\00\00\00" }>, align 8
@alloc_8a7118eee8b265b787a7897f18ece731 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\A3\00\00\00\1F\00\00\00" }>, align 8
@alloc_6973cb22fd5a814eff7046b5b9169c77 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"assertion failed: offset != 0 && offset <= len && len >= 2" }>, align 1
@alloc_9698abd34a8ebbcb64cd194588d81c5f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\B4\00\00\00\05\00\00\00" }>, align 8
@alloc_3ace6a7646e05677a79dbb3c5652faec = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\BD\00\00\00\1F\00\00\00" }>, align 8
@alloc_83fa0590238981e461fbbab4c10fee96 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00F\03\00\00\0D\00\00\00" }>, align 8
@alloc_0d6eede697ab231f0ae0f244a7156164 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Z\03\00\00\1D\00\00\00" }>, align 8
@alloc_1c37b9353529e350e07b16b4e2be7ddb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\03\00\00\1B\00\00\00" }>, align 8
@alloc_6466639cd9f6a3e02754a7925ae9b68e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00e\03\00\00&\00\00\00" }>, align 8
@alloc_d2b7bf30877bfd7ffc4ba091cd50fac1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00i\03\00\00\1F\00\00\00" }>, align 8
@alloc_8decd09f5d6c1655c16a5f75c012dbd7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00j\03\00\00$\00\00\00" }>, align 8
@alloc_23c6c7c143303b0407d1984a29edc8da = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00k\03\00\00\16\00\00\00" }>, align 8
@alloc_7ca4a2e9a4c07d9f7f1869f8ed42ca92 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00 \01\00\00\0B\00\00\00" }>, align 8
@alloc_300f6fbb1580ffceabe16060a8eb246d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00!\01\00\00\19\00\00\00" }>, align 8
@alloc_c86ce6b1a25c3c03c7c0c52b7424b759 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\01\01\00\00\1D\00\00\00" }>, align 8
@alloc_e8b6d9a583f41fc79cf021f4e515965a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\07\01\00\00\10\00\00\00" }>, align 8
@alloc_1f3c27e86ce6c7b1a0fe6c0cd9d888b8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00#\00\00\00" }>, align 8
@alloc_b30e539db66474586730815c38fe2b77 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\000\00\00\00" }>, align 8
@alloc_e536c70b3f170e46504cafb17873a583 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00.\00\00\00" }>, align 8
@alloc_528187d795517c3c379de08807a1d217 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00\11\00\00\00" }>, align 8
@alloc_900a452e50a91b273f529a598e1c9387 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00\1A\00\00\00" }>, align 8
@alloc_12a4570cf64119aa9aed517f40508e0d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00$\00\00\00" }>, align 8
@alloc_aee65fa801bd32b001511f37eb950832 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\14\01\00\00\0F\00\00\00" }>, align 8
@alloc_3cc2f108f6ad5de0e7df5f0bab4c99f5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\006\02\00\00\0B\00\00\00" }>, align 8
@alloc_4111a9a27add72330b55ad95a0b4ce4b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\007\02\00\00\1C\00\00\00" }>, align 8
@alloc_47f7f5a5679995afdbdac281a42df1e5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\008\02\00\00\1A\00\00\00" }>, align 8
@alloc_caf271d26aa0259c16066bd0b19c9567 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Q\02\00\005\00\00\00" }>, align 8
@alloc_7f45f9c52269d6239f633c23dd99888a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00R\02\00\00\11\00\00\00" }>, align 8
@alloc_6de5f4f61dc9947b5580497ff6bd0c65 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00(\00\00\00" }>, align 8
@alloc_4a14d670b99b10a158283cc8509b375d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00\0A\00\00\00" }>, align 8
@alloc_a5b4cbfdb46db686e2b0892645c3cedd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\02\00\00\07\00\00\00" }>, align 8
@alloc_12cb612c46d51112521cf7c6effccd4d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00M\02\00\00\11\00\00\00" }>, align 8
@alloc_512969644d7249b8db4ca89aaae3802e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\86\03\00\00\11\00\00\00" }>, align 8
@alloc_8572d294b7d4b9d2125dc5191e02725c = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"slice::get_unchecked requires that the index is within the slice" }>, align 1
@alloc_30622932c74ee28bb59a6941df509208 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_8572d294b7d4b9d2125dc5191e02725c, [8 x i8] c"@\00\00\00\00\00\00\00" }>, align 8
@alloc_25dd8d959b8ac3621f86858bd6e9ebee = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80fb6a1110381016d8aca3995978459, [16 x i8] c"o\00\00\00\00\00\00\00\E4\00\00\00\09\00\00\00" }>, align 8
@alloc_cb9e1adc7c2835de63b1ee25a132c405 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs" }>, align 1
@alloc_1f683afce4e4a8ebbb423df4dd8e7cfb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cb9e1adc7c2835de63b1ee25a132c405, [16 x i8] c"n\00\00\00\00\00\00\00\84\00\00\00\01\00\00\00" }>, align 8
@alloc_377fe4797e3690987ab15f0122f4880b = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"too many memory regions in memory map" }>, align 1
@alloc_7d15286e500c88a119425ae53316340e = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs" }>, align 1
@alloc_54ab5123c8b5c893178cf579a95cfb31 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\1C\00\00\00\09\00\00\00" }>, align 8
@alloc_007d9d9bcb32fbea4c7f0969de4a5e5e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00 \00\00\00\09\00\00\00" }>, align 8
@alloc_34e556ab30df73bc0b9b80753861ac91 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00!\00\00\00\09\00\00\00" }>, align 8
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc_fb271be9c4b5b3946a793efffc56f39c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00H\00\00\00\16\00\00\00" }>, align 8
@alloc_61c65decba3312117d854904c3caa913 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00O\00\00\00\1A\00\00\00" }>, align 8
@alloc_917627991dcce789bac92e2b48ff2ccf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\85\00\00\00\19\00\00\00" }>, align 8
@alloc_1bd0f3ccb5695ae03717398589990e80 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\88\00\00\00\1F\00\00\00" }>, align 8
@alloc_c0ba54ae982d90d30b9c5394d44c3bff = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\93\00\00\00\09\00\00\00" }>, align 8
@alloc_377108d207780ea43a7bff4313266b2d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\98\00\00\00\09\00\00\00" }>, align 8
@alloc_67fee3923a1253e576603db2a7cc3769 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"FrameRange(" }>, align 1
@alloc_07656b3a0de61ce5c628545e169e4a19 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".." }>, align 1
@alloc_9e3f62b0e6490cc45676dc85f910c2d0 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc_66b748d60109a70935d7c8ff4103acd2 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_67fee3923a1253e576603db2a7cc3769, [8 x i8] c"\0B\00\00\00\00\00\00\00", ptr @alloc_07656b3a0de61ce5c628545e169e4a19, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_c079ed8b3565806ba4379b0e287ee07f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E4\00\00\007\00\00\00" }>, align 8
@alloc_4ca1ac426b102a9acc7fcf913cf4c660 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"invalid region type " }>, align 1
@alloc_e5e9b862f59b7b219603a8c2f3244fe9 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_4ca1ac426b102a9acc7fcf913cf4c660, [8 x i8] c"\14\00\00\00\00\00\00\00" }>, align 8
@alloc_77b37cd66ce1cc3a3fba36d23d80fdb3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E1\00\00\00\12\00\00\00" }>, align 8
@alloc_2fa382d66c8b05cee83d1e636a456d83 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"MemoryRegion" }>, align 1
@alloc_c6d312f4fb2564cdde1868738b40e953 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"range" }>, align 1
@vtable.8 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h73ff3de34420399dE", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h55f0d07467b614d1E" }>, align 8, !dbg !44
@alloc_24a09d864e93eaea8a967d85ad5fb14b = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"region_type" }>, align 1
@vtable.9 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17hd29111cf54170c59E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h633161579c3717fbE" }>, align 8, !dbg !52
@alloc_3c5b86a9b7fa1d302afea08936e483c5 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Usable" }>, align 1
@alloc_3e93a37ed61282b1c76f7355bd470201 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"InUse" }>, align 1
@alloc_f09f4d0dabebc98449d61db8d60067bb = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Reserved" }>, align 1
@alloc_405580fa38aa12693d369698203e043e = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"AcpiReclaimable" }>, align 1
@alloc_497f8f871d9b9bd5767a37917b988618 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"AcpiNvs" }>, align 1
@alloc_2db2f360d33be2fea5593ededc5fb904 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"BadMemory" }>, align 1
@alloc_bfff067230aa23bc581d3ad54a803735 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Kernel" }>, align 1
@alloc_272cabb5c5fb66cc8e055c6a08dd5a38 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"KernelStack" }>, align 1
@alloc_84113867da1e74b2269b5cf897cae626 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"PageTable" }>, align 1
@alloc_88f77a4216025d9c2616c4e0631b580d = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"Bootloader" }>, align 1
@alloc_296c708f84ba4aacbf601faaf01ee90e = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"FrameZero" }>, align 1
@alloc_59ba7b9f7211443cd55a366616eef46a = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc_1f9c4cc73f4140a97f2cf1f721646a68 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"BootInfo" }>, align 1
@alloc_3faf0b3374c02c8ecbb0aba47045e793 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Package" }>, align 1
@alloc_4f458a5ac3a6382b3750f993ab870080 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"NonExhaustive" }>, align 1

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hfe08fd84f61cd73cE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !92 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %new_len.dbg.spill = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_11 = alloca %"core::fmt::Arguments<'_>", align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !113, metadata !DIExpression()), !dbg !119
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !114, metadata !DIExpression()), !dbg !120
  br i1 true, label %bb1, label %bb6, !dbg !121

bb6:                                              ; preds = %bb2, %start
  %new_len = sub nuw i64 %self.1, %self.0, !dbg !122
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !122
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !115, metadata !DIExpression()), !dbg !123
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_17 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h8531ce4ff1947570E"(ptr %slice.0, i64 %slice.1) #10, !dbg !124
  store ptr %_17, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !125, metadata !DIExpression()), !dbg !136
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !135, metadata !DIExpression()), !dbg !138
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_17, i64 %self.0, !dbg !139
; call core::ptr::slice_from_raw_parts
  %4 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc15bfcfe5036da9cE(ptr %_0.i, i64 %new_len) #10, !dbg !140
  %_0.0 = extractvalue { ptr, i64 } %4, 0, !dbg !140
  %_0.1 = extractvalue { ptr, i64 } %4, 1, !dbg !140
  %5 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !141
  %6 = insertvalue { ptr, i64 } %5, i64 %_0.1, 1, !dbg !141
  ret { ptr, i64 } %6, !dbg !141

bb1:                                              ; preds = %start
  %_4 = icmp uge i64 %self.1, %self.0, !dbg !142
  br i1 %_4, label %bb2, label %bb4, !dbg !142

bb4:                                              ; preds = %bb2, %bb1
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_11, ptr align 8 @alloc_42b089c51c40a4752ce1a5c7011c4eea, i64 1) #10, !dbg !121
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h7770fb789a88f813E(ptr align 8 %_11, i1 zeroext false, ptr align 8 @alloc_49a804b428593483c1d611886a317f03) #11, !dbg !121
  unreachable, !dbg !121

bb2:                                              ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_9 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17ha77bb642792e1365E"(ptr %slice.0, i64 %slice.1) #10, !dbg !143
  %_7 = icmp ule i64 %self.1, %_9, !dbg !144
  br i1 %_7, label %bb6, label %bb4, !dbg !144
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h84dbbbd3ab3cdd81E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !145 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %new_len.dbg.spill = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_11 = alloca %"core::fmt::Arguments<'_>", align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !153, metadata !DIExpression()), !dbg !157
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !154, metadata !DIExpression()), !dbg !158
  br i1 true, label %bb1, label %bb6, !dbg !159

bb6:                                              ; preds = %bb2, %start
  %new_len = sub nuw i64 %self.1, %self.0, !dbg !160
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !160
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !155, metadata !DIExpression()), !dbg !161
  store ptr %slice.0, ptr %self.dbg.spill.i1, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !162, metadata !DIExpression()), !dbg !171
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !173, metadata !DIExpression()), !dbg !180
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !179, metadata !DIExpression()), !dbg !182
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %self.0, !dbg !183
; call core::ptr::slice_from_raw_parts_mut
  %5 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4c742dd8b8bf66daE(ptr %_0.i, i64 %new_len) #10, !dbg !184
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !184
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !184
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !185
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !185
  ret { ptr, i64 } %7, !dbg !185

bb1:                                              ; preds = %start
  %_4 = icmp uge i64 %self.1, %self.0, !dbg !186
  br i1 %_4, label %bb2, label %bb4, !dbg !186

bb4:                                              ; preds = %bb2, %bb1
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_11, ptr align 8 @alloc_9017f8eeb2152f6e4c9452a9bedc71c3, i64 1) #10, !dbg !159
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h7770fb789a88f813E(ptr align 8 %_11, i1 zeroext false, ptr align 8 @alloc_e19c428c10f540cb2b975c03c12649e0) #11, !dbg !159
  unreachable, !dbg !159

bb2:                                              ; preds = %bb1
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  %8 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %slice.1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !187, metadata !DIExpression()), !dbg !192
; call core::ptr::metadata::metadata
  %_0.i3 = call i64 @_ZN4core3ptr8metadata8metadata17h7db12d80793e1f85E(ptr %slice.0, i64 %slice.1) #10, !dbg !194
  %_7 = icmp ule i64 %self.1, %_0.i3, !dbg !195
  br i1 %_7, label %bb6, label %bb4, !dbg !195
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h4a28392e4da7e40dE"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !196 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !217, metadata !DIExpression()), !dbg !219
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !218, metadata !DIExpression()), !dbg !220
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !221
  br i1 %_3, label %bb1, label %bb2, !dbg !221

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !222
  br i1 %_9, label %bb3, label %bb4, !dbg !222

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h1b2ac3d0a3940fe3E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !223
  unreachable, !dbg !223

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hfe08fd84f61cd73cE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !224
  %_15.0 = extractvalue { ptr, i64 } %5, 0, !dbg !224
  %_15.1 = extractvalue { ptr, i64 } %5, 1, !dbg !224
  %6 = insertvalue { ptr, i64 } poison, ptr %_15.0, 0, !dbg !225
  %7 = insertvalue { ptr, i64 } %6, i64 %_15.1, 1, !dbg !225
  ret { ptr, i64 } %7, !dbg !225

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h0a42cdc12efaacd8E(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !226
  unreachable, !dbg !226
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd232e9471b3bcbd7E"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !227 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !235, metadata !DIExpression()), !dbg !237
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !236, metadata !DIExpression()), !dbg !238
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !239
  br i1 %_3, label %bb1, label %bb2, !dbg !239

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !240
  br i1 %_9, label %bb3, label %bb4, !dbg !240

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h1b2ac3d0a3940fe3E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !241
  unreachable, !dbg !241

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h84dbbbd3ab3cdd81E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !242
  %_17.0 = extractvalue { ptr, i64 } %5, 0, !dbg !242
  %_17.1 = extractvalue { ptr, i64 } %5, 1, !dbg !242
  %6 = insertvalue { ptr, i64 } poison, ptr %_17.0, 0, !dbg !243
  %7 = insertvalue { ptr, i64 } %6, i64 %_17.1, 1, !dbg !243
  ret { ptr, i64 } %7, !dbg !243

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h0a42cdc12efaacd8E(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !244
  unreachable, !dbg !244
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h804e76f7effbaca6E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !245 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !253, metadata !DIExpression()), !dbg !255
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !254, metadata !DIExpression()), !dbg !256
  store i64 0, ptr %_3, align 8, !dbg !257
  %3 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !257
  store i64 %self, ptr %3, align 8, !dbg !257
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !257
  %5 = load i64, ptr %4, align 8, !dbg !257, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !257
  %7 = load i64, ptr %6, align 8, !dbg !257, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd232e9471b3bcbd7E"(i64 %5, i64 %7, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !257
  %_0.0 = extractvalue { ptr, i64 } %8, 0, !dbg !257
  %_0.1 = extractvalue { ptr, i64 } %8, 1, !dbg !257
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !258
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1, !dbg !258
  ret { ptr, i64 } %10, !dbg !258
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hf5373de402fb0f6eE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !259 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !267, metadata !DIExpression()), !dbg !269
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !268, metadata !DIExpression()), !dbg !270
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !187, metadata !DIExpression()), !dbg !271
; call core::ptr::metadata::metadata
  %_0.i = call i64 @_ZN4core3ptr8metadata8metadata17h7db12d80793e1f85E(ptr %slice.0, i64 %slice.1) #10, !dbg !273
  store i64 %self, ptr %_3, align 8, !dbg !274
  %3 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !274
  store i64 %_0.i, ptr %3, align 8, !dbg !274
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !274
  %5 = load i64, ptr %4, align 8, !dbg !274, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !274
  %7 = load i64, ptr %6, align 8, !dbg !274, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h84dbbbd3ab3cdd81E"(i64 %5, i64 %7, ptr %slice.0, i64 %slice.1) #10, !dbg !274
  %_0.0 = extractvalue { ptr, i64 } %8, 0, !dbg !274
  %_0.1 = extractvalue { ptr, i64 } %8, 1, !dbg !274
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !275
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1, !dbg !275
  ret { ptr, i64 } %10, !dbg !275
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha9ef22d46c89057bE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !276 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !280, metadata !DIExpression()), !dbg !282
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !281, metadata !DIExpression()), !dbg !283
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !284
  br i1 %_3, label %bb1, label %bb2, !dbg !284

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hf5373de402fb0f6eE"(i64 %self, ptr %slice.0, i64 %slice.1) #10, !dbg !285
  %_11.0 = extractvalue { ptr, i64 } %3, 0, !dbg !285
  %_11.1 = extractvalue { ptr, i64 } %3, 1, !dbg !285
  %4 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0, !dbg !286
  %5 = insertvalue { ptr, i64 } %4, i64 %_11.1, 1, !dbg !286
  ret { ptr, i64 } %5, !dbg !286

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h1ff8d5543d1511caE(i64 %self, i64 %slice.1, ptr align 8 %0) #11, !dbg !287
  unreachable, !dbg !287
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7a4245780a411d1eE"(ptr align 8 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !288 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %_9 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !299, metadata !DIExpression()), !dbg !301
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !300, metadata !DIExpression()), !dbg !302
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h5ce0dce29a19af3cE"(ptr align 8 %self) #10, !dbg !303
  %_4 = load i64, ptr %_5, align 8, !dbg !304, !noundef !24
  %_3 = icmp eq i64 %_4, -1, !dbg !304
  br i1 %_3, label %bb2, label %bb3, !dbg !304

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %self, i64 24, i1 false), !dbg !305
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %3 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h20e7da73740013beE"(ptr align 8 %_9) #10, !dbg !305
  %_8.0 = extractvalue { i64, i64 } %3, 0, !dbg !305
  %_8.1 = extractvalue { i64, i64 } %3, 1, !dbg !305
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd232e9471b3bcbd7E"(i64 %_8.0, i64 %_8.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !305
  %_0.0 = extractvalue { ptr, i64 } %4, 0, !dbg !305
  %_0.1 = extractvalue { ptr, i64 } %4, 1, !dbg !305
  %5 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !306
  %6 = insertvalue { ptr, i64 } %5, i64 %_0.1, 1, !dbg !306
  ret { ptr, i64 } %6, !dbg !306

bb2:                                              ; preds = %start
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17he8afd580e0f0b753E(ptr align 8 %0) #11, !dbg !307
  unreachable, !dbg !307
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb88913efd5b9da0eE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !308 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !316, metadata !DIExpression()), !dbg !318
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !317, metadata !DIExpression()), !dbg !319
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h866ce3a2511dc300E"(ptr sret(%"core::ops::range::RangeInclusive<usize>") align 8 %_3, i64 0, i64 %self) #10, !dbg !320
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7a4245780a411d1eE"(ptr align 8 %_3, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !320
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !320
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !320
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !321
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !321
  ret { ptr, i64 } %5, !dbg !321
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e387e31321d4425E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !322 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !381, metadata !DIExpression()), !dbg !383
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !382, metadata !DIExpression()), !dbg !384
  %_3 = load ptr, ptr %self, align 8, !dbg !385, !nonnull !24, !align !386, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17hb5f31ef666b56f1bE"(ptr align 8 %_3, ptr align 8 %f) #10, !dbg !387
  ret i1 %_0, !dbg !388
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h633161579c3717fbE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !389 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !394, metadata !DIExpression()), !dbg !398
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !395, metadata !DIExpression()), !dbg !399
  %_3 = load ptr, ptr %self, align 8, !dbg !400, !nonnull !24, !align !401, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h2bed866459e5eb4bE"(ptr align 4 %_3, ptr align 8 %f) #10, !dbg !402
  ret i1 %_0, !dbg !403
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h46a9af7e6ced7d7bE(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !404 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %diff.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !411, metadata !DIExpression()), !dbg !422
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !412, metadata !DIExpression()), !dbg !423
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !413, metadata !DIExpression()), !dbg !424
  store ptr %src, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !425, metadata !DIExpression()), !dbg !430
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !432, metadata !DIExpression()), !dbg !439
  %_0.i3 = ptrtoint ptr %src to i64, !dbg !441
  store i64 %_0.i3, ptr %src_usize.dbg.spill, align 8, !dbg !442
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !414, metadata !DIExpression()), !dbg !443
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !425, metadata !DIExpression()), !dbg !444
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !432, metadata !DIExpression()), !dbg !446
  %_0.i = ptrtoint ptr %dst to i64, !dbg !448
  store i64 %_0.i, ptr %dst_usize.dbg.spill, align 8, !dbg !449
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !416, metadata !DIExpression()), !dbg !450
; call core::num::<impl usize>::checked_mul
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h520d63f17833999aE"(i64 8, i64 %count) #10, !dbg !451
  %_7.0 = extractvalue { i64, i64 } %0, 0, !dbg !451
  %_7.1 = extractvalue { i64, i64 } %0, 1, !dbg !451
; call core::option::Option<T>::expect
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h56a8ca37b2b5e318E"(i64 %_7.0, i64 %_7.1, ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i64 61, ptr align 8 @alloc_793df85d5c24952e4b4a6de0f309817f) #10, !dbg !451
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !451
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !418, metadata !DIExpression()), !dbg !452
; call core::num::<impl usize>::abs_diff
  %diff = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17hf7f1b5178ae292aeE"(i64 %_0.i3, i64 %_0.i) #10, !dbg !453
  store i64 %diff, ptr %diff.dbg.spill, align 8, !dbg !453
  call void @llvm.dbg.declare(metadata ptr %diff.dbg.spill, metadata !420, metadata !DIExpression()), !dbg !454
  %_0 = icmp uge i64 %diff, %size, !dbg !455
  ret i1 %_0, !dbg !456
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !457 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %diff.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !461, metadata !DIExpression()), !dbg !472
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !462, metadata !DIExpression()), !dbg !473
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !463, metadata !DIExpression()), !dbg !474
  store ptr %src, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !475, metadata !DIExpression()), !dbg !480
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !482, metadata !DIExpression()), !dbg !488
  %_0.i3 = ptrtoint ptr %src to i64, !dbg !490
  store i64 %_0.i3, ptr %src_usize.dbg.spill, align 8, !dbg !491
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !464, metadata !DIExpression()), !dbg !492
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !475, metadata !DIExpression()), !dbg !493
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !482, metadata !DIExpression()), !dbg !495
  %_0.i = ptrtoint ptr %dst to i64, !dbg !497
  store i64 %_0.i, ptr %dst_usize.dbg.spill, align 8, !dbg !498
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !466, metadata !DIExpression()), !dbg !499
; call core::num::<impl usize>::checked_mul
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h520d63f17833999aE"(i64 24, i64 %count) #10, !dbg !500
  %_7.0 = extractvalue { i64, i64 } %0, 0, !dbg !500
  %_7.1 = extractvalue { i64, i64 } %0, 1, !dbg !500
; call core::option::Option<T>::expect
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h56a8ca37b2b5e318E"(i64 %_7.0, i64 %_7.1, ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i64 61, ptr align 8 @alloc_793df85d5c24952e4b4a6de0f309817f) #10, !dbg !500
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !500
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !468, metadata !DIExpression()), !dbg !501
; call core::num::<impl usize>::abs_diff
  %diff = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17hf7f1b5178ae292aeE"(i64 %_0.i3, i64 %_0.i) #10, !dbg !502
  store i64 %diff, ptr %diff.dbg.spill, align 8, !dbg !502
  call void @llvm.dbg.declare(metadata ptr %diff.dbg.spill, metadata !470, metadata !DIExpression()), !dbg !503
  %_0 = icmp uge i64 %diff, %size, !dbg !504
  ret i1 %_0, !dbg !505
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h13555a30045ed5d4E(ptr %ptr) unnamed_addr #0 !dbg !506 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !521, metadata !DIExpression()), !dbg !524
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h077a0fb026b5751bE"(ptr %ptr) #10, !dbg !525
  br i1 %_2, label %bb2, label %bb3, !dbg !525

bb3:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17ha8dff1aaa44800d2E"(ptr %ptr) #10, !dbg !526
  %1 = zext i1 %0 to i8, !dbg !526
  store i8 %1, ptr %_0, align 1, !dbg !526
  br label %bb4, !dbg !526

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !527
  br label %bb4, !dbg !527

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !528, !range !529, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !528
  ret i1 %3, !dbg !528
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h345c5d679dffc627E(ptr %ptr) unnamed_addr #0 !dbg !530 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !542, metadata !DIExpression()), !dbg !545
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd748fb3b4456d5a1E"(ptr %ptr) #10, !dbg !546
  br i1 %_2, label %bb2, label %bb3, !dbg !546

bb3:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h3f5dbdbb1c39319cE"(ptr %ptr) #10, !dbg !547
  %1 = zext i1 %0 to i8, !dbg !547
  store i8 %1, ptr %_0, align 1, !dbg !547
  br label %bb4, !dbg !547

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !548
  br label %bb4, !dbg !548

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !549, !range !529, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !549
  ret i1 %3, !dbg !549
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %ptr) unnamed_addr #0 !dbg !550 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !554, metadata !DIExpression()), !dbg !555
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0b69973e713c1f15E"(ptr %ptr) #10, !dbg !556
  br i1 %_2, label %bb2, label %bb3, !dbg !556

bb3:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hb01abb80101b388dE"(ptr %ptr) #10, !dbg !557
  %1 = zext i1 %0 to i8, !dbg !557
  store i8 %1, ptr %_0, align 1, !dbg !557
  br label %bb4, !dbg !557

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !558
  br label %bb4, !dbg !558

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !559, !range !529, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !559
  ret i1 %3, !dbg !559
}

; core::intrinsics::is_valid_allocation_size
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17h5e6044888f5033eaE(i64 %len) unnamed_addr #0 !dbg !560 {
start:
  %len.dbg.spill = alloca i64, align 8
  %max_len.dbg.spill = alloca i64, align 8
  store i64 384307168202282325, ptr %max_len.dbg.spill, align 8, !dbg !567
  call void @llvm.dbg.declare(metadata ptr %max_len.dbg.spill, metadata !565, metadata !DIExpression()), !dbg !567
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !567
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !564, metadata !DIExpression()), !dbg !568
  %_0 = icmp ule i64 %len, 384307168202282325, !dbg !569
  ret i1 %_0, !dbg !570
}

; core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h1bde2137c2914e1cE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !571 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !579, metadata !DIExpression()), !dbg !581
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !580, metadata !DIExpression()), !dbg !582
  %_4 = load i64, ptr %self, align 8, !dbg !583, !noundef !24
  %_5 = load i64, ptr %other, align 8, !dbg !584, !noundef !24
  %_3 = icmp ult i64 %_4, %_5, !dbg !583
  br i1 %_3, label %bb1, label %bb2, !dbg !583

bb2:                                              ; preds = %start
  %_7 = load i64, ptr %self, align 8, !dbg !585, !noundef !24
  %_8 = load i64, ptr %other, align 8, !dbg !586, !noundef !24
  %_6 = icmp eq i64 %_7, %_8, !dbg !585
  br i1 %_6, label %bb3, label %bb4, !dbg !585

bb1:                                              ; preds = %start
  store i8 -1, ptr %_0, align 1, !dbg !587
  br label %bb5, !dbg !588

bb4:                                              ; preds = %bb2
  store i8 1, ptr %_0, align 1, !dbg !589
  br label %bb5, !dbg !590

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !591
  br label %bb5, !dbg !590

bb5:                                              ; preds = %bb1, %bb3, %bb4
  %0 = load i8, ptr %_0, align 1, !dbg !592, !range !593, !noundef !24
  ret i8 %0, !dbg !592
}

; core::fmt::builders::DebugList::entries
; Function Attrs: noredzone nounwind
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h77fdd07d5dbe7587E(ptr align 8 %self, ptr %entries.0, ptr %entries.1) unnamed_addr #1 !dbg !594 {
start:
  %entries.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %entry = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !627, metadata !DIExpression()), !dbg !633
  %0 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 0
  store ptr %entries.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 1
  store ptr %entries.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %entries.dbg.spill, metadata !628, metadata !DIExpression()), !dbg !634
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !629, metadata !DIExpression()), !dbg !635
  call void @llvm.dbg.declare(metadata ptr %entry, metadata !631, metadata !DIExpression()), !dbg !636
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h093e638339f4d807E"(ptr %entries.0, ptr %entries.1) #10, !dbg !637
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !637
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !637
  %3 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 0, !dbg !637
  store ptr %_3.0, ptr %3, align 8, !dbg !637
  %4 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 1, !dbg !637
  store ptr %_3.1, ptr %4, align 8, !dbg !637
  br label %bb2, !dbg !638

bb2:                                              ; preds = %bb4, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6f3a4417bb018a70E"(ptr align 8 %iter) #10, !dbg !635
  store ptr %5, ptr %_5, align 8, !dbg !635
  %6 = load ptr, ptr %_5, align 8, !dbg !635, !noundef !24
  %7 = ptrtoint ptr %6 to i64, !dbg !635
  %8 = icmp eq i64 %7, 0, !dbg !635
  %_7 = select i1 %8, i64 0, i64 1, !dbg !635
  %9 = icmp eq i64 %_7, 0, !dbg !635
  br i1 %9, label %bb6, label %bb4, !dbg !635

bb6:                                              ; preds = %bb2
  ret ptr %self, !dbg !639

bb4:                                              ; preds = %bb2
  %10 = load ptr, ptr %_5, align 8, !dbg !640, !nonnull !24, !align !386, !noundef !24
  store ptr %10, ptr %entry, align 8, !dbg !640
; call core::fmt::builders::DebugList::entry
  %_9 = call align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h2057dc9e9144cd00E(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.0) #10, !dbg !641
  br label %bb2, !dbg !642

bb5:                                              ; No predecessors!
  unreachable, !dbg !635
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17heef7b71c42fa4a1bE(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1, ptr align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 !dbg !643 {
start:
  %_4.dbg.spill = alloca %"core::fmt::rt::UnsafeArg", align 1
  %fmt.dbg.spill = alloca { ptr, i64 }, align 8
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_5 = alloca { ptr, i64 }, align 8
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::rt::UnsafeArg", align 1
  call void @llvm.dbg.declare(metadata ptr %_unsafe_arg.dbg.spill, metadata !720, metadata !DIExpression()), !dbg !722
  %0 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0, !dbg !722
  store ptr %pieces.0, ptr %0, align 8, !dbg !722
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1, !dbg !722
  store i64 %pieces.1, ptr %1, align 8, !dbg !722
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !717, metadata !DIExpression()), !dbg !723
  %2 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0, !dbg !722
  store ptr %args.0, ptr %2, align 8, !dbg !722
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1, !dbg !722
  store i64 %args.1, ptr %3, align 8, !dbg !722
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !718, metadata !DIExpression()), !dbg !724
  %4 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 0, !dbg !722
  store ptr %fmt.0, ptr %4, align 8, !dbg !722
  %5 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 1, !dbg !722
  store i64 %fmt.1, ptr %5, align 8, !dbg !722
  call void @llvm.dbg.declare(metadata ptr %fmt.dbg.spill, metadata !719, metadata !DIExpression()), !dbg !725
  call void @llvm.dbg.declare(metadata ptr %_4.dbg.spill, metadata !721, metadata !DIExpression()), !dbg !722
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !726
  store ptr %fmt.0, ptr %6, align 8, !dbg !726
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !726
  store i64 %fmt.1, ptr %7, align 8, !dbg !726
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 0, !dbg !727
  store ptr %pieces.0, ptr %8, align 8, !dbg !727
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 1, !dbg !727
  store i64 %pieces.1, ptr %9, align 8, !dbg !727
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !727
  %11 = load ptr, ptr %10, align 8, !dbg !727, !align !386, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !727
  %13 = load i64, ptr %12, align 8, !dbg !727
  %14 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 2, !dbg !727
  %15 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 0, !dbg !727
  store ptr %11, ptr %15, align 8, !dbg !727
  %16 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 1, !dbg !727
  store i64 %13, ptr %16, align 8, !dbg !727
  %17 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 1, !dbg !727
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !727
  store ptr %args.0, ptr %18, align 8, !dbg !727
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !727
  store i64 %args.1, ptr %19, align 8, !dbg !727
  ret void, !dbg !728
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments6new_v117h4dd1a47854aa80dcE(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !729 {
start:
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_14 = alloca { ptr, i64 }, align 8
  %_12 = alloca %"core::fmt::Arguments<'_>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !734, metadata !DIExpression()), !dbg !736
  %2 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !735, metadata !DIExpression()), !dbg !737
  %_3 = icmp ult i64 %pieces.1, %args.1, !dbg !738
  br i1 %_3, label %bb3, label %bb1, !dbg !738

bb1:                                              ; preds = %start
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %args.1, i64 1), !dbg !739
  %_10.0 = extractvalue { i64, i1 } %4, 0, !dbg !739
  %_10.1 = extractvalue { i64, i1 } %4, 1, !dbg !739
  %5 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !739
  br i1 %5, label %panic, label %bb2, !dbg !739

bb3:                                              ; preds = %bb2, %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_12, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1) #10, !dbg !740
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h7c3b1a7d9368f16cE(ptr align 8 %_12, ptr align 8 @alloc_a128bb0331e9cbfe13a5df140fd20243) #11, !dbg !740
  unreachable, !dbg !740

bb2:                                              ; preds = %bb1
  %_6 = icmp ugt i64 %pieces.1, %_10.0, !dbg !741
  br i1 %_6, label %bb3, label %bb5, !dbg !741

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_1d488b18c5f7c1d3858ca9f0071c91c8) #11, !dbg !739
  unreachable, !dbg !739

bb5:                                              ; preds = %bb2
  store ptr null, ptr %_14, align 8, !dbg !742
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 0, !dbg !743
  store ptr %pieces.0, ptr %6, align 8, !dbg !743
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 1, !dbg !743
  store i64 %pieces.1, ptr %7, align 8, !dbg !743
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_14, i32 0, i32 0, !dbg !743
  %9 = load ptr, ptr %8, align 8, !dbg !743, !align !386, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_14, i32 0, i32 1, !dbg !743
  %11 = load i64, ptr %10, align 8, !dbg !743
  %12 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 2, !dbg !743
  %13 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 0, !dbg !743
  store ptr %9, ptr %13, align 8, !dbg !743
  %14 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 1, !dbg !743
  store i64 %11, ptr %14, align 8, !dbg !743
  %15 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 1, !dbg !743
  %16 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 0, !dbg !743
  store ptr %args.0, ptr %16, align 8, !dbg !743
  %17 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 1, !dbg !743
  store i64 %args.1, ptr %17, align 8, !dbg !743
  ret void, !dbg !744
}

; core::fmt::Arguments::new_const
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1) unnamed_addr #0 !dbg !745 {
start:
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !750, metadata !DIExpression()), !dbg !751
  %_2 = icmp ugt i64 %pieces.1, 1, !dbg !752
  br i1 %_2, label %bb1, label %bb3, !dbg !752

bb3:                                              ; preds = %start
  store ptr null, ptr %_7, align 8, !dbg !753
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 0, !dbg !754
  store ptr %pieces.0, ptr %2, align 8, !dbg !754
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 1, !dbg !754
  store i64 %pieces.1, ptr %3, align 8, !dbg !754
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !754
  %5 = load ptr, ptr %4, align 8, !dbg !754, !align !386, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !754
  %7 = load i64, ptr %6, align 8, !dbg !754
  %8 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 2, !dbg !754
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !754
  store ptr %5, ptr %9, align 8, !dbg !754
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !754
  store i64 %7, ptr %10, align 8, !dbg !754
  %11 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 1, !dbg !754
  %12 = getelementptr inbounds { ptr, i64 }, ptr %11, i32 0, i32 0, !dbg !754
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %12, align 8, !dbg !754
  %13 = getelementptr inbounds { ptr, i64 }, ptr %11, i32 0, i32 1, !dbg !754
  store i64 0, ptr %13, align 8, !dbg !754
  ret void, !dbg !755

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1) #10, !dbg !756
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h7c3b1a7d9368f16cE(ptr align 8 %_5, ptr align 8 @alloc_40dc4a2e4fa36320ad05a7f7aeedf921) #11, !dbg !756
  unreachable, !dbg !756
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h3f955fd1f4c3210eE(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !757 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %b = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %a = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !763, metadata !DIExpression()), !dbg !769
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !764, metadata !DIExpression()), !dbg !770
  call void @llvm.dbg.declare(metadata ptr %a, metadata !765, metadata !DIExpression()), !dbg !771
  call void @llvm.dbg.declare(metadata ptr %b, metadata !767, metadata !DIExpression()), !dbg !772
; call core::ptr::read
  call void @_ZN4core3ptr4read17h402d8c422da68d48E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") align 8 %a, ptr %x) #10, !dbg !773
; call core::ptr::read
  call void @_ZN4core3ptr4read17h402d8c422da68d48E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") align 8 %b, ptr %y) #10, !dbg !774
; call core::ptr::write
  call void @_ZN4core3ptr5write17h057bd9f82e24b379E(ptr %x, ptr align 8 %b) #10, !dbg !775
; call core::ptr::write
  call void @_ZN4core3ptr5write17h057bd9f82e24b379E(ptr %y, ptr align 8 %a) #10, !dbg !776
  ret void, !dbg !777
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h4aa3a52a9b9e2a51E(ptr align 1 %x, ptr align 1 %y) unnamed_addr #0 !dbg !778 {
start:
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i8, align 1
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !792, metadata !DIExpression()), !dbg !800
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !793, metadata !DIExpression()), !dbg !801
; call core::ptr::read
  %a = call i8 @_ZN4core3ptr4read17h045b30f529bbe3fbE(ptr %x) #10, !dbg !802
  store i8 %a, ptr %a.dbg.spill, align 1, !dbg !802
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !794, metadata !DIExpression()), !dbg !803
; call core::ptr::read
  %b = call i8 @_ZN4core3ptr4read17h045b30f529bbe3fbE(ptr %y) #10, !dbg !804
  store i8 %b, ptr %b.dbg.spill, align 1, !dbg !804
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !796, metadata !DIExpression()), !dbg !805
; call core::ptr::write
  call void @_ZN4core3ptr5write17hfa263577c4b29781E(ptr %x, i8 %b) #10, !dbg !806
; call core::ptr::write
  call void @_ZN4core3ptr5write17hfa263577c4b29781E(ptr %y, i8 %a) #10, !dbg !807
  ret void, !dbg !808
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h69faf92eef3d0523E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !809 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !814, metadata !DIExpression()), !dbg !820
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !815, metadata !DIExpression()), !dbg !821
; call core::ptr::read
  %a = call i64 @_ZN4core3ptr4read17h8270cbc7a9af2598E(ptr %x) #10, !dbg !822
  store i64 %a, ptr %a.dbg.spill, align 8, !dbg !822
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !816, metadata !DIExpression()), !dbg !823
; call core::ptr::read
  %b = call i64 @_ZN4core3ptr4read17h8270cbc7a9af2598E(ptr %y) #10, !dbg !824
  store i64 %b, ptr %b.dbg.spill, align 8, !dbg !824
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !818, metadata !DIExpression()), !dbg !825
; call core::ptr::write
  call void @_ZN4core3ptr5write17he74464ca2033b4f5E(ptr %x, i64 %b) #10, !dbg !826
; call core::ptr::write
  call void @_ZN4core3ptr5write17he74464ca2033b4f5E(ptr %y, i64 %a) #10, !dbg !827
  ret void, !dbg !828
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17hbe58e44398e6988fE(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !829 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %b = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %a = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !834, metadata !DIExpression()), !dbg !840
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !835, metadata !DIExpression()), !dbg !841
  call void @llvm.dbg.declare(metadata ptr %a, metadata !836, metadata !DIExpression()), !dbg !842
  call void @llvm.dbg.declare(metadata ptr %b, metadata !838, metadata !DIExpression()), !dbg !843
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb4cf770cf4557c59E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %a, ptr %x) #10, !dbg !844
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb4cf770cf4557c59E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %b, ptr %y) #10, !dbg !845
; call core::ptr::write
  call void @_ZN4core3ptr5write17hbd9963953b875ca4E(ptr %x, ptr align 8 %b) #10, !dbg !846
; call core::ptr::write
  call void @_ZN4core3ptr5write17hbd9963953b875ca4E(ptr %y, ptr align 8 %a) #10, !dbg !847
  ret void, !dbg !848
}

; core::mem::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem4swap17h19ffc0ec2f1bbdc8E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !849 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !851, metadata !DIExpression()), !dbg !853
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !852, metadata !DIExpression()), !dbg !854
  %_7 = icmp eq i64 8, 0, !dbg !855
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !855
  br i1 %0, label %panic, label %bb3, !dbg !855

bb3:                                              ; preds = %start
  %_4 = udiv i64 24, 8, !dbg !855
  %_3 = icmp ugt i64 %_4, 4, !dbg !855
  br i1 %_3, label %bb4, label %bb5, !dbg !855

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_6cf74fdfa9a84869e78181d3776b84df) #11, !dbg !855
  unreachable, !dbg !855

bb5:                                              ; preds = %bb3
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17hbe58e44398e6988fE(ptr align 8 %x, ptr align 8 %y) #10, !dbg !856
  br label %bb6, !dbg !856

bb4:                                              ; preds = %bb3
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h7de8bbc48e97f8ecE(ptr %x, ptr %y, i64 1) #10, !dbg !857
  br label %bb6, !dbg !857

bb6:                                              ; preds = %bb4, %bb5
  ret void, !dbg !858
}

; core::mem::forget
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem6forget17hb229b34f67d22417E(ptr align 8 %t) unnamed_addr #0 !dbg !859 {
start:
  %_2 = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  call void @llvm.dbg.declare(metadata ptr %t, metadata !863, metadata !DIExpression()), !dbg !864
  call void @llvm.dbg.declare(metadata ptr %t, metadata !865, metadata !DIExpression()), !dbg !872
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %t, i64 24, i1 false), !dbg !874
  ret void, !dbg !875
}

; core::num::<impl i32>::abs
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$3abs17hd5485dc9e9602777E"(i32 %self) unnamed_addr #0 !dbg !876 {
start:
  %self.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill = alloca i32, align 4
  %_0 = alloca i32, align 4
  store i32 %self, ptr %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !884, metadata !DIExpression()), !dbg !885
  store i32 %self, ptr %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !886, metadata !DIExpression()), !dbg !891
  %_0.i = icmp slt i32 %self, 0, !dbg !893
  br i1 %_0.i, label %bb2, label %bb4, !dbg !894

bb4:                                              ; preds = %start
  store i32 %self, ptr %_0, align 4, !dbg !895
  br label %bb5, !dbg !896

bb2:                                              ; preds = %start
  %_3 = icmp eq i32 %self, -2147483648, !dbg !897
  %0 = call i1 @llvm.expect.i1(i1 %_3, i1 false), !dbg !897
  br i1 %0, label %panic, label %bb3, !dbg !897

bb5:                                              ; preds = %bb3, %bb4
  %1 = load i32, ptr %_0, align 4, !dbg !898, !noundef !24
  ret i32 %1, !dbg !898

bb3:                                              ; preds = %bb2
  %2 = sub i32 0, %self, !dbg !897
  store i32 %2, ptr %_0, align 4, !dbg !897
  br label %bb5, !dbg !896

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_710c4bfa6ec09446dd0c473b046f8ffb) #11, !dbg !897
  unreachable, !dbg !897
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h520d63f17833999aE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !899 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %_0.i = alloca { i64, i8 }, align 8
  %0 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_0 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !905, metadata !DIExpression()), !dbg !910
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !906, metadata !DIExpression()), !dbg !911
  store i64 %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !912, metadata !DIExpression()), !dbg !925
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !921, metadata !DIExpression()), !dbg !927
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !928
  %_5.0.i = extractvalue { i64, i1 } %1, 0, !dbg !928
  %_5.1.i = extractvalue { i64, i1 } %1, 1, !dbg !928
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !929
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill.i, metadata !922, metadata !DIExpression()), !dbg !930
  %2 = zext i1 %_5.1.i to i8, !dbg !931
  store i8 %2, ptr %b.dbg.spill.i, align 1, !dbg !931
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill.i, metadata !924, metadata !DIExpression()), !dbg !932
  store i64 %_5.0.i, ptr %_0.i, align 8, !dbg !933
  %3 = getelementptr inbounds { i64, i8 }, ptr %_0.i, i32 0, i32 1, !dbg !933
  %4 = zext i1 %_5.1.i to i8, !dbg !933
  store i8 %4, ptr %3, align 8, !dbg !933
  %5 = load i64, ptr %_0.i, align 8, !dbg !934, !noundef !24
  %6 = getelementptr inbounds { i64, i8 }, ptr %_0.i, i32 0, i32 1, !dbg !934
  %7 = load i8, ptr %6, align 8, !dbg !934, !range !529, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !934
  %9 = zext i1 %8 to i8, !dbg !934
  %10 = insertvalue { i64, i8 } poison, i64 %5, 0, !dbg !934
  %11 = insertvalue { i64, i8 } %10, i8 %9, 1, !dbg !934
  %_5.0 = extractvalue { i64, i8 } %11, 0, !dbg !935
  %12 = extractvalue { i64, i8 } %11, 1, !dbg !935
  %_5.1 = trunc i8 %12 to i1, !dbg !935
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !936
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !907, metadata !DIExpression()), !dbg !937
  %13 = zext i1 %_5.1 to i8, !dbg !938
  store i8 %13, ptr %b.dbg.spill, align 1, !dbg !938
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !909, metadata !DIExpression()), !dbg !939
  %14 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !940
  %15 = zext i1 %14 to i8, !dbg !940
  store i8 %15, ptr %0, align 1, !dbg !940
  %16 = load i8, ptr %0, align 1, !dbg !940, !range !529, !noundef !24
  %_6 = trunc i8 %16 to i1, !dbg !940
  br i1 %_6, label %bb3, label %bb4, !dbg !940

bb4:                                              ; preds = %start
  %17 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !941
  store i64 %_5.0, ptr %17, align 8, !dbg !941
  store i64 1, ptr %_0, align 8, !dbg !941
  br label %bb5, !dbg !942

bb3:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !943
  br label %bb5, !dbg !942

bb5:                                              ; preds = %bb3, %bb4
  %18 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !944
  %19 = load i64, ptr %18, align 8, !dbg !944, !range !945, !noundef !24
  %20 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !944
  %21 = load i64, ptr %20, align 8, !dbg !944
  %22 = insertvalue { i64, i64 } poison, i64 %19, 0, !dbg !944
  %23 = insertvalue { i64, i64 } %22, i64 %21, 1, !dbg !944
  ret { i64, i64 } %23, !dbg !944
}

; core::num::<impl usize>::next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17hd1fd1a9a04fba62bE"(i64 %self) unnamed_addr #0 !dbg !946 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !950, metadata !DIExpression()), !dbg !951
; call core::num::<impl usize>::one_less_than_next_power_of_two
  %_2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17hf1735c9ff7fea1feE"(i64 %self) #10, !dbg !952
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_2, i64 1), !dbg !952
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !952
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !952
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !952
  br i1 %1, label %panic, label %bb2, !dbg !952

bb2:                                              ; preds = %start
  ret i64 %_3.0, !dbg !953

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_d9985fae612aba2c1bbfc17404e3b546) #11, !dbg !952
  unreachable, !dbg !952
}

; core::num::<impl usize>::one_less_than_next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17hf1735c9ff7fea1feE"(i64 %self) unnamed_addr #0 !dbg !954 {
start:
  %z.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %p.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_0 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !956, metadata !DIExpression()), !dbg !961
  %_2 = icmp ule i64 %self, 1, !dbg !962
  br i1 %_2, label %bb1, label %bb2, !dbg !962

bb2:                                              ; preds = %start
  %_4.0 = sub i64 %self, 1, !dbg !963
  %_4.1 = icmp ult i64 %self, 1, !dbg !963
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !963
  br i1 %1, label %panic, label %bb3, !dbg !963

bb1:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !964
  br label %bb6, !dbg !965

bb3:                                              ; preds = %bb2
  store i64 %_4.0, ptr %p.dbg.spill, align 8, !dbg !963
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !957, metadata !DIExpression()), !dbg !966
  %2 = call i64 @llvm.ctlz.i64(i64 %_4.0, i1 true), !dbg !967
  store i64 %2, ptr %0, align 8, !dbg !967
  %z = load i64, ptr %0, align 8, !dbg !967, !noundef !24
  store i64 %z, ptr %z.dbg.spill, align 8, !dbg !967
  call void @llvm.dbg.declare(metadata ptr %z.dbg.spill, metadata !959, metadata !DIExpression()), !dbg !968
  %_6 = icmp ult i64 %z, 64, !dbg !969
  %3 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !969
  br i1 %3, label %bb5, label %panic1, !dbg !969

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_d9985fae612aba2c1bbfc17404e3b546) #11, !dbg !963
  unreachable, !dbg !963

bb5:                                              ; preds = %bb3
  %4 = and i64 %z, 63, !dbg !969
  %5 = lshr i64 -1, %4, !dbg !969
  store i64 %5, ptr %_0, align 8, !dbg !969
  br label %bb6, !dbg !965

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.5, i64 36, ptr align 8 @alloc_d9985fae612aba2c1bbfc17404e3b546) #11, !dbg !969
  unreachable, !dbg !969

bb6:                                              ; preds = %bb1, %bb5
  %6 = load i64, ptr %_0, align 8, !dbg !965, !noundef !24
  ret i64 %6, !dbg !965
}

; core::num::<impl usize>::abs_diff
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17hf7f1b5178ae292aeE"(i64 %self, i64 %other) unnamed_addr #0 !dbg !970 {
start:
  %rhs.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill.i = alloca i32, align 4
  %other.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_0 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !974, metadata !DIExpression()), !dbg !976
  store i64 %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !975, metadata !DIExpression()), !dbg !977
  %0 = icmp eq i64 8, 1, !dbg !978
  br i1 %0, label %bb2, label %bb5, !dbg !978

bb2:                                              ; preds = %start
  %_6 = trunc i64 %self to i32, !dbg !979
  %_7 = trunc i64 %other to i32, !dbg !980
  store i32 %_6, ptr %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !981, metadata !DIExpression()), !dbg !987
  store i32 %_7, ptr %rhs.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !986, metadata !DIExpression()), !dbg !989
  %_0.i = sub i32 %_6, %_7, !dbg !990
; call core::num::<impl i32>::abs
  %_4 = call i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$3abs17hd5485dc9e9602777E"(i32 %_0.i) #10, !dbg !979
  %1 = sext i32 %_4 to i64, !dbg !979
  store i64 %1, ptr %_0, align 8, !dbg !979
  br label %bb10, !dbg !991

bb5:                                              ; preds = %start
  %_8 = icmp ult i64 %self, %other, !dbg !992
  br i1 %_8, label %bb6, label %bb8, !dbg !992

bb10:                                             ; preds = %bb7, %bb9, %bb2
  %2 = load i64, ptr %_0, align 8, !dbg !993, !noundef !24
  ret i64 %2, !dbg !993

bb8:                                              ; preds = %bb5
  %_10.0 = sub i64 %self, %other, !dbg !994
  %_10.1 = icmp ult i64 %self, %other, !dbg !994
  %3 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !994
  br i1 %3, label %panic, label %bb9, !dbg !994

bb6:                                              ; preds = %bb5
  %_9.0 = sub i64 %other, %self, !dbg !995
  %_9.1 = icmp ult i64 %other, %self, !dbg !995
  %4 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !995
  br i1 %4, label %panic1, label %bb7, !dbg !995

bb9:                                              ; preds = %bb8
  store i64 %_10.0, ptr %_0, align 8, !dbg !994
  br label %bb10, !dbg !996

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_d9985fae612aba2c1bbfc17404e3b546) #11, !dbg !994
  unreachable, !dbg !994

bb7:                                              ; preds = %bb6
  store i64 %_9.0, ptr %_0, align 8, !dbg !995
  br label %bb10, !dbg !996

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_d9985fae612aba2c1bbfc17404e3b546) #11, !dbg !995
  unreachable, !dbg !995
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h20e7da73740013beE"(ptr align 8 %self) unnamed_addr #0 !dbg !997 {
start:
  %exclusive_end.dbg.spill = alloca i64, align 8
  %start1 = alloca i64, align 8
  %_0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1003, metadata !DIExpression()), !dbg !1008
  call void @llvm.dbg.declare(metadata ptr %start1, metadata !1006, metadata !DIExpression()), !dbg !1009
  %0 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 1, !dbg !1010
  %_3 = load i64, ptr %0, align 8, !dbg !1010, !noundef !24
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_3, i64 1), !dbg !1010
  %_4.0 = extractvalue { i64, i1 } %1, 0, !dbg !1010
  %_4.1 = extractvalue { i64, i1 } %1, 1, !dbg !1010
  %2 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1010
  br i1 %2, label %panic, label %bb1, !dbg !1010

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %exclusive_end.dbg.spill, align 8, !dbg !1010
  call void @llvm.dbg.declare(metadata ptr %exclusive_end.dbg.spill, metadata !1004, metadata !DIExpression()), !dbg !1011
  %3 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 2, !dbg !1012
  %4 = load i8, ptr %3, align 8, !dbg !1012, !range !529, !noundef !24
  %_6 = trunc i8 %4 to i1, !dbg !1012
  br i1 %_6, label %bb2, label %bb3, !dbg !1012

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_5455a6f2bbf0249b2427e5f4c6b99636) #11, !dbg !1010
  unreachable, !dbg !1010

bb3:                                              ; preds = %bb1
  %5 = load i64, ptr %self, align 8, !dbg !1013, !noundef !24
  store i64 %5, ptr %start1, align 8, !dbg !1013
  br label %bb4, !dbg !1014

bb2:                                              ; preds = %bb1
  store i64 %_4.0, ptr %start1, align 8, !dbg !1015
  br label %bb4, !dbg !1014

bb4:                                              ; preds = %bb2, %bb3
  %_7 = load i64, ptr %start1, align 8, !dbg !1016, !noundef !24
  store i64 %_7, ptr %_0, align 8, !dbg !1016
  %6 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !1016
  store i64 %_4.0, ptr %6, align 8, !dbg !1016
  %7 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !1017
  %8 = load i64, ptr %7, align 8, !dbg !1017, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !1017
  %10 = load i64, ptr %9, align 8, !dbg !1017, !noundef !24
  %11 = insertvalue { i64, i64 } poison, i64 %8, 0, !dbg !1017
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !1017
  ret { i64, i64 } %12, !dbg !1017
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h034aa27057d712deE"(ptr align 8 %self, ptr align 8 %0, ptr align 8 %1) unnamed_addr #1 !dbg !1018 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %args = alloca { ptr, ptr }, align 8
  store ptr %0, ptr %args, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1
  store ptr %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1037, metadata !DIExpression()), !dbg !1046
  call void @llvm.dbg.declare(metadata ptr %args, metadata !1038, metadata !DIExpression()), !dbg !1047
  %_3 = load ptr, ptr %self, align 8, !dbg !1048, !nonnull !24, !align !386, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 0, !dbg !1048
  %4 = load ptr, ptr %3, align 8, !dbg !1048, !nonnull !24, !align !386, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1, !dbg !1048
  %6 = load ptr, ptr %5, align 8, !dbg !1048, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_0 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %_3, ptr align 8 %4, ptr align 8 %6) #10, !dbg !1048
  ret i1 %_0, !dbg !1049
}

; core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h87bd16592270f38eE"(ptr align 8 %_1) unnamed_addr #1 !dbg !1050 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1061, metadata !DIExpression()), !dbg !1064
; call <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9dc8591706f88f65E"(ptr align 8 %_1) #10, !dbg !1064
  ret void, !dbg !1064
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr19swap_nonoverlapping17h7de8bbc48e97f8ecE(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1065 {
start:
  %self.dbg.spill.i20 = alloca ptr, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %y.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill16 = alloca i64, align 8
  %y.dbg.spill13 = alloca ptr, align 8
  %x.dbg.spill11 = alloca ptr, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %y.dbg.spill5 = alloca ptr, align 8
  %x.dbg.spill3 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1069, metadata !DIExpression()), !dbg !1086
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1070, metadata !DIExpression()), !dbg !1087
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1071, metadata !DIExpression()), !dbg !1088
  br i1 true, label %bb1, label %bb2, !dbg !1089

bb2:                                              ; preds = %_ZN4core3ptr19swap_nonoverlapping7runtime17hcf517f836972a8a7E.exit, %start
  %_7 = icmp ule i64 8, 8, !dbg !1090
  br i1 %_7, label %bb5, label %bb40, !dbg !1090

bb1:                                              ; preds = %start
  store ptr %x, ptr %_6, align 8, !dbg !1089
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1089
  store ptr %y, ptr %1, align 8, !dbg !1089
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1089
  store i64 %count, ptr %2, align 8, !dbg !1089
  %3 = load ptr, ptr %_6, align 8, !dbg !1089, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1089
  %5 = load ptr, ptr %4, align 8, !dbg !1089, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1089
  %7 = load i64, ptr %6, align 8, !dbg !1089, !noundef !24
  store ptr %3, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !1091, metadata !DIExpression()), !dbg !1097
  store ptr %5, ptr %y.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill.i, metadata !1095, metadata !DIExpression()), !dbg !1097
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1096, metadata !DIExpression()), !dbg !1097
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %3) #10, !dbg !1099
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !1099

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_546a48d82dbbd37bfd409d4513b73f46, i64 166) #11, !dbg !1101
  unreachable, !dbg !1101

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %5) #10, !dbg !1102
  br i1 %_6.i, label %bb4.i, label %bb7.i, !dbg !1102

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_8.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %3, ptr %5, i64 %7) #10, !dbg !1103
  br i1 %_8.i, label %_ZN4core3ptr19swap_nonoverlapping7runtime17hcf517f836972a8a7E.exit, label %bb7.i, !dbg !1103

_ZN4core3ptr19swap_nonoverlapping7runtime17hcf517f836972a8a7E.exit: ; preds = %bb4.i
  br label %bb2, !dbg !1089

bb40:                                             ; preds = %bb32, %bb26, %bb11, %bb2
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h8c60b5f450ae98f2E(ptr %x, ptr %y, i64 %count) #10, !dbg !1104
  br label %bb41, !dbg !1104

bb5:                                              ; preds = %bb2
  store i64 24, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1105, metadata !DIExpression()), !dbg !1108
  store i64 24, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1110, metadata !DIExpression()), !dbg !1115
  store i64 2, ptr %0, align 8, !dbg !1117
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1117, !noundef !24
  %_0.i.i = trunc i64 %_2.i.i to i32, !dbg !1117
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !1118
  br i1 %_0.i, label %bb8, label %bb12, !dbg !1119

bb12:                                             ; preds = %bb11, %bb5
  %_17 = icmp uge i64 8, 8, !dbg !1120
  br i1 %_17, label %bb15, label %bb26, !dbg !1120

bb8:                                              ; preds = %bb5
  %8 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 8, i64 2), !dbg !1121
  %_16.0 = extractvalue { i64, i1 } %8, 0, !dbg !1121
  %_16.1 = extractvalue { i64, i1 } %8, 1, !dbg !1121
  %9 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !1121
  br i1 %9, label %panic, label %bb11, !dbg !1121

bb11:                                             ; preds = %bb8
  %_12 = icmp ugt i64 24, %_16.0, !dbg !1122
  br i1 %_12, label %bb12, label %bb40, !dbg !1122

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_1ba0b8d2f5ff80a25c99bf2fe2a940c0) #11, !dbg !1121
  unreachable, !dbg !1121

bb26:                                             ; preds = %bb18, %bb12
  %_32 = icmp uge i64 8, 1, !dbg !1123
  br i1 %_32, label %bb29, label %bb40, !dbg !1123

bb15:                                             ; preds = %bb12
  %_23 = icmp eq i64 8, 0, !dbg !1120
  %10 = call i1 @llvm.expect.i1(i1 %_23, i1 false), !dbg !1120
  br i1 %10, label %panic1, label %bb18, !dbg !1120

bb18:                                             ; preds = %bb15
  %_20 = urem i64 24, 8, !dbg !1120
  %11 = icmp eq i64 %_20, 0, !dbg !1120
  br i1 %11, label %bb19, label %bb26, !dbg !1120

panic1:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.7, i64 57, ptr align 8 @alloc_b8a2dfce373db2ab26cf6cf192b770f4) #11, !dbg !1120
  unreachable, !dbg !1120

bb19:                                             ; preds = %bb18
  store ptr %x, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !1124, metadata !DIExpression()), !dbg !1131
  store ptr %x, ptr %x.dbg.spill3, align 8, !dbg !1120
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill3, metadata !1072, metadata !DIExpression()), !dbg !1133
  store ptr %y, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !1124, metadata !DIExpression()), !dbg !1134
  store ptr %y, ptr %y.dbg.spill5, align 8, !dbg !1133
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill5, metadata !1075, metadata !DIExpression()), !dbg !1136
  %_30 = icmp eq i64 8, 0, !dbg !1136
  %12 = call i1 @llvm.expect.i1(i1 %_30, i1 false), !dbg !1136
  br i1 %12, label %panic6, label %bb24, !dbg !1136

bb24:                                             ; preds = %bb19
  %_27 = udiv i64 24, 8, !dbg !1136
  %13 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_27), !dbg !1136
  %_31.0 = extractvalue { i64, i1 } %13, 0, !dbg !1136
  %_31.1 = extractvalue { i64, i1 } %13, 1, !dbg !1136
  %14 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !1136
  br i1 %14, label %panic7, label %bb25, !dbg !1136

panic6:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_b8a2dfce373db2ab26cf6cf192b770f4) #11, !dbg !1136
  unreachable, !dbg !1136

bb25:                                             ; preds = %bb24
  store i64 %_31.0, ptr %count.dbg.spill8, align 8, !dbg !1136
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill8, metadata !1077, metadata !DIExpression()), !dbg !1137
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hc15cceb6d459b426E(ptr %x, ptr %y, i64 %_31.0) #10, !dbg !1137
  br label %bb41, !dbg !1137

panic7:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_b8a2dfce373db2ab26cf6cf192b770f4) #11, !dbg !1136
  unreachable, !dbg !1136

bb41:                                             ; preds = %bb40, %bb39, %bb25
  ret void, !dbg !1138

bb29:                                             ; preds = %bb26
  %_38 = icmp eq i64 1, 0, !dbg !1123
  %15 = call i1 @llvm.expect.i1(i1 %_38, i1 false), !dbg !1123
  br i1 %15, label %panic9, label %bb32, !dbg !1123

bb32:                                             ; preds = %bb29
  %_35 = urem i64 24, 1, !dbg !1123
  %16 = icmp eq i64 %_35, 0, !dbg !1123
  br i1 %16, label %bb33, label %bb40, !dbg !1123

panic9:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.7, i64 57, ptr align 8 @alloc_5b768f5d22c028c89f66f1bf95262972) #11, !dbg !1123
  unreachable, !dbg !1123

bb33:                                             ; preds = %bb32
  store ptr %x, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !1139, metadata !DIExpression()), !dbg !1146
  store ptr %x, ptr %x.dbg.spill11, align 8, !dbg !1123
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill11, metadata !1079, metadata !DIExpression()), !dbg !1148
  store ptr %y, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !1139, metadata !DIExpression()), !dbg !1149
  store ptr %y, ptr %y.dbg.spill13, align 8, !dbg !1148
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill13, metadata !1082, metadata !DIExpression()), !dbg !1151
  %_45 = icmp eq i64 1, 0, !dbg !1151
  %17 = call i1 @llvm.expect.i1(i1 %_45, i1 false), !dbg !1151
  br i1 %17, label %panic14, label %bb38, !dbg !1151

bb38:                                             ; preds = %bb33
  %_42 = udiv i64 24, 1, !dbg !1151
  %18 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_42), !dbg !1151
  %_46.0 = extractvalue { i64, i1 } %18, 0, !dbg !1151
  %_46.1 = extractvalue { i64, i1 } %18, 1, !dbg !1151
  %19 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !1151
  br i1 %19, label %panic15, label %bb39, !dbg !1151

panic14:                                          ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_5b768f5d22c028c89f66f1bf95262972) #11, !dbg !1151
  unreachable, !dbg !1151

bb39:                                             ; preds = %bb38
  store i64 %_46.0, ptr %count.dbg.spill16, align 8, !dbg !1151
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill16, metadata !1084, metadata !DIExpression()), !dbg !1152
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hbc60de3662a9bcedE(ptr %x, ptr %y, i64 %_46.0) #10, !dbg !1152
  br label %bb41, !dbg !1152

panic15:                                          ; preds = %bb38
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_5b768f5d22c028c89f66f1bf95262972) #11, !dbg !1151
  unreachable, !dbg !1151
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc15bfcfe5036da9cE(ptr %data, i64 %len) unnamed_addr #0 !dbg !1153 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1157, metadata !DIExpression()), !dbg !1159
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1158, metadata !DIExpression()), !dbg !1160
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !482, metadata !DIExpression()), !dbg !1161
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17he9cf3d3c5ec712d4E(ptr %data, i64 %len) #10, !dbg !1163
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !1163
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !1163
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1164
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !1164
  ret { ptr, i64 } %2, !dbg !1164
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4c742dd8b8bf66daE(ptr %data, i64 %len) unnamed_addr #0 !dbg !1165 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1169, metadata !DIExpression()), !dbg !1171
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1170, metadata !DIExpression()), !dbg !1172
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1173, metadata !DIExpression()), !dbg !1179
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hf09d32f08833e1f4E(ptr %data, i64 %len) #10, !dbg !1181
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !1181
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !1181
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1182
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !1182
  ret { ptr, i64 } %2, !dbg !1182
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h8c60b5f450ae98f2E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1183 {
start:
  %self.dbg.spill.i11 = alloca ptr, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1185, metadata !DIExpression()), !dbg !1199
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1186, metadata !DIExpression()), !dbg !1200
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1187, metadata !DIExpression()), !dbg !1201
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1193, metadata !DIExpression()), !dbg !1202
  store ptr %x, ptr %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !1203, metadata !DIExpression()), !dbg !1210
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1212
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1188, metadata !DIExpression()), !dbg !1213
  store ptr %y, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1203, metadata !DIExpression()), !dbg !1214
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1216
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1191, metadata !DIExpression()), !dbg !1217
  store i64 0, ptr %i, align 8, !dbg !1218
  br label %bb3, !dbg !1219

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1220, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1220
  br i1 %_7, label %bb4, label %bb9, !dbg !1220

bb9:                                              ; preds = %bb3
  ret void, !dbg !1221

bb4:                                              ; preds = %bb3
  %_11 = load i64, ptr %i, align 8, !dbg !1222, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1223, metadata !DIExpression()), !dbg !1229
  store i64 %_11, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1228, metadata !DIExpression()), !dbg !1231
  %_0.i9 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %x, i64 %_11, !dbg !1232
  store ptr %_0.i9, ptr %x.dbg.spill5, align 8, !dbg !1233
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1195, metadata !DIExpression()), !dbg !1234
  %_14 = load i64, ptr %i, align 8, !dbg !1235, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1223, metadata !DIExpression()), !dbg !1236
  store i64 %_14, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1228, metadata !DIExpression()), !dbg !1238
  %_0.i = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %y, i64 %_14, !dbg !1239
  store ptr %_0.i, ptr %y.dbg.spill6, align 8, !dbg !1240
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1197, metadata !DIExpression()), !dbg !1241
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h3f955fd1f4c3210eE(ptr align 8 %_0.i9, ptr align 8 %_0.i) #10, !dbg !1242
  %0 = load i64, ptr %i, align 8, !dbg !1243, !noundef !24
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %0, i64 1), !dbg !1243
  %_16.0 = extractvalue { i64, i1 } %1, 0, !dbg !1243
  %_16.1 = extractvalue { i64, i1 } %1, 1, !dbg !1243
  %2 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !1243
  br i1 %2, label %panic, label %bb8, !dbg !1243

bb8:                                              ; preds = %bb4
  store i64 %_16.0, ptr %i, align 8, !dbg !1243
  br label %bb3, !dbg !1219

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_8a5df3c21f42ca2f361b15352b2cfd1d) #11, !dbg !1243
  unreachable, !dbg !1243
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hbc60de3662a9bcedE(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1244 {
start:
  %self.dbg.spill.i11 = alloca ptr, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1248, metadata !DIExpression()), !dbg !1262
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1249, metadata !DIExpression()), !dbg !1263
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1250, metadata !DIExpression()), !dbg !1264
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1256, metadata !DIExpression()), !dbg !1265
  store ptr %x, ptr %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !1266, metadata !DIExpression()), !dbg !1273
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1275
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1251, metadata !DIExpression()), !dbg !1276
  store ptr %y, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1266, metadata !DIExpression()), !dbg !1277
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1279
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1254, metadata !DIExpression()), !dbg !1280
  store i64 0, ptr %i, align 8, !dbg !1281
  br label %bb3, !dbg !1282

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1283, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1283
  br i1 %_7, label %bb4, label %bb9, !dbg !1283

bb9:                                              ; preds = %bb3
  ret void, !dbg !1284

bb4:                                              ; preds = %bb3
  %_11 = load i64, ptr %i, align 8, !dbg !1285, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1286, metadata !DIExpression()), !dbg !1292
  store i64 %_11, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1291, metadata !DIExpression()), !dbg !1294
  %_0.i9 = getelementptr inbounds i8, ptr %x, i64 %_11, !dbg !1295
  store ptr %_0.i9, ptr %x.dbg.spill5, align 8, !dbg !1296
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1258, metadata !DIExpression()), !dbg !1297
  %_14 = load i64, ptr %i, align 8, !dbg !1298, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1286, metadata !DIExpression()), !dbg !1299
  store i64 %_14, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1291, metadata !DIExpression()), !dbg !1301
  %_0.i = getelementptr inbounds i8, ptr %y, i64 %_14, !dbg !1302
  store ptr %_0.i, ptr %y.dbg.spill6, align 8, !dbg !1303
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1260, metadata !DIExpression()), !dbg !1304
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h4aa3a52a9b9e2a51E(ptr align 1 %_0.i9, ptr align 1 %_0.i) #10, !dbg !1305
  %0 = load i64, ptr %i, align 8, !dbg !1306, !noundef !24
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %0, i64 1), !dbg !1306
  %_16.0 = extractvalue { i64, i1 } %1, 0, !dbg !1306
  %_16.1 = extractvalue { i64, i1 } %1, 1, !dbg !1306
  %2 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !1306
  br i1 %2, label %panic, label %bb8, !dbg !1306

bb8:                                              ; preds = %bb4
  store i64 %_16.0, ptr %i, align 8, !dbg !1306
  br label %bb3, !dbg !1282

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_8a5df3c21f42ca2f361b15352b2cfd1d) #11, !dbg !1306
  unreachable, !dbg !1306
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hc15cceb6d459b426E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1307 {
start:
  %self.dbg.spill.i11 = alloca ptr, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1311, metadata !DIExpression()), !dbg !1325
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1312, metadata !DIExpression()), !dbg !1326
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1313, metadata !DIExpression()), !dbg !1327
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1319, metadata !DIExpression()), !dbg !1328
  store ptr %x, ptr %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !1329, metadata !DIExpression()), !dbg !1336
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1338
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1314, metadata !DIExpression()), !dbg !1339
  store ptr %y, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1329, metadata !DIExpression()), !dbg !1340
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1342
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1317, metadata !DIExpression()), !dbg !1343
  store i64 0, ptr %i, align 8, !dbg !1344
  br label %bb3, !dbg !1345

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1346, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1346
  br i1 %_7, label %bb4, label %bb9, !dbg !1346

bb9:                                              ; preds = %bb3
  ret void, !dbg !1347

bb4:                                              ; preds = %bb3
  %_11 = load i64, ptr %i, align 8, !dbg !1348, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1349, metadata !DIExpression()), !dbg !1355
  store i64 %_11, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1354, metadata !DIExpression()), !dbg !1357
  %_0.i9 = getelementptr inbounds i64, ptr %x, i64 %_11, !dbg !1358
  store ptr %_0.i9, ptr %x.dbg.spill5, align 8, !dbg !1359
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1321, metadata !DIExpression()), !dbg !1360
  %_14 = load i64, ptr %i, align 8, !dbg !1361, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1349, metadata !DIExpression()), !dbg !1362
  store i64 %_14, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1354, metadata !DIExpression()), !dbg !1364
  %_0.i = getelementptr inbounds i64, ptr %y, i64 %_14, !dbg !1365
  store ptr %_0.i, ptr %y.dbg.spill6, align 8, !dbg !1366
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1323, metadata !DIExpression()), !dbg !1367
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h69faf92eef3d0523E(ptr align 8 %_0.i9, ptr align 8 %_0.i) #10, !dbg !1368
  %0 = load i64, ptr %i, align 8, !dbg !1369, !noundef !24
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %0, i64 1), !dbg !1369
  %_16.0 = extractvalue { i64, i1 } %1, 0, !dbg !1369
  %_16.1 = extractvalue { i64, i1 } %1, 1, !dbg !1369
  %2 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !1369
  br i1 %2, label %panic, label %bb8, !dbg !1369

bb8:                                              ; preds = %bb4
  store i64 %_16.0, ptr %i, align 8, !dbg !1369
  br label %bb3, !dbg !1345

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_8a5df3c21f42ca2f361b15352b2cfd1d) #11, !dbg !1369
  unreachable, !dbg !1369
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define i8 @_ZN4core3ptr4read17h045b30f529bbe3fbE(ptr %src) unnamed_addr #0 !dbg !1370 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1375, metadata !DIExpression()), !dbg !1376
  br i1 true, label %bb1, label %bb2, !dbg !1377

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h098e58fc11884382E.exit, %start
  %_0 = load i8, ptr %src, align 1, !dbg !1378
  ret i8 %_0, !dbg !1379

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1377
  %0 = load ptr, ptr %_4, align 8, !dbg !1377, !noundef !24
  store ptr %0, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1380, metadata !DIExpression()), !dbg !1386
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha85da2cb6c648146E(ptr %0) #10, !dbg !1388
  br i1 %_2.i, label %_ZN4core3ptr4read7runtime17h098e58fc11884382E.exit, label %bb3.i, !dbg !1388

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1390
  unreachable, !dbg !1390

_ZN4core3ptr4read7runtime17h098e58fc11884382E.exit: ; preds = %bb1
  br label %bb2, !dbg !1377
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h402d8c422da68d48E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") align 8 %_0, ptr %src) unnamed_addr #0 !dbg !1391 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1395, metadata !DIExpression()), !dbg !1396
  br i1 true, label %bb1, label %bb2, !dbg !1397

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17hc504647d2a3372e1E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %src, i64 24, i1 false), !dbg !1398
  ret void, !dbg !1399

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1397
  %0 = load ptr, ptr %_4, align 8, !dbg !1397, !noundef !24
  store ptr %0, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1400, metadata !DIExpression()), !dbg !1405
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h13555a30045ed5d4E(ptr %0) #10, !dbg !1407
  br i1 %_2.i, label %_ZN4core3ptr4read7runtime17hc504647d2a3372e1E.exit, label %bb3.i, !dbg !1407

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1409
  unreachable, !dbg !1409

_ZN4core3ptr4read7runtime17hc504647d2a3372e1E.exit: ; preds = %bb1
  br label %bb2, !dbg !1397
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr4read17h8270cbc7a9af2598E(ptr %src) unnamed_addr #0 !dbg !1410 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1414, metadata !DIExpression()), !dbg !1415
  br i1 true, label %bb1, label %bb2, !dbg !1416

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17hf7789888bbab9d22E.exit, %start
  %_0 = load i64, ptr %src, align 8, !dbg !1417
  ret i64 %_0, !dbg !1418

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1416
  %0 = load ptr, ptr %_4, align 8, !dbg !1416, !noundef !24
  store ptr %0, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1419, metadata !DIExpression()), !dbg !1424
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h345c5d679dffc627E(ptr %0) #10, !dbg !1426
  br i1 %_2.i, label %_ZN4core3ptr4read7runtime17hf7789888bbab9d22E.exit, label %bb3.i, !dbg !1426

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1428
  unreachable, !dbg !1428

_ZN4core3ptr4read7runtime17hf7789888bbab9d22E.exit: ; preds = %bb1
  br label %bb2, !dbg !1416
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17hb4cf770cf4557c59E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_0, ptr %src) unnamed_addr #0 !dbg !1429 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1433, metadata !DIExpression()), !dbg !1434
  br i1 true, label %bb1, label %bb2, !dbg !1435

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h719597d24679dc50E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %src, i64 24, i1 false), !dbg !1436
  ret void, !dbg !1437

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1435
  %0 = load ptr, ptr %_4, align 8, !dbg !1435, !noundef !24
  store ptr %0, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1438, metadata !DIExpression()), !dbg !1443
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %0) #10, !dbg !1445
  br i1 %_2.i, label %_ZN4core3ptr4read7runtime17h719597d24679dc50E.exit, label %bb3.i, !dbg !1445

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1447
  unreachable, !dbg !1447

_ZN4core3ptr4read7runtime17h719597d24679dc50E.exit: ; preds = %bb1
  br label %bb2, !dbg !1435
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h2ee7e59aa3cf3136E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1448 {
start:
  %self.dbg.spill.i28 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill.i23 = alloca ptr, align 8
  %src.dbg.spill.i24 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %dst.dbg.spill.i19 = alloca ptr, align 8
  %src.dbg.spill.i20 = alloca ptr, align 8
  %_6.i21 = alloca { ptr, ptr }, align 8
  %count.dbg.spill.i8 = alloca i64, align 8
  %dst.dbg.spill.i9 = alloca ptr, align 8
  %src.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %dst.dbg.spill.i6 = alloca ptr, align 8
  %src.dbg.spill.i7 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %dst.dbg.spill.i2 = alloca ptr, align 8
  %src.dbg.spill.i3 = alloca ptr, align 8
  %_6.i4 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1452, metadata !DIExpression()), !dbg !1456
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1453, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1454, metadata !DIExpression()), !dbg !1458
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1459, metadata !DIExpression()), !dbg !1466
  store ptr %x, ptr %src.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i3, metadata !1468, metadata !DIExpression()), !dbg !1475
  store ptr %tmp, ptr %dst.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i2, metadata !1473, metadata !DIExpression()), !dbg !1477
  store i64 1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !1474, metadata !DIExpression()), !dbg !1478
  store ptr %x, ptr %_6.i4, align 8, !dbg !1479
  %0 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !1479
  store ptr %tmp, ptr %0, align 8, !dbg !1479
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !1479
  store i64 1, ptr %1, align 8, !dbg !1479
  %2 = load ptr, ptr %_6.i4, align 8, !dbg !1479, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !1479
  %4 = load ptr, ptr %3, align 8, !dbg !1479, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !1479
  %6 = load i64, ptr %5, align 8, !dbg !1479, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i7, metadata !1480, metadata !DIExpression()), !dbg !1486
  store ptr %4, ptr %dst.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i6, metadata !1484, metadata !DIExpression()), !dbg !1486
  store i64 %6, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !1485, metadata !DIExpression()), !dbg !1486
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %2) #10, !dbg !1488
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !1488

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !1489
  unreachable, !dbg !1489

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %4) #10, !dbg !1490
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !1490

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %2, ptr %4, i64 %6) #10, !dbg !1491
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit, label %bb7.i, !dbg !1491

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %x, i64 24, i1 false), !dbg !1492
  store ptr %y, ptr %src.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i20, metadata !1493, metadata !DIExpression()), !dbg !1498
  store ptr %x, ptr %dst.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i19, metadata !1496, metadata !DIExpression()), !dbg !1500
  store i64 1, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !1497, metadata !DIExpression()), !dbg !1501
  store ptr %y, ptr %_6.i21, align 8, !dbg !1502
  %7 = getelementptr inbounds { ptr, ptr }, ptr %_6.i21, i32 0, i32 1, !dbg !1502
  store ptr %x, ptr %7, align 8, !dbg !1502
  %8 = load ptr, ptr %_6.i21, align 8, !dbg !1502, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_6.i21, i32 0, i32 1, !dbg !1502
  %10 = load ptr, ptr %9, align 8, !dbg !1502, !noundef !24
  store ptr %8, ptr %src.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i24, metadata !1503, metadata !DIExpression()), !dbg !1510
  store ptr %10, ptr %dst.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i23, metadata !1509, metadata !DIExpression()), !dbg !1510
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %8) #10, !dbg !1512
  br i1 %_3.i, label %bb2.i25, label %bb5.i, !dbg !1512

bb5.i:                                            ; preds = %bb2.i25, %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_2f5fae7ca9908dec8d13988b47dc9dc4, i64 104) #11, !dbg !1513
  unreachable, !dbg !1513

bb2.i25:                                          ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit
; call core::intrinsics::is_aligned_and_not_null
  %_4.i26 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %10) #10, !dbg !1514
  br i1 %_4.i26, label %_ZN4core10intrinsics4copy7runtime17h07fabc39d31583a4E.exit, label %bb5.i, !dbg !1514

_ZN4core10intrinsics4copy7runtime17h07fabc39d31583a4E.exit: ; preds = %bb2.i25
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %x, ptr align 8 %y, i64 24, i1 false), !dbg !1515
  store ptr %tmp, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !1516, metadata !DIExpression()), !dbg !1523
  store ptr %tmp, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1468, metadata !DIExpression()), !dbg !1525
  store ptr %y, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1473, metadata !DIExpression()), !dbg !1527
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1474, metadata !DIExpression()), !dbg !1528
  store ptr %tmp, ptr %_6.i, align 8, !dbg !1529
  %11 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !1529
  store ptr %y, ptr %11, align 8, !dbg !1529
  %12 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !1529
  store i64 1, ptr %12, align 8, !dbg !1529
  %13 = load ptr, ptr %_6.i, align 8, !dbg !1529, !noundef !24
  %14 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !1529
  %15 = load ptr, ptr %14, align 8, !dbg !1529, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !1529
  %17 = load i64, ptr %16, align 8, !dbg !1529, !noundef !24
  store ptr %13, ptr %src.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i10, metadata !1480, metadata !DIExpression()), !dbg !1530
  store ptr %15, ptr %dst.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i9, metadata !1484, metadata !DIExpression()), !dbg !1530
  store i64 %17, ptr %count.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i8, metadata !1485, metadata !DIExpression()), !dbg !1530
; call core::intrinsics::is_aligned_and_not_null
  %_4.i11 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %13) #10, !dbg !1532
  br i1 %_4.i11, label %bb2.i13, label %bb7.i12, !dbg !1532

bb7.i12:                                          ; preds = %bb4.i15, %bb2.i13, %_ZN4core10intrinsics4copy7runtime17h07fabc39d31583a4E.exit
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !1533
  unreachable, !dbg !1533

bb2.i13:                                          ; preds = %_ZN4core10intrinsics4copy7runtime17h07fabc39d31583a4E.exit
; call core::intrinsics::is_aligned_and_not_null
  %_5.i14 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %15) #10, !dbg !1534
  br i1 %_5.i14, label %bb4.i15, label %bb7.i12, !dbg !1534

bb4.i15:                                          ; preds = %bb2.i13
; call core::intrinsics::is_nonoverlapping
  %_7.i16 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %13, ptr %15, i64 %17) #10, !dbg !1535
  br i1 %_7.i16, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit17, label %bb7.i12, !dbg !1535

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit17: ; preds = %bb4.i15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %y, ptr align 8 %tmp, i64 24, i1 false), !dbg !1536
  ret void, !dbg !1537
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h4b35c1095fa1adc2E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1538 {
start:
  %_0.i = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill.i23 = alloca ptr, align 8
  %src.dbg.spill.i24 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %dst.dbg.spill.i19 = alloca ptr, align 8
  %src.dbg.spill.i20 = alloca ptr, align 8
  %_6.i21 = alloca { ptr, ptr }, align 8
  %count.dbg.spill.i8 = alloca i64, align 8
  %dst.dbg.spill.i9 = alloca ptr, align 8
  %src.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %dst.dbg.spill.i6 = alloca ptr, align 8
  %src.dbg.spill.i7 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %dst.dbg.spill.i2 = alloca ptr, align 8
  %src.dbg.spill.i3 = alloca ptr, align 8
  %_6.i4 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1542, metadata !DIExpression()), !dbg !1546
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1543, metadata !DIExpression()), !dbg !1547
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1544, metadata !DIExpression()), !dbg !1548
  %0 = load i64, ptr %_0.i, align 8, !dbg !1549
  store i64 %0, ptr %tmp, align 8, !dbg !1555
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1556, metadata !DIExpression()), !dbg !1562
  store ptr %x, ptr %src.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i3, metadata !1564, metadata !DIExpression()), !dbg !1571
  store ptr %tmp, ptr %dst.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i2, metadata !1569, metadata !DIExpression()), !dbg !1573
  store i64 1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !1570, metadata !DIExpression()), !dbg !1574
  store ptr %x, ptr %_6.i4, align 8, !dbg !1575
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !1575
  store ptr %tmp, ptr %1, align 8, !dbg !1575
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !1575
  store i64 1, ptr %2, align 8, !dbg !1575
  %3 = load ptr, ptr %_6.i4, align 8, !dbg !1575, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !1575
  %5 = load ptr, ptr %4, align 8, !dbg !1575, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !1575
  %7 = load i64, ptr %6, align 8, !dbg !1575, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i7, metadata !1576, metadata !DIExpression()), !dbg !1581
  store ptr %5, ptr %dst.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i6, metadata !1579, metadata !DIExpression()), !dbg !1581
  store i64 %7, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !1580, metadata !DIExpression()), !dbg !1581
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h81803855ff59930dE(ptr %3) #10, !dbg !1583
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !1583

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !1584
  unreachable, !dbg !1584

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h81803855ff59930dE(ptr %5) #10, !dbg !1585
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !1585

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h46a9af7e6ced7d7bE(ptr %3, ptr %5, i64 %7) #10, !dbg !1586
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17ha9ea8588174486daE.exit, label %bb7.i, !dbg !1586

_ZN4core10intrinsics19copy_nonoverlapping7runtime17ha9ea8588174486daE.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %x, i64 8, i1 false), !dbg !1587
  store ptr %y, ptr %src.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i20, metadata !1588, metadata !DIExpression()), !dbg !1593
  store ptr %x, ptr %dst.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i19, metadata !1591, metadata !DIExpression()), !dbg !1595
  store i64 1, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !1592, metadata !DIExpression()), !dbg !1596
  store ptr %y, ptr %_6.i21, align 8, !dbg !1597
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_6.i21, i32 0, i32 1, !dbg !1597
  store ptr %x, ptr %8, align 8, !dbg !1597
  %9 = load ptr, ptr %_6.i21, align 8, !dbg !1597, !noundef !24
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_6.i21, i32 0, i32 1, !dbg !1597
  %11 = load ptr, ptr %10, align 8, !dbg !1597, !noundef !24
  store ptr %9, ptr %src.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i24, metadata !1598, metadata !DIExpression()), !dbg !1604
  store ptr %11, ptr %dst.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i23, metadata !1603, metadata !DIExpression()), !dbg !1604
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h81803855ff59930dE(ptr %9) #10, !dbg !1606
  br i1 %_3.i, label %bb2.i25, label %bb5.i, !dbg !1606

bb5.i:                                            ; preds = %bb2.i25, %_ZN4core10intrinsics19copy_nonoverlapping7runtime17ha9ea8588174486daE.exit
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_2f5fae7ca9908dec8d13988b47dc9dc4, i64 104) #11, !dbg !1607
  unreachable, !dbg !1607

bb2.i25:                                          ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17ha9ea8588174486daE.exit
; call core::intrinsics::is_aligned_and_not_null
  %_4.i26 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h81803855ff59930dE(ptr %11) #10, !dbg !1608
  br i1 %_4.i26, label %_ZN4core10intrinsics4copy7runtime17he0f9a7691c02c713E.exit, label %bb5.i, !dbg !1608

_ZN4core10intrinsics4copy7runtime17he0f9a7691c02c713E.exit: ; preds = %bb2.i25
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %x, ptr align 8 %y, i64 8, i1 false), !dbg !1609
  store ptr %tmp, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !1610, metadata !DIExpression()), !dbg !1617
  store ptr %tmp, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1564, metadata !DIExpression()), !dbg !1619
  store ptr %y, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1569, metadata !DIExpression()), !dbg !1621
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1570, metadata !DIExpression()), !dbg !1622
  store ptr %tmp, ptr %_6.i, align 8, !dbg !1623
  %12 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !1623
  store ptr %y, ptr %12, align 8, !dbg !1623
  %13 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !1623
  store i64 1, ptr %13, align 8, !dbg !1623
  %14 = load ptr, ptr %_6.i, align 8, !dbg !1623, !noundef !24
  %15 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !1623
  %16 = load ptr, ptr %15, align 8, !dbg !1623, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !1623
  %18 = load i64, ptr %17, align 8, !dbg !1623, !noundef !24
  store ptr %14, ptr %src.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i10, metadata !1576, metadata !DIExpression()), !dbg !1624
  store ptr %16, ptr %dst.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i9, metadata !1579, metadata !DIExpression()), !dbg !1624
  store i64 %18, ptr %count.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i8, metadata !1580, metadata !DIExpression()), !dbg !1624
; call core::intrinsics::is_aligned_and_not_null
  %_4.i11 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h81803855ff59930dE(ptr %14) #10, !dbg !1626
  br i1 %_4.i11, label %bb2.i13, label %bb7.i12, !dbg !1626

bb7.i12:                                          ; preds = %bb4.i15, %bb2.i13, %_ZN4core10intrinsics4copy7runtime17he0f9a7691c02c713E.exit
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !1627
  unreachable, !dbg !1627

bb2.i13:                                          ; preds = %_ZN4core10intrinsics4copy7runtime17he0f9a7691c02c713E.exit
; call core::intrinsics::is_aligned_and_not_null
  %_5.i14 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h81803855ff59930dE(ptr %16) #10, !dbg !1628
  br i1 %_5.i14, label %bb4.i15, label %bb7.i12, !dbg !1628

bb4.i15:                                          ; preds = %bb2.i13
; call core::intrinsics::is_nonoverlapping
  %_7.i16 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h46a9af7e6ced7d7bE(ptr %14, ptr %16, i64 %18) #10, !dbg !1629
  br i1 %_7.i16, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17ha9ea8588174486daE.exit17, label %bb7.i12, !dbg !1629

_ZN4core10intrinsics19copy_nonoverlapping7runtime17ha9ea8588174486daE.exit17: ; preds = %bb4.i15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %y, ptr align 8 %tmp, i64 8, i1 false), !dbg !1630
  ret void, !dbg !1631
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h057bd9f82e24b379E(ptr %dst, ptr align 8 %src) unnamed_addr #0 !dbg !1632 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1636, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1637, metadata !DIExpression()), !dbg !1639
  br i1 true, label %bb1, label %bb2, !dbg !1640

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h08139368fefbfb51E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1641
  ret void, !dbg !1642

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1640
  %0 = load ptr, ptr %_5, align 8, !dbg !1640, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1643, metadata !DIExpression()), !dbg !1649
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h13555a30045ed5d4E(ptr %0) #10, !dbg !1651
  br i1 %_2.i, label %_ZN4core3ptr5write7runtime17h08139368fefbfb51E.exit, label %bb3.i, !dbg !1651

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1653
  unreachable, !dbg !1653

_ZN4core3ptr5write7runtime17h08139368fefbfb51E.exit: ; preds = %bb1
  br label %bb2, !dbg !1640
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hbd9963953b875ca4E(ptr %dst, ptr align 8 %src) unnamed_addr #0 !dbg !1654 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1658, metadata !DIExpression()), !dbg !1660
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1659, metadata !DIExpression()), !dbg !1661
  br i1 true, label %bb1, label %bb2, !dbg !1662

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h02e0621499e6d5dfE.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1663
  ret void, !dbg !1664

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1662
  %0 = load ptr, ptr %_5, align 8, !dbg !1662, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1665, metadata !DIExpression()), !dbg !1670
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %0) #10, !dbg !1672
  br i1 %_2.i, label %_ZN4core3ptr5write7runtime17h02e0621499e6d5dfE.exit, label %bb3.i, !dbg !1672

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1674
  unreachable, !dbg !1674

_ZN4core3ptr5write7runtime17h02e0621499e6d5dfE.exit: ; preds = %bb1
  br label %bb2, !dbg !1662
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17he74464ca2033b4f5E(ptr %dst, i64 %src) unnamed_addr #0 !dbg !1675 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1679, metadata !DIExpression()), !dbg !1681
  store i64 %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1680, metadata !DIExpression()), !dbg !1682
  br i1 true, label %bb1, label %bb2, !dbg !1683

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h24db28e1e595cf5fE.exit, %start
  store i64 %src, ptr %dst, align 8, !dbg !1684
  ret void, !dbg !1685

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1683
  %0 = load ptr, ptr %_5, align 8, !dbg !1683, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1686, metadata !DIExpression()), !dbg !1691
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h345c5d679dffc627E(ptr %0) #10, !dbg !1693
  br i1 %_2.i, label %_ZN4core3ptr5write7runtime17h24db28e1e595cf5fE.exit, label %bb3.i, !dbg !1693

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1695
  unreachable, !dbg !1695

_ZN4core3ptr5write7runtime17h24db28e1e595cf5fE.exit: ; preds = %bb1
  br label %bb2, !dbg !1683
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hfa263577c4b29781E(ptr %dst, i8 %src) unnamed_addr #0 !dbg !1696 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca i8, align 1
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1700, metadata !DIExpression()), !dbg !1702
  store i8 %src, ptr %src.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1701, metadata !DIExpression()), !dbg !1703
  br i1 true, label %bb1, label %bb2, !dbg !1704

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h25ace723147ec2d0E.exit, %start
  store i8 %src, ptr %dst, align 1, !dbg !1705
  ret void, !dbg !1706

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1704
  %0 = load ptr, ptr %_5, align 8, !dbg !1704, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1707, metadata !DIExpression()), !dbg !1712
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha85da2cb6c648146E(ptr %0) #10, !dbg !1714
  br i1 %_2.i, label %_ZN4core3ptr5write7runtime17h25ace723147ec2d0E.exit, label %bb3.i, !dbg !1714

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1716
  unreachable, !dbg !1716

_ZN4core3ptr5write7runtime17h25ace723147ec2d0E.exit: ; preds = %bb1
  br label %bb2, !dbg !1704
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::FrameRange>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h73ff3de34420399dE"(ptr align 8 %_1) unnamed_addr #0 !dbg !1717 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1722, metadata !DIExpression()), !dbg !1725
  ret void, !dbg !1725
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h08dd9189e56d3885E"(ptr align 8 %_1) unnamed_addr #0 !dbg !1726 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1731, metadata !DIExpression()), !dbg !1732
  ret void, !dbg !1732
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17hd29111cf54170c59E"(ptr align 8 %_1) unnamed_addr #0 !dbg !1733 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1738, metadata !DIExpression()), !dbg !1741
  ret void, !dbg !1741
}

; core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h11140fbc07826042E"(ptr %ptr) unnamed_addr #0 !dbg !1742 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1747, metadata !DIExpression()), !dbg !1748
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1749, metadata !DIExpression()), !dbg !1754
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1756, metadata !DIExpression()), !dbg !1762
  %_0.i = ptrtoint ptr %ptr to i64, !dbg !1764
  %_0 = icmp eq i64 %_0.i, 0, !dbg !1765
  ret i1 %_0, !dbg !1766
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h99fe88c9a1866a62E"(ptr %self) unnamed_addr #0 !dbg !1767 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1771, metadata !DIExpression()), !dbg !1772
  store ptr %self, ptr %_2, align 8, !dbg !1773
  %0 = load ptr, ptr %_2, align 8, !dbg !1774, !noundef !24
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h11140fbc07826042E"(ptr %0) #10, !dbg !1774
  ret i1 %_0, !dbg !1775
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17he9cf3d3c5ec712d4E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1776 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1782, metadata !DIExpression()), !dbg !1784
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1783, metadata !DIExpression()), !dbg !1785
  store ptr %data_address, ptr %_4, align 8, !dbg !1786
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1786
  store i64 %metadata, ptr %0, align 8, !dbg !1786
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1787
  %2 = load ptr, ptr %1, align 8, !dbg !1787, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1787
  %4 = load i64, ptr %3, align 8, !dbg !1787, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1787
  store ptr %2, ptr %5, align 8, !dbg !1787
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1787
  store i64 %4, ptr %6, align 8, !dbg !1787
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1787
  %_0.0 = load ptr, ptr %7, align 8, !dbg !1787, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1787
  %_0.1 = load i64, ptr %8, align 8, !dbg !1787, !noundef !24
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1788
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1, !dbg !1788
  ret { ptr, i64 } %10, !dbg !1788
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb76f602118a8444aE(ptr %data_address) unnamed_addr #0 !dbg !1789 {
start:
  %metadata.dbg.spill = alloca {}, align 1
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1793, metadata !DIExpression()), !dbg !1795
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1794, metadata !DIExpression()), !dbg !1796
  store ptr %data_address, ptr %_4, align 8, !dbg !1797
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 8, i1 false), !dbg !1798
  %_0 = load ptr, ptr %_3, align 8, !dbg !1798, !noundef !24
  ret ptr %_0, !dbg !1799
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hf09d32f08833e1f4E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1800 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1804, metadata !DIExpression()), !dbg !1806
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1805, metadata !DIExpression()), !dbg !1807
  store ptr %data_address, ptr %_4, align 8, !dbg !1808
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1808
  store i64 %metadata, ptr %0, align 8, !dbg !1808
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1809
  %2 = load ptr, ptr %1, align 8, !dbg !1809, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1809
  %4 = load i64, ptr %3, align 8, !dbg !1809, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1809
  store ptr %2, ptr %5, align 8, !dbg !1809
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1809
  store i64 %4, ptr %6, align 8, !dbg !1809
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1809
  %_0.0 = load ptr, ptr %7, align 8, !dbg !1809, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1809
  %_0.1 = load i64, ptr %8, align 8, !dbg !1809, !noundef !24
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1810
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1, !dbg !1810
  ret { ptr, i64 } %10, !dbg !1810
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr8metadata8metadata17h7db12d80793e1f85E(ptr %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1811 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1815, metadata !DIExpression()), !dbg !1816
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 0, !dbg !1817
  store ptr %ptr.0, ptr %2, align 8, !dbg !1817
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1817
  store i64 %ptr.1, ptr %3, align 8, !dbg !1817
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1817
  %_0 = load i64, ptr %4, align 8, !dbg !1817, !noundef !24
  ret i64 %_0, !dbg !1818
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hbec443530b07bb45E"(ptr %ptr) unnamed_addr #0 !dbg !1819 {
start:
  %ptr.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %_0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1825, metadata !DIExpression()), !dbg !1826
  br i1 true, label %bb1, label %bb2, !dbg !1827

bb2:                                              ; preds = %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17hcda6c65c9d2718bbE.exit", %start
  store ptr %ptr, ptr %_0, align 8, !dbg !1828
  %0 = load ptr, ptr %_0, align 8, !dbg !1829, !nonnull !24, !noundef !24
  ret ptr %0, !dbg !1829

bb1:                                              ; preds = %start
  store ptr %ptr, ptr %_4, align 8, !dbg !1827
  %1 = load ptr, ptr %_4, align 8, !dbg !1827, !noundef !24
  store ptr %1, ptr %ptr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !1830, metadata !DIExpression()), !dbg !1835
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_2.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h99fe88c9a1866a62E"(ptr %1) #10, !dbg !1837
  br i1 %_2.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17hcda6c65c9d2718bbE.exit", !dbg !1837

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_20b3d155afd5c58c42e598b7e6d186ef, i64 93) #11, !dbg !1839
  unreachable, !dbg !1839

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17hcda6c65c9d2718bbE.exit": ; preds = %bb1
  br label %bb2, !dbg !1827
}

; core::ptr::non_null::NonNull<T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h983472383f944148E"(ptr %self, ptr %subtracted) unnamed_addr #0 !dbg !1840 {
start:
  %subtracted.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1845, metadata !DIExpression()), !dbg !1847
  store ptr %subtracted, ptr %subtracted.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %subtracted.dbg.spill, metadata !1846, metadata !DIExpression()), !dbg !1848
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %_0 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h37f5baf1b869a062E"(ptr %self, ptr %subtracted) #10, !dbg !1849
  ret i64 %_0, !dbg !1850
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h3f5dbdbb1c39319cE"(ptr %self) unnamed_addr #0 !dbg !1851 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1853, metadata !DIExpression()), !dbg !1854
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17he3553fddce0de523E"(ptr %self, i64 8) #10, !dbg !1855
  ret i1 %_0, !dbg !1856
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17ha8dff1aaa44800d2E"(ptr %self) unnamed_addr #0 !dbg !1857 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1859, metadata !DIExpression()), !dbg !1860
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hf880a6420eaff668E"(ptr %self, i64 8) #10, !dbg !1861
  ret i1 %_0, !dbg !1862
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hb01abb80101b388dE"(ptr %self) unnamed_addr #0 !dbg !1863 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1865, metadata !DIExpression()), !dbg !1866
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h31fcfa321d4a82fcE"(ptr %self, i64 8) #10, !dbg !1867
  ret i1 %_0, !dbg !1868
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hb8a46567f6af2734E"(ptr %ptr, i64 %align) unnamed_addr #0 !dbg !1869 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %align.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1874, metadata !DIExpression()), !dbg !1876
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1875, metadata !DIExpression()), !dbg !1877
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1878, metadata !DIExpression()), !dbg !1884
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1886, metadata !DIExpression()), !dbg !1892
  %_0.i = ptrtoint ptr %ptr to i64, !dbg !1894
  %_6.0 = sub i64 %align, 1, !dbg !1895
  %_6.1 = icmp ult i64 %align, 1, !dbg !1895
  %0 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !1895
  br i1 %0, label %panic, label %bb2, !dbg !1895

bb2:                                              ; preds = %start
  %_3 = and i64 %_0.i, %_6.0, !dbg !1896
  %_0 = icmp eq i64 %_3, 0, !dbg !1896
  ret i1 %_0, !dbg !1897

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_48773a840e98f1e32da0fd9b325ef6e3) #11, !dbg !1895
  unreachable, !dbg !1895
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h31fcfa321d4a82fcE"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1898 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1902, metadata !DIExpression()), !dbg !1904
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1903, metadata !DIExpression()), !dbg !1905
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1105, metadata !DIExpression()), !dbg !1906
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1110, metadata !DIExpression()), !dbg !1908
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1910
  store i64 %1, ptr %0, align 8, !dbg !1910
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1910, !noundef !24
  %_0.i.i = trunc i64 %_2.i.i to i32, !dbg !1910
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !1911
  br i1 %_0.i, label %bb2, label %bb3, !dbg !1912

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_041983ee8170efdaaf95ba67fd072d26, i64 1) #10, !dbg !1913
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h7c3b1a7d9368f16cE(ptr align 8 %_5, ptr align 8 @alloc_7bd3afe836cf46cfac83f40d25e28016) #11, !dbg !1913
  unreachable, !dbg !1913

bb2:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !482, metadata !DIExpression()), !dbg !1914
  store ptr %self, ptr %_7, align 8, !dbg !1916
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1916
  store i64 %align, ptr %2, align 8, !dbg !1916
  %3 = load ptr, ptr %_7, align 8, !dbg !1917, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1917
  %5 = load i64, ptr %4, align 8, !dbg !1917, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hb8a46567f6af2734E"(ptr %3, i64 %5) #10, !dbg !1917
  ret i1 %_0, !dbg !1918
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17he3553fddce0de523E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1919 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1923, metadata !DIExpression()), !dbg !1925
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1924, metadata !DIExpression()), !dbg !1926
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1105, metadata !DIExpression()), !dbg !1927
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1110, metadata !DIExpression()), !dbg !1929
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1931
  store i64 %1, ptr %0, align 8, !dbg !1931
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1931, !noundef !24
  %_0.i.i = trunc i64 %_2.i.i to i32, !dbg !1931
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !1932
  br i1 %_0.i, label %bb2, label %bb3, !dbg !1933

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_041983ee8170efdaaf95ba67fd072d26, i64 1) #10, !dbg !1934
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h7c3b1a7d9368f16cE(ptr align 8 %_5, ptr align 8 @alloc_7bd3afe836cf46cfac83f40d25e28016) #11, !dbg !1934
  unreachable, !dbg !1934

bb2:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1935, metadata !DIExpression()), !dbg !1941
  store ptr %self, ptr %_7, align 8, !dbg !1943
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1943
  store i64 %align, ptr %2, align 8, !dbg !1943
  %3 = load ptr, ptr %_7, align 8, !dbg !1944, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1944
  %5 = load i64, ptr %4, align 8, !dbg !1944, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hb8a46567f6af2734E"(ptr %3, i64 %5) #10, !dbg !1944
  ret i1 %_0, !dbg !1945
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hf880a6420eaff668E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1946 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1950, metadata !DIExpression()), !dbg !1952
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1951, metadata !DIExpression()), !dbg !1953
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1105, metadata !DIExpression()), !dbg !1954
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1110, metadata !DIExpression()), !dbg !1956
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1958
  store i64 %1, ptr %0, align 8, !dbg !1958
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1958, !noundef !24
  %_0.i.i = trunc i64 %_2.i.i to i32, !dbg !1958
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !1959
  br i1 %_0.i, label %bb2, label %bb3, !dbg !1960

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_041983ee8170efdaaf95ba67fd072d26, i64 1) #10, !dbg !1961
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h7c3b1a7d9368f16cE(ptr align 8 %_5, ptr align 8 @alloc_7bd3afe836cf46cfac83f40d25e28016) #11, !dbg !1961
  unreachable, !dbg !1961

bb2:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1962, metadata !DIExpression()), !dbg !1968
  store ptr %self, ptr %_7, align 8, !dbg !1970
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1970
  store i64 %align, ptr %2, align 8, !dbg !1970
  %3 = load ptr, ptr %_7, align 8, !dbg !1971, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1971
  %5 = load i64, ptr %4, align 8, !dbg !1971, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hb8a46567f6af2734E"(ptr %3, i64 %5) #10, !dbg !1971
  ret i1 %_0, !dbg !1972
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h1fbc8752021c495dE"(ptr %ptr) unnamed_addr #0 !dbg !1973 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1979, metadata !DIExpression()), !dbg !1980
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1981, metadata !DIExpression()), !dbg !1986
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1988, metadata !DIExpression()), !dbg !1993
  %_0.i = ptrtoint ptr %ptr to i64, !dbg !1995
  %_0 = icmp eq i64 %_0.i, 0, !dbg !1996
  ret i1 %_0, !dbg !1997
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h077a0fb026b5751bE"(ptr %self) unnamed_addr #0 !dbg !1998 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2000, metadata !DIExpression()), !dbg !2001
  store ptr %self, ptr %_2, align 8, !dbg !2002
  %0 = load ptr, ptr %_2, align 8, !dbg !2003, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h1fbc8752021c495dE"(ptr %0) #10, !dbg !2003
  ret i1 %_0, !dbg !2004
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0b69973e713c1f15E"(ptr %self) unnamed_addr #0 !dbg !2005 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2007, metadata !DIExpression()), !dbg !2008
  store ptr %self, ptr %_2, align 8, !dbg !2009
  %0 = load ptr, ptr %_2, align 8, !dbg !2010, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h1fbc8752021c495dE"(ptr %0) #10, !dbg !2010
  ret i1 %_0, !dbg !2011
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd748fb3b4456d5a1E"(ptr %self) unnamed_addr #0 !dbg !2012 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2014, metadata !DIExpression()), !dbg !2015
  store ptr %self, ptr %_2, align 8, !dbg !2016
  %0 = load ptr, ptr %_2, align 8, !dbg !2017, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h1fbc8752021c495dE"(ptr %0) #10, !dbg !2017
  ret i1 %_0, !dbg !2018
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h37f5baf1b869a062E"(ptr %self, ptr %origin) unnamed_addr #0 !dbg !2019 {
start:
  %origin.dbg.spill.i = alloca ptr, align 8
  %this.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %pointee_size.dbg.spill = alloca i64, align 8
  %origin.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2023, metadata !DIExpression()), !dbg !2029
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2025, metadata !DIExpression()), !dbg !2030
  store ptr %origin, ptr %origin.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill, metadata !2024, metadata !DIExpression()), !dbg !2031
  br i1 true, label %bb1, label %bb2, !dbg !2032

bb2:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17heefd30c59d355584E.exit", %start
  store i64 24, ptr %pointee_size.dbg.spill, align 8, !dbg !2033
  call void @llvm.dbg.declare(metadata ptr %pointee_size.dbg.spill, metadata !2027, metadata !DIExpression()), !dbg !2034
  %_7 = icmp ult i64 0, 24, !dbg !2035
  br i1 %_7, label %bb4, label %bb6, !dbg !2035

bb1:                                              ; preds = %start
  store ptr %self, ptr %_5, align 8, !dbg !2032
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2032
  store ptr %origin, ptr %1, align 8, !dbg !2032
  %2 = load ptr, ptr %_5, align 8, !dbg !2032, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2032
  %4 = load ptr, ptr %3, align 8, !dbg !2032, !noundef !24
  store ptr %2, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !2036, metadata !DIExpression()), !dbg !2043
  store ptr %4, ptr %origin.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill.i, metadata !2042, metadata !DIExpression()), !dbg !2043
  %_3.i = icmp uge ptr %2, %4, !dbg !2045
  br i1 %_3.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17heefd30c59d355584E.exit", label %bb2.i, !dbg !2045

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_cb50775363ffdd1238910b6e9573721d, i64 71) #11, !dbg !2047
  unreachable, !dbg !2047

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17heefd30c59d355584E.exit": ; preds = %bb1
  br label %bb2, !dbg !2032

bb6:                                              ; preds = %bb4, %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_cded01c69e6a68529aa461ed66ab1ca7) #11, !dbg !2048
  unreachable, !dbg !2048

bb4:                                              ; preds = %bb2
  %_8 = icmp ule i64 24, 9223372036854775807, !dbg !2049
  br i1 %_8, label %bb5, label %bb6, !dbg !2049

bb5:                                              ; preds = %bb4
  %5 = ptrtoint ptr %self to i64, !dbg !2050
  %6 = ptrtoint ptr %origin to i64, !dbg !2050
  %7 = sub nuw i64 %5, %6, !dbg !2050
  %8 = udiv exact i64 %7, 24, !dbg !2050
  store i64 %8, ptr %0, align 8, !dbg !2050
  %_0 = load i64, ptr %0, align 8, !dbg !2050, !noundef !24
  ret i64 %_0, !dbg !2051
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17ha77bb642792e1365E"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !2052 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2055, metadata !DIExpression()), !dbg !2056
; call core::ptr::metadata::metadata
  %_0 = call i64 @_ZN4core3ptr8metadata8metadata17h7db12d80793e1f85E(ptr %self.0, i64 %self.1) #10, !dbg !2057
  ret i64 %_0, !dbg !2058
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h8531ce4ff1947570E"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !2059 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2063, metadata !DIExpression()), !dbg !2064
  ret ptr %self.0, !dbg !2065
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h5d1374c0813f0a0bE"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !2066 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2077, metadata !DIExpression()), !dbg !2081
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !2078, metadata !DIExpression()), !dbg !2082
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h31e45b9923d14ac9E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !2083
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2083
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2083
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !2084
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !2084
  ret { ptr, i64 } %5, !dbg !2084
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h01947af3f89a7e67E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !2085 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2091, metadata !DIExpression()), !dbg !2093
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !2092, metadata !DIExpression()), !dbg !2094
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5b84afda7c548221E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !2095
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2095
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2095
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !2096
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !2096
  ret { ptr, i64 } %5, !dbg !2096
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h348f60bd3119c438E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_0, ptr align 8 %self.0, i64 %self.1, i64 %mid, ptr align 8 %0) unnamed_addr #0 !dbg !2097 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2106, metadata !DIExpression()), !dbg !2108
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !2107, metadata !DIExpression()), !dbg !2109
  %_3 = icmp ule i64 %mid, %self.1, !dbg !2110
  br i1 %_3, label %bb1, label %bb2, !dbg !2110

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_fddaeef1fe1a23c45402ef8f58614acb, i64 35, ptr align 8 %0) #11, !dbg !2111
  unreachable, !dbg !2111

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17hea5649a3f69979f8E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_0, ptr align 8 %self.0, i64 %self.1, i64 %mid) #10, !dbg !2112
  ret void, !dbg !2113
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !2114 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2118, metadata !DIExpression()), !dbg !2122
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !2119, metadata !DIExpression()), !dbg !2123
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h7f0e2c43995f0794E"(i64 %index, ptr %self.0, i64 %self.1) #10, !dbg !2124
  ret ptr %_3, !dbg !2125
}

; core::slice::<impl [T]>::as_mut_ptr_range
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h4f7914af243e2e37E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2126 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_0 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2136, metadata !DIExpression()), !dbg !2141
  store ptr %self.0, ptr %self.dbg.spill.i2, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !2142, metadata !DIExpression()), !dbg !2147
  store ptr %self.0, ptr %start.dbg.spill, align 8, !dbg !2149
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2137, metadata !DIExpression()), !dbg !2150
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !173, metadata !DIExpression()), !dbg !2151
  store i64 %self.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !179, metadata !DIExpression()), !dbg !2153
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %self.1, !dbg !2154
  store ptr %_0.i, ptr %end.dbg.spill, align 8, !dbg !2155
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2139, metadata !DIExpression()), !dbg !2156
  store ptr %self.0, ptr %_0, align 8, !dbg !2157
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 1, !dbg !2157
  store ptr %_0.i, ptr %3, align 8, !dbg !2157
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 0, !dbg !2158
  %5 = load ptr, ptr %4, align 8, !dbg !2158, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 1, !dbg !2158
  %7 = load ptr, ptr %6, align 8, !dbg !2158, !noundef !24
  %8 = insertvalue { ptr, ptr } poison, ptr %5, 0, !dbg !2158
  %9 = insertvalue { ptr, ptr } %8, ptr %7, 1, !dbg !2158
  ret { ptr, ptr } %9, !dbg !2158
}

; core::slice::<impl [T]>::sort_unstable_by
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17hb2ad2ed586f568e7E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2159 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_4 = alloca ptr, align 8
  %compare = alloca %"{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}", align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2163, metadata !DIExpression()), !dbg !2167
  call void @llvm.dbg.declare(metadata ptr %compare, metadata !2164, metadata !DIExpression()), !dbg !2168
  store ptr %compare, ptr %_4, align 8, !dbg !2169
  %2 = load ptr, ptr %_4, align 8, !dbg !2170, !nonnull !24, !align !2171, !noundef !24
; call core::slice::sort::quicksort
  call void @_ZN4core5slice4sort9quicksort17hc7edd83cfd356bdeE(ptr align 8 %self.0, i64 %self.1, ptr align 1 %2) #10, !dbg !2170
  ret void, !dbg !2172
}

; core::slice::<impl [T]>::sort_unstable_by::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2173 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  %_5 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2179, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2180
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2177, metadata !DIExpression()), !dbg !2181
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2178, metadata !DIExpression()), !dbg !2182
  %_8 = load ptr, ptr %_1, align 8, !dbg !2183, !nonnull !24, !align !2171, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2183
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2183
  store ptr %b, ptr %0, align 8, !dbg !2183
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2183
  %2 = load ptr, ptr %1, align 8, !dbg !2183, !nonnull !24, !align !386, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2183
  %4 = load ptr, ptr %3, align 8, !dbg !2183, !nonnull !24, !align !386, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %5 = call i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h9ca67f90209d8f56E"(ptr align 1 %_8, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2183, !range !593
  store i8 %5, ptr %_5, align 1, !dbg !2183
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf8933cfe2566cfe1E"(ptr align 1 %_5, ptr align 1 @alloc_9a72dc1c87ddefcce62e4b5ab68e5150) #10, !dbg !2183
  ret i1 %_0, !dbg !2184
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17hea5649a3f69979f8E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_0, ptr align 8 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 !dbg !2185 {
start:
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_9 = alloca %"core::fmt::Arguments<'_>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2189, metadata !DIExpression()), !dbg !2195
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !2190, metadata !DIExpression()), !dbg !2196
  store i64 %self.1, ptr %len.dbg.spill, align 8, !dbg !2197
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2191, metadata !DIExpression()), !dbg !2198
  store ptr %self.0, ptr %self.dbg.spill.i1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2142, metadata !DIExpression()), !dbg !2199
  store ptr %self.0, ptr %ptr.dbg.spill, align 8, !dbg !2201
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2193, metadata !DIExpression()), !dbg !2202
  br i1 true, label %bb2, label %bb5, !dbg !2203

bb5:                                              ; preds = %bb2, %start
; call core::slice::raw::from_raw_parts_mut
  %3 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6b95575ca2cdc8f3E(ptr %self.0, i64 %mid) #10, !dbg !2204
  %_11.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2204
  %_11.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2204
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !173, metadata !DIExpression()), !dbg !2205
  store i64 %mid, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !179, metadata !DIExpression()), !dbg !2207
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %mid, !dbg !2208
  %_15.0 = sub i64 %self.1, %mid, !dbg !2209
  %_15.1 = icmp ult i64 %self.1, %mid, !dbg !2209
  %4 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !2209
  br i1 %4, label %panic, label %bb8, !dbg !2209

bb2:                                              ; preds = %start
  %_7 = icmp ule i64 %mid, %self.1, !dbg !2210
  br i1 %_7, label %bb5, label %bb3, !dbg !2210

bb3:                                              ; preds = %bb2
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_9, ptr align 8 @alloc_ed26ae13a208991431ec3bc12b4bf9a8, i64 1) #10, !dbg !2203
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h7770fb789a88f813E(ptr align 8 %_9, i1 zeroext false, ptr align 8 @alloc_45c4befca51d26b012e6846c9059d693) #11, !dbg !2203
  unreachable, !dbg !2203

bb8:                                              ; preds = %bb5
; call core::slice::raw::from_raw_parts_mut
  %5 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6b95575ca2cdc8f3E(ptr %_0.i, i64 %_15.0) #10, !dbg !2211
  %_12.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2211
  %_12.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2211
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 0, !dbg !2212
  store ptr %_11.0, ptr %6, align 8, !dbg !2212
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 1, !dbg !2212
  store i64 %_11.1, ptr %7, align 8, !dbg !2212
  %8 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_0, i32 0, i32 1, !dbg !2212
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !2212
  store ptr %_12.0, ptr %9, align 8, !dbg !2212
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !2212
  store i64 %_12.1, ptr %10, align 8, !dbg !2212
  ret void, !dbg !2213

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_fb41d5273ff6af4f3395d1148ba2f911) #11, !dbg !2209
  unreachable, !dbg !2209
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5ff0069825e17ec5E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2214 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2218, metadata !DIExpression()), !dbg !2219
; call core::slice::iter::Iter<T>::new
  %2 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h3822e07ff973baf1E"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2220
  %_0.0 = extractvalue { ptr, ptr } %2, 0, !dbg !2220
  %_0.1 = extractvalue { ptr, ptr } %2, 1, !dbg !2220
  %3 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !2221
  %4 = insertvalue { ptr, ptr } %3, ptr %_0.1, 1, !dbg !2221
  ret { ptr, ptr } %4, !dbg !2221
}

; core::slice::<impl [T]>::swap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h84f021ce3b5c8cf1E"(ptr align 8 %self.0, i64 %self.1, i64 %a, i64 %b, ptr align 8 %0) unnamed_addr #0 !dbg !2222 {
start:
  %pb.dbg.spill = alloca ptr, align 8
  %pa.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2226, metadata !DIExpression()), !dbg !2233
  store i64 %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2227, metadata !DIExpression()), !dbg !2234
  store i64 %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2228, metadata !DIExpression()), !dbg !2235
  %_6 = icmp ult i64 %a, %self.1, !dbg !2236
  %3 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !2236
  br i1 %3, label %bb1, label %panic, !dbg !2236

bb1:                                              ; preds = %start
  %pa = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %a, !dbg !2237
  store ptr %pa, ptr %pa.dbg.spill, align 8, !dbg !2237
  call void @llvm.dbg.declare(metadata ptr %pa.dbg.spill, metadata !2229, metadata !DIExpression()), !dbg !2238
  %_9 = icmp ult i64 %b, %self.1, !dbg !2239
  %4 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !2239
  br i1 %4, label %bb2, label %panic1, !dbg !2239

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %a, i64 %self.1, ptr align 8 %0) #11, !dbg !2236
  unreachable, !dbg !2236

bb2:                                              ; preds = %bb1
  %pb = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %b, !dbg !2240
  store ptr %pb, ptr %pb.dbg.spill, align 8, !dbg !2240
  call void @llvm.dbg.declare(metadata ptr %pb.dbg.spill, metadata !2231, metadata !DIExpression()), !dbg !2241
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2ee7e59aa3cf3136E(ptr %pa, ptr %pb) #10, !dbg !2242
  ret void, !dbg !2243

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %b, i64 %self.1, ptr align 8 %0) #11, !dbg !2239
  unreachable, !dbg !2239
}

; core::slice::<impl [T]>::reverse
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h3a000873b0c20f1eE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2244 {
start:
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %_0.i = alloca ptr, align 8
  %back_half.dbg.spill = alloca { ptr, i64 }, align 8
  %front_half.dbg.spill = alloca { ptr, i64 }, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %half_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2248, metadata !DIExpression()), !dbg !2257
  %half_len = udiv i64 %self.1, 2, !dbg !2258
  store i64 %half_len, ptr %half_len.dbg.spill, align 8, !dbg !2258
  call void @llvm.dbg.declare(metadata ptr %half_len.dbg.spill, metadata !2249, metadata !DIExpression()), !dbg !2259
; call core::slice::<impl [T]>::as_mut_ptr_range
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h4f7914af243e2e37E"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2260
  %_8.0 = extractvalue { ptr, ptr } %2, 0, !dbg !2260
  %_8.1 = extractvalue { ptr, ptr } %2, 1, !dbg !2260
  store ptr %_8.0, ptr %start.dbg.spill, align 8, !dbg !2261
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2251, metadata !DIExpression()), !dbg !2262
  store ptr %_8.1, ptr %end.dbg.spill, align 8, !dbg !2263
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2253, metadata !DIExpression()), !dbg !2264
; call core::slice::raw::from_raw_parts_mut
  %3 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6b95575ca2cdc8f3E(ptr %_8.0, i64 %half_len) #10, !dbg !2265
  %_12.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2265
  %_12.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2265
  store ptr %_8.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2266, metadata !DIExpression()), !dbg !2270
  store i64 %half_len, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2269, metadata !DIExpression()), !dbg !2272
  %_4.i = sub nsw i64 0, %half_len, !dbg !2273
  store ptr %_8.1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !2274, metadata !DIExpression()), !dbg !2281
  store i64 %_4.i, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !2280, metadata !DIExpression()), !dbg !2283
  %_0.i3 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_8.1, i64 %_4.i, !dbg !2284
  store ptr %_0.i3, ptr %_0.i, align 8, !dbg !2285
  %4 = load ptr, ptr %_0.i, align 8, !dbg !2286, !noundef !24
; call core::slice::raw::from_raw_parts_mut
  %5 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6b95575ca2cdc8f3E(ptr %4, i64 %half_len) #10, !dbg !2287
  %_13.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2287
  %_13.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2287
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2288
  store ptr %_12.0, ptr %6, align 8, !dbg !2288
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2288
  store i64 %_12.1, ptr %7, align 8, !dbg !2288
  %8 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2288
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !2288
  store ptr %_13.0, ptr %9, align 8, !dbg !2288
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !2288
  store i64 %_13.1, ptr %10, align 8, !dbg !2288
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2289
  %front_half.0 = load ptr, ptr %11, align 8, !dbg !2289, !nonnull !24, !align !386, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2289
  %front_half.1 = load i64, ptr %12, align 8, !dbg !2289, !noundef !24
  %13 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 0, !dbg !2289
  store ptr %front_half.0, ptr %13, align 8, !dbg !2289
  %14 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 1, !dbg !2289
  store i64 %front_half.1, ptr %14, align 8, !dbg !2289
  call void @llvm.dbg.declare(metadata ptr %front_half.dbg.spill, metadata !2254, metadata !DIExpression()), !dbg !2290
  %15 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2291
  %16 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 0, !dbg !2291
  %back_half.0 = load ptr, ptr %16, align 8, !dbg !2291, !nonnull !24, !align !386, !noundef !24
  %17 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 1, !dbg !2291
  %back_half.1 = load i64, ptr %17, align 8, !dbg !2291, !noundef !24
  %18 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 0, !dbg !2291
  store ptr %back_half.0, ptr %18, align 8, !dbg !2291
  %19 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 1, !dbg !2291
  store i64 %back_half.1, ptr %19, align 8, !dbg !2291
  call void @llvm.dbg.declare(metadata ptr %back_half.dbg.spill, metadata !2256, metadata !DIExpression()), !dbg !2292
; call core::slice::<impl [T]>::reverse::revswap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17h5c405d85fe70cd03E"(ptr align 8 %front_half.0, i64 %front_half.1, ptr align 8 %back_half.0, i64 %back_half.1, i64 %half_len) #10, !dbg !2293
  ret void, !dbg !2294
}

; core::slice::<impl [T]>::reverse::revswap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17h5c405d85fe70cd03E"(ptr align 8 %a.0, i64 %a.1, ptr align 8 %b.0, i64 %b.1, i64 %n) unnamed_addr #0 !dbg !2295 {
start:
  %b.dbg.spill6 = alloca { ptr, i64 }, align 8
  %a.dbg.spill3 = alloca { ptr, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %a.dbg.spill = alloca { ptr, i64 }, align 8
  %i = alloca i64, align 8
  %_20 = alloca i64, align 8
  %_18 = alloca i64, align 8
  %_16 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 0
  store ptr %a.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 1
  store i64 %a.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2300, metadata !DIExpression()), !dbg !2308
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2301, metadata !DIExpression()), !dbg !2309
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !2302, metadata !DIExpression()), !dbg !2310
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2306, metadata !DIExpression()), !dbg !2311
  br i1 true, label %bb1, label %bb3, !dbg !2312

bb3:                                              ; preds = %bb1, %start
  br i1 true, label %bb4, label %bb6, !dbg !2313

bb1:                                              ; preds = %start
  %_5 = icmp eq i64 %a.1, %n, !dbg !2314
  br i1 %_5, label %bb3, label %bb2, !dbg !2314

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_dd0dc542054f5a3bd5e0287046a20794, i64 30, ptr align 8 @alloc_7d63de7160c884c9ac495adcaa035083) #11, !dbg !2312
  unreachable, !dbg !2312

bb6:                                              ; preds = %bb4, %bb3
  store i64 %n, ptr %_18, align 8, !dbg !2315
  %4 = load i64, ptr %_18, align 8, !dbg !2316, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h773a3748039f917cE"(ptr align 8 %a.0, i64 %a.1, i64 %4, ptr align 8 @alloc_1ec177b06bec02a734b9cedfc5d286b0) #10, !dbg !2316
  %_17.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2316
  %_17.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2316
  store i64 %n, ptr %_20, align 8, !dbg !2317
  %6 = load i64, ptr %_20, align 8, !dbg !2318, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %7 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h773a3748039f917cE"(ptr align 8 %b.0, i64 %b.1, i64 %6, ptr align 8 @alloc_993d57cfbdeb1134740408c696d9ab0d) #10, !dbg !2318
  %_19.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2318
  %_19.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2318
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !2319
  store ptr %_17.0, ptr %8, align 8, !dbg !2319
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !2319
  store i64 %_17.1, ptr %9, align 8, !dbg !2319
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_16, i32 0, i32 1, !dbg !2319
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2319
  store ptr %_19.0, ptr %11, align 8, !dbg !2319
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2319
  store i64 %_19.1, ptr %12, align 8, !dbg !2319
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !2320
  %a.01 = load ptr, ptr %13, align 8, !dbg !2320, !nonnull !24, !align !386, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !2320
  %a.12 = load i64, ptr %14, align 8, !dbg !2320, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 0, !dbg !2320
  store ptr %a.01, ptr %15, align 8, !dbg !2320
  %16 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 1, !dbg !2320
  store i64 %a.12, ptr %16, align 8, !dbg !2320
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill3, metadata !2303, metadata !DIExpression()), !dbg !2321
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_16, i32 0, i32 1, !dbg !2322
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2322
  %b.04 = load ptr, ptr %18, align 8, !dbg !2322, !nonnull !24, !align !386, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2322
  %b.15 = load i64, ptr %19, align 8, !dbg !2322, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 0, !dbg !2322
  store ptr %b.04, ptr %20, align 8, !dbg !2322
  %21 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 1, !dbg !2322
  store i64 %b.15, ptr %21, align 8, !dbg !2322
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill6, metadata !2305, metadata !DIExpression()), !dbg !2323
  store i64 0, ptr %i, align 8, !dbg !2324
  br label %bb9, !dbg !2325

bb4:                                              ; preds = %bb3
  %_10 = icmp eq i64 %b.1, %n, !dbg !2326
  br i1 %_10, label %bb6, label %bb5, !dbg !2326

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_deedf7aeab1a7c66b5420b58a4093bcc, i64 30, ptr align 8 @alloc_b39594566532d372761c25c7b3a9b7f7) #11, !dbg !2313
  unreachable, !dbg !2313

bb9:                                              ; preds = %bb16, %bb6
  %_23 = load i64, ptr %i, align 8, !dbg !2327, !noundef !24
  %_22 = icmp ult i64 %_23, %n, !dbg !2327
  br i1 %_22, label %bb10, label %bb17, !dbg !2327

bb17:                                             ; preds = %bb9
  ret void, !dbg !2328

bb10:                                             ; preds = %bb9
  %_26 = load i64, ptr %i, align 8, !dbg !2329, !noundef !24
  %_28 = icmp ult i64 %_26, %a.12, !dbg !2330
  %22 = call i1 @llvm.expect.i1(i1 %_28, i1 true), !dbg !2330
  br i1 %22, label %bb11, label %panic, !dbg !2330

bb11:                                             ; preds = %bb10
  %_25 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %a.01, i64 0, i64 %_26, !dbg !2331
  %_32.0 = sub i64 %n, 1, !dbg !2332
  %_32.1 = icmp ult i64 %n, 1, !dbg !2332
  %23 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !2332
  br i1 %23, label %panic7, label %bb12, !dbg !2332

panic:                                            ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %_26, i64 %a.12, ptr align 8 @alloc_a77b1a3fa80b3ab33d224883e8b4cd1d) #11, !dbg !2330
  unreachable, !dbg !2330

bb12:                                             ; preds = %bb11
  %_33 = load i64, ptr %i, align 8, !dbg !2333, !noundef !24
  %_34.0 = sub i64 %_32.0, %_33, !dbg !2332
  %_34.1 = icmp ult i64 %_32.0, %_33, !dbg !2332
  %24 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !2332
  br i1 %24, label %panic8, label %bb13, !dbg !2332

panic7:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_ac23a8f2c783a5a26393c853985eb5b2) #11, !dbg !2332
  unreachable, !dbg !2332

bb13:                                             ; preds = %bb12
  %_36 = icmp ult i64 %_34.0, %b.15, !dbg !2334
  %25 = call i1 @llvm.expect.i1(i1 %_36, i1 true), !dbg !2334
  br i1 %25, label %bb14, label %panic9, !dbg !2334

panic8:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_ac23a8f2c783a5a26393c853985eb5b2) #11, !dbg !2332
  unreachable, !dbg !2332

bb14:                                             ; preds = %bb13
  %_29 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %b.04, i64 0, i64 %_34.0, !dbg !2335
; call core::mem::swap
  call void @_ZN4core3mem4swap17h19ffc0ec2f1bbdc8E(ptr align 8 %_25, ptr align 8 %_29) #10, !dbg !2336
  %26 = load i64, ptr %i, align 8, !dbg !2337, !noundef !24
  %27 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %26, i64 1), !dbg !2337
  %_37.0 = extractvalue { i64, i1 } %27, 0, !dbg !2337
  %_37.1 = extractvalue { i64, i1 } %27, 1, !dbg !2337
  %28 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false), !dbg !2337
  br i1 %28, label %panic10, label %bb16, !dbg !2337

panic9:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %_34.0, i64 %b.15, ptr align 8 @alloc_ba54ae2ce298037908a2b7cfa61b194c) #11, !dbg !2334
  unreachable, !dbg !2334

bb16:                                             ; preds = %bb14
  store i64 %_37.0, ptr %i, align 8, !dbg !2337
  br label %bb9, !dbg !2325

panic10:                                          ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_d58863939d0dee1c97fc12f7c81c31ee) #11, !dbg !2337
  unreachable, !dbg !2337
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h6b95575ca2cdc8f3E(ptr %data, i64 %len) unnamed_addr #0 !dbg !2338 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !2344, metadata !DIExpression()), !dbg !2346
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2345, metadata !DIExpression()), !dbg !2347
  br i1 true, label %bb1, label %bb2, !dbg !2348

bb2:                                              ; preds = %_ZN4core5slice3raw18from_raw_parts_mut7runtime17hc112e3b6d2f1b766E.exit, %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4c742dd8b8bf66daE(ptr %data, i64 %len) #10, !dbg !2349
  %_6.0 = extractvalue { ptr, i64 } %0, 0, !dbg !2349
  %_6.1 = extractvalue { ptr, i64 } %0, 1, !dbg !2349
  %1 = insertvalue { ptr, i64 } poison, ptr %_6.0, 0, !dbg !2350
  %2 = insertvalue { ptr, i64 } %1, i64 %_6.1, 1, !dbg !2350
  ret { ptr, i64 } %2, !dbg !2350

bb1:                                              ; preds = %start
  store ptr %data, ptr %_5, align 8, !dbg !2348
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2348
  store i64 %len, ptr %3, align 8, !dbg !2348
  %4 = load ptr, ptr %_5, align 8, !dbg !2348, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2348
  %6 = load i64, ptr %5, align 8, !dbg !2348, !noundef !24
  store ptr %4, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !2351, metadata !DIExpression()), !dbg !2358
  store i64 %6, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2357, metadata !DIExpression()), !dbg !2358
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %4) #10, !dbg !2360
  br i1 %_3.i, label %bb2.i, label %bb5.i, !dbg !2360

bb5.i:                                            ; preds = %bb2.i, %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a, i64 166) #11, !dbg !2362
  unreachable, !dbg !2362

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_valid_allocation_size
  %_5.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17h5e6044888f5033eaE(i64 %6) #10, !dbg !2363
  br i1 %_5.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17hc112e3b6d2f1b766E.exit, label %bb5.i, !dbg !2363

_ZN4core5slice3raw18from_raw_parts_mut7runtime17hc112e3b6d2f1b766E.exit: ; preds = %bb2.i
  br label %bb2, !dbg !2348
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h3822e07ff973baf1E"(ptr align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2364 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %addr.dbg.spill.i = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %end_or_len = alloca ptr, align 8
  %_0 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !2368, metadata !DIExpression()), !dbg !2373
  call void @llvm.dbg.declare(metadata ptr %end_or_len, metadata !2371, metadata !DIExpression()), !dbg !2374
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !2375, metadata !DIExpression()), !dbg !2380
  store ptr %slice.0, ptr %ptr.dbg.spill, align 8, !dbg !2382
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2369, metadata !DIExpression()), !dbg !2383
  br i1 false, label %bb2, label %bb3, !dbg !2384

bb3:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !125, metadata !DIExpression()), !dbg !2385
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !135, metadata !DIExpression()), !dbg !2387
  %_0.i1 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %slice.1, !dbg !2388
  store ptr %_0.i1, ptr %end_or_len, align 8, !dbg !2389
  br label %bb4, !dbg !2389

bb2:                                              ; preds = %start
  store i64 %slice.1, ptr %addr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i, metadata !2390, metadata !DIExpression()), !dbg !2395
  %_0.i = inttoptr i64 %slice.1 to ptr, !dbg !2397
  store ptr %_0.i, ptr %end_or_len, align 8, !dbg !2398
  br label %bb4, !dbg !2398

bb4:                                              ; preds = %bb2, %bb3
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_7 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hbec443530b07bb45E"(ptr %slice.0) #10, !dbg !2399
  %_9 = load ptr, ptr %end_or_len, align 8, !dbg !2400, !noundef !24
  store ptr %_7, ptr %_0, align 8, !dbg !2401
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 1, !dbg !2401
  store ptr %_9, ptr %3, align 8, !dbg !2401
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 0, !dbg !2402
  %5 = load ptr, ptr %4, align 8, !dbg !2402, !nonnull !24, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 1, !dbg !2402
  %7 = load ptr, ptr %6, align 8, !dbg !2402, !noundef !24
  %8 = insertvalue { ptr, ptr } poison, ptr %5, 0, !dbg !2402
  %9 = insertvalue { ptr, ptr } %8, ptr %7, 1, !dbg !2402
  ret { ptr, ptr } %9, !dbg !2402
}

; core::slice::sort::insert_head
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_head17h2280a883779c6cdbE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2403 {
start:
  %self.dbg.spill.i35 = alloca ptr, align 8
  %self.dbg.spill.i34 = alloca ptr, align 8
  %self.dbg.spill.i33 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i30 = alloca i64, align 8
  %self.dbg.spill.i31 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca ptr, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i8 = alloca i64, align 8
  %dst.dbg.spill.i9 = alloca ptr, align 8
  %src.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %dst.dbg.spill.i6 = alloca ptr, align 8
  %src.dbg.spill.i7 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %dst.dbg.spill.i2 = alloca ptr, align 8
  %src.dbg.spill.i3 = alloca ptr, align 8
  %_6.i4 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_39 = alloca ptr, align 8
  %_37 = alloca { ptr, ptr }, align 8
  %_32 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_28 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_16 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_9 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2408, metadata !DIExpression()), !dbg !2421
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2409, metadata !DIExpression()), !dbg !2422
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2412, metadata !DIExpression()), !dbg !2423
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2414, metadata !DIExpression()), !dbg !2424
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2416, metadata !DIExpression()), !dbg !2425
  br i1 true, label %bb1, label %bb3, !dbg !2426

bb3:                                              ; preds = %bb1, %start
; call core::slice::<impl [T]>::get_unchecked
  %_10 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %v.0, i64 %v.1, i64 1) #10, !dbg !2427
; call core::slice::<impl [T]>::get_unchecked
  %_12 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %v.0, i64 %v.1, i64 0) #10, !dbg !2428
  store ptr %_10, ptr %_9, align 8, !dbg !2429
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 1, !dbg !2429
  store ptr %_12, ptr %2, align 8, !dbg !2429
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 0, !dbg !2429
  %4 = load ptr, ptr %3, align 8, !dbg !2429, !nonnull !24, !align !386, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 1, !dbg !2429
  %6 = load ptr, ptr %5, align 8, !dbg !2429, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_8 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %4, ptr align 8 %6) #10, !dbg !2429
  br i1 %_8, label %bb7, label %bb31, !dbg !2429

bb1:                                              ; preds = %start
  %_4 = icmp uge i64 %v.1, 2, !dbg !2430
  br i1 %_4, label %bb3, label %bb2, !dbg !2430

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_b18733840ed4f95b7455af06b80af98e) #11, !dbg !2426
  unreachable, !dbg !2426

bb31:                                             ; preds = %bb30, %bb3
  ret void, !dbg !2431

bb7:                                              ; preds = %bb3
  store ptr %v.0, ptr %self.dbg.spill.i33, align 8
  %7 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i33, i32 0, i32 1
  store i64 %v.1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i33, metadata !2142, metadata !DIExpression()), !dbg !2432
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2434
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2410, metadata !DIExpression()), !dbg !2435
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb4cf770cf4557c59E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_16, ptr %v.0) #10, !dbg !2436
  call void @llvm.dbg.declare(metadata ptr %_16, metadata !865, metadata !DIExpression()), !dbg !2437
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_16, i64 24, i1 false), !dbg !2439
  store ptr %tmp, ptr %self.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i35, metadata !2440, metadata !DIExpression()), !dbg !2447
  store ptr %v.0, ptr %self.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i31, metadata !173, metadata !DIExpression()), !dbg !2449
  store i64 1, ptr %count.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i30, metadata !179, metadata !DIExpression()), !dbg !2451
  %_0.i32 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2452
  store ptr %tmp, ptr %hole, align 8, !dbg !2453
  %8 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2453
  store ptr %_0.i32, ptr %8, align 8, !dbg !2453
  store ptr %v.0, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !173, metadata !DIExpression()), !dbg !2454
  store i64 1, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !179, metadata !DIExpression()), !dbg !2456
  %_0.i29 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2457
  store ptr %v.0, ptr %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i26, metadata !173, metadata !DIExpression()), !dbg !2458
  store i64 0, ptr %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i25, metadata !179, metadata !DIExpression()), !dbg !2460
  store ptr %_0.i29, ptr %src.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i3, metadata !1468, metadata !DIExpression()), !dbg !2461
  store ptr %v.0, ptr %dst.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i2, metadata !1473, metadata !DIExpression()), !dbg !2463
  store i64 1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !1474, metadata !DIExpression()), !dbg !2464
  store ptr %_0.i29, ptr %_6.i4, align 8, !dbg !2465
  %9 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !2465
  store ptr %v.0, ptr %9, align 8, !dbg !2465
  %10 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !2465
  store i64 1, ptr %10, align 8, !dbg !2465
  %11 = load ptr, ptr %_6.i4, align 8, !dbg !2465, !noundef !24
  %12 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !2465
  %13 = load ptr, ptr %12, align 8, !dbg !2465, !noundef !24
  %14 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !2465
  %15 = load i64, ptr %14, align 8, !dbg !2465, !noundef !24
  store ptr %11, ptr %src.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i7, metadata !1480, metadata !DIExpression()), !dbg !2466
  store ptr %13, ptr %dst.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i6, metadata !1484, metadata !DIExpression()), !dbg !2466
  store i64 %15, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !1485, metadata !DIExpression()), !dbg !2466
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %11) #10, !dbg !2468
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !2468

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %bb7
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !2469
  unreachable, !dbg !2469

bb2.i:                                            ; preds = %bb7
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %13) #10, !dbg !2470
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !2470

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %11, ptr %13, i64 %15) #10, !dbg !2471
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit, label %bb7.i, !dbg !2471

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v.0, ptr align 8 %_0.i29, i64 24, i1 false), !dbg !2472
  store i64 2, ptr %_28, align 8, !dbg !2473
  %16 = getelementptr inbounds { i64, i64 }, ptr %_28, i32 0, i32 1, !dbg !2473
  store i64 %v.1, ptr %16, align 8, !dbg !2473
  %17 = getelementptr inbounds { i64, i64 }, ptr %_28, i32 0, i32 0, !dbg !2473
  %18 = load i64, ptr %17, align 8, !dbg !2473, !noundef !24
  %19 = getelementptr inbounds { i64, i64 }, ptr %_28, i32 0, i32 1, !dbg !2473
  %20 = load i64, ptr %19, align 8, !dbg !2473, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %21 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc9040ef59f55e22cE"(i64 %18, i64 %20) #10, !dbg !2473
  %_27.0 = extractvalue { i64, i64 } %21, 0, !dbg !2473
  %_27.1 = extractvalue { i64, i64 } %21, 1, !dbg !2473
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2473
  store i64 %_27.0, ptr %22, align 8, !dbg !2473
  %23 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2473
  store i64 %_27.1, ptr %23, align 8, !dbg !2473
  br label %bb17, !dbg !2474

bb17:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit17, %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %24 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5014b81ca02722adE"(ptr align 8 %iter) #10, !dbg !2425
  store { i64, i64 } %24, ptr %_32, align 8, !dbg !2425
  %_34 = load i64, ptr %_32, align 8, !dbg !2425, !range !945, !noundef !24
  %25 = icmp eq i64 %_34, 0, !dbg !2425
  br i1 %25, label %bb30, label %bb19, !dbg !2425

bb30:                                             ; preds = %bb19, %bb17
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h87bd16592270f38eE"(ptr align 8 %hole) #10, !dbg !2475
  br label %bb31, !dbg !2475

bb19:                                             ; preds = %bb17
  %26 = getelementptr inbounds { i64, i64 }, ptr %_32, i32 0, i32 1, !dbg !2476
  %i = load i64, ptr %26, align 8, !dbg !2476, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2476
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2418, metadata !DIExpression()), !dbg !2477
; call core::slice::<impl [T]>::get_unchecked
  %27 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %v.0, i64 %v.1, i64 %i) #10, !dbg !2478
  store ptr %27, ptr %_39, align 8, !dbg !2478
  %_50 = load ptr, ptr %_39, align 8, !dbg !2479, !nonnull !24, !align !386, !noundef !24
  store ptr %tmp, ptr %self.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i34, metadata !2440, metadata !DIExpression()), !dbg !2480
  store ptr %_50, ptr %_37, align 8, !dbg !2482
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_37, i32 0, i32 1, !dbg !2482
  store ptr %tmp, ptr %28, align 8, !dbg !2482
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_37, i32 0, i32 0, !dbg !2482
  %30 = load ptr, ptr %29, align 8, !dbg !2482, !nonnull !24, !align !386, !noundef !24
  %31 = getelementptr inbounds { ptr, ptr }, ptr %_37, i32 0, i32 1, !dbg !2482
  %32 = load ptr, ptr %31, align 8, !dbg !2482, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_36 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %30, ptr align 8 %32) #10, !dbg !2482
  br i1 %_36, label %bb24, label %bb30, !dbg !2482

bb24:                                             ; preds = %bb19
  store ptr %v.0, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !173, metadata !DIExpression()), !dbg !2483
  store i64 %i, ptr %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i22, metadata !179, metadata !DIExpression()), !dbg !2485
  %_0.i24 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2486
  %_48.0 = sub i64 %i, 1, !dbg !2487
  %_48.1 = icmp ult i64 %i, 1, !dbg !2487
  %33 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false), !dbg !2487
  br i1 %33, label %panic, label %bb26, !dbg !2487

bb26:                                             ; preds = %bb24
  store ptr %v.0, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !173, metadata !DIExpression()), !dbg !2488
  store i64 %_48.0, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !179, metadata !DIExpression()), !dbg !2490
  %_0.i21 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_48.0, !dbg !2491
  store ptr %_0.i24, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1468, metadata !DIExpression()), !dbg !2492
  store ptr %_0.i21, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1473, metadata !DIExpression()), !dbg !2494
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1474, metadata !DIExpression()), !dbg !2495
  store ptr %_0.i24, ptr %_6.i, align 8, !dbg !2496
  %34 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !2496
  store ptr %_0.i21, ptr %34, align 8, !dbg !2496
  %35 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !2496
  store i64 1, ptr %35, align 8, !dbg !2496
  %36 = load ptr, ptr %_6.i, align 8, !dbg !2496, !noundef !24
  %37 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !2496
  %38 = load ptr, ptr %37, align 8, !dbg !2496, !noundef !24
  %39 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !2496
  %40 = load i64, ptr %39, align 8, !dbg !2496, !noundef !24
  store ptr %36, ptr %src.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i10, metadata !1480, metadata !DIExpression()), !dbg !2497
  store ptr %38, ptr %dst.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i9, metadata !1484, metadata !DIExpression()), !dbg !2497
  store i64 %40, ptr %count.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i8, metadata !1485, metadata !DIExpression()), !dbg !2497
; call core::intrinsics::is_aligned_and_not_null
  %_4.i11 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %36) #10, !dbg !2499
  br i1 %_4.i11, label %bb2.i13, label %bb7.i12, !dbg !2499

bb7.i12:                                          ; preds = %bb4.i15, %bb2.i13, %bb26
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !2500
  unreachable, !dbg !2500

bb2.i13:                                          ; preds = %bb26
; call core::intrinsics::is_aligned_and_not_null
  %_5.i14 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %38) #10, !dbg !2501
  br i1 %_5.i14, label %bb4.i15, label %bb7.i12, !dbg !2501

bb4.i15:                                          ; preds = %bb2.i13
; call core::intrinsics::is_nonoverlapping
  %_7.i16 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %36, ptr %38, i64 %40) #10, !dbg !2502
  br i1 %_7.i16, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit17, label %bb7.i12, !dbg !2502

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit17: ; preds = %bb4.i15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0.i21, ptr align 8 %_0.i24, i64 24, i1 false), !dbg !2503
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !173, metadata !DIExpression()), !dbg !2504
  store i64 %i, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !179, metadata !DIExpression()), !dbg !2506
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2507
  %41 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2508
  store ptr %_0.i, ptr %41, align 8, !dbg !2508
  br label %bb17, !dbg !2474

panic:                                            ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_a6ff681768d076017ea95b6d4975ff4f) #11, !dbg !2487
  unreachable, !dbg !2487

bb20:                                             ; No predecessors!
  unreachable, !dbg !2425
}

; core::slice::sort::insert_tail
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_tail17hadc962c8a0e3fa3fE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2509 {
start:
  %self.dbg.spill.i39 = alloca ptr, align 8
  %self.dbg.spill.i38 = alloca ptr, align 8
  %self.dbg.spill.i37 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i34 = alloca i64, align 8
  %self.dbg.spill.i35 = alloca ptr, align 8
  %count.dbg.spill.i31 = alloca i64, align 8
  %self.dbg.spill.i32 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %_0.i29 = alloca ptr, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca ptr, align 8
  %_0.i25 = alloca ptr, align 8
  %count.dbg.spill.i20 = alloca i64, align 8
  %self.dbg.spill.i21 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %dst.dbg.spill.i10 = alloca ptr, align 8
  %src.dbg.spill.i11 = alloca ptr, align 8
  %count.dbg.spill.i6 = alloca i64, align 8
  %dst.dbg.spill.i7 = alloca ptr, align 8
  %src.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %dst.dbg.spill.i3 = alloca ptr, align 8
  %src.dbg.spill.i4 = alloca ptr, align 8
  %_6.i5 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %j_ptr.dbg.spill = alloca ptr, align 8
  %j.dbg.spill = alloca i64, align 8
  %i_ptr.dbg.spill = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_42 = alloca { ptr, ptr }, align 8
  %_36 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_32 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_20 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_15 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2511, metadata !DIExpression()), !dbg !2537
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2512, metadata !DIExpression()), !dbg !2538
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2519, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2521, metadata !DIExpression()), !dbg !2540
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2523, metadata !DIExpression()), !dbg !2541
  br i1 true, label %bb1, label %bb3, !dbg !2542

bb3:                                              ; preds = %bb1, %start
  store ptr %v.0, ptr %self.dbg.spill.i37, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i37, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i37, metadata !2142, metadata !DIExpression()), !dbg !2543
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2545
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2513, metadata !DIExpression()), !dbg !2546
  %_12.0 = sub i64 %v.1, 1, !dbg !2547
  %_12.1 = icmp ult i64 %v.1, 1, !dbg !2547
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2547
  br i1 %3, label %panic, label %bb5, !dbg !2547

bb1:                                              ; preds = %start
  %_4 = icmp uge i64 %v.1, 2, !dbg !2548
  br i1 %_4, label %bb3, label %bb2, !dbg !2548

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_305449b93870325777cb03e1c2ef3560) #11, !dbg !2542
  unreachable, !dbg !2542

bb5:                                              ; preds = %bb3
  store i64 %_12.0, ptr %i.dbg.spill, align 8, !dbg !2547
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2515, metadata !DIExpression()), !dbg !2549
  store ptr %v.0, ptr %self.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i21, metadata !173, metadata !DIExpression()), !dbg !2550
  store i64 %_12.0, ptr %count.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i20, metadata !179, metadata !DIExpression()), !dbg !2552
  %_0.i22 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_12.0, !dbg !2553
  store ptr %_0.i22, ptr %i_ptr.dbg.spill, align 8, !dbg !2554
  call void @llvm.dbg.declare(metadata ptr %i_ptr.dbg.spill, metadata !2517, metadata !DIExpression()), !dbg !2555
  store ptr %_0.i22, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !2266, metadata !DIExpression()), !dbg !2556
  store i64 1, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !2269, metadata !DIExpression()), !dbg !2558
  store ptr %_0.i22, ptr %self.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i32, metadata !2274, metadata !DIExpression()), !dbg !2559
  store i64 -1, ptr %count.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i31, metadata !2280, metadata !DIExpression()), !dbg !2561
  %_0.i33 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_0.i22, i64 -1, !dbg !2562
  store ptr %_0.i33, ptr %_0.i29, align 8, !dbg !2563
  %4 = load ptr, ptr %_0.i29, align 8, !dbg !2564, !noundef !24
  store ptr %_0.i22, ptr %_15, align 8, !dbg !2565
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 1, !dbg !2565
  store ptr %4, ptr %5, align 8, !dbg !2565
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 0, !dbg !2565
  %7 = load ptr, ptr %6, align 8, !dbg !2565, !nonnull !24, !align !386, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 1, !dbg !2565
  %9 = load ptr, ptr %8, align 8, !dbg !2565, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_14 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2565
  br i1 %_14, label %bb9, label %bb28, !dbg !2565

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_cc2195d6c87d9b61b855864d0a431fd1) #11, !dbg !2547
  unreachable, !dbg !2547

bb28:                                             ; preds = %bb27, %bb5
  ret void, !dbg !2566

bb9:                                              ; preds = %bb5
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb4cf770cf4557c59E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_20, ptr %_0.i22) #10, !dbg !2567
  call void @llvm.dbg.declare(metadata ptr %_20, metadata !865, metadata !DIExpression()), !dbg !2568
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_20, i64 24, i1 false), !dbg !2570
  store ptr %tmp, ptr %self.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i39, metadata !2440, metadata !DIExpression()), !dbg !2571
  store ptr %_0.i22, ptr %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i24, metadata !2266, metadata !DIExpression()), !dbg !2573
  store i64 1, ptr %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i23, metadata !2269, metadata !DIExpression()), !dbg !2575
  store ptr %_0.i22, ptr %self.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i35, metadata !2274, metadata !DIExpression()), !dbg !2576
  store i64 -1, ptr %count.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i34, metadata !2280, metadata !DIExpression()), !dbg !2578
  %_0.i36 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_0.i22, i64 -1, !dbg !2579
  store ptr %_0.i36, ptr %_0.i25, align 8, !dbg !2580
  %10 = load ptr, ptr %_0.i25, align 8, !dbg !2581, !noundef !24
  store ptr %tmp, ptr %hole, align 8, !dbg !2582
  %11 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2582
  store ptr %10, ptr %11, align 8, !dbg !2582
  %12 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2583
  %_29 = load ptr, ptr %12, align 8, !dbg !2583, !noundef !24
  store ptr %_29, ptr %src.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i4, metadata !1468, metadata !DIExpression()), !dbg !2584
  store ptr %_0.i22, ptr %dst.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i3, metadata !1473, metadata !DIExpression()), !dbg !2586
  store i64 1, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !1474, metadata !DIExpression()), !dbg !2587
  store ptr %_29, ptr %_6.i5, align 8, !dbg !2588
  %13 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i5, i32 0, i32 1, !dbg !2588
  store ptr %_0.i22, ptr %13, align 8, !dbg !2588
  %14 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i5, i32 0, i32 2, !dbg !2588
  store i64 1, ptr %14, align 8, !dbg !2588
  %15 = load ptr, ptr %_6.i5, align 8, !dbg !2588, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i5, i32 0, i32 1, !dbg !2588
  %17 = load ptr, ptr %16, align 8, !dbg !2588, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i5, i32 0, i32 2, !dbg !2588
  %19 = load i64, ptr %18, align 8, !dbg !2588, !noundef !24
  store ptr %15, ptr %src.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i8, metadata !1480, metadata !DIExpression()), !dbg !2589
  store ptr %17, ptr %dst.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i7, metadata !1484, metadata !DIExpression()), !dbg !2589
  store i64 %19, ptr %count.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i6, metadata !1485, metadata !DIExpression()), !dbg !2589
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %15) #10, !dbg !2591
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !2591

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %bb9
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !2592
  unreachable, !dbg !2592

bb2.i:                                            ; preds = %bb9
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %17) #10, !dbg !2593
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !2593

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %15, ptr %17, i64 %19) #10, !dbg !2594
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit, label %bb7.i, !dbg !2594

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0.i22, ptr align 8 %_29, i64 24, i1 false), !dbg !2595
  %_34.0 = sub i64 %_12.0, 1, !dbg !2596
  %_34.1 = icmp ult i64 %_12.0, 1, !dbg !2596
  %20 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !2596
  br i1 %20, label %panic1, label %bb15, !dbg !2596

bb15:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit
  store i64 0, ptr %_32, align 8, !dbg !2597
  %21 = getelementptr inbounds { i64, i64 }, ptr %_32, i32 0, i32 1, !dbg !2597
  store i64 %_34.0, ptr %21, align 8, !dbg !2597
  %22 = getelementptr inbounds { i64, i64 }, ptr %_32, i32 0, i32 0, !dbg !2597
  %23 = load i64, ptr %22, align 8, !dbg !2597, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_32, i32 0, i32 1, !dbg !2597
  %25 = load i64, ptr %24, align 8, !dbg !2597, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %26 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hc93b5f8fa475ff04E(i64 %23, i64 %25) #10, !dbg !2597
  %_31.0 = extractvalue { i64, i64 } %26, 0, !dbg !2597
  %_31.1 = extractvalue { i64, i64 } %26, 1, !dbg !2597
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %27 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf86c5f7bf3977df8E"(i64 %_31.0, i64 %_31.1) #10, !dbg !2597
  %_30.0 = extractvalue { i64, i64 } %27, 0, !dbg !2597
  %_30.1 = extractvalue { i64, i64 } %27, 1, !dbg !2597
  %28 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2597
  store i64 %_30.0, ptr %28, align 8, !dbg !2597
  %29 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2597
  store i64 %_30.1, ptr %29, align 8, !dbg !2597
  br label %bb18, !dbg !2598

panic1:                                           ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_26d971e13280eea49644c90fb64034bc) #11, !dbg !2596
  unreachable, !dbg !2596

bb18:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit18, %bb15
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %30 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h76390c5a0cb34d80E"(ptr align 8 %iter) #10, !dbg !2541
  store { i64, i64 } %30, ptr %_36, align 8, !dbg !2541
  %_38 = load i64, ptr %_36, align 8, !dbg !2541, !range !945, !noundef !24
  %31 = icmp eq i64 %_38, 0, !dbg !2541
  br i1 %31, label %bb27, label %bb20, !dbg !2541

bb27:                                             ; preds = %bb20, %bb18
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h87bd16592270f38eE"(ptr align 8 %hole) #10, !dbg !2599
  br label %bb28, !dbg !2599

bb20:                                             ; preds = %bb18
  %32 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 1, !dbg !2600
  %j = load i64, ptr %32, align 8, !dbg !2600, !noundef !24
  store i64 %j, ptr %j.dbg.spill, align 8, !dbg !2600
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !2533, metadata !DIExpression()), !dbg !2601
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !173, metadata !DIExpression()), !dbg !2602
  store i64 %j, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !179, metadata !DIExpression()), !dbg !2604
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %j, !dbg !2605
  store ptr %_0.i, ptr %j_ptr.dbg.spill, align 8, !dbg !2606
  call void @llvm.dbg.declare(metadata ptr %j_ptr.dbg.spill, metadata !2535, metadata !DIExpression()), !dbg !2607
  store ptr %tmp, ptr %self.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i38, metadata !2440, metadata !DIExpression()), !dbg !2608
  store ptr %tmp, ptr %_42, align 8, !dbg !2610
  %33 = getelementptr inbounds { ptr, ptr }, ptr %_42, i32 0, i32 1, !dbg !2610
  store ptr %_0.i, ptr %33, align 8, !dbg !2610
  %34 = getelementptr inbounds { ptr, ptr }, ptr %_42, i32 0, i32 0, !dbg !2610
  %35 = load ptr, ptr %34, align 8, !dbg !2610, !nonnull !24, !align !386, !noundef !24
  %36 = getelementptr inbounds { ptr, ptr }, ptr %_42, i32 0, i32 1, !dbg !2610
  %37 = load ptr, ptr %36, align 8, !dbg !2610, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_41 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %35, ptr align 8 %37) #10, !dbg !2610
  br i1 %_41, label %bb25, label %bb27, !dbg !2610

bb25:                                             ; preds = %bb20
  %38 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2611
  %_48 = load ptr, ptr %38, align 8, !dbg !2611, !noundef !24
  store ptr %_0.i, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1468, metadata !DIExpression()), !dbg !2612
  store ptr %_48, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1473, metadata !DIExpression()), !dbg !2614
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1474, metadata !DIExpression()), !dbg !2615
  store ptr %_0.i, ptr %_6.i, align 8, !dbg !2616
  %39 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !2616
  store ptr %_48, ptr %39, align 8, !dbg !2616
  %40 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !2616
  store i64 1, ptr %40, align 8, !dbg !2616
  %41 = load ptr, ptr %_6.i, align 8, !dbg !2616, !noundef !24
  %42 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !2616
  %43 = load ptr, ptr %42, align 8, !dbg !2616, !noundef !24
  %44 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !2616
  %45 = load i64, ptr %44, align 8, !dbg !2616, !noundef !24
  store ptr %41, ptr %src.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i11, metadata !1480, metadata !DIExpression()), !dbg !2617
  store ptr %43, ptr %dst.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i10, metadata !1484, metadata !DIExpression()), !dbg !2617
  store i64 %45, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !1485, metadata !DIExpression()), !dbg !2617
; call core::intrinsics::is_aligned_and_not_null
  %_4.i12 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %41) #10, !dbg !2619
  br i1 %_4.i12, label %bb2.i14, label %bb7.i13, !dbg !2619

bb7.i13:                                          ; preds = %bb4.i16, %bb2.i14, %bb25
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !2620
  unreachable, !dbg !2620

bb2.i14:                                          ; preds = %bb25
; call core::intrinsics::is_aligned_and_not_null
  %_5.i15 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %43) #10, !dbg !2621
  br i1 %_5.i15, label %bb4.i16, label %bb7.i13, !dbg !2621

bb4.i16:                                          ; preds = %bb2.i14
; call core::intrinsics::is_nonoverlapping
  %_7.i17 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %41, ptr %43, i64 %45) #10, !dbg !2622
  br i1 %_7.i17, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit18, label %bb7.i13, !dbg !2622

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit18: ; preds = %bb4.i16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_48, ptr align 8 %_0.i, i64 24, i1 false), !dbg !2623
  %46 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2624
  store ptr %_0.i, ptr %46, align 8, !dbg !2624
  br label %bb18, !dbg !2598

bb21:                                             ; No predecessors!
  unreachable, !dbg !2541
}

; core::slice::sort::choose_pivot
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort12choose_pivot17hdb34892171d6c6e2E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2625 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_41 = alloca { ptr, ptr, ptr }, align 8
  %_37 = alloca ptr, align 8
  %_33 = alloca ptr, align 8
  %_29 = alloca ptr, align 8
  %sort_adjacent = alloca ptr, align 8
  %sort3 = alloca ptr, align 8
  %sort2 = alloca %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", align 8
  %swaps = alloca i64, align 8
  %c = alloca i64, align 8
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %_0 = alloca { i64, i8 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2629, metadata !DIExpression()), !dbg !2662
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2630, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.declare(metadata ptr %a, metadata !2633, metadata !DIExpression()), !dbg !2664
  call void @llvm.dbg.declare(metadata ptr %b, metadata !2635, metadata !DIExpression()), !dbg !2665
  call void @llvm.dbg.declare(metadata ptr %c, metadata !2637, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.declare(metadata ptr %swaps, metadata !2639, metadata !DIExpression()), !dbg !2667
  call void @llvm.dbg.declare(metadata ptr %sort2, metadata !2641, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.declare(metadata ptr %sort3, metadata !2650, metadata !DIExpression()), !dbg !2669
  call void @llvm.dbg.declare(metadata ptr %sort_adjacent, metadata !2656, metadata !DIExpression()), !dbg !2670
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2671
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2631, metadata !DIExpression()), !dbg !2672
  %_6 = udiv i64 %v.1, 4, !dbg !2673
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_6, i64 1), !dbg !2673
  %_8.0 = extractvalue { i64, i1 } %2, 0, !dbg !2673
  %_8.1 = extractvalue { i64, i1 } %2, 1, !dbg !2673
  %3 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2673
  br i1 %3, label %panic, label %bb2, !dbg !2673

bb2:                                              ; preds = %start
  store i64 %_8.0, ptr %a, align 8, !dbg !2673
  %_10 = udiv i64 %v.1, 4, !dbg !2674
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2674
  %_12.0 = extractvalue { i64, i1 } %4, 0, !dbg !2674
  %_12.1 = extractvalue { i64, i1 } %4, 1, !dbg !2674
  %5 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2674
  br i1 %5, label %panic1, label %bb4, !dbg !2674

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_b06d9ef39409ad6732fa47bfee802603) #11, !dbg !2673
  unreachable, !dbg !2673

bb4:                                              ; preds = %bb2
  store i64 %_12.0, ptr %b, align 8, !dbg !2674
  %_14 = udiv i64 %v.1, 4, !dbg !2675
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_14, i64 3), !dbg !2675
  %_16.0 = extractvalue { i64, i1 } %6, 0, !dbg !2675
  %_16.1 = extractvalue { i64, i1 } %6, 1, !dbg !2675
  %7 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !2675
  br i1 %7, label %panic2, label %bb6, !dbg !2675

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_2644e2881879bc6bc25ef3ad9aca9bf1) #11, !dbg !2674
  unreachable, !dbg !2674

bb6:                                              ; preds = %bb4
  store i64 %_16.0, ptr %c, align 8, !dbg !2675
  store i64 0, ptr %swaps, align 8, !dbg !2676
  %_18 = icmp uge i64 %v.1, 8, !dbg !2677
  br i1 %_18, label %bb7, label %bb12, !dbg !2677

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_c0308ee6ba4419c7862ad8efa6c1ef4c) #11, !dbg !2675
  unreachable, !dbg !2675

bb12:                                             ; preds = %bb11, %bb6
  %_46 = load i64, ptr %swaps, align 8, !dbg !2678, !noundef !24
  %_45 = icmp ult i64 %_46, 12, !dbg !2678
  br i1 %_45, label %bb13, label %bb14, !dbg !2678

bb7:                                              ; preds = %bb6
  store ptr %is_less, ptr %sort2, align 8, !dbg !2679
  %8 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %sort2, i32 0, i32 1, !dbg !2679
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !2679
  store ptr %v.0, ptr %9, align 8, !dbg !2679
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !2679
  store i64 %v.1, ptr %10, align 8, !dbg !2679
  %11 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %sort2, i32 0, i32 2, !dbg !2679
  store ptr %swaps, ptr %11, align 8, !dbg !2679
  store ptr %sort2, ptr %sort3, align 8, !dbg !2680
  %_24 = icmp uge i64 %v.1, 50, !dbg !2681
  br i1 %_24, label %bb8, label %bb11, !dbg !2681

bb11:                                             ; preds = %bb8, %bb7
  store ptr %a, ptr %_41, align 8, !dbg !2682
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2682
  store ptr %b, ptr %12, align 8, !dbg !2682
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2682
  store ptr %c, ptr %13, align 8, !dbg !2682
  %14 = load ptr, ptr %_41, align 8, !dbg !2682, !nonnull !24, !align !386, !noundef !24
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2682
  %16 = load ptr, ptr %15, align 8, !dbg !2682, !nonnull !24, !align !386, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2682
  %18 = load ptr, ptr %17, align 8, !dbg !2682, !nonnull !24, !align !386, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h4801fda56e9bd923E"(ptr align 8 %sort3, ptr align 8 %14, ptr align 8 %16, ptr align 8 %18) #10, !dbg !2682
  br label %bb12, !dbg !2682

bb8:                                              ; preds = %bb7
  store ptr %sort3, ptr %sort_adjacent, align 8, !dbg !2683
  store ptr %a, ptr %_29, align 8, !dbg !2684
  %19 = load ptr, ptr %_29, align 8, !dbg !2684, !nonnull !24, !align !386, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0f61809f48cb59d0E"(ptr align 8 %sort_adjacent, ptr align 8 %19) #10, !dbg !2684
  store ptr %b, ptr %_33, align 8, !dbg !2685
  %20 = load ptr, ptr %_33, align 8, !dbg !2685, !nonnull !24, !align !386, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0f61809f48cb59d0E"(ptr align 8 %sort_adjacent, ptr align 8 %20) #10, !dbg !2685
  store ptr %c, ptr %_37, align 8, !dbg !2686
  %21 = load ptr, ptr %_37, align 8, !dbg !2686, !nonnull !24, !align !386, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0f61809f48cb59d0E"(ptr align 8 %sort_adjacent, ptr align 8 %21) #10, !dbg !2686
  br label %bb11, !dbg !2686

bb14:                                             ; preds = %bb12
; call core::slice::<impl [T]>::reverse
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h3a000873b0c20f1eE"(ptr align 8 %v.0, i64 %v.1) #10, !dbg !2687
  %_53.0 = sub i64 %v.1, 1, !dbg !2688
  %_53.1 = icmp ult i64 %v.1, 1, !dbg !2688
  %22 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !2688
  br i1 %22, label %panic3, label %bb16, !dbg !2688

bb13:                                             ; preds = %bb12
  %_47 = load i64, ptr %b, align 8, !dbg !2689, !noundef !24
  %_49 = load i64, ptr %swaps, align 8, !dbg !2690, !noundef !24
  %_48 = icmp eq i64 %_49, 0, !dbg !2690
  store i64 %_47, ptr %_0, align 8, !dbg !2691
  %23 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !2691
  %24 = zext i1 %_48 to i8, !dbg !2691
  store i8 %24, ptr %23, align 8, !dbg !2691
  br label %bb18, !dbg !2692

bb16:                                             ; preds = %bb14
  %_54 = load i64, ptr %b, align 8, !dbg !2693, !noundef !24
  %_55.0 = sub i64 %_53.0, %_54, !dbg !2688
  %_55.1 = icmp ult i64 %_53.0, %_54, !dbg !2688
  %25 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2688
  br i1 %25, label %panic4, label %bb17, !dbg !2688

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_48cf8f64fdeea9f2a5141a9021355e71) #11, !dbg !2688
  unreachable, !dbg !2688

bb17:                                             ; preds = %bb16
  store i64 %_55.0, ptr %_0, align 8, !dbg !2694
  %26 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !2694
  store i8 1, ptr %26, align 8, !dbg !2694
  br label %bb18, !dbg !2692

panic4:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_48cf8f64fdeea9f2a5141a9021355e71) #11, !dbg !2688
  unreachable, !dbg !2688

bb18:                                             ; preds = %bb13, %bb17
  %27 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 0, !dbg !2695
  %28 = load i64, ptr %27, align 8, !dbg !2695, !noundef !24
  %29 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !2695
  %30 = load i8, ptr %29, align 8, !dbg !2695, !range !529, !noundef !24
  %31 = trunc i8 %30 to i1, !dbg !2695
  %32 = zext i1 %31 to i8, !dbg !2695
  %33 = insertvalue { i64, i8 } poison, i64 %28, 0, !dbg !2695
  %34 = insertvalue { i64, i8 } %33, i8 %32, 1, !dbg !2695
  ret { i64, i8 } %34, !dbg !2695
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0f61809f48cb59d0E"(ptr align 8 %_1, ptr align 8 %a) unnamed_addr #0 !dbg !2696 {
start:
  %tmp.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca i64, align 8
  %_5 = alloca { ptr, ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2702, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2705
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2701, metadata !DIExpression()), !dbg !2706
  %tmp = load i64, ptr %a, align 8, !dbg !2707, !noundef !24
  store i64 %tmp, ptr %tmp.dbg.spill, align 8, !dbg !2707
  call void @llvm.dbg.declare(metadata ptr %tmp.dbg.spill, metadata !2703, metadata !DIExpression()), !dbg !2708
  %_12 = load ptr, ptr %_1, align 8, !dbg !2709, !nonnull !24, !align !386, !noundef !24
  %_8.0 = sub i64 %tmp, 1, !dbg !2710
  %_8.1 = icmp ult i64 %tmp, 1, !dbg !2710
  %0 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2710
  br i1 %0, label %panic, label %bb1, !dbg !2710

bb1:                                              ; preds = %start
  store i64 %_8.0, ptr %_7, align 8, !dbg !2710
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %tmp, i64 1), !dbg !2711
  %_11.0 = extractvalue { i64, i1 } %1, 0, !dbg !2711
  %_11.1 = extractvalue { i64, i1 } %1, 1, !dbg !2711
  %2 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !2711
  br i1 %2, label %panic1, label %bb2, !dbg !2711

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_0a2be255056e864be27d3328bf6673e5) #11, !dbg !2710
  unreachable, !dbg !2710

bb2:                                              ; preds = %bb1
  store i64 %_11.0, ptr %_10, align 8, !dbg !2711
  store ptr %_7, ptr %_5, align 8, !dbg !2709
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2709
  store ptr %a, ptr %3, align 8, !dbg !2709
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2709
  store ptr %_10, ptr %4, align 8, !dbg !2709
  %5 = load ptr, ptr %_5, align 8, !dbg !2709, !nonnull !24, !align !386, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2709
  %7 = load ptr, ptr %6, align 8, !dbg !2709, !nonnull !24, !align !386, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2709
  %9 = load ptr, ptr %8, align 8, !dbg !2709, !nonnull !24, !align !386, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h4801fda56e9bd923E"(ptr align 8 %_12, ptr align 8 %5, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2709
  ret void, !dbg !2712

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_7ad731f8dacd386b68e0de756a06f860) #11, !dbg !2711
  unreachable, !dbg !2711
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h4801fda56e9bd923E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b, ptr align 8 %c) unnamed_addr #0 !dbg !2713 {
start:
  %c.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca { ptr, ptr }, align 8
  %_8 = alloca { ptr, ptr }, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2720, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2721
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2717, metadata !DIExpression()), !dbg !2722
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2718, metadata !DIExpression()), !dbg !2723
  store ptr %c, ptr %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !2719, metadata !DIExpression()), !dbg !2724
  %_11 = load ptr, ptr %_1, align 8, !dbg !2725, !nonnull !24, !align !386, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2725
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2725
  store ptr %b, ptr %0, align 8, !dbg !2725
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2725
  %2 = load ptr, ptr %1, align 8, !dbg !2725, !nonnull !24, !align !386, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2725
  %4 = load ptr, ptr %3, align 8, !dbg !2725, !nonnull !24, !align !386, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hd172dc874015ff81E"(ptr align 8 %_11, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2725
  %_12 = load ptr, ptr %_1, align 8, !dbg !2726, !nonnull !24, !align !386, !noundef !24
  store ptr %b, ptr %_8, align 8, !dbg !2726
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2726
  store ptr %c, ptr %5, align 8, !dbg !2726
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 0, !dbg !2726
  %7 = load ptr, ptr %6, align 8, !dbg !2726, !nonnull !24, !align !386, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2726
  %9 = load ptr, ptr %8, align 8, !dbg !2726, !nonnull !24, !align !386, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hd172dc874015ff81E"(ptr align 8 %_12, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2726
  %_13 = load ptr, ptr %_1, align 8, !dbg !2727, !nonnull !24, !align !386, !noundef !24
  store ptr %a, ptr %_10, align 8, !dbg !2727
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2727
  store ptr %b, ptr %10, align 8, !dbg !2727
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2727
  %12 = load ptr, ptr %11, align 8, !dbg !2727, !nonnull !24, !align !386, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2727
  %14 = load ptr, ptr %13, align 8, !dbg !2727, !nonnull !24, !align !386, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hd172dc874015ff81E"(ptr align 8 %_13, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2727
  ret void, !dbg !2728
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hd172dc874015ff81E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2729 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2735, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2738
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2736, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8, DW_OP_deref)), !dbg !2739
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2737, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 24, DW_OP_deref)), !dbg !2740
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2733, metadata !DIExpression()), !dbg !2741
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2734, metadata !DIExpression()), !dbg !2742
  %_14 = load ptr, ptr %_1, align 8, !dbg !2743, !nonnull !24, !align !386, !noundef !24
  %0 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 1, !dbg !2744
  %1 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2744
  %_15.0 = load ptr, ptr %1, align 8, !dbg !2744, !nonnull !24, !align !386, !noundef !24
  %2 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2744
  %_15.1 = load i64, ptr %2, align 8, !dbg !2744, !noundef !24
  %_7 = load i64, ptr %b, align 8, !dbg !2745, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_6 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %_15.0, i64 %_15.1, i64 %_7) #10, !dbg !2744
  %3 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 1, !dbg !2746
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !2746
  %_16.0 = load ptr, ptr %4, align 8, !dbg !2746, !nonnull !24, !align !386, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !2746
  %_16.1 = load i64, ptr %5, align 8, !dbg !2746, !noundef !24
  %_9 = load i64, ptr %a, align 8, !dbg !2747, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_8 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %_16.0, i64 %_16.1, i64 %_9) #10, !dbg !2746
  store ptr %_6, ptr %_5, align 8, !dbg !2743
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2743
  store ptr %_8, ptr %6, align 8, !dbg !2743
  %7 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 0, !dbg !2743
  %8 = load ptr, ptr %7, align 8, !dbg !2743, !nonnull !24, !align !386, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2743
  %10 = load ptr, ptr %9, align 8, !dbg !2743, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %_14, ptr align 8 %8, ptr align 8 %10) #10, !dbg !2743
  br i1 %_4, label %bb4, label %bb7, !dbg !2743

bb7:                                              ; preds = %bb6, %start
  ret void, !dbg !2748

bb4:                                              ; preds = %start
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h4b35c1095fa1adc2E(ptr %a, ptr %b) #10, !dbg !2749
  %11 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 2, !dbg !2750
  %_17 = load ptr, ptr %11, align 8, !dbg !2750, !nonnull !24, !align !386, !noundef !24
  %12 = load i64, ptr %_17, align 8, !dbg !2750, !noundef !24
  %13 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %12, i64 1), !dbg !2750
  %_13.0 = extractvalue { i64, i1 } %13, 0, !dbg !2750
  %_13.1 = extractvalue { i64, i1 } %13, 1, !dbg !2750
  %14 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 2, !dbg !2750
  %_18 = load ptr, ptr %14, align 8, !dbg !2750, !nonnull !24, !align !386, !noundef !24
  %15 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !2750
  br i1 %15, label %panic, label %bb6, !dbg !2750

bb6:                                              ; preds = %bb4
  %16 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 2, !dbg !2750
  %_19 = load ptr, ptr %16, align 8, !dbg !2750, !nonnull !24, !align !386, !noundef !24
  store i64 %_13.0, ptr %_19, align 8, !dbg !2750
  br label %bb7, !dbg !2751

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_d5f1870acd5d367b5d3c31e93060a2be) #11, !dbg !2750
  unreachable, !dbg !2750
}

; core::slice::sort::break_patterns
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort14break_patterns17h081dabbdbdf54a32E(ptr align 8 %v.0, i64 %v.1) unnamed_addr #2 !dbg !2752 {
start:
  %i.dbg.spill = alloca i64, align 8
  %pos.dbg.spill = alloca i64, align 8
  %modulus.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %other = alloca i64, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %gen_usize = alloca ptr, align 8
  %seed = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2754, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.declare(metadata ptr %seed, metadata !2757, metadata !DIExpression()), !dbg !2776
  call void @llvm.dbg.declare(metadata ptr %gen_usize, metadata !2759, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2769, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.declare(metadata ptr %other, metadata !2773, metadata !DIExpression()), !dbg !2779
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2780
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2755, metadata !DIExpression()), !dbg !2781
  %_4 = icmp uge i64 %v.1, 8, !dbg !2782
  br i1 %_4, label %bb1, label %bb17, !dbg !2782

bb17:                                             ; preds = %bb6, %start
  ret void, !dbg !2783

bb1:                                              ; preds = %start
  store i64 %v.1, ptr %seed, align 8, !dbg !2784
  store ptr %seed, ptr %gen_usize, align 8, !dbg !2785
; call core::num::<impl usize>::next_power_of_two
  %modulus = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17hd1fd1a9a04fba62bE"(i64 %v.1) #10, !dbg !2786
  store i64 %modulus, ptr %modulus.dbg.spill, align 8, !dbg !2786
  call void @llvm.dbg.declare(metadata ptr %modulus.dbg.spill, metadata !2765, metadata !DIExpression()), !dbg !2787
  %_10 = udiv i64 %v.1, 4, !dbg !2788
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2788
  %_12.0 = extractvalue { i64, i1 } %2, 0, !dbg !2788
  %_12.1 = extractvalue { i64, i1 } %2, 1, !dbg !2788
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2788
  br i1 %3, label %panic, label %bb4, !dbg !2788

bb4:                                              ; preds = %bb1
  store i64 %_12.0, ptr %pos.dbg.spill, align 8, !dbg !2788
  call void @llvm.dbg.declare(metadata ptr %pos.dbg.spill, metadata !2767, metadata !DIExpression()), !dbg !2789
  store i64 0, ptr %_14, align 8, !dbg !2790
  %4 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2790
  store i64 3, ptr %4, align 8, !dbg !2790
  %5 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !2790
  %6 = load i64, ptr %5, align 8, !dbg !2790, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2790
  %8 = load i64, ptr %7, align 8, !dbg !2790, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc9040ef59f55e22cE"(i64 %6, i64 %8) #10, !dbg !2790
  %_13.0 = extractvalue { i64, i64 } %9, 0, !dbg !2790
  %_13.1 = extractvalue { i64, i64 } %9, 1, !dbg !2790
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2790
  store i64 %_13.0, ptr %10, align 8, !dbg !2790
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2790
  store i64 %_13.1, ptr %11, align 8, !dbg !2790
  br label %bb6, !dbg !2791

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_b9d7bdd88a4cebe1be021579a64e0ca8) #11, !dbg !2788
  unreachable, !dbg !2788

bb6:                                              ; preds = %bb16, %bb4
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %12 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5014b81ca02722adE"(ptr align 8 %iter) #10, !dbg !2778
  store { i64, i64 } %12, ptr %_16, align 8, !dbg !2778
  %_18 = load i64, ptr %_16, align 8, !dbg !2778, !range !945, !noundef !24
  %13 = icmp eq i64 %_18, 0, !dbg !2778
  br i1 %13, label %bb17, label %bb8, !dbg !2778

bb8:                                              ; preds = %bb6
  %14 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !2792
  %i = load i64, ptr %14, align 8, !dbg !2792, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2792
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2771, metadata !DIExpression()), !dbg !2793
; call core::slice::sort::break_patterns::{{closure}}
  %_21 = call i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17hce1bf86a87df501fE"(ptr align 8 %gen_usize) #10, !dbg !2794
  %_24.0 = sub i64 %modulus, 1, !dbg !2795
  %_24.1 = icmp ult i64 %modulus, 1, !dbg !2795
  %15 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !2795
  br i1 %15, label %panic1, label %bb11, !dbg !2795

bb11:                                             ; preds = %bb8
  %16 = and i64 %_21, %_24.0, !dbg !2794
  store i64 %16, ptr %other, align 8, !dbg !2794
  %_26 = load i64, ptr %other, align 8, !dbg !2796, !noundef !24
  %_25 = icmp uge i64 %_26, %v.1, !dbg !2796
  br i1 %_25, label %bb12, label %bb14, !dbg !2796

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_6887c178a28e8bbae6e43e59630d3d2c) #11, !dbg !2795
  unreachable, !dbg !2795

bb14:                                             ; preds = %bb13, %bb11
  %_31.0 = sub i64 %_12.0, 1, !dbg !2797
  %_31.1 = icmp ult i64 %_12.0, 1, !dbg !2797
  %17 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !2797
  br i1 %17, label %panic3, label %bb15, !dbg !2797

bb12:                                             ; preds = %bb11
  %18 = load i64, ptr %other, align 8, !dbg !2798, !noundef !24
  %_27.0 = sub i64 %18, %v.1, !dbg !2798
  %_27.1 = icmp ult i64 %18, %v.1, !dbg !2798
  %19 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !2798
  br i1 %19, label %panic2, label %bb13, !dbg !2798

bb13:                                             ; preds = %bb12
  store i64 %_27.0, ptr %other, align 8, !dbg !2798
  br label %bb14, !dbg !2799

panic2:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_9af97c80b26b0bfce6c179afa862315a) #11, !dbg !2798
  unreachable, !dbg !2798

bb15:                                             ; preds = %bb14
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_31.0, i64 %i), !dbg !2797
  %_32.0 = extractvalue { i64, i1 } %20, 0, !dbg !2797
  %_32.1 = extractvalue { i64, i1 } %20, 1, !dbg !2797
  %21 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !2797
  br i1 %21, label %panic4, label %bb16, !dbg !2797

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_7376a1d63f68c7177f89fcd865fb0650) #11, !dbg !2797
  unreachable, !dbg !2797

bb16:                                             ; preds = %bb15
  %_33 = load i64, ptr %other, align 8, !dbg !2800, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h84f021ce3b5c8cf1E"(ptr align 8 %v.0, i64 %v.1, i64 %_32.0, i64 %_33, ptr align 8 @alloc_56f843af5916e171fa1470abb31fd59a) #10, !dbg !2801
  br label %bb6, !dbg !2801

panic4:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_7376a1d63f68c7177f89fcd865fb0650) #11, !dbg !2797
  unreachable, !dbg !2797

bb9:                                              ; No predecessors!
  unreachable, !dbg !2778
}

; core::slice::sort::break_patterns::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17hce1bf86a87df501fE"(ptr align 8 %_1) unnamed_addr #0 !dbg !2802 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  %r1 = alloca i64, align 8
  %r = alloca i32, align 4
  %_0 = alloca i64, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2807, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2812
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2808, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.declare(metadata ptr %r1, metadata !2810, metadata !DIExpression()), !dbg !2814
  br i1 false, label %bb1, label %bb5, !dbg !2815

bb5:                                              ; preds = %start
  %_36 = load ptr, ptr %_1, align 8, !dbg !2816, !nonnull !24, !align !386, !noundef !24
  %_19 = load i64, ptr %_36, align 8, !dbg !2816, !noundef !24
  store i64 %_19, ptr %r1, align 8, !dbg !2816
  %_21 = load i64, ptr %r1, align 8, !dbg !2817, !noundef !24
  %_20 = shl i64 %_21, 13, !dbg !2817
  %0 = load i64, ptr %r1, align 8, !dbg !2818, !noundef !24
  %1 = xor i64 %0, %_20, !dbg !2818
  store i64 %1, ptr %r1, align 8, !dbg !2818
  %_25 = load i64, ptr %r1, align 8, !dbg !2819, !noundef !24
  %_24 = lshr i64 %_25, 7, !dbg !2819
  %2 = load i64, ptr %r1, align 8, !dbg !2820, !noundef !24
  %3 = xor i64 %2, %_24, !dbg !2820
  store i64 %3, ptr %r1, align 8, !dbg !2820
  %_29 = load i64, ptr %r1, align 8, !dbg !2821, !noundef !24
  %_28 = shl i64 %_29, 17, !dbg !2821
  %4 = load i64, ptr %r1, align 8, !dbg !2822, !noundef !24
  %5 = xor i64 %4, %_28, !dbg !2822
  store i64 %5, ptr %r1, align 8, !dbg !2822
  %_32 = load i64, ptr %r1, align 8, !dbg !2823, !noundef !24
  %_37 = load ptr, ptr %_1, align 8, !dbg !2824, !nonnull !24, !align !386, !noundef !24
  store i64 %_32, ptr %_37, align 8, !dbg !2824
  %_38 = load ptr, ptr %_1, align 8, !dbg !2825, !nonnull !24, !align !386, !noundef !24
  %6 = load i64, ptr %_38, align 8, !dbg !2825, !noundef !24
  store i64 %6, ptr %_0, align 8, !dbg !2825
  br label %bb9, !dbg !2826

bb1:                                              ; preds = %start
  %_33 = load ptr, ptr %_1, align 8, !dbg !2827, !nonnull !24, !align !386, !noundef !24
  %_4 = load i64, ptr %_33, align 8, !dbg !2827, !noundef !24
  %7 = trunc i64 %_4 to i32, !dbg !2827
  store i32 %7, ptr %r, align 4, !dbg !2827
  %_6 = load i32, ptr %r, align 4, !dbg !2828, !noundef !24
  %_5 = shl i32 %_6, 13, !dbg !2828
  %8 = load i32, ptr %r, align 4, !dbg !2829, !noundef !24
  %9 = xor i32 %8, %_5, !dbg !2829
  store i32 %9, ptr %r, align 4, !dbg !2829
  %_10 = load i32, ptr %r, align 4, !dbg !2830, !noundef !24
  %_9 = lshr i32 %_10, 17, !dbg !2830
  %10 = load i32, ptr %r, align 4, !dbg !2831, !noundef !24
  %11 = xor i32 %10, %_9, !dbg !2831
  store i32 %11, ptr %r, align 4, !dbg !2831
  %_14 = load i32, ptr %r, align 4, !dbg !2832, !noundef !24
  %_13 = shl i32 %_14, 5, !dbg !2832
  %12 = load i32, ptr %r, align 4, !dbg !2833, !noundef !24
  %13 = xor i32 %12, %_13, !dbg !2833
  store i32 %13, ptr %r, align 4, !dbg !2833
  %_17 = load i32, ptr %r, align 4, !dbg !2834, !noundef !24
  %_34 = load ptr, ptr %_1, align 8, !dbg !2835, !nonnull !24, !align !386, !noundef !24
  %14 = zext i32 %_17 to i64, !dbg !2835
  store i64 %14, ptr %_34, align 8, !dbg !2835
  %_35 = load ptr, ptr %_1, align 8, !dbg !2836, !nonnull !24, !align !386, !noundef !24
  %15 = load i64, ptr %_35, align 8, !dbg !2836, !noundef !24
  store i64 %15, ptr %_0, align 8, !dbg !2836
  br label %bb9, !dbg !2826

bb9:                                              ; preds = %bb1, %bb5
  %16 = load i64, ptr %_0, align 8, !dbg !2837, !noundef !24
  ret i64 %16, !dbg !2837
}

; core::slice::sort::partition_equal
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort15partition_equal17h25126ee6119f986fE(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2838 {
start:
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %self.dbg.spill.i16 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %pivot.dbg.spill8 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_40 = alloca { ptr, ptr }, align 8
  %_30 = alloca { ptr, ptr }, align 8
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_13 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_7 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_0 = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2842, metadata !DIExpression()), !dbg !2864
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2843, metadata !DIExpression()), !dbg !2865
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2844, metadata !DIExpression()), !dbg !2866
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2850, metadata !DIExpression()), !dbg !2867
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !2852, metadata !DIExpression()), !dbg !2868
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2858, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2860, metadata !DIExpression()), !dbg !2870
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h84f021ce3b5c8cf1E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_872135f360078c5f4e607b0df48b06b2) #10, !dbg !2871
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h348f60bd3119c438E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_7, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_d3188ee70710b2b806e6c6f4ab6e8fd0) #10, !dbg !2872
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !2873
  %pivot.0 = load ptr, ptr %2, align 8, !dbg !2873, !nonnull !24, !align !386, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !2873
  %pivot.1 = load i64, ptr %3, align 8, !dbg !2873, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !2873
  store ptr %pivot.0, ptr %4, align 8, !dbg !2873
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !2873
  store i64 %pivot.1, ptr %5, align 8, !dbg !2873
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !2845, metadata !DIExpression()), !dbg !2874
  %6 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !2875
  %7 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 0, !dbg !2875
  %v.02 = load ptr, ptr %7, align 8, !dbg !2875, !nonnull !24, !align !386, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 1, !dbg !2875
  %v.13 = load i64, ptr %8, align 8, !dbg !2875, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !2875
  store ptr %v.02, ptr %9, align 8, !dbg !2875
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !2875
  store i64 %v.13, ptr %10, align 8, !dbg !2875
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !2847, metadata !DIExpression()), !dbg !2876
  %_11 = icmp ult i64 0, %pivot.1, !dbg !2877
  %11 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !2877
  br i1 %11, label %bb3, label %panic, !dbg !2877

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !2878
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !2878
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !2848, metadata !DIExpression()), !dbg !2879
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb4cf770cf4557c59E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_13, ptr %pivot5) #10, !dbg !2880
  call void @llvm.dbg.declare(metadata ptr %_13, metadata !865, metadata !DIExpression()), !dbg !2881
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_13, i64 24, i1 false), !dbg !2883
  store ptr %tmp, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !2440, metadata !DIExpression()), !dbg !2884
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !2886
  %12 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !2886
  store ptr %pivot5, ptr %12, align 8, !dbg !2886
  store ptr %tmp, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !2440, metadata !DIExpression()), !dbg !2887
  store ptr %tmp, ptr %pivot.dbg.spill8, align 8, !dbg !2889
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill8, metadata !2854, metadata !DIExpression()), !dbg !2890
  store i64 %v.13, ptr %len.dbg.spill, align 8, !dbg !2891
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2856, metadata !DIExpression()), !dbg !2892
  %13 = icmp eq i64 %v.13, 0, !dbg !2893
  br i1 %13, label %bb8, label %bb9, !dbg !2893

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 0, i64 %pivot.1, ptr align 8 @alloc_73c27161068a06f4d08984e776740044) #11, !dbg !2877
  unreachable, !dbg !2877

bb8:                                              ; preds = %bb3
  store i64 0, ptr %_0, align 8, !dbg !2894
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h87bd16592270f38eE"(ptr align 8 %_pivot_guard) #10, !dbg !2895
  br label %bb30, !dbg !2895

bb9:                                              ; preds = %bb3
  store i64 0, ptr %l, align 8, !dbg !2896
  store i64 %v.13, ptr %r, align 8, !dbg !2897
  br label %bb10, !dbg !2898

bb30:                                             ; preds = %bb29, %bb8
  %14 = load i64, ptr %_0, align 8, !dbg !2899, !noundef !24
  ret i64 %14, !dbg !2899

bb10:                                             ; preds = %bb28, %bb15, %bb9
  %_27 = load i64, ptr %l, align 8, !dbg !2900, !noundef !24
  %_28 = load i64, ptr %r, align 8, !dbg !2901, !noundef !24
  %_26 = icmp ult i64 %_27, %_28, !dbg !2900
  br i1 %_26, label %bb11, label %bb16, !dbg !2900

bb16:                                             ; preds = %bb18, %bb11, %bb10
  %15 = load i64, ptr %r, align 8, !dbg !2902, !noundef !24
  %_35.0 = sub i64 %15, 1, !dbg !2902
  %_35.1 = icmp ult i64 %15, 1, !dbg !2902
  %16 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !2902
  br i1 %16, label %panic10, label %bb17, !dbg !2902

bb11:                                             ; preds = %bb10
  %_33 = load i64, ptr %l, align 8, !dbg !2903, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_31 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %v.02, i64 %v.13, i64 %_33) #10, !dbg !2904
  store ptr %tmp, ptr %_30, align 8, !dbg !2905
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_30, i32 0, i32 1, !dbg !2905
  store ptr %_31, ptr %17, align 8, !dbg !2905
  %18 = getelementptr inbounds { ptr, ptr }, ptr %_30, i32 0, i32 0, !dbg !2905
  %19 = load ptr, ptr %18, align 8, !dbg !2905, !nonnull !24, !align !386, !noundef !24
  %20 = getelementptr inbounds { ptr, ptr }, ptr %_30, i32 0, i32 1, !dbg !2905
  %21 = load ptr, ptr %20, align 8, !dbg !2905, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_29 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %19, ptr align 8 %21) #10, !dbg !2905
  br i1 %_29, label %bb16, label %bb14, !dbg !2905

bb14:                                             ; preds = %bb11
  %22 = load i64, ptr %l, align 8, !dbg !2906, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !2906
  %_34.0 = extractvalue { i64, i1 } %23, 0, !dbg !2906
  %_34.1 = extractvalue { i64, i1 } %23, 1, !dbg !2906
  %24 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !2906
  br i1 %24, label %panic9, label %bb15, !dbg !2906

bb15:                                             ; preds = %bb14
  store i64 %_34.0, ptr %l, align 8, !dbg !2906
  br label %bb10, !dbg !2907

panic9:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_e59f723377c5083a3e78f726d32b50b2) #11, !dbg !2906
  unreachable, !dbg !2906

bb17:                                             ; preds = %bb16
  store i64 %_35.0, ptr %r, align 8, !dbg !2902
  %_37 = load i64, ptr %l, align 8, !dbg !2908, !noundef !24
  %_38 = load i64, ptr %r, align 8, !dbg !2909, !noundef !24
  %_36 = icmp uge i64 %_37, %_38, !dbg !2908
  br i1 %_36, label %bb21, label %bb18, !dbg !2908

panic10:                                          ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_5b54b074511e09f70c97b06c5d7a830d) #11, !dbg !2902
  unreachable, !dbg !2902

bb18:                                             ; preds = %bb17
  %_43 = load i64, ptr %r, align 8, !dbg !2910, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_41 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %v.02, i64 %v.13, i64 %_43) #10, !dbg !2911
  store ptr %tmp, ptr %_40, align 8, !dbg !2912
  %25 = getelementptr inbounds { ptr, ptr }, ptr %_40, i32 0, i32 1, !dbg !2912
  store ptr %_41, ptr %25, align 8, !dbg !2912
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_40, i32 0, i32 0, !dbg !2912
  %27 = load ptr, ptr %26, align 8, !dbg !2912, !nonnull !24, !align !386, !noundef !24
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_40, i32 0, i32 1, !dbg !2912
  %29 = load ptr, ptr %28, align 8, !dbg !2912, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_39 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %27, ptr align 8 %29) #10, !dbg !2912
  br i1 %_39, label %bb16, label %bb21, !dbg !2912

bb21:                                             ; preds = %bb18, %bb17
  %_45 = load i64, ptr %l, align 8, !dbg !2913, !noundef !24
  %_46 = load i64, ptr %r, align 8, !dbg !2914, !noundef !24
  %_44 = icmp uge i64 %_45, %_46, !dbg !2913
  br i1 %_44, label %bb22, label %bb23, !dbg !2913

bb23:                                             ; preds = %bb21
  store ptr %v.02, ptr %self.dbg.spill.i16, align 8
  %30 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i16, i32 0, i32 1
  store i64 %v.13, ptr %30, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i16, metadata !2142, metadata !DIExpression()), !dbg !2915
  store ptr %v.02, ptr %ptr.dbg.spill, align 8, !dbg !2917
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2862, metadata !DIExpression()), !dbg !2918
  %_50 = load i64, ptr %l, align 8, !dbg !2919, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !173, metadata !DIExpression()), !dbg !2920
  store i64 %_50, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !179, metadata !DIExpression()), !dbg !2922
  %_0.i15 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_50, !dbg !2923
  %_52 = load i64, ptr %r, align 8, !dbg !2924, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !173, metadata !DIExpression()), !dbg !2925
  store i64 %_52, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !179, metadata !DIExpression()), !dbg !2927
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_52, !dbg !2928
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2ee7e59aa3cf3136E(ptr %_0.i15, ptr %_0.i) #10, !dbg !2929
  %31 = load i64, ptr %l, align 8, !dbg !2930, !noundef !24
  %32 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %31, i64 1), !dbg !2930
  %_53.0 = extractvalue { i64, i1 } %32, 0, !dbg !2930
  %_53.1 = extractvalue { i64, i1 } %32, 1, !dbg !2930
  %33 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !2930
  br i1 %33, label %panic11, label %bb28, !dbg !2930

bb22:                                             ; preds = %bb21
  %_54 = load i64, ptr %l, align 8, !dbg !2931, !noundef !24
  %34 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_54, i64 1), !dbg !2931
  %_55.0 = extractvalue { i64, i1 } %34, 0, !dbg !2931
  %_55.1 = extractvalue { i64, i1 } %34, 1, !dbg !2931
  %35 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2931
  br i1 %35, label %panic12, label %bb29, !dbg !2931

bb28:                                             ; preds = %bb23
  store i64 %_53.0, ptr %l, align 8, !dbg !2930
  br label %bb10, !dbg !2898

panic11:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_dd4bd51df64166f92e8437af026ac54b) #11, !dbg !2930
  unreachable, !dbg !2930

bb29:                                             ; preds = %bb22
  store i64 %_55.0, ptr %_0, align 8, !dbg !2931
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h87bd16592270f38eE"(ptr align 8 %_pivot_guard) #10, !dbg !2895
  br label %bb30, !dbg !2895

panic12:                                          ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_bc20396b6ce9b5af445341e61f64076e) #11, !dbg !2931
  unreachable, !dbg !2931
}

; core::slice::sort::partition_in_blocks
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks17h5bd4b73e148873e2E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2932 {
start:
  %small.dbg.spill.i224 = alloca i8, align 1
  %small.dbg.spill.i222 = alloca i8, align 1
  %small.dbg.spill.i220 = alloca i8, align 1
  %small.dbg.spill.i218 = alloca i8, align 1
  %small.dbg.spill.i216 = alloca i8, align 1
  %small.dbg.spill.i214 = alloca i8, align 1
  %small.dbg.spill.i212 = alloca i8, align 1
  %small.dbg.spill.i210 = alloca i8, align 1
  %small.dbg.spill.i208 = alloca i8, align 1
  %small.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i206 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i205 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i204 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i203 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i202 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i201 = alloca { ptr, i64 }, align 8
  %addr.dbg.spill.i.i199 = alloca i64, align 8
  %addr.dbg.spill.i.i197 = alloca i64, align 8
  %addr.dbg.spill.i.i195 = alloca i64, align 8
  %addr.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i191 = alloca i64, align 8
  %self.dbg.spill.i192 = alloca ptr, align 8
  %count.dbg.spill.i188 = alloca i64, align 8
  %self.dbg.spill.i189 = alloca ptr, align 8
  %count.dbg.spill.i185 = alloca i64, align 8
  %self.dbg.spill.i186 = alloca ptr, align 8
  %count.dbg.spill.i182 = alloca i64, align 8
  %self.dbg.spill.i183 = alloca ptr, align 8
  %count.dbg.spill.i179 = alloca i64, align 8
  %self.dbg.spill.i180 = alloca ptr, align 8
  %count.dbg.spill.i176 = alloca i64, align 8
  %self.dbg.spill.i177 = alloca ptr, align 8
  %count.dbg.spill.i173 = alloca i64, align 8
  %self.dbg.spill.i174 = alloca ptr, align 8
  %count.dbg.spill.i170 = alloca i64, align 8
  %self.dbg.spill.i171 = alloca ptr, align 8
  %count.dbg.spill.i167 = alloca i64, align 8
  %self.dbg.spill.i168 = alloca ptr, align 8
  %count.dbg.spill.i164 = alloca i64, align 8
  %self.dbg.spill.i165 = alloca ptr, align 8
  %count.dbg.spill.i161 = alloca i64, align 8
  %self.dbg.spill.i162 = alloca ptr, align 8
  %count.dbg.spill.i157 = alloca i64, align 8
  %self.dbg.spill.i158 = alloca ptr, align 8
  %_0.i159 = alloca ptr, align 8
  %count.dbg.spill.i153 = alloca i64, align 8
  %self.dbg.spill.i154 = alloca ptr, align 8
  %_0.i155 = alloca ptr, align 8
  %count.dbg.spill.i148 = alloca i64, align 8
  %self.dbg.spill.i149 = alloca ptr, align 8
  %_0.i150 = alloca ptr, align 8
  %count.dbg.spill.i143 = alloca i64, align 8
  %self.dbg.spill.i144 = alloca ptr, align 8
  %_0.i145 = alloca ptr, align 8
  %count.dbg.spill.i138 = alloca i64, align 8
  %self.dbg.spill.i139 = alloca ptr, align 8
  %_0.i140 = alloca ptr, align 8
  %count.dbg.spill.i133 = alloca i64, align 8
  %self.dbg.spill.i134 = alloca ptr, align 8
  %_0.i135 = alloca ptr, align 8
  %count.dbg.spill.i129 = alloca i64, align 8
  %self.dbg.spill.i130 = alloca ptr, align 8
  %_0.i131 = alloca ptr, align 8
  %count.dbg.spill.i125 = alloca i64, align 8
  %self.dbg.spill.i126 = alloca ptr, align 8
  %_0.i127 = alloca ptr, align 8
  %count.dbg.spill.i120 = alloca i64, align 8
  %self.dbg.spill.i121 = alloca ptr, align 8
  %_0.i122 = alloca ptr, align 8
  %count.dbg.spill.i115 = alloca i64, align 8
  %self.dbg.spill.i116 = alloca ptr, align 8
  %_0.i117 = alloca ptr, align 8
  %count.dbg.spill.i111 = alloca i64, align 8
  %self.dbg.spill.i112 = alloca ptr, align 8
  %_0.i113 = alloca ptr, align 8
  %count.dbg.spill.i108 = alloca i64, align 8
  %self.dbg.spill.i109 = alloca ptr, align 8
  %count.dbg.spill.i105 = alloca i64, align 8
  %self.dbg.spill.i106 = alloca ptr, align 8
  %count.dbg.spill.i102 = alloca i64, align 8
  %self.dbg.spill.i103 = alloca ptr, align 8
  %count.dbg.spill.i99 = alloca i64, align 8
  %self.dbg.spill.i100 = alloca ptr, align 8
  %count.dbg.spill.i96 = alloca i64, align 8
  %self.dbg.spill.i97 = alloca ptr, align 8
  %count.dbg.spill.i93 = alloca i64, align 8
  %self.dbg.spill.i94 = alloca ptr, align 8
  %count.dbg.spill.i90 = alloca i64, align 8
  %self.dbg.spill.i91 = alloca ptr, align 8
  %count.dbg.spill.i87 = alloca i64, align 8
  %self.dbg.spill.i88 = alloca ptr, align 8
  %count.dbg.spill.i84 = alloca i64, align 8
  %self.dbg.spill.i85 = alloca ptr, align 8
  %count.dbg.spill.i81 = alloca i64, align 8
  %self.dbg.spill.i82 = alloca ptr, align 8
  %count.dbg.spill.i78 = alloca i64, align 8
  %self.dbg.spill.i79 = alloca ptr, align 8
  %count.dbg.spill.i75 = alloca i64, align 8
  %self.dbg.spill.i76 = alloca ptr, align 8
  %count.dbg.spill.i72 = alloca i64, align 8
  %self.dbg.spill.i73 = alloca ptr, align 8
  %count.dbg.spill.i69 = alloca i64, align 8
  %self.dbg.spill.i70 = alloca ptr, align 8
  %count.dbg.spill.i67 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %_0.i66 = alloca i8, align 1
  %_0.i = alloca i8, align 1
  %this.dbg.spill.i64 = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i54 = alloca i64, align 8
  %dst.dbg.spill.i55 = alloca ptr, align 8
  %src.dbg.spill.i56 = alloca ptr, align 8
  %count.dbg.spill.i44 = alloca i64, align 8
  %dst.dbg.spill.i45 = alloca ptr, align 8
  %src.dbg.spill.i46 = alloca ptr, align 8
  %count.dbg.spill.i34 = alloca i64, align 8
  %dst.dbg.spill.i35 = alloca ptr, align 8
  %src.dbg.spill.i36 = alloca ptr, align 8
  %count.dbg.spill.i31 = alloca i64, align 8
  %dst.dbg.spill.i32 = alloca ptr, align 8
  %src.dbg.spill.i33 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %dst.dbg.spill.i28 = alloca ptr, align 8
  %src.dbg.spill.i29 = alloca ptr, align 8
  %_6.i30 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %dst.dbg.spill.i24 = alloca ptr, align 8
  %src.dbg.spill.i25 = alloca ptr, align 8
  %_6.i26 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %dst.dbg.spill.i20 = alloca ptr, align 8
  %src.dbg.spill.i21 = alloca ptr, align 8
  %_6.i22 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %i.dbg.spill18 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %right_val.dbg.spill14 = alloca ptr, align 8
  %left_val.dbg.spill12 = alloca ptr, align 8
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %is_done.dbg.spill = alloca i8, align 1
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_251 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind4 = alloca i8, align 1
  %_240 = alloca i64, align 8
  %_238 = alloca { ptr, ptr }, align 8
  %_217 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind = alloca i8, align 1
  %_206 = alloca i64, align 8
  %_204 = alloca { ptr, ptr }, align 8
  %_183 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_142 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_140 = alloca { i64, i64 }, align 8
  %tmp = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_111 = alloca { ptr, ptr }, align 8
  %_101 = alloca { i64, i64 }, align 8
  %iter2 = alloca { i64, i64 }, align 8
  %_98 = alloca { i64, i64 }, align 8
  %elem1 = alloca ptr, align 8
  %_85 = alloca { ptr, ptr }, align 8
  %_76 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_73 = alloca { i64, i64 }, align 8
  %elem = alloca ptr, align 8
  %rem = alloca i64, align 8
  %offsets_r = alloca [128 x i8], align 1
  %end_r = alloca ptr, align 8
  %start_r = alloca ptr, align 8
  %block_r = alloca i64, align 8
  %r = alloca ptr, align 8
  %offsets_l = alloca [128 x i8], align 1
  %end_l = alloca ptr, align 8
  %start_l = alloca ptr, align 8
  %block_l = alloca i64, align 8
  %l = alloca ptr, align 8
  %_0 = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2936, metadata !DIExpression()), !dbg !3000
  store ptr %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2937, metadata !DIExpression()), !dbg !3001
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2938, metadata !DIExpression()), !dbg !3002
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2939, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.declare(metadata ptr %block_l, metadata !2941, metadata !DIExpression()), !dbg !3004
  call void @llvm.dbg.declare(metadata ptr %start_l, metadata !2943, metadata !DIExpression()), !dbg !3005
  call void @llvm.dbg.declare(metadata ptr %end_l, metadata !2945, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.declare(metadata ptr %offsets_l, metadata !2947, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2952, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.declare(metadata ptr %block_r, metadata !2954, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.declare(metadata ptr %start_r, metadata !2956, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.declare(metadata ptr %end_r, metadata !2958, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.declare(metadata ptr %offsets_r, metadata !2960, metadata !DIExpression()), !dbg !3012
  call void @llvm.dbg.declare(metadata ptr %rem, metadata !2964, metadata !DIExpression()), !dbg !3013
  call void @llvm.dbg.declare(metadata ptr %elem, metadata !2966, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2968, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.declare(metadata ptr %elem1, metadata !2972, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.declare(metadata ptr %iter2, metadata !2974, metadata !DIExpression()), !dbg !3017
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2980, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.declare(metadata ptr %iter3, metadata !2982, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.declare(metadata ptr %kind, metadata !2990, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.declare(metadata ptr %kind4, metadata !2997, metadata !DIExpression()), !dbg !3021
  store ptr %v.0, ptr %self.dbg.spill.i206, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i206, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i206, metadata !2142, metadata !DIExpression()), !dbg !3022
  store ptr %v.0, ptr %l, align 8, !dbg !3024
  store i64 128, ptr %block_l, align 8, !dbg !3025
  store i64 0, ptr %addr.dbg.spill.i.i199, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i199, metadata !3026, metadata !DIExpression()), !dbg !3031
; call core::ptr::metadata::from_raw_parts_mut
  %_0.i200 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb76f602118a8444aE(ptr null) #10, !dbg !3037
  store ptr %_0.i200, ptr %start_l, align 8, !dbg !3038
  store i64 0, ptr %addr.dbg.spill.i.i197, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i197, metadata !3026, metadata !DIExpression()), !dbg !3039
; call core::ptr::metadata::from_raw_parts_mut
  %_0.i198 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb76f602118a8444aE(ptr null) #10, !dbg !3042
  store ptr %_0.i198, ptr %end_l, align 8, !dbg !3043
  %3 = load i8, ptr %_0.i66, align 1, !dbg !3044
  %4 = getelementptr inbounds [128 x i8], ptr %offsets_l, i64 0, i64 0, !dbg !3050
  call void @llvm.memset.p0.i64(ptr align 1 %4, i8 %3, i64 128, i1 false), !dbg !3050
  %_11 = load ptr, ptr %l, align 8, !dbg !3051, !noundef !24
  store ptr %_11, ptr %self.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i109, metadata !173, metadata !DIExpression()), !dbg !3052
  store i64 %v.1, ptr %count.dbg.spill.i108, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i108, metadata !179, metadata !DIExpression()), !dbg !3054
  %_0.i110 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %v.1, !dbg !3055
  store ptr %_0.i110, ptr %r, align 8, !dbg !3051
  store i64 128, ptr %block_r, align 8, !dbg !3056
  store i64 0, ptr %addr.dbg.spill.i.i195, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i195, metadata !3026, metadata !DIExpression()), !dbg !3057
; call core::ptr::metadata::from_raw_parts_mut
  %_0.i196 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb76f602118a8444aE(ptr null) #10, !dbg !3060
  store ptr %_0.i196, ptr %start_r, align 8, !dbg !3061
  store i64 0, ptr %addr.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i, metadata !3026, metadata !DIExpression()), !dbg !3062
; call core::ptr::metadata::from_raw_parts_mut
  %_0.i194 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb76f602118a8444aE(ptr null) #10, !dbg !3065
  store ptr %_0.i194, ptr %end_r, align 8, !dbg !3066
  %5 = load i8, ptr %_0.i, align 1, !dbg !3067
  %6 = getelementptr inbounds [128 x i8], ptr %offsets_r, i64 0, i64 0, !dbg !3069
  call void @llvm.memset.p0.i64(ptr align 1 %6, i8 %5, i64 128, i1 false), !dbg !3069
  br label %bb9, !dbg !3070

bb9:                                              ; preds = %bb99, %start
  %_21 = load ptr, ptr %l, align 8, !dbg !3071, !noundef !24
  %_22 = load ptr, ptr %r, align 8, !dbg !3072, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_20 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E(ptr %_21, ptr %_22) #10, !dbg !3073
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 128), !dbg !3074
  %_24.0 = extractvalue { i64, i1 } %7, 0, !dbg !3074
  %_24.1 = extractvalue { i64, i1 } %7, 1, !dbg !3074
  %8 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !3074
  br i1 %8, label %panic, label %bb11, !dbg !3074

bb11:                                             ; preds = %bb9
  %is_done = icmp ule i64 %_20, %_24.0, !dbg !3073
  %9 = zext i1 %is_done to i8, !dbg !3073
  store i8 %9, ptr %is_done.dbg.spill, align 1, !dbg !3073
  call void @llvm.dbg.declare(metadata ptr %is_done.dbg.spill, metadata !2962, metadata !DIExpression()), !dbg !3075
  br i1 %is_done, label %bb12, label %bb33, !dbg !3076

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_3e649b28ea51a3db7a560c10123c739c) #11, !dbg !3074
  unreachable, !dbg !3074

bb33:                                             ; preds = %bb31, %bb28, %bb11
  %_65 = load ptr, ptr %start_l, align 8, !dbg !3077, !noundef !24
  %_66 = load ptr, ptr %end_l, align 8, !dbg !3078, !noundef !24
  %_64 = icmp eq ptr %_65, %_66, !dbg !3077
  br i1 %_64, label %bb34, label %bb44, !dbg !3077

bb12:                                             ; preds = %bb11
  %_26 = load ptr, ptr %l, align 8, !dbg !3079, !noundef !24
  %_27 = load ptr, ptr %r, align 8, !dbg !3080, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %10 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E(ptr %_26, ptr %_27) #10, !dbg !3081
  store i64 %10, ptr %rem, align 8, !dbg !3081
  %_29 = load ptr, ptr %start_l, align 8, !dbg !3082, !noundef !24
  %_30 = load ptr, ptr %end_l, align 8, !dbg !3083, !noundef !24
  %_28 = icmp ult ptr %_29, %_30, !dbg !3082
  br i1 %_28, label %bb15, label %bb14, !dbg !3082

bb14:                                             ; preds = %bb12
  %_32 = load ptr, ptr %start_r, align 8, !dbg !3084, !noundef !24
  %_33 = load ptr, ptr %end_r, align 8, !dbg !3085, !noundef !24
  %_31 = icmp ult ptr %_32, %_33, !dbg !3084
  br i1 %_31, label %bb15, label %bb17, !dbg !3084

bb15:                                             ; preds = %bb14, %bb12
  %11 = load i64, ptr %rem, align 8, !dbg !3086, !noundef !24
  %_34.0 = sub i64 %11, 128, !dbg !3086
  %_34.1 = icmp ult i64 %11, 128, !dbg !3086
  %12 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !3086
  br i1 %12, label %panic5, label %bb16, !dbg !3086

bb17:                                             ; preds = %bb16, %bb14
  %_36 = load ptr, ptr %start_l, align 8, !dbg !3087, !noundef !24
  %_37 = load ptr, ptr %end_l, align 8, !dbg !3088, !noundef !24
  %_35 = icmp ult ptr %_36, %_37, !dbg !3087
  br i1 %_35, label %bb18, label %bb19, !dbg !3087

bb16:                                             ; preds = %bb15
  store i64 %_34.0, ptr %rem, align 8, !dbg !3086
  br label %bb17, !dbg !3089

panic5:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_f626c7ac081a727beb7e10f97fdb919e) #11, !dbg !3086
  unreachable, !dbg !3086

bb19:                                             ; preds = %bb17
  %_40 = load ptr, ptr %start_r, align 8, !dbg !3090, !noundef !24
  %_41 = load ptr, ptr %end_r, align 8, !dbg !3091, !noundef !24
  %_39 = icmp ult ptr %_40, %_41, !dbg !3090
  br i1 %_39, label %bb20, label %bb21, !dbg !3090

bb18:                                             ; preds = %bb17
  %_38 = load i64, ptr %rem, align 8, !dbg !3092, !noundef !24
  store i64 %_38, ptr %block_r, align 8, !dbg !3093
  br label %bb24, !dbg !3094

bb21:                                             ; preds = %bb19
  %_43 = load i64, ptr %rem, align 8, !dbg !3095, !noundef !24
  %13 = udiv i64 %_43, 2, !dbg !3096
  store i64 %13, ptr %block_l, align 8, !dbg !3096
  %_45 = load i64, ptr %rem, align 8, !dbg !3097, !noundef !24
  %_46 = load i64, ptr %block_l, align 8, !dbg !3098, !noundef !24
  %_47.0 = sub i64 %_45, %_46, !dbg !3097
  %_47.1 = icmp ult i64 %_45, %_46, !dbg !3097
  %14 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false), !dbg !3097
  br i1 %14, label %panic6, label %bb23, !dbg !3097

bb20:                                             ; preds = %bb19
  %_42 = load i64, ptr %rem, align 8, !dbg !3099, !noundef !24
  store i64 %_42, ptr %block_l, align 8, !dbg !3100
  br label %bb24, !dbg !3101

bb23:                                             ; preds = %bb21
  store i64 %_47.0, ptr %block_r, align 8, !dbg !3102
  br label %bb24, !dbg !3101

panic6:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_10531e9362860d55eaf5806724f0c125) #11, !dbg !3097
  unreachable, !dbg !3097

bb24:                                             ; preds = %bb18, %bb20, %bb23
  br i1 true, label %bb25, label %bb28, !dbg !3103

bb28:                                             ; preds = %bb26, %bb24
  br i1 true, label %bb29, label %bb33, !dbg !3104

bb25:                                             ; preds = %bb24
  %_50 = load i64, ptr %block_l, align 8, !dbg !3105, !noundef !24
  %_49 = icmp ule i64 %_50, 128, !dbg !3105
  br i1 %_49, label %bb26, label %bb27, !dbg !3105

bb27:                                             ; preds = %bb26, %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_8221bdf38a3766feb9723f333c95dc9e, i64 54, ptr align 8 @alloc_097a940721e6a8baa481d3729fc9518a) #11, !dbg !3103
  unreachable, !dbg !3103

bb26:                                             ; preds = %bb25
  %_52 = load i64, ptr %block_r, align 8, !dbg !3106, !noundef !24
  %_51 = icmp ule i64 %_52, 128, !dbg !3106
  br i1 %_51, label %bb28, label %bb27, !dbg !3106

bb29:                                             ; preds = %bb28
  %_57 = load ptr, ptr %l, align 8, !dbg !3107, !noundef !24
  %_58 = load ptr, ptr %r, align 8, !dbg !3108, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_56 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E(ptr %_57, ptr %_58) #10, !dbg !3109
  %_60 = load i64, ptr %block_l, align 8, !dbg !3110, !noundef !24
  %_61 = load i64, ptr %block_r, align 8, !dbg !3111, !noundef !24
  %15 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_60, i64 %_61), !dbg !3110
  %_62.0 = extractvalue { i64, i1 } %15, 0, !dbg !3110
  %_62.1 = extractvalue { i64, i1 } %15, 1, !dbg !3110
  %16 = call i1 @llvm.expect.i1(i1 %_62.1, i1 false), !dbg !3110
  br i1 %16, label %panic7, label %bb31, !dbg !3110

bb31:                                             ; preds = %bb29
  %_55 = icmp eq i64 %_56, %_62.0, !dbg !3109
  br i1 %_55, label %bb33, label %bb32, !dbg !3109

panic7:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_f0e1f21121e28b58fdd54bf6051a1f38) #11, !dbg !3110
  unreachable, !dbg !3110

bb32:                                             ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_a3f9d5911d83d2dfd6ee66814bbe6049, i64 50, ptr align 8 @alloc_5c9936d8328a0f5d89d90870d6127f61) #11, !dbg !3104
  unreachable, !dbg !3104

bb44:                                             ; preds = %bb37, %bb33
  %_90 = load ptr, ptr %start_r, align 8, !dbg !3112, !noundef !24
  %_91 = load ptr, ptr %end_r, align 8, !dbg !3113, !noundef !24
  %_89 = icmp eq ptr %_90, %_91, !dbg !3112
  br i1 %_89, label %bb45, label %bb54, !dbg !3112

bb34:                                             ; preds = %bb33
  store ptr %offsets_l, ptr %this.dbg.spill.i64, align 8
  %17 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i64, i32 0, i32 1
  store i64 128, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i64, metadata !3114, metadata !DIExpression()), !dbg !3125
  store ptr %offsets_l, ptr %self.dbg.spill.i201, align 8
  %18 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i201, i32 0, i32 1
  store i64 128, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i201, metadata !3127, metadata !DIExpression()), !dbg !3132
  store ptr %offsets_l, ptr %start_l, align 8, !dbg !3134
  %_70 = load ptr, ptr %start_l, align 8, !dbg !3135, !noundef !24
  store ptr %_70, ptr %end_l, align 8, !dbg !3136
  %19 = load ptr, ptr %l, align 8, !dbg !3137, !noundef !24
  store ptr %19, ptr %elem, align 8, !dbg !3137
  %_74 = load i64, ptr %block_l, align 8, !dbg !3138, !noundef !24
  store i64 0, ptr %_73, align 8, !dbg !3139
  %20 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 1, !dbg !3139
  store i64 %_74, ptr %20, align 8, !dbg !3139
  %21 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 0, !dbg !3139
  %22 = load i64, ptr %21, align 8, !dbg !3139, !noundef !24
  %23 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 1, !dbg !3139
  %24 = load i64, ptr %23, align 8, !dbg !3139, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %25 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc9040ef59f55e22cE"(i64 %22, i64 %24) #10, !dbg !3139
  %_72.0 = extractvalue { i64, i64 } %25, 0, !dbg !3139
  %_72.1 = extractvalue { i64, i64 } %25, 1, !dbg !3139
  %26 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3139
  store i64 %_72.0, ptr %26, align 8, !dbg !3139
  %27 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3139
  store i64 %_72.1, ptr %27, align 8, !dbg !3139
  br label %bb37, !dbg !3140

bb37:                                             ; preds = %bb39, %bb34
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %28 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5014b81ca02722adE"(ptr align 8 %iter) #10, !dbg !3015
  store { i64, i64 } %28, ptr %_76, align 8, !dbg !3015
  %_78 = load i64, ptr %_76, align 8, !dbg !3015, !range !945, !noundef !24
  %29 = icmp eq i64 %_78, 0, !dbg !3015
  br i1 %29, label %bb44, label %bb39, !dbg !3015

bb39:                                             ; preds = %bb37
  %30 = getelementptr inbounds { i64, i64 }, ptr %_76, i32 0, i32 1, !dbg !3141
  %i17 = load i64, ptr %30, align 8, !dbg !3141, !noundef !24
  store i64 %i17, ptr %i.dbg.spill18, align 8, !dbg !3141
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill18, metadata !2970, metadata !DIExpression()), !dbg !3142
  %31 = load ptr, ptr %end_l, align 8, !dbg !3143, !noundef !24
  %32 = trunc i64 %i17 to i8, !dbg !3143
  store i8 %32, ptr %31, align 1, !dbg !3143
  %_81 = load ptr, ptr %end_l, align 8, !dbg !3144, !noundef !24
  %_86 = load ptr, ptr %elem, align 8, !dbg !3145, !noundef !24
  store ptr %_86, ptr %_85, align 8, !dbg !3146
  %33 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 1, !dbg !3146
  store ptr %pivot, ptr %33, align 8, !dbg !3146
  %34 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 0, !dbg !3146
  %35 = load ptr, ptr %34, align 8, !dbg !3146, !nonnull !24, !align !386, !noundef !24
  %36 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 1, !dbg !3146
  %37 = load ptr, ptr %36, align 8, !dbg !3146, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_84 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %35, ptr align 8 %37) #10, !dbg !3146
  %_83 = xor i1 %_84, true, !dbg !3147
  %_82 = zext i1 %_83 to i64, !dbg !3147
  store ptr %_81, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3148, metadata !DIExpression()), !dbg !3154
  store i64 %_82, ptr %count.dbg.spill.i67, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i67, metadata !3153, metadata !DIExpression()), !dbg !3156
  %_0.i68 = getelementptr inbounds i8, ptr %_81, i64 %_82, !dbg !3157
  store ptr %_0.i68, ptr %end_l, align 8, !dbg !3158
  %_88 = load ptr, ptr %elem, align 8, !dbg !3159, !noundef !24
  store ptr %_88, ptr %self.dbg.spill.i85, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i85, metadata !173, metadata !DIExpression()), !dbg !3160
  store i64 1, ptr %count.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i84, metadata !179, metadata !DIExpression()), !dbg !3162
  %_0.i86 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_88, i64 1, !dbg !3163
  store ptr %_0.i86, ptr %elem, align 8, !dbg !3164
  br label %bb37, !dbg !3140

bb54:                                             ; preds = %bb48, %bb44
  %_115 = load ptr, ptr %start_l, align 8, !dbg !3165, !noundef !24
  %_116 = load ptr, ptr %end_l, align 8, !dbg !3166, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_114 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h3ba8832fab2332aeE(ptr %_115, ptr %_116) #10, !dbg !3167
  %_118 = load ptr, ptr %start_r, align 8, !dbg !3168, !noundef !24
  %_119 = load ptr, ptr %end_r, align 8, !dbg !3169, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_117 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h3ba8832fab2332aeE(ptr %_118, ptr %_119) #10, !dbg !3170
; call core::cmp::min
  %count = call i64 @_ZN4core3cmp3min17h3e905c43a1a3a18fE(i64 %_114, i64 %_117) #10, !dbg !3171
  store i64 %count, ptr %count.dbg.spill, align 8, !dbg !3171
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !2978, metadata !DIExpression()), !dbg !3172
  %_120 = icmp ugt i64 %count, 0, !dbg !3173
  br i1 %_120, label %bb58, label %bb93, !dbg !3173

bb45:                                             ; preds = %bb44
  store ptr %offsets_r, ptr %this.dbg.spill.i, align 8
  %38 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 128, ptr %38, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !3114, metadata !DIExpression()), !dbg !3174
  store ptr %offsets_r, ptr %self.dbg.spill.i202, align 8
  %39 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i202, i32 0, i32 1
  store i64 128, ptr %39, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i202, metadata !3127, metadata !DIExpression()), !dbg !3176
  store ptr %offsets_r, ptr %start_r, align 8, !dbg !3178
  %_95 = load ptr, ptr %start_r, align 8, !dbg !3179, !noundef !24
  store ptr %_95, ptr %end_r, align 8, !dbg !3180
  %40 = load ptr, ptr %r, align 8, !dbg !3181, !noundef !24
  store ptr %40, ptr %elem1, align 8, !dbg !3181
  %_99 = load i64, ptr %block_r, align 8, !dbg !3182, !noundef !24
  store i64 0, ptr %_98, align 8, !dbg !3183
  %41 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 1, !dbg !3183
  store i64 %_99, ptr %41, align 8, !dbg !3183
  %42 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 0, !dbg !3183
  %43 = load i64, ptr %42, align 8, !dbg !3183, !noundef !24
  %44 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 1, !dbg !3183
  %45 = load i64, ptr %44, align 8, !dbg !3183, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %46 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc9040ef59f55e22cE"(i64 %43, i64 %45) #10, !dbg !3183
  %_97.0 = extractvalue { i64, i64 } %46, 0, !dbg !3183
  %_97.1 = extractvalue { i64, i64 } %46, 1, !dbg !3183
  %47 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 0, !dbg !3183
  store i64 %_97.0, ptr %47, align 8, !dbg !3183
  %48 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 1, !dbg !3183
  store i64 %_97.1, ptr %48, align 8, !dbg !3183
  br label %bb48, !dbg !3184

bb48:                                             ; preds = %bb50, %bb45
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %49 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5014b81ca02722adE"(ptr align 8 %iter2) #10, !dbg !3017
  store { i64, i64 } %49, ptr %_101, align 8, !dbg !3017
  %_103 = load i64, ptr %_101, align 8, !dbg !3017, !range !945, !noundef !24
  %50 = icmp eq i64 %_103, 0, !dbg !3017
  br i1 %50, label %bb54, label %bb50, !dbg !3017

bb50:                                             ; preds = %bb48
  %51 = getelementptr inbounds { i64, i64 }, ptr %_101, i32 0, i32 1, !dbg !3185
  %i = load i64, ptr %51, align 8, !dbg !3185, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3185
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2976, metadata !DIExpression()), !dbg !3186
  %_106 = load ptr, ptr %elem1, align 8, !dbg !3187, !noundef !24
  store ptr %_106, ptr %self.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i112, metadata !2266, metadata !DIExpression()), !dbg !3188
  store i64 1, ptr %count.dbg.spill.i111, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i111, metadata !2269, metadata !DIExpression()), !dbg !3190
  store ptr %_106, ptr %self.dbg.spill.i192, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i192, metadata !2274, metadata !DIExpression()), !dbg !3191
  store i64 -1, ptr %count.dbg.spill.i191, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i191, metadata !2280, metadata !DIExpression()), !dbg !3193
  %_0.i193 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_106, i64 -1, !dbg !3194
  store ptr %_0.i193, ptr %_0.i113, align 8, !dbg !3195
  %52 = load ptr, ptr %_0.i113, align 8, !dbg !3196, !noundef !24
  store ptr %52, ptr %elem1, align 8, !dbg !3197
  %53 = load ptr, ptr %end_r, align 8, !dbg !3198, !noundef !24
  %54 = trunc i64 %i to i8, !dbg !3198
  store i8 %54, ptr %53, align 1, !dbg !3198
  %_108 = load ptr, ptr %end_r, align 8, !dbg !3199, !noundef !24
  %_112 = load ptr, ptr %elem1, align 8, !dbg !3200, !noundef !24
  store ptr %_112, ptr %_111, align 8, !dbg !3201
  %55 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 1, !dbg !3201
  store ptr %pivot, ptr %55, align 8, !dbg !3201
  %56 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 0, !dbg !3201
  %57 = load ptr, ptr %56, align 8, !dbg !3201, !nonnull !24, !align !386, !noundef !24
  %58 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 1, !dbg !3201
  %59 = load ptr, ptr %58, align 8, !dbg !3201, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_110 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %57, ptr align 8 %59) #10, !dbg !3201
  %_109 = zext i1 %_110 to i64, !dbg !3201
  store ptr %_108, ptr %self.dbg.spill.i70, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i70, metadata !3148, metadata !DIExpression()), !dbg !3202
  store i64 %_109, ptr %count.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i69, metadata !3153, metadata !DIExpression()), !dbg !3204
  %_0.i71 = getelementptr inbounds i8, ptr %_108, i64 %_109, !dbg !3205
  store ptr %_0.i71, ptr %end_r, align 8, !dbg !3206
  br label %bb48, !dbg !3184

bb93:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit43, %bb54
  %_189 = load ptr, ptr %start_l, align 8, !dbg !3207, !noundef !24
  %_190 = load ptr, ptr %end_l, align 8, !dbg !3208, !noundef !24
  %_188 = icmp eq ptr %_189, %_190, !dbg !3207
  br i1 %_188, label %bb94, label %bb96, !dbg !3207

bb58:                                             ; preds = %bb54
  %_124 = load ptr, ptr %l, align 8, !dbg !3209, !noundef !24
  %60 = load ptr, ptr %start_l, align 8, !dbg !3209, !noundef !24
  %_126 = load i8, ptr %60, align 1, !dbg !3209, !noundef !24
  store i8 %_126, ptr %small.dbg.spill.i224, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i224, metadata !3210, metadata !DIExpression()), !dbg !3219
  %_0.i225 = zext i8 %_126 to i64, !dbg !3221
  store ptr %_124, ptr %self.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i106, metadata !173, metadata !DIExpression()), !dbg !3222
  store i64 %_0.i225, ptr %count.dbg.spill.i105, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i105, metadata !179, metadata !DIExpression()), !dbg !3224
  %_0.i107 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_124, i64 %_0.i225, !dbg !3225
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb4cf770cf4557c59E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %tmp, ptr %_0.i107) #10, !dbg !3226
  %_130 = load ptr, ptr %r, align 8, !dbg !3227, !noundef !24
  %61 = load ptr, ptr %start_r, align 8, !dbg !3227, !noundef !24
  %_133 = load i8, ptr %61, align 1, !dbg !3227, !noundef !24
  store i8 %_133, ptr %small.dbg.spill.i222, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i222, metadata !3210, metadata !DIExpression()), !dbg !3228
  %_0.i223 = zext i8 %_133 to i64, !dbg !3230
  %62 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i223, i64 1), !dbg !3227
  %_134.0 = extractvalue { i64, i1 } %62, 0, !dbg !3227
  %_134.1 = extractvalue { i64, i1 } %62, 1, !dbg !3227
  %63 = call i1 @llvm.expect.i1(i1 %_134.1, i1 false), !dbg !3227
  br i1 %63, label %panic8, label %bb63, !dbg !3227

bb63:                                             ; preds = %bb58
  store ptr %_130, ptr %self.dbg.spill.i149, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i149, metadata !2266, metadata !DIExpression()), !dbg !3231
  store i64 %_134.0, ptr %count.dbg.spill.i148, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i148, metadata !2269, metadata !DIExpression()), !dbg !3233
  %_4.i152 = sub nsw i64 0, %_134.0, !dbg !3234
  store ptr %_130, ptr %self.dbg.spill.i168, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i168, metadata !2274, metadata !DIExpression()), !dbg !3235
  store i64 %_4.i152, ptr %count.dbg.spill.i167, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i167, metadata !2280, metadata !DIExpression()), !dbg !3237
  %_0.i169 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_130, i64 %_4.i152, !dbg !3238
  store ptr %_0.i169, ptr %_0.i150, align 8, !dbg !3239
  %64 = load ptr, ptr %_0.i150, align 8, !dbg !3240, !noundef !24
  %_136 = load ptr, ptr %l, align 8, !dbg !3241, !noundef !24
  %65 = load ptr, ptr %start_l, align 8, !dbg !3241, !noundef !24
  %_138 = load i8, ptr %65, align 1, !dbg !3241, !noundef !24
  store i8 %_138, ptr %small.dbg.spill.i220, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i220, metadata !3210, metadata !DIExpression()), !dbg !3242
  %_0.i221 = zext i8 %_138 to i64, !dbg !3244
  store ptr %_136, ptr %self.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i103, metadata !173, metadata !DIExpression()), !dbg !3245
  store i64 %_0.i221, ptr %count.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i102, metadata !179, metadata !DIExpression()), !dbg !3247
  %_0.i104 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_136, i64 %_0.i221, !dbg !3248
  store ptr %64, ptr %src.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i29, metadata !1468, metadata !DIExpression()), !dbg !3249
  store ptr %_0.i104, ptr %dst.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i28, metadata !1473, metadata !DIExpression()), !dbg !3251
  store i64 1, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !1474, metadata !DIExpression()), !dbg !3252
  store ptr %64, ptr %_6.i30, align 8, !dbg !3253
  %66 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i30, i32 0, i32 1, !dbg !3253
  store ptr %_0.i104, ptr %66, align 8, !dbg !3253
  %67 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i30, i32 0, i32 2, !dbg !3253
  store i64 1, ptr %67, align 8, !dbg !3253
  %68 = load ptr, ptr %_6.i30, align 8, !dbg !3253, !noundef !24
  %69 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i30, i32 0, i32 1, !dbg !3253
  %70 = load ptr, ptr %69, align 8, !dbg !3253, !noundef !24
  %71 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i30, i32 0, i32 2, !dbg !3253
  %72 = load i64, ptr %71, align 8, !dbg !3253, !noundef !24
  store ptr %68, ptr %src.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i33, metadata !1480, metadata !DIExpression()), !dbg !3254
  store ptr %70, ptr %dst.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i32, metadata !1484, metadata !DIExpression()), !dbg !3254
  store i64 %72, ptr %count.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i31, metadata !1485, metadata !DIExpression()), !dbg !3254
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %68) #10, !dbg !3256
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !3256

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %bb63
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !3257
  unreachable, !dbg !3257

bb2.i:                                            ; preds = %bb63
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %70) #10, !dbg !3258
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !3258

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %68, ptr %70, i64 %72) #10, !dbg !3259
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit, label %bb7.i, !dbg !3259

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0.i104, ptr align 8 %64, i64 24, i1 false), !dbg !3260
  store i64 1, ptr %_140, align 8, !dbg !3261
  %73 = getelementptr inbounds { i64, i64 }, ptr %_140, i32 0, i32 1, !dbg !3261
  store i64 %count, ptr %73, align 8, !dbg !3261
  %74 = getelementptr inbounds { i64, i64 }, ptr %_140, i32 0, i32 0, !dbg !3261
  %75 = load i64, ptr %74, align 8, !dbg !3261, !noundef !24
  %76 = getelementptr inbounds { i64, i64 }, ptr %_140, i32 0, i32 1, !dbg !3261
  %77 = load i64, ptr %76, align 8, !dbg !3261, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %78 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc9040ef59f55e22cE"(i64 %75, i64 %77) #10, !dbg !3261
  %_139.0 = extractvalue { i64, i64 } %78, 0, !dbg !3261
  %_139.1 = extractvalue { i64, i64 } %78, 1, !dbg !3261
  %79 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 0, !dbg !3261
  store i64 %_139.0, ptr %79, align 8, !dbg !3261
  %80 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 1, !dbg !3261
  store i64 %_139.1, ptr %80, align 8, !dbg !3261
  br label %bb69, !dbg !3262

panic8:                                           ; preds = %bb58
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_6b92c27c2891eb908338af014a6a3d36) #11, !dbg !3227
  unreachable, !dbg !3227

bb69:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit63, %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %81 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5014b81ca02722adE"(ptr align 8 %iter3) #10, !dbg !3019
  store { i64, i64 } %81, ptr %_142, align 8, !dbg !3019
  %_144 = load i64, ptr %_142, align 8, !dbg !3019, !range !945, !noundef !24
  %82 = icmp eq i64 %_144, 0, !dbg !3019
  br i1 %82, label %bb72, label %bb71, !dbg !3019

bb72:                                             ; preds = %bb69
  %_177 = load ptr, ptr %r, align 8, !dbg !3263, !noundef !24
  %83 = load ptr, ptr %start_r, align 8, !dbg !3263, !noundef !24
  %_180 = load i8, ptr %83, align 1, !dbg !3263, !noundef !24
  store i8 %_180, ptr %small.dbg.spill.i218, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i218, metadata !3210, metadata !DIExpression()), !dbg !3264
  %_0.i219 = zext i8 %_180 to i64, !dbg !3266
  %84 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i219, i64 1), !dbg !3263
  %_181.0 = extractvalue { i64, i1 } %84, 0, !dbg !3263
  %_181.1 = extractvalue { i64, i1 } %84, 1, !dbg !3263
  %85 = call i1 @llvm.expect.i1(i1 %_181.1, i1 false), !dbg !3263
  br i1 %85, label %panic9, label %bb87, !dbg !3263

bb71:                                             ; preds = %bb69
  %_146 = load ptr, ptr %start_l, align 8, !dbg !3267, !noundef !24
  store ptr %_146, ptr %self.dbg.spill.i76, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i76, metadata !3148, metadata !DIExpression()), !dbg !3268
  store i64 1, ptr %count.dbg.spill.i75, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i75, metadata !3153, metadata !DIExpression()), !dbg !3270
  %_0.i77 = getelementptr inbounds i8, ptr %_146, i64 1, !dbg !3271
  store ptr %_0.i77, ptr %start_l, align 8, !dbg !3272
  %_150 = load ptr, ptr %l, align 8, !dbg !3273, !noundef !24
  %86 = load ptr, ptr %start_l, align 8, !dbg !3273, !noundef !24
  %_152 = load i8, ptr %86, align 1, !dbg !3273, !noundef !24
  store i8 %_152, ptr %small.dbg.spill.i212, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i212, metadata !3210, metadata !DIExpression()), !dbg !3274
  %_0.i213 = zext i8 %_152 to i64, !dbg !3276
  store ptr %_150, ptr %self.dbg.spill.i91, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i91, metadata !173, metadata !DIExpression()), !dbg !3277
  store i64 %_0.i213, ptr %count.dbg.spill.i90, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i90, metadata !179, metadata !DIExpression()), !dbg !3279
  %_0.i92 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_150, i64 %_0.i213, !dbg !3280
  %_154 = load ptr, ptr %r, align 8, !dbg !3281, !noundef !24
  %87 = load ptr, ptr %start_r, align 8, !dbg !3281, !noundef !24
  %_157 = load i8, ptr %87, align 1, !dbg !3281, !noundef !24
  store i8 %_157, ptr %small.dbg.spill.i210, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i210, metadata !3210, metadata !DIExpression()), !dbg !3282
  %_0.i211 = zext i8 %_157 to i64, !dbg !3284
  %88 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i211, i64 1), !dbg !3281
  %_158.0 = extractvalue { i64, i1 } %88, 0, !dbg !3281
  %_158.1 = extractvalue { i64, i1 } %88, 1, !dbg !3281
  %89 = call i1 @llvm.expect.i1(i1 %_158.1, i1 false), !dbg !3281
  br i1 %89, label %panic15, label %bb77, !dbg !3281

bb87:                                             ; preds = %bb72
  store ptr %_177, ptr %self.dbg.spill.i144, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i144, metadata !2266, metadata !DIExpression()), !dbg !3285
  store i64 %_181.0, ptr %count.dbg.spill.i143, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i143, metadata !2269, metadata !DIExpression()), !dbg !3287
  %_4.i147 = sub nsw i64 0, %_181.0, !dbg !3288
  store ptr %_177, ptr %self.dbg.spill.i171, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i171, metadata !2274, metadata !DIExpression()), !dbg !3289
  store i64 %_4.i147, ptr %count.dbg.spill.i170, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i170, metadata !2280, metadata !DIExpression()), !dbg !3291
  %_0.i172 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_177, i64 %_4.i147, !dbg !3292
  store ptr %_0.i172, ptr %_0.i145, align 8, !dbg !3293
  %90 = load ptr, ptr %_0.i145, align 8, !dbg !3294, !noundef !24
  store ptr %tmp, ptr %src.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i25, metadata !1468, metadata !DIExpression()), !dbg !3295
  store ptr %90, ptr %dst.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i24, metadata !1473, metadata !DIExpression()), !dbg !3297
  store i64 1, ptr %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i23, metadata !1474, metadata !DIExpression()), !dbg !3298
  store ptr %tmp, ptr %_6.i26, align 8, !dbg !3299
  %91 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i26, i32 0, i32 1, !dbg !3299
  store ptr %90, ptr %91, align 8, !dbg !3299
  %92 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i26, i32 0, i32 2, !dbg !3299
  store i64 1, ptr %92, align 8, !dbg !3299
  %93 = load ptr, ptr %_6.i26, align 8, !dbg !3299, !noundef !24
  %94 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i26, i32 0, i32 1, !dbg !3299
  %95 = load ptr, ptr %94, align 8, !dbg !3299, !noundef !24
  %96 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i26, i32 0, i32 2, !dbg !3299
  %97 = load i64, ptr %96, align 8, !dbg !3299, !noundef !24
  store ptr %93, ptr %src.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i36, metadata !1480, metadata !DIExpression()), !dbg !3300
  store ptr %95, ptr %dst.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i35, metadata !1484, metadata !DIExpression()), !dbg !3300
  store i64 %97, ptr %count.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i34, metadata !1485, metadata !DIExpression()), !dbg !3300
; call core::intrinsics::is_aligned_and_not_null
  %_4.i37 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %93) #10, !dbg !3302
  br i1 %_4.i37, label %bb2.i39, label %bb7.i38, !dbg !3302

bb7.i38:                                          ; preds = %bb4.i41, %bb2.i39, %bb87
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !3303
  unreachable, !dbg !3303

bb2.i39:                                          ; preds = %bb87
; call core::intrinsics::is_aligned_and_not_null
  %_5.i40 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %95) #10, !dbg !3304
  br i1 %_5.i40, label %bb4.i41, label %bb7.i38, !dbg !3304

bb4.i41:                                          ; preds = %bb2.i39
; call core::intrinsics::is_nonoverlapping
  %_7.i42 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %93, ptr %95, i64 %97) #10, !dbg !3305
  br i1 %_7.i42, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit43, label %bb7.i38, !dbg !3305

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit43: ; preds = %bb4.i41
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %90, ptr align 8 %tmp, i64 24, i1 false), !dbg !3306
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_183, ptr align 8 %tmp, i64 24, i1 false), !dbg !3307
; call core::mem::forget
  call void @_ZN4core3mem6forget17hb229b34f67d22417E(ptr align 8 %_183) #10, !dbg !3308
  %_185 = load ptr, ptr %start_l, align 8, !dbg !3309, !noundef !24
  store ptr %_185, ptr %self.dbg.spill.i82, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i82, metadata !3148, metadata !DIExpression()), !dbg !3310
  store i64 1, ptr %count.dbg.spill.i81, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i81, metadata !3153, metadata !DIExpression()), !dbg !3312
  %_0.i83 = getelementptr inbounds i8, ptr %_185, i64 1, !dbg !3313
  store ptr %_0.i83, ptr %start_l, align 8, !dbg !3314
  %_187 = load ptr, ptr %start_r, align 8, !dbg !3315, !noundef !24
  store ptr %_187, ptr %self.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i79, metadata !3148, metadata !DIExpression()), !dbg !3316
  store i64 1, ptr %count.dbg.spill.i78, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i78, metadata !3153, metadata !DIExpression()), !dbg !3318
  %_0.i80 = getelementptr inbounds i8, ptr %_187, i64 1, !dbg !3319
  store ptr %_0.i80, ptr %start_r, align 8, !dbg !3320
  br label %bb93, !dbg !3321

panic9:                                           ; preds = %bb72
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_9d44e44c8d239a1692fc87e41a4755a6) #11, !dbg !3263
  unreachable, !dbg !3263

bb96:                                             ; preds = %bb94, %bb93
  %_195 = load ptr, ptr %start_r, align 8, !dbg !3322, !noundef !24
  %_196 = load ptr, ptr %end_r, align 8, !dbg !3323, !noundef !24
  %_194 = icmp eq ptr %_195, %_196, !dbg !3322
  br i1 %_194, label %bb97, label %bb99, !dbg !3322

bb94:                                             ; preds = %bb93
  %_192 = load ptr, ptr %l, align 8, !dbg !3324, !noundef !24
  %_193 = load i64, ptr %block_l, align 8, !dbg !3325, !noundef !24
  store ptr %_192, ptr %self.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i100, metadata !173, metadata !DIExpression()), !dbg !3326
  store i64 %_193, ptr %count.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i99, metadata !179, metadata !DIExpression()), !dbg !3328
  %_0.i101 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_192, i64 %_193, !dbg !3329
  store ptr %_0.i101, ptr %l, align 8, !dbg !3330
  br label %bb96, !dbg !3331

bb99:                                             ; preds = %bb97, %bb96
  br i1 %is_done, label %bb100, label %bb9, !dbg !3332

bb97:                                             ; preds = %bb96
  %_198 = load ptr, ptr %r, align 8, !dbg !3333, !noundef !24
  %_199 = load i64, ptr %block_r, align 8, !dbg !3334, !noundef !24
  store ptr %_198, ptr %self.dbg.spill.i139, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i139, metadata !2266, metadata !DIExpression()), !dbg !3335
  store i64 %_199, ptr %count.dbg.spill.i138, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i138, metadata !2269, metadata !DIExpression()), !dbg !3337
  %_4.i142 = sub nsw i64 0, %_199, !dbg !3338
  store ptr %_198, ptr %self.dbg.spill.i174, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i174, metadata !2274, metadata !DIExpression()), !dbg !3339
  store i64 %_4.i142, ptr %count.dbg.spill.i173, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i173, metadata !2280, metadata !DIExpression()), !dbg !3341
  %_0.i175 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_198, i64 %_4.i142, !dbg !3342
  store ptr %_0.i175, ptr %_0.i140, align 8, !dbg !3343
  %98 = load ptr, ptr %_0.i140, align 8, !dbg !3344, !noundef !24
  store ptr %98, ptr %r, align 8, !dbg !3345
  br label %bb99, !dbg !3346

bb100:                                            ; preds = %bb99
  %_201 = load ptr, ptr %start_l, align 8, !dbg !3347, !noundef !24
  %_202 = load ptr, ptr %end_l, align 8, !dbg !3348, !noundef !24
  %_200 = icmp ult ptr %_201, %_202, !dbg !3347
  br i1 %_200, label %bb101, label %bb102, !dbg !3347

bb102:                                            ; preds = %bb100
  %_235 = load ptr, ptr %start_r, align 8, !dbg !3349, !noundef !24
  %_236 = load ptr, ptr %end_r, align 8, !dbg !3350, !noundef !24
  %_234 = icmp ult ptr %_235, %_236, !dbg !3349
  br i1 %_234, label %bb116, label %bb117, !dbg !3349

bb101:                                            ; preds = %bb100
  br i1 true, label %bb103, label %bb106, !dbg !3351

bb117:                                            ; preds = %bb102
  store ptr %v.0, ptr %self.dbg.spill.i205, align 8
  %99 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i205, i32 0, i32 1
  store i64 %v.1, ptr %99, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i205, metadata !2142, metadata !DIExpression()), !dbg !3352
  %_270 = load ptr, ptr %l, align 8, !dbg !3354, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %100 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E(ptr %v.0, ptr %_270) #10, !dbg !3355
  store i64 %100, ptr %_0, align 8, !dbg !3355
  br label %bb132, !dbg !3355

bb116:                                            ; preds = %bb102
  br i1 true, label %bb118, label %bb121, !dbg !3356

bb132:                                            ; preds = %bb114, %bb129, %bb117
  %101 = load i64, ptr %_0, align 8, !dbg !3357, !noundef !24
  ret i64 %101, !dbg !3357

bb121:                                            ; preds = %bb125, %bb118, %bb116
  %_253 = load ptr, ptr %start_r, align 8, !dbg !3358, !noundef !24
  %_254 = load ptr, ptr %end_r, align 8, !dbg !3359, !noundef !24
  %_252 = icmp ult ptr %_253, %_254, !dbg !3358
  br i1 %_252, label %bb122, label %bb129, !dbg !3358

bb118:                                            ; preds = %bb116
  %_241 = load ptr, ptr %l, align 8, !dbg !3360, !noundef !24
  %_242 = load ptr, ptr %r, align 8, !dbg !3361, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %102 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E(ptr %_241, ptr %_242) #10, !dbg !3362
  store i64 %102, ptr %_240, align 8, !dbg !3362
  store ptr %_240, ptr %_238, align 8, !dbg !3356
  %103 = getelementptr inbounds { ptr, ptr }, ptr %_238, i32 0, i32 1, !dbg !3356
  store ptr %block_r, ptr %103, align 8, !dbg !3356
  %left_val = load ptr, ptr %_238, align 8, !dbg !3356, !nonnull !24, !align !386, !noundef !24
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !3356
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !2993, metadata !DIExpression()), !dbg !3363
  %104 = getelementptr inbounds { ptr, ptr }, ptr %_238, i32 0, i32 1, !dbg !3356
  %right_val = load ptr, ptr %104, align 8, !dbg !3356, !nonnull !24, !align !386, !noundef !24
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !3356
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !2996, metadata !DIExpression()), !dbg !3363
  %_247 = load i64, ptr %left_val, align 8, !dbg !3363, !noundef !24
  %_248 = load i64, ptr %right_val, align 8, !dbg !3363, !noundef !24
  %_246 = icmp eq i64 %_247, %_248, !dbg !3363
  br i1 %_246, label %bb121, label %bb120, !dbg !3363

bb120:                                            ; preds = %bb118
  store i8 0, ptr %kind4, align 1, !dbg !3363
  store ptr null, ptr %_251, align 8, !dbg !3021
  %105 = load i8, ptr %kind4, align 1, !dbg !3021, !range !3364, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h1443aac0ba710f68E(i8 %105, ptr align 8 %left_val, ptr align 8 %right_val, ptr align 8 %_251, ptr align 8 @alloc_f1dd8b197d5cc4301200d98f5c568f42) #11, !dbg !3021
  unreachable, !dbg !3021

bb129:                                            ; preds = %bb121
  store ptr %v.0, ptr %self.dbg.spill.i204, align 8
  %106 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i204, i32 0, i32 1
  store i64 %v.1, ptr %106, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i204, metadata !2142, metadata !DIExpression()), !dbg !3365
  %_268 = load ptr, ptr %l, align 8, !dbg !3367, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %107 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E(ptr %v.0, ptr %_268) #10, !dbg !3368
  store i64 %107, ptr %_0, align 8, !dbg !3368
  br label %bb132, !dbg !3368

bb122:                                            ; preds = %bb121
  %_256 = load ptr, ptr %end_r, align 8, !dbg !3369, !noundef !24
  store ptr %_256, ptr %self.dbg.spill.i158, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i158, metadata !3370, metadata !DIExpression()), !dbg !3374
  store i64 1, ptr %count.dbg.spill.i157, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i157, metadata !3373, metadata !DIExpression()), !dbg !3376
  store ptr %_256, ptr %self.dbg.spill.i162, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i162, metadata !3377, metadata !DIExpression()), !dbg !3383
  store i64 -1, ptr %count.dbg.spill.i161, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i161, metadata !3382, metadata !DIExpression()), !dbg !3385
  %_0.i163 = getelementptr inbounds i8, ptr %_256, i64 -1, !dbg !3386
  store ptr %_0.i163, ptr %_0.i159, align 8, !dbg !3387
  %108 = load ptr, ptr %_0.i159, align 8, !dbg !3388, !noundef !24
  store ptr %108, ptr %end_r, align 8, !dbg !3389
  %_258 = load ptr, ptr %l, align 8, !dbg !3390, !noundef !24
  %_260 = load ptr, ptr %r, align 8, !dbg !3391, !noundef !24
  %109 = load ptr, ptr %end_r, align 8, !dbg !3392, !noundef !24
  %_263 = load i8, ptr %109, align 1, !dbg !3392, !noundef !24
  store i8 %_263, ptr %small.dbg.spill.i216, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i216, metadata !3210, metadata !DIExpression()), !dbg !3393
  %_0.i217 = zext i8 %_263 to i64, !dbg !3395
  %110 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i217, i64 1), !dbg !3396
  %_264.0 = extractvalue { i64, i1 } %110, 0, !dbg !3396
  %_264.1 = extractvalue { i64, i1 } %110, 1, !dbg !3396
  %111 = call i1 @llvm.expect.i1(i1 %_264.1, i1 false), !dbg !3396
  br i1 %111, label %panic10, label %bb125, !dbg !3396

bb125:                                            ; preds = %bb122
  store ptr %_260, ptr %self.dbg.spill.i134, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i134, metadata !2266, metadata !DIExpression()), !dbg !3397
  store i64 %_264.0, ptr %count.dbg.spill.i133, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i133, metadata !2269, metadata !DIExpression()), !dbg !3399
  %_4.i137 = sub nsw i64 0, %_264.0, !dbg !3400
  store ptr %_260, ptr %self.dbg.spill.i177, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i177, metadata !2274, metadata !DIExpression()), !dbg !3401
  store i64 %_4.i137, ptr %count.dbg.spill.i176, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i176, metadata !2280, metadata !DIExpression()), !dbg !3403
  %_0.i178 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_260, i64 %_4.i137, !dbg !3404
  store ptr %_0.i178, ptr %_0.i135, align 8, !dbg !3405
  %112 = load ptr, ptr %_0.i135, align 8, !dbg !3406, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2ee7e59aa3cf3136E(ptr %_258, ptr %112) #10, !dbg !3407
  %_266 = load ptr, ptr %l, align 8, !dbg !3408, !noundef !24
  store ptr %_266, ptr %self.dbg.spill.i97, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i97, metadata !173, metadata !DIExpression()), !dbg !3409
  store i64 1, ptr %count.dbg.spill.i96, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i96, metadata !179, metadata !DIExpression()), !dbg !3411
  %_0.i98 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_266, i64 1, !dbg !3412
  store ptr %_0.i98, ptr %l, align 8, !dbg !3413
  br label %bb121, !dbg !3414

panic10:                                          ; preds = %bb122
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_c77bd063d1f3488fe1ecad3000191614) #11, !dbg !3396
  unreachable, !dbg !3396

bb106:                                            ; preds = %bb107, %bb103, %bb101
  %_219 = load ptr, ptr %start_l, align 8, !dbg !3415, !noundef !24
  %_220 = load ptr, ptr %end_l, align 8, !dbg !3416, !noundef !24
  %_218 = icmp ult ptr %_219, %_220, !dbg !3415
  br i1 %_218, label %bb107, label %bb114, !dbg !3415

bb103:                                            ; preds = %bb101
  %_207 = load ptr, ptr %l, align 8, !dbg !3417, !noundef !24
  %_208 = load ptr, ptr %r, align 8, !dbg !3418, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %113 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E(ptr %_207, ptr %_208) #10, !dbg !3419
  store i64 %113, ptr %_206, align 8, !dbg !3419
  store ptr %_206, ptr %_204, align 8, !dbg !3351
  %114 = getelementptr inbounds { ptr, ptr }, ptr %_204, i32 0, i32 1, !dbg !3351
  store ptr %block_l, ptr %114, align 8, !dbg !3351
  %left_val11 = load ptr, ptr %_204, align 8, !dbg !3351, !nonnull !24, !align !386, !noundef !24
  store ptr %left_val11, ptr %left_val.dbg.spill12, align 8, !dbg !3351
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill12, metadata !2984, metadata !DIExpression()), !dbg !3420
  %115 = getelementptr inbounds { ptr, ptr }, ptr %_204, i32 0, i32 1, !dbg !3351
  %right_val13 = load ptr, ptr %115, align 8, !dbg !3351, !nonnull !24, !align !386, !noundef !24
  store ptr %right_val13, ptr %right_val.dbg.spill14, align 8, !dbg !3351
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill14, metadata !2989, metadata !DIExpression()), !dbg !3420
  %_213 = load i64, ptr %left_val11, align 8, !dbg !3420, !noundef !24
  %_214 = load i64, ptr %right_val13, align 8, !dbg !3420, !noundef !24
  %_212 = icmp eq i64 %_213, %_214, !dbg !3420
  br i1 %_212, label %bb106, label %bb105, !dbg !3420

bb105:                                            ; preds = %bb103
  store i8 0, ptr %kind, align 1, !dbg !3420
  store ptr null, ptr %_217, align 8, !dbg !3020
  %116 = load i8, ptr %kind, align 1, !dbg !3020, !range !3364, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h1443aac0ba710f68E(i8 %116, ptr align 8 %left_val11, ptr align 8 %right_val13, ptr align 8 %_217, ptr align 8 @alloc_bce10c27435588d70caaeb1e31e7ed1b) #11, !dbg !3020
  unreachable, !dbg !3020

bb114:                                            ; preds = %bb106
  store ptr %v.0, ptr %self.dbg.spill.i203, align 8
  %117 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i203, i32 0, i32 1
  store i64 %v.1, ptr %117, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i203, metadata !2142, metadata !DIExpression()), !dbg !3421
  %_233 = load ptr, ptr %r, align 8, !dbg !3423, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %118 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E(ptr %v.0, ptr %_233) #10, !dbg !3424
  store i64 %118, ptr %_0, align 8, !dbg !3424
  br label %bb132, !dbg !3424

bb107:                                            ; preds = %bb106
  %_222 = load ptr, ptr %end_l, align 8, !dbg !3425, !noundef !24
  store ptr %_222, ptr %self.dbg.spill.i154, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i154, metadata !3370, metadata !DIExpression()), !dbg !3426
  store i64 1, ptr %count.dbg.spill.i153, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i153, metadata !3373, metadata !DIExpression()), !dbg !3428
  store ptr %_222, ptr %self.dbg.spill.i165, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i165, metadata !3377, metadata !DIExpression()), !dbg !3429
  store i64 -1, ptr %count.dbg.spill.i164, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i164, metadata !3382, metadata !DIExpression()), !dbg !3431
  %_0.i166 = getelementptr inbounds i8, ptr %_222, i64 -1, !dbg !3432
  store ptr %_0.i166, ptr %_0.i155, align 8, !dbg !3433
  %119 = load ptr, ptr %_0.i155, align 8, !dbg !3434, !noundef !24
  store ptr %119, ptr %end_l, align 8, !dbg !3435
  %_225 = load ptr, ptr %l, align 8, !dbg !3436, !noundef !24
  %120 = load ptr, ptr %end_l, align 8, !dbg !3437, !noundef !24
  %_227 = load i8, ptr %120, align 1, !dbg !3437, !noundef !24
  store i8 %_227, ptr %small.dbg.spill.i214, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i214, metadata !3210, metadata !DIExpression()), !dbg !3438
  %_0.i215 = zext i8 %_227 to i64, !dbg !3440
  store ptr %_225, ptr %self.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i94, metadata !173, metadata !DIExpression()), !dbg !3441
  store i64 %_0.i215, ptr %count.dbg.spill.i93, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i93, metadata !179, metadata !DIExpression()), !dbg !3443
  %_0.i95 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_225, i64 %_0.i215, !dbg !3444
  %_229 = load ptr, ptr %r, align 8, !dbg !3445, !noundef !24
  store ptr %_229, ptr %self.dbg.spill.i130, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i130, metadata !2266, metadata !DIExpression()), !dbg !3446
  store i64 1, ptr %count.dbg.spill.i129, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i129, metadata !2269, metadata !DIExpression()), !dbg !3448
  store ptr %_229, ptr %self.dbg.spill.i180, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i180, metadata !2274, metadata !DIExpression()), !dbg !3449
  store i64 -1, ptr %count.dbg.spill.i179, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i179, metadata !2280, metadata !DIExpression()), !dbg !3451
  %_0.i181 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_229, i64 -1, !dbg !3452
  store ptr %_0.i181, ptr %_0.i131, align 8, !dbg !3453
  %121 = load ptr, ptr %_0.i131, align 8, !dbg !3454, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2ee7e59aa3cf3136E(ptr %_0.i95, ptr %121) #10, !dbg !3455
  %_231 = load ptr, ptr %r, align 8, !dbg !3456, !noundef !24
  store ptr %_231, ptr %self.dbg.spill.i126, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i126, metadata !2266, metadata !DIExpression()), !dbg !3457
  store i64 1, ptr %count.dbg.spill.i125, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i125, metadata !2269, metadata !DIExpression()), !dbg !3459
  store ptr %_231, ptr %self.dbg.spill.i183, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i183, metadata !2274, metadata !DIExpression()), !dbg !3460
  store i64 -1, ptr %count.dbg.spill.i182, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i182, metadata !2280, metadata !DIExpression()), !dbg !3462
  %_0.i184 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_231, i64 -1, !dbg !3463
  store ptr %_0.i184, ptr %_0.i127, align 8, !dbg !3464
  %122 = load ptr, ptr %_0.i127, align 8, !dbg !3465, !noundef !24
  store ptr %122, ptr %r, align 8, !dbg !3466
  br label %bb106, !dbg !3467

bb77:                                             ; preds = %bb71
  store ptr %_154, ptr %self.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i121, metadata !2266, metadata !DIExpression()), !dbg !3468
  store i64 %_158.0, ptr %count.dbg.spill.i120, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i120, metadata !2269, metadata !DIExpression()), !dbg !3470
  %_4.i124 = sub nsw i64 0, %_158.0, !dbg !3471
  store ptr %_154, ptr %self.dbg.spill.i186, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i186, metadata !2274, metadata !DIExpression()), !dbg !3472
  store i64 %_4.i124, ptr %count.dbg.spill.i185, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i185, metadata !2280, metadata !DIExpression()), !dbg !3474
  %_0.i187 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_154, i64 %_4.i124, !dbg !3475
  store ptr %_0.i187, ptr %_0.i122, align 8, !dbg !3476
  %123 = load ptr, ptr %_0.i122, align 8, !dbg !3477, !noundef !24
  store ptr %_0.i92, ptr %src.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i21, metadata !1468, metadata !DIExpression()), !dbg !3478
  store ptr %123, ptr %dst.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i20, metadata !1473, metadata !DIExpression()), !dbg !3480
  store i64 1, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !1474, metadata !DIExpression()), !dbg !3481
  store ptr %_0.i92, ptr %_6.i22, align 8, !dbg !3482
  %124 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i22, i32 0, i32 1, !dbg !3482
  store ptr %123, ptr %124, align 8, !dbg !3482
  %125 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i22, i32 0, i32 2, !dbg !3482
  store i64 1, ptr %125, align 8, !dbg !3482
  %126 = load ptr, ptr %_6.i22, align 8, !dbg !3482, !noundef !24
  %127 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i22, i32 0, i32 1, !dbg !3482
  %128 = load ptr, ptr %127, align 8, !dbg !3482, !noundef !24
  %129 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i22, i32 0, i32 2, !dbg !3482
  %130 = load i64, ptr %129, align 8, !dbg !3482, !noundef !24
  store ptr %126, ptr %src.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i46, metadata !1480, metadata !DIExpression()), !dbg !3483
  store ptr %128, ptr %dst.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i45, metadata !1484, metadata !DIExpression()), !dbg !3483
  store i64 %130, ptr %count.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i44, metadata !1485, metadata !DIExpression()), !dbg !3483
; call core::intrinsics::is_aligned_and_not_null
  %_4.i47 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %126) #10, !dbg !3485
  br i1 %_4.i47, label %bb2.i49, label %bb7.i48, !dbg !3485

bb7.i48:                                          ; preds = %bb4.i51, %bb2.i49, %bb77
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !3486
  unreachable, !dbg !3486

bb2.i49:                                          ; preds = %bb77
; call core::intrinsics::is_aligned_and_not_null
  %_5.i50 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %128) #10, !dbg !3487
  br i1 %_5.i50, label %bb4.i51, label %bb7.i48, !dbg !3487

bb4.i51:                                          ; preds = %bb2.i49
; call core::intrinsics::is_nonoverlapping
  %_7.i52 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %126, ptr %128, i64 %130) #10, !dbg !3488
  br i1 %_7.i52, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit53, label %bb7.i48, !dbg !3488

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit53: ; preds = %bb4.i51
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %123, ptr align 8 %_0.i92, i64 24, i1 false), !dbg !3489
  %_160 = load ptr, ptr %start_r, align 8, !dbg !3490, !noundef !24
  store ptr %_160, ptr %self.dbg.spill.i73, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i73, metadata !3148, metadata !DIExpression()), !dbg !3491
  store i64 1, ptr %count.dbg.spill.i72, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i72, metadata !3153, metadata !DIExpression()), !dbg !3493
  %_0.i74 = getelementptr inbounds i8, ptr %_160, i64 1, !dbg !3494
  store ptr %_0.i74, ptr %start_r, align 8, !dbg !3495
  %_164 = load ptr, ptr %r, align 8, !dbg !3496, !noundef !24
  %131 = load ptr, ptr %start_r, align 8, !dbg !3496, !noundef !24
  %_167 = load i8, ptr %131, align 1, !dbg !3496, !noundef !24
  store i8 %_167, ptr %small.dbg.spill.i208, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i208, metadata !3210, metadata !DIExpression()), !dbg !3497
  %_0.i209 = zext i8 %_167 to i64, !dbg !3499
  %132 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i209, i64 1), !dbg !3496
  %_168.0 = extractvalue { i64, i1 } %132, 0, !dbg !3496
  %_168.1 = extractvalue { i64, i1 } %132, 1, !dbg !3496
  %133 = call i1 @llvm.expect.i1(i1 %_168.1, i1 false), !dbg !3496
  br i1 %133, label %panic16, label %bb82, !dbg !3496

panic15:                                          ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_82f8d41c4f6c217ecb338573a0b4850d) #11, !dbg !3281
  unreachable, !dbg !3281

bb82:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit53
  store ptr %_164, ptr %self.dbg.spill.i116, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i116, metadata !2266, metadata !DIExpression()), !dbg !3500
  store i64 %_168.0, ptr %count.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i115, metadata !2269, metadata !DIExpression()), !dbg !3502
  %_4.i119 = sub nsw i64 0, %_168.0, !dbg !3503
  store ptr %_164, ptr %self.dbg.spill.i189, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i189, metadata !2274, metadata !DIExpression()), !dbg !3504
  store i64 %_4.i119, ptr %count.dbg.spill.i188, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i188, metadata !2280, metadata !DIExpression()), !dbg !3506
  %_0.i190 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_164, i64 %_4.i119, !dbg !3507
  store ptr %_0.i190, ptr %_0.i117, align 8, !dbg !3508
  %134 = load ptr, ptr %_0.i117, align 8, !dbg !3509, !noundef !24
  %_170 = load ptr, ptr %l, align 8, !dbg !3510, !noundef !24
  %135 = load ptr, ptr %start_l, align 8, !dbg !3510, !noundef !24
  %_172 = load i8, ptr %135, align 1, !dbg !3510, !noundef !24
  store i8 %_172, ptr %small.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i, metadata !3210, metadata !DIExpression()), !dbg !3511
  %_0.i207 = zext i8 %_172 to i64, !dbg !3513
  store ptr %_170, ptr %self.dbg.spill.i88, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i88, metadata !173, metadata !DIExpression()), !dbg !3514
  store i64 %_0.i207, ptr %count.dbg.spill.i87, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i87, metadata !179, metadata !DIExpression()), !dbg !3516
  %_0.i89 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_170, i64 %_0.i207, !dbg !3517
  store ptr %134, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1468, metadata !DIExpression()), !dbg !3518
  store ptr %_0.i89, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1473, metadata !DIExpression()), !dbg !3520
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1474, metadata !DIExpression()), !dbg !3521
  store ptr %134, ptr %_6.i, align 8, !dbg !3522
  %136 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !3522
  store ptr %_0.i89, ptr %136, align 8, !dbg !3522
  %137 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !3522
  store i64 1, ptr %137, align 8, !dbg !3522
  %138 = load ptr, ptr %_6.i, align 8, !dbg !3522, !noundef !24
  %139 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !3522
  %140 = load ptr, ptr %139, align 8, !dbg !3522, !noundef !24
  %141 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !3522
  %142 = load i64, ptr %141, align 8, !dbg !3522, !noundef !24
  store ptr %138, ptr %src.dbg.spill.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i56, metadata !1480, metadata !DIExpression()), !dbg !3523
  store ptr %140, ptr %dst.dbg.spill.i55, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i55, metadata !1484, metadata !DIExpression()), !dbg !3523
  store i64 %142, ptr %count.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i54, metadata !1485, metadata !DIExpression()), !dbg !3523
; call core::intrinsics::is_aligned_and_not_null
  %_4.i57 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %138) #10, !dbg !3525
  br i1 %_4.i57, label %bb2.i59, label %bb7.i58, !dbg !3525

bb7.i58:                                          ; preds = %bb4.i61, %bb2.i59, %bb82
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !3526
  unreachable, !dbg !3526

bb2.i59:                                          ; preds = %bb82
; call core::intrinsics::is_aligned_and_not_null
  %_5.i60 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %140) #10, !dbg !3527
  br i1 %_5.i60, label %bb4.i61, label %bb7.i58, !dbg !3527

bb4.i61:                                          ; preds = %bb2.i59
; call core::intrinsics::is_nonoverlapping
  %_7.i62 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %138, ptr %140, i64 %142) #10, !dbg !3528
  br i1 %_7.i62, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit63, label %bb7.i58, !dbg !3528

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit63: ; preds = %bb4.i61
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0.i89, ptr align 8 %134, i64 24, i1 false), !dbg !3529
  br label %bb69, !dbg !3530

panic16:                                          ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_15626d8f43b09b5416b02dd3b687152a) #11, !dbg !3496
  unreachable, !dbg !3496

bb40:                                             ; No predecessors!
  unreachable, !dbg !3015
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h3ba8832fab2332aeE(ptr %l, ptr %r) unnamed_addr #1 !dbg !3531 {
start:
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3536, metadata !DIExpression()), !dbg !3538
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3537, metadata !DIExpression()), !dbg !3539
  %_3 = icmp ugt i64 1, 0, !dbg !3540
  br i1 %_3, label %bb2, label %bb3, !dbg !3540

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_fce046c10af11fd43762995f151c5095) #11, !dbg !3541
  unreachable, !dbg !3541

bb2:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !1749, metadata !DIExpression()), !dbg !3542
  store ptr %r, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1756, metadata !DIExpression()), !dbg !3544
  %_0.i4 = ptrtoint ptr %r to i64, !dbg !3546
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1749, metadata !DIExpression()), !dbg !3547
  store ptr %l, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !1756, metadata !DIExpression()), !dbg !3549
  %_0.i = ptrtoint ptr %l to i64, !dbg !3551
  %_9.0 = sub i64 %_0.i4, %_0.i, !dbg !3552
  %_9.1 = icmp ult i64 %_0.i4, %_0.i, !dbg !3552
  %0 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !3552
  br i1 %0, label %panic, label %bb6, !dbg !3552

bb6:                                              ; preds = %bb2
  %_11 = icmp eq i64 1, 0, !dbg !3552
  %1 = call i1 @llvm.expect.i1(i1 %_11, i1 false), !dbg !3552
  br i1 %1, label %panic1, label %bb8, !dbg !3552

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_640f35fd1cfd54c2ff846760bec94d82) #11, !dbg !3552
  unreachable, !dbg !3552

bb8:                                              ; preds = %bb6
  %_0 = udiv i64 %_9.0, 1, !dbg !3552
  ret i64 %_0, !dbg !3553

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_640f35fd1cfd54c2ff846760bec94d82) #11, !dbg !3552
  unreachable, !dbg !3552
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3554 {
start:
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3558, metadata !DIExpression()), !dbg !3560
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3559, metadata !DIExpression()), !dbg !3561
  %_3 = icmp ugt i64 24, 0, !dbg !3562
  br i1 %_3, label %bb2, label %bb3, !dbg !3562

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_fce046c10af11fd43762995f151c5095) #11, !dbg !3563
  unreachable, !dbg !3563

bb2:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3564, metadata !DIExpression()), !dbg !3569
  store ptr %r, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1173, metadata !DIExpression()), !dbg !3571
  %_0.i4 = ptrtoint ptr %r to i64, !dbg !3573
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3564, metadata !DIExpression()), !dbg !3574
  store ptr %l, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !1173, metadata !DIExpression()), !dbg !3576
  %_0.i = ptrtoint ptr %l to i64, !dbg !3578
  %_9.0 = sub i64 %_0.i4, %_0.i, !dbg !3579
  %_9.1 = icmp ult i64 %_0.i4, %_0.i, !dbg !3579
  %0 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !3579
  br i1 %0, label %panic, label %bb6, !dbg !3579

bb6:                                              ; preds = %bb2
  %_11 = icmp eq i64 24, 0, !dbg !3579
  %1 = call i1 @llvm.expect.i1(i1 %_11, i1 false), !dbg !3579
  br i1 %1, label %panic1, label %bb8, !dbg !3579

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_640f35fd1cfd54c2ff846760bec94d82) #11, !dbg !3579
  unreachable, !dbg !3579

bb8:                                              ; preds = %bb6
  %_0 = udiv i64 %_9.0, 24, !dbg !3579
  ret i64 %_0, !dbg !3580

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_640f35fd1cfd54c2ff846760bec94d82) #11, !dbg !3579
  unreachable, !dbg !3579
}

; core::slice::sort::partial_insertion_sort
; Function Attrs: cold noredzone nounwind
define zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17he4be3c0e327c0313E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #2 !dbg !3581 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_44 = alloca i64, align 8
  %_37 = alloca i64, align 8
  %_15 = alloca { ptr, ptr }, align 8
  %_9 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %i = alloca i64, align 8
  %_0 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3585, metadata !DIExpression()), !dbg !3593
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3586, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.declare(metadata ptr %i, metadata !3589, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3591, metadata !DIExpression()), !dbg !3596
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3597
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3587, metadata !DIExpression()), !dbg !3598
  store i64 1, ptr %i, align 8, !dbg !3599
  store i64 0, ptr %_7, align 8, !dbg !3600
  %2 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3600
  store i64 5, ptr %2, align 8, !dbg !3600
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3600
  %4 = load i64, ptr %3, align 8, !dbg !3600, !noundef !24
  %5 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3600
  %6 = load i64, ptr %5, align 8, !dbg !3600, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %7 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc9040ef59f55e22cE"(i64 %4, i64 %6) #10, !dbg !3600
  %_6.0 = extractvalue { i64, i64 } %7, 0, !dbg !3600
  %_6.1 = extractvalue { i64, i64 } %7, 1, !dbg !3600
  %8 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3600
  store i64 %_6.0, ptr %8, align 8, !dbg !3600
  %9 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3600
  store i64 %_6.1, ptr %9, align 8, !dbg !3600
  br label %bb2, !dbg !3601

bb2:                                              ; preds = %bb23, %bb19, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %10 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5014b81ca02722adE"(ptr align 8 %iter) #10, !dbg !3596
  store { i64, i64 } %10, ptr %_9, align 8, !dbg !3596
  %_11 = load i64, ptr %_9, align 8, !dbg !3596, !range !945, !noundef !24
  %11 = icmp eq i64 %_11, 0, !dbg !3596
  br i1 %11, label %bb5, label %bb6, !dbg !3596

bb5:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !3602
  br label %bb26, !dbg !3603

bb6:                                              ; preds = %bb13, %bb2
  %_13 = load i64, ptr %i, align 8, !dbg !3604, !noundef !24
  %_12 = icmp ult i64 %_13, %v.1, !dbg !3604
  br i1 %_12, label %bb7, label %bb14, !dbg !3604

bb26:                                             ; preds = %bb15, %bb17, %bb5
  %12 = load i8, ptr %_0, align 1, !dbg !3603, !range !529, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !3603
  ret i1 %13, !dbg !3603

bb14:                                             ; preds = %bb9, %bb6
  %_26 = load i64, ptr %i, align 8, !dbg !3605, !noundef !24
  %_25 = icmp eq i64 %_26, %v.1, !dbg !3605
  br i1 %_25, label %bb15, label %bb16, !dbg !3605

bb7:                                              ; preds = %bb6
  %_18 = load i64, ptr %i, align 8, !dbg !3606, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_16 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %v.0, i64 %v.1, i64 %_18) #10, !dbg !3607
  %_22 = load i64, ptr %i, align 8, !dbg !3608, !noundef !24
  %_23.0 = sub i64 %_22, 1, !dbg !3608
  %_23.1 = icmp ult i64 %_22, 1, !dbg !3608
  %14 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false), !dbg !3608
  br i1 %14, label %panic, label %bb9, !dbg !3608

bb9:                                              ; preds = %bb7
; call core::slice::<impl [T]>::get_unchecked
  %_19 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %v.0, i64 %v.1, i64 %_23.0) #10, !dbg !3609
  store ptr %_16, ptr %_15, align 8, !dbg !3610
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 1, !dbg !3610
  store ptr %_19, ptr %15, align 8, !dbg !3610
  %16 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 0, !dbg !3610
  %17 = load ptr, ptr %16, align 8, !dbg !3610, !nonnull !24, !align !386, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 1, !dbg !3610
  %19 = load ptr, ptr %18, align 8, !dbg !3610, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_14 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %17, ptr align 8 %19) #10, !dbg !3610
  br i1 %_14, label %bb14, label %bb12, !dbg !3610

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_5f0f101382d821a798b9d20f1930ca3c) #11, !dbg !3608
  unreachable, !dbg !3608

bb12:                                             ; preds = %bb9
  %20 = load i64, ptr %i, align 8, !dbg !3611, !noundef !24
  %21 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 1), !dbg !3611
  %_24.0 = extractvalue { i64, i1 } %21, 0, !dbg !3611
  %_24.1 = extractvalue { i64, i1 } %21, 1, !dbg !3611
  %22 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !3611
  br i1 %22, label %panic1, label %bb13, !dbg !3611

bb13:                                             ; preds = %bb12
  store i64 %_24.0, ptr %i, align 8, !dbg !3611
  br label %bb6, !dbg !3612

panic1:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_516f56e032c7adcb72fbee6e086e8106) #11, !dbg !3611
  unreachable, !dbg !3611

bb16:                                             ; preds = %bb14
  %_27 = icmp ult i64 %v.1, 50, !dbg !3613
  br i1 %_27, label %bb17, label %bb18, !dbg !3613

bb15:                                             ; preds = %bb14
  store i8 1, ptr %_0, align 1, !dbg !3614
  br label %bb26, !dbg !3615

bb18:                                             ; preds = %bb16
  %_30 = load i64, ptr %i, align 8, !dbg !3618, !noundef !24
  %_31.0 = sub i64 %_30, 1, !dbg !3618
  %_31.1 = icmp ult i64 %_30, 1, !dbg !3618
  %23 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !3618
  br i1 %23, label %panic2, label %bb19, !dbg !3618

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_0, align 1, !dbg !3619
  br label %bb26, !dbg !3615

bb19:                                             ; preds = %bb18
  %_32 = load i64, ptr %i, align 8, !dbg !3620, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h84f021ce3b5c8cf1E"(ptr align 8 %v.0, i64 %v.1, i64 %_31.0, i64 %_32, ptr align 8 @alloc_c24109fd354c9f4493ad3956830e8fcd) #10, !dbg !3621
  %_34 = load i64, ptr %i, align 8, !dbg !3622, !noundef !24
  %_33 = icmp uge i64 %_34, 2, !dbg !3622
  br i1 %_33, label %bb21, label %bb2, !dbg !3622

panic2:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_6ef0a83a3bc322d241362dda17319c1b) #11, !dbg !3618
  unreachable, !dbg !3618

bb21:                                             ; preds = %bb19
  %_38 = load i64, ptr %i, align 8, !dbg !3623, !noundef !24
  store i64 %_38, ptr %_37, align 8, !dbg !3624
  %24 = load i64, ptr %_37, align 8, !dbg !3625, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %25 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h773a3748039f917cE"(ptr align 8 %v.0, i64 %v.1, i64 %24, ptr align 8 @alloc_173228404dcc0f1f85a341382318ddf8) #10, !dbg !3625
  %_36.0 = extractvalue { ptr, i64 } %25, 0, !dbg !3625
  %_36.1 = extractvalue { ptr, i64 } %25, 1, !dbg !3625
  %_40 = load i64, ptr %i, align 8, !dbg !3626, !noundef !24
  %_41.0 = sub i64 %_40, 1, !dbg !3626
  %_41.1 = icmp ult i64 %_40, 1, !dbg !3626
  %26 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !3626
  br i1 %26, label %panic3, label %bb23, !dbg !3626

bb23:                                             ; preds = %bb21
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17h9bb1a8fb9b8d0a1bE(ptr align 8 %_36.0, i64 %_36.1, i64 %_41.0, ptr align 8 %is_less) #10, !dbg !3627
  %_45 = load i64, ptr %i, align 8, !dbg !3628, !noundef !24
  store i64 %_45, ptr %_44, align 8, !dbg !3629
  %27 = load i64, ptr %_44, align 8, !dbg !3630, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %28 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h773a3748039f917cE"(ptr align 8 %v.0, i64 %v.1, i64 %27, ptr align 8 @alloc_f9a588d8b691921f9f4729bda19af76e) #10, !dbg !3630
  %_43.0 = extractvalue { ptr, i64 } %28, 0, !dbg !3630
  %_43.1 = extractvalue { ptr, i64 } %28, 1, !dbg !3630
; call core::slice::sort::insertion_sort_shift_right
  call void @_ZN4core5slice4sort26insertion_sort_shift_right17h041f6269647b0c40E(ptr align 8 %_43.0, i64 %_43.1, i64 1, ptr align 8 %is_less) #10, !dbg !3631
  br label %bb2, !dbg !3631

panic3:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_30eeae45f7745520eaea2afbff01ff94) #11, !dbg !3626
  unreachable, !dbg !3626

bb4:                                              ; No predecessors!
  unreachable, !dbg !3596
}

; core::slice::sort::insertion_sort_shift_left
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort25insertion_sort_shift_left17h9bb1a8fb9b8d0a1bE(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3632 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_17 = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_9 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3636, metadata !DIExpression()), !dbg !3645
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3637, metadata !DIExpression()), !dbg !3646
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3638, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3641, metadata !DIExpression()), !dbg !3648
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3649
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3639, metadata !DIExpression()), !dbg !3650
  %2 = icmp eq i64 %offset, 0, !dbg !3651
  br i1 %2, label %bb3, label %bb1, !dbg !3651

bb3:                                              ; preds = %bb1, %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_5429279aa16fa0cdfc25e6fc8726a06a, i64 46, ptr align 8 @alloc_ad0e06a3182d9bb7dafcdeed10cc2e6b) #11, !dbg !3652
  unreachable, !dbg !3652

bb1:                                              ; preds = %start
  %_6 = icmp ule i64 %offset, %v.1, !dbg !3653
  br i1 %_6, label %bb2, label %bb3, !dbg !3653

bb2:                                              ; preds = %bb1
  store i64 %offset, ptr %_9, align 8, !dbg !3654
  %3 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 1, !dbg !3654
  store i64 %v.1, ptr %3, align 8, !dbg !3654
  %4 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 0, !dbg !3654
  %5 = load i64, ptr %4, align 8, !dbg !3654, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 1, !dbg !3654
  %7 = load i64, ptr %6, align 8, !dbg !3654, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc9040ef59f55e22cE"(i64 %5, i64 %7) #10, !dbg !3654
  %_8.0 = extractvalue { i64, i64 } %8, 0, !dbg !3654
  %_8.1 = extractvalue { i64, i64 } %8, 1, !dbg !3654
  %9 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3654
  store i64 %_8.0, ptr %9, align 8, !dbg !3654
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3654
  store i64 %_8.1, ptr %10, align 8, !dbg !3654
  br label %bb5, !dbg !3655

bb5:                                              ; preds = %bb7, %bb2
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %11 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5014b81ca02722adE"(ptr align 8 %iter) #10, !dbg !3648
  store { i64, i64 } %11, ptr %_11, align 8, !dbg !3648
  %_13 = load i64, ptr %_11, align 8, !dbg !3648, !range !945, !noundef !24
  %12 = icmp eq i64 %_13, 0, !dbg !3648
  br i1 %12, label %bb9, label %bb7, !dbg !3648

bb9:                                              ; preds = %bb5
  ret void, !dbg !3656

bb7:                                              ; preds = %bb5
  %13 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3657
  %i = load i64, ptr %13, align 8, !dbg !3657, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3657
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3643, metadata !DIExpression()), !dbg !3658
  store i64 %i, ptr %_17, align 8, !dbg !3659
  %14 = load i64, ptr %_17, align 8, !dbg !3660, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %15 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5f6c58c808735e84E"(ptr align 8 %v.0, i64 %v.1, i64 %14, ptr align 8 @alloc_8a7118eee8b265b787a7897f18ece731) #10, !dbg !3660
  %_16.0 = extractvalue { ptr, i64 } %15, 0, !dbg !3660
  %_16.1 = extractvalue { ptr, i64 } %15, 1, !dbg !3660
; call core::slice::sort::insert_tail
  call void @_ZN4core5slice4sort11insert_tail17hadc962c8a0e3fa3fE(ptr align 8 %_16.0, i64 %_16.1, ptr align 8 %is_less) #10, !dbg !3661
  br label %bb5, !dbg !3661

bb8:                                              ; No predecessors!
  unreachable, !dbg !3648
}

; core::slice::sort::insertion_sort_shift_right
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort26insertion_sort_shift_right17h041f6269647b0c40E(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3662 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3664, metadata !DIExpression()), !dbg !3673
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3665, metadata !DIExpression()), !dbg !3674
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3666, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3669, metadata !DIExpression()), !dbg !3676
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3677
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3667, metadata !DIExpression()), !dbg !3678
  %2 = icmp eq i64 %offset, 0, !dbg !3679
  br i1 %2, label %bb4, label %bb1, !dbg !3679

bb4:                                              ; preds = %bb2, %bb1, %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_6973cb22fd5a814eff7046b5b9169c77, i64 58, ptr align 8 @alloc_9698abd34a8ebbcb64cd194588d81c5f) #11, !dbg !3680
  unreachable, !dbg !3680

bb1:                                              ; preds = %start
  %_6 = icmp ule i64 %offset, %v.1, !dbg !3681
  br i1 %_6, label %bb2, label %bb4, !dbg !3681

bb2:                                              ; preds = %bb1
  %_7 = icmp uge i64 %v.1, 2, !dbg !3682
  br i1 %_7, label %bb3, label %bb4, !dbg !3682

bb3:                                              ; preds = %bb2
  store i64 0, ptr %_11, align 8, !dbg !3683
  %3 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3683
  store i64 %offset, ptr %3, align 8, !dbg !3683
  %4 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 0, !dbg !3683
  %5 = load i64, ptr %4, align 8, !dbg !3683, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3683
  %7 = load i64, ptr %6, align 8, !dbg !3683, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %8 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hc93b5f8fa475ff04E(i64 %5, i64 %7) #10, !dbg !3683
  %_10.0 = extractvalue { i64, i64 } %8, 0, !dbg !3683
  %_10.1 = extractvalue { i64, i64 } %8, 1, !dbg !3683
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf86c5f7bf3977df8E"(i64 %_10.0, i64 %_10.1) #10, !dbg !3683
  %_9.0 = extractvalue { i64, i64 } %9, 0, !dbg !3683
  %_9.1 = extractvalue { i64, i64 } %9, 1, !dbg !3683
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3683
  store i64 %_9.0, ptr %10, align 8, !dbg !3683
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3683
  store i64 %_9.1, ptr %11, align 8, !dbg !3683
  br label %bb7, !dbg !3684

bb7:                                              ; preds = %bb9, %bb3
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h76390c5a0cb34d80E"(ptr align 8 %iter) #10, !dbg !3676
  store { i64, i64 } %12, ptr %_13, align 8, !dbg !3676
  %_15 = load i64, ptr %_13, align 8, !dbg !3676, !range !945, !noundef !24
  %13 = icmp eq i64 %_15, 0, !dbg !3676
  br i1 %13, label %bb11, label %bb9, !dbg !3676

bb11:                                             ; preds = %bb7
  ret void, !dbg !3685

bb9:                                              ; preds = %bb7
  %14 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3686
  %i = load i64, ptr %14, align 8, !dbg !3686, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3686
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3671, metadata !DIExpression()), !dbg !3687
  store i64 %i, ptr %_19, align 8, !dbg !3688
  %15 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !3688
  store i64 %v.1, ptr %15, align 8, !dbg !3688
  %16 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !3689
  %17 = load i64, ptr %16, align 8, !dbg !3689, !noundef !24
  %18 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !3689
  %19 = load i64, ptr %18, align 8, !dbg !3689, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %20 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5b84afda7c548221E"(ptr align 8 %v.0, i64 %v.1, i64 %17, i64 %19, ptr align 8 @alloc_3ace6a7646e05677a79dbb3c5652faec) #10, !dbg !3689
  %_18.0 = extractvalue { ptr, i64 } %20, 0, !dbg !3689
  %_18.1 = extractvalue { ptr, i64 } %20, 1, !dbg !3689
; call core::slice::sort::insert_head
  call void @_ZN4core5slice4sort11insert_head17h2280a883779c6cdbE(ptr align 8 %_18.0, i64 %_18.1, ptr align 8 %is_less) #10, !dbg !3690
  br label %bb7, !dbg !3690

bb10:                                             ; No predecessors!
  unreachable, !dbg !3676
}

; core::slice::sort::recurse
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort7recurse17h8c848ef543fbf11aE(ptr align 8 %0, i64 %1, ptr align 8 %is_less, ptr align 8 %2, i32 %3) unnamed_addr #1 !dbg !3691 {
start:
  %pivot.dbg.spill9 = alloca ptr, align 8
  %right.dbg.spill7 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill4 = alloca { ptr, i64 }, align 8
  %right.dbg.spill = alloca { ptr, i64 }, align 8
  %left.dbg.spill = alloca { ptr, i64 }, align 8
  %was_p.dbg.spill = alloca i8, align 1
  %mid.dbg.spill2 = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %p.dbg.spill = alloca ptr, align 8
  %likely_sorted.dbg.spill = alloca i8, align 1
  %pivot.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %_70 = alloca ptr, align 8
  %_68 = alloca ptr, align 8
  %_55 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_51 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_39 = alloca i64, align 8
  %_31 = alloca { ptr, ptr }, align 8
  %was_partitioned = alloca i8, align 1
  %was_balanced = alloca i8, align 1
  %limit = alloca i32, align 4
  %pred = alloca ptr, align 8
  %v = alloca { ptr, i64 }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %pred, align 8
  store i32 %3, ptr %limit, align 4
  call void @llvm.dbg.declare(metadata ptr %v, metadata !3706, metadata !DIExpression()), !dbg !3734
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3707, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.declare(metadata ptr %pred, metadata !3708, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.declare(metadata ptr %limit, metadata !3709, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.declare(metadata ptr %was_balanced, metadata !3710, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.declare(metadata ptr %was_partitioned, metadata !3712, metadata !DIExpression()), !dbg !3739
  store i8 1, ptr %was_balanced, align 1, !dbg !3740
  store i8 1, ptr %was_partitioned, align 1, !dbg !3741
  br label %bb1, !dbg !3742

bb1:                                              ; preds = %bb31, %bb33, %bb20, %start
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3743
  %_8.0 = load ptr, ptr %6, align 8, !dbg !3743, !nonnull !24, !align !386, !noundef !24
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3743
  %_8.1 = load i64, ptr %7, align 8, !dbg !3743, !noundef !24
  store i64 %_8.1, ptr %len.dbg.spill, align 8, !dbg !3743
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3714, metadata !DIExpression()), !dbg !3744
  %_9 = icmp ule i64 %_8.1, 20, !dbg !3745
  br i1 %_9, label %bb2, label %bb4, !dbg !3745

bb4:                                              ; preds = %bb1
  %_13 = load i32, ptr %limit, align 4, !dbg !3746, !noundef !24
  %8 = icmp eq i32 %_13, 0, !dbg !3746
  br i1 %8, label %bb5, label %bb6, !dbg !3746

bb2:                                              ; preds = %bb1
  %_10 = icmp uge i64 %_8.1, 2, !dbg !3747
  br i1 %_10, label %bb3, label %bb35, !dbg !3747

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3748
  %_15.0 = load ptr, ptr %9, align 8, !dbg !3748, !nonnull !24, !align !386, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3748
  %_15.1 = load i64, ptr %10, align 8, !dbg !3748, !noundef !24
; call core::slice::sort::heapsort
  call void @_ZN4core5slice4sort8heapsort17h35493d952d5a5b4bE(ptr align 8 %_15.0, i64 %_15.1, ptr align 8 %is_less) #10, !dbg !3749
  br label %bb35, !dbg !3749

bb6:                                              ; preds = %bb4
  %11 = load i8, ptr %was_balanced, align 1, !dbg !3750, !range !529, !noundef !24
  %_16 = trunc i8 %11 to i1, !dbg !3750
  br i1 %_16, label %bb10, label %bb7, !dbg !3750

bb35:                                             ; preds = %bb3, %bb2, %bb14, %bb5
  ret void, !dbg !3751

bb7:                                              ; preds = %bb6
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3752
  %_18.0 = load ptr, ptr %12, align 8, !dbg !3752, !nonnull !24, !align !386, !noundef !24
  %13 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3752
  %_18.1 = load i64, ptr %13, align 8, !dbg !3752, !noundef !24
; call core::slice::sort::break_patterns
  call void @_ZN4core5slice4sort14break_patterns17h081dabbdbdf54a32E(ptr align 8 %_18.0, i64 %_18.1) #10, !dbg !3753
  %14 = load i32, ptr %limit, align 4, !dbg !3754, !noundef !24
  %_19.0 = sub i32 %14, 1, !dbg !3754
  %_19.1 = icmp ult i32 %14, 1, !dbg !3754
  %15 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !3754
  br i1 %15, label %panic, label %bb9, !dbg !3754

bb10:                                             ; preds = %bb9, %bb6
  %16 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3755
  %_23.0 = load ptr, ptr %16, align 8, !dbg !3755, !nonnull !24, !align !386, !noundef !24
  %17 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3755
  %_23.1 = load i64, ptr %17, align 8, !dbg !3755, !noundef !24
; call core::slice::sort::choose_pivot
  %18 = call { i64, i8 } @_ZN4core5slice4sort12choose_pivot17hdb34892171d6c6e2E(ptr align 8 %_23.0, i64 %_23.1, ptr align 8 %is_less) #10, !dbg !3756
  %_22.0 = extractvalue { i64, i8 } %18, 0, !dbg !3756
  %19 = extractvalue { i64, i8 } %18, 1, !dbg !3756
  %_22.1 = trunc i8 %19 to i1, !dbg !3756
  store i64 %_22.0, ptr %pivot.dbg.spill, align 8, !dbg !3757
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3716, metadata !DIExpression()), !dbg !3758
  %20 = zext i1 %_22.1 to i8, !dbg !3759
  store i8 %20, ptr %likely_sorted.dbg.spill, align 1, !dbg !3759
  call void @llvm.dbg.declare(metadata ptr %likely_sorted.dbg.spill, metadata !3718, metadata !DIExpression()), !dbg !3760
  %21 = load i8, ptr %was_balanced, align 1, !dbg !3761, !range !529, !noundef !24
  %_24 = trunc i8 %21 to i1, !dbg !3761
  br i1 %_24, label %bb12, label %bb16, !dbg !3761

bb9:                                              ; preds = %bb7
  store i32 %_19.0, ptr %limit, align 4, !dbg !3754
  br label %bb10, !dbg !3762

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_83fa0590238981e461fbbab4c10fee96) #11, !dbg !3754
  unreachable, !dbg !3754

bb16:                                             ; preds = %bb14, %bb13, %bb12, %bb10
  %22 = load ptr, ptr %pred, align 8, !dbg !3763, !noundef !24
  %23 = ptrtoint ptr %22 to i64, !dbg !3763
  %24 = icmp eq i64 %23, 0, !dbg !3763
  %_28 = select i1 %24, i64 0, i64 1, !dbg !3763
  %25 = icmp eq i64 %_28, 1, !dbg !3763
  br i1 %25, label %bb17, label %bb23, !dbg !3763

bb12:                                             ; preds = %bb10
  %26 = load i8, ptr %was_partitioned, align 1, !dbg !3764, !range !529, !noundef !24
  %_25 = trunc i8 %26 to i1, !dbg !3764
  br i1 %_25, label %bb13, label %bb16, !dbg !3764

bb13:                                             ; preds = %bb12
  br i1 %_22.1, label %bb14, label %bb16, !dbg !3765

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3766
  %_27.0 = load ptr, ptr %27, align 8, !dbg !3766, !nonnull !24, !align !386, !noundef !24
  %28 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3766
  %_27.1 = load i64, ptr %28, align 8, !dbg !3766, !noundef !24
; call core::slice::sort::partial_insertion_sort
  %_26 = call zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17he4be3c0e327c0313E(ptr align 8 %_27.0, i64 %_27.1, ptr align 8 %is_less) #10, !dbg !3767
  br i1 %_26, label %bb35, label %bb16, !dbg !3767

bb17:                                             ; preds = %bb16
  %p = load ptr, ptr %pred, align 8, !dbg !3768, !nonnull !24, !align !386, !noundef !24
  store ptr %p, ptr %p.dbg.spill, align 8, !dbg !3768
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !3719, metadata !DIExpression()), !dbg !3768
  %29 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3769
  %30 = load ptr, ptr %29, align 8, !dbg !3769, !nonnull !24, !align !386, !noundef !24
  %31 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3769
  %_33 = load i64, ptr %31, align 8, !dbg !3769, !noundef !24
  %_34 = icmp ult i64 %_22.0, %_33, !dbg !3769
  %32 = call i1 @llvm.expect.i1(i1 %_34, i1 true), !dbg !3769
  br i1 %32, label %bb18, label %panic1, !dbg !3769

bb23:                                             ; preds = %bb18, %bb16
  %33 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3770
  %_43.0 = load ptr, ptr %33, align 8, !dbg !3770, !nonnull !24, !align !386, !noundef !24
  %34 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3770
  %_43.1 = load i64, ptr %34, align 8, !dbg !3770, !noundef !24
; call core::slice::sort::partition
  %35 = call { i64, i8 } @_ZN4core5slice4sort9partition17he4cc58b5d7a6db8eE(ptr align 8 %_43.0, i64 %_43.1, i64 %_22.0, ptr align 8 %is_less) #10, !dbg !3771
  %_42.0 = extractvalue { i64, i8 } %35, 0, !dbg !3771
  %36 = extractvalue { i64, i8 } %35, 1, !dbg !3771
  %_42.1 = trunc i8 %36 to i1, !dbg !3771
  store i64 %_42.0, ptr %mid.dbg.spill2, align 8, !dbg !3772
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill2, metadata !3723, metadata !DIExpression()), !dbg !3773
  %37 = zext i1 %_42.1 to i8, !dbg !3774
  store i8 %37, ptr %was_p.dbg.spill, align 1, !dbg !3774
  call void @llvm.dbg.declare(metadata ptr %was_p.dbg.spill, metadata !3725, metadata !DIExpression()), !dbg !3775
  %_46.0 = sub i64 %_8.1, %_42.0, !dbg !3776
  %_46.1 = icmp ult i64 %_8.1, %_42.0, !dbg !3776
  %38 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3776
  br i1 %38, label %panic3, label %bb25, !dbg !3776

bb18:                                             ; preds = %bb17
  %39 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3777
  %40 = load ptr, ptr %39, align 8, !dbg !3777, !nonnull !24, !align !386, !noundef !24
  %41 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3777
  %42 = load i64, ptr %41, align 8, !dbg !3777, !noundef !24
  %_32 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %40, i64 0, i64 %_22.0, !dbg !3777
  store ptr %p, ptr %_31, align 8, !dbg !3778
  %43 = getelementptr inbounds { ptr, ptr }, ptr %_31, i32 0, i32 1, !dbg !3778
  store ptr %_32, ptr %43, align 8, !dbg !3778
  %44 = getelementptr inbounds { ptr, ptr }, ptr %_31, i32 0, i32 0, !dbg !3778
  %45 = load ptr, ptr %44, align 8, !dbg !3778, !nonnull !24, !align !386, !noundef !24
  %46 = getelementptr inbounds { ptr, ptr }, ptr %_31, i32 0, i32 1, !dbg !3778
  %47 = load ptr, ptr %46, align 8, !dbg !3778, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_30 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %45, ptr align 8 %47) #10, !dbg !3778
  br i1 %_30, label %bb23, label %bb20, !dbg !3778

panic1:                                           ; preds = %bb17
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %_22.0, i64 %_33, ptr align 8 @alloc_0d6eede697ab231f0ae0f244a7156164) #11, !dbg !3769
  unreachable, !dbg !3769

bb20:                                             ; preds = %bb18
  %48 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3779
  %_36.0 = load ptr, ptr %48, align 8, !dbg !3779, !nonnull !24, !align !386, !noundef !24
  %49 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3779
  %_36.1 = load i64, ptr %49, align 8, !dbg !3779, !noundef !24
; call core::slice::sort::partition_equal
  %mid = call i64 @_ZN4core5slice4sort15partition_equal17h25126ee6119f986fE(ptr align 8 %_36.0, i64 %_36.1, i64 %_22.0, ptr align 8 %is_less) #10, !dbg !3780
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3780
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3721, metadata !DIExpression()), !dbg !3781
  %50 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3782
  %_38.0 = load ptr, ptr %50, align 8, !dbg !3782, !nonnull !24, !align !386, !noundef !24
  %51 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3782
  %_38.1 = load i64, ptr %51, align 8, !dbg !3782, !noundef !24
  store i64 %mid, ptr %_39, align 8, !dbg !3783
  %52 = load i64, ptr %_39, align 8, !dbg !3784, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %53 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hd3ffec23183eb2e1E"(ptr align 8 %_38.0, i64 %_38.1, i64 %52, ptr align 8 @alloc_1c37b9353529e350e07b16b4e2be7ddb) #10, !dbg !3784
  %_37.0 = extractvalue { ptr, i64 } %53, 0, !dbg !3784
  %_37.1 = extractvalue { ptr, i64 } %53, 1, !dbg !3784
  %54 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3785
  store ptr %_37.0, ptr %54, align 8, !dbg !3785
  %55 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3785
  store i64 %_37.1, ptr %55, align 8, !dbg !3785
  br label %bb1, !dbg !3786

bb25:                                             ; preds = %bb23
; call core::cmp::min
  %_44 = call i64 @_ZN4core3cmp3min17h3e905c43a1a3a18fE(i64 %_42.0, i64 %_46.0) #10, !dbg !3788
  %_47 = udiv i64 %_8.1, 8, !dbg !3789
  %56 = icmp uge i64 %_44, %_47, !dbg !3790
  %57 = zext i1 %56 to i8, !dbg !3790
  store i8 %57, ptr %was_balanced, align 1, !dbg !3790
  %58 = zext i1 %_42.1 to i8, !dbg !3791
  store i8 %58, ptr %was_partitioned, align 1, !dbg !3791
  %59 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3792
  %_52.0 = load ptr, ptr %59, align 8, !dbg !3792, !nonnull !24, !align !386, !noundef !24
  %60 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3792
  %_52.1 = load i64, ptr %60, align 8, !dbg !3792, !noundef !24
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h348f60bd3119c438E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_51, ptr align 8 %_52.0, i64 %_52.1, i64 %_42.0, ptr align 8 @alloc_d2b7bf30877bfd7ffc4ba091cd50fac1) #10, !dbg !3792
  %61 = getelementptr inbounds { ptr, i64 }, ptr %_51, i32 0, i32 0, !dbg !3793
  %left.0 = load ptr, ptr %61, align 8, !dbg !3793, !nonnull !24, !align !386, !noundef !24
  %62 = getelementptr inbounds { ptr, i64 }, ptr %_51, i32 0, i32 1, !dbg !3793
  %left.1 = load i64, ptr %62, align 8, !dbg !3793, !noundef !24
  %63 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 0, !dbg !3793
  store ptr %left.0, ptr %63, align 8, !dbg !3793
  %64 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 1, !dbg !3793
  store i64 %left.1, ptr %64, align 8, !dbg !3793
  call void @llvm.dbg.declare(metadata ptr %left.dbg.spill, metadata !3726, metadata !DIExpression()), !dbg !3794
  %65 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_51, i32 0, i32 1, !dbg !3795
  %66 = getelementptr inbounds { ptr, i64 }, ptr %65, i32 0, i32 0, !dbg !3795
  %right.0 = load ptr, ptr %66, align 8, !dbg !3795, !nonnull !24, !align !386, !noundef !24
  %67 = getelementptr inbounds { ptr, i64 }, ptr %65, i32 0, i32 1, !dbg !3795
  %right.1 = load i64, ptr %67, align 8, !dbg !3795, !noundef !24
  %68 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 0, !dbg !3795
  store ptr %right.0, ptr %68, align 8, !dbg !3795
  %69 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 1, !dbg !3795
  store i64 %right.1, ptr %69, align 8, !dbg !3795
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill, metadata !3728, metadata !DIExpression()), !dbg !3796
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h348f60bd3119c438E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_55, ptr align 8 %right.0, i64 %right.1, i64 1, ptr align 8 @alloc_8decd09f5d6c1655c16a5f75c012dbd7) #10, !dbg !3797
  %70 = getelementptr inbounds { ptr, i64 }, ptr %_55, i32 0, i32 0, !dbg !3798
  %pivot.0 = load ptr, ptr %70, align 8, !dbg !3798, !nonnull !24, !align !386, !noundef !24
  %71 = getelementptr inbounds { ptr, i64 }, ptr %_55, i32 0, i32 1, !dbg !3798
  %pivot.1 = load i64, ptr %71, align 8, !dbg !3798, !noundef !24
  %72 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 0, !dbg !3798
  store ptr %pivot.0, ptr %72, align 8, !dbg !3798
  %73 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 1, !dbg !3798
  store i64 %pivot.1, ptr %73, align 8, !dbg !3798
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill4, metadata !3729, metadata !DIExpression()), !dbg !3799
  %74 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_55, i32 0, i32 1, !dbg !3800
  %75 = getelementptr inbounds { ptr, i64 }, ptr %74, i32 0, i32 0, !dbg !3800
  %right.05 = load ptr, ptr %75, align 8, !dbg !3800, !nonnull !24, !align !386, !noundef !24
  %76 = getelementptr inbounds { ptr, i64 }, ptr %74, i32 0, i32 1, !dbg !3800
  %right.16 = load i64, ptr %76, align 8, !dbg !3800, !noundef !24
  %77 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 0, !dbg !3800
  store ptr %right.05, ptr %77, align 8, !dbg !3800
  %78 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 1, !dbg !3800
  store i64 %right.16, ptr %78, align 8, !dbg !3800
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill7, metadata !3731, metadata !DIExpression()), !dbg !3801
  %_59 = icmp ult i64 0, %pivot.1, !dbg !3802
  %79 = call i1 @llvm.expect.i1(i1 %_59, i1 true), !dbg !3802
  br i1 %79, label %bb30, label %panic8, !dbg !3802

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_6466639cd9f6a3e02754a7925ae9b68e) #11, !dbg !3776
  unreachable, !dbg !3776

bb30:                                             ; preds = %bb25
  %pivot = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3803
  store ptr %pivot, ptr %pivot.dbg.spill9, align 8, !dbg !3803
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill9, metadata !3732, metadata !DIExpression()), !dbg !3804
  %_60 = icmp ult i64 %left.1, %right.16, !dbg !3805
  br i1 %_60, label %bb31, label %bb33, !dbg !3805

panic8:                                           ; preds = %bb25
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 0, i64 %pivot.1, ptr align 8 @alloc_23c6c7c143303b0407d1984a29edc8da) #11, !dbg !3802
  unreachable, !dbg !3802

bb33:                                             ; preds = %bb30
  store ptr %pivot, ptr %_70, align 8, !dbg !3806
  %_71 = load i32, ptr %limit, align 4, !dbg !3807, !noundef !24
  %80 = load ptr, ptr %_70, align 8, !dbg !3808, !align !386, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h8c848ef543fbf11aE(ptr align 8 %right.05, i64 %right.16, ptr align 8 %is_less, ptr align 8 %80, i32 %_71) #10, !dbg !3808
  %81 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3809
  store ptr %left.0, ptr %81, align 8, !dbg !3809
  %82 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3809
  store i64 %left.1, ptr %82, align 8, !dbg !3809
  br label %bb1, !dbg !3810

bb31:                                             ; preds = %bb30
  %_66 = load ptr, ptr %pred, align 8, !dbg !3811, !align !386, !noundef !24
  %_67 = load i32, ptr %limit, align 4, !dbg !3812, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h8c848ef543fbf11aE(ptr align 8 %left.0, i64 %left.1, ptr align 8 %is_less, ptr align 8 %_66, i32 %_67) #10, !dbg !3813
  %83 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3814
  store ptr %right.05, ptr %83, align 8, !dbg !3814
  %84 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3814
  store i64 %right.16, ptr %84, align 8, !dbg !3814
  store ptr %pivot, ptr %_68, align 8, !dbg !3815
  %85 = load ptr, ptr %_68, align 8, !dbg !3816, !align !386, !noundef !24
  store ptr %85, ptr %pred, align 8, !dbg !3816
  br label %bb1, !dbg !3810

bb3:                                              ; preds = %bb2
  %86 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3817
  %_12.0 = load ptr, ptr %86, align 8, !dbg !3817, !nonnull !24, !align !386, !noundef !24
  %87 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3817
  %_12.1 = load i64, ptr %87, align 8, !dbg !3817, !noundef !24
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17h9bb1a8fb9b8d0a1bE(ptr align 8 %_12.0, i64 %_12.1, i64 1, ptr align 8 %is_less) #10, !dbg !3818
  br label %bb35, !dbg !3818
}

; core::slice::sort::heapsort
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort8heapsort17h35493d952d5a5b4bE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %0) unnamed_addr #2 !dbg !3819 {
start:
  %i.dbg.spill3 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_35 = alloca i64, align 8
  %_33 = alloca { { ptr, i64 }, i64 }, align 8
  %_26 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_22 = alloca { i64, i64 }, align 8
  %_19 = alloca { { ptr, i64 }, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %sift_down = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3821, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3822, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.declare(metadata ptr %sift_down, metadata !3823, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3829, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !3833, metadata !DIExpression()), !dbg !3843
  store ptr %is_less, ptr %sift_down, align 8, !dbg !3844
  %_8 = udiv i64 %v.1, 2, !dbg !3845
  store i64 0, ptr %_7, align 8, !dbg !3846
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3846
  store i64 %_8, ptr %3, align 8, !dbg !3846
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3846
  %5 = load i64, ptr %4, align 8, !dbg !3846, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3846
  %7 = load i64, ptr %6, align 8, !dbg !3846, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %8 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hc93b5f8fa475ff04E(i64 %5, i64 %7) #10, !dbg !3846
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3846
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3846
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf86c5f7bf3977df8E"(i64 %_6.0, i64 %_6.1) #10, !dbg !3846
  %_5.0 = extractvalue { i64, i64 } %9, 0, !dbg !3846
  %_5.1 = extractvalue { i64, i64 } %9, 1, !dbg !3846
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3846
  store i64 %_5.0, ptr %10, align 8, !dbg !3846
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3846
  store i64 %_5.1, ptr %11, align 8, !dbg !3846
  br label %bb4, !dbg !3847

bb4:                                              ; preds = %bb6, %start
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h76390c5a0cb34d80E"(ptr align 8 %iter) #10, !dbg !3842
  store { i64, i64 } %12, ptr %_13, align 8, !dbg !3842
  %_15 = load i64, ptr %_13, align 8, !dbg !3842, !range !945, !noundef !24
  %13 = icmp eq i64 %_15, 0, !dbg !3842
  br i1 %13, label %bb8, label %bb6, !dbg !3842

bb8:                                              ; preds = %bb4
  store i64 1, ptr %_22, align 8, !dbg !3848
  %14 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3848
  store i64 %v.1, ptr %14, align 8, !dbg !3848
  %15 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 0, !dbg !3848
  %16 = load i64, ptr %15, align 8, !dbg !3848, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3848
  %18 = load i64, ptr %17, align 8, !dbg !3848, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %19 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hc93b5f8fa475ff04E(i64 %16, i64 %18) #10, !dbg !3848
  %_21.0 = extractvalue { i64, i64 } %19, 0, !dbg !3848
  %_21.1 = extractvalue { i64, i64 } %19, 1, !dbg !3848
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf86c5f7bf3977df8E"(i64 %_21.0, i64 %_21.1) #10, !dbg !3848
  %_20.0 = extractvalue { i64, i64 } %20, 0, !dbg !3848
  %_20.1 = extractvalue { i64, i64 } %20, 1, !dbg !3848
  %21 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 0, !dbg !3848
  store i64 %_20.0, ptr %21, align 8, !dbg !3848
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 1, !dbg !3848
  store i64 %_20.1, ptr %22, align 8, !dbg !3848
  br label %bb11, !dbg !3849

bb6:                                              ; preds = %bb4
  %23 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3850
  %i2 = load i64, ptr %23, align 8, !dbg !3850, !noundef !24
  store i64 %i2, ptr %i.dbg.spill3, align 8, !dbg !3850
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill3, metadata !3831, metadata !DIExpression()), !dbg !3851
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3852
  store ptr %v.0, ptr %24, align 8, !dbg !3852
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3852
  store i64 %v.1, ptr %25, align 8, !dbg !3852
  %26 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3852
  store i64 %i2, ptr %26, align 8, !dbg !3852
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3852
  %28 = load ptr, ptr %27, align 8, !dbg !3852, !nonnull !24, !align !386, !noundef !24
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3852
  %30 = load i64, ptr %29, align 8, !dbg !3852, !noundef !24
  %31 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3852
  %32 = load i64, ptr %31, align 8, !dbg !3852, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h1de4da2a333a9a72E"(ptr align 8 %sift_down, ptr align 8 %28, i64 %30, i64 %32) #10, !dbg !3852
  br label %bb4, !dbg !3852

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %33 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h76390c5a0cb34d80E"(ptr align 8 %iter1) #10, !dbg !3843
  store { i64, i64 } %33, ptr %_26, align 8, !dbg !3843
  %_28 = load i64, ptr %_26, align 8, !dbg !3843, !range !945, !noundef !24
  %34 = icmp eq i64 %_28, 0, !dbg !3843
  br i1 %34, label %bb14, label %bb13, !dbg !3843

bb14:                                             ; preds = %bb11
  ret void, !dbg !3853

bb13:                                             ; preds = %bb11
  %35 = getelementptr inbounds { i64, i64 }, ptr %_26, i32 0, i32 1, !dbg !3854
  %i = load i64, ptr %35, align 8, !dbg !3854, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3854
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3835, metadata !DIExpression()), !dbg !3855
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h84f021ce3b5c8cf1E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %i, ptr align 8 @alloc_7ca4a2e9a4c07d9f7f1869f8ed42ca92) #10, !dbg !3856
  store i64 %i, ptr %_35, align 8, !dbg !3857
  %36 = load i64, ptr %_35, align 8, !dbg !3858, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %37 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h773a3748039f917cE"(ptr align 8 %v.0, i64 %v.1, i64 %36, ptr align 8 @alloc_300f6fbb1580ffceabe16060a8eb246d) #10, !dbg !3858
  %_34.0 = extractvalue { ptr, i64 } %37, 0, !dbg !3858
  %_34.1 = extractvalue { ptr, i64 } %37, 1, !dbg !3858
  %38 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3859
  store ptr %_34.0, ptr %38, align 8, !dbg !3859
  %39 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3859
  store i64 %_34.1, ptr %39, align 8, !dbg !3859
  %40 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3859
  store i64 0, ptr %40, align 8, !dbg !3859
  %41 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3859
  %42 = load ptr, ptr %41, align 8, !dbg !3859, !nonnull !24, !align !386, !noundef !24
  %43 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3859
  %44 = load i64, ptr %43, align 8, !dbg !3859, !noundef !24
  %45 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3859
  %46 = load i64, ptr %45, align 8, !dbg !3859, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h1de4da2a333a9a72E"(ptr align 8 %sift_down, ptr align 8 %42, i64 %44, i64 %46) #10, !dbg !3859
  br label %bb11, !dbg !3859

bb7:                                              ; No predecessors!
  unreachable, !dbg !3842
}

; core::slice::sort::heapsort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h1de4da2a333a9a72E"(ptr align 8 %_1, ptr align 8 %v.0, i64 %v.1, i64 %0) unnamed_addr #0 !dbg !3860 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_34 = alloca { ptr, ptr }, align 8
  %_21 = alloca { ptr, ptr }, align 8
  %child = alloca i64, align 8
  %node = alloca i64, align 8
  store i64 %0, ptr %node, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !3867, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !3870
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3865, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.declare(metadata ptr %node, metadata !3866, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.declare(metadata ptr %child, metadata !3868, metadata !DIExpression()), !dbg !3873
  br label %bb1, !dbg !3874

bb1:                                              ; preds = %bb16, %start
  %_6 = load i64, ptr %node, align 8, !dbg !3875, !noundef !24
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 %_6), !dbg !3876
  %_7.0 = extractvalue { i64, i1 } %3, 0, !dbg !3876
  %_7.1 = extractvalue { i64, i1 } %3, 1, !dbg !3876
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !3876
  br i1 %4, label %panic, label %bb2, !dbg !3876

bb2:                                              ; preds = %bb1
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7.0, i64 1), !dbg !3876
  %_8.0 = extractvalue { i64, i1 } %5, 0, !dbg !3876
  %_8.1 = extractvalue { i64, i1 } %5, 1, !dbg !3876
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3876
  br i1 %6, label %panic1, label %bb3, !dbg !3876

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_c86ce6b1a25c3c03c7c0c52b7424b759) #11, !dbg !3876
  unreachable, !dbg !3876

bb3:                                              ; preds = %bb2
  store i64 %_8.0, ptr %child, align 8, !dbg !3876
  %_10 = load i64, ptr %child, align 8, !dbg !3877, !noundef !24
  %_9 = icmp uge i64 %_10, %v.1, !dbg !3877
  br i1 %_9, label %bb18, label %bb4, !dbg !3877

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_c86ce6b1a25c3c03c7c0c52b7424b759) #11, !dbg !3876
  unreachable, !dbg !3876

bb4:                                              ; preds = %bb3
  %_15 = load i64, ptr %child, align 8, !dbg !3878, !noundef !24
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 1), !dbg !3878
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !3878
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !3878
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !3878
  br i1 %8, label %panic2, label %bb5, !dbg !3878

bb18:                                             ; preds = %bb14, %bb3
  ret void, !dbg !3879

bb5:                                              ; preds = %bb4
  %_13 = icmp ult i64 %_16.0, %v.1, !dbg !3878
  br i1 %_13, label %bb6, label %bb12, !dbg !3878

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_e8b6d9a583f41fc79cf021f4e515965a) #11, !dbg !3878
  unreachable, !dbg !3878

bb12:                                             ; preds = %bb11, %bb5
  %_48 = load ptr, ptr %_1, align 8, !dbg !3880, !nonnull !24, !align !386, !noundef !24
  %_36 = load i64, ptr %node, align 8, !dbg !3881, !noundef !24
  %_38 = icmp ult i64 %_36, %v.1, !dbg !3882
  %9 = call i1 @llvm.expect.i1(i1 %_38, i1 true), !dbg !3882
  br i1 %9, label %bb13, label %panic7, !dbg !3882

bb6:                                              ; preds = %bb5
  %_47 = load ptr, ptr %_1, align 8, !dbg !3883, !nonnull !24, !align !386, !noundef !24
  %_23 = load i64, ptr %child, align 8, !dbg !3884, !noundef !24
  %_25 = icmp ult i64 %_23, %v.1, !dbg !3885
  %10 = call i1 @llvm.expect.i1(i1 %_25, i1 true), !dbg !3885
  br i1 %10, label %bb7, label %panic3, !dbg !3885

bb7:                                              ; preds = %bb6
  %_22 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_23, !dbg !3886
  %_28 = load i64, ptr %child, align 8, !dbg !3887, !noundef !24
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_28, i64 1), !dbg !3887
  %_29.0 = extractvalue { i64, i1 } %11, 0, !dbg !3887
  %_29.1 = extractvalue { i64, i1 } %11, 1, !dbg !3887
  %12 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !3887
  br i1 %12, label %panic4, label %bb8, !dbg !3887

panic3:                                           ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %_23, i64 %v.1, ptr align 8 @alloc_1f3c27e86ce6c7b1a0fe6c0cd9d888b8) #11, !dbg !3885
  unreachable, !dbg !3885

bb8:                                              ; preds = %bb7
  %_31 = icmp ult i64 %_29.0, %v.1, !dbg !3888
  %13 = call i1 @llvm.expect.i1(i1 %_31, i1 true), !dbg !3888
  br i1 %13, label %bb9, label %panic5, !dbg !3888

panic4:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_b30e539db66474586730815c38fe2b77) #11, !dbg !3887
  unreachable, !dbg !3887

bb9:                                              ; preds = %bb8
  %_26 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_29.0, !dbg !3889
  store ptr %_22, ptr %_21, align 8, !dbg !3883
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3883
  store ptr %_26, ptr %14, align 8, !dbg !3883
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 0, !dbg !3883
  %16 = load ptr, ptr %15, align 8, !dbg !3883, !nonnull !24, !align !386, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3883
  %18 = load ptr, ptr %17, align 8, !dbg !3883, !nonnull !24, !align !386, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_20 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h034aa27057d712deE"(ptr align 8 %_47, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3883
  %_19 = zext i1 %_20 to i64, !dbg !3883
  %19 = load i64, ptr %child, align 8, !dbg !3890, !noundef !24
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 %_19), !dbg !3890
  %_32.0 = extractvalue { i64, i1 } %20, 0, !dbg !3890
  %_32.1 = extractvalue { i64, i1 } %20, 1, !dbg !3890
  %21 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !3890
  br i1 %21, label %panic6, label %bb11, !dbg !3890

panic5:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %_29.0, i64 %v.1, ptr align 8 @alloc_e536c70b3f170e46504cafb17873a583) #11, !dbg !3888
  unreachable, !dbg !3888

bb11:                                             ; preds = %bb9
  store i64 %_32.0, ptr %child, align 8, !dbg !3890
  br label %bb12, !dbg !3891

panic6:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_528187d795517c3c379de08807a1d217) #11, !dbg !3890
  unreachable, !dbg !3890

bb13:                                             ; preds = %bb12
  %_35 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_36, !dbg !3892
  %_40 = load i64, ptr %child, align 8, !dbg !3893, !noundef !24
  %_42 = icmp ult i64 %_40, %v.1, !dbg !3894
  %22 = call i1 @llvm.expect.i1(i1 %_42, i1 true), !dbg !3894
  br i1 %22, label %bb14, label %panic8, !dbg !3894

panic7:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %_36, i64 %v.1, ptr align 8 @alloc_900a452e50a91b273f529a598e1c9387) #11, !dbg !3882
  unreachable, !dbg !3882

bb14:                                             ; preds = %bb13
  %_39 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_40, !dbg !3895
  store ptr %_35, ptr %_34, align 8, !dbg !3880
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_34, i32 0, i32 1, !dbg !3880
  store ptr %_39, ptr %23, align 8, !dbg !3880
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_34, i32 0, i32 0, !dbg !3880
  %25 = load ptr, ptr %24, align 8, !dbg !3880, !nonnull !24, !align !386, !noundef !24
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_34, i32 0, i32 1, !dbg !3880
  %27 = load ptr, ptr %26, align 8, !dbg !3880, !nonnull !24, !align !386, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_33 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h034aa27057d712deE"(ptr align 8 %_48, ptr align 8 %25, ptr align 8 %27) #10, !dbg !3880
  br i1 %_33, label %bb16, label %bb18, !dbg !3880

panic8:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %_40, i64 %v.1, ptr align 8 @alloc_12a4570cf64119aa9aed517f40508e0d) #11, !dbg !3894
  unreachable, !dbg !3894

bb16:                                             ; preds = %bb14
  %_44 = load i64, ptr %node, align 8, !dbg !3896, !noundef !24
  %_45 = load i64, ptr %child, align 8, !dbg !3897, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h84f021ce3b5c8cf1E"(ptr align 8 %v.0, i64 %v.1, i64 %_44, i64 %_45, ptr align 8 @alloc_aee65fa801bd32b001511f37eb950832) #10, !dbg !3898
  %_46 = load i64, ptr %child, align 8, !dbg !3899, !noundef !24
  store i64 %_46, ptr %node, align 8, !dbg !3900
  br label %bb1, !dbg !3874
}

; core::slice::sort::partition
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort9partition17he4cc58b5d7a6db8eE(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !3901 {
start:
  %self.dbg.spill.i13 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %was_partitioned.dbg.spill = alloca i8, align 1
  %mid.dbg.spill = alloca i64, align 8
  %pivot.dbg.spill8 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_41 = alloca { ptr, ptr }, align 8
  %_32 = alloca { ptr, ptr }, align 8
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_16 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_6 = alloca { i64, i8 }, align 8
  %_0 = alloca { i64, i8 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3905, metadata !DIExpression()), !dbg !3926
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3906, metadata !DIExpression()), !dbg !3927
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3907, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3916, metadata !DIExpression()), !dbg !3929
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !3918, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.declare(metadata ptr %l, metadata !3922, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.declare(metadata ptr %r, metadata !3924, metadata !DIExpression()), !dbg !3932
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h84f021ce3b5c8cf1E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_3cc2f108f6ad5de0e7df5f0bab4c99f5) #10, !dbg !3933
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h348f60bd3119c438E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_10, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_4111a9a27add72330b55ad95a0b4ce4b) #10, !dbg !3934
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !3935
  %pivot.0 = load ptr, ptr %2, align 8, !dbg !3935, !nonnull !24, !align !386, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !3935
  %pivot.1 = load i64, ptr %3, align 8, !dbg !3935, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !3935
  store ptr %pivot.0, ptr %4, align 8, !dbg !3935
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !3935
  store i64 %pivot.1, ptr %5, align 8, !dbg !3935
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !3911, metadata !DIExpression()), !dbg !3936
  %6 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !3937
  %7 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 0, !dbg !3937
  %v.02 = load ptr, ptr %7, align 8, !dbg !3937, !nonnull !24, !align !386, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 1, !dbg !3937
  %v.13 = load i64, ptr %8, align 8, !dbg !3937, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !3937
  store ptr %v.02, ptr %9, align 8, !dbg !3937
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !3937
  store i64 %v.13, ptr %10, align 8, !dbg !3937
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !3913, metadata !DIExpression()), !dbg !3938
  %_14 = icmp ult i64 0, %pivot.1, !dbg !3939
  %11 = call i1 @llvm.expect.i1(i1 %_14, i1 true), !dbg !3939
  br i1 %11, label %bb3, label %panic, !dbg !3939

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3940
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !3940
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !3914, metadata !DIExpression()), !dbg !3941
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb4cf770cf4557c59E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_16, ptr %pivot5) #10, !dbg !3942
  call void @llvm.dbg.declare(metadata ptr %_16, metadata !865, metadata !DIExpression()), !dbg !3943
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_16, i64 24, i1 false), !dbg !3945
  store ptr %tmp, ptr %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i13, metadata !2440, metadata !DIExpression()), !dbg !3946
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !3948
  %12 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !3948
  store ptr %pivot5, ptr %12, align 8, !dbg !3948
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2440, metadata !DIExpression()), !dbg !3949
  store ptr %tmp, ptr %pivot.dbg.spill8, align 8, !dbg !3951
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill8, metadata !3920, metadata !DIExpression()), !dbg !3952
  store i64 0, ptr %l, align 8, !dbg !3953
  store i64 %v.13, ptr %r, align 8, !dbg !3954
  br label %bb8, !dbg !3955

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 0, i64 %pivot.1, ptr align 8 @alloc_47f7f5a5679995afdbdac281a42df1e5) #11, !dbg !3939
  unreachable, !dbg !3939

bb8:                                              ; preds = %bb13, %bb3
  %_29 = load i64, ptr %l, align 8, !dbg !3956, !noundef !24
  %_30 = load i64, ptr %r, align 8, !dbg !3957, !noundef !24
  %_28 = icmp ult i64 %_29, %_30, !dbg !3956
  br i1 %_28, label %bb9, label %bb14, !dbg !3956

bb14:                                             ; preds = %bb20, %bb9, %bb8
  %_38 = load i64, ptr %l, align 8, !dbg !3958, !noundef !24
  %_39 = load i64, ptr %r, align 8, !dbg !3959, !noundef !24
  %_37 = icmp ult i64 %_38, %_39, !dbg !3958
  br i1 %_37, label %bb15, label %bb21, !dbg !3958

bb9:                                              ; preds = %bb8
  %_35 = load i64, ptr %l, align 8, !dbg !3960, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_33 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %v.02, i64 %v.13, i64 %_35) #10, !dbg !3961
  store ptr %_33, ptr %_32, align 8, !dbg !3962
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_32, i32 0, i32 1, !dbg !3962
  store ptr %tmp, ptr %13, align 8, !dbg !3962
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_32, i32 0, i32 0, !dbg !3962
  %15 = load ptr, ptr %14, align 8, !dbg !3962, !nonnull !24, !align !386, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr }, ptr %_32, i32 0, i32 1, !dbg !3962
  %17 = load ptr, ptr %16, align 8, !dbg !3962, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_31 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %15, ptr align 8 %17) #10, !dbg !3962
  br i1 %_31, label %bb12, label %bb14, !dbg !3962

bb12:                                             ; preds = %bb9
  %18 = load i64, ptr %l, align 8, !dbg !3963, !noundef !24
  %19 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %18, i64 1), !dbg !3963
  %_36.0 = extractvalue { i64, i1 } %19, 0, !dbg !3963
  %_36.1 = extractvalue { i64, i1 } %19, 1, !dbg !3963
  %20 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !3963
  br i1 %20, label %panic12, label %bb13, !dbg !3963

bb21:                                             ; preds = %bb16, %bb14
  %_49 = load i64, ptr %l, align 8, !dbg !3964, !noundef !24
  %_53 = load i64, ptr %l, align 8, !dbg !3965, !noundef !24
  %_54 = load i64, ptr %r, align 8, !dbg !3966, !noundef !24
  store i64 %_53, ptr %_52, align 8, !dbg !3965
  %21 = getelementptr inbounds { i64, i64 }, ptr %_52, i32 0, i32 1, !dbg !3965
  store i64 %_54, ptr %21, align 8, !dbg !3965
  %22 = getelementptr inbounds { i64, i64 }, ptr %_52, i32 0, i32 0, !dbg !3967
  %23 = load i64, ptr %22, align 8, !dbg !3967, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_52, i32 0, i32 1, !dbg !3967
  %25 = load i64, ptr %24, align 8, !dbg !3967, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %26 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5b84afda7c548221E"(ptr align 8 %v.02, i64 %v.13, i64 %23, i64 %25, ptr align 8 @alloc_6de5f4f61dc9947b5580497ff6bd0c65) #10, !dbg !3967
  %_51.0 = extractvalue { ptr, i64 } %26, 0, !dbg !3967
  %_51.1 = extractvalue { ptr, i64 } %26, 1, !dbg !3967
; call core::slice::sort::partition_in_blocks
  %_50 = call i64 @_ZN4core5slice4sort19partition_in_blocks17h5bd4b73e148873e2E(ptr align 8 %_51.0, i64 %_51.1, ptr align 8 %tmp, ptr align 8 %is_less) #10, !dbg !3968
  %27 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_49, i64 %_50), !dbg !3964
  %_55.0 = extractvalue { i64, i1 } %27, 0, !dbg !3964
  %_55.1 = extractvalue { i64, i1 } %27, 1, !dbg !3964
  %28 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !3964
  br i1 %28, label %panic11, label %bb24, !dbg !3964

bb15:                                             ; preds = %bb14
  %_45 = load i64, ptr %r, align 8, !dbg !3969, !noundef !24
  %_46.0 = sub i64 %_45, 1, !dbg !3969
  %_46.1 = icmp ult i64 %_45, 1, !dbg !3969
  %29 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3969
  br i1 %29, label %panic9, label %bb16, !dbg !3969

bb16:                                             ; preds = %bb15
; call core::slice::<impl [T]>::get_unchecked
  %_42 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE"(ptr align 8 %v.02, i64 %v.13, i64 %_46.0) #10, !dbg !3970
  store ptr %_42, ptr %_41, align 8, !dbg !3971
  %30 = getelementptr inbounds { ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !3971
  store ptr %tmp, ptr %30, align 8, !dbg !3971
  %31 = getelementptr inbounds { ptr, ptr }, ptr %_41, i32 0, i32 0, !dbg !3971
  %32 = load ptr, ptr %31, align 8, !dbg !3971, !nonnull !24, !align !386, !noundef !24
  %33 = getelementptr inbounds { ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !3971
  %34 = load ptr, ptr %33, align 8, !dbg !3971, !nonnull !24, !align !386, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_40 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E"(ptr align 8 %is_less, ptr align 8 %32, ptr align 8 %34) #10, !dbg !3971
  br i1 %_40, label %bb21, label %bb19, !dbg !3971

panic9:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_caf271d26aa0259c16066bd0b19c9567) #11, !dbg !3969
  unreachable, !dbg !3969

bb19:                                             ; preds = %bb16
  %35 = load i64, ptr %r, align 8, !dbg !3972, !noundef !24
  %_47.0 = sub i64 %35, 1, !dbg !3972
  %_47.1 = icmp ult i64 %35, 1, !dbg !3972
  %36 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false), !dbg !3972
  br i1 %36, label %panic10, label %bb20, !dbg !3972

bb20:                                             ; preds = %bb19
  store i64 %_47.0, ptr %r, align 8, !dbg !3972
  br label %bb14, !dbg !3973

panic10:                                          ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_7f45f9c52269d6239f633c23dd99888a) #11, !dbg !3972
  unreachable, !dbg !3972

bb24:                                             ; preds = %bb21
  %_57 = load i64, ptr %l, align 8, !dbg !3974, !noundef !24
  %_58 = load i64, ptr %r, align 8, !dbg !3975, !noundef !24
  %_56 = icmp uge i64 %_57, %_58, !dbg !3974
  store i64 %_55.0, ptr %_6, align 8, !dbg !3976
  %37 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3976
  %38 = zext i1 %_56 to i8, !dbg !3976
  store i8 %38, ptr %37, align 8, !dbg !3976
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h87bd16592270f38eE"(ptr align 8 %_pivot_guard) #10, !dbg !3977
  %mid = load i64, ptr %_6, align 8, !dbg !3978, !noundef !24
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3978
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3908, metadata !DIExpression()), !dbg !3979
  %39 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3980
  %40 = load i8, ptr %39, align 8, !dbg !3980, !range !529, !noundef !24
  %was_partitioned = trunc i8 %40 to i1, !dbg !3980
  %41 = zext i1 %was_partitioned to i8, !dbg !3980
  store i8 %41, ptr %was_partitioned.dbg.spill, align 1, !dbg !3980
  call void @llvm.dbg.declare(metadata ptr %was_partitioned.dbg.spill, metadata !3910, metadata !DIExpression()), !dbg !3981
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h84f021ce3b5c8cf1E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %mid, ptr align 8 @alloc_a5b4cbfdb46db686e2b0892645c3cedd) #10, !dbg !3982
  store i64 %mid, ptr %_0, align 8, !dbg !3983
  %42 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !3983
  %43 = zext i1 %was_partitioned to i8, !dbg !3983
  store i8 %43, ptr %42, align 8, !dbg !3983
  %44 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 0, !dbg !3984
  %45 = load i64, ptr %44, align 8, !dbg !3984, !noundef !24
  %46 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !3984
  %47 = load i8, ptr %46, align 8, !dbg !3984, !range !529, !noundef !24
  %48 = trunc i8 %47 to i1, !dbg !3984
  %49 = zext i1 %48 to i8, !dbg !3984
  %50 = insertvalue { i64, i8 } poison, i64 %45, 0, !dbg !3984
  %51 = insertvalue { i64, i8 } %50, i8 %49, 1, !dbg !3984
  ret { i64, i8 } %51, !dbg !3984

panic11:                                          ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_4a14d670b99b10a158283cc8509b375d) #11, !dbg !3964
  unreachable, !dbg !3964

bb13:                                             ; preds = %bb12
  store i64 %_36.0, ptr %l, align 8, !dbg !3963
  br label %bb8, !dbg !3955

panic12:                                          ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_12cb612c46d51112521cf7c6effccd4d) #11, !dbg !3963
  unreachable, !dbg !3963
}

; core::slice::sort::quicksort
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort9quicksort17hc7edd83cfd356bdeE(ptr align 8 %v.0, i64 %v.1, ptr align 1 %0) unnamed_addr #1 !dbg !3985 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %limit.dbg.spill = alloca i32, align 4
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3989, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3990, metadata !DIExpression()), !dbg !3994
  br i1 false, label %bb1, label %bb2, !dbg !3995

bb2:                                              ; preds = %start
  store i64 %v.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3996, metadata !DIExpression()), !dbg !3999
  %4 = call i64 @llvm.ctlz.i64(i64 %v.1, i1 false), !dbg !4001
  store i64 %4, ptr %1, align 8, !dbg !4001
  %_2.i = load i64, ptr %1, align 8, !dbg !4001, !noundef !24
  %_0.i = trunc i64 %_2.i to i32, !dbg !4001
  %_8.0 = sub i32 64, %_0.i, !dbg !4002
  %_8.1 = icmp ult i32 64, %_0.i, !dbg !4002
  %5 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4002
  br i1 %5, label %panic, label %bb4, !dbg !4002

bb1:                                              ; preds = %start
  br label %bb6, !dbg !4003

bb4:                                              ; preds = %bb2
  store i32 %_8.0, ptr %limit.dbg.spill, align 4, !dbg !4002
  call void @llvm.dbg.declare(metadata ptr %limit.dbg.spill, metadata !3991, metadata !DIExpression()), !dbg !4004
  store ptr null, ptr %_11, align 8, !dbg !4005
  %6 = load ptr, ptr %_11, align 8, !dbg !4006, !align !386, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h8c848ef543fbf11aE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less, ptr align 8 %6, i32 %_8.0) #10, !dbg !4006
  br label %bb6, !dbg !4003

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_512969644d7249b8db4ca89aaae3802e) #11, !dbg !4002
  unreachable, !dbg !4002

bb6:                                              ; preds = %bb1, %bb4
  ret void, !dbg !4007
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h31e45b9923d14ac9E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !4008 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4013, metadata !DIExpression()), !dbg !4015
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4014, metadata !DIExpression()), !dbg !4016
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h4a28392e4da7e40dE"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4017
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4017
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4017
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4018
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !4018
  ret { ptr, i64 } %7, !dbg !4018
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5b84afda7c548221E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !4019 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4024, metadata !DIExpression()), !dbg !4026
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4025, metadata !DIExpression()), !dbg !4027
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd232e9471b3bcbd7E"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4028
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4028
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4028
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4029
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !4029
  ret { ptr, i64 } %7, !dbg !4029
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5f6c58c808735e84E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4030 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4034, metadata !DIExpression()), !dbg !4038
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4035, metadata !DIExpression()), !dbg !4039
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb88913efd5b9da0eE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4040
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4040
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4040
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4041
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !4041
  ret { ptr, i64 } %5, !dbg !4041
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h773a3748039f917cE"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4042 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4046, metadata !DIExpression()), !dbg !4050
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4047, metadata !DIExpression()), !dbg !4051
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h804e76f7effbaca6E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4052
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4052
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4052
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4053
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !4053
  ret { ptr, i64 } %5, !dbg !4053
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hd3ffec23183eb2e1E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4054 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4058, metadata !DIExpression()), !dbg !4062
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4059, metadata !DIExpression()), !dbg !4063
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha9ef22d46c89057bE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4064
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4064
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4064
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4065
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !4065
  ret { ptr, i64 } %5, !dbg !4065
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h7917024bfba0f138E"(ptr sret(%"bootinfo::TlsTemplate") align 8 %_0, ptr align 8 %self, ptr align 8 %default) unnamed_addr #0 !dbg !4066 {
start:
  %_5 = alloca i8, align 1
  %x = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4090, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata ptr %default, metadata !4091, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.declare(metadata ptr %x, metadata !4092, metadata !DIExpression()), !dbg !4096
  store i8 0, ptr %_5, align 1, !dbg !4097
  store i8 1, ptr %_5, align 1, !dbg !4097
  %_3 = load i64, ptr %self, align 8, !dbg !4097, !range !945, !noundef !24
  %0 = icmp eq i64 %_3, 0, !dbg !4098
  br i1 %0, label %bb1, label %bb3, !dbg !4098

bb1:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !4099
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %default, i64 24, i1 false), !dbg !4099
  br label %bb6, !dbg !4099

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %self, i32 0, i32 1, !dbg !4100
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %1, i64 24, i1 false), !dbg !4100
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %x, i64 24, i1 false), !dbg !4101
  br label %bb6, !dbg !4102

bb6:                                              ; preds = %bb3, %bb1
  %2 = load i8, ptr %_5, align 1, !dbg !4103, !range !529, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !4103
  br i1 %3, label %bb5, label %bb4, !dbg !4103

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !4104

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !4103

bb2:                                              ; No predecessors!
  unreachable, !dbg !4097
}

; <core::cmp::Ordering as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf8933cfe2566cfe1E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !4105 {
start:
  %__arg1_tag.dbg.spill = alloca i8, align 1
  %__self_tag.dbg.spill = alloca i8, align 1
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4111, metadata !DIExpression()), !dbg !4117
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !4112, metadata !DIExpression()), !dbg !4117
  %__self_tag = load i8, ptr %self, align 1, !dbg !4117, !range !593, !noundef !24
  store i8 %__self_tag, ptr %__self_tag.dbg.spill, align 1, !dbg !4117
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill, metadata !4113, metadata !DIExpression()), !dbg !4118
  %__arg1_tag = load i8, ptr %other, align 1, !dbg !4118, !range !593, !noundef !24
  store i8 %__arg1_tag, ptr %__arg1_tag.dbg.spill, align 1, !dbg !4118
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill, metadata !4115, metadata !DIExpression()), !dbg !4119
  %_0 = icmp eq i8 %__self_tag, %__arg1_tag, !dbg !4119
  ret i1 %_0, !dbg !4120
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h093e638339f4d807E"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !4121 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4129, metadata !DIExpression()), !dbg !4131
  %2 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !4132
  %3 = insertvalue { ptr, ptr } %2, ptr %self.1, 1, !dbg !4132
  ret { ptr, ptr } %3, !dbg !4132
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h7f0e2c43995f0794E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !4133 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_7 = alloca %"core::fmt::Arguments<'_>", align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4138, metadata !DIExpression()), !dbg !4140
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !4139, metadata !DIExpression()), !dbg !4141
  br i1 true, label %bb1, label %bb5, !dbg !4142

bb5:                                              ; preds = %bb1, %start
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17ha77bb642792e1365E"(ptr %slice.0, i64 %slice.1) #10, !dbg !4143
  %_9 = icmp ult i64 %self, %_10, !dbg !4144
  call void @llvm.assume(i1 %_9), !dbg !4145
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_11 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h8531ce4ff1947570E"(ptr %slice.0, i64 %slice.1) #10, !dbg !4146
  store ptr %_11, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !125, metadata !DIExpression()), !dbg !4147
  store i64 %self, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !135, metadata !DIExpression()), !dbg !4149
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %self, !dbg !4150
  ret ptr %_0.i, !dbg !4151

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17ha77bb642792e1365E"(ptr %slice.0, i64 %slice.1) #10, !dbg !4152
  %_4 = icmp ult i64 %self, %_5, !dbg !4153
  br i1 %_4, label %bb5, label %bb3, !dbg !4153

bb3:                                              ; preds = %bb1
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_7, ptr align 8 @alloc_30622932c74ee28bb59a6941df509208, i64 1) #10, !dbg !4142
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h7770fb789a88f813E(ptr align 8 %_7, i1 zeroext false, ptr align 8 @alloc_25dd8d959b8ac3621f86858bd6e9ebee) #11, !dbg !4142
  unreachable, !dbg !4142
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h134a8ba16a908294E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !4154 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4160, metadata !DIExpression()), !dbg !4162
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !4161, metadata !DIExpression()), !dbg !4163
  %_4 = load ptr, ptr %self, align 8, !dbg !4164, !nonnull !24, !noundef !24
  store ptr %_4, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !4165, metadata !DIExpression()), !dbg !4171
  %_6 = load ptr, ptr %other, align 8, !dbg !4173, !nonnull !24, !noundef !24
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4165, metadata !DIExpression()), !dbg !4174
  %_0 = icmp eq ptr %_4, %_6, !dbg !4164
  ret i1 %_0, !dbg !4176
}

; <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9dc8591706f88f65E"(ptr align 8 %self) unnamed_addr #1 !dbg !4177 {
start:
  %count.dbg.spill.i1 = alloca i64, align 8
  %dst.dbg.spill.i2 = alloca ptr, align 8
  %src.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4183, metadata !DIExpression()), !dbg !4184
  %_3 = load ptr, ptr %self, align 8, !dbg !4185, !noundef !24
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4186
  %_4 = load ptr, ptr %0, align 8, !dbg !4186, !noundef !24
  store ptr %_3, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1468, metadata !DIExpression()), !dbg !4187
  store ptr %_4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1473, metadata !DIExpression()), !dbg !4189
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1474, metadata !DIExpression()), !dbg !4190
  store ptr %_3, ptr %_6.i, align 8, !dbg !4191
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !4191
  store ptr %_4, ptr %1, align 8, !dbg !4191
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !4191
  store i64 1, ptr %2, align 8, !dbg !4191
  %3 = load ptr, ptr %_6.i, align 8, !dbg !4191, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !4191
  %5 = load ptr, ptr %4, align 8, !dbg !4191, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !4191
  %7 = load i64, ptr %6, align 8, !dbg !4191, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i3, metadata !1480, metadata !DIExpression()), !dbg !4192
  store ptr %5, ptr %dst.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i2, metadata !1484, metadata !DIExpression()), !dbg !4192
  store i64 %7, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !1485, metadata !DIExpression()), !dbg !4192
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %3) #10, !dbg !4194
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !4194

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !4195
  unreachable, !dbg !4195

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E(ptr %5) #10, !dbg !4196
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !4196

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E(ptr %3, ptr %5, i64 %7) #10, !dbg !4197
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit, label %bb7.i, !dbg !4197

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %_3, i64 24, i1 false), !dbg !4198
  ret void, !dbg !4199
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6f3a4417bb018a70E"(ptr align 8 %self) unnamed_addr #0 !dbg !4200 {
start:
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i3.i = alloca ptr, align 8
  %_0.i4.i = alloca ptr, align 8
  %self.dbg.spill.i1.i4 = alloca ptr, align 8
  %_end.dbg.spill.i = alloca ptr, align 8
  %old.dbg.spill.i = alloca ptr, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i1.i = alloca ptr, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  %end = alloca ptr, align 8
  %_2 = alloca i8, align 1
  %_0 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4207, metadata !DIExpression()), !dbg !4212
  call void @llvm.dbg.declare(metadata ptr %end, metadata !4210, metadata !DIExpression()), !dbg !4213
  br i1 false, label %bb1, label %bb3, !dbg !4214

bb3:                                              ; preds = %start
  %_8 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4214
  store ptr %_8, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !4215, metadata !DIExpression()), !dbg !4225
  %0 = load ptr, ptr %_8, align 8, !dbg !4214, !nonnull !24, !noundef !24
  store ptr %0, ptr %end, align 8, !dbg !4214
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %1 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h134a8ba16a908294E"(ptr align 8 %self, ptr align 8 %end) #10, !dbg !4213
  %2 = zext i1 %1 to i8, !dbg !4213
  store i8 %2, ptr %_2, align 1, !dbg !4213
  br label %bb5, !dbg !4213

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4214
  %_5 = load ptr, ptr %3, align 8, !dbg !4214, !noundef !24
  store ptr %_5, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !475, metadata !DIExpression()), !dbg !4227
  store ptr %_5, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !482, metadata !DIExpression()), !dbg !4229
  %_0.i = ptrtoint ptr %_5 to i64, !dbg !4231
  store i64 %_0.i, ptr %len.dbg.spill, align 8, !dbg !4214
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !4208, metadata !DIExpression()), !dbg !4232
  %4 = icmp eq i64 %_0.i, 0, !dbg !4232
  %5 = zext i1 %4 to i8, !dbg !4232
  store i8 %5, ptr %_2, align 1, !dbg !4232
  br label %bb5, !dbg !4214

bb5:                                              ; preds = %bb1, %bb3
  %6 = load i8, ptr %_2, align 1, !dbg !4214, !range !529, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !4214
  br i1 %7, label %bb6, label %bb7, !dbg !4214

bb7:                                              ; preds = %bb5
  store ptr %self, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !4233, metadata !DIExpression()), !dbg !4247
  store i64 1, ptr %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill.i, metadata !4239, metadata !DIExpression()), !dbg !4249
  %old.i = load ptr, ptr %self, align 8, !dbg !4250, !nonnull !24, !noundef !24
  store ptr %old.i, ptr %old.dbg.spill.i, align 8, !dbg !4250
  call void @llvm.dbg.declare(metadata ptr %old.dbg.spill.i, metadata !4240, metadata !DIExpression()), !dbg !4251
  %_11.i = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4252
  store ptr %_11.i, ptr %self.dbg.spill.i1.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i4, metadata !4253, metadata !DIExpression()), !dbg !4260
  store ptr %_11.i, ptr %_end.dbg.spill.i, align 8, !dbg !4252
  call void @llvm.dbg.declare(metadata ptr %_end.dbg.spill.i, metadata !4244, metadata !DIExpression()), !dbg !4262
  %_13.i = load ptr, ptr %self, align 8, !dbg !4263, !nonnull !24, !noundef !24
  store ptr %_13.i, ptr %self.dbg.spill.i3.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3.i, metadata !4264, metadata !DIExpression()), !dbg !4271
  store i64 1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !4270, metadata !DIExpression()), !dbg !4273
  %_3.i.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_13.i, i64 1, !dbg !4274
  store ptr %_3.i.i, ptr %_0.i4.i, align 8, !dbg !4275
  %8 = load ptr, ptr %_0.i4.i, align 8, !dbg !4276, !nonnull !24, !noundef !24
  store ptr %8, ptr %self, align 8, !dbg !4277
  store ptr %old.i, ptr %_13, align 8, !dbg !4278
  store ptr %_13, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4279, metadata !DIExpression()), !dbg !4285
  %_4.i = load ptr, ptr %_13, align 8, !dbg !4287, !nonnull !24, !noundef !24
  store ptr %_4.i, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !4165, metadata !DIExpression()), !dbg !4288
  store ptr %_4.i, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !4290, metadata !DIExpression()), !dbg !4295
  store ptr %_4.i, ptr %_0, align 8, !dbg !4297
  br label %bb10, !dbg !4298

bb6:                                              ; preds = %bb5
  store ptr null, ptr %_0, align 8, !dbg !4299
  br label %bb10, !dbg !4298

bb10:                                             ; preds = %bb6, %bb7
  %9 = load ptr, ptr %_0, align 8, !dbg !4300, !align !386, !noundef !24
  ret ptr %9, !dbg !4300
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h283a6383f08f0ce6E"(ptr align 8 %self) unnamed_addr #0 !dbg !4301 {
start:
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %end.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_17 = alloca ptr, align 8
  %_12 = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %_0 = alloca { i64, i64 }, align 8
  %predicate = alloca %"{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73}", align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4306, metadata !DIExpression()), !dbg !4320
  call void @llvm.dbg.declare(metadata ptr %predicate, metadata !4307, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4308, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.declare(metadata ptr %i, metadata !4314, metadata !DIExpression()), !dbg !4323
  br i1 false, label %bb1, label %bb3, !dbg !4324

bb3:                                              ; preds = %start
  %_9 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4324
  store ptr %_9, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !4215, metadata !DIExpression()), !dbg !4325
  %end = load ptr, ptr %_9, align 8, !dbg !4324, !nonnull !24, !noundef !24
  store ptr %end, ptr %end.dbg.spill, align 8, !dbg !4324
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !4312, metadata !DIExpression()), !dbg !4327
  %_10 = load ptr, ptr %self, align 8, !dbg !4327, !nonnull !24, !noundef !24
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h983472383f944148E"(ptr %end, ptr %_10) #10, !dbg !4327
  store i64 %0, ptr %n, align 8, !dbg !4327
  br label %bb5, !dbg !4327

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4324
  %_6 = load ptr, ptr %1, align 8, !dbg !4324, !noundef !24
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !475, metadata !DIExpression()), !dbg !4328
  store ptr %_6, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !482, metadata !DIExpression()), !dbg !4330
  %_0.i = ptrtoint ptr %_6 to i64, !dbg !4332
  store i64 %_0.i, ptr %len.dbg.spill, align 8, !dbg !4324
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !4310, metadata !DIExpression()), !dbg !4333
  store i64 %_0.i, ptr %n, align 8, !dbg !4333
  br label %bb5, !dbg !4324

bb5:                                              ; preds = %bb1, %bb3
  store i64 0, ptr %i, align 8, !dbg !4334
  br label %bb6, !dbg !4335

bb6:                                              ; preds = %bb12, %bb5
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6f3a4417bb018a70E"(ptr align 8 %self) #10, !dbg !4336
  store ptr %2, ptr %_12, align 8, !dbg !4336
  %3 = load ptr, ptr %_12, align 8, !dbg !4337, !noundef !24
  %4 = ptrtoint ptr %3 to i64, !dbg !4337
  %5 = icmp eq i64 %4, 0, !dbg !4337
  %_13 = select i1 %5, i64 0, i64 1, !dbg !4337
  %6 = icmp eq i64 %_13, 1, !dbg !4337
  br i1 %6, label %bb8, label %bb13, !dbg !4337

bb8:                                              ; preds = %bb6
  %x = load ptr, ptr %_12, align 8, !dbg !4338, !nonnull !24, !align !386, !noundef !24
  store ptr %x, ptr %x.dbg.spill, align 8, !dbg !4338
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4316, metadata !DIExpression()), !dbg !4338
  store ptr %x, ptr %_17, align 8, !dbg !4339
  %7 = load ptr, ptr %_17, align 8, !dbg !4339, !nonnull !24, !align !386, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %_15 = call zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h83c6151dc133a115E"(ptr align 1 %predicate, ptr align 8 %7) #10, !dbg !4339
  br i1 %_15, label %bb10, label %bb11, !dbg !4339

bb13:                                             ; preds = %bb6
  store i64 0, ptr %_0, align 8, !dbg !4340
  br label %bb14, !dbg !4341

bb11:                                             ; preds = %bb8
  %8 = load i64, ptr %i, align 8, !dbg !4342, !noundef !24
  %9 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 1), !dbg !4342
  %_22.0 = extractvalue { i64, i1 } %9, 0, !dbg !4342
  %_22.1 = extractvalue { i64, i1 } %9, 1, !dbg !4342
  %10 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !4342
  br i1 %10, label %panic, label %bb12, !dbg !4342

bb10:                                             ; preds = %bb8
  %_19 = load i64, ptr %i, align 8, !dbg !4343, !noundef !24
  %_20 = load i64, ptr %n, align 8, !dbg !4344, !noundef !24
  %_18 = icmp ult i64 %_19, %_20, !dbg !4343
  call void @llvm.assume(i1 %_18), !dbg !4345
  %_21 = load i64, ptr %i, align 8, !dbg !4346, !noundef !24
  %11 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4347
  store i64 %_21, ptr %11, align 8, !dbg !4347
  store i64 1, ptr %_0, align 8, !dbg !4347
  br label %bb14, !dbg !4341

bb12:                                             ; preds = %bb11
  store i64 %_22.0, ptr %i, align 8, !dbg !4342
  br label %bb6, !dbg !4335

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_1f683afce4e4a8ebbb423df4dd8e7cfb) #11, !dbg !4342
  unreachable, !dbg !4342

bb14:                                             ; preds = %bb13, %bb10
  %12 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !4348
  %13 = load i64, ptr %12, align 8, !dbg !4348, !range !945, !noundef !24
  %14 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4348
  %15 = load i64, ptr %14, align 8, !dbg !4348
  %16 = insertvalue { i64, i64 } poison, i64 %13, 0, !dbg !4348
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1, !dbg !4348
  ret { i64, i64 } %17, !dbg !4348
}

; bootloader::bootinfo::memory_map::MemoryMap::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17hbc1424c2ba1e2eefE(ptr sret(%"bootinfo::memory_map::MemoryMap") align 8 %_0) unnamed_addr #1 !dbg !4349 {
start:
  %_2 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_1 = alloca [64 x %"bootinfo::memory_map::MemoryRegion"], align 8
; call bootloader::bootinfo::memory_map::MemoryRegion::empty
  call void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h51981740ee4f4a55E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_2) #10, !dbg !4358
  br label %repeat_loop_header, !dbg !4359

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %0 = phi i64 [ 0, %start ], [ %3, %repeat_loop_body ]
  %1 = icmp ult i64 %0, 64
  br i1 %1, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %2 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 %0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_2, i64 24, i1 false)
  %3 = add nuw i64 %0, 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 1536, i1 false), !dbg !4360
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %_0, i32 0, i32 1, !dbg !4360
  store i64 0, ptr %4, align 8, !dbg !4360
  ret void, !dbg !4361
}

; bootloader::bootinfo::memory_map::MemoryMap::add_region
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h2af03ff0ea4f7f43E(ptr align 8 %self, ptr align 8 %region) unnamed_addr #1 !dbg !4362 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4368, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4369, metadata !DIExpression()), !dbg !4371
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_4 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hd4a6cdafa79f45a7E(ptr align 8 %self) #10, !dbg !4372
  %_3 = icmp ult i64 %_4, 64, !dbg !4372
  br i1 %_3, label %bb2, label %bb3, !dbg !4372

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @alloc_377fe4797e3690987ab15f0122f4880b, i64 37, ptr align 8 @alloc_54ab5123c8b5c893178cf579a95cfb31) #11, !dbg !4373
  unreachable, !dbg !4373

bb2:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_7 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hd4a6cdafa79f45a7E(ptr align 8 %self) #10, !dbg !4374
  %_10 = icmp ult i64 %_7, 64, !dbg !4375
  %0 = call i1 @llvm.expect.i1(i1 %_10, i1 true), !dbg !4375
  br i1 %0, label %bb5, label %panic, !dbg !4375

bb5:                                              ; preds = %bb2
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %self, i64 0, i64 %_7, !dbg !4375
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %region, i64 24, i1 false), !dbg !4375
  %2 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4376
  %3 = load i64, ptr %2, align 8, !dbg !4376, !noundef !24
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %3, i64 1), !dbg !4376
  %_11.0 = extractvalue { i64, i1 } %4, 0, !dbg !4376
  %_11.1 = extractvalue { i64, i1 } %4, 1, !dbg !4376
  %5 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !4376
  br i1 %5, label %panic1, label %bb6, !dbg !4376

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64 %_7, i64 64, ptr align 8 @alloc_007d9d9bcb32fbea4c7f0969de4a5e5e) #11, !dbg !4375
  unreachable, !dbg !4375

bb6:                                              ; preds = %bb5
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4376
  store i64 %_11.0, ptr %6, align 8, !dbg !4376
; call bootloader::bootinfo::memory_map::MemoryMap::sort
  call void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h8f63715a9e8aa699E(ptr align 8 %self) #10, !dbg !4377
  ret void, !dbg !4378

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_34e556ab30df73bc0b9b80753861ac91) #11, !dbg !4376
  unreachable, !dbg !4376
}

; bootloader::bootinfo::memory_map::MemoryMap::sort
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h8f63715a9e8aa699E(ptr align 8 %self) unnamed_addr #1 !dbg !4379 {
start:
  %first_zero_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, ptr }, align 8
  %_5 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4384, metadata !DIExpression()), !dbg !4387
; call core::slice::<impl [T]>::sort_unstable_by
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17hb2ad2ed586f568e7E"(ptr align 8 %self, i64 64) #10, !dbg !4388
; call core::slice::<impl [T]>::iter
  %0 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5ff0069825e17ec5E"(ptr align 8 %self, i64 64) #10, !dbg !4389
  store { ptr, ptr } %0, ptr %_7, align 8, !dbg !4389
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %1 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h283a6383f08f0ce6E"(ptr align 8 %_7) #10, !dbg !4389
  store { i64, i64 } %1, ptr %_5, align 8, !dbg !4389
  %_10 = load i64, ptr %_5, align 8, !dbg !4390, !range !945, !noundef !24
  %2 = icmp eq i64 %_10, 1, !dbg !4390
  br i1 %2, label %bb4, label %bb5, !dbg !4390

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4391
  %first_zero_index = load i64, ptr %3, align 8, !dbg !4391, !noundef !24
  store i64 %first_zero_index, ptr %first_zero_index.dbg.spill, align 8, !dbg !4391
  call void @llvm.dbg.declare(metadata ptr %first_zero_index.dbg.spill, metadata !4385, metadata !DIExpression()), !dbg !4391
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4392
  store i64 %first_zero_index, ptr %4, align 8, !dbg !4392
  br label %bb5, !dbg !4393

bb5:                                              ; preds = %bb4, %start
  ret void, !dbg !4394
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h9ca67f90209d8f56E"(ptr align 1 %_1, ptr align 8 %r1, ptr align 8 %r2) unnamed_addr #0 !dbg !4395 {
start:
  %r2.dbg.spill = alloca ptr, align 8
  %r1.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %ordering = alloca i8, align 1
  %_0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4403, metadata !DIExpression()), !dbg !4404
  store ptr %r1, ptr %r1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r1.dbg.spill, metadata !4399, metadata !DIExpression()), !dbg !4405
  store ptr %r2, ptr %r2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r2.dbg.spill, metadata !4400, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.declare(metadata ptr %ordering, metadata !4401, metadata !DIExpression()), !dbg !4407
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_4 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hdb1a5080229bebd5E(ptr align 8 %r1) #10, !dbg !4408
  br i1 %_4, label %bb2, label %bb3, !dbg !4408

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_6 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hdb1a5080229bebd5E(ptr align 8 %r2) #10, !dbg !4409
  br i1 %_6, label %bb5, label %bb6, !dbg !4409

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !4410
  br label %bb11, !dbg !4411

bb6:                                              ; preds = %bb3
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %0 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h1bde2137c2914e1cE"(ptr align 8 %r1, ptr align 8 %r2) #10, !dbg !4412, !range !593
  store i8 %0, ptr %ordering, align 1, !dbg !4412
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %_11 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf8933cfe2566cfe1E"(ptr align 1 %ordering, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #10, !dbg !4413
  br i1 %_11, label %bb9, label %bb10, !dbg !4413

bb5:                                              ; preds = %bb3
  store i8 -1, ptr %_0, align 1, !dbg !4414
  br label %bb11, !dbg !4415

bb10:                                             ; preds = %bb6
  %1 = load i8, ptr %ordering, align 1, !dbg !4416, !range !593, !noundef !24
  store i8 %1, ptr %_0, align 1, !dbg !4416
  br label %bb11, !dbg !4417

bb9:                                              ; preds = %bb6
  %_13 = getelementptr inbounds { i64, i64 }, ptr %r1, i32 0, i32 1, !dbg !4418
  %_14 = getelementptr inbounds { i64, i64 }, ptr %r2, i32 0, i32 1, !dbg !4419
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %2 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h1bde2137c2914e1cE"(ptr align 8 %_13, ptr align 8 %_14) #10, !dbg !4418, !range !593
  store i8 %2, ptr %_0, align 1, !dbg !4418
  br label %bb11, !dbg !4418

bb11:                                             ; preds = %bb2, %bb5, %bb9, %bb10
  %3 = load i8, ptr %_0, align 1, !dbg !4420, !range !593, !noundef !24
  ret i8 %3, !dbg !4420
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h83c6151dc133a115E"(ptr align 1 %_1, ptr align 8 %r) unnamed_addr #0 !dbg !4421 {
start:
  %r.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4427, metadata !DIExpression()), !dbg !4428
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !4426, metadata !DIExpression()), !dbg !4429
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_0 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hdb1a5080229bebd5E(ptr align 8 %r) #10, !dbg !4430
  ret i1 %_0, !dbg !4431
}

; bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
; Function Attrs: noredzone nounwind
define internal i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hd4a6cdafa79f45a7E(ptr align 8 %self) unnamed_addr #1 !dbg !4432 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4438, metadata !DIExpression()), !dbg !4439
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4440
  %_2 = load i64, ptr %0, align 8, !dbg !4440, !noundef !24
  ret i64 %_2, !dbg !4441
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17hdbb1470696cf1240E"(ptr align 8 %self) unnamed_addr #1 !dbg !4442 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_3 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4447, metadata !DIExpression()), !dbg !4448
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_4 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hd4a6cdafa79f45a7E(ptr align 8 %self) #10, !dbg !4449
  store i64 0, ptr %_3, align 8, !dbg !4450
  %0 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !4450
  store i64 %_4, ptr %0, align 8, !dbg !4450
  %1 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !4451
  %2 = load i64, ptr %1, align 8, !dbg !4451, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !4451
  %4 = load i64, ptr %3, align 8, !dbg !4451, !noundef !24
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %5 = call { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h5d1374c0813f0a0bE"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_fb271be9c4b5b3946a793efffc56f39c) #10, !dbg !4451
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4451
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4451
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4452
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !4452
  ret { ptr, i64 } %7, !dbg !4452
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9e7a6ea6d3e05f35E"(ptr align 8 %self) unnamed_addr #1 !dbg !4453 {
start:
  %next_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_5 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4458, metadata !DIExpression()), !dbg !4461
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %next_index = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hd4a6cdafa79f45a7E(ptr align 8 %self) #10, !dbg !4462
  store i64 %next_index, ptr %next_index.dbg.spill, align 8, !dbg !4462
  call void @llvm.dbg.declare(metadata ptr %next_index.dbg.spill, metadata !4459, metadata !DIExpression()), !dbg !4463
  store i64 0, ptr %_5, align 8, !dbg !4464
  %0 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4464
  store i64 %next_index, ptr %0, align 8, !dbg !4464
  %1 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !4465
  %2 = load i64, ptr %1, align 8, !dbg !4465, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4465
  %4 = load i64, ptr %3, align 8, !dbg !4465, !noundef !24
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h01947af3f89a7e67E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_61c65decba3312117d854904c3caa913) #10, !dbg !4465
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4465
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4465
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4466
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !4466
  ret { ptr, i64 } %7, !dbg !4466
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h9f2ff18f52fe7c21E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4467 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_5 = alloca %"core::fmt::builders::DebugList<'_, '_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4472, metadata !DIExpression()), !dbg !4474
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4473, metadata !DIExpression()), !dbg !4475
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17hff245757069ee648E(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") align 8 %_5, ptr align 8 %f) #10, !dbg !4476
; call <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17hdbb1470696cf1240E"(ptr align 8 %self) #10, !dbg !4477
  %_7.0 = extractvalue { ptr, i64 } %0, 0, !dbg !4477
  %_7.1 = extractvalue { ptr, i64 } %0, 1, !dbg !4477
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5ff0069825e17ec5E"(ptr align 8 %_7.0, i64 %_7.1) #10, !dbg !4477
  %_6.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4477
  %_6.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4477
; call core::fmt::builders::DebugList::entries
  %_3 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h77fdd07d5dbe7587E(ptr align 8 %_5, ptr %_6.0, ptr %_6.1) #10, !dbg !4476
; call core::fmt::builders::DebugList::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha94b9b07b15c5cb1E(ptr align 8 %_3) #10, !dbg !4476
  ret i1 %_0, !dbg !4478
}

; bootloader::bootinfo::memory_map::MemoryRegion::empty
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h51981740ee4f4a55E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_0) unnamed_addr #1 !dbg !4479 {
start:
  %_2 = alloca i32, align 4
  %_1 = alloca { i64, i64 }, align 8
  store i64 0, ptr %_1, align 8, !dbg !4483
  %0 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4483
  store i64 0, ptr %0, align 8, !dbg !4483
  store i32 11, ptr %_2, align 4, !dbg !4484
  %1 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 0, !dbg !4485
  %2 = load i64, ptr %1, align 8, !dbg !4485, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4485
  %4 = load i64, ptr %3, align 8, !dbg !4485, !noundef !24
  %5 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !4485
  store i64 %2, ptr %5, align 8, !dbg !4485
  %6 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4485
  store i64 %4, ptr %6, align 8, !dbg !4485
  %7 = load i32, ptr %_2, align 4, !dbg !4485, !range !4486, !noundef !24
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_0, i32 0, i32 1, !dbg !4485
  store i32 %7, ptr %8, align 8, !dbg !4485
  ret void, !dbg !4487
}

; bootloader::bootinfo::memory_map::FrameRange::new
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h76b99035b226fdd7E(i64 %start_addr, i64 %end_addr) unnamed_addr #1 !dbg !4488 {
start:
  %last_byte.dbg.spill = alloca i64, align 8
  %end_addr.dbg.spill = alloca i64, align 8
  %start_addr.dbg.spill = alloca i64, align 8
  %_0 = alloca { i64, i64 }, align 8
  store i64 %start_addr, ptr %start_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %start_addr.dbg.spill, metadata !4493, metadata !DIExpression()), !dbg !4497
  store i64 %end_addr, ptr %end_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %end_addr.dbg.spill, metadata !4494, metadata !DIExpression()), !dbg !4498
  %_4.0 = sub i64 %end_addr, 1, !dbg !4499
  %_4.1 = icmp ult i64 %end_addr, 1, !dbg !4499
  %0 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !4499
  br i1 %0, label %panic, label %bb1, !dbg !4499

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %last_byte.dbg.spill, align 8, !dbg !4499
  call void @llvm.dbg.declare(metadata ptr %last_byte.dbg.spill, metadata !4495, metadata !DIExpression()), !dbg !4500
  %_5 = udiv i64 %start_addr, 4096, !dbg !4501
  %_8 = udiv i64 %_4.0, 4096, !dbg !4502
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_8, i64 1), !dbg !4502
  %_10.0 = extractvalue { i64, i1 } %1, 0, !dbg !4502
  %_10.1 = extractvalue { i64, i1 } %1, 1, !dbg !4502
  %2 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !4502
  br i1 %2, label %panic1, label %bb4, !dbg !4502

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_917627991dcce789bac92e2b48ff2ccf) #11, !dbg !4499
  unreachable, !dbg !4499

bb4:                                              ; preds = %bb1
  store i64 %_5, ptr %_0, align 8, !dbg !4503
  %3 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4503
  store i64 %_10.0, ptr %3, align 8, !dbg !4503
  %4 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !4504
  %5 = load i64, ptr %4, align 8, !dbg !4504, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4504
  %7 = load i64, ptr %6, align 8, !dbg !4504, !noundef !24
  %8 = insertvalue { i64, i64 } poison, i64 %5, 0, !dbg !4504
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !4504
  ret { i64, i64 } %9, !dbg !4504

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_1bd0f3ccb5695ae03717398589990e80) #11, !dbg !4502
  unreachable, !dbg !4502
}

; bootloader::bootinfo::memory_map::FrameRange::is_empty
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hdb1a5080229bebd5E(ptr align 8 %self) unnamed_addr #1 !dbg !4505 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4511, metadata !DIExpression()), !dbg !4512
  %_2 = load i64, ptr %self, align 8, !dbg !4513, !noundef !24
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4514
  %_3 = load i64, ptr %0, align 8, !dbg !4514, !noundef !24
  %_0 = icmp eq i64 %_2, %_3, !dbg !4513
  ret i1 %_0, !dbg !4515
}

; bootloader::bootinfo::memory_map::FrameRange::start_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h5218c4ca556c9ddeE(ptr align 8 %self) unnamed_addr #1 !dbg !4516 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4521, metadata !DIExpression()), !dbg !4522
  %_2 = load i64, ptr %self, align 8, !dbg !4523, !noundef !24
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4523
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !4523
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !4523
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4523
  br i1 %1, label %panic, label %bb1, !dbg !4523

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4524

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_c0ba54ae982d90d30b9c5394d44c3bff) #11, !dbg !4523
  unreachable, !dbg !4523
}

; bootloader::bootinfo::memory_map::FrameRange::end_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h0ac491e6cf3b0ec0E(ptr align 8 %self) unnamed_addr #1 !dbg !4525 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4528, metadata !DIExpression()), !dbg !4529
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4530
  %_2 = load i64, ptr %0, align 8, !dbg !4530, !noundef !24
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4530
  %_3.0 = extractvalue { i64, i1 } %1, 0, !dbg !4530
  %_3.1 = extractvalue { i64, i1 } %1, 1, !dbg !4530
  %2 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4530
  br i1 %2, label %panic, label %bb1, !dbg !4530

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4531

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_377108d207780ea43a7bff4313266b2d) #11, !dbg !4530
  unreachable, !dbg !4530
}

; <bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h55f0d07467b614d1E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4532 {
start:
  %f.dbg.spill.i11 = alloca ptr, align 8
  %x.dbg.spill.i12 = alloca ptr, align 8
  %_0.i13 = alloca { ptr, ptr }, align 8
  %f.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i10 = alloca ptr, align 8
  %_0.i = alloca { ptr, ptr }, align 8
  %x.dbg.spill.i7 = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %width.dbg.spill.i1 = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i2 = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i3 = alloca i32, align 4
  %align.dbg.spill.i4 = alloca i8, align 1
  %fill.dbg.spill.i5 = alloca i32, align 4
  %position.dbg.spill.i6 = alloca i64, align 8
  %width.dbg.spill.i = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i = alloca i32, align 4
  %align.dbg.spill.i = alloca i8, align 1
  %fill.dbg.spill.i = alloca i32, align 4
  %position.dbg.spill.i = alloca i64, align 8
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_24 = alloca { i64, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_22 = alloca i8, align 1
  %_21 = alloca %"core::fmt::rt::Placeholder", align 8
  %_20 = alloca { i64, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_18 = alloca i8, align 1
  %_17 = alloca %"core::fmt::rt::Placeholder", align 8
  %_16 = alloca [2 x %"core::fmt::rt::Placeholder"], align 8
  %_13 = alloca i64, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca [2 x { ptr, ptr }], align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4537, metadata !DIExpression()), !dbg !4539
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4538, metadata !DIExpression()), !dbg !4540
; call bootloader::bootinfo::memory_map::FrameRange::start_addr
  %0 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h5218c4ca556c9ddeE(ptr align 8 %self) #10, !dbg !4541
  store i64 %0, ptr %_10, align 8, !dbg !4541
  store ptr %_10, ptr %x.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i7, metadata !4542, metadata !DIExpression()), !dbg !4551
  store ptr %_10, ptr %x.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i10, metadata !4553, metadata !DIExpression()), !dbg !4563
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hd234c40214b86a5bE", ptr %f.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i, metadata !4562, metadata !DIExpression()), !dbg !4565
  store ptr %_10, ptr %_0.i, align 8, !dbg !4566
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_0.i, i32 0, i32 1, !dbg !4566
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hd234c40214b86a5bE", ptr %1, align 8, !dbg !4566
  %2 = load ptr, ptr %_0.i, align 8, !dbg !4567, !nonnull !24, !align !2171, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_0.i, i32 0, i32 1, !dbg !4567
  %4 = load ptr, ptr %3, align 8, !dbg !4567, !nonnull !24, !noundef !24
  %5 = insertvalue { ptr, ptr } poison, ptr %2, 0, !dbg !4567
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !4567
  %_0.0.i8 = extractvalue { ptr, ptr } %6, 0, !dbg !4568
  %_0.1.i9 = extractvalue { ptr, ptr } %6, 1, !dbg !4568
  %_8.0 = extractvalue { ptr, ptr } %6, 0, !dbg !4569
  %_8.1 = extractvalue { ptr, ptr } %6, 1, !dbg !4569
; call bootloader::bootinfo::memory_map::FrameRange::end_addr
  %7 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h0ac491e6cf3b0ec0E(ptr align 8 %self) #10, !dbg !4570
  store i64 %7, ptr %_13, align 8, !dbg !4570
  store ptr %_13, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !4542, metadata !DIExpression()), !dbg !4571
  store ptr %_13, ptr %x.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i12, metadata !4553, metadata !DIExpression()), !dbg !4573
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hd234c40214b86a5bE", ptr %f.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i11, metadata !4562, metadata !DIExpression()), !dbg !4575
  store ptr %_13, ptr %_0.i13, align 8, !dbg !4576
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_0.i13, i32 0, i32 1, !dbg !4576
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hd234c40214b86a5bE", ptr %8, align 8, !dbg !4576
  %9 = load ptr, ptr %_0.i13, align 8, !dbg !4577, !nonnull !24, !align !2171, !noundef !24
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_0.i13, i32 0, i32 1, !dbg !4577
  %11 = load ptr, ptr %10, align 8, !dbg !4577, !nonnull !24, !noundef !24
  %12 = insertvalue { ptr, ptr } poison, ptr %9, 0, !dbg !4577
  %13 = insertvalue { ptr, ptr } %12, ptr %11, 1, !dbg !4577
  %_0.0.i = extractvalue { ptr, ptr } %13, 0, !dbg !4578
  %_0.1.i = extractvalue { ptr, ptr } %13, 1, !dbg !4578
  %_11.0 = extractvalue { ptr, ptr } %13, 0, !dbg !4569
  %_11.1 = extractvalue { ptr, ptr } %13, 1, !dbg !4569
  %14 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 0, !dbg !4569
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0, !dbg !4569
  store ptr %_8.0, ptr %15, align 8, !dbg !4569
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1, !dbg !4569
  store ptr %_8.1, ptr %16, align 8, !dbg !4569
  %17 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 1, !dbg !4569
  %18 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 0, !dbg !4569
  store ptr %_11.0, ptr %18, align 8, !dbg !4569
  %19 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 1, !dbg !4569
  store ptr %_11.1, ptr %19, align 8, !dbg !4569
  store i8 3, ptr %_18, align 1, !dbg !4569
  store i64 2, ptr %_19, align 8, !dbg !4569
  store i64 2, ptr %_20, align 8, !dbg !4569
  %20 = load i8, ptr %_18, align 1, !dbg !4569, !range !4579, !noundef !24
  %21 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !4569
  %22 = load i64, ptr %21, align 8, !dbg !4569, !range !4580, !noundef !24
  %23 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !4569
  %24 = load i64, ptr %23, align 8, !dbg !4569
  %25 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 0, !dbg !4569
  %26 = load i64, ptr %25, align 8, !dbg !4569, !range !4580, !noundef !24
  %27 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !4569
  %28 = load i64, ptr %27, align 8, !dbg !4569
  store i64 0, ptr %position.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i6, metadata !4581, metadata !DIExpression()), !dbg !4592
  store i32 32, ptr %fill.dbg.spill.i5, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i5, metadata !4587, metadata !DIExpression()), !dbg !4594
  store i8 %20, ptr %align.dbg.spill.i4, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i4, metadata !4588, metadata !DIExpression()), !dbg !4595
  store i32 4, ptr %flags.dbg.spill.i3, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i3, metadata !4589, metadata !DIExpression()), !dbg !4596
  store i64 %22, ptr %precision.dbg.spill.i2, align 8
  %29 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i2, i32 0, i32 1
  store i64 %24, ptr %29, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i2, metadata !4590, metadata !DIExpression()), !dbg !4597
  store i64 %26, ptr %width.dbg.spill.i1, align 8
  %30 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i1, i32 0, i32 1
  store i64 %28, ptr %30, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i1, metadata !4591, metadata !DIExpression()), !dbg !4598
  %31 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 2, !dbg !4599
  store i64 0, ptr %31, align 8, !dbg !4599
  %32 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 3, !dbg !4599
  store i32 32, ptr %32, align 8, !dbg !4599
  %33 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 5, !dbg !4599
  store i8 %20, ptr %33, align 8, !dbg !4599
  %34 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 4, !dbg !4599
  store i32 4, ptr %34, align 4, !dbg !4599
  store i64 %22, ptr %_17, align 8, !dbg !4599
  %35 = getelementptr inbounds { i64, i64 }, ptr %_17, i32 0, i32 1, !dbg !4599
  store i64 %24, ptr %35, align 8, !dbg !4599
  %36 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 1, !dbg !4599
  store i64 %26, ptr %36, align 8, !dbg !4599
  %37 = getelementptr inbounds { i64, i64 }, ptr %36, i32 0, i32 1, !dbg !4599
  store i64 %28, ptr %37, align 8, !dbg !4599
  store i8 3, ptr %_22, align 1, !dbg !4569
  store i64 2, ptr %_23, align 8, !dbg !4569
  store i64 2, ptr %_24, align 8, !dbg !4569
  %38 = load i8, ptr %_22, align 1, !dbg !4569, !range !4579, !noundef !24
  %39 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !4569
  %40 = load i64, ptr %39, align 8, !dbg !4569, !range !4580, !noundef !24
  %41 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !4569
  %42 = load i64, ptr %41, align 8, !dbg !4569
  %43 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 0, !dbg !4569
  %44 = load i64, ptr %43, align 8, !dbg !4569, !range !4580, !noundef !24
  %45 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 1, !dbg !4569
  %46 = load i64, ptr %45, align 8, !dbg !4569
  store i64 1, ptr %position.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i, metadata !4581, metadata !DIExpression()), !dbg !4600
  store i32 32, ptr %fill.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i, metadata !4587, metadata !DIExpression()), !dbg !4602
  store i8 %38, ptr %align.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !4588, metadata !DIExpression()), !dbg !4603
  store i32 4, ptr %flags.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i, metadata !4589, metadata !DIExpression()), !dbg !4604
  store i64 %40, ptr %precision.dbg.spill.i, align 8
  %47 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i, i32 0, i32 1
  store i64 %42, ptr %47, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i, metadata !4590, metadata !DIExpression()), !dbg !4605
  store i64 %44, ptr %width.dbg.spill.i, align 8
  %48 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i, i32 0, i32 1
  store i64 %46, ptr %48, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i, metadata !4591, metadata !DIExpression()), !dbg !4606
  %49 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 2, !dbg !4607
  store i64 1, ptr %49, align 8, !dbg !4607
  %50 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 3, !dbg !4607
  store i32 32, ptr %50, align 8, !dbg !4607
  %51 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 5, !dbg !4607
  store i8 %38, ptr %51, align 8, !dbg !4607
  %52 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 4, !dbg !4607
  store i32 4, ptr %52, align 4, !dbg !4607
  store i64 %40, ptr %_21, align 8, !dbg !4607
  %53 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 1, !dbg !4607
  store i64 %42, ptr %53, align 8, !dbg !4607
  %54 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 1, !dbg !4607
  store i64 %44, ptr %54, align 8, !dbg !4607
  %55 = getelementptr inbounds { i64, i64 }, ptr %54, i32 0, i32 1, !dbg !4607
  store i64 %46, ptr %55, align 8, !dbg !4607
  %56 = getelementptr inbounds [2 x %"core::fmt::rt::Placeholder"], ptr %_16, i64 0, i64 0, !dbg !4569
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %56, ptr align 8 %_17, i64 56, i1 false), !dbg !4569
  %57 = getelementptr inbounds [2 x %"core::fmt::rt::Placeholder"], ptr %_16, i64 0, i64 1, !dbg !4569
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %57, ptr align 8 %_21, i64 56, i1 false), !dbg !4569
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17heef7b71c42fa4a1bE(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_3, ptr align 8 @alloc_66b748d60109a70935d7c8ff4103acd2, i64 3, ptr align 8 %_7, i64 2, ptr align 8 %_16, i64 2) #10, !dbg !4569
; call core::fmt::Formatter::write_fmt
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hde8f93715d9c900cE(ptr align 8 %f, ptr align 8 %_3) #10, !dbg !4569
  ret i1 %_0, !dbg !4608
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::convert::From<bootloader::bootinfo::memory_map::E820MemoryRegion>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17he58aaef6a2e26b29E"(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_0, ptr align 8 %region) unnamed_addr #1 !dbg !4609 {
start:
  %f.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i1 = alloca ptr, align 8
  %_0.i = alloca { ptr, ptr }, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %_9 = alloca [1 x { ptr, ptr }], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %t = alloca i32, align 4
  %region_type = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4620, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.declare(metadata ptr %region_type, metadata !4621, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.declare(metadata ptr %t, metadata !4623, metadata !DIExpression()), !dbg !4627
  %0 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4628
  %1 = load i32, ptr %0, align 8, !dbg !4628, !noundef !24
  switch i32 %1, label %bb1 [
    i32 1, label %bb2
    i32 2, label %bb3
    i32 3, label %bb4
    i32 4, label %bb5
    i32 5, label %bb6
  ], !dbg !4628

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4629
  %3 = load i32, ptr %2, align 8, !dbg !4629, !noundef !24
  store i32 %3, ptr %t, align 4, !dbg !4629
  store ptr %t, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !4630, metadata !DIExpression()), !dbg !4639
  store ptr %t, ptr %x.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i1, metadata !4641, metadata !DIExpression()), !dbg !4651
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hdcad07bd240c11a9E", ptr %f.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i, metadata !4650, metadata !DIExpression()), !dbg !4653
  store ptr %t, ptr %_0.i, align 8, !dbg !4654
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_0.i, i32 0, i32 1, !dbg !4654
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hdcad07bd240c11a9E", ptr %4, align 8, !dbg !4654
  %5 = load ptr, ptr %_0.i, align 8, !dbg !4655, !nonnull !24, !align !2171, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_0.i, i32 0, i32 1, !dbg !4655
  %7 = load ptr, ptr %6, align 8, !dbg !4655, !nonnull !24, !noundef !24
  %8 = insertvalue { ptr, ptr } poison, ptr %5, 0, !dbg !4655
  %9 = insertvalue { ptr, ptr } %8, ptr %7, 1, !dbg !4655
  %_0.0.i = extractvalue { ptr, ptr } %9, 0, !dbg !4656
  %_0.1.i = extractvalue { ptr, ptr } %9, 1, !dbg !4656
  %_10.0 = extractvalue { ptr, ptr } %9, 0, !dbg !4657
  %_10.1 = extractvalue { ptr, ptr } %9, 1, !dbg !4657
  %10 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_9, i64 0, i64 0, !dbg !4657
  %11 = getelementptr inbounds { ptr, ptr }, ptr %10, i32 0, i32 0, !dbg !4657
  store ptr %_10.0, ptr %11, align 8, !dbg !4657
  %12 = getelementptr inbounds { ptr, ptr }, ptr %10, i32 0, i32 1, !dbg !4657
  store ptr %_10.1, ptr %12, align 8, !dbg !4657
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h4dd1a47854aa80dcE(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_e5e9b862f59b7b219603a8c2f3244fe9, i64 1, ptr align 8 %_9, i64 1) #10, !dbg !4657
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h7c3b1a7d9368f16cE(ptr align 8 %_5, ptr align 8 @alloc_77b37cd66ce1cc3a3fba36d23d80fdb3) #11, !dbg !4657
  unreachable, !dbg !4657

bb2:                                              ; preds = %start
  store i32 0, ptr %region_type, align 4, !dbg !4658
  br label %bb9, !dbg !4658

bb3:                                              ; preds = %start
  store i32 2, ptr %region_type, align 4, !dbg !4659
  br label %bb9, !dbg !4659

bb4:                                              ; preds = %start
  store i32 3, ptr %region_type, align 4, !dbg !4660
  br label %bb9, !dbg !4660

bb5:                                              ; preds = %start
  store i32 4, ptr %region_type, align 4, !dbg !4661
  br label %bb9, !dbg !4661

bb6:                                              ; preds = %start
  store i32 5, ptr %region_type, align 4, !dbg !4662
  br label %bb9, !dbg !4662

bb9:                                              ; preds = %bb6, %bb5, %bb4, %bb3, %bb2
  %_13 = load i64, ptr %region, align 8, !dbg !4663, !noundef !24
  %_15 = load i64, ptr %region, align 8, !dbg !4664, !noundef !24
  %13 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 1, !dbg !4665
  %_16 = load i64, ptr %13, align 8, !dbg !4665, !noundef !24
  %14 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 %_16), !dbg !4664
  %_17.0 = extractvalue { i64, i1 } %14, 0, !dbg !4664
  %_17.1 = extractvalue { i64, i1 } %14, 1, !dbg !4664
  %15 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !4664
  br i1 %15, label %panic, label %bb10, !dbg !4664

bb10:                                             ; preds = %bb9
; call bootloader::bootinfo::memory_map::FrameRange::new
  %16 = call { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h76b99035b226fdd7E(i64 %_13, i64 %_17.0) #10, !dbg !4666
  %_12.0 = extractvalue { i64, i64 } %16, 0, !dbg !4666
  %_12.1 = extractvalue { i64, i64 } %16, 1, !dbg !4666
  %_18 = load i32, ptr %region_type, align 4, !dbg !4667, !range !4486, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !4668
  store i64 %_12.0, ptr %17, align 8, !dbg !4668
  %18 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4668
  store i64 %_12.1, ptr %18, align 8, !dbg !4668
  %19 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_0, i32 0, i32 1, !dbg !4668
  store i32 %_18, ptr %19, align 8, !dbg !4668
  ret void, !dbg !4669

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_c079ed8b3565806ba4379b0e287ee07f) #11, !dbg !4664
  unreachable, !dbg !4664
}

; bootloader::bootinfo::BootInfo::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo3new17h8f70a81797e10a5fE(ptr sret(%"bootinfo::BootInfo") align 8 %_0, ptr align 8 %memory_map, ptr align 8 %tls_template, i64 %recursive_page_table_addr, i64 %physical_memory_offset) unnamed_addr #1 !dbg !4670 {
start:
  %0 = alloca %"core::option::Option<bootinfo::TlsTemplate>", align 8
  %physical_memory_offset.dbg.spill = alloca i64, align 8
  %recursive_page_table_addr.dbg.spill = alloca i64, align 8
  %_6 = alloca %"bootinfo::TlsTemplate", align 8
  %tls_template1 = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %memory_map, metadata !4682, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.declare(metadata ptr %tls_template, metadata !4683, metadata !DIExpression()), !dbg !4689
  store i64 %recursive_page_table_addr, ptr %recursive_page_table_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %recursive_page_table_addr.dbg.spill, metadata !4684, metadata !DIExpression()), !dbg !4690
  store i64 %physical_memory_offset, ptr %physical_memory_offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %physical_memory_offset.dbg.spill, metadata !4685, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.declare(metadata ptr %tls_template1, metadata !4686, metadata !DIExpression()), !dbg !4692
  store i64 0, ptr %_6, align 8, !dbg !4693
  %1 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 1, !dbg !4693
  store i64 0, ptr %1, align 8, !dbg !4693
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 2, !dbg !4693
  store i64 0, ptr %2, align 8, !dbg !4693
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %tls_template, i64 32, i1 false), !dbg !4694
; call core::option::Option<T>::unwrap_or
  call void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h7917024bfba0f138E"(ptr sret(%"bootinfo::TlsTemplate") align 8 %tls_template1, ptr align 8 %0, ptr align 8 %_6) #10, !dbg !4694
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %memory_map, i64 1544, i1 false), !dbg !4695
  %3 = getelementptr inbounds %"bootinfo::BootInfo", ptr %_0, i32 0, i32 1, !dbg !4695
  store i64 %physical_memory_offset, ptr %3, align 8, !dbg !4695
  %4 = getelementptr inbounds %"bootinfo::BootInfo", ptr %_0, i32 0, i32 2, !dbg !4695
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %tls_template1, i64 24, i1 false), !dbg !4695
  %5 = getelementptr inbounds %"bootinfo::BootInfo", ptr %_0, i32 0, i32 3, !dbg !4695
  store i8 0, ptr %5, align 8, !dbg !4695
  ret void, !dbg !4696
}

; bootloader::bootinfo::BootInfo::tls_template
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo12tls_template17h622dd44abe5a9e87E(ptr sret(%"core::option::Option<bootinfo::TlsTemplate>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !4697 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"bootinfo::TlsTemplate", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4703, metadata !DIExpression()), !dbg !4704
  %0 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 2, !dbg !4705
  %1 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %0, i32 0, i32 2, !dbg !4705
  %_3 = load i64, ptr %1, align 8, !dbg !4705, !noundef !24
  %_2 = icmp ugt i64 %_3, 0, !dbg !4705
  br i1 %_2, label %bb1, label %bb2, !dbg !4705

bb2:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !4706
  br label %bb3, !dbg !4707

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 2, !dbg !4708
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %2, i64 24, i1 false), !dbg !4708
  %3 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %_0, i32 0, i32 1, !dbg !4709
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_4, i64 24, i1 false), !dbg !4709
  store i64 1, ptr %_0, align 8, !dbg !4709
  br label %bb3, !dbg !4707

bb3:                                              ; preds = %bb1, %bb2
  ret void, !dbg !4710
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17hb5f31ef666b56f1bE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !4711 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4716, metadata !DIExpression()), !dbg !4718
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4717, metadata !DIExpression()), !dbg !4718
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4719
  store ptr %0, ptr %_10, align 8, !dbg !4719
; call core::fmt::Formatter::debug_struct_field2_finish
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hca7f57a1d4027597E(ptr align 8 %f, ptr align 1 @alloc_2fa382d66c8b05cee83d1e636a456d83, i64 12, ptr align 1 @alloc_c6d312f4fb2564cdde1868738b40e953, i64 5, ptr align 1 %self, ptr align 8 @vtable.8, ptr align 1 @alloc_24a09d864e93eaea8a967d85ad5fb14b, i64 11, ptr align 1 %_10, ptr align 8 @vtable.9) #10, !dbg !4718
  ret i1 %_0, !dbg !4720
}

; <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h2bed866459e5eb4bE"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #0 !dbg !4721 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_3 = alloca { ptr, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4726, metadata !DIExpression()), !dbg !4728
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4727, metadata !DIExpression()), !dbg !4728
  %0 = load i32, ptr %self, align 4, !dbg !4728, !range !4486, !noundef !24
  %_4 = zext i32 %0 to i64, !dbg !4728
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
    i64 10, label %bb13
    i64 11, label %bb14
    i64 12, label %bb15
    i64 13, label %bb16
    i64 14, label %bb1
  ], !dbg !4728

bb2:                                              ; preds = %start
  unreachable, !dbg !4728

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_3c5b86a9b7fa1d302afea08936e483c5, ptr %1, align 8, !dbg !4728
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 6, ptr %2, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_3e93a37ed61282b1c76f7355bd470201, ptr %3, align 8, !dbg !4728
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 5, ptr %4, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb5:                                              ; preds = %start
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_f09f4d0dabebc98449d61db8d60067bb, ptr %5, align 8, !dbg !4728
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 8, ptr %6, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb6:                                              ; preds = %start
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_405580fa38aa12693d369698203e043e, ptr %7, align 8, !dbg !4728
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 15, ptr %8, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb7:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_497f8f871d9b9bd5767a37917b988618, ptr %9, align 8, !dbg !4728
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 7, ptr %10, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb8:                                              ; preds = %start
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_2db2f360d33be2fea5593ededc5fb904, ptr %11, align 8, !dbg !4728
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 9, ptr %12, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb9:                                              ; preds = %start
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_bfff067230aa23bc581d3ad54a803735, ptr %13, align 8, !dbg !4728
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 6, ptr %14, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb10:                                             ; preds = %start
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_272cabb5c5fb66cc8e055c6a08dd5a38, ptr %15, align 8, !dbg !4728
  %16 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 11, ptr %16, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb11:                                             ; preds = %start
  %17 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_84113867da1e74b2269b5cf897cae626, ptr %17, align 8, !dbg !4728
  %18 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 9, ptr %18, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb12:                                             ; preds = %start
  %19 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_88f77a4216025d9c2616c4e0631b580d, ptr %19, align 8, !dbg !4728
  %20 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 10, ptr %20, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb13:                                             ; preds = %start
  %21 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_296c708f84ba4aacbf601faaf01ee90e, ptr %21, align 8, !dbg !4728
  %22 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 9, ptr %22, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb14:                                             ; preds = %start
  %23 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_59ba7b9f7211443cd55a366616eef46a, ptr %23, align 8, !dbg !4728
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 5, ptr %24, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb15:                                             ; preds = %start
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_1f9c4cc73f4140a97f2cf1f721646a68, ptr %25, align 8, !dbg !4728
  %26 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 8, ptr %26, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb16:                                             ; preds = %start
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_3faf0b3374c02c8ecbb0aba47045e793, ptr %27, align 8, !dbg !4728
  %28 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 7, ptr %28, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb1:                                              ; preds = %start
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  store ptr @alloc_4f458a5ac3a6382b3750f993ab870080, ptr %29, align 8, !dbg !4728
  %30 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  store i64 13, ptr %30, align 8, !dbg !4728
  br label %bb17, !dbg !4729

bb17:                                             ; preds = %bb1, %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3
  %31 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4728
  %32 = load ptr, ptr %31, align 8, !dbg !4728, !nonnull !24, !align !2171, !noundef !24
  %33 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4728
  %34 = load i64, ptr %33, align 8, !dbg !4728, !noundef !24
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17hbd865ba37b90fa07E(ptr align 8 %f, ptr align 1 %32, i64 %34) #10, !dbg !4728
  ret i1 %_0, !dbg !4730
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; core::panicking::panic_nounwind_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_nounwind_fmt17h7770fb789a88f813E(ptr align 8, i1 zeroext, ptr align 8) unnamed_addr #5

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h0a42cdc12efaacd8E(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17h1b2ac3d0a3940fe3E(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h1ff8d5543d1511caE(i64, i64, ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint noredzone nounwind
declare align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h5ce0dce29a19af3cE"(ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #6

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17he8afd580e0f0b753E(ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint noredzone nounwind
declare void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h866ce3a2511dc300E"(ptr sret(%"core::ops::range::RangeInclusive<usize>") align 8, i64, i64) unnamed_addr #0

; core::option::Option<T>::expect
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h56a8ca37b2b5e318E"(i64, i64, ptr align 1, i64, ptr align 8) unnamed_addr #0

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking14panic_nounwind17h3f66d49fb2fbf08dE(ptr align 1, i64) unnamed_addr #5

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h81803855ff59930dE(ptr) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #6

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17hdcad07bd240c11a9E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hd234c40214b86a5bE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: noredzone nounwind
declare align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h2057dc9e9144cd00E(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #7

; core::panicking::panic
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking5panic17h91639042aeeb9621E(ptr align 1, i64, ptr align 8) unnamed_addr #5

; core::panicking::panic_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking9panic_fmt17h7c3b1a7d9368f16cE(ptr align 8, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha85da2cb6c648146E(ptr) unnamed_addr #0

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17ha49e1f234b8b4c14E(i64, i64, ptr align 8) unnamed_addr #5

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc9040ef59f55e22cE"(i64, i64) unnamed_addr #0

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5014b81ca02722adE"(ptr align 8) unnamed_addr #0

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hc93b5f8fa475ff04E(i64, i64) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf86c5f7bf3977df8E"(i64, i64) unnamed_addr #0

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h76390c5a0cb34d80E"(ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #8

; core::cmp::min
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3cmp3min17h3e905c43a1a3a18fE(i64, i64) unnamed_addr #0

; core::panicking::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking13assert_failed17h1443aac0ba710f68E(i8, ptr align 8, ptr align 8, ptr align 8, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #9

; core::fmt::Formatter::debug_list
; Function Attrs: noredzone nounwind
declare void @_ZN4core3fmt9Formatter10debug_list17hff245757069ee648E(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha94b9b07b15c5cb1E(ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hde8f93715d9c900cE(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hca7f57a1d4027597E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17hbd865ba37b90fa07E(ptr align 8, ptr align 1, i64) unnamed_addr #1

attributes #0 = { inlinehint noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #1 = { noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #2 = { cold noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #3 = { noinline noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { cold noinline noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #9 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!61, !62, !63}
!llvm.ident = !{!64}
!llvm.dbg.cu = !{!65}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !24, identifier: "c3d733cf58330d1753b764aecac49c25")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryRegion", scope: !14, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !17, templateParams: !24, identifier: "3ab281b9771ab207c876c3cb91c18c10")
!14 = !DINamespace(name: "memory_map", scope: !15)
!15 = !DINamespace(name: "bootinfo", scope: !16)
!16 = !DINamespace(name: "bootloader", scope: null)
!17 = !{!18, !25}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !13, file: !2, baseType: !19, size: 128, align: 64, flags: DIFlagPublic)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "FrameRange", scope: !14, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !20, templateParams: !24, identifier: "70918a37bccf72f8c497f91f4f9fe843")
!20 = !{!21, !23}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagPublic)
!22 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!24 = !{}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !13, file: !2, baseType: !26, size: 32, align: 32, offset: 128, flags: DIFlagPublic)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MemoryRegionType", scope: !14, file: !2, baseType: !27, size: 32, align: 32, flags: DIFlagEnumClass, elements: !28)
!27 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43}
!29 = !DIEnumerator(name: "Usable", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "InUse", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "Reserved", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "AcpiReclaimable", value: 3, isUnsigned: true)
!33 = !DIEnumerator(name: "AcpiNvs", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "BadMemory", value: 5, isUnsigned: true)
!35 = !DIEnumerator(name: "Kernel", value: 6, isUnsigned: true)
!36 = !DIEnumerator(name: "KernelStack", value: 7, isUnsigned: true)
!37 = !DIEnumerator(name: "PageTable", value: 8, isUnsigned: true)
!38 = !DIEnumerator(name: "Bootloader", value: 9, isUnsigned: true)
!39 = !DIEnumerator(name: "FrameZero", value: 10, isUnsigned: true)
!40 = !DIEnumerator(name: "Empty", value: 11, isUnsigned: true)
!41 = !DIEnumerator(name: "BootInfo", value: 12, isUnsigned: true)
!42 = !DIEnumerator(name: "Package", value: 13, isUnsigned: true)
!43 = !DIEnumerator(name: "NonExhaustive", value: 14, isUnsigned: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !46, isLocal: true, isDefinition: true)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !47, vtableHolder: !19, templateParams: !24, identifier: "476ad1096335db764b64576ec4f49563")
!47 = !{!48, !49, !50, !51}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !46, file: !2, baseType: !6, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !46, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !54, isLocal: true, isDefinition: true)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !55, vtableHolder: !60, templateParams: !24, identifier: "7fb018207cc31681df7ce80de0e3db3c")
!55 = !{!56, !57, !58, !59}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !54, file: !2, baseType: !6, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !54, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !26, size: 64, align: 64, dwarfAddressSpace: 0)
!61 = !{i32 8, !"PIC Level", i32 2}
!62 = !{i32 2, !"Dwarf Version", i32 4}
!63 = !{i32 2, !"Debug Info Version", i32 3}
!64 = !{!"rustc version 1.77.0-nightly (bf8716f1c 2023-12-24)"}
!65 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !66, producer: "clang LLVM (rustc version 1.77.0-nightly (bf8716f1c 2023-12-24))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !67, globals: !91, splitDebugInlining: false, nameTableKind: None)
!66 = !DIFile(filename: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/lib.rs/@/bootloader.6c9291e87e921d15-cgu.0", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23")
!67 = !{!26, !68, !78, !85}
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !69, file: !2, baseType: !72, size: 8, align: 8, flags: DIFlagEnumClass, elements: !73)
!69 = !DINamespace(name: "rt", scope: !70)
!70 = !DINamespace(name: "fmt", scope: !71)
!71 = !DINamespace(name: "core", scope: null)
!72 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!73 = !{!74, !75, !76, !77}
!74 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !79, file: !2, baseType: !80, size: 8, align: 8, flags: DIFlagEnumClass, elements: !81)
!79 = !DINamespace(name: "cmp", scope: !71)
!80 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!81 = !{!82, !83, !84}
!82 = !DIEnumerator(name: "Less", value: -1)
!83 = !DIEnumerator(name: "Equal", value: 0)
!84 = !DIEnumerator(name: "Greater", value: 1)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !86, file: !2, baseType: !72, size: 8, align: 8, flags: DIFlagEnumClass, elements: !87)
!86 = !DINamespace(name: "panicking", scope: !71)
!87 = !{!88, !89, !90}
!88 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!91 = !{!0, !44, !52}
!92 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hfe08fd84f61cd73cE", scope: !94, file: !93, line: 361, type: !97, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !112)
!93 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "e7f22ccdd2c655ed8ac93890d4b7736c")
!94 = !DINamespace(name: "{impl#4}", scope: !95)
!95 = !DINamespace(name: "index", scope: !96)
!96 = !DINamespace(name: "slice", scope: !71)
!97 = !DISubroutineType(types: !98)
!98 = !{!99, !104, !99}
!99 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !100, templateParams: !24, identifier: "41d3ce2e7e3dc9fb49a6f389ab7c32dd")
!100 = !{!101, !103}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !99, file: !2, baseType: !102, size: 64, align: 64)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !99, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!104 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !105, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !107, templateParams: !110, identifier: "901b65327c7a0db6ec238473579c070f")
!105 = !DINamespace(name: "range", scope: !106)
!106 = !DINamespace(name: "ops", scope: !71)
!107 = !{!108, !109}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !104, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPublic)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !104, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!110 = !{!111}
!111 = !DITemplateTypeParameter(name: "Idx", type: !9)
!112 = !{!113, !114, !115}
!113 = !DILocalVariable(name: "self", arg: 1, scope: !92, file: !93, line: 361, type: !104)
!114 = !DILocalVariable(name: "slice", arg: 2, scope: !92, file: !93, line: 361, type: !99)
!115 = !DILocalVariable(name: "new_len", scope: !116, file: !93, line: 371, type: !9, align: 8)
!116 = distinct !DILexicalBlock(scope: !92, file: !93, line: 371, column: 13)
!117 = !{!118}
!118 = !DITemplateTypeParameter(name: "T", type: !13)
!119 = !DILocation(line: 361, column: 29, scope: !92)
!120 = !DILocation(line: 361, column: 35, scope: !92)
!121 = !DILocation(line: 362, column: 9, scope: !92)
!122 = !DILocation(line: 371, column: 27, scope: !92)
!123 = !DILocation(line: 371, column: 17, scope: !116)
!124 = !DILocation(line: 372, column: 39, scope: !116)
!125 = !DILocalVariable(name: "self", arg: 1, scope: !126, file: !127, line: 939, type: !133)
!126 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd1696fb8728ebcebE", scope: !128, file: !127, line: 939, type: !131, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !134)
!127 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "38bc561117faaf878dc249ac281f92b9")
!128 = !DINamespace(name: "{impl#0}", scope: !129)
!129 = !DINamespace(name: "const_ptr", scope: !130)
!130 = !DINamespace(name: "ptr", scope: !71)
!131 = !DISubroutineType(types: !132)
!132 = !{!133, !133, !9}
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!134 = !{!125, !135}
!135 = !DILocalVariable(name: "count", arg: 2, scope: !126, file: !127, line: 939, type: !9)
!136 = !DILocation(line: 939, column: 29, scope: !126, inlinedAt: !137)
!137 = distinct !DILocation(line: 372, column: 39, scope: !116)
!138 = !DILocation(line: 939, column: 35, scope: !126, inlinedAt: !137)
!139 = !DILocation(line: 944, column: 18, scope: !126, inlinedAt: !137)
!140 = !DILocation(line: 372, column: 13, scope: !116)
!141 = !DILocation(line: 374, column: 6, scope: !92)
!142 = !DILocation(line: 363, column: 13, scope: !92)
!143 = !DILocation(line: 363, column: 51, scope: !92)
!144 = !DILocation(line: 363, column: 39, scope: !92)
!145 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h84dbbbd3ab3cdd81E", scope: !94, file: !93, line: 377, type: !146, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !152)
!146 = !DISubroutineType(types: !147)
!147 = !{!148, !104, !148}
!148 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !149, templateParams: !24, identifier: "fb8184aa514e9b2892e65fee2b3acb68")
!149 = !{!150, !151}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !148, file: !2, baseType: !102, size: 64, align: 64)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !148, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!152 = !{!153, !154, !155}
!153 = !DILocalVariable(name: "self", arg: 1, scope: !145, file: !93, line: 377, type: !104)
!154 = !DILocalVariable(name: "slice", arg: 2, scope: !145, file: !93, line: 377, type: !148)
!155 = !DILocalVariable(name: "new_len", scope: !156, file: !93, line: 384, type: !9, align: 8)
!156 = distinct !DILexicalBlock(scope: !145, file: !93, line: 384, column: 13)
!157 = !DILocation(line: 377, column: 33, scope: !145)
!158 = !DILocation(line: 377, column: 39, scope: !145)
!159 = !DILocation(line: 378, column: 9, scope: !145)
!160 = !DILocation(line: 384, column: 27, scope: !145)
!161 = !DILocation(line: 384, column: 17, scope: !156)
!162 = !DILocalVariable(name: "self", arg: 1, scope: !163, file: !164, line: 2059, type: !148)
!163 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h37bb438218a441f9E", scope: !165, file: !164, line: 2059, type: !167, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !170)
!164 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1cdb8bf37e9a3030e5a54af01a3bdb3b")
!165 = !DINamespace(name: "{impl#1}", scope: !166)
!166 = !DINamespace(name: "mut_ptr", scope: !130)
!167 = !DISubroutineType(types: !168)
!168 = !{!169, !148}
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!170 = !{!162}
!171 = !DILocation(line: 2059, column: 29, scope: !163, inlinedAt: !172)
!172 = distinct !DILocation(line: 385, column: 43, scope: !156)
!173 = !DILocalVariable(name: "self", arg: 1, scope: !174, file: !164, line: 1040, type: !169)
!174 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h485e0f23ba6dbe60E", scope: !175, file: !164, line: 1040, type: !176, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !178)
!175 = !DINamespace(name: "{impl#0}", scope: !166)
!176 = !DISubroutineType(types: !177)
!177 = !{!169, !169, !9}
!178 = !{!173, !179}
!179 = !DILocalVariable(name: "count", arg: 2, scope: !174, file: !164, line: 1040, type: !9)
!180 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !181)
!181 = distinct !DILocation(line: 385, column: 43, scope: !156)
!182 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !181)
!183 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !181)
!184 = !DILocation(line: 385, column: 13, scope: !156)
!185 = !DILocation(line: 387, column: 6, scope: !145)
!186 = !DILocation(line: 379, column: 13, scope: !145)
!187 = !DILocalVariable(name: "self", arg: 1, scope: !188, file: !164, line: 1923, type: !148)
!188 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h7b358f1188e4f6f5E", scope: !165, file: !164, line: 1923, type: !189, scopeLine: 1923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !191)
!189 = !DISubroutineType(types: !190)
!190 = !{!9, !148}
!191 = !{!187}
!192 = !DILocation(line: 1923, column: 22, scope: !188, inlinedAt: !193)
!193 = distinct !DILocation(line: 379, column: 51, scope: !145)
!194 = !DILocation(line: 1924, column: 9, scope: !188, inlinedAt: !193)
!195 = !DILocation(line: 379, column: 39, scope: !145)
!196 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h4a28392e4da7e40dE", scope: !94, file: !93, line: 390, type: !197, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !216)
!197 = !DISubroutineType(types: !198)
!198 = !{!199, !104, !199, !203}
!199 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !200, templateParams: !24, identifier: "ed01e5b4be48a025f2c63c54218f913d")
!200 = !{!201, !202}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !199, file: !2, baseType: !102, size: 64, align: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !199, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !204, size: 64, align: 64, dwarfAddressSpace: 0)
!204 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !205, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !207, templateParams: !24, identifier: "a313c32de3a8c9bc539767ad1b1d23fa")
!205 = !DINamespace(name: "location", scope: !206)
!206 = !DINamespace(name: "panic", scope: !71)
!207 = !{!208, !214, !215}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !204, file: !2, baseType: !209, size: 128, align: 64, flags: DIFlagPrivate)
!209 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !210, templateParams: !24, identifier: "857c99401054bcaa39f98e6e0c6d74b")
!210 = !{!211, !213}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !209, file: !2, baseType: !212, size: 64, align: 64)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64, align: 64, dwarfAddressSpace: 0)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !209, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !204, file: !2, baseType: !27, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !204, file: !2, baseType: !27, size: 32, align: 32, offset: 160, flags: DIFlagPrivate)
!216 = !{!217, !218}
!217 = !DILocalVariable(name: "self", arg: 1, scope: !196, file: !93, line: 390, type: !104)
!218 = !DILocalVariable(name: "slice", arg: 2, scope: !196, file: !93, line: 390, type: !199)
!219 = !DILocation(line: 390, column: 14, scope: !196)
!220 = !DILocation(line: 390, column: 20, scope: !196)
!221 = !DILocation(line: 391, column: 12, scope: !196)
!222 = !DILocation(line: 393, column: 19, scope: !196)
!223 = !DILocation(line: 392, column: 13, scope: !196)
!224 = !DILocation(line: 397, column: 20, scope: !196)
!225 = !DILocation(line: 398, column: 6, scope: !196)
!226 = !DILocation(line: 394, column: 13, scope: !196)
!227 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd232e9471b3bcbd7E", scope: !94, file: !93, line: 401, type: !228, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !234)
!228 = !DISubroutineType(types: !229)
!229 = !{!230, !104, !230, !203}
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !231, templateParams: !24, identifier: "2274abcd31d11832452bb3bbe010a0a7")
!231 = !{!232, !233}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !230, file: !2, baseType: !102, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !230, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!234 = !{!235, !236}
!235 = !DILocalVariable(name: "self", arg: 1, scope: !227, file: !93, line: 401, type: !104)
!236 = !DILocalVariable(name: "slice", arg: 2, scope: !227, file: !93, line: 401, type: !230)
!237 = !DILocation(line: 401, column: 18, scope: !227)
!238 = !DILocation(line: 401, column: 24, scope: !227)
!239 = !DILocation(line: 402, column: 12, scope: !227)
!240 = !DILocation(line: 404, column: 19, scope: !227)
!241 = !DILocation(line: 403, column: 13, scope: !227)
!242 = !DILocation(line: 408, column: 24, scope: !227)
!243 = !DILocation(line: 409, column: 6, scope: !227)
!244 = !DILocation(line: 405, column: 13, scope: !227)
!245 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h804e76f7effbaca6E", scope: !246, file: !93, line: 445, type: !247, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !252)
!246 = !DINamespace(name: "{impl#5}", scope: !95)
!247 = !DISubroutineType(types: !248)
!248 = !{!230, !249, !230, !203}
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !105, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !250, templateParams: !110, identifier: "850186ec4cd1a9948495796a7cc137af")
!250 = !{!251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !249, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPublic)
!252 = !{!253, !254}
!253 = !DILocalVariable(name: "self", arg: 1, scope: !245, file: !93, line: 445, type: !249)
!254 = !DILocalVariable(name: "slice", arg: 2, scope: !245, file: !93, line: 445, type: !230)
!255 = !DILocation(line: 445, column: 18, scope: !245)
!256 = !DILocation(line: 445, column: 24, scope: !245)
!257 = !DILocation(line: 446, column: 9, scope: !245)
!258 = !DILocation(line: 447, column: 6, scope: !245)
!259 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hf5373de402fb0f6eE", scope: !260, file: !93, line: 472, type: !261, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !266)
!260 = !DINamespace(name: "{impl#6}", scope: !95)
!261 = !DISubroutineType(types: !262)
!262 = !{!148, !263, !148}
!263 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !105, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !264, templateParams: !110, identifier: "d15a4769f06d4bd4dfd8f62ca68c0cb5")
!264 = !{!265}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !263, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPublic)
!266 = !{!267, !268}
!267 = !DILocalVariable(name: "self", arg: 1, scope: !259, file: !93, line: 472, type: !263)
!268 = !DILocalVariable(name: "slice", arg: 2, scope: !259, file: !93, line: 472, type: !148)
!269 = !DILocation(line: 472, column: 33, scope: !259)
!270 = !DILocation(line: 472, column: 39, scope: !259)
!271 = !DILocation(line: 1923, column: 22, scope: !188, inlinedAt: !272)
!272 = distinct !DILocation(line: 474, column: 31, scope: !259)
!273 = !DILocation(line: 1924, column: 9, scope: !188, inlinedAt: !272)
!274 = !DILocation(line: 474, column: 18, scope: !259)
!275 = !DILocation(line: 475, column: 6, scope: !259)
!276 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha9ef22d46c89057bE", scope: !260, file: !93, line: 487, type: !277, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !279)
!277 = !DISubroutineType(types: !278)
!278 = !{!230, !263, !230, !203}
!279 = !{!280, !281}
!280 = !DILocalVariable(name: "self", arg: 1, scope: !276, file: !93, line: 487, type: !263)
!281 = !DILocalVariable(name: "slice", arg: 2, scope: !276, file: !93, line: 487, type: !230)
!282 = !DILocation(line: 487, column: 18, scope: !276)
!283 = !DILocation(line: 487, column: 24, scope: !276)
!284 = !DILocation(line: 488, column: 12, scope: !276)
!285 = !DILocation(line: 492, column: 24, scope: !276)
!286 = !DILocation(line: 493, column: 6, scope: !276)
!287 = !DILocation(line: 489, column: 13, scope: !276)
!288 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7a4245780a411d1eE", scope: !289, file: !93, line: 568, type: !290, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !298)
!289 = !DINamespace(name: "{impl#8}", scope: !95)
!290 = !DISubroutineType(types: !291)
!291 = !{!230, !292, !230, !203}
!292 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !105, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !293, templateParams: !110, identifier: "2756af72a7bb9e2f3834d3dabd84e8fe")
!293 = !{!294, !295, !296}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !292, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagProtected)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !292, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagProtected)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !292, file: !2, baseType: !297, size: 8, align: 8, offset: 128, flags: DIFlagProtected)
!297 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!298 = !{!299, !300}
!299 = !DILocalVariable(name: "self", arg: 1, scope: !288, file: !93, line: 568, type: !292)
!300 = !DILocalVariable(name: "slice", arg: 2, scope: !288, file: !93, line: 568, type: !230)
!301 = !DILocation(line: 568, column: 18, scope: !288)
!302 = !DILocation(line: 568, column: 24, scope: !288)
!303 = !DILocation(line: 569, column: 13, scope: !288)
!304 = !DILocation(line: 569, column: 12, scope: !288)
!305 = !DILocation(line: 572, column: 9, scope: !288)
!306 = !DILocation(line: 573, column: 6, scope: !288)
!307 = !DILocation(line: 570, column: 13, scope: !288)
!308 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb88913efd5b9da0eE", scope: !309, file: !93, line: 609, type: !310, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !315)
!309 = !DINamespace(name: "{impl#9}", scope: !95)
!310 = !DISubroutineType(types: !311)
!311 = !{!230, !312, !230, !203}
!312 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeToInclusive<usize>", scope: !105, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !313, templateParams: !110, identifier: "e22b6b50f50f5c83a284db4f4e805628")
!313 = !{!314}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !312, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPublic)
!315 = !{!316, !317}
!316 = !DILocalVariable(name: "self", arg: 1, scope: !308, file: !93, line: 609, type: !312)
!317 = !DILocalVariable(name: "slice", arg: 2, scope: !308, file: !93, line: 609, type: !230)
!318 = !DILocation(line: 609, column: 18, scope: !308)
!319 = !DILocation(line: 609, column: 24, scope: !308)
!320 = !DILocation(line: 610, column: 9, scope: !308)
!321 = !DILocation(line: 611, column: 6, scope: !308)
!322 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e387e31321d4425E", scope: !324, file: !323, line: 2294, type: !325, scopeLine: 2294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !380)
!323 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "f2f9e528240e472a11f8ea13e1ff6e2a")
!324 = !DINamespace(name: "{impl#53}", scope: !70)
!325 = !DISubroutineType(types: !326)
!326 = !{!327, !345, !346}
!327 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !328, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !329, templateParams: !24, identifier: "27f960845886d02861ac4e7842c7e3a5")
!328 = !DINamespace(name: "result", scope: !71)
!329 = !{!330}
!330 = !DICompositeType(tag: DW_TAG_variant_part, scope: !327, file: !2, size: 8, align: 8, elements: !331, templateParams: !24, identifier: "66d489f599415104a0443264f219183e", discriminator: !344)
!331 = !{!332, !340}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !330, file: !2, baseType: !333, size: 8, align: 8, extraData: i128 0)
!333 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !327, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !334, templateParams: !336, identifier: "32d59cf74d9b6f653b9b9bdadad679d3")
!334 = !{!335}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !333, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!336 = !{!337, !338}
!337 = !DITemplateTypeParameter(name: "T", type: !7)
!338 = !DITemplateTypeParameter(name: "E", type: !339)
!339 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !70, file: !2, align: 8, flags: DIFlagPublic, elements: !24, identifier: "51fe0299a3d4a0f45904895a145dce6f")
!340 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !330, file: !2, baseType: !341, size: 8, align: 8, extraData: i128 1)
!341 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !327, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !342, templateParams: !336, identifier: "c5badd8093158a69d1e378abd358f888")
!342 = !{!343}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !341, file: !2, baseType: !339, align: 8, offset: 8, flags: DIFlagPublic)
!344 = !DIDerivedType(tag: DW_TAG_member, scope: !327, file: !2, baseType: !72, size: 8, align: 8, flags: DIFlagArtificial)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !347, size: 64, align: 64, dwarfAddressSpace: 0)
!347 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !70, file: !2, size: 512, align: 64, flags: DIFlagPublic, elements: !348, templateParams: !24, identifier: "fc8c5174fb3e28559b9f8ae49cb7e953")
!348 = !{!349, !350, !352, !353, !368, !369}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !347, file: !2, baseType: !27, size: 32, align: 32, offset: 416, flags: DIFlagPrivate)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !347, file: !2, baseType: !351, size: 32, align: 32, offset: 384, flags: DIFlagPrivate)
!351 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !347, file: !2, baseType: !68, size: 8, align: 8, offset: 448, flags: DIFlagPrivate)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !347, file: !2, baseType: !354, size: 128, align: 64, flags: DIFlagPrivate)
!354 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !355, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !356, templateParams: !24, identifier: "c533b5fb51e1e1ac761f959533d6bfff")
!355 = !DINamespace(name: "option", scope: !71)
!356 = !{!357}
!357 = !DICompositeType(tag: DW_TAG_variant_part, scope: !354, file: !2, size: 128, align: 64, elements: !358, templateParams: !24, identifier: "6e5d37d4dda7b1d279317f623e9d50c", discriminator: !367)
!358 = !{!359, !363}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !357, file: !2, baseType: !360, size: 128, align: 64, extraData: i128 0)
!360 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !354, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !24, templateParams: !361, identifier: "ae81ebe2a9866af8df117bed47adaee")
!361 = !{!362}
!362 = !DITemplateTypeParameter(name: "T", type: !9)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !357, file: !2, baseType: !364, size: 128, align: 64, extraData: i128 1)
!364 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !354, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !365, templateParams: !361, identifier: "a581ef88bb755022340fa98600955727")
!365 = !{!366}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !364, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !354, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !347, file: !2, baseType: !354, size: 128, align: 64, offset: 128, flags: DIFlagPrivate)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !347, file: !2, baseType: !370, size: 128, align: 64, offset: 256, flags: DIFlagPrivate)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !371, templateParams: !24, identifier: "6607f9b055c62ce71a6a286c8014df9")
!371 = !{!372, !375}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !370, file: !2, baseType: !373, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64, align: 64, dwarfAddressSpace: 0)
!374 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !24, identifier: "e54d2d913ff56dbcd50e7c95a4cf29a")
!375 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !370, file: !2, baseType: !376, size: 64, align: 64, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !377, size: 64, align: 64, dwarfAddressSpace: 0)
!377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !378)
!378 = !{!379}
!379 = !DISubrange(count: 3, lowerBound: 0)
!380 = !{!381, !382}
!381 = !DILocalVariable(name: "self", arg: 1, scope: !322, file: !323, line: 2294, type: !345)
!382 = !DILocalVariable(name: "f", arg: 2, scope: !322, file: !323, line: 2294, type: !346)
!383 = !DILocation(line: 2294, column: 20, scope: !322)
!384 = !DILocation(line: 2294, column: 27, scope: !322)
!385 = !DILocation(line: 2294, column: 71, scope: !322)
!386 = !{i64 8}
!387 = !DILocation(line: 2294, column: 62, scope: !322)
!388 = !DILocation(line: 2294, column: 84, scope: !322)
!389 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h633161579c3717fbE", scope: !324, file: !323, line: 2294, type: !390, scopeLine: 2294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !396, retainedNodes: !393)
!390 = !DISubroutineType(types: !391)
!391 = !{!327, !392, !346}
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!393 = !{!394, !395}
!394 = !DILocalVariable(name: "self", arg: 1, scope: !389, file: !323, line: 2294, type: !392)
!395 = !DILocalVariable(name: "f", arg: 2, scope: !389, file: !323, line: 2294, type: !346)
!396 = !{!397}
!397 = !DITemplateTypeParameter(name: "T", type: !26)
!398 = !DILocation(line: 2294, column: 20, scope: !389)
!399 = !DILocation(line: 2294, column: 27, scope: !389)
!400 = !DILocation(line: 2294, column: 71, scope: !389)
!401 = !{i64 4}
!402 = !DILocation(line: 2294, column: 62, scope: !389)
!403 = !DILocation(line: 2294, column: 84, scope: !389)
!404 = distinct !DISubprogram(name: "is_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17h46a9af7e6ced7d7bE", scope: !406, file: !405, line: 2581, type: !407, scopeLine: 2581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, retainedNodes: !410)
!405 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "cce44e2a04c587bcf8c6286ed2962b67")
!406 = !DINamespace(name: "intrinsics", scope: !71)
!407 = !DISubroutineType(types: !408)
!408 = !{!297, !409, !409, !9}
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!410 = !{!411, !412, !413, !414, !416, !418, !420}
!411 = !DILocalVariable(name: "src", arg: 1, scope: !404, file: !405, line: 2581, type: !409)
!412 = !DILocalVariable(name: "dst", arg: 2, scope: !404, file: !405, line: 2581, type: !409)
!413 = !DILocalVariable(name: "count", arg: 3, scope: !404, file: !405, line: 2581, type: !9)
!414 = !DILocalVariable(name: "src_usize", scope: !415, file: !405, line: 2582, type: !9, align: 8)
!415 = distinct !DILexicalBlock(scope: !404, file: !405, line: 2582, column: 5)
!416 = !DILocalVariable(name: "dst_usize", scope: !417, file: !405, line: 2583, type: !9, align: 8)
!417 = distinct !DILexicalBlock(scope: !415, file: !405, line: 2583, column: 5)
!418 = !DILocalVariable(name: "size", scope: !419, file: !405, line: 2584, type: !9, align: 8)
!419 = distinct !DILexicalBlock(scope: !417, file: !405, line: 2584, column: 5)
!420 = !DILocalVariable(name: "diff", scope: !421, file: !405, line: 2587, type: !9, align: 8)
!421 = distinct !DILexicalBlock(scope: !419, file: !405, line: 2587, column: 5)
!422 = !DILocation(line: 2581, column: 36, scope: !404)
!423 = !DILocation(line: 2581, column: 51, scope: !404)
!424 = !DILocation(line: 2581, column: 66, scope: !404)
!425 = !DILocalVariable(name: "self", arg: 1, scope: !426, file: !127, line: 206, type: !409)
!426 = distinct !DISubprogram(name: "addr<usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hc775174a50a957a0E", scope: !128, file: !127, line: 206, type: !427, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, retainedNodes: !429)
!427 = !DISubroutineType(types: !428)
!428 = !{!9, !409}
!429 = !{!425}
!430 = !DILocation(line: 206, column: 17, scope: !426, inlinedAt: !431)
!431 = distinct !DILocation(line: 2582, column: 21, scope: !404)
!432 = !DILocalVariable(name: "self", arg: 1, scope: !433, file: !127, line: 60, type: !409)
!433 = distinct !DISubprogram(name: "cast<usize, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h5cc20295590f12a4E", scope: !128, file: !127, line: 60, type: !434, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !437, retainedNodes: !436)
!434 = !DISubroutineType(types: !435)
!435 = !{!6, !409}
!436 = !{!432}
!437 = !{!362, !438}
!438 = !DITemplateTypeParameter(name: "U", type: !7)
!439 = !DILocation(line: 60, column: 26, scope: !433, inlinedAt: !440)
!440 = distinct !DILocation(line: 210, column: 33, scope: !426, inlinedAt: !431)
!441 = !DILocation(line: 210, column: 18, scope: !426, inlinedAt: !431)
!442 = !DILocation(line: 2582, column: 21, scope: !404)
!443 = !DILocation(line: 2582, column: 9, scope: !415)
!444 = !DILocation(line: 206, column: 17, scope: !426, inlinedAt: !445)
!445 = distinct !DILocation(line: 2583, column: 21, scope: !415)
!446 = !DILocation(line: 60, column: 26, scope: !433, inlinedAt: !447)
!447 = distinct !DILocation(line: 210, column: 33, scope: !426, inlinedAt: !445)
!448 = !DILocation(line: 210, column: 18, scope: !426, inlinedAt: !445)
!449 = !DILocation(line: 2583, column: 21, scope: !415)
!450 = !DILocation(line: 2583, column: 9, scope: !417)
!451 = !DILocation(line: 2584, column: 16, scope: !417)
!452 = !DILocation(line: 2584, column: 9, scope: !419)
!453 = !DILocation(line: 2587, column: 16, scope: !419)
!454 = !DILocation(line: 2587, column: 9, scope: !421)
!455 = !DILocation(line: 2590, column: 5, scope: !421)
!456 = !DILocation(line: 2591, column: 2, scope: !404)
!457 = distinct !DISubprogram(name: "is_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17hd28313c5a69f5f09E", scope: !406, file: !405, line: 2581, type: !458, scopeLine: 2581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !460)
!458 = !DISubroutineType(types: !459)
!459 = !{!297, !133, !133, !9}
!460 = !{!461, !462, !463, !464, !466, !468, !470}
!461 = !DILocalVariable(name: "src", arg: 1, scope: !457, file: !405, line: 2581, type: !133)
!462 = !DILocalVariable(name: "dst", arg: 2, scope: !457, file: !405, line: 2581, type: !133)
!463 = !DILocalVariable(name: "count", arg: 3, scope: !457, file: !405, line: 2581, type: !9)
!464 = !DILocalVariable(name: "src_usize", scope: !465, file: !405, line: 2582, type: !9, align: 8)
!465 = distinct !DILexicalBlock(scope: !457, file: !405, line: 2582, column: 5)
!466 = !DILocalVariable(name: "dst_usize", scope: !467, file: !405, line: 2583, type: !9, align: 8)
!467 = distinct !DILexicalBlock(scope: !465, file: !405, line: 2583, column: 5)
!468 = !DILocalVariable(name: "size", scope: !469, file: !405, line: 2584, type: !9, align: 8)
!469 = distinct !DILexicalBlock(scope: !467, file: !405, line: 2584, column: 5)
!470 = !DILocalVariable(name: "diff", scope: !471, file: !405, line: 2587, type: !9, align: 8)
!471 = distinct !DILexicalBlock(scope: !469, file: !405, line: 2587, column: 5)
!472 = !DILocation(line: 2581, column: 36, scope: !457)
!473 = !DILocation(line: 2581, column: 51, scope: !457)
!474 = !DILocation(line: 2581, column: 66, scope: !457)
!475 = !DILocalVariable(name: "self", arg: 1, scope: !476, file: !127, line: 206, type: !133)
!476 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hf65c4a1978556b11E", scope: !128, file: !127, line: 206, type: !477, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !479)
!477 = !DISubroutineType(types: !478)
!478 = !{!9, !133}
!479 = !{!475}
!480 = !DILocation(line: 206, column: 17, scope: !476, inlinedAt: !481)
!481 = distinct !DILocation(line: 2582, column: 21, scope: !457)
!482 = !DILocalVariable(name: "self", arg: 1, scope: !483, file: !127, line: 60, type: !133)
!483 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h78786f3d5a45cd12E", scope: !128, file: !127, line: 60, type: !484, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !487, retainedNodes: !486)
!484 = !DISubroutineType(types: !485)
!485 = !{!6, !133}
!486 = !{!482}
!487 = !{!118, !438}
!488 = !DILocation(line: 60, column: 26, scope: !483, inlinedAt: !489)
!489 = distinct !DILocation(line: 210, column: 33, scope: !476, inlinedAt: !481)
!490 = !DILocation(line: 210, column: 18, scope: !476, inlinedAt: !481)
!491 = !DILocation(line: 2582, column: 21, scope: !457)
!492 = !DILocation(line: 2582, column: 9, scope: !465)
!493 = !DILocation(line: 206, column: 17, scope: !476, inlinedAt: !494)
!494 = distinct !DILocation(line: 2583, column: 21, scope: !465)
!495 = !DILocation(line: 60, column: 26, scope: !483, inlinedAt: !496)
!496 = distinct !DILocation(line: 210, column: 33, scope: !476, inlinedAt: !494)
!497 = !DILocation(line: 210, column: 18, scope: !476, inlinedAt: !494)
!498 = !DILocation(line: 2583, column: 21, scope: !465)
!499 = !DILocation(line: 2583, column: 9, scope: !467)
!500 = !DILocation(line: 2584, column: 16, scope: !467)
!501 = !DILocation(line: 2584, column: 9, scope: !469)
!502 = !DILocation(line: 2587, column: 16, scope: !469)
!503 = !DILocation(line: 2587, column: 9, scope: !471)
!504 = !DILocation(line: 2590, column: 5, scope: !471)
!505 = !DILocation(line: 2591, column: 2, scope: !457)
!506 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h13555a30045ed5d4E", scope: !406, file: !405, line: 2563, type: !507, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !520)
!507 = !DISubroutineType(types: !508)
!508 = !{!297, !509}
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !510, size: 64, align: 64, dwarfAddressSpace: 0)
!510 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !511, file: !2, size: 192, align: 64, elements: !513, templateParams: !117, identifier: "e83fd75bddbbcbef90dcb7db2e57cc91")
!511 = !DINamespace(name: "maybe_uninit", scope: !512)
!512 = !DINamespace(name: "mem", scope: !71)
!513 = !{!514, !515}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !510, file: !2, baseType: !7, align: 8)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !510, file: !2, baseType: !516, size: 192, align: 64)
!516 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !517, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !518, templateParams: !117, identifier: "d46cb6cb37cd92f4ac5d8710be0e525")
!517 = !DINamespace(name: "manually_drop", scope: !512)
!518 = !{!519}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !516, file: !2, baseType: !13, size: 192, align: 64, flags: DIFlagPrivate)
!520 = !{!521}
!521 = !DILocalVariable(name: "ptr", arg: 1, scope: !506, file: !405, line: 2563, type: !509)
!522 = !{!523}
!523 = !DITemplateTypeParameter(name: "T", type: !510)
!524 = !DILocation(line: 2563, column: 42, scope: !506)
!525 = !DILocation(line: 2564, column: 6, scope: !506)
!526 = !DILocation(line: 2564, column: 23, scope: !506)
!527 = !DILocation(line: 2564, column: 5, scope: !506)
!528 = !DILocation(line: 2565, column: 2, scope: !506)
!529 = !{i8 0, i8 2}
!530 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h345c5d679dffc627E", scope: !406, file: !405, line: 2563, type: !531, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !541)
!531 = !DISubroutineType(types: !532)
!532 = !{!297, !533}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !534, size: 64, align: 64, dwarfAddressSpace: 0)
!534 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !511, file: !2, size: 64, align: 64, elements: !535, templateParams: !361, identifier: "47bbafd7d0090be4a3c38a6979766b35")
!535 = !{!536, !537}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !534, file: !2, baseType: !7, align: 8)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !534, file: !2, baseType: !538, size: 64, align: 64)
!538 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !517, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !539, templateParams: !361, identifier: "71596d609bb4b5b32a94058960933e66")
!539 = !{!540}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !538, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPrivate)
!541 = !{!542}
!542 = !DILocalVariable(name: "ptr", arg: 1, scope: !530, file: !405, line: 2563, type: !533)
!543 = !{!544}
!544 = !DITemplateTypeParameter(name: "T", type: !534)
!545 = !DILocation(line: 2563, column: 42, scope: !530)
!546 = !DILocation(line: 2564, column: 6, scope: !530)
!547 = !DILocation(line: 2564, column: 23, scope: !530)
!548 = !DILocation(line: 2564, column: 5, scope: !530)
!549 = !DILocation(line: 2565, column: 2, scope: !530)
!550 = distinct !DISubprogram(name: "is_aligned_and_not_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17hc5b481bef277da50E", scope: !406, file: !405, line: 2563, type: !551, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !553)
!551 = !DISubroutineType(types: !552)
!552 = !{!297, !133}
!553 = !{!554}
!554 = !DILocalVariable(name: "ptr", arg: 1, scope: !550, file: !405, line: 2563, type: !133)
!555 = !DILocation(line: 2563, column: 42, scope: !550)
!556 = !DILocation(line: 2564, column: 6, scope: !550)
!557 = !DILocation(line: 2564, column: 23, scope: !550)
!558 = !DILocation(line: 2564, column: 5, scope: !550)
!559 = !DILocation(line: 2565, column: 2, scope: !550)
!560 = distinct !DISubprogram(name: "is_valid_allocation_size<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics24is_valid_allocation_size17h5e6044888f5033eaE", scope: !406, file: !405, line: 2570, type: !561, scopeLine: 2570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !563)
!561 = !DISubroutineType(types: !562)
!562 = !{!297, !9}
!563 = !{!564, !565}
!564 = !DILocalVariable(name: "len", arg: 1, scope: !560, file: !405, line: 2570, type: !9)
!565 = !DILocalVariable(name: "max_len", scope: !566, file: !405, line: 2571, type: !9, align: 8)
!566 = distinct !DILexicalBlock(scope: !560, file: !405, line: 2571, column: 5)
!567 = !DILocation(line: 2571, column: 9, scope: !566)
!568 = !DILocation(line: 2570, column: 43, scope: !560)
!569 = !DILocation(line: 2575, column: 5, scope: !566)
!570 = !DILocation(line: 2576, column: 2, scope: !560)
!571 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h1bde2137c2914e1cE", scope: !573, file: !572, line: 1519, type: !575, scopeLine: 1519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !578)
!572 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "4d64db01bbffb5cbf515cfb9e16bc0b9")
!573 = !DINamespace(name: "{impl#63}", scope: !574)
!574 = !DINamespace(name: "impls", scope: !79)
!575 = !DISubroutineType(types: !576)
!576 = !{!78, !577, !577}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!578 = !{!579, !580}
!579 = !DILocalVariable(name: "self", arg: 1, scope: !571, file: !572, line: 1519, type: !577)
!580 = !DILocalVariable(name: "other", arg: 2, scope: !571, file: !572, line: 1519, type: !577)
!581 = !DILocation(line: 1519, column: 24, scope: !571)
!582 = !DILocation(line: 1519, column: 31, scope: !571)
!583 = !DILocation(line: 1522, column: 24, scope: !571)
!584 = !DILocation(line: 1522, column: 32, scope: !571)
!585 = !DILocation(line: 1523, column: 29, scope: !571)
!586 = !DILocation(line: 1523, column: 38, scope: !571)
!587 = !DILocation(line: 1522, column: 41, scope: !571)
!588 = !DILocation(line: 1522, column: 21, scope: !571)
!589 = !DILocation(line: 1524, column: 28, scope: !571)
!590 = !DILocation(line: 1523, column: 26, scope: !571)
!591 = !DILocation(line: 1523, column: 47, scope: !571)
!592 = !DILocation(line: 1525, column: 18, scope: !571)
!593 = !{i8 -1, i8 2}
!594 = distinct !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17h77fdd07d5dbe7587E", scope: !596, file: !595, line: 689, type: !605, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !623, declaration: !622, retainedNodes: !626)
!595 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "e001ddbb6a5d5667cffdfcedcee2dd35")
!596 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !597, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !598, templateParams: !24, identifier: "fdfdfd03f12eb4d7c3237f6b92877a43")
!597 = !DINamespace(name: "builders", scope: !70)
!598 = !{!599}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !596, file: !2, baseType: !600, size: 128, align: 64, flags: DIFlagPrivate)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !597, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !601, templateParams: !24, identifier: "4e79c8736ceeceb135194fd6341eaa0e")
!601 = !{!602, !603, !604}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !600, file: !2, baseType: !346, size: 64, align: 64, flags: DIFlagPrivate)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !600, file: !2, baseType: !327, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !600, file: !2, baseType: !297, size: 8, align: 8, offset: 72, flags: DIFlagPrivate)
!605 = !DISubroutineType(types: !606)
!606 = !{!607, !607, !608}
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !596, size: 64, align: 64, dwarfAddressSpace: 0)
!608 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !609, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !610, templateParams: !117, identifier: "e6113ea89d7bcf2b207f51e83504a76f")
!609 = !DINamespace(name: "iter", scope: !96)
!610 = !{!611, !616, !617}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !608, file: !2, baseType: !612, size: 64, align: 64, flags: DIFlagPrivate)
!612 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !613, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !614, templateParams: !117, identifier: "aa9061ea543cb40c364d0139b9bc3314")
!613 = !DINamespace(name: "non_null", scope: !130)
!614 = !{!615}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !612, file: !2, baseType: !133, size: 64, align: 64, flags: DIFlagPrivate)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !608, file: !2, baseType: !133, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !608, file: !2, baseType: !618, align: 8, offset: 128, flags: DIFlagPrivate)
!618 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !619, file: !2, align: 8, flags: DIFlagPublic, elements: !24, templateParams: !620, identifier: "5072d6034f0de17f5e384caecc68ceb5")
!619 = !DINamespace(name: "marker", scope: !71)
!620 = !{!621}
!621 = !DITemplateTypeParameter(name: "T", type: !12)
!622 = !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17h77fdd07d5dbe7587E", scope: !596, file: !595, line: 689, type: !605, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !623)
!623 = !{!624, !625}
!624 = !DITemplateTypeParameter(name: "D", type: !12)
!625 = !DITemplateTypeParameter(name: "I", type: !608)
!626 = !{!627, !628, !629, !631}
!627 = !DILocalVariable(name: "self", arg: 1, scope: !594, file: !595, line: 689, type: !607)
!628 = !DILocalVariable(name: "entries", arg: 2, scope: !594, file: !595, line: 689, type: !608)
!629 = !DILocalVariable(name: "iter", scope: !630, file: !595, line: 694, type: !608, align: 8)
!630 = distinct !DILexicalBlock(scope: !594, file: !595, line: 694, column: 9)
!631 = !DILocalVariable(name: "entry", scope: !632, file: !595, line: 694, type: !12, align: 8)
!632 = distinct !DILexicalBlock(scope: !630, file: !595, line: 694, column: 30)
!633 = !DILocation(line: 689, column: 26, scope: !594)
!634 = !DILocation(line: 689, column: 37, scope: !594)
!635 = !DILocation(line: 694, column: 22, scope: !630)
!636 = !DILocation(line: 694, column: 13, scope: !632)
!637 = !DILocation(line: 694, column: 22, scope: !594)
!638 = !DILocation(line: 694, column: 9, scope: !630)
!639 = !DILocation(line: 698, column: 6, scope: !594)
!640 = !DILocation(line: 694, column: 13, scope: !630)
!641 = !DILocation(line: 695, column: 13, scope: !632)
!642 = !DILocation(line: 696, column: 9, scope: !630)
!643 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17heef7b71c42fa4a1bE", scope: !644, file: !323, line: 346, type: !710, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !715, retainedNodes: !716)
!644 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !70, file: !2, size: 384, align: 64, flags: DIFlagPublic, elements: !645, templateParams: !24, identifier: "5c0bf663e13aed18b42e27881fea807c")
!645 = !{!646, !652, !694}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !644, file: !2, baseType: !647, size: 128, align: 64, flags: DIFlagPrivate)
!647 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !648, templateParams: !24, identifier: "d76b83877ddcb5cca61caf6bdca727ac")
!648 = !{!649, !651}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !647, file: !2, baseType: !650, size: 64, align: 64)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64, align: 64, dwarfAddressSpace: 0)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !647, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !644, file: !2, baseType: !653, size: 128, align: 64, offset: 256, flags: DIFlagPrivate)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::Placeholder]>", scope: !355, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !654, templateParams: !24, identifier: "256519899e0672ceeaebd48b858206cf")
!654 = !{!655}
!655 = !DICompositeType(tag: DW_TAG_variant_part, scope: !653, file: !2, size: 128, align: 64, elements: !656, templateParams: !24, identifier: "aaa58002f4dea8efe61b6767ac33fc37", discriminator: !693)
!656 = !{!657, !689}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !655, file: !2, baseType: !658, size: 128, align: 64, extraData: i128 0)
!658 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !653, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !24, templateParams: !659, identifier: "776c1da22c7af6ba33782f68a1b8e37a")
!659 = !{!660}
!660 = !DITemplateTypeParameter(name: "T", type: !661)
!661 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Placeholder]", file: !2, size: 128, align: 64, elements: !662, templateParams: !24, identifier: "24318146e6c8bdc87822ff535a36a389")
!662 = !{!663, !688}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !661, file: !2, baseType: !664, size: 64, align: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64, align: 64, dwarfAddressSpace: 0)
!665 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !69, file: !2, size: 448, align: 64, flags: DIFlagPublic, elements: !666, templateParams: !24, identifier: "73ebe3f20ae5650b90547dad65385e3c")
!666 = !{!667, !668, !669, !670, !671, !687}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !665, file: !2, baseType: !9, size: 64, align: 64, offset: 256, flags: DIFlagPublic)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !665, file: !2, baseType: !351, size: 32, align: 32, offset: 320, flags: DIFlagPublic)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !665, file: !2, baseType: !68, size: 8, align: 8, offset: 384, flags: DIFlagPublic)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !665, file: !2, baseType: !27, size: 32, align: 32, offset: 352, flags: DIFlagPublic)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !665, file: !2, baseType: !672, size: 128, align: 64, flags: DIFlagPublic)
!672 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !69, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !673, templateParams: !24, identifier: "96b697dd48c62362a4fdd24d145e624f")
!673 = !{!674}
!674 = !DICompositeType(tag: DW_TAG_variant_part, scope: !672, file: !2, size: 128, align: 64, elements: !675, templateParams: !24, identifier: "6e17592290dd2b61d78d715af0a82ca", discriminator: !686)
!675 = !{!676, !680, !684}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !674, file: !2, baseType: !677, size: 128, align: 64, extraData: i128 0)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !672, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !678, templateParams: !24, identifier: "7f7125ee2c7058ca1284ed65477ee4b9")
!678 = !{!679}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !677, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !674, file: !2, baseType: !681, size: 128, align: 64, extraData: i128 1)
!681 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !672, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !682, templateParams: !24, identifier: "8694fa46b6182d73a7ccc4f5e1fc1992")
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !681, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !674, file: !2, baseType: !685, size: 128, align: 64, extraData: i128 2)
!685 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !672, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !24, identifier: "a1add839f51aefefecdce3df6110b61f")
!686 = !DIDerivedType(tag: DW_TAG_member, scope: !672, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !665, file: !2, baseType: !672, size: 128, align: 64, offset: 128, flags: DIFlagPublic)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !661, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !655, file: !2, baseType: !690, size: 128, align: 64)
!690 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !653, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !691, templateParams: !659, identifier: "f965b304662f282235bb5dc25f3fae0f")
!691 = !{!692}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !690, file: !2, baseType: !661, size: 128, align: 64, flags: DIFlagPublic)
!693 = !DIDerivedType(tag: DW_TAG_member, scope: !653, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !644, file: !2, baseType: !695, size: 128, align: 64, offset: 128, flags: DIFlagPrivate)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Argument]", file: !2, size: 128, align: 64, elements: !696, templateParams: !24, identifier: "5bf4e31e3e4aabcd62e5de24a0ef4aed")
!696 = !{!697, !709}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !695, file: !2, baseType: !698, size: 64, align: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64, align: 64, dwarfAddressSpace: 0)
!699 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !69, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !700, templateParams: !24, identifier: "1a5e8fdf028d4c811a277b23bd1a7ccd")
!700 = !{!701, !705}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !699, file: !2, baseType: !702, size: 64, align: 64, flags: DIFlagPrivate)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::rt::{extern#0}::Opaque", baseType: !703, size: 64, align: 64, dwarfAddressSpace: 0)
!703 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !704, file: !2, align: 8, elements: !24, identifier: "fffd88202d364d3dc6423c86977eda88")
!704 = !DINamespace(name: "{extern#0}", scope: !69)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !699, file: !2, baseType: !706, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::rt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !707, size: 64, align: 64, dwarfAddressSpace: 0)
!707 = !DISubroutineType(types: !708)
!708 = !{!327, !702, !346}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !695, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!710 = !DISubroutineType(types: !711)
!711 = !{!644, !647, !695, !661, !712}
!712 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !69, file: !2, align: 8, flags: DIFlagPublic, elements: !713, templateParams: !24, identifier: "4cc94df58f798619b2bbafc8f6fa66c0")
!713 = !{!714}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !712, file: !2, baseType: !7, align: 8, flags: DIFlagPrivate)
!715 = !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17heef7b71c42fa4a1bE", scope: !644, file: !323, line: 346, type: !710, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!716 = !{!717, !718, !719, !720, !721}
!717 = !DILocalVariable(name: "pieces", arg: 1, scope: !643, file: !323, line: 347, type: !647)
!718 = !DILocalVariable(name: "args", arg: 2, scope: !643, file: !323, line: 348, type: !695)
!719 = !DILocalVariable(name: "fmt", arg: 3, scope: !643, file: !323, line: 349, type: !661)
!720 = !DILocalVariable(name: "_unsafe_arg", scope: !643, file: !323, line: 350, type: !712, align: 1)
!721 = !DILocalVariable(arg: 4, scope: !643, file: !323, line: 350, type: !712)
!722 = !DILocation(line: 350, column: 9, scope: !643)
!723 = !DILocation(line: 347, column: 9, scope: !643)
!724 = !DILocation(line: 348, column: 9, scope: !643)
!725 = !DILocation(line: 349, column: 9, scope: !643)
!726 = !DILocation(line: 352, column: 34, scope: !643)
!727 = !DILocation(line: 352, column: 9, scope: !643)
!728 = !DILocation(line: 353, column: 6, scope: !643)
!729 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h4dd1a47854aa80dcE", scope: !644, file: !323, line: 331, type: !730, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !732, retainedNodes: !733)
!730 = !DISubroutineType(types: !731)
!731 = !{!644, !647, !695}
!732 = !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h4dd1a47854aa80dcE", scope: !644, file: !323, line: 331, type: !730, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!733 = !{!734, !735}
!734 = !DILocalVariable(name: "pieces", arg: 1, scope: !729, file: !323, line: 331, type: !647)
!735 = !DILocalVariable(name: "args", arg: 2, scope: !729, file: !323, line: 331, type: !695)
!736 = !DILocation(line: 331, column: 19, scope: !729)
!737 = !DILocation(line: 331, column: 47, scope: !729)
!738 = !DILocation(line: 332, column: 12, scope: !729)
!739 = !DILocation(line: 332, column: 56, scope: !729)
!740 = !DILocation(line: 333, column: 13, scope: !729)
!741 = !DILocation(line: 332, column: 41, scope: !729)
!742 = !DILocation(line: 335, column: 34, scope: !729)
!743 = !DILocation(line: 335, column: 9, scope: !729)
!744 = !DILocation(line: 336, column: 6, scope: !729)
!745 = distinct !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E", scope: !644, file: !323, line: 321, type: !746, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !748, retainedNodes: !749)
!746 = !DISubroutineType(types: !747)
!747 = !{!644, !647}
!748 = !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17h332ea41c342953f1E", scope: !644, file: !323, line: 321, type: !746, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!749 = !{!750}
!750 = !DILocalVariable(name: "pieces", arg: 1, scope: !745, file: !323, line: 321, type: !647)
!751 = !DILocation(line: 321, column: 28, scope: !745)
!752 = !DILocation(line: 322, column: 12, scope: !745)
!753 = !DILocation(line: 325, column: 34, scope: !745)
!754 = !DILocation(line: 325, column: 9, scope: !745)
!755 = !DILocation(line: 326, column: 6, scope: !745)
!756 = !DILocation(line: 323, column: 13, scope: !745)
!757 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem11swap_simple17h3f955fd1f4c3210eE", scope: !512, file: !758, line: 761, type: !759, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !762)
!758 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ac30a7292dadfba89befcaef4f511b41")
!759 = !DISubroutineType(types: !760)
!760 = !{null, !761, !761}
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !510, size: 64, align: 64, dwarfAddressSpace: 0)
!762 = !{!763, !764, !765, !767}
!763 = !DILocalVariable(name: "x", arg: 1, scope: !757, file: !758, line: 761, type: !761)
!764 = !DILocalVariable(name: "y", arg: 2, scope: !757, file: !758, line: 761, type: !761)
!765 = !DILocalVariable(name: "a", scope: !766, file: !758, line: 781, type: !510, align: 8)
!766 = distinct !DILexicalBlock(scope: !757, file: !758, line: 781, column: 9)
!767 = !DILocalVariable(name: "b", scope: !768, file: !758, line: 782, type: !510, align: 8)
!768 = distinct !DILexicalBlock(scope: !766, file: !758, line: 782, column: 9)
!769 = !DILocation(line: 761, column: 36, scope: !757)
!770 = !DILocation(line: 761, column: 47, scope: !757)
!771 = !DILocation(line: 781, column: 13, scope: !766)
!772 = !DILocation(line: 782, column: 13, scope: !768)
!773 = !DILocation(line: 781, column: 17, scope: !757)
!774 = !DILocation(line: 782, column: 17, scope: !766)
!775 = !DILocation(line: 783, column: 9, scope: !768)
!776 = !DILocation(line: 784, column: 9, scope: !768)
!777 = !DILocation(line: 786, column: 2, scope: !757)
!778 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3mem11swap_simple17h4aa3a52a9b9e2a51E", scope: !512, file: !758, line: 761, type: !779, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !798, retainedNodes: !791)
!779 = !DISubroutineType(types: !780)
!780 = !{null, !781, !781}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !782, size: 64, align: 64, dwarfAddressSpace: 0)
!782 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !511, file: !2, size: 8, align: 8, elements: !783, templateParams: !789, identifier: "2ffa668be4b9bdc59340b9fcdd12517a")
!783 = !{!784, !785}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !782, file: !2, baseType: !7, align: 8)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !782, file: !2, baseType: !786, size: 8, align: 8)
!786 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !517, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !787, templateParams: !789, identifier: "fd95ccea950dfe21d4603e7f86d4253e")
!787 = !{!788}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !786, file: !2, baseType: !72, size: 8, align: 8, flags: DIFlagPrivate)
!789 = !{!790}
!790 = !DITemplateTypeParameter(name: "T", type: !72)
!791 = !{!792, !793, !794, !796}
!792 = !DILocalVariable(name: "x", arg: 1, scope: !778, file: !758, line: 761, type: !781)
!793 = !DILocalVariable(name: "y", arg: 2, scope: !778, file: !758, line: 761, type: !781)
!794 = !DILocalVariable(name: "a", scope: !795, file: !758, line: 781, type: !782, align: 1)
!795 = distinct !DILexicalBlock(scope: !778, file: !758, line: 781, column: 9)
!796 = !DILocalVariable(name: "b", scope: !797, file: !758, line: 782, type: !782, align: 1)
!797 = distinct !DILexicalBlock(scope: !795, file: !758, line: 782, column: 9)
!798 = !{!799}
!799 = !DITemplateTypeParameter(name: "T", type: !782)
!800 = !DILocation(line: 761, column: 36, scope: !778)
!801 = !DILocation(line: 761, column: 47, scope: !778)
!802 = !DILocation(line: 781, column: 17, scope: !778)
!803 = !DILocation(line: 781, column: 13, scope: !795)
!804 = !DILocation(line: 782, column: 17, scope: !795)
!805 = !DILocation(line: 782, column: 13, scope: !797)
!806 = !DILocation(line: 783, column: 9, scope: !797)
!807 = !DILocation(line: 784, column: 9, scope: !797)
!808 = !DILocation(line: 786, column: 2, scope: !778)
!809 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3mem11swap_simple17h69faf92eef3d0523E", scope: !512, file: !758, line: 761, type: !810, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !813)
!810 = !DISubroutineType(types: !811)
!811 = !{null, !812, !812}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !534, size: 64, align: 64, dwarfAddressSpace: 0)
!813 = !{!814, !815, !816, !818}
!814 = !DILocalVariable(name: "x", arg: 1, scope: !809, file: !758, line: 761, type: !812)
!815 = !DILocalVariable(name: "y", arg: 2, scope: !809, file: !758, line: 761, type: !812)
!816 = !DILocalVariable(name: "a", scope: !817, file: !758, line: 781, type: !534, align: 8)
!817 = distinct !DILexicalBlock(scope: !809, file: !758, line: 781, column: 9)
!818 = !DILocalVariable(name: "b", scope: !819, file: !758, line: 782, type: !534, align: 8)
!819 = distinct !DILexicalBlock(scope: !817, file: !758, line: 782, column: 9)
!820 = !DILocation(line: 761, column: 36, scope: !809)
!821 = !DILocation(line: 761, column: 47, scope: !809)
!822 = !DILocation(line: 781, column: 17, scope: !809)
!823 = !DILocation(line: 781, column: 13, scope: !817)
!824 = !DILocation(line: 782, column: 17, scope: !817)
!825 = !DILocation(line: 782, column: 13, scope: !819)
!826 = !DILocation(line: 783, column: 9, scope: !819)
!827 = !DILocation(line: 784, column: 9, scope: !819)
!828 = !DILocation(line: 786, column: 2, scope: !809)
!829 = distinct !DISubprogram(name: "swap_simple<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem11swap_simple17hbe58e44398e6988fE", scope: !512, file: !758, line: 761, type: !830, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !833)
!830 = !DISubroutineType(types: !831)
!831 = !{null, !832, !832}
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!833 = !{!834, !835, !836, !838}
!834 = !DILocalVariable(name: "x", arg: 1, scope: !829, file: !758, line: 761, type: !832)
!835 = !DILocalVariable(name: "y", arg: 2, scope: !829, file: !758, line: 761, type: !832)
!836 = !DILocalVariable(name: "a", scope: !837, file: !758, line: 781, type: !13, align: 8)
!837 = distinct !DILexicalBlock(scope: !829, file: !758, line: 781, column: 9)
!838 = !DILocalVariable(name: "b", scope: !839, file: !758, line: 782, type: !13, align: 8)
!839 = distinct !DILexicalBlock(scope: !837, file: !758, line: 782, column: 9)
!840 = !DILocation(line: 761, column: 36, scope: !829)
!841 = !DILocation(line: 761, column: 47, scope: !829)
!842 = !DILocation(line: 781, column: 13, scope: !837)
!843 = !DILocation(line: 782, column: 13, scope: !839)
!844 = !DILocation(line: 781, column: 17, scope: !829)
!845 = !DILocation(line: 782, column: 17, scope: !837)
!846 = !DILocation(line: 783, column: 9, scope: !839)
!847 = !DILocation(line: 784, column: 9, scope: !839)
!848 = !DILocation(line: 786, column: 2, scope: !829)
!849 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem4swap17h19ffc0ec2f1bbdc8E", scope: !512, file: !758, line: 728, type: !830, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !850)
!850 = !{!851, !852}
!851 = !DILocalVariable(name: "x", arg: 1, scope: !849, file: !758, line: 728, type: !832)
!852 = !DILocalVariable(name: "y", arg: 2, scope: !849, file: !758, line: 728, type: !832)
!853 = !DILocation(line: 728, column: 22, scope: !849)
!854 = !DILocation(line: 728, column: 33, scope: !849)
!855 = !DILocation(line: 739, column: 12, scope: !849)
!856 = !DILocation(line: 753, column: 5, scope: !849)
!857 = !DILocation(line: 742, column: 29, scope: !849)
!858 = !DILocation(line: 754, column: 2, scope: !849)
!859 = distinct !DISubprogram(name: "forget<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem6forget17hb229b34f67d22417E", scope: !512, file: !758, line: 148, type: !860, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !862)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !13}
!862 = !{!863}
!863 = !DILocalVariable(name: "t", arg: 1, scope: !859, file: !758, line: 148, type: !13)
!864 = !DILocation(line: 148, column: 24, scope: !859)
!865 = !DILocalVariable(name: "value", arg: 1, scope: !866, file: !867, line: 70, type: !13)
!866 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf3a31559e5d154cdE", scope: !516, file: !867, line: 70, type: !868, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !870, retainedNodes: !871)
!867 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "db150196ad24cbd302765ce40020defd")
!868 = !DISubroutineType(types: !869)
!869 = !{!516, !13}
!870 = !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf3a31559e5d154cdE", scope: !516, file: !867, line: 70, type: !868, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!871 = !{!865}
!872 = !DILocation(line: 70, column: 22, scope: !866, inlinedAt: !873)
!873 = distinct !DILocation(line: 149, column: 13, scope: !859)
!874 = !DILocation(line: 71, column: 9, scope: !866, inlinedAt: !873)
!875 = !DILocation(line: 150, column: 2, scope: !859)
!876 = distinct !DISubprogram(name: "abs", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$3abs17hd5485dc9e9602777E", scope: !878, file: !877, line: 2651, type: !880, scopeLine: 2651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !883)
!877 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "5f83529a42afed089f403de0715bd78b")
!878 = !DINamespace(name: "{impl#2}", scope: !879)
!879 = !DINamespace(name: "num", scope: !71)
!880 = !DISubroutineType(types: !881)
!881 = !{!882, !882}
!882 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!883 = !{!884}
!884 = !DILocalVariable(name: "self", arg: 1, scope: !876, file: !877, line: 2651, type: !882)
!885 = !DILocation(line: 2651, column: 26, scope: !876)
!886 = !DILocalVariable(name: "self", arg: 1, scope: !887, file: !877, line: 2768, type: !882)
!887 = distinct !DISubprogram(name: "is_negative", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$11is_negative17h9628a7278a4ccea6E", scope: !878, file: !877, line: 2768, type: !888, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !890)
!888 = !DISubroutineType(types: !889)
!889 = !{!297, !882}
!890 = !{!886}
!891 = !DILocation(line: 2768, column: 34, scope: !887, inlinedAt: !892)
!892 = distinct !DILocation(line: 2655, column: 16, scope: !876)
!893 = !DILocation(line: 2768, column: 50, scope: !887, inlinedAt: !892)
!894 = !DILocation(line: 2655, column: 16, scope: !876)
!895 = !DILocation(line: 2658, column: 17, scope: !876)
!896 = !DILocation(line: 2655, column: 13, scope: !876)
!897 = !DILocation(line: 2656, column: 17, scope: !876)
!898 = !DILocation(line: 2660, column: 10, scope: !876)
!899 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h520d63f17833999aE", scope: !901, file: !900, line: 576, type: !902, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !904)
!900 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "77985b69d8b96d3837a96dc7438f1392")
!901 = !DINamespace(name: "{impl#11}", scope: !879)
!902 = !DISubroutineType(types: !903)
!903 = !{!354, !9, !9}
!904 = !{!905, !906, !907, !909}
!905 = !DILocalVariable(name: "self", arg: 1, scope: !899, file: !900, line: 576, type: !9)
!906 = !DILocalVariable(name: "rhs", arg: 2, scope: !899, file: !900, line: 576, type: !9)
!907 = !DILocalVariable(name: "a", scope: !908, file: !900, line: 577, type: !9, align: 8)
!908 = distinct !DILexicalBlock(scope: !899, file: !900, line: 577, column: 13)
!909 = !DILocalVariable(name: "b", scope: !908, file: !900, line: 577, type: !297, align: 1)
!910 = !DILocation(line: 576, column: 34, scope: !899)
!911 = !DILocation(line: 576, column: 40, scope: !899)
!912 = !DILocalVariable(name: "self", arg: 1, scope: !913, file: !900, line: 1718, type: !9)
!913 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h8c1211cb71be101bE", scope: !901, file: !900, line: 1718, type: !914, scopeLine: 1718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !920)
!914 = !DISubroutineType(types: !915)
!915 = !{!916, !9, !9}
!916 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !917, templateParams: !24, identifier: "3455e5ba91d322de931b901b9c5e965e")
!917 = !{!918, !919}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !916, file: !2, baseType: !9, size: 64, align: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !916, file: !2, baseType: !297, size: 8, align: 8, offset: 64)
!920 = !{!912, !921, !922, !924}
!921 = !DILocalVariable(name: "rhs", arg: 2, scope: !913, file: !900, line: 1718, type: !9)
!922 = !DILocalVariable(name: "a", scope: !923, file: !900, line: 1719, type: !22, align: 8)
!923 = distinct !DILexicalBlock(scope: !913, file: !900, line: 1719, column: 13)
!924 = !DILocalVariable(name: "b", scope: !923, file: !900, line: 1719, type: !297, align: 1)
!925 = !DILocation(line: 1718, column: 38, scope: !913, inlinedAt: !926)
!926 = distinct !DILocation(line: 577, column: 26, scope: !899)
!927 = !DILocation(line: 1718, column: 44, scope: !913, inlinedAt: !926)
!928 = !DILocation(line: 1719, column: 26, scope: !913, inlinedAt: !926)
!929 = !DILocation(line: 1719, column: 18, scope: !913, inlinedAt: !926)
!930 = !DILocation(line: 1719, column: 18, scope: !923, inlinedAt: !926)
!931 = !DILocation(line: 1719, column: 21, scope: !913, inlinedAt: !926)
!932 = !DILocation(line: 1719, column: 21, scope: !923, inlinedAt: !926)
!933 = !DILocation(line: 1720, column: 13, scope: !923, inlinedAt: !926)
!934 = !DILocation(line: 1721, column: 10, scope: !913, inlinedAt: !926)
!935 = !DILocation(line: 577, column: 26, scope: !899)
!936 = !DILocation(line: 577, column: 18, scope: !899)
!937 = !DILocation(line: 577, column: 18, scope: !908)
!938 = !DILocation(line: 577, column: 21, scope: !899)
!939 = !DILocation(line: 577, column: 21, scope: !908)
!940 = !DILocation(line: 578, column: 16, scope: !908)
!941 = !DILocation(line: 578, column: 42, scope: !908)
!942 = !DILocation(line: 578, column: 13, scope: !908)
!943 = !DILocation(line: 578, column: 30, scope: !908)
!944 = !DILocation(line: 579, column: 10, scope: !899)
!945 = !{i64 0, i64 2}
!946 = distinct !DISubprogram(name: "next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17hd1fd1a9a04fba62bE", scope: !901, file: !900, line: 2281, type: !947, scopeLine: 2281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !949)
!947 = !DISubroutineType(types: !948)
!948 = !{!9, !9}
!949 = !{!950}
!950 = !DILocalVariable(name: "self", arg: 1, scope: !946, file: !900, line: 2281, type: !9)
!951 = !DILocation(line: 2281, column: 40, scope: !946)
!952 = !DILocation(line: 2282, column: 13, scope: !946)
!953 = !DILocation(line: 2283, column: 10, scope: !946)
!954 = distinct !DISubprogram(name: "one_less_than_next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17hf1735c9ff7fea1feE", scope: !901, file: !900, line: 2249, type: !947, scopeLine: 2249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !955)
!955 = !{!956, !957, !959}
!956 = !DILocalVariable(name: "self", arg: 1, scope: !954, file: !900, line: 2249, type: !9)
!957 = !DILocalVariable(name: "p", scope: !958, file: !900, line: 2252, type: !9, align: 8)
!958 = distinct !DILexicalBlock(scope: !954, file: !900, line: 2252, column: 13)
!959 = !DILocalVariable(name: "z", scope: !960, file: !900, line: 2257, type: !9, align: 8)
!960 = distinct !DILexicalBlock(scope: !958, file: !900, line: 2257, column: 13)
!961 = !DILocation(line: 2249, column: 50, scope: !954)
!962 = !DILocation(line: 2250, column: 16, scope: !954)
!963 = !DILocation(line: 2252, column: 21, scope: !954)
!964 = !DILocation(line: 2250, column: 35, scope: !954)
!965 = !DILocation(line: 2259, column: 10, scope: !954)
!966 = !DILocation(line: 2252, column: 17, scope: !958)
!967 = !DILocation(line: 2257, column: 30, scope: !958)
!968 = !DILocation(line: 2257, column: 17, scope: !960)
!969 = !DILocation(line: 2258, column: 13, scope: !960)
!970 = distinct !DISubprogram(name: "abs_diff", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17hf7f1b5178ae292aeE", scope: !901, file: !900, line: 1682, type: !971, scopeLine: 1682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !973)
!971 = !DISubroutineType(types: !972)
!972 = !{!9, !9, !9}
!973 = !{!974, !975}
!974 = !DILocalVariable(name: "self", arg: 1, scope: !970, file: !900, line: 1682, type: !9)
!975 = !DILocalVariable(name: "other", arg: 2, scope: !970, file: !900, line: 1682, type: !9)
!976 = !DILocation(line: 1682, column: 31, scope: !970)
!977 = !DILocation(line: 1682, column: 37, scope: !970)
!978 = !DILocation(line: 1683, column: 16, scope: !970)
!979 = !DILocation(line: 1686, column: 17, scope: !970)
!980 = !DILocation(line: 1686, column: 44, scope: !970)
!981 = !DILocalVariable(name: "self", arg: 1, scope: !982, file: !877, line: 1232, type: !882)
!982 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_sub17h81f162961012ee4cE", scope: !878, file: !877, line: 1232, type: !983, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !985)
!983 = !DISubroutineType(types: !984)
!984 = !{!882, !882, !882}
!985 = !{!981, !986}
!986 = !DILocalVariable(name: "rhs", arg: 2, scope: !982, file: !877, line: 1232, type: !882)
!987 = !DILocation(line: 1232, column: 35, scope: !982, inlinedAt: !988)
!988 = distinct !DILocation(line: 1686, column: 17, scope: !970)
!989 = !DILocation(line: 1232, column: 41, scope: !982, inlinedAt: !988)
!990 = !DILocation(line: 1233, column: 13, scope: !982, inlinedAt: !988)
!991 = !DILocation(line: 1683, column: 13, scope: !970)
!992 = !DILocation(line: 1688, column: 20, scope: !970)
!993 = !DILocation(line: 1694, column: 10, scope: !970)
!994 = !DILocation(line: 1691, column: 21, scope: !970)
!995 = !DILocation(line: 1689, column: 21, scope: !970)
!996 = !DILocation(line: 1688, column: 17, scope: !970)
!997 = distinct !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h20e7da73740013beE", scope: !292, file: !998, line: 454, type: !999, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !1001, retainedNodes: !1002)
!998 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "9ecd4c63827da4e86dbe561ed4b5264c")
!999 = !DISubroutineType(types: !1000)
!1000 = !{!104, !292}
!1001 = !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h20e7da73740013beE", scope: !292, file: !998, line: 454, type: !999, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!1002 = !{!1003, !1004, !1006}
!1003 = !DILocalVariable(name: "self", arg: 1, scope: !997, file: !998, line: 454, type: !292)
!1004 = !DILocalVariable(name: "exclusive_end", scope: !1005, file: !998, line: 458, type: !9, align: 8)
!1005 = distinct !DILexicalBlock(scope: !997, file: !998, line: 458, column: 9)
!1006 = !DILocalVariable(name: "start", scope: !1007, file: !998, line: 459, type: !9, align: 8)
!1007 = distinct !DILexicalBlock(scope: !1005, file: !998, line: 459, column: 9)
!1008 = !DILocation(line: 454, column: 42, scope: !997)
!1009 = !DILocation(line: 459, column: 13, scope: !1007)
!1010 = !DILocation(line: 458, column: 29, scope: !997)
!1011 = !DILocation(line: 458, column: 13, scope: !1005)
!1012 = !DILocation(line: 459, column: 24, scope: !1005)
!1013 = !DILocation(line: 459, column: 64, scope: !1005)
!1014 = !DILocation(line: 459, column: 21, scope: !1005)
!1015 = !DILocation(line: 459, column: 41, scope: !1005)
!1016 = !DILocation(line: 460, column: 9, scope: !1007)
!1017 = !DILocation(line: 461, column: 6, scope: !997)
!1018 = distinct !DISubprogram(name: "call_mut<(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion), core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h034aa27057d712deE", scope: !1020, file: !1019, line: 293, type: !1023, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1043, retainedNodes: !1036)
!1019 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "abc772494ea8033dad5cae2e40e54b10")
!1020 = !DINamespace(name: "{impl#3}", scope: !1021)
!1021 = !DINamespace(name: "impls", scope: !1022)
!1022 = !DINamespace(name: "function", scope: !106)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!297, !1025, !12, !12}
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1026, size: 64, align: 64, dwarfAddressSpace: 0)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1027, size: 64, align: 64, dwarfAddressSpace: 0)
!1027 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", scope: !1028, file: !2, size: 64, align: 64, elements: !1030, templateParams: !24, identifier: "5b3597a0bac90bd2e62dbb598cac7117")
!1028 = !DINamespace(name: "sort_unstable_by", scope: !1029)
!1029 = !DINamespace(name: "{impl#0}", scope: !96)
!1030 = !{!1031}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__compare", scope: !1027, file: !2, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}", baseType: !1033, size: 64, align: 64, dwarfAddressSpace: 0)
!1033 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1034, file: !2, align: 8, elements: !24, identifier: "e9c4723627d69a0fd84f952b358764b")
!1034 = !DINamespace(name: "sort", scope: !1035)
!1035 = !DINamespace(name: "{impl#0}", scope: !14)
!1036 = !{!1037, !1038}
!1037 = !DILocalVariable(name: "self", arg: 1, scope: !1018, file: !1019, line: 293, type: !1025)
!1038 = !DILocalVariable(name: "args", arg: 2, scope: !1018, file: !1019, line: 293, type: !1039)
!1039 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion)", file: !2, size: 128, align: 64, elements: !1040, templateParams: !24, identifier: "d656447b088245892a132d653e05b511")
!1040 = !{!1041, !1042}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1039, file: !2, baseType: !12, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1039, file: !2, baseType: !12, size: 64, align: 64, offset: 64)
!1043 = !{!1044, !1045}
!1044 = !DITemplateTypeParameter(name: "A", type: !1039)
!1045 = !DITemplateTypeParameter(name: "F", type: !1027)
!1046 = !DILocation(line: 293, column: 40, scope: !1018)
!1047 = !DILocation(line: 293, column: 51, scope: !1018)
!1048 = !DILocation(line: 294, column: 13, scope: !1018)
!1049 = !DILocation(line: 295, column: 10, scope: !1018)
!1050 = distinct !DISubprogram(name: "drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h87bd16592270f38eE", scope: !130, file: !1051, line: 507, type: !1052, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1062, retainedNodes: !1060)
!1051 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "0751cc28170b974ebf5abeae07cf66bf")
!1052 = !DISubroutineType(types: !1053)
!1053 = !{null, !1054}
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1055, size: 64, align: 64, dwarfAddressSpace: 0)
!1055 = !DICompositeType(tag: DW_TAG_structure_type, name: "InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !1056, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !1057, templateParams: !117, identifier: "bc3270d30d28183a9a819452579e1fc9")
!1056 = !DINamespace(name: "sort", scope: !96)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1055, file: !2, baseType: !133, size: 64, align: 64, flags: DIFlagPrivate)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1055, file: !2, baseType: !169, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!1060 = !{!1061}
!1061 = !DILocalVariable(arg: 1, scope: !1050, file: !1051, line: 507, type: !1054)
!1062 = !{!1063}
!1063 = !DITemplateTypeParameter(name: "T", type: !1055)
!1064 = !DILocation(line: 507, column: 1, scope: !1050)
!1065 = distinct !DISubprogram(name: "swap_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping17h7de8bbc48e97f8ecE", scope: !130, file: !1051, line: 944, type: !1066, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1068)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{null, !169, !169, !9}
!1068 = !{!1069, !1070, !1071, !1072, !1075, !1077, !1079, !1082, !1084}
!1069 = !DILocalVariable(name: "x", arg: 1, scope: !1065, file: !1051, line: 944, type: !169)
!1070 = !DILocalVariable(name: "y", arg: 2, scope: !1065, file: !1051, line: 944, type: !169)
!1071 = !DILocalVariable(name: "count", arg: 3, scope: !1065, file: !1051, line: 944, type: !9)
!1072 = !DILocalVariable(name: "x", scope: !1073, file: !1051, line: 984, type: !1074, align: 8)
!1073 = distinct !DILexicalBlock(scope: !1065, file: !1051, line: 951, column: 17)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!1075 = !DILocalVariable(name: "y", scope: !1076, file: !1051, line: 984, type: !1074, align: 8)
!1076 = distinct !DILexicalBlock(scope: !1073, file: !1051, line: 952, column: 17)
!1077 = !DILocalVariable(name: "count", scope: !1078, file: !1051, line: 984, type: !9, align: 8)
!1078 = distinct !DILexicalBlock(scope: !1076, file: !1051, line: 953, column: 17)
!1079 = !DILocalVariable(name: "x", scope: !1080, file: !1051, line: 985, type: !1081, align: 8)
!1080 = distinct !DILexicalBlock(scope: !1065, file: !1051, line: 951, column: 17)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !72, size: 64, align: 64, dwarfAddressSpace: 0)
!1082 = !DILocalVariable(name: "y", scope: !1083, file: !1051, line: 985, type: !1081, align: 8)
!1083 = distinct !DILexicalBlock(scope: !1080, file: !1051, line: 952, column: 17)
!1084 = !DILocalVariable(name: "count", scope: !1085, file: !1051, line: 985, type: !9, align: 8)
!1085 = distinct !DILexicalBlock(scope: !1083, file: !1051, line: 953, column: 17)
!1086 = !DILocation(line: 944, column: 44, scope: !1065)
!1087 = !DILocation(line: 944, column: 55, scope: !1065)
!1088 = !DILocation(line: 944, column: 66, scope: !1065)
!1089 = !DILocation(line: 967, column: 9, scope: !1065)
!1090 = !DILocation(line: 980, column: 8, scope: !1065)
!1091 = !DILocalVariable(name: "x", arg: 1, scope: !1092, file: !405, line: 2542, type: !169)
!1092 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping7runtime17hcf517f836972a8a7E", scope: !1093, file: !405, line: 2542, type: !1066, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1094)
!1093 = !DINamespace(name: "swap_nonoverlapping", scope: !130)
!1094 = !{!1091, !1095, !1096}
!1095 = !DILocalVariable(name: "y", arg: 2, scope: !1092, file: !405, line: 2542, type: !169)
!1096 = !DILocalVariable(name: "count", arg: 3, scope: !1092, file: !405, line: 2542, type: !9)
!1097 = !DILocation(line: 2542, column: 39, scope: !1092, inlinedAt: !1098)
!1098 = distinct !DILocation(line: 967, column: 9, scope: !1065)
!1099 = !DILocation(line: 971, column: 13, scope: !1100, inlinedAt: !1098)
!1100 = !DILexicalBlockFile(scope: !1092, file: !1051, discriminator: 0)
!1101 = !DILocation(line: 2545, column: 21, scope: !1092, inlinedAt: !1098)
!1102 = !DILocation(line: 972, column: 20, scope: !1100, inlinedAt: !1098)
!1103 = !DILocation(line: 973, column: 20, scope: !1100, inlinedAt: !1098)
!1104 = !DILocation(line: 989, column: 14, scope: !1065)
!1105 = !DILocalVariable(name: "self", arg: 1, scope: !1106, file: !900, line: 2234, type: !9)
!1106 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17heb06dee5c5ace0a8E", scope: !901, file: !900, line: 2234, type: !561, scopeLine: 2234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1107)
!1107 = !{!1105}
!1108 = !DILocation(line: 2234, column: 38, scope: !1106, inlinedAt: !1109)
!1109 = distinct !DILocation(line: 981, column: 14, scope: !1065)
!1110 = !DILocalVariable(name: "self", arg: 1, scope: !1111, file: !900, line: 106, type: !9)
!1111 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h376b6ee4c46c005aE", scope: !901, file: !900, line: 106, type: !1112, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1114)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!27, !9}
!1114 = !{!1110}
!1115 = !DILocation(line: 106, column: 33, scope: !1111, inlinedAt: !1116)
!1116 = distinct !DILocation(line: 2235, column: 13, scope: !1106, inlinedAt: !1109)
!1117 = !DILocation(line: 107, column: 13, scope: !1111, inlinedAt: !1116)
!1118 = !DILocation(line: 2235, column: 13, scope: !1106, inlinedAt: !1109)
!1119 = !DILocation(line: 981, column: 14, scope: !1065)
!1120 = !DILocation(line: 984, column: 9, scope: !1065)
!1121 = !DILocation(line: 982, column: 38, scope: !1065)
!1122 = !DILocation(line: 982, column: 16, scope: !1065)
!1123 = !DILocation(line: 985, column: 9, scope: !1065)
!1124 = !DILocalVariable(name: "self", arg: 1, scope: !1125, file: !164, line: 60, type: !169)
!1125 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h8a307394a335e058E", scope: !175, file: !164, line: 60, type: !1126, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1129, retainedNodes: !1128)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!1074, !169}
!1128 = !{!1124}
!1129 = !{!118, !1130}
!1130 = !DITemplateTypeParameter(name: "U", type: !9)
!1131 = !DILocation(line: 60, column: 26, scope: !1125, inlinedAt: !1132)
!1132 = distinct !DILocation(line: 984, column: 9, scope: !1065)
!1133 = !DILocation(line: 984, column: 9, scope: !1073)
!1134 = !DILocation(line: 60, column: 26, scope: !1125, inlinedAt: !1135)
!1135 = distinct !DILocation(line: 984, column: 9, scope: !1073)
!1136 = !DILocation(line: 984, column: 9, scope: !1076)
!1137 = !DILocation(line: 984, column: 9, scope: !1078)
!1138 = !DILocation(line: 990, column: 2, scope: !1065)
!1139 = !DILocalVariable(name: "self", arg: 1, scope: !1140, file: !164, line: 60, type: !169)
!1140 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2698a145f9e15ae0E", scope: !175, file: !164, line: 60, type: !1141, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1144, retainedNodes: !1143)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!1081, !169}
!1143 = !{!1139}
!1144 = !{!118, !1145}
!1145 = !DITemplateTypeParameter(name: "U", type: !72)
!1146 = !DILocation(line: 60, column: 26, scope: !1140, inlinedAt: !1147)
!1147 = distinct !DILocation(line: 985, column: 9, scope: !1065)
!1148 = !DILocation(line: 985, column: 9, scope: !1080)
!1149 = !DILocation(line: 60, column: 26, scope: !1140, inlinedAt: !1150)
!1150 = distinct !DILocation(line: 985, column: 9, scope: !1080)
!1151 = !DILocation(line: 985, column: 9, scope: !1083)
!1152 = !DILocation(line: 985, column: 9, scope: !1085)
!1153 = distinct !DISubprogram(name: "slice_from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hc15bfcfe5036da9cE", scope: !130, file: !1051, line: 770, type: !1154, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1156)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!99, !133, !9}
!1156 = !{!1157, !1158}
!1157 = !DILocalVariable(name: "data", arg: 1, scope: !1153, file: !1051, line: 770, type: !133)
!1158 = !DILocalVariable(name: "len", arg: 2, scope: !1153, file: !1051, line: 770, type: !9)
!1159 = !DILocation(line: 770, column: 38, scope: !1153)
!1160 = !DILocation(line: 770, column: 54, scope: !1153)
!1161 = !DILocation(line: 60, column: 26, scope: !483, inlinedAt: !1162)
!1162 = distinct !DILocation(line: 771, column: 20, scope: !1153)
!1163 = !DILocation(line: 771, column: 5, scope: !1153)
!1164 = !DILocation(line: 772, column: 2, scope: !1153)
!1165 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h4c742dd8b8bf66daE", scope: !130, file: !1051, line: 803, type: !1166, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1168)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!148, !169, !9}
!1168 = !{!1169, !1170}
!1169 = !DILocalVariable(name: "data", arg: 1, scope: !1165, file: !1051, line: 803, type: !169)
!1170 = !DILocalVariable(name: "len", arg: 2, scope: !1165, file: !1051, line: 803, type: !9)
!1171 = !DILocation(line: 803, column: 42, scope: !1165)
!1172 = !DILocation(line: 803, column: 56, scope: !1165)
!1173 = !DILocalVariable(name: "self", arg: 1, scope: !1174, file: !164, line: 60, type: !169)
!1174 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hf400a5c44e442460E", scope: !175, file: !164, line: 60, type: !1175, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !487, retainedNodes: !1178)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!1177, !169}
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1178 = !{!1173}
!1179 = !DILocation(line: 60, column: 26, scope: !1174, inlinedAt: !1180)
!1180 = distinct !DILocation(line: 804, column: 24, scope: !1165)
!1181 = !DILocation(line: 804, column: 5, scope: !1165)
!1182 = !DILocation(line: 805, column: 2, scope: !1165)
!1183 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h8c60b5f450ae98f2E", scope: !130, file: !1051, line: 998, type: !1066, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1191, !1193, !1195, !1197}
!1185 = !DILocalVariable(name: "x", arg: 1, scope: !1183, file: !1051, line: 998, type: !169)
!1186 = !DILocalVariable(name: "y", arg: 2, scope: !1183, file: !1051, line: 998, type: !169)
!1187 = !DILocalVariable(name: "count", arg: 3, scope: !1183, file: !1051, line: 998, type: !9)
!1188 = !DILocalVariable(name: "x", scope: !1189, file: !1051, line: 999, type: !1190, align: 8)
!1189 = distinct !DILexicalBlock(scope: !1183, file: !1051, line: 999, column: 5)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !510, size: 64, align: 64, dwarfAddressSpace: 0)
!1191 = !DILocalVariable(name: "y", scope: !1192, file: !1051, line: 1000, type: !1190, align: 8)
!1192 = distinct !DILexicalBlock(scope: !1189, file: !1051, line: 1000, column: 5)
!1193 = !DILocalVariable(name: "i", scope: !1194, file: !1051, line: 1001, type: !9, align: 8)
!1194 = distinct !DILexicalBlock(scope: !1192, file: !1051, line: 1001, column: 5)
!1195 = !DILocalVariable(name: "x", scope: !1196, file: !1051, line: 1004, type: !761, align: 8)
!1196 = distinct !DILexicalBlock(scope: !1194, file: !1051, line: 1004, column: 9)
!1197 = !DILocalVariable(name: "y", scope: !1198, file: !1051, line: 1007, type: !761, align: 8)
!1198 = distinct !DILexicalBlock(scope: !1196, file: !1051, line: 1007, column: 9)
!1199 = !DILocation(line: 998, column: 55, scope: !1183)
!1200 = !DILocation(line: 998, column: 66, scope: !1183)
!1201 = !DILocation(line: 998, column: 77, scope: !1183)
!1202 = !DILocation(line: 1001, column: 9, scope: !1194)
!1203 = !DILocalVariable(name: "self", arg: 1, scope: !1204, file: !164, line: 60, type: !169)
!1204 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17he69259e5751a559eE", scope: !175, file: !164, line: 60, type: !1205, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1208, retainedNodes: !1207)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!1190, !169}
!1207 = !{!1203}
!1208 = !{!118, !1209}
!1209 = !DITemplateTypeParameter(name: "U", type: !510)
!1210 = !DILocation(line: 60, column: 26, scope: !1204, inlinedAt: !1211)
!1211 = distinct !DILocation(line: 999, column: 13, scope: !1183)
!1212 = !DILocation(line: 999, column: 13, scope: !1183)
!1213 = !DILocation(line: 999, column: 9, scope: !1189)
!1214 = !DILocation(line: 60, column: 26, scope: !1204, inlinedAt: !1215)
!1215 = distinct !DILocation(line: 1000, column: 13, scope: !1189)
!1216 = !DILocation(line: 1000, column: 13, scope: !1189)
!1217 = !DILocation(line: 1000, column: 9, scope: !1192)
!1218 = !DILocation(line: 1001, column: 17, scope: !1192)
!1219 = !DILocation(line: 1002, column: 5, scope: !1194)
!1220 = !DILocation(line: 1002, column: 11, scope: !1194)
!1221 = !DILocation(line: 1012, column: 2, scope: !1183)
!1222 = !DILocation(line: 1004, column: 38, scope: !1194)
!1223 = !DILocalVariable(name: "self", arg: 1, scope: !1224, file: !164, line: 1040, type: !1190)
!1224 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h02f67d8cb703810dE", scope: !175, file: !164, line: 1040, type: !1225, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !1227)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!1190, !1190, !9}
!1227 = !{!1223, !1228}
!1228 = !DILocalVariable(name: "count", arg: 2, scope: !1224, file: !164, line: 1040, type: !9)
!1229 = !DILocation(line: 1040, column: 29, scope: !1224, inlinedAt: !1230)
!1230 = distinct !DILocation(line: 1004, column: 32, scope: !1194)
!1231 = !DILocation(line: 1040, column: 35, scope: !1224, inlinedAt: !1230)
!1232 = !DILocation(line: 1045, column: 18, scope: !1224, inlinedAt: !1230)
!1233 = !DILocation(line: 1004, column: 26, scope: !1194)
!1234 = !DILocation(line: 1004, column: 13, scope: !1196)
!1235 = !DILocation(line: 1007, column: 38, scope: !1196)
!1236 = !DILocation(line: 1040, column: 29, scope: !1224, inlinedAt: !1237)
!1237 = distinct !DILocation(line: 1007, column: 32, scope: !1196)
!1238 = !DILocation(line: 1040, column: 35, scope: !1224, inlinedAt: !1237)
!1239 = !DILocation(line: 1045, column: 18, scope: !1224, inlinedAt: !1237)
!1240 = !DILocation(line: 1007, column: 26, scope: !1196)
!1241 = !DILocation(line: 1007, column: 13, scope: !1198)
!1242 = !DILocation(line: 1008, column: 9, scope: !1198)
!1243 = !DILocation(line: 1010, column: 9, scope: !1198)
!1244 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<u8>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hbc60de3662a9bcedE", scope: !130, file: !1051, line: 998, type: !1245, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, retainedNodes: !1247)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{null, !1081, !1081, !9}
!1247 = !{!1248, !1249, !1250, !1251, !1254, !1256, !1258, !1260}
!1248 = !DILocalVariable(name: "x", arg: 1, scope: !1244, file: !1051, line: 998, type: !1081)
!1249 = !DILocalVariable(name: "y", arg: 2, scope: !1244, file: !1051, line: 998, type: !1081)
!1250 = !DILocalVariable(name: "count", arg: 3, scope: !1244, file: !1051, line: 998, type: !9)
!1251 = !DILocalVariable(name: "x", scope: !1252, file: !1051, line: 999, type: !1253, align: 8)
!1252 = distinct !DILexicalBlock(scope: !1244, file: !1051, line: 999, column: 5)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !782, size: 64, align: 64, dwarfAddressSpace: 0)
!1254 = !DILocalVariable(name: "y", scope: !1255, file: !1051, line: 1000, type: !1253, align: 8)
!1255 = distinct !DILexicalBlock(scope: !1252, file: !1051, line: 1000, column: 5)
!1256 = !DILocalVariable(name: "i", scope: !1257, file: !1051, line: 1001, type: !9, align: 8)
!1257 = distinct !DILexicalBlock(scope: !1255, file: !1051, line: 1001, column: 5)
!1258 = !DILocalVariable(name: "x", scope: !1259, file: !1051, line: 1004, type: !781, align: 8)
!1259 = distinct !DILexicalBlock(scope: !1257, file: !1051, line: 1004, column: 9)
!1260 = !DILocalVariable(name: "y", scope: !1261, file: !1051, line: 1007, type: !781, align: 8)
!1261 = distinct !DILexicalBlock(scope: !1259, file: !1051, line: 1007, column: 9)
!1262 = !DILocation(line: 998, column: 55, scope: !1244)
!1263 = !DILocation(line: 998, column: 66, scope: !1244)
!1264 = !DILocation(line: 998, column: 77, scope: !1244)
!1265 = !DILocation(line: 1001, column: 9, scope: !1257)
!1266 = !DILocalVariable(name: "self", arg: 1, scope: !1267, file: !164, line: 60, type: !1081)
!1267 = distinct !DISubprogram(name: "cast<u8, core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h0ad50ce505b036bbE", scope: !175, file: !164, line: 60, type: !1268, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1271, retainedNodes: !1270)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!1253, !1081}
!1270 = !{!1266}
!1271 = !{!790, !1272}
!1272 = !DITemplateTypeParameter(name: "U", type: !782)
!1273 = !DILocation(line: 60, column: 26, scope: !1267, inlinedAt: !1274)
!1274 = distinct !DILocation(line: 999, column: 13, scope: !1244)
!1275 = !DILocation(line: 999, column: 13, scope: !1244)
!1276 = !DILocation(line: 999, column: 9, scope: !1252)
!1277 = !DILocation(line: 60, column: 26, scope: !1267, inlinedAt: !1278)
!1278 = distinct !DILocation(line: 1000, column: 13, scope: !1252)
!1279 = !DILocation(line: 1000, column: 13, scope: !1252)
!1280 = !DILocation(line: 1000, column: 9, scope: !1255)
!1281 = !DILocation(line: 1001, column: 17, scope: !1255)
!1282 = !DILocation(line: 1002, column: 5, scope: !1257)
!1283 = !DILocation(line: 1002, column: 11, scope: !1257)
!1284 = !DILocation(line: 1012, column: 2, scope: !1244)
!1285 = !DILocation(line: 1004, column: 38, scope: !1257)
!1286 = !DILocalVariable(name: "self", arg: 1, scope: !1287, file: !164, line: 1040, type: !1253)
!1287 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h37b8538dd0861f9cE", scope: !175, file: !164, line: 1040, type: !1288, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !798, retainedNodes: !1290)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!1253, !1253, !9}
!1290 = !{!1286, !1291}
!1291 = !DILocalVariable(name: "count", arg: 2, scope: !1287, file: !164, line: 1040, type: !9)
!1292 = !DILocation(line: 1040, column: 29, scope: !1287, inlinedAt: !1293)
!1293 = distinct !DILocation(line: 1004, column: 32, scope: !1257)
!1294 = !DILocation(line: 1040, column: 35, scope: !1287, inlinedAt: !1293)
!1295 = !DILocation(line: 1045, column: 18, scope: !1287, inlinedAt: !1293)
!1296 = !DILocation(line: 1004, column: 26, scope: !1257)
!1297 = !DILocation(line: 1004, column: 13, scope: !1259)
!1298 = !DILocation(line: 1007, column: 38, scope: !1259)
!1299 = !DILocation(line: 1040, column: 29, scope: !1287, inlinedAt: !1300)
!1300 = distinct !DILocation(line: 1007, column: 32, scope: !1259)
!1301 = !DILocation(line: 1040, column: 35, scope: !1287, inlinedAt: !1300)
!1302 = !DILocation(line: 1045, column: 18, scope: !1287, inlinedAt: !1300)
!1303 = !DILocation(line: 1007, column: 26, scope: !1259)
!1304 = !DILocation(line: 1007, column: 13, scope: !1261)
!1305 = !DILocation(line: 1008, column: 9, scope: !1261)
!1306 = !DILocation(line: 1010, column: 9, scope: !1261)
!1307 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<usize>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hc15cceb6d459b426E", scope: !130, file: !1051, line: 998, type: !1308, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, retainedNodes: !1310)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !1074, !1074, !9}
!1310 = !{!1311, !1312, !1313, !1314, !1317, !1319, !1321, !1323}
!1311 = !DILocalVariable(name: "x", arg: 1, scope: !1307, file: !1051, line: 998, type: !1074)
!1312 = !DILocalVariable(name: "y", arg: 2, scope: !1307, file: !1051, line: 998, type: !1074)
!1313 = !DILocalVariable(name: "count", arg: 3, scope: !1307, file: !1051, line: 998, type: !9)
!1314 = !DILocalVariable(name: "x", scope: !1315, file: !1051, line: 999, type: !1316, align: 8)
!1315 = distinct !DILexicalBlock(scope: !1307, file: !1051, line: 999, column: 5)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !534, size: 64, align: 64, dwarfAddressSpace: 0)
!1317 = !DILocalVariable(name: "y", scope: !1318, file: !1051, line: 1000, type: !1316, align: 8)
!1318 = distinct !DILexicalBlock(scope: !1315, file: !1051, line: 1000, column: 5)
!1319 = !DILocalVariable(name: "i", scope: !1320, file: !1051, line: 1001, type: !9, align: 8)
!1320 = distinct !DILexicalBlock(scope: !1318, file: !1051, line: 1001, column: 5)
!1321 = !DILocalVariable(name: "x", scope: !1322, file: !1051, line: 1004, type: !812, align: 8)
!1322 = distinct !DILexicalBlock(scope: !1320, file: !1051, line: 1004, column: 9)
!1323 = !DILocalVariable(name: "y", scope: !1324, file: !1051, line: 1007, type: !812, align: 8)
!1324 = distinct !DILexicalBlock(scope: !1322, file: !1051, line: 1007, column: 9)
!1325 = !DILocation(line: 998, column: 55, scope: !1307)
!1326 = !DILocation(line: 998, column: 66, scope: !1307)
!1327 = !DILocation(line: 998, column: 77, scope: !1307)
!1328 = !DILocation(line: 1001, column: 9, scope: !1320)
!1329 = !DILocalVariable(name: "self", arg: 1, scope: !1330, file: !164, line: 60, type: !1074)
!1330 = distinct !DISubprogram(name: "cast<usize, core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h7839c6bf8861251bE", scope: !175, file: !164, line: 60, type: !1331, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1334, retainedNodes: !1333)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!1316, !1074}
!1333 = !{!1329}
!1334 = !{!362, !1335}
!1335 = !DITemplateTypeParameter(name: "U", type: !534)
!1336 = !DILocation(line: 60, column: 26, scope: !1330, inlinedAt: !1337)
!1337 = distinct !DILocation(line: 999, column: 13, scope: !1307)
!1338 = !DILocation(line: 999, column: 13, scope: !1307)
!1339 = !DILocation(line: 999, column: 9, scope: !1315)
!1340 = !DILocation(line: 60, column: 26, scope: !1330, inlinedAt: !1341)
!1341 = distinct !DILocation(line: 1000, column: 13, scope: !1315)
!1342 = !DILocation(line: 1000, column: 13, scope: !1315)
!1343 = !DILocation(line: 1000, column: 9, scope: !1318)
!1344 = !DILocation(line: 1001, column: 17, scope: !1318)
!1345 = !DILocation(line: 1002, column: 5, scope: !1320)
!1346 = !DILocation(line: 1002, column: 11, scope: !1320)
!1347 = !DILocation(line: 1012, column: 2, scope: !1307)
!1348 = !DILocation(line: 1004, column: 38, scope: !1320)
!1349 = !DILocalVariable(name: "self", arg: 1, scope: !1350, file: !164, line: 1040, type: !1316)
!1350 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h6c61bbe74c496ddcE", scope: !175, file: !164, line: 1040, type: !1351, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !1353)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{!1316, !1316, !9}
!1353 = !{!1349, !1354}
!1354 = !DILocalVariable(name: "count", arg: 2, scope: !1350, file: !164, line: 1040, type: !9)
!1355 = !DILocation(line: 1040, column: 29, scope: !1350, inlinedAt: !1356)
!1356 = distinct !DILocation(line: 1004, column: 32, scope: !1320)
!1357 = !DILocation(line: 1040, column: 35, scope: !1350, inlinedAt: !1356)
!1358 = !DILocation(line: 1045, column: 18, scope: !1350, inlinedAt: !1356)
!1359 = !DILocation(line: 1004, column: 26, scope: !1320)
!1360 = !DILocation(line: 1004, column: 13, scope: !1322)
!1361 = !DILocation(line: 1007, column: 38, scope: !1322)
!1362 = !DILocation(line: 1040, column: 29, scope: !1350, inlinedAt: !1363)
!1363 = distinct !DILocation(line: 1007, column: 32, scope: !1322)
!1364 = !DILocation(line: 1040, column: 35, scope: !1350, inlinedAt: !1363)
!1365 = !DILocation(line: 1045, column: 18, scope: !1350, inlinedAt: !1363)
!1366 = !DILocation(line: 1007, column: 26, scope: !1322)
!1367 = !DILocation(line: 1007, column: 13, scope: !1324)
!1368 = !DILocation(line: 1008, column: 9, scope: !1324)
!1369 = !DILocation(line: 1010, column: 9, scope: !1324)
!1370 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr4read17h045b30f529bbe3fbE", scope: !130, file: !1051, line: 1182, type: !1371, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !798, retainedNodes: !1374)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!782, !1373}
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !782, size: 64, align: 64, dwarfAddressSpace: 0)
!1374 = !{!1375}
!1375 = !DILocalVariable(name: "src", arg: 1, scope: !1370, file: !1051, line: 1182, type: !1373)
!1376 = !DILocation(line: 1182, column: 29, scope: !1370)
!1377 = !DILocation(line: 1211, column: 9, scope: !1370)
!1378 = !DILocation(line: 1215, column: 9, scope: !1370)
!1379 = !DILocation(line: 1217, column: 2, scope: !1370)
!1380 = !DILocalVariable(name: "src", arg: 1, scope: !1381, file: !405, line: 2542, type: !1373)
!1381 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr4read7runtime17h098e58fc11884382E", scope: !1382, file: !405, line: 2542, type: !1383, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !798, retainedNodes: !1385)
!1382 = !DINamespace(name: "read", scope: !130)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{null, !1373}
!1385 = !{!1380}
!1386 = !DILocation(line: 2542, column: 39, scope: !1381, inlinedAt: !1387)
!1387 = distinct !DILocation(line: 1211, column: 9, scope: !1370)
!1388 = !DILocation(line: 1213, column: 35, scope: !1389, inlinedAt: !1387)
!1389 = !DILexicalBlockFile(scope: !1381, file: !1051, discriminator: 0)
!1390 = !DILocation(line: 2545, column: 21, scope: !1381, inlinedAt: !1387)
!1391 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read17h402d8c422da68d48E", scope: !130, file: !1051, line: 1182, type: !1392, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !1394)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{!510, !509}
!1394 = !{!1395}
!1395 = !DILocalVariable(name: "src", arg: 1, scope: !1391, file: !1051, line: 1182, type: !509)
!1396 = !DILocation(line: 1182, column: 29, scope: !1391)
!1397 = !DILocation(line: 1211, column: 9, scope: !1391)
!1398 = !DILocation(line: 1215, column: 9, scope: !1391)
!1399 = !DILocation(line: 1217, column: 2, scope: !1391)
!1400 = !DILocalVariable(name: "src", arg: 1, scope: !1401, file: !405, line: 2542, type: !509)
!1401 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read7runtime17hc504647d2a3372e1E", scope: !1382, file: !405, line: 2542, type: !1402, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !1404)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{null, !509}
!1404 = !{!1400}
!1405 = !DILocation(line: 2542, column: 39, scope: !1401, inlinedAt: !1406)
!1406 = distinct !DILocation(line: 1211, column: 9, scope: !1391)
!1407 = !DILocation(line: 1213, column: 35, scope: !1408, inlinedAt: !1406)
!1408 = !DILexicalBlockFile(scope: !1401, file: !1051, discriminator: 0)
!1409 = !DILocation(line: 2545, column: 21, scope: !1401, inlinedAt: !1406)
!1410 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr4read17h8270cbc7a9af2598E", scope: !130, file: !1051, line: 1182, type: !1411, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !1413)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!534, !533}
!1413 = !{!1414}
!1414 = !DILocalVariable(name: "src", arg: 1, scope: !1410, file: !1051, line: 1182, type: !533)
!1415 = !DILocation(line: 1182, column: 29, scope: !1410)
!1416 = !DILocation(line: 1211, column: 9, scope: !1410)
!1417 = !DILocation(line: 1215, column: 9, scope: !1410)
!1418 = !DILocation(line: 1217, column: 2, scope: !1410)
!1419 = !DILocalVariable(name: "src", arg: 1, scope: !1420, file: !405, line: 2542, type: !533)
!1420 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr4read7runtime17hf7789888bbab9d22E", scope: !1382, file: !405, line: 2542, type: !1421, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !1423)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{null, !533}
!1423 = !{!1419}
!1424 = !DILocation(line: 2542, column: 39, scope: !1420, inlinedAt: !1425)
!1425 = distinct !DILocation(line: 1211, column: 9, scope: !1410)
!1426 = !DILocation(line: 1213, column: 35, scope: !1427, inlinedAt: !1425)
!1427 = !DILexicalBlockFile(scope: !1420, file: !1051, discriminator: 0)
!1428 = !DILocation(line: 2545, column: 21, scope: !1420, inlinedAt: !1425)
!1429 = distinct !DISubprogram(name: "read<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read17hb4cf770cf4557c59E", scope: !130, file: !1051, line: 1182, type: !1430, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1432)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!13, !133}
!1432 = !{!1433}
!1433 = !DILocalVariable(name: "src", arg: 1, scope: !1429, file: !1051, line: 1182, type: !133)
!1434 = !DILocation(line: 1182, column: 29, scope: !1429)
!1435 = !DILocation(line: 1211, column: 9, scope: !1429)
!1436 = !DILocation(line: 1215, column: 9, scope: !1429)
!1437 = !DILocation(line: 1217, column: 2, scope: !1429)
!1438 = !DILocalVariable(name: "src", arg: 1, scope: !1439, file: !405, line: 2542, type: !133)
!1439 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read7runtime17h719597d24679dc50E", scope: !1382, file: !405, line: 2542, type: !1440, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1442)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{null, !133}
!1442 = !{!1438}
!1443 = !DILocation(line: 2542, column: 39, scope: !1439, inlinedAt: !1444)
!1444 = distinct !DILocation(line: 1211, column: 9, scope: !1429)
!1445 = !DILocation(line: 1213, column: 35, scope: !1446, inlinedAt: !1444)
!1446 = !DILexicalBlockFile(scope: !1439, file: !1051, discriminator: 0)
!1447 = !DILocation(line: 2545, column: 21, scope: !1439, inlinedAt: !1444)
!1448 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4swap17h2ee7e59aa3cf3136E", scope: !130, file: !1051, line: 882, type: !1449, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1451)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !169, !169}
!1451 = !{!1452, !1453, !1454}
!1452 = !DILocalVariable(name: "x", arg: 1, scope: !1448, file: !1051, line: 882, type: !169)
!1453 = !DILocalVariable(name: "y", arg: 2, scope: !1448, file: !1051, line: 882, type: !169)
!1454 = !DILocalVariable(name: "tmp", scope: !1455, file: !1051, line: 885, type: !510, align: 8)
!1455 = distinct !DILexicalBlock(scope: !1448, file: !1051, line: 885, column: 5)
!1456 = !DILocation(line: 882, column: 29, scope: !1448)
!1457 = !DILocation(line: 882, column: 40, scope: !1448)
!1458 = !DILocation(line: 885, column: 9, scope: !1455)
!1459 = !DILocalVariable(name: "self", arg: 1, scope: !1460, file: !1461, line: 572, type: !761)
!1460 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hff263316c516419dE", scope: !510, file: !1461, line: 572, type: !1462, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !1464, retainedNodes: !1465)
!1461 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "b02f6b8b77dc64c71119f711f3ba2a5e")
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!169, !761}
!1464 = !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hff263316c516419dE", scope: !510, file: !1461, line: 572, type: !1462, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!1465 = !{!1459}
!1466 = !DILocation(line: 572, column: 29, scope: !1460, inlinedAt: !1467)
!1467 = distinct !DILocation(line: 893, column: 32, scope: !1455)
!1468 = !DILocalVariable(name: "src", arg: 1, scope: !1469, file: !405, line: 2684, type: !133)
!1469 = distinct !DISubprogram(name: "copy_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h867a0bc03d5c127bE", scope: !406, file: !405, line: 2684, type: !1470, scopeLine: 2684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1472)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{null, !133, !169, !9}
!1472 = !{!1468, !1473, !1474}
!1473 = !DILocalVariable(name: "dst", arg: 2, scope: !1469, file: !405, line: 2684, type: !169)
!1474 = !DILocalVariable(name: "count", arg: 3, scope: !1469, file: !405, line: 2684, type: !9)
!1475 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !1476)
!1476 = distinct !DILocation(line: 893, column: 9, scope: !1455)
!1477 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !1476)
!1478 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !1476)
!1479 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !1476)
!1480 = !DILocalVariable(name: "src", arg: 1, scope: !1481, file: !405, line: 2542, type: !133)
!1481 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0de2b4b13dd884a6E", scope: !1482, file: !405, line: 2542, type: !1470, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1483)
!1482 = !DINamespace(name: "copy_nonoverlapping", scope: !406)
!1483 = !{!1480, !1484, !1485}
!1484 = !DILocalVariable(name: "dst", arg: 2, scope: !1481, file: !405, line: 2542, type: !169)
!1485 = !DILocalVariable(name: "count", arg: 3, scope: !1481, file: !405, line: 2542, type: !9)
!1486 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !1487)
!1487 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !1476)
!1488 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !1487)
!1489 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !1487)
!1490 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !1487)
!1491 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !1487)
!1492 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !1476)
!1493 = !DILocalVariable(name: "src", arg: 1, scope: !1494, file: !405, line: 2780, type: !133)
!1494 = distinct !DISubprogram(name: "copy<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy17h7a04fb56122406e5E", scope: !406, file: !405, line: 2780, type: !1470, scopeLine: 2780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1495)
!1495 = !{!1493, !1496, !1497}
!1496 = !DILocalVariable(name: "dst", arg: 2, scope: !1494, file: !405, line: 2780, type: !169)
!1497 = !DILocalVariable(name: "count", arg: 3, scope: !1494, file: !405, line: 2780, type: !9)
!1498 = !DILocation(line: 2780, column: 29, scope: !1494, inlinedAt: !1499)
!1499 = distinct !DILocation(line: 894, column: 9, scope: !1455)
!1500 = !DILocation(line: 2780, column: 44, scope: !1494, inlinedAt: !1499)
!1501 = !DILocation(line: 2780, column: 57, scope: !1494, inlinedAt: !1499)
!1502 = !DILocation(line: 2789, column: 9, scope: !1494, inlinedAt: !1499)
!1503 = !DILocalVariable(name: "src", arg: 1, scope: !1504, file: !405, line: 2542, type: !133)
!1504 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy7runtime17h07fabc39d31583a4E", scope: !1505, file: !405, line: 2542, type: !1506, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1508)
!1505 = !DINamespace(name: "copy", scope: !406)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{null, !133, !169}
!1508 = !{!1503, !1509}
!1509 = !DILocalVariable(name: "dst", arg: 2, scope: !1504, file: !405, line: 2542, type: !169)
!1510 = !DILocation(line: 2542, column: 39, scope: !1504, inlinedAt: !1511)
!1511 = distinct !DILocation(line: 2789, column: 9, scope: !1494, inlinedAt: !1499)
!1512 = !DILocation(line: 2792, column: 13, scope: !1504, inlinedAt: !1511)
!1513 = !DILocation(line: 2545, column: 21, scope: !1504, inlinedAt: !1511)
!1514 = !DILocation(line: 2792, column: 45, scope: !1504, inlinedAt: !1511)
!1515 = !DILocation(line: 2794, column: 9, scope: !1494, inlinedAt: !1499)
!1516 = !DILocalVariable(name: "self", arg: 1, scope: !1517, file: !1461, line: 533, type: !1520)
!1517 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h10602e974b25f113E", scope: !510, file: !1461, line: 533, type: !1518, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !1521, retainedNodes: !1522)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!133, !1520}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !510, size: 64, align: 64, dwarfAddressSpace: 0)
!1521 = !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h10602e974b25f113E", scope: !510, file: !1461, line: 533, type: !1518, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!1522 = !{!1516}
!1523 = !DILocation(line: 533, column: 25, scope: !1517, inlinedAt: !1524)
!1524 = distinct !DILocation(line: 895, column: 29, scope: !1455)
!1525 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !1526)
!1526 = distinct !DILocation(line: 895, column: 9, scope: !1455)
!1527 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !1526)
!1528 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !1526)
!1529 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !1526)
!1530 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !1531)
!1531 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !1526)
!1532 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !1531)
!1533 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !1531)
!1534 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !1531)
!1535 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !1531)
!1536 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !1526)
!1537 = !DILocation(line: 897, column: 2, scope: !1448)
!1538 = distinct !DISubprogram(name: "swap<usize>", linkageName: "_ZN4core3ptr4swap17h4b35c1095fa1adc2E", scope: !130, file: !1051, line: 882, type: !1539, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, retainedNodes: !1541)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{null, !1074, !1074}
!1541 = !{!1542, !1543, !1544}
!1542 = !DILocalVariable(name: "x", arg: 1, scope: !1538, file: !1051, line: 882, type: !1074)
!1543 = !DILocalVariable(name: "y", arg: 2, scope: !1538, file: !1051, line: 882, type: !1074)
!1544 = !DILocalVariable(name: "tmp", scope: !1545, file: !1051, line: 885, type: !534, align: 8)
!1545 = distinct !DILexicalBlock(scope: !1538, file: !1051, line: 885, column: 5)
!1546 = !DILocation(line: 882, column: 29, scope: !1538)
!1547 = !DILocation(line: 882, column: 40, scope: !1538)
!1548 = !DILocation(line: 885, column: 9, scope: !1545)
!1549 = !DILocation(line: 315, column: 6, scope: !1550, inlinedAt: !1554)
!1550 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4d83585aa81e022dE", scope: !534, file: !1461, line: 313, type: !1551, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, declaration: !1553)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!534}
!1553 = !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4d83585aa81e022dE", scope: !534, file: !1461, line: 313, type: !1551, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !361)
!1554 = distinct !DILocation(line: 885, column: 19, scope: !1538)
!1555 = !DILocation(line: 885, column: 19, scope: !1538)
!1556 = !DILocalVariable(name: "self", arg: 1, scope: !1557, file: !1461, line: 572, type: !812)
!1557 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h9ec615f10dc9ac62E", scope: !534, file: !1461, line: 572, type: !1558, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, declaration: !1560, retainedNodes: !1561)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!1074, !812}
!1560 = !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h9ec615f10dc9ac62E", scope: !534, file: !1461, line: 572, type: !1558, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !361)
!1561 = !{!1556}
!1562 = !DILocation(line: 572, column: 29, scope: !1557, inlinedAt: !1563)
!1563 = distinct !DILocation(line: 893, column: 32, scope: !1545)
!1564 = !DILocalVariable(name: "src", arg: 1, scope: !1565, file: !405, line: 2684, type: !409)
!1565 = distinct !DISubprogram(name: "copy_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h5f29ca5b38bf531cE", scope: !406, file: !405, line: 2684, type: !1566, scopeLine: 2684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, retainedNodes: !1568)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{null, !409, !1074, !9}
!1568 = !{!1564, !1569, !1570}
!1569 = !DILocalVariable(name: "dst", arg: 2, scope: !1565, file: !405, line: 2684, type: !1074)
!1570 = !DILocalVariable(name: "count", arg: 3, scope: !1565, file: !405, line: 2684, type: !9)
!1571 = !DILocation(line: 2684, column: 44, scope: !1565, inlinedAt: !1572)
!1572 = distinct !DILocation(line: 893, column: 9, scope: !1545)
!1573 = !DILocation(line: 2684, column: 59, scope: !1565, inlinedAt: !1572)
!1574 = !DILocation(line: 2684, column: 72, scope: !1565, inlinedAt: !1572)
!1575 = !DILocation(line: 2694, column: 9, scope: !1565, inlinedAt: !1572)
!1576 = !DILocalVariable(name: "src", arg: 1, scope: !1577, file: !405, line: 2542, type: !409)
!1577 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17ha9ea8588174486daE", scope: !1482, file: !405, line: 2542, type: !1566, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, retainedNodes: !1578)
!1578 = !{!1576, !1579, !1580}
!1579 = !DILocalVariable(name: "dst", arg: 2, scope: !1577, file: !405, line: 2542, type: !1074)
!1580 = !DILocalVariable(name: "count", arg: 3, scope: !1577, file: !405, line: 2542, type: !9)
!1581 = !DILocation(line: 2542, column: 39, scope: !1577, inlinedAt: !1582)
!1582 = distinct !DILocation(line: 2694, column: 9, scope: !1565, inlinedAt: !1572)
!1583 = !DILocation(line: 2698, column: 13, scope: !1577, inlinedAt: !1582)
!1584 = !DILocation(line: 2545, column: 21, scope: !1577, inlinedAt: !1582)
!1585 = !DILocation(line: 2699, column: 20, scope: !1577, inlinedAt: !1582)
!1586 = !DILocation(line: 2700, column: 20, scope: !1577, inlinedAt: !1582)
!1587 = !DILocation(line: 2702, column: 9, scope: !1565, inlinedAt: !1572)
!1588 = !DILocalVariable(name: "src", arg: 1, scope: !1589, file: !405, line: 2780, type: !409)
!1589 = distinct !DISubprogram(name: "copy<usize>", linkageName: "_ZN4core10intrinsics4copy17h0e5d8f9e297f1564E", scope: !406, file: !405, line: 2780, type: !1566, scopeLine: 2780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, retainedNodes: !1590)
!1590 = !{!1588, !1591, !1592}
!1591 = !DILocalVariable(name: "dst", arg: 2, scope: !1589, file: !405, line: 2780, type: !1074)
!1592 = !DILocalVariable(name: "count", arg: 3, scope: !1589, file: !405, line: 2780, type: !9)
!1593 = !DILocation(line: 2780, column: 29, scope: !1589, inlinedAt: !1594)
!1594 = distinct !DILocation(line: 894, column: 9, scope: !1545)
!1595 = !DILocation(line: 2780, column: 44, scope: !1589, inlinedAt: !1594)
!1596 = !DILocation(line: 2780, column: 57, scope: !1589, inlinedAt: !1594)
!1597 = !DILocation(line: 2789, column: 9, scope: !1589, inlinedAt: !1594)
!1598 = !DILocalVariable(name: "src", arg: 1, scope: !1599, file: !405, line: 2542, type: !409)
!1599 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics4copy7runtime17he0f9a7691c02c713E", scope: !1505, file: !405, line: 2542, type: !1600, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, retainedNodes: !1602)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{null, !409, !1074}
!1602 = !{!1598, !1603}
!1603 = !DILocalVariable(name: "dst", arg: 2, scope: !1599, file: !405, line: 2542, type: !1074)
!1604 = !DILocation(line: 2542, column: 39, scope: !1599, inlinedAt: !1605)
!1605 = distinct !DILocation(line: 2789, column: 9, scope: !1589, inlinedAt: !1594)
!1606 = !DILocation(line: 2792, column: 13, scope: !1599, inlinedAt: !1605)
!1607 = !DILocation(line: 2545, column: 21, scope: !1599, inlinedAt: !1605)
!1608 = !DILocation(line: 2792, column: 45, scope: !1599, inlinedAt: !1605)
!1609 = !DILocation(line: 2794, column: 9, scope: !1589, inlinedAt: !1594)
!1610 = !DILocalVariable(name: "self", arg: 1, scope: !1611, file: !1461, line: 533, type: !1614)
!1611 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hcc1b20a23d9072b1E", scope: !534, file: !1461, line: 533, type: !1612, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !361, declaration: !1615, retainedNodes: !1616)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!409, !1614}
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !534, size: 64, align: 64, dwarfAddressSpace: 0)
!1615 = !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hcc1b20a23d9072b1E", scope: !534, file: !1461, line: 533, type: !1612, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !361)
!1616 = !{!1610}
!1617 = !DILocation(line: 533, column: 25, scope: !1611, inlinedAt: !1618)
!1618 = distinct !DILocation(line: 895, column: 29, scope: !1545)
!1619 = !DILocation(line: 2684, column: 44, scope: !1565, inlinedAt: !1620)
!1620 = distinct !DILocation(line: 895, column: 9, scope: !1545)
!1621 = !DILocation(line: 2684, column: 59, scope: !1565, inlinedAt: !1620)
!1622 = !DILocation(line: 2684, column: 72, scope: !1565, inlinedAt: !1620)
!1623 = !DILocation(line: 2694, column: 9, scope: !1565, inlinedAt: !1620)
!1624 = !DILocation(line: 2542, column: 39, scope: !1577, inlinedAt: !1625)
!1625 = distinct !DILocation(line: 2694, column: 9, scope: !1565, inlinedAt: !1620)
!1626 = !DILocation(line: 2698, column: 13, scope: !1577, inlinedAt: !1625)
!1627 = !DILocation(line: 2545, column: 21, scope: !1577, inlinedAt: !1625)
!1628 = !DILocation(line: 2699, column: 20, scope: !1577, inlinedAt: !1625)
!1629 = !DILocation(line: 2700, column: 20, scope: !1577, inlinedAt: !1625)
!1630 = !DILocation(line: 2702, column: 9, scope: !1565, inlinedAt: !1620)
!1631 = !DILocation(line: 897, column: 2, scope: !1538)
!1632 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write17h057bd9f82e24b379E", scope: !130, file: !1051, line: 1398, type: !1633, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !1635)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{null, !1190, !510}
!1635 = !{!1636, !1637}
!1636 = !DILocalVariable(name: "dst", arg: 1, scope: !1632, file: !1051, line: 1398, type: !1190)
!1637 = !DILocalVariable(name: "src", arg: 2, scope: !1632, file: !1051, line: 1398, type: !510)
!1638 = !DILocation(line: 1398, column: 30, scope: !1632)
!1639 = !DILocation(line: 1398, column: 43, scope: !1632)
!1640 = !DILocation(line: 1411, column: 9, scope: !1632)
!1641 = !DILocation(line: 1415, column: 9, scope: !1632)
!1642 = !DILocation(line: 1417, column: 2, scope: !1632)
!1643 = !DILocalVariable(name: "dst", arg: 1, scope: !1644, file: !405, line: 2542, type: !1190)
!1644 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write7runtime17h08139368fefbfb51E", scope: !1645, file: !405, line: 2542, type: !1646, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !1648)
!1645 = !DINamespace(name: "write", scope: !130)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{null, !1190}
!1648 = !{!1643}
!1649 = !DILocation(line: 2542, column: 39, scope: !1644, inlinedAt: !1650)
!1650 = distinct !DILocation(line: 1411, column: 9, scope: !1632)
!1651 = !DILocation(line: 1413, column: 33, scope: !1652, inlinedAt: !1650)
!1652 = !DILexicalBlockFile(scope: !1644, file: !1051, discriminator: 0)
!1653 = !DILocation(line: 2545, column: 21, scope: !1644, inlinedAt: !1650)
!1654 = distinct !DISubprogram(name: "write<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write17hbd9963953b875ca4E", scope: !130, file: !1051, line: 1398, type: !1655, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1657)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{null, !169, !13}
!1657 = !{!1658, !1659}
!1658 = !DILocalVariable(name: "dst", arg: 1, scope: !1654, file: !1051, line: 1398, type: !169)
!1659 = !DILocalVariable(name: "src", arg: 2, scope: !1654, file: !1051, line: 1398, type: !13)
!1660 = !DILocation(line: 1398, column: 30, scope: !1654)
!1661 = !DILocation(line: 1398, column: 43, scope: !1654)
!1662 = !DILocation(line: 1411, column: 9, scope: !1654)
!1663 = !DILocation(line: 1415, column: 9, scope: !1654)
!1664 = !DILocation(line: 1417, column: 2, scope: !1654)
!1665 = !DILocalVariable(name: "dst", arg: 1, scope: !1666, file: !405, line: 2542, type: !169)
!1666 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write7runtime17h02e0621499e6d5dfE", scope: !1645, file: !405, line: 2542, type: !1667, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1669)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{null, !169}
!1669 = !{!1665}
!1670 = !DILocation(line: 2542, column: 39, scope: !1666, inlinedAt: !1671)
!1671 = distinct !DILocation(line: 1411, column: 9, scope: !1654)
!1672 = !DILocation(line: 1413, column: 33, scope: !1673, inlinedAt: !1671)
!1673 = !DILexicalBlockFile(scope: !1666, file: !1051, discriminator: 0)
!1674 = !DILocation(line: 2545, column: 21, scope: !1666, inlinedAt: !1671)
!1675 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr5write17he74464ca2033b4f5E", scope: !130, file: !1051, line: 1398, type: !1676, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !1678)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{null, !1316, !534}
!1678 = !{!1679, !1680}
!1679 = !DILocalVariable(name: "dst", arg: 1, scope: !1675, file: !1051, line: 1398, type: !1316)
!1680 = !DILocalVariable(name: "src", arg: 2, scope: !1675, file: !1051, line: 1398, type: !534)
!1681 = !DILocation(line: 1398, column: 30, scope: !1675)
!1682 = !DILocation(line: 1398, column: 43, scope: !1675)
!1683 = !DILocation(line: 1411, column: 9, scope: !1675)
!1684 = !DILocation(line: 1415, column: 9, scope: !1675)
!1685 = !DILocation(line: 1417, column: 2, scope: !1675)
!1686 = !DILocalVariable(name: "dst", arg: 1, scope: !1687, file: !405, line: 2542, type: !1316)
!1687 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr5write7runtime17h24db28e1e595cf5fE", scope: !1645, file: !405, line: 2542, type: !1688, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !1690)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{null, !1316}
!1690 = !{!1686}
!1691 = !DILocation(line: 2542, column: 39, scope: !1687, inlinedAt: !1692)
!1692 = distinct !DILocation(line: 1411, column: 9, scope: !1675)
!1693 = !DILocation(line: 1413, column: 33, scope: !1694, inlinedAt: !1692)
!1694 = !DILexicalBlockFile(scope: !1687, file: !1051, discriminator: 0)
!1695 = !DILocation(line: 2545, column: 21, scope: !1687, inlinedAt: !1692)
!1696 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr5write17hfa263577c4b29781E", scope: !130, file: !1051, line: 1398, type: !1697, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !798, retainedNodes: !1699)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1253, !782}
!1699 = !{!1700, !1701}
!1700 = !DILocalVariable(name: "dst", arg: 1, scope: !1696, file: !1051, line: 1398, type: !1253)
!1701 = !DILocalVariable(name: "src", arg: 2, scope: !1696, file: !1051, line: 1398, type: !782)
!1702 = !DILocation(line: 1398, column: 30, scope: !1696)
!1703 = !DILocation(line: 1398, column: 43, scope: !1696)
!1704 = !DILocation(line: 1411, column: 9, scope: !1696)
!1705 = !DILocation(line: 1415, column: 9, scope: !1696)
!1706 = !DILocation(line: 1417, column: 2, scope: !1696)
!1707 = !DILocalVariable(name: "dst", arg: 1, scope: !1708, file: !405, line: 2542, type: !1253)
!1708 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr5write7runtime17h25ace723147ec2d0E", scope: !1645, file: !405, line: 2542, type: !1709, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !798, retainedNodes: !1711)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{null, !1253}
!1711 = !{!1707}
!1712 = !DILocation(line: 2542, column: 39, scope: !1708, inlinedAt: !1713)
!1713 = distinct !DILocation(line: 1411, column: 9, scope: !1696)
!1714 = !DILocation(line: 1413, column: 33, scope: !1715, inlinedAt: !1713)
!1715 = !DILexicalBlockFile(scope: !1708, file: !1051, discriminator: 0)
!1716 = !DILocation(line: 2545, column: 21, scope: !1708, inlinedAt: !1713)
!1717 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::FrameRange>", linkageName: "_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h73ff3de34420399dE", scope: !130, file: !1051, line: 507, type: !1718, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1723, retainedNodes: !1721)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{null, !1720}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!1721 = !{!1722}
!1722 = !DILocalVariable(arg: 1, scope: !1717, file: !1051, line: 507, type: !1720)
!1723 = !{!1724}
!1724 = !DITemplateTypeParameter(name: "T", type: !19)
!1725 = !DILocation(line: 507, column: 1, scope: !1717)
!1726 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h08dd9189e56d3885E", scope: !130, file: !1051, line: 507, type: !1727, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !620, retainedNodes: !1730)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{null, !1729}
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!1730 = !{!1731}
!1731 = !DILocalVariable(arg: 1, scope: !1726, file: !1051, line: 507, type: !1729)
!1732 = !DILocation(line: 507, column: 1, scope: !1726)
!1733 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17hd29111cf54170c59E", scope: !130, file: !1051, line: 507, type: !1734, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1739, retainedNodes: !1737)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{null, !1736}
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!1737 = !{!1738}
!1738 = !DILocalVariable(arg: 1, scope: !1733, file: !1051, line: 507, type: !1736)
!1739 = !{!1740}
!1740 = !DITemplateTypeParameter(name: "T", type: !60)
!1741 = !DILocation(line: 507, column: 1, scope: !1733)
!1742 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h11140fbc07826042E", scope: !1743, file: !164, line: 37, type: !1744, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1746)
!1743 = !DINamespace(name: "is_null", scope: !175)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!297, !1081}
!1746 = !{!1747}
!1747 = !DILocalVariable(name: "ptr", arg: 1, scope: !1742, file: !164, line: 37, type: !1081)
!1748 = !DILocation(line: 37, column: 25, scope: !1742)
!1749 = !DILocalVariable(name: "self", arg: 1, scope: !1750, file: !164, line: 213, type: !1081)
!1750 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h2843e19f6a66a2b3E", scope: !175, file: !164, line: 213, type: !1751, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, retainedNodes: !1753)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!9, !1081}
!1753 = !{!1749}
!1754 = !DILocation(line: 213, column: 17, scope: !1750, inlinedAt: !1755)
!1755 = distinct !DILocation(line: 38, column: 13, scope: !1742)
!1756 = !DILocalVariable(name: "self", arg: 1, scope: !1757, file: !164, line: 60, type: !1081)
!1757 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h593c8a5aca1c4d57E", scope: !175, file: !164, line: 60, type: !1758, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1761, retainedNodes: !1760)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{!1177, !1081}
!1760 = !{!1756}
!1761 = !{!790, !438}
!1762 = !DILocation(line: 60, column: 26, scope: !1757, inlinedAt: !1763)
!1763 = distinct !DILocation(line: 217, column: 33, scope: !1750, inlinedAt: !1755)
!1764 = !DILocation(line: 217, column: 18, scope: !1750, inlinedAt: !1755)
!1765 = !DILocation(line: 38, column: 13, scope: !1742)
!1766 = !DILocation(line: 39, column: 10, scope: !1742)
!1767 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h99fe88c9a1866a62E", scope: !175, file: !164, line: 35, type: !1768, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1770)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!297, !169}
!1770 = !{!1771}
!1771 = !DILocalVariable(name: "self", arg: 1, scope: !1767, file: !164, line: 35, type: !169)
!1772 = !DILocation(line: 35, column: 26, scope: !1767)
!1773 = !DILocation(line: 52, column: 36, scope: !1767)
!1774 = !DILocation(line: 52, column: 18, scope: !1767)
!1775 = !DILocation(line: 53, column: 6, scope: !1767)
!1776 = distinct !DISubprogram(name: "from_raw_parts<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17he9cf3d3c5ec712d4E", scope: !1778, file: !1777, line: 111, type: !1779, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1781)
!1777 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "02a0aa93591cf45ea40bc18b5bf8fc0d")
!1778 = !DINamespace(name: "metadata", scope: !130)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!99, !6, !9}
!1781 = !{!1782, !1783}
!1782 = !DILocalVariable(name: "data_address", arg: 1, scope: !1776, file: !1777, line: 112, type: !6)
!1783 = !DILocalVariable(name: "metadata", arg: 2, scope: !1776, file: !1777, line: 113, type: !9)
!1784 = !DILocation(line: 112, column: 5, scope: !1776)
!1785 = !DILocation(line: 113, column: 5, scope: !1776)
!1786 = !DILocation(line: 118, column: 36, scope: !1776)
!1787 = !DILocation(line: 118, column: 14, scope: !1776)
!1788 = !DILocation(line: 119, column: 2, scope: !1776)
!1789 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb76f602118a8444aE", scope: !1778, file: !1777, line: 128, type: !1790, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, retainedNodes: !1792)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!1081, !1177, !7}
!1792 = !{!1793, !1794}
!1793 = !DILocalVariable(name: "data_address", arg: 1, scope: !1789, file: !1777, line: 129, type: !1177)
!1794 = !DILocalVariable(name: "metadata", arg: 2, scope: !1789, file: !1777, line: 130, type: !7)
!1795 = !DILocation(line: 129, column: 5, scope: !1789)
!1796 = !DILocation(line: 130, column: 5, scope: !1789)
!1797 = !DILocation(line: 135, column: 36, scope: !1789)
!1798 = !DILocation(line: 135, column: 14, scope: !1789)
!1799 = !DILocation(line: 136, column: 2, scope: !1789)
!1800 = distinct !DISubprogram(name: "from_raw_parts_mut<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hf09d32f08833e1f4E", scope: !1778, file: !1777, line: 128, type: !1801, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1803)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!148, !1177, !9}
!1803 = !{!1804, !1805}
!1804 = !DILocalVariable(name: "data_address", arg: 1, scope: !1800, file: !1777, line: 129, type: !1177)
!1805 = !DILocalVariable(name: "metadata", arg: 2, scope: !1800, file: !1777, line: 130, type: !9)
!1806 = !DILocation(line: 129, column: 5, scope: !1800)
!1807 = !DILocation(line: 130, column: 5, scope: !1800)
!1808 = !DILocation(line: 135, column: 36, scope: !1800)
!1809 = !DILocation(line: 135, column: 14, scope: !1800)
!1810 = !DILocation(line: 136, column: 2, scope: !1800)
!1811 = distinct !DISubprogram(name: "metadata<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata8metadata17h7db12d80793e1f85E", scope: !1778, file: !1777, line: 94, type: !1812, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1814)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!9, !99}
!1814 = !{!1815}
!1815 = !DILocalVariable(name: "ptr", arg: 1, scope: !1811, file: !1777, line: 94, type: !99)
!1816 = !DILocation(line: 94, column: 34, scope: !1811)
!1817 = !DILocation(line: 98, column: 14, scope: !1811)
!1818 = !DILocation(line: 99, column: 2, scope: !1811)
!1819 = distinct !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hbec443530b07bb45E", scope: !612, file: !1820, line: 218, type: !1821, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !1823, retainedNodes: !1824)
!1820 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "06c77ba4a907a2c07b546f42be41c5e7")
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!612, !169}
!1823 = !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hbec443530b07bb45E", scope: !612, file: !1820, line: 218, type: !1821, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!1824 = !{!1825}
!1825 = !DILocalVariable(name: "ptr", arg: 1, scope: !1819, file: !1820, line: 218, type: !169)
!1826 = !DILocation(line: 218, column: 39, scope: !1819)
!1827 = !DILocation(line: 221, column: 13, scope: !1819)
!1828 = !DILocation(line: 222, column: 13, scope: !1819)
!1829 = !DILocation(line: 224, column: 6, scope: !1819)
!1830 = !DILocalVariable(name: "ptr", arg: 1, scope: !1831, file: !405, line: 2542, type: !169)
!1831 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17hcda6c65c9d2718bbE", scope: !1832, file: !405, line: 2542, type: !1667, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1834)
!1832 = !DINamespace(name: "new_unchecked", scope: !1833)
!1833 = !DINamespace(name: "{impl#3}", scope: !613)
!1834 = !{!1830}
!1835 = !DILocation(line: 2542, column: 39, scope: !1831, inlinedAt: !1836)
!1836 = distinct !DILocation(line: 221, column: 13, scope: !1819)
!1837 = !DILocation(line: 221, column: 134, scope: !1838, inlinedAt: !1836)
!1838 = !DILexicalBlockFile(scope: !1831, file: !1820, discriminator: 0)
!1839 = !DILocation(line: 2545, column: 21, scope: !1831, inlinedAt: !1836)
!1840 = distinct !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h983472383f944148E", scope: !612, file: !1820, line: 950, type: !1841, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !1843, retainedNodes: !1844)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!9, !612, !612}
!1843 = !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h983472383f944148E", scope: !612, file: !1820, line: 950, type: !1841, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!1844 = !{!1845, !1846}
!1845 = !DILocalVariable(name: "self", arg: 1, scope: !1840, file: !1820, line: 950, type: !612)
!1846 = !DILocalVariable(name: "subtracted", arg: 2, scope: !1840, file: !1820, line: 950, type: !612)
!1847 = !DILocation(line: 950, column: 33, scope: !1840)
!1848 = !DILocation(line: 950, column: 39, scope: !1840)
!1849 = !DILocation(line: 955, column: 18, scope: !1840)
!1850 = !DILocation(line: 956, column: 6, scope: !1840)
!1851 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h3f5dbdbb1c39319cE", scope: !128, file: !127, line: 1490, type: !531, scopeLine: 1490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !1852)
!1852 = !{!1853}
!1853 = !DILocalVariable(name: "self", arg: 1, scope: !1851, file: !127, line: 1490, type: !533)
!1854 = !DILocation(line: 1490, column: 29, scope: !1851)
!1855 = !DILocation(line: 1494, column: 9, scope: !1851)
!1856 = !DILocation(line: 1495, column: 6, scope: !1851)
!1857 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17ha8dff1aaa44800d2E", scope: !128, file: !127, line: 1490, type: !507, scopeLine: 1490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !1858)
!1858 = !{!1859}
!1859 = !DILocalVariable(name: "self", arg: 1, scope: !1857, file: !127, line: 1490, type: !509)
!1860 = !DILocation(line: 1490, column: 29, scope: !1857)
!1861 = !DILocation(line: 1494, column: 9, scope: !1857)
!1862 = !DILocation(line: 1495, column: 6, scope: !1857)
!1863 = distinct !DISubprogram(name: "is_aligned<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hb01abb80101b388dE", scope: !128, file: !127, line: 1490, type: !551, scopeLine: 1490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1864)
!1864 = !{!1865}
!1865 = !DILocalVariable(name: "self", arg: 1, scope: !1863, file: !127, line: 1490, type: !133)
!1866 = !DILocation(line: 1490, column: 29, scope: !1863)
!1867 = !DILocation(line: 1494, column: 9, scope: !1863)
!1868 = !DILocation(line: 1495, column: 6, scope: !1863)
!1869 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hb8a46567f6af2734E", scope: !1870, file: !127, line: 1611, type: !1871, scopeLine: 1611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1873)
!1870 = !DINamespace(name: "is_aligned_to", scope: !128)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!297, !6, !9}
!1873 = !{!1874, !1875}
!1874 = !DILocalVariable(name: "ptr", arg: 1, scope: !1869, file: !127, line: 1611, type: !6)
!1875 = !DILocalVariable(name: "align", arg: 2, scope: !1869, file: !127, line: 1611, type: !9)
!1876 = !DILocation(line: 1611, column: 25, scope: !1869)
!1877 = !DILocation(line: 1611, column: 41, scope: !1869)
!1878 = !DILocalVariable(name: "self", arg: 1, scope: !1879, file: !127, line: 206, type: !6)
!1879 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h3916fbe21a2c9f55E", scope: !128, file: !127, line: 206, type: !1880, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1883, retainedNodes: !1882)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!9, !6}
!1882 = !{!1878}
!1883 = !{!337}
!1884 = !DILocation(line: 206, column: 17, scope: !1879, inlinedAt: !1885)
!1885 = distinct !DILocation(line: 1612, column: 13, scope: !1869)
!1886 = !DILocalVariable(name: "self", arg: 1, scope: !1887, file: !127, line: 60, type: !6)
!1887 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h6295aa6a962998f2E", scope: !128, file: !127, line: 60, type: !1888, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1891, retainedNodes: !1890)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!6, !6}
!1890 = !{!1886}
!1891 = !{!337, !438}
!1892 = !DILocation(line: 60, column: 26, scope: !1887, inlinedAt: !1893)
!1893 = distinct !DILocation(line: 210, column: 33, scope: !1879, inlinedAt: !1885)
!1894 = !DILocation(line: 210, column: 18, scope: !1879, inlinedAt: !1885)
!1895 = !DILocation(line: 1612, column: 26, scope: !1869)
!1896 = !DILocation(line: 1612, column: 13, scope: !1869)
!1897 = !DILocation(line: 1613, column: 10, scope: !1869)
!1898 = distinct !DISubprogram(name: "is_aligned_to<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h31fcfa321d4a82fcE", scope: !128, file: !127, line: 1605, type: !1899, scopeLine: 1605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !1901)
!1899 = !DISubroutineType(types: !1900)
!1900 = !{!297, !133, !9}
!1901 = !{!1902, !1903}
!1902 = !DILocalVariable(name: "self", arg: 1, scope: !1898, file: !127, line: 1605, type: !133)
!1903 = !DILocalVariable(name: "align", arg: 2, scope: !1898, file: !127, line: 1605, type: !9)
!1904 = !DILocation(line: 1605, column: 32, scope: !1898)
!1905 = !DILocation(line: 1605, column: 38, scope: !1898)
!1906 = !DILocation(line: 2234, column: 38, scope: !1106, inlinedAt: !1907)
!1907 = distinct !DILocation(line: 1606, column: 13, scope: !1898)
!1908 = !DILocation(line: 106, column: 33, scope: !1111, inlinedAt: !1909)
!1909 = distinct !DILocation(line: 2235, column: 13, scope: !1106, inlinedAt: !1907)
!1910 = !DILocation(line: 107, column: 13, scope: !1111, inlinedAt: !1909)
!1911 = !DILocation(line: 2235, column: 13, scope: !1106, inlinedAt: !1907)
!1912 = !DILocation(line: 1606, column: 13, scope: !1898)
!1913 = !DILocation(line: 1607, column: 13, scope: !1898)
!1914 = !DILocation(line: 60, column: 26, scope: !483, inlinedAt: !1915)
!1915 = distinct !DILocation(line: 1625, column: 37, scope: !1898)
!1916 = !DILocation(line: 1625, column: 36, scope: !1898)
!1917 = !DILocation(line: 1625, column: 18, scope: !1898)
!1918 = !DILocation(line: 1626, column: 6, scope: !1898)
!1919 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17he3553fddce0de523E", scope: !128, file: !127, line: 1605, type: !1920, scopeLine: 1605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !1922)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!297, !533, !9}
!1922 = !{!1923, !1924}
!1923 = !DILocalVariable(name: "self", arg: 1, scope: !1919, file: !127, line: 1605, type: !533)
!1924 = !DILocalVariable(name: "align", arg: 2, scope: !1919, file: !127, line: 1605, type: !9)
!1925 = !DILocation(line: 1605, column: 32, scope: !1919)
!1926 = !DILocation(line: 1605, column: 38, scope: !1919)
!1927 = !DILocation(line: 2234, column: 38, scope: !1106, inlinedAt: !1928)
!1928 = distinct !DILocation(line: 1606, column: 13, scope: !1919)
!1929 = !DILocation(line: 106, column: 33, scope: !1111, inlinedAt: !1930)
!1930 = distinct !DILocation(line: 2235, column: 13, scope: !1106, inlinedAt: !1928)
!1931 = !DILocation(line: 107, column: 13, scope: !1111, inlinedAt: !1930)
!1932 = !DILocation(line: 2235, column: 13, scope: !1106, inlinedAt: !1928)
!1933 = !DILocation(line: 1606, column: 13, scope: !1919)
!1934 = !DILocation(line: 1607, column: 13, scope: !1919)
!1935 = !DILocalVariable(name: "self", arg: 1, scope: !1936, file: !127, line: 60, type: !533)
!1936 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<usize>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h15a48d8c5464f876E", scope: !128, file: !127, line: 60, type: !1937, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1940, retainedNodes: !1939)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!6, !533}
!1939 = !{!1935}
!1940 = !{!544, !438}
!1941 = !DILocation(line: 60, column: 26, scope: !1936, inlinedAt: !1942)
!1942 = distinct !DILocation(line: 1625, column: 37, scope: !1919)
!1943 = !DILocation(line: 1625, column: 36, scope: !1919)
!1944 = !DILocation(line: 1625, column: 18, scope: !1919)
!1945 = !DILocation(line: 1626, column: 6, scope: !1919)
!1946 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hf880a6420eaff668E", scope: !128, file: !127, line: 1605, type: !1947, scopeLine: 1605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !1949)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!297, !509, !9}
!1949 = !{!1950, !1951}
!1950 = !DILocalVariable(name: "self", arg: 1, scope: !1946, file: !127, line: 1605, type: !509)
!1951 = !DILocalVariable(name: "align", arg: 2, scope: !1946, file: !127, line: 1605, type: !9)
!1952 = !DILocation(line: 1605, column: 32, scope: !1946)
!1953 = !DILocation(line: 1605, column: 38, scope: !1946)
!1954 = !DILocation(line: 2234, column: 38, scope: !1106, inlinedAt: !1955)
!1955 = distinct !DILocation(line: 1606, column: 13, scope: !1946)
!1956 = !DILocation(line: 106, column: 33, scope: !1111, inlinedAt: !1957)
!1957 = distinct !DILocation(line: 2235, column: 13, scope: !1106, inlinedAt: !1955)
!1958 = !DILocation(line: 107, column: 13, scope: !1111, inlinedAt: !1957)
!1959 = !DILocation(line: 2235, column: 13, scope: !1106, inlinedAt: !1955)
!1960 = !DILocation(line: 1606, column: 13, scope: !1946)
!1961 = !DILocation(line: 1607, column: 13, scope: !1946)
!1962 = !DILocalVariable(name: "self", arg: 1, scope: !1963, file: !127, line: 60, type: !509)
!1963 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hcefd3da1790a638fE", scope: !128, file: !127, line: 60, type: !1964, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1967, retainedNodes: !1966)
!1964 = !DISubroutineType(types: !1965)
!1965 = !{!6, !509}
!1966 = !{!1962}
!1967 = !{!523, !438}
!1968 = !DILocation(line: 60, column: 26, scope: !1963, inlinedAt: !1969)
!1969 = distinct !DILocation(line: 1625, column: 37, scope: !1946)
!1970 = !DILocation(line: 1625, column: 36, scope: !1946)
!1971 = !DILocation(line: 1625, column: 18, scope: !1946)
!1972 = !DILocation(line: 1626, column: 6, scope: !1946)
!1973 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h1fbc8752021c495dE", scope: !1974, file: !127, line: 37, type: !1975, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1978)
!1974 = !DINamespace(name: "is_null", scope: !128)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!297, !1977}
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !72, size: 64, align: 64, dwarfAddressSpace: 0)
!1978 = !{!1979}
!1979 = !DILocalVariable(name: "ptr", arg: 1, scope: !1973, file: !127, line: 37, type: !1977)
!1980 = !DILocation(line: 37, column: 25, scope: !1973)
!1981 = !DILocalVariable(name: "self", arg: 1, scope: !1982, file: !127, line: 206, type: !1977)
!1982 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h847127b7a6ca807cE", scope: !128, file: !127, line: 206, type: !1983, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, retainedNodes: !1985)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{!9, !1977}
!1985 = !{!1981}
!1986 = !DILocation(line: 206, column: 17, scope: !1982, inlinedAt: !1987)
!1987 = distinct !DILocation(line: 38, column: 13, scope: !1973)
!1988 = !DILocalVariable(name: "self", arg: 1, scope: !1989, file: !127, line: 60, type: !1977)
!1989 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h2a69d97926465a60E", scope: !128, file: !127, line: 60, type: !1990, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1761, retainedNodes: !1992)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!6, !1977}
!1992 = !{!1988}
!1993 = !DILocation(line: 60, column: 26, scope: !1989, inlinedAt: !1994)
!1994 = distinct !DILocation(line: 210, column: 33, scope: !1982, inlinedAt: !1987)
!1995 = !DILocation(line: 210, column: 18, scope: !1982, inlinedAt: !1987)
!1996 = !DILocation(line: 38, column: 13, scope: !1973)
!1997 = !DILocation(line: 39, column: 10, scope: !1973)
!1998 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h077a0fb026b5751bE", scope: !128, file: !127, line: 35, type: !507, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !522, retainedNodes: !1999)
!1999 = !{!2000}
!2000 = !DILocalVariable(name: "self", arg: 1, scope: !1998, file: !127, line: 35, type: !509)
!2001 = !DILocation(line: 35, column: 26, scope: !1998)
!2002 = !DILocation(line: 52, column: 36, scope: !1998)
!2003 = !DILocation(line: 52, column: 18, scope: !1998)
!2004 = !DILocation(line: 53, column: 6, scope: !1998)
!2005 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0b69973e713c1f15E", scope: !128, file: !127, line: 35, type: !551, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2006)
!2006 = !{!2007}
!2007 = !DILocalVariable(name: "self", arg: 1, scope: !2005, file: !127, line: 35, type: !133)
!2008 = !DILocation(line: 35, column: 26, scope: !2005)
!2009 = !DILocation(line: 52, column: 36, scope: !2005)
!2010 = !DILocation(line: 52, column: 18, scope: !2005)
!2011 = !DILocation(line: 53, column: 6, scope: !2005)
!2012 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd748fb3b4456d5a1E", scope: !128, file: !127, line: 35, type: !531, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !543, retainedNodes: !2013)
!2013 = !{!2014}
!2014 = !DILocalVariable(name: "self", arg: 1, scope: !2012, file: !127, line: 35, type: !533)
!2015 = !DILocation(line: 35, column: 26, scope: !2012)
!2016 = !DILocation(line: 52, column: 36, scope: !2012)
!2017 = !DILocation(line: 52, column: 18, scope: !2012)
!2018 = !DILocation(line: 53, column: 6, scope: !2012)
!2019 = distinct !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h37f5baf1b869a062E", scope: !128, file: !127, line: 805, type: !2020, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2022)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!9, !133, !133}
!2022 = !{!2023, !2024, !2025, !2027}
!2023 = !DILocalVariable(name: "self", arg: 1, scope: !2019, file: !127, line: 805, type: !133)
!2024 = !DILocalVariable(name: "origin", arg: 2, scope: !2019, file: !127, line: 805, type: !133)
!2025 = !DILocalVariable(name: "this", scope: !2026, file: !127, line: 809, type: !133, align: 8)
!2026 = distinct !DILexicalBlock(scope: !2019, file: !127, line: 809, column: 9)
!2027 = !DILocalVariable(name: "pointee_size", scope: !2028, file: !127, line: 819, type: !9, align: 8)
!2028 = distinct !DILexicalBlock(scope: !2026, file: !127, line: 819, column: 9)
!2029 = !DILocation(line: 805, column: 33, scope: !2019)
!2030 = !DILocation(line: 809, column: 13, scope: !2026)
!2031 = !DILocation(line: 805, column: 39, scope: !2019)
!2032 = !DILocation(line: 813, column: 13, scope: !2026)
!2033 = !DILocation(line: 819, column: 28, scope: !2026)
!2034 = !DILocation(line: 819, column: 13, scope: !2028)
!2035 = !DILocation(line: 820, column: 17, scope: !2028)
!2036 = !DILocalVariable(name: "this", arg: 1, scope: !2037, file: !405, line: 2542, type: !133)
!2037 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17heefd30c59d355584E", scope: !2038, file: !405, line: 2542, type: !2039, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2041)
!2038 = !DINamespace(name: "sub_ptr", scope: !128)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{null, !133, !133}
!2041 = !{!2036, !2042}
!2042 = !DILocalVariable(name: "origin", arg: 2, scope: !2037, file: !405, line: 2542, type: !133)
!2043 = !DILocation(line: 2542, column: 39, scope: !2037, inlinedAt: !2044)
!2044 = distinct !DILocation(line: 813, column: 13, scope: !2026)
!2045 = !DILocation(line: 815, column: 58, scope: !2046, inlinedAt: !2044)
!2046 = !DILexicalBlockFile(scope: !2037, file: !127, discriminator: 0)
!2047 = !DILocation(line: 2545, column: 21, scope: !2037, inlinedAt: !2044)
!2048 = !DILocation(line: 820, column: 9, scope: !2028)
!2049 = !DILocation(line: 820, column: 37, scope: !2028)
!2050 = !DILocation(line: 822, column: 18, scope: !2028)
!2051 = !DILocation(line: 823, column: 6, scope: !2019)
!2052 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17ha77bb642792e1365E", scope: !2053, file: !127, line: 1650, type: !1812, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2054)
!2053 = !DINamespace(name: "{impl#1}", scope: !129)
!2054 = !{!2055}
!2055 = !DILocalVariable(name: "self", arg: 1, scope: !2052, file: !127, line: 1650, type: !99)
!2056 = !DILocation(line: 1650, column: 22, scope: !2052)
!2057 = !DILocation(line: 1651, column: 9, scope: !2052)
!2058 = !DILocation(line: 1652, column: 6, scope: !2052)
!2059 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h8531ce4ff1947570E", scope: !2053, file: !127, line: 1688, type: !2060, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2062)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!133, !99}
!2062 = !{!2063}
!2063 = !DILocalVariable(name: "self", arg: 1, scope: !2059, file: !127, line: 1688, type: !99)
!2064 = !DILocation(line: 1688, column: 25, scope: !2059)
!2065 = !DILocation(line: 1690, column: 6, scope: !2059)
!2066 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h5d1374c0813f0a0bE", scope: !2068, file: !2067, line: 347, type: !2070, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2079, retainedNodes: !2076)
!2067 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7ae751d704479fb8f33a8178c510539a")
!2068 = !DINamespace(name: "{impl#15}", scope: !2069)
!2069 = !DINamespace(name: "array", scope: !71)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!199, !2072, !104, !203}
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !2073, size: 64, align: 64, dwarfAddressSpace: 0)
!2073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 12288, align: 64, elements: !2074)
!2074 = !{!2075}
!2075 = !DISubrange(count: 64, lowerBound: 0)
!2076 = !{!2077, !2078}
!2077 = !DILocalVariable(name: "self", arg: 1, scope: !2066, file: !2067, line: 347, type: !2072)
!2078 = !DILocalVariable(name: "index", arg: 2, scope: !2066, file: !2067, line: 347, type: !104)
!2079 = !{!118, !2080}
!2080 = !DITemplateTypeParameter(name: "I", type: !104)
!2081 = !DILocation(line: 347, column: 14, scope: !2066)
!2082 = !DILocation(line: 347, column: 21, scope: !2066)
!2083 = !DILocation(line: 348, column: 9, scope: !2066)
!2084 = !DILocation(line: 349, column: 6, scope: !2066)
!2085 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h01947af3f89a7e67E", scope: !2086, file: !2067, line: 358, type: !2087, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2079, retainedNodes: !2090)
!2086 = !DINamespace(name: "{impl#16}", scope: !2069)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{!230, !2089, !104, !203}
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !2073, size: 64, align: 64, dwarfAddressSpace: 0)
!2090 = !{!2091, !2092}
!2091 = !DILocalVariable(name: "self", arg: 1, scope: !2085, file: !2067, line: 358, type: !2089)
!2092 = !DILocalVariable(name: "index", arg: 2, scope: !2085, file: !2067, line: 358, type: !104)
!2093 = !DILocation(line: 358, column: 18, scope: !2085)
!2094 = !DILocation(line: 358, column: 29, scope: !2085)
!2095 = !DILocation(line: 359, column: 9, scope: !2085)
!2096 = !DILocation(line: 360, column: 6, scope: !2085)
!2097 = distinct !DISubprogram(name: "split_at_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h348f60bd3119c438E", scope: !1029, file: !2098, line: 1899, type: !2099, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2105)
!2098 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "a72c882159264612b29903a5fbfe3281")
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!2101, !230, !9, !203}
!2101 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut [bootloader::bootinfo::memory_map::MemoryRegion], &mut [bootloader::bootinfo::memory_map::MemoryRegion])", file: !2, size: 256, align: 64, elements: !2102, templateParams: !24, identifier: "6bbc87ec4b559b2d83a04c244e8accae")
!2102 = !{!2103, !2104}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2101, file: !2, baseType: !230, size: 128, align: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2101, file: !2, baseType: !230, size: 128, align: 64, offset: 128)
!2105 = !{!2106, !2107}
!2106 = !DILocalVariable(name: "self", arg: 1, scope: !2097, file: !2098, line: 1899, type: !230)
!2107 = !DILocalVariable(name: "mid", arg: 2, scope: !2097, file: !2098, line: 1899, type: !9)
!2108 = !DILocation(line: 1899, column: 31, scope: !2097)
!2109 = !DILocation(line: 1899, column: 42, scope: !2097)
!2110 = !DILocation(line: 1900, column: 17, scope: !2097)
!2111 = !DILocation(line: 1900, column: 9, scope: !2097)
!2112 = !DILocation(line: 1903, column: 18, scope: !2097)
!2113 = !DILocation(line: 1904, column: 6, scope: !2097)
!2114 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf362e016df3128ffE", scope: !1029, file: !2098, line: 659, type: !2115, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2120, retainedNodes: !2117)
!2115 = !DISubroutineType(types: !2116)
!2116 = !{!12, !199, !9}
!2117 = !{!2118, !2119}
!2118 = !DILocalVariable(name: "self", arg: 1, scope: !2114, file: !2098, line: 659, type: !199)
!2119 = !DILocalVariable(name: "index", arg: 2, scope: !2114, file: !2098, line: 659, type: !9)
!2120 = !{!118, !2121}
!2121 = !DITemplateTypeParameter(name: "I", type: !9)
!2122 = !DILocation(line: 659, column: 36, scope: !2114)
!2123 = !DILocation(line: 659, column: 43, scope: !2114)
!2124 = !DILocation(line: 666, column: 20, scope: !2114)
!2125 = !DILocation(line: 667, column: 6, scope: !2114)
!2126 = distinct !DISubprogram(name: "as_mut_ptr_range<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h4f7914af243e2e37E", scope: !1029, file: !2098, line: 853, type: !2127, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2135)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!2129, !230}
!2129 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<*mut bootloader::bootinfo::memory_map::MemoryRegion>", scope: !105, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2130, templateParams: !2133, identifier: "bb23133485232299e4a60d5f45dd0690")
!2130 = !{!2131, !2132}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2129, file: !2, baseType: !169, size: 64, align: 64, flags: DIFlagPublic)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2129, file: !2, baseType: !169, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!2133 = !{!2134}
!2134 = !DITemplateTypeParameter(name: "Idx", type: !169)
!2135 = !{!2136, !2137, !2139}
!2136 = !DILocalVariable(name: "self", arg: 1, scope: !2126, file: !2098, line: 853, type: !230)
!2137 = !DILocalVariable(name: "start", scope: !2138, file: !2098, line: 854, type: !169, align: 8)
!2138 = distinct !DILexicalBlock(scope: !2126, file: !2098, line: 854, column: 9)
!2139 = !DILocalVariable(name: "end", scope: !2140, file: !2098, line: 856, type: !169, align: 8)
!2140 = distinct !DILexicalBlock(scope: !2138, file: !2098, line: 856, column: 9)
!2141 = !DILocation(line: 853, column: 35, scope: !2126)
!2142 = !DILocalVariable(name: "self", arg: 1, scope: !2143, file: !2098, line: 773, type: !230)
!2143 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hb13a3939f27fd8b6E", scope: !1029, file: !2098, line: 773, type: !2144, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2146)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!169, !230}
!2146 = !{!2142}
!2147 = !DILocation(line: 773, column: 29, scope: !2143, inlinedAt: !2148)
!2148 = distinct !DILocation(line: 854, column: 21, scope: !2126)
!2149 = !DILocation(line: 854, column: 21, scope: !2126)
!2150 = !DILocation(line: 854, column: 13, scope: !2138)
!2151 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2152)
!2152 = distinct !DILocation(line: 856, column: 28, scope: !2138)
!2153 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2152)
!2154 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2152)
!2155 = !DILocation(line: 856, column: 28, scope: !2138)
!2156 = !DILocation(line: 856, column: 13, scope: !2140)
!2157 = !DILocation(line: 857, column: 9, scope: !2140)
!2158 = !DILocation(line: 858, column: 6, scope: !2126)
!2159 = distinct !DISubprogram(name: "sort_unstable_by<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17hb2ad2ed586f568e7E", scope: !1029, file: !2098, line: 3004, type: !2160, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2165, retainedNodes: !2162)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{null, !230, !1033}
!2162 = !{!2163, !2164}
!2163 = !DILocalVariable(name: "self", arg: 1, scope: !2159, file: !2098, line: 3004, type: !230)
!2164 = !DILocalVariable(name: "compare", arg: 2, scope: !2159, file: !2098, line: 3004, type: !1033)
!2165 = !{!118, !2166}
!2166 = !DITemplateTypeParameter(name: "F", type: !1033)
!2167 = !DILocation(line: 3004, column: 32, scope: !2159)
!2168 = !DILocation(line: 3004, column: 43, scope: !2159)
!2169 = !DILocation(line: 3008, column: 31, scope: !2159)
!2170 = !DILocation(line: 3008, column: 9, scope: !2159)
!2171 = !{i64 1}
!2172 = !DILocation(line: 3009, column: 6, scope: !2159)
!2173 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h8791a9ee89721383E", scope: !1028, file: !2098, line: 3008, type: !2174, scopeLine: 3008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2165, retainedNodes: !2176)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{!297, !1026, !12, !12}
!2176 = !{!2177, !2178, !2179}
!2177 = !DILocalVariable(name: "a", arg: 2, scope: !2173, file: !2098, line: 3008, type: !12)
!2178 = !DILocalVariable(name: "b", arg: 3, scope: !2173, file: !2098, line: 3008, type: !12)
!2179 = !DILocalVariable(name: "compare", scope: !2173, file: !2098, line: 3004, type: !1033, align: 1)
!2180 = !DILocation(line: 3004, column: 47, scope: !2173)
!2181 = !DILocation(line: 3008, column: 32, scope: !2173)
!2182 = !DILocation(line: 3008, column: 35, scope: !2173)
!2183 = !DILocation(line: 3008, column: 38, scope: !2173)
!2184 = !DILocation(line: 3008, column: 69, scope: !2173)
!2185 = distinct !DISubprogram(name: "split_at_mut_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17hea5649a3f69979f8E", scope: !1029, file: !2098, line: 2006, type: !2186, scopeLine: 2006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2188)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{!2101, !230, !9}
!2188 = !{!2189, !2190, !2191, !2193}
!2189 = !DILocalVariable(name: "self", arg: 1, scope: !2185, file: !2098, line: 2006, type: !230)
!2190 = !DILocalVariable(name: "mid", arg: 2, scope: !2185, file: !2098, line: 2006, type: !9)
!2191 = !DILocalVariable(name: "len", scope: !2192, file: !2098, line: 2007, type: !9, align: 8)
!2192 = distinct !DILexicalBlock(scope: !2185, file: !2098, line: 2007, column: 9)
!2193 = !DILocalVariable(name: "ptr", scope: !2194, file: !2098, line: 2008, type: !169, align: 8)
!2194 = distinct !DILexicalBlock(scope: !2192, file: !2098, line: 2008, column: 9)
!2195 = !DILocation(line: 2006, column: 48, scope: !2185)
!2196 = !DILocation(line: 2006, column: 59, scope: !2185)
!2197 = !DILocation(line: 2007, column: 19, scope: !2185)
!2198 = !DILocation(line: 2007, column: 13, scope: !2192)
!2199 = !DILocation(line: 773, column: 29, scope: !2143, inlinedAt: !2200)
!2200 = distinct !DILocation(line: 2008, column: 19, scope: !2192)
!2201 = !DILocation(line: 2008, column: 19, scope: !2192)
!2202 = !DILocation(line: 2008, column: 13, scope: !2194)
!2203 = !DILocation(line: 2010, column: 9, scope: !2194)
!2204 = !DILocation(line: 2019, column: 19, scope: !2194)
!2205 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2206)
!2206 = distinct !DILocation(line: 2019, column: 68, scope: !2194)
!2207 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2206)
!2208 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2206)
!2209 = !DILocation(line: 2019, column: 82, scope: !2194)
!2210 = !DILocation(line: 2011, column: 13, scope: !2194)
!2211 = !DILocation(line: 2019, column: 49, scope: !2194)
!2212 = !DILocation(line: 2019, column: 18, scope: !2194)
!2213 = !DILocation(line: 2020, column: 6, scope: !2185)
!2214 = distinct !DISubprogram(name: "iter<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5ff0069825e17ec5E", scope: !1029, file: !2098, line: 1009, type: !2215, scopeLine: 1009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2217)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!608, !199}
!2217 = !{!2218}
!2218 = !DILocalVariable(name: "self", arg: 1, scope: !2214, file: !2098, line: 1009, type: !199)
!2219 = !DILocation(line: 1009, column: 17, scope: !2214)
!2220 = !DILocation(line: 1010, column: 9, scope: !2214)
!2221 = !DILocation(line: 1011, column: 6, scope: !2214)
!2222 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h84f021ce3b5c8cf1E", scope: !1029, file: !2098, line: 884, type: !2223, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2225)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{null, !230, !9, !9, !203}
!2225 = !{!2226, !2227, !2228, !2229, !2231}
!2226 = !DILocalVariable(name: "self", arg: 1, scope: !2222, file: !2098, line: 884, type: !230)
!2227 = !DILocalVariable(name: "a", arg: 2, scope: !2222, file: !2098, line: 884, type: !9)
!2228 = !DILocalVariable(name: "b", arg: 3, scope: !2222, file: !2098, line: 884, type: !9)
!2229 = !DILocalVariable(name: "pa", scope: !2230, file: !2098, line: 887, type: !169, align: 8)
!2230 = distinct !DILexicalBlock(scope: !2222, file: !2098, line: 887, column: 9)
!2231 = !DILocalVariable(name: "pb", scope: !2232, file: !2098, line: 888, type: !169, align: 8)
!2232 = distinct !DILexicalBlock(scope: !2230, file: !2098, line: 888, column: 9)
!2233 = !DILocation(line: 884, column: 23, scope: !2222)
!2234 = !DILocation(line: 884, column: 34, scope: !2222)
!2235 = !DILocation(line: 884, column: 44, scope: !2222)
!2236 = !DILocation(line: 887, column: 36, scope: !2222)
!2237 = !DILocation(line: 887, column: 18, scope: !2222)
!2238 = !DILocation(line: 887, column: 13, scope: !2230)
!2239 = !DILocation(line: 888, column: 36, scope: !2230)
!2240 = !DILocation(line: 888, column: 18, scope: !2230)
!2241 = !DILocation(line: 888, column: 13, scope: !2232)
!2242 = !DILocation(line: 894, column: 13, scope: !2232)
!2243 = !DILocation(line: 896, column: 6, scope: !2222)
!2244 = distinct !DISubprogram(name: "reverse<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h3a000873b0c20f1eE", scope: !1029, file: !2098, line: 951, type: !2245, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2247)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{null, !230}
!2247 = !{!2248, !2249, !2251, !2253, !2254, !2256}
!2248 = !DILocalVariable(name: "self", arg: 1, scope: !2244, file: !2098, line: 951, type: !230)
!2249 = !DILocalVariable(name: "half_len", scope: !2250, file: !2098, line: 952, type: !9, align: 8)
!2250 = distinct !DILexicalBlock(scope: !2244, file: !2098, line: 952, column: 9)
!2251 = !DILocalVariable(name: "start", scope: !2252, file: !2098, line: 953, type: !169, align: 8)
!2252 = distinct !DILexicalBlock(scope: !2250, file: !2098, line: 953, column: 9)
!2253 = !DILocalVariable(name: "end", scope: !2252, file: !2098, line: 953, type: !169, align: 8)
!2254 = !DILocalVariable(name: "front_half", scope: !2255, file: !2098, line: 957, type: !230, align: 8)
!2255 = distinct !DILexicalBlock(scope: !2252, file: !2098, line: 957, column: 9)
!2256 = !DILocalVariable(name: "back_half", scope: !2255, file: !2098, line: 957, type: !230, align: 8)
!2257 = !DILocation(line: 951, column: 20, scope: !2244)
!2258 = !DILocation(line: 952, column: 24, scope: !2244)
!2259 = !DILocation(line: 952, column: 13, scope: !2250)
!2260 = !DILocation(line: 953, column: 36, scope: !2250)
!2261 = !DILocation(line: 953, column: 21, scope: !2250)
!2262 = !DILocation(line: 953, column: 21, scope: !2252)
!2263 = !DILocation(line: 953, column: 28, scope: !2250)
!2264 = !DILocation(line: 953, column: 28, scope: !2252)
!2265 = !DILocation(line: 963, column: 21, scope: !2252)
!2266 = !DILocalVariable(name: "self", arg: 1, scope: !2267, file: !164, line: 1126, type: !169)
!2267 = distinct !DISubprogram(name: "sub<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h83070bb5a7b1dadeE", scope: !175, file: !164, line: 1126, type: !176, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2268)
!2268 = !{!2266, !2269}
!2269 = !DILocalVariable(name: "count", arg: 2, scope: !2267, file: !164, line: 1126, type: !9)
!2270 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !2271)
!2271 = distinct !DILocation(line: 964, column: 47, scope: !2252)
!2272 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !2271)
!2273 = !DILocation(line: 1137, column: 34, scope: !2267, inlinedAt: !2271)
!2274 = !DILocalVariable(name: "self", arg: 1, scope: !2275, file: !164, line: 477, type: !169)
!2275 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h9f7ba59a72fae8dfE", scope: !175, file: !164, line: 477, type: !2276, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2279)
!2276 = !DISubroutineType(types: !2277)
!2277 = !{!169, !169, !2278}
!2278 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!2279 = !{!2274, !2280}
!2280 = !DILocalVariable(name: "count", arg: 2, scope: !2275, file: !164, line: 477, type: !2278)
!2281 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !2282)
!2282 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !2271)
!2283 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !2282)
!2284 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !2282)
!2285 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !2271)
!2286 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !2271)
!2287 = !DILocation(line: 964, column: 21, scope: !2252)
!2288 = !DILocation(line: 962, column: 17, scope: !2252)
!2289 = !DILocation(line: 957, column: 14, scope: !2252)
!2290 = !DILocation(line: 957, column: 14, scope: !2255)
!2291 = !DILocation(line: 957, column: 26, scope: !2252)
!2292 = !DILocation(line: 957, column: 26, scope: !2255)
!2293 = !DILocation(line: 971, column: 9, scope: !2255)
!2294 = !DILocation(line: 990, column: 6, scope: !2244)
!2295 = distinct !DISubprogram(name: "revswap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17h5c405d85fe70cd03E", scope: !2296, file: !2098, line: 974, type: !2297, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2299)
!2296 = !DINamespace(name: "reverse", scope: !1029)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{null, !230, !230, !9}
!2299 = !{!2300, !2301, !2302, !2303, !2305, !2306}
!2300 = !DILocalVariable(name: "a", arg: 1, scope: !2295, file: !2098, line: 974, type: !230)
!2301 = !DILocalVariable(name: "b", arg: 2, scope: !2295, file: !2098, line: 974, type: !230)
!2302 = !DILocalVariable(name: "n", arg: 3, scope: !2295, file: !2098, line: 974, type: !9)
!2303 = !DILocalVariable(name: "a", scope: !2304, file: !2098, line: 982, type: !230, align: 8)
!2304 = distinct !DILexicalBlock(scope: !2295, file: !2098, line: 982, column: 13)
!2305 = !DILocalVariable(name: "b", scope: !2304, file: !2098, line: 982, type: !230, align: 8)
!2306 = !DILocalVariable(name: "i", scope: !2307, file: !2098, line: 984, type: !9, align: 8)
!2307 = distinct !DILexicalBlock(scope: !2304, file: !2098, line: 984, column: 13)
!2308 = !DILocation(line: 974, column: 23, scope: !2295)
!2309 = !DILocation(line: 974, column: 36, scope: !2295)
!2310 = !DILocation(line: 974, column: 49, scope: !2295)
!2311 = !DILocation(line: 984, column: 17, scope: !2307)
!2312 = !DILocation(line: 975, column: 13, scope: !2295)
!2313 = !DILocation(line: 976, column: 13, scope: !2295)
!2314 = !DILocation(line: 975, column: 27, scope: !2295)
!2315 = !DILocation(line: 982, column: 34, scope: !2295)
!2316 = !DILocation(line: 982, column: 33, scope: !2295)
!2317 = !DILocation(line: 982, column: 47, scope: !2295)
!2318 = !DILocation(line: 982, column: 46, scope: !2295)
!2319 = !DILocation(line: 982, column: 26, scope: !2295)
!2320 = !DILocation(line: 982, column: 18, scope: !2295)
!2321 = !DILocation(line: 982, column: 18, scope: !2304)
!2322 = !DILocation(line: 982, column: 21, scope: !2295)
!2323 = !DILocation(line: 982, column: 21, scope: !2304)
!2324 = !DILocation(line: 984, column: 25, scope: !2304)
!2325 = !DILocation(line: 985, column: 13, scope: !2307)
!2326 = !DILocation(line: 976, column: 27, scope: !2295)
!2327 = !DILocation(line: 985, column: 19, scope: !2307)
!2328 = !DILocation(line: 989, column: 10, scope: !2295)
!2329 = !DILocation(line: 986, column: 34, scope: !2307)
!2330 = !DILocation(line: 986, column: 32, scope: !2307)
!2331 = !DILocation(line: 986, column: 27, scope: !2307)
!2332 = !DILocation(line: 986, column: 45, scope: !2307)
!2333 = !DILocation(line: 986, column: 53, scope: !2307)
!2334 = !DILocation(line: 986, column: 43, scope: !2307)
!2335 = !DILocation(line: 986, column: 38, scope: !2307)
!2336 = !DILocation(line: 986, column: 17, scope: !2307)
!2337 = !DILocation(line: 987, column: 17, scope: !2307)
!2338 = distinct !DISubprogram(name: "from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h6b95575ca2cdc8f3E", scope: !2340, file: !2339, line: 141, type: !2341, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2343)
!2339 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "503b19e16c498622a7ca460c2aab934c")
!2340 = !DINamespace(name: "raw", scope: !96)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{!230, !169, !9}
!2343 = !{!2344, !2345}
!2344 = !DILocalVariable(name: "data", arg: 1, scope: !2338, file: !2339, line: 141, type: !169)
!2345 = !DILocalVariable(name: "len", arg: 2, scope: !2338, file: !2339, line: 141, type: !9)
!2346 = !DILocation(line: 141, column: 47, scope: !2338)
!2347 = !DILocation(line: 141, column: 61, scope: !2338)
!2348 = !DILocation(line: 144, column: 9, scope: !2338)
!2349 = !DILocation(line: 149, column: 15, scope: !2338)
!2350 = !DILocation(line: 151, column: 2, scope: !2338)
!2351 = !DILocalVariable(name: "data", arg: 1, scope: !2352, file: !405, line: 2542, type: !169)
!2352 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17hc112e3b6d2f1b766E", scope: !2353, file: !405, line: 2542, type: !2354, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2356)
!2353 = !DINamespace(name: "from_raw_parts_mut", scope: !2340)
!2354 = !DISubroutineType(types: !2355)
!2355 = !{null, !169, !9}
!2356 = !{!2351, !2357}
!2357 = !DILocalVariable(name: "len", arg: 2, scope: !2352, file: !405, line: 2542, type: !9)
!2358 = !DILocation(line: 2542, column: 39, scope: !2352, inlinedAt: !2359)
!2359 = distinct !DILocation(line: 144, column: 9, scope: !2338)
!2360 = !DILocation(line: 146, column: 46, scope: !2361, inlinedAt: !2359)
!2361 = !DILexicalBlockFile(scope: !2352, file: !2339, discriminator: 0)
!2362 = !DILocation(line: 2545, column: 21, scope: !2352, inlinedAt: !2359)
!2363 = !DILocation(line: 147, column: 20, scope: !2361, inlinedAt: !2359)
!2364 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h3822e07ff973baf1E", scope: !608, file: !2365, line: 90, type: !2215, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !2366, retainedNodes: !2367)
!2365 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "d4ea0af1af681752798ed14df75d03d0")
!2366 = !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h3822e07ff973baf1E", scope: !608, file: !2365, line: 90, type: !2215, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!2367 = !{!2368, !2369, !2371}
!2368 = !DILocalVariable(name: "slice", arg: 1, scope: !2364, file: !2365, line: 90, type: !199)
!2369 = !DILocalVariable(name: "ptr", scope: !2370, file: !2365, line: 91, type: !133, align: 8)
!2370 = distinct !DILexicalBlock(scope: !2364, file: !2365, line: 91, column: 9)
!2371 = !DILocalVariable(name: "end_or_len", scope: !2372, file: !2365, line: 94, type: !133, align: 8)
!2372 = distinct !DILexicalBlock(scope: !2370, file: !2365, line: 94, column: 13)
!2373 = !DILocation(line: 90, column: 23, scope: !2364)
!2374 = !DILocation(line: 94, column: 17, scope: !2372)
!2375 = !DILocalVariable(name: "self", arg: 1, scope: !2376, file: !2098, line: 742, type: !199)
!2376 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he751058d791af9d8E", scope: !1029, file: !2098, line: 742, type: !2377, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2379)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!133, !199}
!2379 = !{!2375}
!2380 = !DILocation(line: 742, column: 25, scope: !2376, inlinedAt: !2381)
!2381 = distinct !DILocation(line: 91, column: 19, scope: !2364)
!2382 = !DILocation(line: 91, column: 19, scope: !2364)
!2383 = !DILocation(line: 91, column: 13, scope: !2370)
!2384 = !DILocation(line: 94, column: 33, scope: !2370)
!2385 = !DILocation(line: 939, column: 29, scope: !126, inlinedAt: !2386)
!2386 = distinct !DILocation(line: 94, column: 75, scope: !2370)
!2387 = !DILocation(line: 939, column: 35, scope: !126, inlinedAt: !2386)
!2388 = !DILocation(line: 944, column: 18, scope: !126, inlinedAt: !2386)
!2389 = !DILocation(line: 94, column: 75, scope: !2370)
!2390 = !DILocalVariable(name: "addr", arg: 1, scope: !2391, file: !1051, line: 589, type: !9)
!2391 = distinct !DISubprogram(name: "invalid<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7invalid17hb50700ac94d46927E", scope: !130, file: !1051, line: 589, type: !2392, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2394)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!133, !9}
!2394 = !{!2390}
!2395 = !DILocation(line: 589, column: 25, scope: !2391, inlinedAt: !2396)
!2396 = distinct !DILocation(line: 94, column: 45, scope: !2370)
!2397 = !DILocation(line: 595, column: 14, scope: !2391, inlinedAt: !2396)
!2398 = !DILocation(line: 94, column: 45, scope: !2370)
!2399 = !DILocation(line: 96, column: 25, scope: !2372)
!2400 = !DILocation(line: 96, column: 64, scope: !2372)
!2401 = !DILocation(line: 96, column: 13, scope: !2372)
!2402 = !DILocation(line: 98, column: 6, scope: !2364)
!2403 = distinct !DISubprogram(name: "insert_head<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_head17h2280a883779c6cdbE", scope: !1056, file: !2404, line: 88, type: !2405, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !2407)
!2404 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs", directory: "", checksumkind: CSK_MD5, checksum: "bacea7f85e49a838318ba203700f7521")
!2405 = !DISubroutineType(types: !2406)
!2406 = !{null, !230, !1026}
!2407 = !{!2408, !2409, !2410, !2412, !2414, !2416, !2418}
!2408 = !DILocalVariable(name: "v", arg: 1, scope: !2403, file: !2404, line: 88, type: !230)
!2409 = !DILocalVariable(name: "is_less", arg: 2, scope: !2403, file: !2404, line: 88, type: !1026)
!2410 = !DILocalVariable(name: "arr_ptr", scope: !2411, file: !2404, line: 97, type: !169, align: 8)
!2411 = distinct !DILexicalBlock(scope: !2403, file: !2404, line: 97, column: 13)
!2412 = !DILocalVariable(name: "tmp", scope: !2413, file: !2404, line: 116, type: !516, align: 8)
!2413 = distinct !DILexicalBlock(scope: !2411, file: !2404, line: 116, column: 13)
!2414 = !DILocalVariable(name: "hole", scope: !2415, file: !2404, line: 128, type: !1055, align: 8)
!2415 = distinct !DILexicalBlock(scope: !2413, file: !2404, line: 128, column: 13)
!2416 = !DILocalVariable(name: "iter", scope: !2417, file: !2404, line: 131, type: !104, align: 8)
!2417 = distinct !DILexicalBlock(scope: !2415, file: !2404, line: 131, column: 13)
!2418 = !DILocalVariable(name: "i", scope: !2419, file: !2404, line: 131, type: !9, align: 8)
!2419 = distinct !DILexicalBlock(scope: !2417, file: !2404, line: 131, column: 33)
!2420 = !{!118, !1045}
!2421 = !DILocation(line: 88, column: 29, scope: !2403)
!2422 = !DILocation(line: 88, column: 42, scope: !2403)
!2423 = !DILocation(line: 116, column: 17, scope: !2413)
!2424 = !DILocation(line: 128, column: 17, scope: !2415)
!2425 = !DILocation(line: 131, column: 22, scope: !2417)
!2426 = !DILocation(line: 92, column: 5, scope: !2403)
!2427 = !DILocation(line: 96, column: 20, scope: !2403)
!2428 = !DILocation(line: 96, column: 40, scope: !2403)
!2429 = !DILocation(line: 96, column: 12, scope: !2403)
!2430 = !DILocation(line: 92, column: 19, scope: !2403)
!2431 = !DILocation(line: 141, column: 2, scope: !2403)
!2432 = !DILocation(line: 773, column: 29, scope: !2143, inlinedAt: !2433)
!2433 = distinct !DILocation(line: 97, column: 27, scope: !2403)
!2434 = !DILocation(line: 97, column: 27, scope: !2403)
!2435 = !DILocation(line: 97, column: 17, scope: !2411)
!2436 = !DILocation(line: 116, column: 46, scope: !2411)
!2437 = !DILocation(line: 70, column: 22, scope: !866, inlinedAt: !2438)
!2438 = distinct !DILocation(line: 116, column: 23, scope: !2411)
!2439 = !DILocation(line: 71, column: 9, scope: !866, inlinedAt: !2438)
!2440 = !DILocalVariable(name: "self", arg: 1, scope: !2441, file: !867, line: 152, type: !2445)
!2441 = distinct !DISubprogram(name: "deref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h77fcff0ab9fca2a6E", scope: !2442, file: !867, line: 152, type: !2443, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2446)
!2442 = !DINamespace(name: "{impl#2}", scope: !517)
!2443 = !DISubroutineType(types: !2444)
!2444 = !{!12, !2445}
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !516, size: 64, align: 64, dwarfAddressSpace: 0)
!2446 = !{!2440}
!2447 = !DILocation(line: 152, column: 14, scope: !2441, inlinedAt: !2448)
!2448 = distinct !DILocation(line: 128, column: 50, scope: !2413)
!2449 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2450)
!2450 = distinct !DILocation(line: 128, column: 62, scope: !2413)
!2451 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2450)
!2452 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2450)
!2453 = !DILocation(line: 128, column: 28, scope: !2413)
!2454 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2455)
!2455 = distinct !DILocation(line: 129, column: 38, scope: !2415)
!2456 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2455)
!2457 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2455)
!2458 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2459)
!2459 = distinct !DILocation(line: 129, column: 54, scope: !2415)
!2460 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2459)
!2461 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !2462)
!2462 = distinct !DILocation(line: 129, column: 13, scope: !2415)
!2463 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !2462)
!2464 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !2462)
!2465 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !2462)
!2466 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !2467)
!2467 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !2462)
!2468 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !2467)
!2469 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !2467)
!2470 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !2467)
!2471 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !2467)
!2472 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !2462)
!2473 = !DILocation(line: 131, column: 22, scope: !2415)
!2474 = !DILocation(line: 131, column: 13, scope: !2417)
!2475 = !DILocation(line: 139, column: 9, scope: !2413)
!2476 = !DILocation(line: 131, column: 17, scope: !2417)
!2477 = !DILocation(line: 131, column: 17, scope: !2419)
!2478 = !DILocation(line: 132, column: 30, scope: !2419)
!2479 = !DILocation(line: 132, column: 29, scope: !2419)
!2480 = !DILocation(line: 152, column: 14, scope: !2441, inlinedAt: !2481)
!2481 = distinct !DILocation(line: 132, column: 51, scope: !2419)
!2482 = !DILocation(line: 132, column: 21, scope: !2419)
!2483 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2484)
!2484 = distinct !DILocation(line: 135, column: 42, scope: !2419)
!2485 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2484)
!2486 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2484)
!2487 = !DILocation(line: 135, column: 70, scope: !2419)
!2488 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2489)
!2489 = distinct !DILocation(line: 135, column: 58, scope: !2419)
!2490 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2489)
!2491 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2489)
!2492 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !2493)
!2493 = distinct !DILocation(line: 135, column: 17, scope: !2419)
!2494 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !2493)
!2495 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !2493)
!2496 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !2493)
!2497 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !2498)
!2498 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !2493)
!2499 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !2498)
!2500 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !2498)
!2501 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !2498)
!2502 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !2498)
!2503 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !2493)
!2504 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2505)
!2505 = distinct !DILocation(line: 136, column: 29, scope: !2419)
!2506 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2505)
!2507 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2505)
!2508 = !DILocation(line: 136, column: 17, scope: !2419)
!2509 = distinct !DISubprogram(name: "insert_tail<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_tail17hadc962c8a0e3fa3fE", scope: !1056, file: !2404, line: 35, type: !2405, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !2510)
!2510 = !{!2511, !2512, !2513, !2515, !2517, !2519, !2521, !2523, !2533, !2535}
!2511 = !DILocalVariable(name: "v", arg: 1, scope: !2509, file: !2404, line: 35, type: !230)
!2512 = !DILocalVariable(name: "is_less", arg: 2, scope: !2509, file: !2404, line: 35, type: !1026)
!2513 = !DILocalVariable(name: "arr_ptr", scope: !2514, file: !2404, line: 41, type: !169, align: 8)
!2514 = distinct !DILexicalBlock(scope: !2509, file: !2404, line: 41, column: 5)
!2515 = !DILocalVariable(name: "i", scope: !2516, file: !2404, line: 42, type: !9, align: 8)
!2516 = distinct !DILexicalBlock(scope: !2514, file: !2404, line: 42, column: 5)
!2517 = !DILocalVariable(name: "i_ptr", scope: !2518, file: !2404, line: 47, type: !169, align: 8)
!2518 = distinct !DILexicalBlock(scope: !2516, file: !2404, line: 47, column: 9)
!2519 = !DILocalVariable(name: "tmp", scope: !2520, file: !2404, line: 56, type: !516, align: 8)
!2520 = distinct !DILexicalBlock(scope: !2518, file: !2404, line: 56, column: 13)
!2521 = !DILocalVariable(name: "hole", scope: !2522, file: !2404, line: 67, type: !1055, align: 8)
!2522 = distinct !DILexicalBlock(scope: !2520, file: !2404, line: 67, column: 13)
!2523 = !DILocalVariable(name: "iter", scope: !2524, file: !2404, line: 71, type: !2525, align: 8)
!2524 = distinct !DILexicalBlock(scope: !2522, file: !2404, line: 71, column: 13)
!2525 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !2526, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2529, templateParams: !2531, identifier: "71eaf91a64ed7081c4534b05d07518d8")
!2526 = !DINamespace(name: "rev", scope: !2527)
!2527 = !DINamespace(name: "adapters", scope: !2528)
!2528 = !DINamespace(name: "iter", scope: !71)
!2529 = !{!2530}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2525, file: !2, baseType: !104, size: 128, align: 64, flags: DIFlagPrivate)
!2531 = !{!2532}
!2532 = !DITemplateTypeParameter(name: "T", type: !104)
!2533 = !DILocalVariable(name: "j", scope: !2534, file: !2404, line: 71, type: !9, align: 8)
!2534 = distinct !DILexicalBlock(scope: !2524, file: !2404, line: 71, column: 41)
!2535 = !DILocalVariable(name: "j_ptr", scope: !2536, file: !2404, line: 72, type: !169, align: 8)
!2536 = distinct !DILexicalBlock(scope: !2534, file: !2404, line: 72, column: 17)
!2537 = !DILocation(line: 35, column: 29, scope: !2509)
!2538 = !DILocation(line: 35, column: 42, scope: !2509)
!2539 = !DILocation(line: 56, column: 17, scope: !2520)
!2540 = !DILocation(line: 67, column: 17, scope: !2522)
!2541 = !DILocation(line: 71, column: 22, scope: !2524)
!2542 = !DILocation(line: 39, column: 5, scope: !2509)
!2543 = !DILocation(line: 773, column: 29, scope: !2143, inlinedAt: !2544)
!2544 = distinct !DILocation(line: 41, column: 19, scope: !2509)
!2545 = !DILocation(line: 41, column: 19, scope: !2509)
!2546 = !DILocation(line: 41, column: 9, scope: !2514)
!2547 = !DILocation(line: 42, column: 13, scope: !2514)
!2548 = !DILocation(line: 39, column: 19, scope: !2509)
!2549 = !DILocation(line: 42, column: 9, scope: !2516)
!2550 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2551)
!2551 = distinct !DILocation(line: 47, column: 21, scope: !2516)
!2552 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2551)
!2553 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2551)
!2554 = !DILocation(line: 47, column: 21, scope: !2516)
!2555 = !DILocation(line: 47, column: 13, scope: !2518)
!2556 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !2557)
!2557 = distinct !DILocation(line: 52, column: 31, scope: !2518)
!2558 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !2557)
!2559 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !2560)
!2560 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !2557)
!2561 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !2560)
!2562 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !2560)
!2563 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !2557)
!2564 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !2557)
!2565 = !DILocation(line: 52, column: 12, scope: !2518)
!2566 = !DILocation(line: 83, column: 2, scope: !2509)
!2567 = !DILocation(line: 56, column: 46, scope: !2518)
!2568 = !DILocation(line: 70, column: 22, scope: !866, inlinedAt: !2569)
!2569 = distinct !DILocation(line: 56, column: 23, scope: !2518)
!2570 = !DILocation(line: 71, column: 9, scope: !866, inlinedAt: !2569)
!2571 = !DILocation(line: 152, column: 14, scope: !2441, inlinedAt: !2572)
!2572 = distinct !DILocation(line: 67, column: 50, scope: !2520)
!2573 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !2574)
!2574 = distinct !DILocation(line: 67, column: 62, scope: !2520)
!2575 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !2574)
!2576 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !2577)
!2577 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !2574)
!2578 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !2577)
!2579 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !2577)
!2580 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !2574)
!2581 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !2574)
!2582 = !DILocation(line: 67, column: 28, scope: !2520)
!2583 = !DILocation(line: 68, column: 38, scope: !2522)
!2584 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !2585)
!2585 = distinct !DILocation(line: 68, column: 13, scope: !2522)
!2586 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !2585)
!2587 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !2585)
!2588 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !2585)
!2589 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !2590)
!2590 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !2585)
!2591 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !2590)
!2592 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !2590)
!2593 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !2590)
!2594 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !2590)
!2595 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !2585)
!2596 = !DILocation(line: 71, column: 26, scope: !2522)
!2597 = !DILocation(line: 71, column: 22, scope: !2522)
!2598 = !DILocation(line: 71, column: 13, scope: !2524)
!2599 = !DILocation(line: 81, column: 9, scope: !2520)
!2600 = !DILocation(line: 71, column: 17, scope: !2524)
!2601 = !DILocation(line: 71, column: 17, scope: !2534)
!2602 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2603)
!2603 = distinct !DILocation(line: 72, column: 29, scope: !2534)
!2604 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2603)
!2605 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2603)
!2606 = !DILocation(line: 72, column: 29, scope: !2534)
!2607 = !DILocation(line: 72, column: 21, scope: !2536)
!2608 = !DILocation(line: 152, column: 14, scope: !2441, inlinedAt: !2609)
!2609 = distinct !DILocation(line: 73, column: 30, scope: !2536)
!2610 = !DILocation(line: 73, column: 21, scope: !2536)
!2611 = !DILocation(line: 77, column: 49, scope: !2536)
!2612 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !2613)
!2613 = distinct !DILocation(line: 77, column: 17, scope: !2536)
!2614 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !2613)
!2615 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !2613)
!2616 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !2613)
!2617 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !2618)
!2618 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !2613)
!2619 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !2618)
!2620 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !2618)
!2621 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !2618)
!2622 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !2618)
!2623 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !2613)
!2624 = !DILocation(line: 78, column: 17, scope: !2536)
!2625 = distinct !DISubprogram(name: "choose_pivot<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot17hdb34892171d6c6e2E", scope: !1056, file: !2404, line: 729, type: !2626, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !2628)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!916, !230, !1026}
!2628 = !{!2629, !2630, !2631, !2633, !2635, !2637, !2639, !2641, !2650, !2656}
!2629 = !DILocalVariable(name: "v", arg: 1, scope: !2625, file: !2404, line: 729, type: !230)
!2630 = !DILocalVariable(name: "is_less", arg: 2, scope: !2625, file: !2404, line: 729, type: !1026)
!2631 = !DILocalVariable(name: "len", scope: !2632, file: !2404, line: 739, type: !9, align: 8)
!2632 = distinct !DILexicalBlock(scope: !2625, file: !2404, line: 739, column: 5)
!2633 = !DILocalVariable(name: "a", scope: !2634, file: !2404, line: 742, type: !9, align: 8)
!2634 = distinct !DILexicalBlock(scope: !2632, file: !2404, line: 742, column: 5)
!2635 = !DILocalVariable(name: "b", scope: !2636, file: !2404, line: 743, type: !9, align: 8)
!2636 = distinct !DILexicalBlock(scope: !2634, file: !2404, line: 743, column: 5)
!2637 = !DILocalVariable(name: "c", scope: !2638, file: !2404, line: 744, type: !9, align: 8)
!2638 = distinct !DILexicalBlock(scope: !2636, file: !2404, line: 744, column: 5)
!2639 = !DILocalVariable(name: "swaps", scope: !2640, file: !2404, line: 747, type: !9, align: 8)
!2640 = distinct !DILexicalBlock(scope: !2638, file: !2404, line: 747, column: 5)
!2641 = !DILocalVariable(name: "sort2", scope: !2642, file: !2404, line: 757, type: !2643, align: 8)
!2642 = distinct !DILexicalBlock(scope: !2640, file: !2404, line: 757, column: 9)
!2643 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2644, file: !2, size: 256, align: 64, elements: !2645, templateParams: !24, identifier: "4f56b3e3d065bf4fa635a0019f11a872")
!2644 = !DINamespace(name: "choose_pivot", scope: !1056)
!2645 = !{!2646, !2647, !2648}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !2643, file: !2, baseType: !1026, size: 64, align: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__v", scope: !2643, file: !2, baseType: !199, size: 128, align: 64, offset: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__swaps", scope: !2643, file: !2, baseType: !2649, size: 64, align: 64, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2650 = !DILocalVariable(name: "sort3", scope: !2651, file: !2404, line: 765, type: !2652, align: 8)
!2651 = distinct !DILexicalBlock(scope: !2642, file: !2404, line: 765, column: 9)
!2652 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2644, file: !2, size: 64, align: 64, elements: !2653, templateParams: !24, identifier: "ade473eb7afe04bc984dfb3f2b874296")
!2653 = !{!2654}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort2", scope: !2652, file: !2, baseType: !2655, size: 64, align: 64)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2643, size: 64, align: 64, dwarfAddressSpace: 0)
!2656 = !DILocalVariable(name: "sort_adjacent", scope: !2657, file: !2404, line: 773, type: !2658, align: 8)
!2657 = distinct !DILexicalBlock(scope: !2651, file: !2404, line: 773, column: 13)
!2658 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2644, file: !2, size: 64, align: 64, elements: !2659, templateParams: !24, identifier: "1f1040aae0d5041546369b9be32a61f0")
!2659 = !{!2660}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort3", scope: !2658, file: !2, baseType: !2661, size: 64, align: 64)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2652, size: 64, align: 64, dwarfAddressSpace: 0)
!2662 = !DILocation(line: 729, column: 34, scope: !2625)
!2663 = !DILocation(line: 729, column: 47, scope: !2625)
!2664 = !DILocation(line: 742, column: 9, scope: !2634)
!2665 = !DILocation(line: 743, column: 9, scope: !2636)
!2666 = !DILocation(line: 744, column: 9, scope: !2638)
!2667 = !DILocation(line: 747, column: 9, scope: !2640)
!2668 = !DILocation(line: 757, column: 13, scope: !2642)
!2669 = !DILocation(line: 765, column: 13, scope: !2651)
!2670 = !DILocation(line: 773, column: 17, scope: !2657)
!2671 = !DILocation(line: 739, column: 15, scope: !2625)
!2672 = !DILocation(line: 739, column: 9, scope: !2632)
!2673 = !DILocation(line: 742, column: 17, scope: !2632)
!2674 = !DILocation(line: 743, column: 17, scope: !2634)
!2675 = !DILocation(line: 744, column: 17, scope: !2636)
!2676 = !DILocation(line: 747, column: 21, scope: !2638)
!2677 = !DILocation(line: 749, column: 8, scope: !2640)
!2678 = !DILocation(line: 788, column: 8, scope: !2640)
!2679 = !DILocation(line: 757, column: 25, scope: !2640)
!2680 = !DILocation(line: 765, column: 25, scope: !2642)
!2681 = !DILocation(line: 771, column: 12, scope: !2651)
!2682 = !DILocation(line: 785, column: 9, scope: !2651)
!2683 = !DILocation(line: 773, column: 37, scope: !2651)
!2684 = !DILocation(line: 779, column: 13, scope: !2657)
!2685 = !DILocation(line: 780, column: 13, scope: !2657)
!2686 = !DILocation(line: 781, column: 13, scope: !2657)
!2687 = !DILocation(line: 793, column: 9, scope: !2640)
!2688 = !DILocation(line: 794, column: 10, scope: !2640)
!2689 = !DILocation(line: 789, column: 10, scope: !2640)
!2690 = !DILocation(line: 789, column: 13, scope: !2640)
!2691 = !DILocation(line: 789, column: 9, scope: !2640)
!2692 = !DILocation(line: 788, column: 5, scope: !2640)
!2693 = !DILocation(line: 794, column: 20, scope: !2640)
!2694 = !DILocation(line: 794, column: 9, scope: !2640)
!2695 = !DILocation(line: 796, column: 2, scope: !2625)
!2696 = distinct !DISubprogram(name: "{closure#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0f61809f48cb59d0E", scope: !2644, file: !2404, line: 773, type: !2697, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !2700)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{null, !2699, !2649}
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2658, size: 64, align: 64, dwarfAddressSpace: 0)
!2700 = !{!2701, !2702, !2703}
!2701 = !DILocalVariable(name: "a", arg: 2, scope: !2696, file: !2404, line: 773, type: !2649)
!2702 = !DILocalVariable(name: "sort3", scope: !2696, file: !2404, line: 765, type: !2652, align: 8)
!2703 = !DILocalVariable(name: "tmp", scope: !2704, file: !2404, line: 774, type: !9, align: 8)
!2704 = distinct !DILexicalBlock(scope: !2696, file: !2404, line: 774, column: 17)
!2705 = !DILocation(line: 765, column: 17, scope: !2696)
!2706 = !DILocation(line: 773, column: 38, scope: !2696)
!2707 = !DILocation(line: 774, column: 27, scope: !2696)
!2708 = !DILocation(line: 774, column: 21, scope: !2704)
!2709 = !DILocation(line: 775, column: 17, scope: !2704)
!2710 = !DILocation(line: 775, column: 28, scope: !2704)
!2711 = !DILocation(line: 775, column: 47, scope: !2704)
!2712 = !DILocation(line: 776, column: 14, scope: !2696)
!2713 = distinct !DISubprogram(name: "{closure#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h4801fda56e9bd923E", scope: !2644, file: !2404, line: 765, type: !2714, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !2716)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{null, !2661, !2649, !2649, !2649}
!2716 = !{!2717, !2718, !2719, !2720}
!2717 = !DILocalVariable(name: "a", arg: 2, scope: !2713, file: !2404, line: 765, type: !2649)
!2718 = !DILocalVariable(name: "b", arg: 3, scope: !2713, file: !2404, line: 765, type: !2649)
!2719 = !DILocalVariable(name: "c", arg: 4, scope: !2713, file: !2404, line: 765, type: !2649)
!2720 = !DILocalVariable(name: "sort2", scope: !2713, file: !2404, line: 757, type: !2643, align: 8)
!2721 = !DILocation(line: 757, column: 17, scope: !2713)
!2722 = !DILocation(line: 765, column: 26, scope: !2713)
!2723 = !DILocation(line: 765, column: 41, scope: !2713)
!2724 = !DILocation(line: 765, column: 56, scope: !2713)
!2725 = !DILocation(line: 766, column: 13, scope: !2713)
!2726 = !DILocation(line: 767, column: 13, scope: !2713)
!2727 = !DILocation(line: 768, column: 13, scope: !2713)
!2728 = !DILocation(line: 769, column: 10, scope: !2713)
!2729 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hd172dc874015ff81E", scope: !2644, file: !2404, line: 757, type: !2730, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !2732)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{null, !2655, !2649, !2649}
!2732 = !{!2733, !2734, !2735, !2736, !2737}
!2733 = !DILocalVariable(name: "a", arg: 2, scope: !2729, file: !2404, line: 757, type: !2649)
!2734 = !DILocalVariable(name: "b", arg: 3, scope: !2729, file: !2404, line: 757, type: !2649)
!2735 = !DILocalVariable(name: "is_less", scope: !2729, file: !2404, line: 729, type: !1027, align: 8)
!2736 = !DILocalVariable(name: "v", scope: !2729, file: !2404, line: 729, type: !13, align: 8)
!2737 = !DILocalVariable(name: "swaps", scope: !2729, file: !2404, line: 747, type: !9, align: 8)
!2738 = !DILocation(line: 729, column: 47, scope: !2729)
!2739 = !DILocation(line: 729, column: 34, scope: !2729)
!2740 = !DILocation(line: 747, column: 13, scope: !2729)
!2741 = !DILocation(line: 757, column: 26, scope: !2729)
!2742 = !DILocation(line: 757, column: 41, scope: !2729)
!2743 = !DILocation(line: 758, column: 16, scope: !2729)
!2744 = !DILocation(line: 758, column: 24, scope: !2729)
!2745 = !DILocation(line: 758, column: 40, scope: !2729)
!2746 = !DILocation(line: 758, column: 45, scope: !2729)
!2747 = !DILocation(line: 758, column: 61, scope: !2729)
!2748 = !DILocation(line: 762, column: 10, scope: !2729)
!2749 = !DILocation(line: 759, column: 17, scope: !2729)
!2750 = !DILocation(line: 760, column: 17, scope: !2729)
!2751 = !DILocation(line: 758, column: 13, scope: !2729)
!2752 = distinct !DISubprogram(name: "break_patterns<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns17h081dabbdbdf54a32E", scope: !1056, file: !2404, line: 680, type: !2245, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2753)
!2753 = !{!2754, !2755, !2757, !2759, !2765, !2767, !2769, !2771, !2773}
!2754 = !DILocalVariable(name: "v", arg: 1, scope: !2752, file: !2404, line: 680, type: !230)
!2755 = !DILocalVariable(name: "len", scope: !2756, file: !2404, line: 681, type: !9, align: 8)
!2756 = distinct !DILexicalBlock(scope: !2752, file: !2404, line: 681, column: 5)
!2757 = !DILocalVariable(name: "seed", scope: !2758, file: !2404, line: 683, type: !9, align: 8)
!2758 = distinct !DILexicalBlock(scope: !2756, file: !2404, line: 683, column: 9)
!2759 = !DILocalVariable(name: "gen_usize", scope: !2760, file: !2404, line: 684, type: !2761, align: 8)
!2760 = distinct !DILexicalBlock(scope: !2758, file: !2404, line: 684, column: 9)
!2761 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !2762, file: !2, size: 64, align: 64, elements: !2763, templateParams: !24, identifier: "a9e50a8f32af6fc2d6795a48ee1b149d")
!2762 = !DINamespace(name: "break_patterns", scope: !1056)
!2763 = !{!2764}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__seed", scope: !2761, file: !2, baseType: !2649, size: 64, align: 64)
!2765 = !DILocalVariable(name: "modulus", scope: !2766, file: !2404, line: 705, type: !9, align: 8)
!2766 = distinct !DILexicalBlock(scope: !2760, file: !2404, line: 705, column: 9)
!2767 = !DILocalVariable(name: "pos", scope: !2768, file: !2404, line: 708, type: !9, align: 8)
!2768 = distinct !DILexicalBlock(scope: !2766, file: !2404, line: 708, column: 9)
!2769 = !DILocalVariable(name: "iter", scope: !2770, file: !2404, line: 710, type: !104, align: 8)
!2770 = distinct !DILexicalBlock(scope: !2768, file: !2404, line: 710, column: 9)
!2771 = !DILocalVariable(name: "i", scope: !2772, file: !2404, line: 710, type: !9, align: 8)
!2772 = distinct !DILexicalBlock(scope: !2770, file: !2404, line: 710, column: 23)
!2773 = !DILocalVariable(name: "other", scope: !2774, file: !2404, line: 714, type: !9, align: 8)
!2774 = distinct !DILexicalBlock(scope: !2772, file: !2404, line: 714, column: 13)
!2775 = !DILocation(line: 680, column: 33, scope: !2752)
!2776 = !DILocation(line: 683, column: 13, scope: !2758)
!2777 = !DILocation(line: 684, column: 13, scope: !2760)
!2778 = !DILocation(line: 710, column: 18, scope: !2770)
!2779 = !DILocation(line: 714, column: 17, scope: !2774)
!2780 = !DILocation(line: 681, column: 15, scope: !2752)
!2781 = !DILocation(line: 681, column: 9, scope: !2756)
!2782 = !DILocation(line: 682, column: 8, scope: !2756)
!2783 = !DILocation(line: 724, column: 2, scope: !2752)
!2784 = !DILocation(line: 683, column: 24, scope: !2756)
!2785 = !DILocation(line: 684, column: 29, scope: !2758)
!2786 = !DILocation(line: 705, column: 23, scope: !2760)
!2787 = !DILocation(line: 705, column: 13, scope: !2766)
!2788 = !DILocation(line: 708, column: 19, scope: !2766)
!2789 = !DILocation(line: 708, column: 13, scope: !2768)
!2790 = !DILocation(line: 710, column: 18, scope: !2768)
!2791 = !DILocation(line: 710, column: 9, scope: !2770)
!2792 = !DILocation(line: 710, column: 13, scope: !2770)
!2793 = !DILocation(line: 710, column: 13, scope: !2772)
!2794 = !DILocation(line: 714, column: 29, scope: !2772)
!2795 = !DILocation(line: 714, column: 43, scope: !2772)
!2796 = !DILocation(line: 717, column: 16, scope: !2774)
!2797 = !DILocation(line: 721, column: 20, scope: !2774)
!2798 = !DILocation(line: 718, column: 17, scope: !2774)
!2799 = !DILocation(line: 717, column: 13, scope: !2774)
!2800 = !DILocation(line: 721, column: 33, scope: !2774)
!2801 = !DILocation(line: 721, column: 13, scope: !2774)
!2802 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17hce1bf86a87df501fE", scope: !2762, file: !2404, line: 684, type: !2803, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !2806)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!9, !2805}
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::break_patterns::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !2761, size: 64, align: 64, dwarfAddressSpace: 0)
!2806 = !{!2807, !2808, !2810}
!2807 = !DILocalVariable(name: "seed", scope: !2802, file: !2404, line: 683, type: !9, align: 8)
!2808 = !DILocalVariable(name: "r", scope: !2809, file: !2404, line: 687, type: !27, align: 4)
!2809 = distinct !DILexicalBlock(scope: !2802, file: !2404, line: 687, column: 17)
!2810 = !DILocalVariable(name: "r", scope: !2811, file: !2404, line: 694, type: !22, align: 8)
!2811 = distinct !DILexicalBlock(scope: !2802, file: !2404, line: 694, column: 17)
!2812 = !DILocation(line: 683, column: 17, scope: !2802)
!2813 = !DILocation(line: 687, column: 21, scope: !2809)
!2814 = !DILocation(line: 694, column: 21, scope: !2811)
!2815 = !DILocation(line: 686, column: 16, scope: !2802)
!2816 = !DILocation(line: 694, column: 29, scope: !2802)
!2817 = !DILocation(line: 695, column: 22, scope: !2811)
!2818 = !DILocation(line: 695, column: 17, scope: !2811)
!2819 = !DILocation(line: 696, column: 22, scope: !2811)
!2820 = !DILocation(line: 696, column: 17, scope: !2811)
!2821 = !DILocation(line: 697, column: 22, scope: !2811)
!2822 = !DILocation(line: 697, column: 17, scope: !2811)
!2823 = !DILocation(line: 698, column: 24, scope: !2811)
!2824 = !DILocation(line: 698, column: 17, scope: !2811)
!2825 = !DILocation(line: 699, column: 17, scope: !2811)
!2826 = !DILocation(line: 686, column: 13, scope: !2802)
!2827 = !DILocation(line: 687, column: 29, scope: !2802)
!2828 = !DILocation(line: 688, column: 22, scope: !2809)
!2829 = !DILocation(line: 688, column: 17, scope: !2809)
!2830 = !DILocation(line: 689, column: 22, scope: !2809)
!2831 = !DILocation(line: 689, column: 17, scope: !2809)
!2832 = !DILocation(line: 690, column: 22, scope: !2809)
!2833 = !DILocation(line: 690, column: 17, scope: !2809)
!2834 = !DILocation(line: 691, column: 24, scope: !2809)
!2835 = !DILocation(line: 691, column: 17, scope: !2809)
!2836 = !DILocation(line: 692, column: 17, scope: !2809)
!2837 = !DILocation(line: 701, column: 10, scope: !2802)
!2838 = distinct !DISubprogram(name: "partition_equal<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort15partition_equal17h25126ee6119f986fE", scope: !1056, file: !2404, line: 615, type: !2839, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !2841)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{!9, !230, !9, !1026}
!2841 = !{!2842, !2843, !2844, !2845, !2847, !2848, !2850, !2852, !2854, !2856, !2858, !2860, !2862}
!2842 = !DILocalVariable(name: "v", arg: 1, scope: !2838, file: !2404, line: 615, type: !230)
!2843 = !DILocalVariable(name: "pivot", arg: 2, scope: !2838, file: !2404, line: 615, type: !9)
!2844 = !DILocalVariable(name: "is_less", arg: 3, scope: !2838, file: !2404, line: 615, type: !1026)
!2845 = !DILocalVariable(name: "pivot", scope: !2846, file: !2404, line: 621, type: !230, align: 8)
!2846 = distinct !DILexicalBlock(scope: !2838, file: !2404, line: 621, column: 5)
!2847 = !DILocalVariable(name: "v", scope: !2846, file: !2404, line: 621, type: !230, align: 8)
!2848 = !DILocalVariable(name: "pivot", scope: !2849, file: !2404, line: 622, type: !832, align: 8)
!2849 = distinct !DILexicalBlock(scope: !2846, file: !2404, line: 622, column: 5)
!2850 = !DILocalVariable(name: "tmp", scope: !2851, file: !2404, line: 627, type: !516, align: 8)
!2851 = distinct !DILexicalBlock(scope: !2849, file: !2404, line: 627, column: 5)
!2852 = !DILocalVariable(name: "_pivot_guard", scope: !2853, file: !2404, line: 628, type: !1055, align: 8)
!2853 = distinct !DILexicalBlock(scope: !2851, file: !2404, line: 628, column: 5)
!2854 = !DILocalVariable(name: "pivot", scope: !2855, file: !2404, line: 629, type: !12, align: 8)
!2855 = distinct !DILexicalBlock(scope: !2853, file: !2404, line: 629, column: 5)
!2856 = !DILocalVariable(name: "len", scope: !2857, file: !2404, line: 631, type: !9, align: 8)
!2857 = distinct !DILexicalBlock(scope: !2855, file: !2404, line: 631, column: 5)
!2858 = !DILocalVariable(name: "l", scope: !2859, file: !2404, line: 637, type: !9, align: 8)
!2859 = distinct !DILexicalBlock(scope: !2857, file: !2404, line: 637, column: 5)
!2860 = !DILocalVariable(name: "r", scope: !2861, file: !2404, line: 638, type: !9, align: 8)
!2861 = distinct !DILexicalBlock(scope: !2859, file: !2404, line: 638, column: 5)
!2862 = !DILocalVariable(name: "ptr", scope: !2863, file: !2404, line: 664, type: !169, align: 8)
!2863 = distinct !DILexicalBlock(scope: !2861, file: !2404, line: 664, column: 13)
!2864 = !DILocation(line: 615, column: 37, scope: !2838)
!2865 = !DILocation(line: 615, column: 50, scope: !2838)
!2866 = !DILocation(line: 615, column: 64, scope: !2838)
!2867 = !DILocation(line: 627, column: 9, scope: !2851)
!2868 = !DILocation(line: 628, column: 9, scope: !2853)
!2869 = !DILocation(line: 637, column: 9, scope: !2859)
!2870 = !DILocation(line: 638, column: 9, scope: !2861)
!2871 = !DILocation(line: 620, column: 5, scope: !2838)
!2872 = !DILocation(line: 621, column: 22, scope: !2838)
!2873 = !DILocation(line: 621, column: 10, scope: !2838)
!2874 = !DILocation(line: 621, column: 10, scope: !2846)
!2875 = !DILocation(line: 621, column: 17, scope: !2838)
!2876 = !DILocation(line: 621, column: 17, scope: !2846)
!2877 = !DILocation(line: 622, column: 22, scope: !2846)
!2878 = !DILocation(line: 622, column: 17, scope: !2846)
!2879 = !DILocation(line: 622, column: 9, scope: !2849)
!2880 = !DILocation(line: 627, column: 47, scope: !2849)
!2881 = !DILocation(line: 70, column: 22, scope: !866, inlinedAt: !2882)
!2882 = distinct !DILocation(line: 627, column: 15, scope: !2849)
!2883 = !DILocation(line: 71, column: 9, scope: !866, inlinedAt: !2882)
!2884 = !DILocation(line: 152, column: 14, scope: !2441, inlinedAt: !2885)
!2885 = distinct !DILocation(line: 628, column: 46, scope: !2851)
!2886 = !DILocation(line: 628, column: 24, scope: !2851)
!2887 = !DILocation(line: 152, column: 14, scope: !2441, inlinedAt: !2888)
!2888 = distinct !DILocation(line: 629, column: 18, scope: !2853)
!2889 = !DILocation(line: 629, column: 18, scope: !2853)
!2890 = !DILocation(line: 629, column: 9, scope: !2855)
!2891 = !DILocation(line: 631, column: 15, scope: !2855)
!2892 = !DILocation(line: 631, column: 9, scope: !2857)
!2893 = !DILocation(line: 632, column: 8, scope: !2857)
!2894 = !DILocation(line: 633, column: 16, scope: !2857)
!2895 = !DILocation(line: 675, column: 1, scope: !2851)
!2896 = !DILocation(line: 637, column: 17, scope: !2857)
!2897 = !DILocation(line: 638, column: 17, scope: !2859)
!2898 = !DILocation(line: 639, column: 5, scope: !2861)
!2899 = !DILocation(line: 675, column: 2, scope: !2838)
!2900 = !DILocation(line: 646, column: 19, scope: !2861)
!2901 = !DILocation(line: 646, column: 23, scope: !2861)
!2902 = !DILocation(line: 652, column: 17, scope: !2861)
!2903 = !DILocation(line: 646, column: 60, scope: !2861)
!2904 = !DILocation(line: 646, column: 44, scope: !2861)
!2905 = !DILocation(line: 646, column: 29, scope: !2861)
!2906 = !DILocation(line: 647, column: 17, scope: !2861)
!2907 = !DILocation(line: 646, column: 13, scope: !2861)
!2908 = !DILocation(line: 653, column: 20, scope: !2861)
!2909 = !DILocation(line: 653, column: 25, scope: !2861)
!2910 = !DILocation(line: 653, column: 62, scope: !2861)
!2911 = !DILocation(line: 653, column: 46, scope: !2861)
!2912 = !DILocation(line: 653, column: 31, scope: !2861)
!2913 = !DILocation(line: 659, column: 16, scope: !2861)
!2914 = !DILocation(line: 659, column: 21, scope: !2861)
!2915 = !DILocation(line: 773, column: 29, scope: !2143, inlinedAt: !2916)
!2916 = distinct !DILocation(line: 664, column: 23, scope: !2861)
!2917 = !DILocation(line: 664, column: 23, scope: !2861)
!2918 = !DILocation(line: 664, column: 17, scope: !2863)
!2919 = !DILocation(line: 665, column: 31, scope: !2863)
!2920 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2921)
!2921 = distinct !DILocation(line: 665, column: 23, scope: !2863)
!2922 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2921)
!2923 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2921)
!2924 = !DILocation(line: 665, column: 43, scope: !2863)
!2925 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !2926)
!2926 = distinct !DILocation(line: 665, column: 35, scope: !2863)
!2927 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !2926)
!2928 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !2926)
!2929 = !DILocation(line: 665, column: 13, scope: !2863)
!2930 = !DILocation(line: 666, column: 13, scope: !2863)
!2931 = !DILocation(line: 671, column: 5, scope: !2861)
!2932 = distinct !DISubprogram(name: "partition_in_blocks<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort19partition_in_blocks17h5bd4b73e148873e2E", scope: !1056, file: !2404, line: 302, type: !2933, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !2935)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{!9, !230, !12, !1026}
!2935 = !{!2936, !2937, !2938, !2939, !2941, !2943, !2945, !2947, !2952, !2954, !2956, !2958, !2960, !2962, !2964, !2966, !2968, !2970, !2972, !2974, !2976, !2978, !2980, !2982, !2984, !2989, !2990, !2993, !2996, !2997}
!2936 = !DILocalVariable(name: "v", arg: 1, scope: !2932, file: !2404, line: 302, type: !230)
!2937 = !DILocalVariable(name: "pivot", arg: 2, scope: !2932, file: !2404, line: 302, type: !12)
!2938 = !DILocalVariable(name: "is_less", arg: 3, scope: !2932, file: !2404, line: 302, type: !1026)
!2939 = !DILocalVariable(name: "l", scope: !2940, file: !2404, line: 323, type: !169, align: 8)
!2940 = distinct !DILexicalBlock(scope: !2932, file: !2404, line: 323, column: 5)
!2941 = !DILocalVariable(name: "block_l", scope: !2942, file: !2404, line: 324, type: !9, align: 8)
!2942 = distinct !DILexicalBlock(scope: !2940, file: !2404, line: 324, column: 5)
!2943 = !DILocalVariable(name: "start_l", scope: !2944, file: !2404, line: 325, type: !1081, align: 8)
!2944 = distinct !DILexicalBlock(scope: !2942, file: !2404, line: 325, column: 5)
!2945 = !DILocalVariable(name: "end_l", scope: !2946, file: !2404, line: 326, type: !1081, align: 8)
!2946 = distinct !DILexicalBlock(scope: !2944, file: !2404, line: 326, column: 5)
!2947 = !DILocalVariable(name: "offsets_l", scope: !2948, file: !2404, line: 327, type: !2949, align: 1)
!2948 = distinct !DILexicalBlock(scope: !2946, file: !2404, line: 327, column: 5)
!2949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !782, size: 1024, align: 8, elements: !2950)
!2950 = !{!2951}
!2951 = !DISubrange(count: 128, lowerBound: 0)
!2952 = !DILocalVariable(name: "r", scope: !2953, file: !2404, line: 331, type: !169, align: 8)
!2953 = distinct !DILexicalBlock(scope: !2948, file: !2404, line: 331, column: 5)
!2954 = !DILocalVariable(name: "block_r", scope: !2955, file: !2404, line: 332, type: !9, align: 8)
!2955 = distinct !DILexicalBlock(scope: !2953, file: !2404, line: 332, column: 5)
!2956 = !DILocalVariable(name: "start_r", scope: !2957, file: !2404, line: 333, type: !1081, align: 8)
!2957 = distinct !DILexicalBlock(scope: !2955, file: !2404, line: 333, column: 5)
!2958 = !DILocalVariable(name: "end_r", scope: !2959, file: !2404, line: 334, type: !1081, align: 8)
!2959 = distinct !DILexicalBlock(scope: !2957, file: !2404, line: 334, column: 5)
!2960 = !DILocalVariable(name: "offsets_r", scope: !2961, file: !2404, line: 335, type: !2949, align: 1)
!2961 = distinct !DILexicalBlock(scope: !2959, file: !2404, line: 335, column: 5)
!2962 = !DILocalVariable(name: "is_done", scope: !2963, file: !2404, line: 351, type: !297, align: 1)
!2963 = distinct !DILexicalBlock(scope: !2961, file: !2404, line: 351, column: 9)
!2964 = !DILocalVariable(name: "rem", scope: !2965, file: !2404, line: 355, type: !9, align: 8)
!2965 = distinct !DILexicalBlock(scope: !2963, file: !2404, line: 355, column: 13)
!2966 = !DILocalVariable(name: "elem", scope: !2967, file: !2404, line: 381, type: !169, align: 8)
!2967 = distinct !DILexicalBlock(scope: !2963, file: !2404, line: 381, column: 13)
!2968 = !DILocalVariable(name: "iter", scope: !2969, file: !2404, line: 383, type: !104, align: 8)
!2969 = distinct !DILexicalBlock(scope: !2967, file: !2404, line: 383, column: 13)
!2970 = !DILocalVariable(name: "i", scope: !2971, file: !2404, line: 383, type: !9, align: 8)
!2971 = distinct !DILexicalBlock(scope: !2969, file: !2404, line: 383, column: 33)
!2972 = !DILocalVariable(name: "elem", scope: !2973, file: !2404, line: 407, type: !169, align: 8)
!2973 = distinct !DILexicalBlock(scope: !2963, file: !2404, line: 407, column: 13)
!2974 = !DILocalVariable(name: "iter", scope: !2975, file: !2404, line: 409, type: !104, align: 8)
!2975 = distinct !DILexicalBlock(scope: !2973, file: !2404, line: 409, column: 13)
!2976 = !DILocalVariable(name: "i", scope: !2977, file: !2404, line: 409, type: !9, align: 8)
!2977 = distinct !DILexicalBlock(scope: !2975, file: !2404, line: 409, column: 33)
!2978 = !DILocalVariable(name: "count", scope: !2979, file: !2404, line: 431, type: !9, align: 8)
!2979 = distinct !DILexicalBlock(scope: !2963, file: !2404, line: 431, column: 9)
!2980 = !DILocalVariable(name: "tmp", scope: !2981, file: !2404, line: 465, type: !13, align: 8)
!2981 = distinct !DILexicalBlock(scope: !2979, file: !2404, line: 465, column: 17)
!2982 = !DILocalVariable(name: "iter", scope: !2983, file: !2404, line: 468, type: !104, align: 8)
!2983 = distinct !DILexicalBlock(scope: !2981, file: !2404, line: 468, column: 17)
!2984 = !DILocalVariable(name: "left_val", scope: !2985, file: !2404, line: 514, type: !2988, align: 8)
!2985 = !DILexicalBlockFile(scope: !2986, file: !2404, discriminator: 0)
!2986 = distinct !DILexicalBlock(scope: !2961, file: !2987, line: 39, column: 13)
!2987 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "a57e716e54c372a351d6511c0663e58d")
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2989 = !DILocalVariable(name: "right_val", scope: !2985, file: !2404, line: 514, type: !2988, align: 8)
!2990 = !DILocalVariable(name: "kind", scope: !2991, file: !2404, line: 514, type: !85, align: 1)
!2991 = !DILexicalBlockFile(scope: !2992, file: !2404, discriminator: 0)
!2992 = distinct !DILexicalBlock(scope: !2986, file: !2987, line: 41, column: 21)
!2993 = !DILocalVariable(name: "left_val", scope: !2994, file: !2404, line: 537, type: !2988, align: 8)
!2994 = !DILexicalBlockFile(scope: !2995, file: !2404, discriminator: 0)
!2995 = distinct !DILexicalBlock(scope: !2961, file: !2987, line: 39, column: 13)
!2996 = !DILocalVariable(name: "right_val", scope: !2994, file: !2404, line: 537, type: !2988, align: 8)
!2997 = !DILocalVariable(name: "kind", scope: !2998, file: !2404, line: 537, type: !85, align: 1)
!2998 = !DILexicalBlockFile(scope: !2999, file: !2404, discriminator: 0)
!2999 = distinct !DILexicalBlock(scope: !2995, file: !2987, line: 41, column: 21)
!3000 = !DILocation(line: 302, column: 30, scope: !2932)
!3001 = !DILocation(line: 302, column: 43, scope: !2932)
!3002 = !DILocation(line: 302, column: 54, scope: !2932)
!3003 = !DILocation(line: 323, column: 9, scope: !2940)
!3004 = !DILocation(line: 324, column: 9, scope: !2942)
!3005 = !DILocation(line: 325, column: 9, scope: !2944)
!3006 = !DILocation(line: 326, column: 9, scope: !2946)
!3007 = !DILocation(line: 327, column: 9, scope: !2948)
!3008 = !DILocation(line: 331, column: 9, scope: !2953)
!3009 = !DILocation(line: 332, column: 9, scope: !2955)
!3010 = !DILocation(line: 333, column: 9, scope: !2957)
!3011 = !DILocation(line: 334, column: 9, scope: !2959)
!3012 = !DILocation(line: 335, column: 9, scope: !2961)
!3013 = !DILocation(line: 355, column: 17, scope: !2965)
!3014 = !DILocation(line: 381, column: 17, scope: !2967)
!3015 = !DILocation(line: 383, column: 22, scope: !2969)
!3016 = !DILocation(line: 407, column: 17, scope: !2973)
!3017 = !DILocation(line: 409, column: 22, scope: !2975)
!3018 = !DILocation(line: 465, column: 21, scope: !2981)
!3019 = !DILocation(line: 468, column: 26, scope: !2983)
!3020 = !DILocation(line: 514, column: 9, scope: !2991)
!3021 = !DILocation(line: 537, column: 9, scope: !2998)
!3022 = !DILocation(line: 773, column: 29, scope: !2143, inlinedAt: !3023)
!3023 = distinct !DILocation(line: 323, column: 17, scope: !2932)
!3024 = !DILocation(line: 323, column: 17, scope: !2932)
!3025 = !DILocation(line: 324, column: 23, scope: !2940)
!3026 = !DILocalVariable(name: "addr", arg: 1, scope: !3027, file: !1051, line: 620, type: !9)
!3027 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h3115f64c9ba0e947E", scope: !130, file: !1051, line: 620, type: !3028, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1883, retainedNodes: !3030)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!1177, !9}
!3030 = !{!3026}
!3031 = !DILocation(line: 620, column: 29, scope: !3027, inlinedAt: !3032)
!3032 = distinct !DILocation(line: 564, column: 24, scope: !3033, inlinedAt: !3036)
!3033 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h9eeee8d7aa46c348E", scope: !130, file: !1051, line: 563, type: !3034, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!1081}
!3036 = distinct !DILocation(line: 325, column: 23, scope: !2942)
!3037 = !DILocation(line: 564, column: 5, scope: !3033, inlinedAt: !3036)
!3038 = !DILocation(line: 325, column: 23, scope: !2942)
!3039 = !DILocation(line: 620, column: 29, scope: !3027, inlinedAt: !3040)
!3040 = distinct !DILocation(line: 564, column: 24, scope: !3033, inlinedAt: !3041)
!3041 = distinct !DILocation(line: 326, column: 21, scope: !2944)
!3042 = !DILocation(line: 564, column: 5, scope: !3033, inlinedAt: !3041)
!3043 = !DILocation(line: 326, column: 21, scope: !2944)
!3044 = !DILocation(line: 315, column: 6, scope: !3045, inlinedAt: !3049)
!3045 = distinct !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17ha4e9d37f9a98b9f0E", scope: !782, file: !1461, line: 313, type: !3046, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, declaration: !3048)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{!782}
!3048 = !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17ha4e9d37f9a98b9f0E", scope: !782, file: !1461, line: 313, type: !3046, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !789)
!3049 = distinct !DILocation(line: 327, column: 26, scope: !2946)
!3050 = !DILocation(line: 327, column: 25, scope: !2946)
!3051 = !DILocation(line: 331, column: 26, scope: !2948)
!3052 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !3053)
!3053 = distinct !DILocation(line: 331, column: 26, scope: !2948)
!3054 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !3053)
!3055 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !3053)
!3056 = !DILocation(line: 332, column: 23, scope: !2953)
!3057 = !DILocation(line: 620, column: 29, scope: !3027, inlinedAt: !3058)
!3058 = distinct !DILocation(line: 564, column: 24, scope: !3033, inlinedAt: !3059)
!3059 = distinct !DILocation(line: 333, column: 23, scope: !2955)
!3060 = !DILocation(line: 564, column: 5, scope: !3033, inlinedAt: !3059)
!3061 = !DILocation(line: 333, column: 23, scope: !2955)
!3062 = !DILocation(line: 620, column: 29, scope: !3027, inlinedAt: !3063)
!3063 = distinct !DILocation(line: 564, column: 24, scope: !3033, inlinedAt: !3064)
!3064 = distinct !DILocation(line: 334, column: 21, scope: !2957)
!3065 = !DILocation(line: 564, column: 5, scope: !3033, inlinedAt: !3064)
!3066 = !DILocation(line: 334, column: 21, scope: !2957)
!3067 = !DILocation(line: 315, column: 6, scope: !3045, inlinedAt: !3068)
!3068 = distinct !DILocation(line: 335, column: 26, scope: !2959)
!3069 = !DILocation(line: 335, column: 25, scope: !2959)
!3070 = !DILocation(line: 348, column: 5, scope: !2961)
!3071 = !DILocation(line: 351, column: 29, scope: !2961)
!3072 = !DILocation(line: 351, column: 32, scope: !2961)
!3073 = !DILocation(line: 351, column: 23, scope: !2961)
!3074 = !DILocation(line: 351, column: 38, scope: !2961)
!3075 = !DILocation(line: 351, column: 13, scope: !2963)
!3076 = !DILocation(line: 353, column: 12, scope: !2963)
!3077 = !DILocation(line: 377, column: 12, scope: !2963)
!3078 = !DILocation(line: 377, column: 23, scope: !2963)
!3079 = !DILocation(line: 355, column: 33, scope: !2963)
!3080 = !DILocation(line: 355, column: 36, scope: !2963)
!3081 = !DILocation(line: 355, column: 27, scope: !2963)
!3082 = !DILocation(line: 356, column: 16, scope: !2965)
!3083 = !DILocation(line: 356, column: 26, scope: !2965)
!3084 = !DILocation(line: 356, column: 35, scope: !2965)
!3085 = !DILocation(line: 356, column: 45, scope: !2965)
!3086 = !DILocation(line: 357, column: 17, scope: !2965)
!3087 = !DILocation(line: 362, column: 16, scope: !2965)
!3088 = !DILocation(line: 362, column: 26, scope: !2965)
!3089 = !DILocation(line: 356, column: 13, scope: !2965)
!3090 = !DILocation(line: 364, column: 23, scope: !2965)
!3091 = !DILocation(line: 364, column: 33, scope: !2965)
!3092 = !DILocation(line: 363, column: 27, scope: !2965)
!3093 = !DILocation(line: 363, column: 17, scope: !2965)
!3094 = !DILocation(line: 362, column: 13, scope: !2965)
!3095 = !DILocation(line: 370, column: 27, scope: !2965)
!3096 = !DILocation(line: 370, column: 17, scope: !2965)
!3097 = !DILocation(line: 371, column: 27, scope: !2965)
!3098 = !DILocation(line: 371, column: 33, scope: !2965)
!3099 = !DILocation(line: 365, column: 27, scope: !2965)
!3100 = !DILocation(line: 365, column: 17, scope: !2965)
!3101 = !DILocation(line: 364, column: 20, scope: !2965)
!3102 = !DILocation(line: 371, column: 17, scope: !2965)
!3103 = !DILocation(line: 373, column: 13, scope: !2965)
!3104 = !DILocation(line: 374, column: 13, scope: !2965)
!3105 = !DILocation(line: 373, column: 27, scope: !2965)
!3106 = !DILocation(line: 373, column: 47, scope: !2965)
!3107 = !DILocation(line: 374, column: 33, scope: !2965)
!3108 = !DILocation(line: 374, column: 36, scope: !2965)
!3109 = !DILocation(line: 374, column: 27, scope: !2965)
!3110 = !DILocation(line: 374, column: 42, scope: !2965)
!3111 = !DILocation(line: 374, column: 52, scope: !2965)
!3112 = !DILocation(line: 403, column: 12, scope: !2963)
!3113 = !DILocation(line: 403, column: 23, scope: !2963)
!3114 = !DILocalVariable(name: "this", arg: 1, scope: !3115, file: !1461, line: 1013, type: !3118)
!3115 = distinct !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17h3dbbd77aeba92529E", scope: !782, file: !1461, line: 1013, type: !3116, scopeLine: 1013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, declaration: !3123, retainedNodes: !3124)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{!1081, !3118}
!3118 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !3119, templateParams: !24, identifier: "6f424b9aca0f2bb57fe4953f6e039ee2")
!3119 = !{!3120, !3122}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3118, file: !2, baseType: !3121, size: 64, align: 64)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64, align: 64, dwarfAddressSpace: 0)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3118, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3123 = !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17h3dbbd77aeba92529E", scope: !782, file: !1461, line: 1013, type: !3116, scopeLine: 1013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !789)
!3124 = !{!3114}
!3125 = !DILocation(line: 1013, column: 35, scope: !3115, inlinedAt: !3126)
!3126 = distinct !DILocation(line: 379, column: 23, scope: !2963)
!3127 = !DILocalVariable(name: "self", arg: 1, scope: !3128, file: !2098, line: 773, type: !3118)
!3128 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha76d16a0044cb471E", scope: !1029, file: !2098, line: 773, type: !3129, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !798, retainedNodes: !3131)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!1253, !3118}
!3131 = !{!3127}
!3132 = !DILocation(line: 773, column: 29, scope: !3128, inlinedAt: !3133)
!3133 = distinct !DILocation(line: 1014, column: 9, scope: !3115, inlinedAt: !3126)
!3134 = !DILocation(line: 379, column: 13, scope: !2963)
!3135 = !DILocation(line: 380, column: 21, scope: !2963)
!3136 = !DILocation(line: 380, column: 13, scope: !2963)
!3137 = !DILocation(line: 381, column: 28, scope: !2963)
!3138 = !DILocation(line: 383, column: 25, scope: !2967)
!3139 = !DILocation(line: 383, column: 22, scope: !2967)
!3140 = !DILocation(line: 383, column: 13, scope: !2969)
!3141 = !DILocation(line: 383, column: 17, scope: !2969)
!3142 = !DILocation(line: 383, column: 17, scope: !2971)
!3143 = !DILocation(line: 396, column: 21, scope: !2971)
!3144 = !DILocation(line: 397, column: 29, scope: !2971)
!3145 = !DILocation(line: 397, column: 48, scope: !2971)
!3146 = !DILocation(line: 397, column: 40, scope: !2971)
!3147 = !DILocation(line: 397, column: 39, scope: !2971)
!3148 = !DILocalVariable(name: "self", arg: 1, scope: !3149, file: !164, line: 1040, type: !1081)
!3149 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0049a819895f82dcE", scope: !175, file: !164, line: 1040, type: !3150, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, retainedNodes: !3152)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{!1081, !1081, !9}
!3152 = !{!3148, !3153}
!3153 = !DILocalVariable(name: "count", arg: 2, scope: !3149, file: !164, line: 1040, type: !9)
!3154 = !DILocation(line: 1040, column: 29, scope: !3149, inlinedAt: !3155)
!3155 = distinct !DILocation(line: 397, column: 29, scope: !2971)
!3156 = !DILocation(line: 1040, column: 35, scope: !3149, inlinedAt: !3155)
!3157 = !DILocation(line: 1045, column: 18, scope: !3149, inlinedAt: !3155)
!3158 = !DILocation(line: 397, column: 21, scope: !2971)
!3159 = !DILocation(line: 398, column: 28, scope: !2971)
!3160 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !3161)
!3161 = distinct !DILocation(line: 398, column: 28, scope: !2971)
!3162 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !3161)
!3163 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !3161)
!3164 = !DILocation(line: 398, column: 21, scope: !2971)
!3165 = !DILocation(line: 431, column: 36, scope: !2963)
!3166 = !DILocation(line: 431, column: 45, scope: !2963)
!3167 = !DILocation(line: 431, column: 30, scope: !2963)
!3168 = !DILocation(line: 431, column: 59, scope: !2963)
!3169 = !DILocation(line: 431, column: 68, scope: !2963)
!3170 = !DILocation(line: 431, column: 53, scope: !2963)
!3171 = !DILocation(line: 431, column: 21, scope: !2963)
!3172 = !DILocation(line: 431, column: 13, scope: !2979)
!3173 = !DILocation(line: 433, column: 12, scope: !2979)
!3174 = !DILocation(line: 1013, column: 35, scope: !3115, inlinedAt: !3175)
!3175 = distinct !DILocation(line: 405, column: 23, scope: !2963)
!3176 = !DILocation(line: 773, column: 29, scope: !3128, inlinedAt: !3177)
!3177 = distinct !DILocation(line: 1014, column: 9, scope: !3115, inlinedAt: !3175)
!3178 = !DILocation(line: 405, column: 13, scope: !2963)
!3179 = !DILocation(line: 406, column: 21, scope: !2963)
!3180 = !DILocation(line: 406, column: 13, scope: !2963)
!3181 = !DILocation(line: 407, column: 28, scope: !2963)
!3182 = !DILocation(line: 409, column: 25, scope: !2973)
!3183 = !DILocation(line: 409, column: 22, scope: !2973)
!3184 = !DILocation(line: 409, column: 13, scope: !2975)
!3185 = !DILocation(line: 409, column: 17, scope: !2975)
!3186 = !DILocation(line: 409, column: 17, scope: !2977)
!3187 = !DILocation(line: 423, column: 28, scope: !2977)
!3188 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !3189)
!3189 = distinct !DILocation(line: 423, column: 28, scope: !2977)
!3190 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !3189)
!3191 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !3192)
!3192 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3189)
!3193 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !3192)
!3194 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !3192)
!3195 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3189)
!3196 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !3189)
!3197 = !DILocation(line: 423, column: 21, scope: !2977)
!3198 = !DILocation(line: 424, column: 21, scope: !2977)
!3199 = !DILocation(line: 425, column: 29, scope: !2977)
!3200 = !DILocation(line: 425, column: 47, scope: !2977)
!3201 = !DILocation(line: 425, column: 39, scope: !2977)
!3202 = !DILocation(line: 1040, column: 29, scope: !3149, inlinedAt: !3203)
!3203 = distinct !DILocation(line: 425, column: 29, scope: !2977)
!3204 = !DILocation(line: 1040, column: 35, scope: !3149, inlinedAt: !3203)
!3205 = !DILocation(line: 1045, column: 18, scope: !3149, inlinedAt: !3203)
!3206 = !DILocation(line: 425, column: 21, scope: !2977)
!3207 = !DILocation(line: 482, column: 12, scope: !2979)
!3208 = !DILocation(line: 482, column: 23, scope: !2979)
!3209 = !DILocation(line: 465, column: 37, scope: !2979)
!3210 = !DILocalVariable(name: "small", arg: 1, scope: !3211, file: !3212, line: 52, type: !72)
!3211 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h724492cc1b6d57a5E", scope: !3213, file: !3212, line: 52, type: !3216, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !3218)
!3212 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "cbbe1f69975fa5a6d42c09b34b7ac0b1")
!3213 = !DINamespace(name: "{impl#44}", scope: !3214)
!3214 = !DINamespace(name: "num", scope: !3215)
!3215 = !DINamespace(name: "convert", scope: !71)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!9, !72}
!3218 = !{!3210}
!3219 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3220)
!3220 = distinct !DILocation(line: 465, column: 37, scope: !2979)
!3221 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3220)
!3222 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !3223)
!3223 = distinct !DILocation(line: 465, column: 37, scope: !2979)
!3224 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !3223)
!3225 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !3223)
!3226 = !DILocation(line: 465, column: 27, scope: !2979)
!3227 = !DILocation(line: 466, column: 42, scope: !2981)
!3228 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3229)
!3229 = distinct !DILocation(line: 466, column: 42, scope: !2981)
!3230 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3229)
!3231 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !3232)
!3232 = distinct !DILocation(line: 466, column: 42, scope: !2981)
!3233 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !3232)
!3234 = !DILocation(line: 1137, column: 34, scope: !2267, inlinedAt: !3232)
!3235 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !3236)
!3236 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3232)
!3237 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !3236)
!3238 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !3236)
!3239 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3232)
!3240 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !3232)
!3241 = !DILocation(line: 466, column: 52, scope: !2981)
!3242 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3243)
!3243 = distinct !DILocation(line: 466, column: 52, scope: !2981)
!3244 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3243)
!3245 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !3246)
!3246 = distinct !DILocation(line: 466, column: 52, scope: !2981)
!3247 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !3246)
!3248 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !3246)
!3249 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !3250)
!3250 = distinct !DILocation(line: 466, column: 17, scope: !2981)
!3251 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !3250)
!3252 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !3250)
!3253 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !3250)
!3254 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !3255)
!3255 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !3250)
!3256 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !3255)
!3257 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !3255)
!3258 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !3255)
!3259 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !3255)
!3260 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !3250)
!3261 = !DILocation(line: 468, column: 26, scope: !2981)
!3262 = !DILocation(line: 468, column: 17, scope: !2983)
!3263 = !DILocation(line: 475, column: 48, scope: !2981)
!3264 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3265)
!3265 = distinct !DILocation(line: 475, column: 48, scope: !2981)
!3266 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3265)
!3267 = !DILocation(line: 469, column: 31, scope: !2983)
!3268 = !DILocation(line: 1040, column: 29, scope: !3149, inlinedAt: !3269)
!3269 = distinct !DILocation(line: 469, column: 31, scope: !2983)
!3270 = !DILocation(line: 1040, column: 35, scope: !3149, inlinedAt: !3269)
!3271 = !DILocation(line: 1045, column: 18, scope: !3149, inlinedAt: !3269)
!3272 = !DILocation(line: 469, column: 21, scope: !2983)
!3273 = !DILocation(line: 470, column: 46, scope: !2983)
!3274 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3275)
!3275 = distinct !DILocation(line: 470, column: 46, scope: !2983)
!3276 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3275)
!3277 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !3278)
!3278 = distinct !DILocation(line: 470, column: 46, scope: !2983)
!3279 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !3278)
!3280 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !3278)
!3281 = !DILocation(line: 470, column: 55, scope: !2983)
!3282 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3283)
!3283 = distinct !DILocation(line: 470, column: 55, scope: !2983)
!3284 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3283)
!3285 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !3286)
!3286 = distinct !DILocation(line: 475, column: 48, scope: !2981)
!3287 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !3286)
!3288 = !DILocation(line: 1137, column: 34, scope: !2267, inlinedAt: !3286)
!3289 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !3290)
!3290 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3286)
!3291 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !3290)
!3292 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !3290)
!3293 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3286)
!3294 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !3286)
!3295 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !3296)
!3296 = distinct !DILocation(line: 475, column: 17, scope: !2981)
!3297 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !3296)
!3298 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !3296)
!3299 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !3296)
!3300 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !3301)
!3301 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !3296)
!3302 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !3301)
!3303 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !3301)
!3304 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !3301)
!3305 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !3301)
!3306 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !3296)
!3307 = !DILocation(line: 476, column: 29, scope: !2981)
!3308 = !DILocation(line: 476, column: 17, scope: !2981)
!3309 = !DILocation(line: 477, column: 27, scope: !2981)
!3310 = !DILocation(line: 1040, column: 29, scope: !3149, inlinedAt: !3311)
!3311 = distinct !DILocation(line: 477, column: 27, scope: !2981)
!3312 = !DILocation(line: 1040, column: 35, scope: !3149, inlinedAt: !3311)
!3313 = !DILocation(line: 1045, column: 18, scope: !3149, inlinedAt: !3311)
!3314 = !DILocation(line: 477, column: 17, scope: !2981)
!3315 = !DILocation(line: 478, column: 27, scope: !2981)
!3316 = !DILocation(line: 1040, column: 29, scope: !3149, inlinedAt: !3317)
!3317 = distinct !DILocation(line: 478, column: 27, scope: !2981)
!3318 = !DILocation(line: 1040, column: 35, scope: !3149, inlinedAt: !3317)
!3319 = !DILocation(line: 1045, column: 18, scope: !3149, inlinedAt: !3317)
!3320 = !DILocation(line: 478, column: 17, scope: !2981)
!3321 = !DILocation(line: 433, column: 9, scope: !2979)
!3322 = !DILocation(line: 494, column: 12, scope: !2979)
!3323 = !DILocation(line: 494, column: 23, scope: !2979)
!3324 = !DILocation(line: 491, column: 26, scope: !2979)
!3325 = !DILocation(line: 491, column: 32, scope: !2979)
!3326 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !3327)
!3327 = distinct !DILocation(line: 491, column: 26, scope: !2979)
!3328 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !3327)
!3329 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !3327)
!3330 = !DILocation(line: 491, column: 13, scope: !2979)
!3331 = !DILocation(line: 482, column: 9, scope: !2979)
!3332 = !DILocation(line: 502, column: 12, scope: !2979)
!3333 = !DILocation(line: 499, column: 26, scope: !2979)
!3334 = !DILocation(line: 499, column: 32, scope: !2979)
!3335 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !3336)
!3336 = distinct !DILocation(line: 499, column: 26, scope: !2979)
!3337 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !3336)
!3338 = !DILocation(line: 1137, column: 34, scope: !2267, inlinedAt: !3336)
!3339 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !3340)
!3340 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3336)
!3341 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !3340)
!3342 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !3340)
!3343 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3336)
!3344 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !3336)
!3345 = !DILocation(line: 499, column: 13, scope: !2979)
!3346 = !DILocation(line: 494, column: 9, scope: !2979)
!3347 = !DILocation(line: 511, column: 8, scope: !2961)
!3348 = !DILocation(line: 511, column: 18, scope: !2961)
!3349 = !DILocation(line: 534, column: 15, scope: !2961)
!3350 = !DILocation(line: 534, column: 25, scope: !2961)
!3351 = !DILocation(line: 514, column: 9, scope: !2961)
!3352 = !DILocation(line: 773, column: 29, scope: !2143, inlinedAt: !3353)
!3353 = distinct !DILocation(line: 549, column: 15, scope: !2961)
!3354 = !DILocation(line: 549, column: 31, scope: !2961)
!3355 = !DILocation(line: 549, column: 9, scope: !2961)
!3356 = !DILocation(line: 537, column: 9, scope: !2961)
!3357 = !DILocation(line: 551, column: 2, scope: !2932)
!3358 = !DILocation(line: 538, column: 15, scope: !2961)
!3359 = !DILocation(line: 538, column: 25, scope: !2961)
!3360 = !DILocation(line: 537, column: 32, scope: !2961)
!3361 = !DILocation(line: 537, column: 35, scope: !2961)
!3362 = !DILocation(line: 537, column: 26, scope: !2961)
!3363 = !DILocation(line: 537, column: 9, scope: !2994)
!3364 = !{i8 0, i8 3}
!3365 = !DILocation(line: 773, column: 29, scope: !2143, inlinedAt: !3366)
!3366 = distinct !DILocation(line: 546, column: 15, scope: !2961)
!3367 = !DILocation(line: 546, column: 31, scope: !2961)
!3368 = !DILocation(line: 546, column: 9, scope: !2961)
!3369 = !DILocation(line: 541, column: 25, scope: !2961)
!3370 = !DILocalVariable(name: "self", arg: 1, scope: !3371, file: !164, line: 1126, type: !1081)
!3371 = distinct !DISubprogram(name: "sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17ha9274fb178813548E", scope: !175, file: !164, line: 1126, type: !3150, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, retainedNodes: !3372)
!3372 = !{!3370, !3373}
!3373 = !DILocalVariable(name: "count", arg: 2, scope: !3371, file: !164, line: 1126, type: !9)
!3374 = !DILocation(line: 1126, column: 29, scope: !3371, inlinedAt: !3375)
!3375 = distinct !DILocation(line: 541, column: 25, scope: !2961)
!3376 = !DILocation(line: 1126, column: 35, scope: !3371, inlinedAt: !3375)
!3377 = !DILocalVariable(name: "self", arg: 1, scope: !3378, file: !164, line: 477, type: !1081)
!3378 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h9aa67e702a08cd8bE", scope: !175, file: !164, line: 477, type: !3379, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, retainedNodes: !3381)
!3379 = !DISubroutineType(types: !3380)
!3380 = !{!1081, !1081, !2278}
!3381 = !{!3377, !3382}
!3382 = !DILocalVariable(name: "count", arg: 2, scope: !3378, file: !164, line: 477, type: !2278)
!3383 = !DILocation(line: 477, column: 32, scope: !3378, inlinedAt: !3384)
!3384 = distinct !DILocation(line: 1137, column: 22, scope: !3371, inlinedAt: !3375)
!3385 = !DILocation(line: 477, column: 38, scope: !3378, inlinedAt: !3384)
!3386 = !DILocation(line: 484, column: 18, scope: !3378, inlinedAt: !3384)
!3387 = !DILocation(line: 1137, column: 22, scope: !3371, inlinedAt: !3375)
!3388 = !DILocation(line: 1139, column: 6, scope: !3371, inlinedAt: !3375)
!3389 = !DILocation(line: 541, column: 17, scope: !2961)
!3390 = !DILocation(line: 542, column: 27, scope: !2961)
!3391 = !DILocation(line: 542, column: 30, scope: !2961)
!3392 = !DILocation(line: 542, column: 48, scope: !2961)
!3393 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3394)
!3394 = distinct !DILocation(line: 542, column: 36, scope: !2961)
!3395 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3394)
!3396 = !DILocation(line: 542, column: 36, scope: !2961)
!3397 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !3398)
!3398 = distinct !DILocation(line: 542, column: 30, scope: !2961)
!3399 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !3398)
!3400 = !DILocation(line: 1137, column: 34, scope: !2267, inlinedAt: !3398)
!3401 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !3402)
!3402 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3398)
!3403 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !3402)
!3404 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !3402)
!3405 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3398)
!3406 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !3398)
!3407 = !DILocation(line: 542, column: 17, scope: !2961)
!3408 = !DILocation(line: 543, column: 21, scope: !2961)
!3409 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !3410)
!3410 = distinct !DILocation(line: 543, column: 21, scope: !2961)
!3411 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !3410)
!3412 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !3410)
!3413 = !DILocation(line: 543, column: 17, scope: !2961)
!3414 = !DILocation(line: 538, column: 9, scope: !2961)
!3415 = !DILocation(line: 515, column: 15, scope: !2961)
!3416 = !DILocation(line: 515, column: 25, scope: !2961)
!3417 = !DILocation(line: 514, column: 32, scope: !2961)
!3418 = !DILocation(line: 514, column: 35, scope: !2961)
!3419 = !DILocation(line: 514, column: 26, scope: !2961)
!3420 = !DILocation(line: 514, column: 9, scope: !2985)
!3421 = !DILocation(line: 773, column: 29, scope: !2143, inlinedAt: !3422)
!3422 = distinct !DILocation(line: 533, column: 15, scope: !2961)
!3423 = !DILocation(line: 533, column: 31, scope: !2961)
!3424 = !DILocation(line: 533, column: 9, scope: !2961)
!3425 = !DILocation(line: 528, column: 25, scope: !2961)
!3426 = !DILocation(line: 1126, column: 29, scope: !3371, inlinedAt: !3427)
!3427 = distinct !DILocation(line: 528, column: 25, scope: !2961)
!3428 = !DILocation(line: 1126, column: 35, scope: !3371, inlinedAt: !3427)
!3429 = !DILocation(line: 477, column: 32, scope: !3378, inlinedAt: !3430)
!3430 = distinct !DILocation(line: 1137, column: 22, scope: !3371, inlinedAt: !3427)
!3431 = !DILocation(line: 477, column: 38, scope: !3378, inlinedAt: !3430)
!3432 = !DILocation(line: 484, column: 18, scope: !3378, inlinedAt: !3430)
!3433 = !DILocation(line: 1137, column: 22, scope: !3371, inlinedAt: !3427)
!3434 = !DILocation(line: 1139, column: 6, scope: !3371, inlinedAt: !3427)
!3435 = !DILocation(line: 528, column: 17, scope: !2961)
!3436 = !DILocation(line: 529, column: 27, scope: !2961)
!3437 = !DILocation(line: 529, column: 45, scope: !2961)
!3438 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3439)
!3439 = distinct !DILocation(line: 529, column: 33, scope: !2961)
!3440 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3439)
!3441 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !3442)
!3442 = distinct !DILocation(line: 529, column: 27, scope: !2961)
!3443 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !3442)
!3444 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !3442)
!3445 = !DILocation(line: 529, column: 55, scope: !2961)
!3446 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !3447)
!3447 = distinct !DILocation(line: 529, column: 55, scope: !2961)
!3448 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !3447)
!3449 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !3450)
!3450 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3447)
!3451 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !3450)
!3452 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !3450)
!3453 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3447)
!3454 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !3447)
!3455 = !DILocation(line: 529, column: 17, scope: !2961)
!3456 = !DILocation(line: 530, column: 21, scope: !2961)
!3457 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !3458)
!3458 = distinct !DILocation(line: 530, column: 21, scope: !2961)
!3459 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !3458)
!3460 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !3461)
!3461 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3458)
!3462 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !3461)
!3463 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !3461)
!3464 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3458)
!3465 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !3458)
!3466 = !DILocation(line: 530, column: 17, scope: !2961)
!3467 = !DILocation(line: 515, column: 9, scope: !2961)
!3468 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !3469)
!3469 = distinct !DILocation(line: 470, column: 55, scope: !2983)
!3470 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !3469)
!3471 = !DILocation(line: 1137, column: 34, scope: !2267, inlinedAt: !3469)
!3472 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !3473)
!3473 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3469)
!3474 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !3473)
!3475 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !3473)
!3476 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3469)
!3477 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !3469)
!3478 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !3479)
!3479 = distinct !DILocation(line: 470, column: 21, scope: !2983)
!3480 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !3479)
!3481 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !3479)
!3482 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !3479)
!3483 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !3484)
!3484 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !3479)
!3485 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !3484)
!3486 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !3484)
!3487 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !3484)
!3488 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !3484)
!3489 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !3479)
!3490 = !DILocation(line: 471, column: 31, scope: !2983)
!3491 = !DILocation(line: 1040, column: 29, scope: !3149, inlinedAt: !3492)
!3492 = distinct !DILocation(line: 471, column: 31, scope: !2983)
!3493 = !DILocation(line: 1040, column: 35, scope: !3149, inlinedAt: !3492)
!3494 = !DILocation(line: 1045, column: 18, scope: !3149, inlinedAt: !3492)
!3495 = !DILocation(line: 471, column: 21, scope: !2983)
!3496 = !DILocation(line: 472, column: 46, scope: !2983)
!3497 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3498)
!3498 = distinct !DILocation(line: 472, column: 46, scope: !2983)
!3499 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3498)
!3500 = !DILocation(line: 1126, column: 29, scope: !2267, inlinedAt: !3501)
!3501 = distinct !DILocation(line: 472, column: 46, scope: !2983)
!3502 = !DILocation(line: 1126, column: 35, scope: !2267, inlinedAt: !3501)
!3503 = !DILocation(line: 1137, column: 34, scope: !2267, inlinedAt: !3501)
!3504 = !DILocation(line: 477, column: 32, scope: !2275, inlinedAt: !3505)
!3505 = distinct !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3501)
!3506 = !DILocation(line: 477, column: 38, scope: !2275, inlinedAt: !3505)
!3507 = !DILocation(line: 484, column: 18, scope: !2275, inlinedAt: !3505)
!3508 = !DILocation(line: 1137, column: 22, scope: !2267, inlinedAt: !3501)
!3509 = !DILocation(line: 1139, column: 6, scope: !2267, inlinedAt: !3501)
!3510 = !DILocation(line: 472, column: 56, scope: !2983)
!3511 = !DILocation(line: 52, column: 21, scope: !3211, inlinedAt: !3512)
!3512 = distinct !DILocation(line: 472, column: 56, scope: !2983)
!3513 = !DILocation(line: 53, column: 17, scope: !3211, inlinedAt: !3512)
!3514 = !DILocation(line: 1040, column: 29, scope: !174, inlinedAt: !3515)
!3515 = distinct !DILocation(line: 472, column: 56, scope: !2983)
!3516 = !DILocation(line: 1040, column: 35, scope: !174, inlinedAt: !3515)
!3517 = !DILocation(line: 1045, column: 18, scope: !174, inlinedAt: !3515)
!3518 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !3519)
!3519 = distinct !DILocation(line: 472, column: 21, scope: !2983)
!3520 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !3519)
!3521 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !3519)
!3522 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !3519)
!3523 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !3524)
!3524 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !3519)
!3525 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !3524)
!3526 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !3524)
!3527 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !3524)
!3528 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !3524)
!3529 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !3519)
!3530 = !DILocation(line: 472, column: 21, scope: !2983)
!3531 = distinct !DISubprogram(name: "width<u8>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h3ba8832fab2332aeE", scope: !3532, file: !2404, line: 341, type: !3533, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !789, retainedNodes: !3535)
!3532 = !DINamespace(name: "partition_in_blocks", scope: !1056)
!3533 = !DISubroutineType(types: !3534)
!3534 = !{!9, !1081, !1081}
!3535 = !{!3536, !3537}
!3536 = !DILocalVariable(name: "l", arg: 1, scope: !3531, file: !2404, line: 341, type: !1081)
!3537 = !DILocalVariable(name: "r", arg: 2, scope: !3531, file: !2404, line: 341, type: !1081)
!3538 = !DILocation(line: 341, column: 17, scope: !3531)
!3539 = !DILocation(line: 341, column: 28, scope: !3531)
!3540 = !DILocation(line: 342, column: 17, scope: !3531)
!3541 = !DILocation(line: 342, column: 9, scope: !3531)
!3542 = !DILocation(line: 213, column: 17, scope: !1750, inlinedAt: !3543)
!3543 = distinct !DILocation(line: 345, column: 10, scope: !3531)
!3544 = !DILocation(line: 60, column: 26, scope: !1757, inlinedAt: !3545)
!3545 = distinct !DILocation(line: 217, column: 33, scope: !1750, inlinedAt: !3543)
!3546 = !DILocation(line: 217, column: 18, scope: !1750, inlinedAt: !3543)
!3547 = !DILocation(line: 213, column: 17, scope: !1750, inlinedAt: !3548)
!3548 = distinct !DILocation(line: 345, column: 21, scope: !3531)
!3549 = !DILocation(line: 60, column: 26, scope: !1757, inlinedAt: !3550)
!3550 = distinct !DILocation(line: 217, column: 33, scope: !1750, inlinedAt: !3548)
!3551 = !DILocation(line: 217, column: 18, scope: !1750, inlinedAt: !3548)
!3552 = !DILocation(line: 345, column: 9, scope: !3531)
!3553 = !DILocation(line: 346, column: 6, scope: !3531)
!3554 = distinct !DISubprogram(name: "width<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h589266453c96db52E", scope: !3532, file: !2404, line: 341, type: !3555, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !3557)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{!9, !169, !169}
!3557 = !{!3558, !3559}
!3558 = !DILocalVariable(name: "l", arg: 1, scope: !3554, file: !2404, line: 341, type: !169)
!3559 = !DILocalVariable(name: "r", arg: 2, scope: !3554, file: !2404, line: 341, type: !169)
!3560 = !DILocation(line: 341, column: 17, scope: !3554)
!3561 = !DILocation(line: 341, column: 28, scope: !3554)
!3562 = !DILocation(line: 342, column: 17, scope: !3554)
!3563 = !DILocation(line: 342, column: 9, scope: !3554)
!3564 = !DILocalVariable(name: "self", arg: 1, scope: !3565, file: !164, line: 213, type: !169)
!3565 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17ha2aca210d589e33fE", scope: !175, file: !164, line: 213, type: !3566, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !3568)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!9, !169}
!3568 = !{!3564}
!3569 = !DILocation(line: 213, column: 17, scope: !3565, inlinedAt: !3570)
!3570 = distinct !DILocation(line: 345, column: 10, scope: !3554)
!3571 = !DILocation(line: 60, column: 26, scope: !1174, inlinedAt: !3572)
!3572 = distinct !DILocation(line: 217, column: 33, scope: !3565, inlinedAt: !3570)
!3573 = !DILocation(line: 217, column: 18, scope: !3565, inlinedAt: !3570)
!3574 = !DILocation(line: 213, column: 17, scope: !3565, inlinedAt: !3575)
!3575 = distinct !DILocation(line: 345, column: 21, scope: !3554)
!3576 = !DILocation(line: 60, column: 26, scope: !1174, inlinedAt: !3577)
!3577 = distinct !DILocation(line: 217, column: 33, scope: !3565, inlinedAt: !3575)
!3578 = !DILocation(line: 217, column: 18, scope: !3565, inlinedAt: !3575)
!3579 = !DILocation(line: 345, column: 9, scope: !3554)
!3580 = !DILocation(line: 346, column: 6, scope: !3554)
!3581 = distinct !DISubprogram(name: "partial_insertion_sort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort22partial_insertion_sort17he4be3c0e327c0313E", scope: !1056, file: !2404, line: 198, type: !3582, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !3584)
!3582 = !DISubroutineType(types: !3583)
!3583 = !{!297, !230, !1026}
!3584 = !{!3585, !3586, !3587, !3589, !3591}
!3585 = !DILocalVariable(name: "v", arg: 1, scope: !3581, file: !2404, line: 198, type: !230)
!3586 = !DILocalVariable(name: "is_less", arg: 2, scope: !3581, file: !2404, line: 198, type: !1026)
!3587 = !DILocalVariable(name: "len", scope: !3588, file: !2404, line: 207, type: !9, align: 8)
!3588 = distinct !DILexicalBlock(scope: !3581, file: !2404, line: 207, column: 5)
!3589 = !DILocalVariable(name: "i", scope: !3590, file: !2404, line: 208, type: !9, align: 8)
!3590 = distinct !DILexicalBlock(scope: !3588, file: !2404, line: 208, column: 5)
!3591 = !DILocalVariable(name: "iter", scope: !3592, file: !2404, line: 210, type: !104, align: 8)
!3592 = distinct !DILexicalBlock(scope: !3590, file: !2404, line: 210, column: 5)
!3593 = !DILocation(line: 198, column: 33, scope: !3581)
!3594 = !DILocation(line: 198, column: 46, scope: !3581)
!3595 = !DILocation(line: 208, column: 9, scope: !3590)
!3596 = !DILocation(line: 210, column: 14, scope: !3592)
!3597 = !DILocation(line: 207, column: 15, scope: !3581)
!3598 = !DILocation(line: 207, column: 9, scope: !3588)
!3599 = !DILocation(line: 208, column: 17, scope: !3588)
!3600 = !DILocation(line: 210, column: 14, scope: !3590)
!3601 = !DILocation(line: 210, column: 5, scope: !3592)
!3602 = !DILocation(line: 243, column: 5, scope: !3590)
!3603 = !DILocation(line: 244, column: 2, scope: !3581)
!3604 = !DILocation(line: 215, column: 19, scope: !3592)
!3605 = !DILocation(line: 221, column: 12, scope: !3592)
!3606 = !DILocation(line: 215, column: 55, scope: !3592)
!3607 = !DILocation(line: 215, column: 39, scope: !3592)
!3608 = !DILocation(line: 215, column: 75, scope: !3592)
!3609 = !DILocation(line: 215, column: 59, scope: !3592)
!3610 = !DILocation(line: 215, column: 31, scope: !3592)
!3611 = !DILocation(line: 216, column: 17, scope: !3592)
!3612 = !DILocation(line: 215, column: 13, scope: !3592)
!3613 = !DILocation(line: 226, column: 12, scope: !3592)
!3614 = !DILocation(line: 222, column: 20, scope: !3592)
!3615 = !DILocation(line: 1, column: 1, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3592, file: !3617, discriminator: 0)
!3617 = !DIFile(filename: "src/lib.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "ef3e180ca1e13bae3e0904cdd600c8e7")
!3618 = !DILocation(line: 231, column: 16, scope: !3592)
!3619 = !DILocation(line: 227, column: 20, scope: !3592)
!3620 = !DILocation(line: 231, column: 23, scope: !3592)
!3621 = !DILocation(line: 231, column: 9, scope: !3592)
!3622 = !DILocation(line: 233, column: 12, scope: !3592)
!3623 = !DILocation(line: 235, column: 48, scope: !3592)
!3624 = !DILocation(line: 235, column: 46, scope: !3592)
!3625 = !DILocation(line: 235, column: 45, scope: !3592)
!3626 = !DILocation(line: 235, column: 52, scope: !3592)
!3627 = !DILocation(line: 235, column: 13, scope: !3592)
!3628 = !DILocation(line: 238, column: 49, scope: !3592)
!3629 = !DILocation(line: 238, column: 47, scope: !3592)
!3630 = !DILocation(line: 238, column: 46, scope: !3592)
!3631 = !DILocation(line: 238, column: 13, scope: !3592)
!3632 = distinct !DISubprogram(name: "insertion_sort_shift_left<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort25insertion_sort_shift_left17h9bb1a8fb9b8d0a1bE", scope: !1056, file: !2404, line: 148, type: !3633, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !3635)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{null, !230, !9, !1026}
!3635 = !{!3636, !3637, !3638, !3639, !3641, !3643}
!3636 = !DILocalVariable(name: "v", arg: 1, scope: !3632, file: !2404, line: 148, type: !230)
!3637 = !DILocalVariable(name: "offset", arg: 2, scope: !3632, file: !2404, line: 148, type: !9)
!3638 = !DILocalVariable(name: "is_less", arg: 3, scope: !3632, file: !2404, line: 148, type: !1026)
!3639 = !DILocalVariable(name: "len", scope: !3640, file: !2404, line: 152, type: !9, align: 8)
!3640 = distinct !DILexicalBlock(scope: !3632, file: !2404, line: 152, column: 5)
!3641 = !DILocalVariable(name: "iter", scope: !3642, file: !2404, line: 158, type: !104, align: 8)
!3642 = distinct !DILexicalBlock(scope: !3640, file: !2404, line: 158, column: 5)
!3643 = !DILocalVariable(name: "i", scope: !3644, file: !2404, line: 158, type: !9, align: 8)
!3644 = distinct !DILexicalBlock(scope: !3642, file: !2404, line: 158, column: 26)
!3645 = !DILocation(line: 148, column: 47, scope: !3632)
!3646 = !DILocation(line: 148, column: 60, scope: !3632)
!3647 = !DILocation(line: 148, column: 75, scope: !3632)
!3648 = !DILocation(line: 158, column: 14, scope: !3642)
!3649 = !DILocation(line: 152, column: 15, scope: !3632)
!3650 = !DILocation(line: 152, column: 9, scope: !3640)
!3651 = !DILocation(line: 155, column: 13, scope: !3640)
!3652 = !DILocation(line: 155, column: 5, scope: !3640)
!3653 = !DILocation(line: 155, column: 28, scope: !3640)
!3654 = !DILocation(line: 158, column: 14, scope: !3640)
!3655 = !DILocation(line: 158, column: 5, scope: !3642)
!3656 = !DILocation(line: 166, column: 2, scope: !3632)
!3657 = !DILocation(line: 158, column: 9, scope: !3642)
!3658 = !DILocation(line: 158, column: 9, scope: !3644)
!3659 = !DILocation(line: 163, column: 32, scope: !3644)
!3660 = !DILocation(line: 163, column: 31, scope: !3644)
!3661 = !DILocation(line: 163, column: 13, scope: !3644)
!3662 = distinct !DISubprogram(name: "insertion_sort_shift_right<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort26insertion_sort_shift_right17h041f6269647b0c40E", scope: !1056, file: !2404, line: 173, type: !3633, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !3663)
!3663 = !{!3664, !3665, !3666, !3667, !3669, !3671}
!3664 = !DILocalVariable(name: "v", arg: 1, scope: !3662, file: !2404, line: 173, type: !230)
!3665 = !DILocalVariable(name: "offset", arg: 2, scope: !3662, file: !2404, line: 173, type: !9)
!3666 = !DILocalVariable(name: "is_less", arg: 3, scope: !3662, file: !2404, line: 173, type: !1026)
!3667 = !DILocalVariable(name: "len", scope: !3668, file: !2404, line: 177, type: !9, align: 8)
!3668 = distinct !DILexicalBlock(scope: !3662, file: !2404, line: 177, column: 5)
!3669 = !DILocalVariable(name: "iter", scope: !3670, file: !2404, line: 183, type: !2525, align: 8)
!3670 = distinct !DILexicalBlock(scope: !3668, file: !2404, line: 183, column: 5)
!3671 = !DILocalVariable(name: "i", scope: !3672, file: !2404, line: 183, type: !9, align: 8)
!3672 = distinct !DILexicalBlock(scope: !3670, file: !2404, line: 183, column: 32)
!3673 = !DILocation(line: 173, column: 37, scope: !3662)
!3674 = !DILocation(line: 173, column: 50, scope: !3662)
!3675 = !DILocation(line: 173, column: 65, scope: !3662)
!3676 = !DILocation(line: 183, column: 14, scope: !3670)
!3677 = !DILocation(line: 177, column: 15, scope: !3662)
!3678 = !DILocation(line: 177, column: 9, scope: !3668)
!3679 = !DILocation(line: 180, column: 13, scope: !3668)
!3680 = !DILocation(line: 180, column: 5, scope: !3668)
!3681 = !DILocation(line: 180, column: 28, scope: !3668)
!3682 = !DILocation(line: 180, column: 45, scope: !3668)
!3683 = !DILocation(line: 183, column: 14, scope: !3668)
!3684 = !DILocation(line: 183, column: 5, scope: !3670)
!3685 = !DILocation(line: 192, column: 2, scope: !3662)
!3686 = !DILocation(line: 183, column: 9, scope: !3670)
!3687 = !DILocation(line: 183, column: 9, scope: !3672)
!3688 = !DILocation(line: 189, column: 32, scope: !3672)
!3689 = !DILocation(line: 189, column: 31, scope: !3672)
!3690 = !DILocation(line: 189, column: 13, scope: !3672)
!3691 = distinct !DISubprogram(name: "recurse<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort7recurse17h8c848ef543fbf11aE", scope: !1056, file: !2404, line: 804, type: !3692, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !3705)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{null, !230, !1026, !3694, !27}
!3694 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !355, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !3695, templateParams: !24, identifier: "5ee76854d6ba90f5991f5fe689d67044")
!3695 = !{!3696}
!3696 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3694, file: !2, size: 64, align: 64, elements: !3697, templateParams: !24, identifier: "772478794fe0d7422edee6dd0f6a07fe", discriminator: !3704)
!3697 = !{!3698, !3700}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3696, file: !2, baseType: !3699, size: 64, align: 64, extraData: i128 0)
!3699 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3694, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !24, templateParams: !620, identifier: "a455f2e76f2df99371a01b1e5ae1e166")
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3696, file: !2, baseType: !3701, size: 64, align: 64)
!3701 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3694, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !3702, templateParams: !620, identifier: "48366c33a27253de48229bec98067232")
!3702 = !{!3703}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3701, file: !2, baseType: !12, size: 64, align: 64, flags: DIFlagPublic)
!3704 = !DIDerivedType(tag: DW_TAG_member, scope: !3694, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!3705 = !{!3706, !3707, !3708, !3709, !3710, !3712, !3714, !3716, !3718, !3719, !3721, !3723, !3725, !3726, !3728, !3729, !3731, !3732}
!3706 = !DILocalVariable(name: "v", arg: 1, scope: !3691, file: !2404, line: 804, type: !230)
!3707 = !DILocalVariable(name: "is_less", arg: 2, scope: !3691, file: !2404, line: 804, type: !1026)
!3708 = !DILocalVariable(name: "pred", arg: 3, scope: !3691, file: !2404, line: 804, type: !3694)
!3709 = !DILocalVariable(name: "limit", arg: 4, scope: !3691, file: !2404, line: 804, type: !27)
!3710 = !DILocalVariable(name: "was_balanced", scope: !3711, file: !2404, line: 812, type: !297, align: 1)
!3711 = distinct !DILexicalBlock(scope: !3691, file: !2404, line: 812, column: 5)
!3712 = !DILocalVariable(name: "was_partitioned", scope: !3713, file: !2404, line: 814, type: !297, align: 1)
!3713 = distinct !DILexicalBlock(scope: !3711, file: !2404, line: 814, column: 5)
!3714 = !DILocalVariable(name: "len", scope: !3715, file: !2404, line: 817, type: !9, align: 8)
!3715 = distinct !DILexicalBlock(scope: !3713, file: !2404, line: 817, column: 9)
!3716 = !DILocalVariable(name: "pivot", scope: !3717, file: !2404, line: 842, type: !9, align: 8)
!3717 = distinct !DILexicalBlock(scope: !3715, file: !2404, line: 842, column: 9)
!3718 = !DILocalVariable(name: "likely_sorted", scope: !3717, file: !2404, line: 842, type: !297, align: 1)
!3719 = !DILocalVariable(name: "p", scope: !3720, file: !2404, line: 857, type: !12, align: 8)
!3720 = distinct !DILexicalBlock(scope: !3717, file: !2404, line: 857, column: 31)
!3721 = !DILocalVariable(name: "mid", scope: !3722, file: !2404, line: 859, type: !9, align: 8)
!3722 = distinct !DILexicalBlock(scope: !3720, file: !2404, line: 859, column: 17)
!3723 = !DILocalVariable(name: "mid", scope: !3724, file: !2404, line: 868, type: !9, align: 8)
!3724 = distinct !DILexicalBlock(scope: !3717, file: !2404, line: 868, column: 9)
!3725 = !DILocalVariable(name: "was_p", scope: !3724, file: !2404, line: 868, type: !297, align: 1)
!3726 = !DILocalVariable(name: "left", scope: !3727, file: !2404, line: 873, type: !230, align: 8)
!3727 = distinct !DILexicalBlock(scope: !3724, file: !2404, line: 873, column: 9)
!3728 = !DILocalVariable(name: "right", scope: !3727, file: !2404, line: 873, type: !230, align: 8)
!3729 = !DILocalVariable(name: "pivot", scope: !3730, file: !2404, line: 874, type: !230, align: 8)
!3730 = distinct !DILexicalBlock(scope: !3727, file: !2404, line: 874, column: 9)
!3731 = !DILocalVariable(name: "right", scope: !3730, file: !2404, line: 874, type: !230, align: 8)
!3732 = !DILocalVariable(name: "pivot", scope: !3733, file: !2404, line: 875, type: !12, align: 8)
!3733 = distinct !DILexicalBlock(scope: !3730, file: !2404, line: 875, column: 9)
!3734 = !DILocation(line: 804, column: 22, scope: !3691)
!3735 = !DILocation(line: 804, column: 42, scope: !3691)
!3736 = !DILocation(line: 804, column: 59, scope: !3691)
!3737 = !DILocation(line: 804, column: 84, scope: !3691)
!3738 = !DILocation(line: 812, column: 9, scope: !3711)
!3739 = !DILocation(line: 814, column: 9, scope: !3713)
!3740 = !DILocation(line: 812, column: 28, scope: !3691)
!3741 = !DILocation(line: 814, column: 31, scope: !3711)
!3742 = !DILocation(line: 816, column: 5, scope: !3713)
!3743 = !DILocation(line: 817, column: 19, scope: !3713)
!3744 = !DILocation(line: 817, column: 13, scope: !3715)
!3745 = !DILocation(line: 820, column: 12, scope: !3715)
!3746 = !DILocation(line: 829, column: 12, scope: !3715)
!3747 = !DILocation(line: 821, column: 16, scope: !3715)
!3748 = !DILocation(line: 830, column: 22, scope: !3715)
!3749 = !DILocation(line: 830, column: 13, scope: !3715)
!3750 = !DILocation(line: 836, column: 13, scope: !3715)
!3751 = !DILocation(line: 889, column: 2, scope: !3691)
!3752 = !DILocation(line: 837, column: 28, scope: !3715)
!3753 = !DILocation(line: 837, column: 13, scope: !3715)
!3754 = !DILocation(line: 838, column: 13, scope: !3715)
!3755 = !DILocation(line: 842, column: 51, scope: !3715)
!3756 = !DILocation(line: 842, column: 38, scope: !3715)
!3757 = !DILocation(line: 842, column: 14, scope: !3715)
!3758 = !DILocation(line: 842, column: 14, scope: !3717)
!3759 = !DILocation(line: 842, column: 21, scope: !3715)
!3760 = !DILocation(line: 842, column: 21, scope: !3717)
!3761 = !DILocation(line: 846, column: 12, scope: !3717)
!3762 = !DILocation(line: 836, column: 9, scope: !3715)
!3763 = !DILocation(line: 857, column: 16, scope: !3720)
!3764 = !DILocation(line: 846, column: 28, scope: !3717)
!3765 = !DILocation(line: 846, column: 47, scope: !3717)
!3766 = !DILocation(line: 849, column: 39, scope: !3717)
!3767 = !DILocation(line: 849, column: 16, scope: !3717)
!3768 = !DILocation(line: 857, column: 21, scope: !3720)
!3769 = !DILocation(line: 858, column: 29, scope: !3720)
!3770 = !DILocation(line: 868, column: 38, scope: !3717)
!3771 = !DILocation(line: 868, column: 28, scope: !3717)
!3772 = !DILocation(line: 868, column: 14, scope: !3717)
!3773 = !DILocation(line: 868, column: 14, scope: !3724)
!3774 = !DILocation(line: 868, column: 19, scope: !3717)
!3775 = !DILocation(line: 868, column: 19, scope: !3724)
!3776 = !DILocation(line: 869, column: 38, scope: !3724)
!3777 = !DILocation(line: 858, column: 28, scope: !3720)
!3778 = !DILocation(line: 858, column: 17, scope: !3720)
!3779 = !DILocation(line: 859, column: 43, scope: !3720)
!3780 = !DILocation(line: 859, column: 27, scope: !3720)
!3781 = !DILocation(line: 859, column: 21, scope: !3722)
!3782 = !DILocation(line: 862, column: 26, scope: !3722)
!3783 = !DILocation(line: 862, column: 28, scope: !3722)
!3784 = !DILocation(line: 862, column: 27, scope: !3722)
!3785 = !DILocation(line: 862, column: 17, scope: !3722)
!3786 = !DILocation(line: 1, column: 1, scope: !3787)
!3787 = !DILexicalBlockFile(scope: !3713, file: !3617, discriminator: 0)
!3788 = !DILocation(line: 869, column: 24, scope: !3724)
!3789 = !DILocation(line: 869, column: 52, scope: !3724)
!3790 = !DILocation(line: 869, column: 9, scope: !3724)
!3791 = !DILocation(line: 870, column: 9, scope: !3724)
!3792 = !DILocation(line: 873, column: 29, scope: !3724)
!3793 = !DILocation(line: 873, column: 14, scope: !3724)
!3794 = !DILocation(line: 873, column: 14, scope: !3727)
!3795 = !DILocation(line: 873, column: 20, scope: !3724)
!3796 = !DILocation(line: 873, column: 20, scope: !3727)
!3797 = !DILocation(line: 874, column: 30, scope: !3727)
!3798 = !DILocation(line: 874, column: 14, scope: !3727)
!3799 = !DILocation(line: 874, column: 14, scope: !3730)
!3800 = !DILocation(line: 874, column: 21, scope: !3727)
!3801 = !DILocation(line: 874, column: 21, scope: !3730)
!3802 = !DILocation(line: 875, column: 22, scope: !3730)
!3803 = !DILocation(line: 875, column: 21, scope: !3730)
!3804 = !DILocation(line: 875, column: 13, scope: !3733)
!3805 = !DILocation(line: 880, column: 12, scope: !3733)
!3806 = !DILocation(line: 885, column: 37, scope: !3733)
!3807 = !DILocation(line: 885, column: 50, scope: !3733)
!3808 = !DILocation(line: 885, column: 13, scope: !3733)
!3809 = !DILocation(line: 886, column: 13, scope: !3733)
!3810 = !DILocation(line: 880, column: 9, scope: !3733)
!3811 = !DILocation(line: 881, column: 36, scope: !3733)
!3812 = !DILocation(line: 881, column: 42, scope: !3733)
!3813 = !DILocation(line: 881, column: 13, scope: !3733)
!3814 = !DILocation(line: 882, column: 13, scope: !3733)
!3815 = !DILocation(line: 883, column: 20, scope: !3733)
!3816 = !DILocation(line: 883, column: 13, scope: !3733)
!3817 = !DILocation(line: 822, column: 43, scope: !3715)
!3818 = !DILocation(line: 822, column: 17, scope: !3715)
!3819 = distinct !DISubprogram(name: "heapsort<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort17h35493d952d5a5b4bE", scope: !1056, file: !2404, line: 249, type: !2405, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !3837, retainedNodes: !3820)
!3820 = !{!3821, !3822, !3823, !3829, !3831, !3833, !3835}
!3821 = !DILocalVariable(name: "v", arg: 1, scope: !3819, file: !2404, line: 249, type: !230)
!3822 = !DILocalVariable(name: "is_less", arg: 2, scope: !3819, file: !2404, line: 249, type: !1026)
!3823 = !DILocalVariable(name: "sift_down", scope: !3824, file: !2404, line: 254, type: !3825, align: 8)
!3824 = distinct !DILexicalBlock(scope: !3819, file: !2404, line: 254, column: 5)
!3825 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !3826, file: !2, size: 64, align: 64, elements: !3827, templateParams: !24, identifier: "b0c15485d161e1dd1788274c717fec5a")
!3826 = !DINamespace(name: "heapsort", scope: !1056)
!3827 = !{!3828}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !3825, file: !2, baseType: !1025, size: 64, align: 64)
!3829 = !DILocalVariable(name: "iter", scope: !3830, file: !2404, line: 282, type: !2525, align: 8)
!3830 = distinct !DILexicalBlock(scope: !3824, file: !2404, line: 282, column: 5)
!3831 = !DILocalVariable(name: "i", scope: !3832, file: !2404, line: 282, type: !9, align: 8)
!3832 = distinct !DILexicalBlock(scope: !3830, file: !2404, line: 282, column: 37)
!3833 = !DILocalVariable(name: "iter", scope: !3834, file: !2404, line: 287, type: !2525, align: 8)
!3834 = distinct !DILexicalBlock(scope: !3824, file: !2404, line: 287, column: 5)
!3835 = !DILocalVariable(name: "i", scope: !3836, file: !2404, line: 287, type: !9, align: 8)
!3836 = distinct !DILexicalBlock(scope: !3834, file: !2404, line: 287, column: 33)
!3837 = !{!118, !3838}
!3838 = !DITemplateTypeParameter(name: "F", type: !1026)
!3839 = !DILocation(line: 249, column: 23, scope: !3819)
!3840 = !DILocation(line: 249, column: 36, scope: !3819)
!3841 = !DILocation(line: 254, column: 9, scope: !3824)
!3842 = !DILocation(line: 282, column: 14, scope: !3830)
!3843 = !DILocation(line: 287, column: 14, scope: !3834)
!3844 = !DILocation(line: 254, column: 25, scope: !3819)
!3845 = !DILocation(line: 282, column: 18, scope: !3824)
!3846 = !DILocation(line: 282, column: 14, scope: !3824)
!3847 = !DILocation(line: 282, column: 5, scope: !3830)
!3848 = !DILocation(line: 287, column: 14, scope: !3824)
!3849 = !DILocation(line: 287, column: 5, scope: !3834)
!3850 = !DILocation(line: 282, column: 9, scope: !3830)
!3851 = !DILocation(line: 282, column: 9, scope: !3832)
!3852 = !DILocation(line: 283, column: 9, scope: !3832)
!3853 = !DILocation(line: 291, column: 2, scope: !3819)
!3854 = !DILocation(line: 287, column: 9, scope: !3834)
!3855 = !DILocation(line: 287, column: 9, scope: !3836)
!3856 = !DILocation(line: 288, column: 9, scope: !3836)
!3857 = !DILocation(line: 289, column: 26, scope: !3836)
!3858 = !DILocation(line: 289, column: 25, scope: !3836)
!3859 = !DILocation(line: 289, column: 9, scope: !3836)
!3860 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h1de4da2a333a9a72E", scope: !3826, file: !2404, line: 254, type: !3861, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !3837, retainedNodes: !3864)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{null, !3863, !230, !9}
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::heapsort::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !3825, size: 64, align: 64, dwarfAddressSpace: 0)
!3864 = !{!3865, !3866, !3867, !3868}
!3865 = !DILocalVariable(name: "v", arg: 2, scope: !3860, file: !2404, line: 254, type: !230)
!3866 = !DILocalVariable(name: "node", arg: 3, scope: !3860, file: !2404, line: 254, type: !9)
!3867 = !DILocalVariable(name: "is_less", scope: !3860, file: !2404, line: 249, type: !1026, align: 8)
!3868 = !DILocalVariable(name: "child", scope: !3869, file: !2404, line: 257, type: !9, align: 8)
!3869 = distinct !DILexicalBlock(scope: !3860, file: !2404, line: 257, column: 13)
!3870 = !DILocation(line: 249, column: 40, scope: !3860)
!3871 = !DILocation(line: 254, column: 26, scope: !3860)
!3872 = !DILocation(line: 254, column: 39, scope: !3860)
!3873 = !DILocation(line: 257, column: 17, scope: !3869)
!3874 = !DILocation(line: 255, column: 9, scope: !3860)
!3875 = !DILocation(line: 257, column: 33, scope: !3860)
!3876 = !DILocation(line: 257, column: 29, scope: !3860)
!3877 = !DILocation(line: 258, column: 16, scope: !3869)
!3878 = !DILocation(line: 263, column: 16, scope: !3869)
!3879 = !DILocation(line: 279, column: 6, scope: !3860)
!3880 = !DILocation(line: 271, column: 17, scope: !3869)
!3881 = !DILocation(line: 271, column: 28, scope: !3869)
!3882 = !DILocation(line: 271, column: 26, scope: !3869)
!3883 = !DILocation(line: 267, column: 26, scope: !3869)
!3884 = !DILocation(line: 267, column: 37, scope: !3869)
!3885 = !DILocation(line: 267, column: 35, scope: !3869)
!3886 = !DILocation(line: 267, column: 34, scope: !3869)
!3887 = !DILocation(line: 267, column: 48, scope: !3869)
!3888 = !DILocation(line: 267, column: 46, scope: !3869)
!3889 = !DILocation(line: 267, column: 45, scope: !3869)
!3890 = !DILocation(line: 267, column: 17, scope: !3869)
!3891 = !DILocation(line: 263, column: 13, scope: !3869)
!3892 = !DILocation(line: 271, column: 25, scope: !3869)
!3893 = !DILocation(line: 271, column: 38, scope: !3869)
!3894 = !DILocation(line: 271, column: 36, scope: !3869)
!3895 = !DILocation(line: 271, column: 35, scope: !3869)
!3896 = !DILocation(line: 276, column: 20, scope: !3869)
!3897 = !DILocation(line: 276, column: 26, scope: !3869)
!3898 = !DILocation(line: 276, column: 13, scope: !3869)
!3899 = !DILocation(line: 277, column: 20, scope: !3869)
!3900 = !DILocation(line: 277, column: 13, scope: !3869)
!3901 = distinct !DISubprogram(name: "partition<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9partition17he4cc58b5d7a6db8eE", scope: !1056, file: !2404, line: 560, type: !3902, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !3904)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{!916, !230, !9, !1026}
!3904 = !{!3905, !3906, !3907, !3908, !3910, !3911, !3913, !3914, !3916, !3918, !3920, !3922, !3924}
!3905 = !DILocalVariable(name: "v", arg: 1, scope: !3901, file: !2404, line: 560, type: !230)
!3906 = !DILocalVariable(name: "pivot", arg: 2, scope: !3901, file: !2404, line: 560, type: !9)
!3907 = !DILocalVariable(name: "is_less", arg: 3, scope: !3901, file: !2404, line: 560, type: !1026)
!3908 = !DILocalVariable(name: "mid", scope: !3909, file: !2404, line: 564, type: !9, align: 8)
!3909 = distinct !DILexicalBlock(scope: !3901, file: !2404, line: 564, column: 5)
!3910 = !DILocalVariable(name: "was_partitioned", scope: !3909, file: !2404, line: 564, type: !297, align: 1)
!3911 = !DILocalVariable(name: "pivot", scope: !3912, file: !2404, line: 567, type: !230, align: 8)
!3912 = distinct !DILexicalBlock(scope: !3901, file: !2404, line: 567, column: 9)
!3913 = !DILocalVariable(name: "v", scope: !3912, file: !2404, line: 567, type: !230, align: 8)
!3914 = !DILocalVariable(name: "pivot", scope: !3915, file: !2404, line: 568, type: !832, align: 8)
!3915 = distinct !DILexicalBlock(scope: !3912, file: !2404, line: 568, column: 9)
!3916 = !DILocalVariable(name: "tmp", scope: !3917, file: !2404, line: 574, type: !516, align: 8)
!3917 = distinct !DILexicalBlock(scope: !3915, file: !2404, line: 574, column: 9)
!3918 = !DILocalVariable(name: "_pivot_guard", scope: !3919, file: !2404, line: 575, type: !1055, align: 8)
!3919 = distinct !DILexicalBlock(scope: !3917, file: !2404, line: 575, column: 9)
!3920 = !DILocalVariable(name: "pivot", scope: !3921, file: !2404, line: 576, type: !12, align: 8)
!3921 = distinct !DILexicalBlock(scope: !3919, file: !2404, line: 576, column: 9)
!3922 = !DILocalVariable(name: "l", scope: !3923, file: !2404, line: 579, type: !9, align: 8)
!3923 = distinct !DILexicalBlock(scope: !3921, file: !2404, line: 579, column: 9)
!3924 = !DILocalVariable(name: "r", scope: !3925, file: !2404, line: 580, type: !9, align: 8)
!3925 = distinct !DILexicalBlock(scope: !3923, file: !2404, line: 580, column: 9)
!3926 = !DILocation(line: 560, column: 31, scope: !3901)
!3927 = !DILocation(line: 560, column: 44, scope: !3901)
!3928 = !DILocation(line: 560, column: 58, scope: !3901)
!3929 = !DILocation(line: 574, column: 13, scope: !3917)
!3930 = !DILocation(line: 575, column: 13, scope: !3919)
!3931 = !DILocation(line: 579, column: 13, scope: !3923)
!3932 = !DILocation(line: 580, column: 13, scope: !3925)
!3933 = !DILocation(line: 566, column: 9, scope: !3901)
!3934 = !DILocation(line: 567, column: 26, scope: !3901)
!3935 = !DILocation(line: 567, column: 14, scope: !3901)
!3936 = !DILocation(line: 567, column: 14, scope: !3912)
!3937 = !DILocation(line: 567, column: 21, scope: !3901)
!3938 = !DILocation(line: 567, column: 21, scope: !3912)
!3939 = !DILocation(line: 568, column: 26, scope: !3912)
!3940 = !DILocation(line: 568, column: 21, scope: !3912)
!3941 = !DILocation(line: 568, column: 13, scope: !3915)
!3942 = !DILocation(line: 574, column: 51, scope: !3915)
!3943 = !DILocation(line: 70, column: 22, scope: !866, inlinedAt: !3944)
!3944 = distinct !DILocation(line: 574, column: 19, scope: !3915)
!3945 = !DILocation(line: 71, column: 9, scope: !866, inlinedAt: !3944)
!3946 = !DILocation(line: 152, column: 14, scope: !2441, inlinedAt: !3947)
!3947 = distinct !DILocation(line: 575, column: 50, scope: !3917)
!3948 = !DILocation(line: 575, column: 28, scope: !3917)
!3949 = !DILocation(line: 152, column: 14, scope: !2441, inlinedAt: !3950)
!3950 = distinct !DILocation(line: 576, column: 22, scope: !3919)
!3951 = !DILocation(line: 576, column: 22, scope: !3919)
!3952 = !DILocation(line: 576, column: 13, scope: !3921)
!3953 = !DILocation(line: 579, column: 21, scope: !3921)
!3954 = !DILocation(line: 580, column: 21, scope: !3923)
!3955 = !DILocation(line: 588, column: 13, scope: !3925)
!3956 = !DILocation(line: 588, column: 19, scope: !3925)
!3957 = !DILocation(line: 588, column: 23, scope: !3925)
!3958 = !DILocation(line: 593, column: 19, scope: !3925)
!3959 = !DILocation(line: 593, column: 23, scope: !3925)
!3960 = !DILocation(line: 588, column: 52, scope: !3925)
!3961 = !DILocation(line: 588, column: 36, scope: !3925)
!3962 = !DILocation(line: 588, column: 28, scope: !3925)
!3963 = !DILocation(line: 589, column: 17, scope: !3925)
!3964 = !DILocation(line: 598, column: 10, scope: !3925)
!3965 = !DILocation(line: 598, column: 41, scope: !3925)
!3966 = !DILocation(line: 598, column: 44, scope: !3925)
!3967 = !DILocation(line: 598, column: 40, scope: !3925)
!3968 = !DILocation(line: 598, column: 14, scope: !3925)
!3969 = !DILocation(line: 593, column: 53, scope: !3925)
!3970 = !DILocation(line: 593, column: 37, scope: !3925)
!3971 = !DILocation(line: 593, column: 29, scope: !3925)
!3972 = !DILocation(line: 594, column: 17, scope: !3925)
!3973 = !DILocation(line: 593, column: 13, scope: !3925)
!3974 = !DILocation(line: 598, column: 65, scope: !3925)
!3975 = !DILocation(line: 598, column: 70, scope: !3925)
!3976 = !DILocation(line: 598, column: 9, scope: !3925)
!3977 = !DILocation(line: 603, column: 5, scope: !3917)
!3978 = !DILocation(line: 564, column: 10, scope: !3901)
!3979 = !DILocation(line: 564, column: 10, scope: !3909)
!3980 = !DILocation(line: 564, column: 15, scope: !3901)
!3981 = !DILocation(line: 564, column: 15, scope: !3909)
!3982 = !DILocation(line: 606, column: 5, scope: !3909)
!3983 = !DILocation(line: 608, column: 5, scope: !3909)
!3984 = !DILocation(line: 609, column: 2, scope: !3901)
!3985 = distinct !DISubprogram(name: "quicksort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9quicksort17hc7edd83cfd356bdeE", scope: !1056, file: !2404, line: 892, type: !3986, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2420, retainedNodes: !3988)
!3986 = !DISubroutineType(types: !3987)
!3987 = !{null, !230, !1027}
!3988 = !{!3989, !3990, !3991}
!3989 = !DILocalVariable(name: "v", arg: 1, scope: !3985, file: !2404, line: 892, type: !230)
!3990 = !DILocalVariable(name: "is_less", arg: 2, scope: !3985, file: !2404, line: 892, type: !1027)
!3991 = !DILocalVariable(name: "limit", scope: !3992, file: !2404, line: 902, type: !27, align: 4)
!3992 = distinct !DILexicalBlock(scope: !3985, file: !2404, line: 902, column: 5)
!3993 = !DILocation(line: 892, column: 24, scope: !3985)
!3994 = !DILocation(line: 892, column: 37, scope: !3985)
!3995 = !DILocation(line: 897, column: 8, scope: !3985)
!3996 = !DILocalVariable(name: "self", arg: 1, scope: !3997, file: !900, line: 148, type: !9)
!3997 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13leading_zeros17hdb58311990f781d9E", scope: !901, file: !900, line: 148, type: !1112, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !3998)
!3998 = !{!3996}
!3999 = !DILocation(line: 148, column: 36, scope: !3997, inlinedAt: !4000)
!4000 = distinct !DILocation(line: 902, column: 31, scope: !3985)
!4001 = !DILocation(line: 149, column: 13, scope: !3997, inlinedAt: !4000)
!4002 = !DILocation(line: 902, column: 17, scope: !3985)
!4003 = !DILocation(line: 905, column: 1, scope: !3985)
!4004 = !DILocation(line: 902, column: 9, scope: !3992)
!4005 = !DILocation(line: 904, column: 30, scope: !3992)
!4006 = !DILocation(line: 904, column: 5, scope: !3992)
!4007 = !DILocation(line: 905, column: 2, scope: !3985)
!4008 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h31e45b9923d14ac9E", scope: !4009, file: !93, line: 17, type: !4010, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2079, retainedNodes: !4012)
!4009 = !DINamespace(name: "{impl#0}", scope: !95)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!199, !199, !104, !203}
!4012 = !{!4013, !4014}
!4013 = !DILocalVariable(name: "self", arg: 1, scope: !4008, file: !93, line: 17, type: !199)
!4014 = !DILocalVariable(name: "index", arg: 2, scope: !4008, file: !93, line: 17, type: !104)
!4015 = !DILocation(line: 17, column: 14, scope: !4008)
!4016 = !DILocation(line: 17, column: 21, scope: !4008)
!4017 = !DILocation(line: 18, column: 9, scope: !4008)
!4018 = !DILocation(line: 19, column: 6, scope: !4008)
!4019 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5b84afda7c548221E", scope: !4020, file: !93, line: 28, type: !4021, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2079, retainedNodes: !4023)
!4020 = !DINamespace(name: "{impl#1}", scope: !95)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!230, !230, !104, !203}
!4023 = !{!4024, !4025}
!4024 = !DILocalVariable(name: "self", arg: 1, scope: !4019, file: !93, line: 28, type: !230)
!4025 = !DILocalVariable(name: "index", arg: 2, scope: !4019, file: !93, line: 28, type: !104)
!4026 = !DILocation(line: 28, column: 18, scope: !4019)
!4027 = !DILocation(line: 28, column: 29, scope: !4019)
!4028 = !DILocation(line: 29, column: 9, scope: !4019)
!4029 = !DILocation(line: 30, column: 6, scope: !4019)
!4030 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeToInclusive<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5f6c58c808735e84E", scope: !4020, file: !93, line: 28, type: !4031, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4036, retainedNodes: !4033)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!230, !230, !312, !203}
!4033 = !{!4034, !4035}
!4034 = !DILocalVariable(name: "self", arg: 1, scope: !4030, file: !93, line: 28, type: !230)
!4035 = !DILocalVariable(name: "index", arg: 2, scope: !4030, file: !93, line: 28, type: !312)
!4036 = !{!118, !4037}
!4037 = !DITemplateTypeParameter(name: "I", type: !312)
!4038 = !DILocation(line: 28, column: 18, scope: !4030)
!4039 = !DILocation(line: 28, column: 29, scope: !4030)
!4040 = !DILocation(line: 29, column: 9, scope: !4030)
!4041 = !DILocation(line: 30, column: 6, scope: !4030)
!4042 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h773a3748039f917cE", scope: !4020, file: !93, line: 28, type: !4043, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4048, retainedNodes: !4045)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{!230, !230, !249, !203}
!4045 = !{!4046, !4047}
!4046 = !DILocalVariable(name: "self", arg: 1, scope: !4042, file: !93, line: 28, type: !230)
!4047 = !DILocalVariable(name: "index", arg: 2, scope: !4042, file: !93, line: 28, type: !249)
!4048 = !{!118, !4049}
!4049 = !DITemplateTypeParameter(name: "I", type: !249)
!4050 = !DILocation(line: 28, column: 18, scope: !4042)
!4051 = !DILocation(line: 28, column: 29, scope: !4042)
!4052 = !DILocation(line: 29, column: 9, scope: !4042)
!4053 = !DILocation(line: 30, column: 6, scope: !4042)
!4054 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hd3ffec23183eb2e1E", scope: !4020, file: !93, line: 28, type: !4055, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4060, retainedNodes: !4057)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!230, !230, !263, !203}
!4057 = !{!4058, !4059}
!4058 = !DILocalVariable(name: "self", arg: 1, scope: !4054, file: !93, line: 28, type: !230)
!4059 = !DILocalVariable(name: "index", arg: 2, scope: !4054, file: !93, line: 28, type: !263)
!4060 = !{!118, !4061}
!4061 = !DITemplateTypeParameter(name: "I", type: !263)
!4062 = !DILocation(line: 28, column: 18, scope: !4054)
!4063 = !DILocation(line: 28, column: 29, scope: !4054)
!4064 = !DILocation(line: 29, column: 9, scope: !4054)
!4065 = !DILocation(line: 30, column: 6, scope: !4054)
!4066 = distinct !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h7917024bfba0f138E", scope: !4068, file: !4067, line: 951, type: !4086, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4074, declaration: !4088, retainedNodes: !4089)
!4067 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "f8bcb5f782265c04f2ae2e45a76fd824")
!4068 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<bootloader::bootinfo::TlsTemplate>", scope: !355, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !4069, templateParams: !24, identifier: "40d8f3aa68cfd640c29925345478f73d")
!4069 = !{!4070}
!4070 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4068, file: !2, size: 256, align: 64, elements: !4071, templateParams: !24, identifier: "274e9de0ec0c5f1527e6ec3c7f34de7a", discriminator: !4085)
!4071 = !{!4072, !4081}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4070, file: !2, baseType: !4073, size: 256, align: 64, extraData: i128 0)
!4073 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4068, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !24, templateParams: !4074, identifier: "4d46cf4afff5cc4096212d90adfcdf2c")
!4074 = !{!4075}
!4075 = !DITemplateTypeParameter(name: "T", type: !4076)
!4076 = !DICompositeType(tag: DW_TAG_structure_type, name: "TlsTemplate", scope: !15, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !4077, templateParams: !24, identifier: "255c582a47bf5b4a347f0bb650a11a00")
!4077 = !{!4078, !4079, !4080}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !4076, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagPublic)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "file_size", scope: !4076, file: !2, baseType: !22, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "mem_size", scope: !4076, file: !2, baseType: !22, size: 64, align: 64, offset: 128, flags: DIFlagPublic)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4070, file: !2, baseType: !4082, size: 256, align: 64, extraData: i128 1)
!4082 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4068, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !4083, templateParams: !4074, identifier: "77e1bf775494c316dfba58a669d12e16")
!4083 = !{!4084}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4082, file: !2, baseType: !4076, size: 192, align: 64, offset: 64, flags: DIFlagPublic)
!4085 = !DIDerivedType(tag: DW_TAG_member, scope: !4068, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!4076, !4068, !4076}
!4088 = !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h7917024bfba0f138E", scope: !4068, file: !4067, line: 951, type: !4086, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4074)
!4089 = !{!4090, !4091, !4092}
!4090 = !DILocalVariable(name: "self", arg: 1, scope: !4066, file: !4067, line: 951, type: !4068)
!4091 = !DILocalVariable(name: "default", arg: 2, scope: !4066, file: !4067, line: 951, type: !4076)
!4092 = !DILocalVariable(name: "x", scope: !4093, file: !4067, line: 953, type: !4076, align: 8)
!4093 = distinct !DILexicalBlock(scope: !4066, file: !4067, line: 953, column: 13)
!4094 = !DILocation(line: 951, column: 22, scope: !4066)
!4095 = !DILocation(line: 951, column: 28, scope: !4066)
!4096 = !DILocation(line: 953, column: 18, scope: !4093)
!4097 = !DILocation(line: 952, column: 15, scope: !4066)
!4098 = !DILocation(line: 952, column: 9, scope: !4066)
!4099 = !DILocation(line: 954, column: 21, scope: !4066)
!4100 = !DILocation(line: 953, column: 18, scope: !4066)
!4101 = !DILocation(line: 953, column: 24, scope: !4093)
!4102 = !DILocation(line: 953, column: 24, scope: !4066)
!4103 = !DILocation(line: 956, column: 5, scope: !4066)
!4104 = !DILocation(line: 956, column: 6, scope: !4066)
!4105 = distinct !DISubprogram(name: "eq", linkageName: "_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf8933cfe2566cfe1E", scope: !4106, file: !572, line: 356, type: !4107, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4110)
!4106 = !DINamespace(name: "{impl#7}", scope: !79)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{!297, !4109, !4109}
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cmp::Ordering", baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!4110 = !{!4111, !4112, !4113, !4115}
!4111 = !DILocalVariable(name: "self", arg: 1, scope: !4105, file: !572, line: 356, type: !4109)
!4112 = !DILocalVariable(name: "other", arg: 2, scope: !4105, file: !572, line: 356, type: !4109)
!4113 = !DILocalVariable(name: "__self_tag", scope: !4114, file: !572, line: 356, type: !80, align: 1)
!4114 = distinct !DILexicalBlock(scope: !4105, file: !572, line: 356, column: 23)
!4115 = !DILocalVariable(name: "__arg1_tag", scope: !4116, file: !572, line: 356, type: !80, align: 1)
!4116 = distinct !DILexicalBlock(scope: !4114, file: !572, line: 356, column: 23)
!4117 = !DILocation(line: 356, column: 23, scope: !4105)
!4118 = !DILocation(line: 356, column: 23, scope: !4114)
!4119 = !DILocation(line: 356, column: 23, scope: !4116)
!4120 = !DILocation(line: 356, column: 32, scope: !4105)
!4121 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h093e638339f4d807E", scope: !4123, file: !4122, line: 278, type: !4126, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4130, retainedNodes: !4128)
!4122 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "b390a74a8068e14f2e90b22e417c358e")
!4123 = !DINamespace(name: "{impl#0}", scope: !4124)
!4124 = !DINamespace(name: "collect", scope: !4125)
!4125 = !DINamespace(name: "traits", scope: !2528)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!608, !608}
!4128 = !{!4129}
!4129 = !DILocalVariable(name: "self", arg: 1, scope: !4121, file: !4122, line: 278, type: !608)
!4130 = !{!625}
!4131 = !DILocation(line: 278, column: 18, scope: !4121)
!4132 = !DILocation(line: 280, column: 6, scope: !4121)
!4133 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h7f0e2c43995f0794E", scope: !4134, file: !93, line: 227, type: !4135, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !4137)
!4134 = !DINamespace(name: "{impl#2}", scope: !95)
!4135 = !DISubroutineType(types: !4136)
!4136 = !{!133, !9, !99}
!4137 = !{!4138, !4139}
!4138 = !DILocalVariable(name: "self", arg: 1, scope: !4133, file: !93, line: 227, type: !9)
!4139 = !DILocalVariable(name: "slice", arg: 2, scope: !4133, file: !93, line: 227, type: !99)
!4140 = !DILocation(line: 227, column: 29, scope: !4133)
!4141 = !DILocation(line: 227, column: 35, scope: !4133)
!4142 = !DILocation(line: 228, column: 9, scope: !4133)
!4143 = !DILocation(line: 237, column: 46, scope: !4133)
!4144 = !DILocation(line: 237, column: 39, scope: !4133)
!4145 = !DILocation(line: 237, column: 13, scope: !4133)
!4146 = !DILocation(line: 238, column: 13, scope: !4133)
!4147 = !DILocation(line: 939, column: 29, scope: !126, inlinedAt: !4148)
!4148 = distinct !DILocation(line: 238, column: 13, scope: !4133)
!4149 = !DILocation(line: 939, column: 35, scope: !126, inlinedAt: !4148)
!4150 = !DILocation(line: 944, column: 18, scope: !126, inlinedAt: !4148)
!4151 = !DILocation(line: 240, column: 6, scope: !4133)
!4152 = !DILocation(line: 229, column: 20, scope: !4133)
!4153 = !DILocation(line: 229, column: 13, scope: !4133)
!4154 = distinct !DISubprogram(name: "eq<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h134a8ba16a908294E", scope: !4155, file: !1820, line: 1795, type: !4156, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !4159)
!4155 = !DINamespace(name: "{impl#12}", scope: !613)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!297, !4158, !4158}
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !612, size: 64, align: 64, dwarfAddressSpace: 0)
!4159 = !{!4160, !4161}
!4160 = !DILocalVariable(name: "self", arg: 1, scope: !4154, file: !1820, line: 1795, type: !4158)
!4161 = !DILocalVariable(name: "other", arg: 2, scope: !4154, file: !1820, line: 1795, type: !4158)
!4162 = !DILocation(line: 1795, column: 11, scope: !4154)
!4163 = !DILocation(line: 1795, column: 18, scope: !4154)
!4164 = !DILocation(line: 1796, column: 9, scope: !4154)
!4165 = !DILocalVariable(name: "self", arg: 1, scope: !4166, file: !1820, line: 347, type: !612)
!4166 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd4b50a8ba5ad3e23E", scope: !612, file: !1820, line: 347, type: !4167, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !4169, retainedNodes: !4170)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{!169, !612}
!4169 = !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd4b50a8ba5ad3e23E", scope: !612, file: !1820, line: 347, type: !4167, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!4170 = !{!4165}
!4171 = !DILocation(line: 347, column: 25, scope: !4166, inlinedAt: !4172)
!4172 = distinct !DILocation(line: 1796, column: 9, scope: !4154)
!4173 = !DILocation(line: 1796, column: 26, scope: !4154)
!4174 = !DILocation(line: 347, column: 25, scope: !4166, inlinedAt: !4175)
!4175 = distinct !DILocation(line: 1796, column: 26, scope: !4154)
!4176 = !DILocation(line: 1797, column: 6, scope: !4154)
!4177 = distinct !DISubprogram(name: "drop<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9dc8591706f88f65E", scope: !4178, file: !2404, line: 23, type: !4179, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !4182)
!4178 = !DINamespace(name: "{impl#0}", scope: !1056)
!4179 = !DISubroutineType(types: !4180)
!4180 = !{null, !4181}
!4181 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1055, size: 64, align: 64, dwarfAddressSpace: 0)
!4182 = !{!4183}
!4183 = !DILocalVariable(name: "self", arg: 1, scope: !4177, file: !2404, line: 23, type: !4181)
!4184 = !DILocation(line: 23, column: 13, scope: !4177)
!4185 = !DILocation(line: 28, column: 38, scope: !4177)
!4186 = !DILocation(line: 28, column: 48, scope: !4177)
!4187 = !DILocation(line: 2684, column: 44, scope: !1469, inlinedAt: !4188)
!4188 = distinct !DILocation(line: 28, column: 13, scope: !4177)
!4189 = !DILocation(line: 2684, column: 59, scope: !1469, inlinedAt: !4188)
!4190 = !DILocation(line: 2684, column: 72, scope: !1469, inlinedAt: !4188)
!4191 = !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !4188)
!4192 = !DILocation(line: 2542, column: 39, scope: !1481, inlinedAt: !4193)
!4193 = distinct !DILocation(line: 2694, column: 9, scope: !1469, inlinedAt: !4188)
!4194 = !DILocation(line: 2698, column: 13, scope: !1481, inlinedAt: !4193)
!4195 = !DILocation(line: 2545, column: 21, scope: !1481, inlinedAt: !4193)
!4196 = !DILocation(line: 2699, column: 20, scope: !1481, inlinedAt: !4193)
!4197 = !DILocation(line: 2700, column: 20, scope: !1481, inlinedAt: !4193)
!4198 = !DILocation(line: 2702, column: 9, scope: !1469, inlinedAt: !4188)
!4199 = !DILocation(line: 30, column: 6, scope: !4177)
!4200 = distinct !DISubprogram(name: "next<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6f3a4417bb018a70E", scope: !4202, file: !4201, line: 156, type: !4203, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !4206)
!4201 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "9bba063146171aeb521675d0b4e4e3f9")
!4202 = !DINamespace(name: "{impl#181}", scope: !609)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!3694, !4205}
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !608, size: 64, align: 64, dwarfAddressSpace: 0)
!4206 = !{!4207, !4208, !4210}
!4207 = !DILocalVariable(name: "self", arg: 1, scope: !4200, file: !4201, line: 156, type: !4205)
!4208 = !DILocalVariable(name: "len", scope: !4209, file: !4201, line: 162, type: !9, align: 8)
!4209 = distinct !DILexicalBlock(scope: !4200, file: !4201, line: 29, column: 13)
!4210 = !DILocalVariable(name: "end", scope: !4211, file: !4201, line: 162, type: !612, align: 8)
!4211 = distinct !DILexicalBlock(scope: !4200, file: !4201, line: 33, column: 13)
!4212 = !DILocation(line: 156, column: 21, scope: !4200)
!4213 = !DILocation(line: 162, column: 24, scope: !4211)
!4214 = !DILocation(line: 162, column: 24, scope: !4200)
!4215 = !DILocalVariable(name: "self", arg: 1, scope: !4216, file: !127, line: 60, type: !4220)
!4216 = distinct !DISubprogram(name: "cast<*const bootloader::bootinfo::memory_map::MemoryRegion, core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc5f5b919af86c813E", scope: !128, file: !127, line: 60, type: !4217, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4222, retainedNodes: !4221)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{!4219, !4220}
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !612, size: 64, align: 64, dwarfAddressSpace: 0)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !133, size: 64, align: 64, dwarfAddressSpace: 0)
!4221 = !{!4215}
!4222 = !{!4223, !4224}
!4223 = !DITemplateTypeParameter(name: "T", type: !133)
!4224 = !DITemplateTypeParameter(name: "U", type: !612)
!4225 = !DILocation(line: 60, column: 26, scope: !4216, inlinedAt: !4226)
!4226 = distinct !DILocation(line: 162, column: 24, scope: !4200)
!4227 = !DILocation(line: 206, column: 17, scope: !476, inlinedAt: !4228)
!4228 = distinct !DILocation(line: 162, column: 24, scope: !4200)
!4229 = !DILocation(line: 60, column: 26, scope: !483, inlinedAt: !4230)
!4230 = distinct !DILocation(line: 210, column: 33, scope: !476, inlinedAt: !4228)
!4231 = !DILocation(line: 210, column: 18, scope: !476, inlinedAt: !4228)
!4232 = !DILocation(line: 162, column: 24, scope: !4209)
!4233 = !DILocalVariable(name: "self", arg: 1, scope: !4234, file: !4201, line: 101, type: !4205)
!4234 = distinct !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17he797b7119bccee6cE", scope: !608, file: !4201, line: 101, type: !4235, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !4237, retainedNodes: !4238)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{!612, !4205, !9}
!4237 = !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17he797b7119bccee6cE", scope: !608, file: !4201, line: 101, type: !4235, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!4238 = !{!4233, !4239, !4240, !4242, !4244}
!4239 = !DILocalVariable(name: "offset", arg: 2, scope: !4234, file: !4201, line: 101, type: !9)
!4240 = !DILocalVariable(name: "old", scope: !4241, file: !4201, line: 102, type: !612, align: 8)
!4241 = distinct !DILexicalBlock(scope: !4234, file: !4201, line: 102, column: 17)
!4242 = !DILocalVariable(name: "len", scope: !4243, file: !4201, line: 107, type: !2649, align: 8)
!4243 = distinct !DILexicalBlock(scope: !4241, file: !4201, line: 17, column: 13)
!4244 = !DILocalVariable(name: "_end", scope: !4245, file: !4201, line: 107, type: !4246, align: 8)
!4245 = distinct !DILexicalBlock(scope: !4241, file: !4201, line: 21, column: 13)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !612, size: 64, align: 64, dwarfAddressSpace: 0)
!4247 = !DILocation(line: 101, column: 38, scope: !4234, inlinedAt: !4248)
!4248 = distinct !DILocation(line: 165, column: 30, scope: !4200)
!4249 = !DILocation(line: 101, column: 49, scope: !4234, inlinedAt: !4248)
!4250 = !DILocation(line: 102, column: 27, scope: !4234, inlinedAt: !4248)
!4251 = !DILocation(line: 102, column: 21, scope: !4241, inlinedAt: !4248)
!4252 = !DILocation(line: 107, column: 21, scope: !4241, inlinedAt: !4248)
!4253 = !DILocalVariable(name: "self", arg: 1, scope: !4254, file: !164, line: 60, type: !4258)
!4254 = distinct !DISubprogram(name: "cast<*const bootloader::bootinfo::memory_map::MemoryRegion, core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h9de8b0e7757ca77aE", scope: !175, file: !164, line: 60, type: !4255, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4222, retainedNodes: !4259)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!4257, !4258}
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !612, size: 64, align: 64, dwarfAddressSpace: 0)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut *const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !133, size: 64, align: 64, dwarfAddressSpace: 0)
!4259 = !{!4253}
!4260 = !DILocation(line: 60, column: 26, scope: !4254, inlinedAt: !4261)
!4261 = distinct !DILocation(line: 107, column: 21, scope: !4241, inlinedAt: !4248)
!4262 = !DILocation(line: 107, column: 21, scope: !4245, inlinedAt: !4248)
!4263 = !DILocation(line: 109, column: 44, scope: !4245, inlinedAt: !4248)
!4264 = !DILocalVariable(name: "self", arg: 1, scope: !4265, file: !1820, line: 615, type: !612)
!4265 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h46cb280a7d01e113E", scope: !612, file: !1820, line: 615, type: !4266, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !4268, retainedNodes: !4269)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!612, !612, !9}
!4268 = !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h46cb280a7d01e113E", scope: !612, file: !1820, line: 615, type: !4266, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!4269 = !{!4264, !4270}
!4270 = !DILocalVariable(name: "count", arg: 2, scope: !4265, file: !1820, line: 615, type: !9)
!4271 = !DILocation(line: 615, column: 29, scope: !4265, inlinedAt: !4272)
!4272 = distinct !DILocation(line: 109, column: 44, scope: !4245, inlinedAt: !4248)
!4273 = !DILocation(line: 615, column: 35, scope: !4265, inlinedAt: !4272)
!4274 = !DILocation(line: 623, column: 37, scope: !4265, inlinedAt: !4272)
!4275 = !DILocation(line: 623, column: 18, scope: !4265, inlinedAt: !4272)
!4276 = !DILocation(line: 624, column: 6, scope: !4265, inlinedAt: !4272)
!4277 = !DILocation(line: 109, column: 33, scope: !4245, inlinedAt: !4248)
!4278 = !DILocation(line: 165, column: 30, scope: !4200)
!4279 = !DILocalVariable(name: "self", arg: 1, scope: !4280, file: !1820, line: 395, type: !4158)
!4280 = distinct !DISubprogram(name: "as_ref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h7408851900260c16E", scope: !612, file: !1820, line: 395, type: !4281, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, declaration: !4283, retainedNodes: !4284)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{!12, !4158}
!4283 = !DISubprogram(name: "as_ref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h7408851900260c16E", scope: !612, file: !1820, line: 395, type: !4281, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!4284 = !{!4279}
!4285 = !DILocation(line: 395, column: 36, scope: !4280, inlinedAt: !4286)
!4286 = distinct !DILocation(line: 165, column: 30, scope: !4200)
!4287 = !DILocation(line: 399, column: 20, scope: !4280, inlinedAt: !4286)
!4288 = !DILocation(line: 347, column: 25, scope: !4166, inlinedAt: !4289)
!4289 = distinct !DILocation(line: 399, column: 20, scope: !4280, inlinedAt: !4286)
!4290 = !DILocalVariable(name: "self", arg: 1, scope: !4291, file: !164, line: 117, type: !169)
!4291 = distinct !DISubprogram(name: "cast_const<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$10cast_const17h0314b2d3c7d04dafE", scope: !175, file: !164, line: 117, type: !4292, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !117, retainedNodes: !4294)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!133, !169}
!4294 = !{!4290}
!4295 = !DILocation(line: 117, column: 29, scope: !4291, inlinedAt: !4296)
!4296 = distinct !DILocation(line: 399, column: 20, scope: !4280, inlinedAt: !4286)
!4297 = !DILocation(line: 165, column: 25, scope: !4200)
!4298 = !DILocation(line: 162, column: 21, scope: !4200)
!4299 = !DILocation(line: 163, column: 25, scope: !4200)
!4300 = !DILocation(line: 168, column: 14, scope: !4200)
!4301 = distinct !DISubprogram(name: "position<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h283a6383f08f0ce6E", scope: !4202, file: !4201, line: 331, type: !4302, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4318, retainedNodes: !4305)
!4302 = !DISubroutineType(types: !4303)
!4303 = !{!354, !4205, !4304}
!4304 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !1034, file: !2, align: 8, elements: !24, identifier: "2829ea5460aac5db757d833a062be694")
!4305 = !{!4306, !4307, !4308, !4310, !4312, !4314, !4316}
!4306 = !DILocalVariable(name: "self", arg: 1, scope: !4301, file: !4201, line: 331, type: !4205)
!4307 = !DILocalVariable(name: "predicate", arg: 2, scope: !4301, file: !4201, line: 331, type: !4304)
!4308 = !DILocalVariable(name: "n", scope: !4309, file: !4201, line: 335, type: !9, align: 8)
!4309 = distinct !DILexicalBlock(scope: !4301, file: !4201, line: 335, column: 17)
!4310 = !DILocalVariable(name: "len", scope: !4311, file: !4201, line: 335, type: !9, align: 8)
!4311 = distinct !DILexicalBlock(scope: !4301, file: !4201, line: 29, column: 13)
!4312 = !DILocalVariable(name: "end", scope: !4313, file: !4201, line: 335, type: !612, align: 8)
!4313 = distinct !DILexicalBlock(scope: !4301, file: !4201, line: 33, column: 13)
!4314 = !DILocalVariable(name: "i", scope: !4315, file: !4201, line: 336, type: !9, align: 8)
!4315 = distinct !DILexicalBlock(scope: !4309, file: !4201, line: 336, column: 17)
!4316 = !DILocalVariable(name: "x", scope: !4317, file: !4201, line: 337, type: !12, align: 8)
!4317 = distinct !DILexicalBlock(scope: !4315, file: !4201, line: 337, column: 49)
!4318 = !{!118, !4319}
!4319 = !DITemplateTypeParameter(name: "P", type: !4304)
!4320 = !DILocation(line: 331, column: 28, scope: !4301)
!4321 = !DILocation(line: 331, column: 39, scope: !4301)
!4322 = !DILocation(line: 335, column: 21, scope: !4309)
!4323 = !DILocation(line: 336, column: 21, scope: !4315)
!4324 = !DILocation(line: 335, column: 25, scope: !4301)
!4325 = !DILocation(line: 60, column: 26, scope: !4216, inlinedAt: !4326)
!4326 = distinct !DILocation(line: 335, column: 25, scope: !4301)
!4327 = !DILocation(line: 335, column: 25, scope: !4313)
!4328 = !DILocation(line: 206, column: 17, scope: !476, inlinedAt: !4329)
!4329 = distinct !DILocation(line: 335, column: 25, scope: !4301)
!4330 = !DILocation(line: 60, column: 26, scope: !483, inlinedAt: !4331)
!4331 = distinct !DILocation(line: 210, column: 33, scope: !476, inlinedAt: !4329)
!4332 = !DILocation(line: 210, column: 18, scope: !476, inlinedAt: !4329)
!4333 = !DILocation(line: 335, column: 25, scope: !4311)
!4334 = !DILocation(line: 336, column: 29, scope: !4309)
!4335 = !DILocation(line: 337, column: 17, scope: !4315)
!4336 = !DILocation(line: 337, column: 37, scope: !4317)
!4337 = !DILocation(line: 337, column: 27, scope: !4317)
!4338 = !DILocation(line: 337, column: 32, scope: !4317)
!4339 = !DILocation(line: 338, column: 24, scope: !4317)
!4340 = !DILocation(line: 346, column: 17, scope: !4315)
!4341 = !DILocation(line: 347, column: 13, scope: !4301)
!4342 = !DILocation(line: 344, column: 21, scope: !4317)
!4343 = !DILocation(line: 341, column: 41, scope: !4317)
!4344 = !DILocation(line: 341, column: 45, scope: !4317)
!4345 = !DILocation(line: 341, column: 34, scope: !4317)
!4346 = !DILocation(line: 342, column: 37, scope: !4317)
!4347 = !DILocation(line: 342, column: 32, scope: !4317)
!4348 = !DILocation(line: 347, column: 14, scope: !4301)
!4349 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17hbc1424c2ba1e2eefE", scope: !4351, file: !4350, line: 20, type: !4355, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4357)
!4350 = !DIFile(filename: "src/bootinfo/memory_map.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "e5c49912468d9331b5d84640370affee")
!4351 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryMap", scope: !14, file: !2, size: 12352, align: 64, flags: DIFlagPublic, elements: !4352, templateParams: !24, identifier: "70530ee61f1cc56a13c19a2ac3ad6680")
!4352 = !{!4353, !4354}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !4351, file: !2, baseType: !2073, size: 12288, align: 64, flags: DIFlagPrivate)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "next_entry_index", scope: !4351, file: !2, baseType: !22, size: 64, align: 64, offset: 12288, flags: DIFlagPrivate)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!4351}
!4357 = !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17hbc1424c2ba1e2eefE", scope: !4351, file: !4350, line: 20, type: !4355, scopeLine: 20, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4358 = !DILocation(line: 22, column: 23, scope: !4349)
!4359 = !DILocation(line: 22, column: 22, scope: !4349)
!4360 = !DILocation(line: 21, column: 9, scope: !4349)
!4361 = !DILocation(line: 25, column: 6, scope: !4349)
!4362 = distinct !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h2af03ff0ea4f7f43E", scope: !4351, file: !4350, line: 27, type: !4363, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4366, retainedNodes: !4367)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{null, !4365, !13}
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !4351, size: 64, align: 64, dwarfAddressSpace: 0)
!4366 = !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h2af03ff0ea4f7f43E", scope: !4351, file: !4350, line: 27, type: !4363, scopeLine: 27, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4367 = !{!4368, !4369}
!4368 = !DILocalVariable(name: "self", arg: 1, scope: !4362, file: !4350, line: 27, type: !4365)
!4369 = !DILocalVariable(name: "region", arg: 2, scope: !4362, file: !4350, line: 27, type: !13)
!4370 = !DILocation(line: 27, column: 23, scope: !4362)
!4371 = !DILocation(line: 27, column: 34, scope: !4362)
!4372 = !DILocation(line: 29, column: 13, scope: !4362)
!4373 = !DILocation(line: 28, column: 9, scope: !4362)
!4374 = !DILocation(line: 32, column: 22, scope: !4362)
!4375 = !DILocation(line: 32, column: 9, scope: !4362)
!4376 = !DILocation(line: 33, column: 9, scope: !4362)
!4377 = !DILocation(line: 34, column: 9, scope: !4362)
!4378 = !DILocation(line: 35, column: 6, scope: !4362)
!4379 = distinct !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h8f63715a9e8aa699E", scope: !4351, file: !4350, line: 37, type: !4380, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4382, retainedNodes: !4383)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{null, !4365}
!4382 = !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h8f63715a9e8aa699E", scope: !4351, file: !4350, line: 37, type: !4380, scopeLine: 37, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4383 = !{!4384, !4385}
!4384 = !DILocalVariable(name: "self", arg: 1, scope: !4379, file: !4350, line: 37, type: !4365)
!4385 = !DILocalVariable(name: "first_zero_index", scope: !4386, file: !4350, line: 58, type: !9, align: 8)
!4386 = distinct !DILexicalBlock(scope: !4379, file: !4350, line: 58, column: 94)
!4387 = !DILocation(line: 37, column: 17, scope: !4379)
!4388 = !DILocation(line: 40, column: 9, scope: !4379)
!4389 = !DILocation(line: 58, column: 41, scope: !4386)
!4390 = !DILocation(line: 58, column: 16, scope: !4386)
!4391 = !DILocation(line: 58, column: 21, scope: !4386)
!4392 = !DILocation(line: 59, column: 13, scope: !4386)
!4393 = !DILocation(line: 58, column: 9, scope: !4379)
!4394 = !DILocation(line: 61, column: 6, scope: !4379)
!4395 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h9ca67f90209d8f56E", scope: !1034, file: !4350, line: 40, type: !4396, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4398)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!78, !1032, !12, !12}
!4398 = !{!4399, !4400, !4401, !4403}
!4399 = !DILocalVariable(name: "r1", arg: 2, scope: !4395, file: !4350, line: 40, type: !12)
!4400 = !DILocalVariable(name: "r2", arg: 3, scope: !4395, file: !4350, line: 40, type: !12)
!4401 = !DILocalVariable(name: "ordering", scope: !4402, file: !4350, line: 46, type: !78, align: 1)
!4402 = distinct !DILexicalBlock(scope: !4395, file: !4350, line: 46, column: 17)
!4403 = !DILocalVariable(arg: 1, scope: !4395, file: !4350, line: 40, type: !1032)
!4404 = !DILocation(line: 40, column: 39, scope: !4395)
!4405 = !DILocation(line: 40, column: 40, scope: !4395)
!4406 = !DILocation(line: 40, column: 44, scope: !4395)
!4407 = !DILocation(line: 46, column: 21, scope: !4402)
!4408 = !DILocation(line: 41, column: 16, scope: !4395)
!4409 = !DILocation(line: 43, column: 23, scope: !4395)
!4410 = !DILocation(line: 42, column: 17, scope: !4395)
!4411 = !DILocation(line: 41, column: 13, scope: !4395)
!4412 = !DILocation(line: 46, column: 32, scope: !4395)
!4413 = !DILocation(line: 51, column: 20, scope: !4402)
!4414 = !DILocation(line: 44, column: 17, scope: !4395)
!4415 = !DILocation(line: 43, column: 20, scope: !4395)
!4416 = !DILocation(line: 54, column: 21, scope: !4402)
!4417 = !DILocation(line: 51, column: 17, scope: !4402)
!4418 = !DILocation(line: 52, column: 21, scope: !4402)
!4419 = !DILocation(line: 52, column: 51, scope: !4402)
!4420 = !DILocation(line: 57, column: 10, scope: !4395)
!4421 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h83c6151dc133a115E", scope: !1034, file: !4350, line: 58, type: !4422, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4425)
!4422 = !DISubroutineType(types: !4423)
!4423 = !{!297, !4424, !12}
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}", baseType: !4304, size: 64, align: 64, dwarfAddressSpace: 0)
!4425 = !{!4426, !4427}
!4426 = !DILocalVariable(name: "r", arg: 2, scope: !4421, file: !4350, line: 58, type: !12)
!4427 = !DILocalVariable(arg: 1, scope: !4421, file: !4350, line: 58, type: !4424)
!4428 = !DILocation(line: 58, column: 70, scope: !4421)
!4429 = !DILocation(line: 58, column: 71, scope: !4421)
!4430 = !DILocation(line: 58, column: 74, scope: !4421)
!4431 = !DILocation(line: 58, column: 92, scope: !4421)
!4432 = distinct !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hd4a6cdafa79f45a7E", scope: !4351, file: !4350, line: 63, type: !4433, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4436, retainedNodes: !4437)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!9, !4435}
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryMap", baseType: !4351, size: 64, align: 64, dwarfAddressSpace: 0)
!4436 = !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hd4a6cdafa79f45a7E", scope: !4351, file: !4350, line: 63, type: !4433, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!4437 = !{!4438}
!4438 = !DILocalVariable(name: "self", arg: 1, scope: !4432, file: !4350, line: 63, type: !4435)
!4439 = !DILocation(line: 63, column: 25, scope: !4432)
!4440 = !DILocation(line: 64, column: 9, scope: !4432)
!4441 = !DILocation(line: 65, column: 6, scope: !4432)
!4442 = distinct !DISubprogram(name: "deref", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17hdbb1470696cf1240E", scope: !4443, file: !4350, line: 71, type: !4444, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4446)
!4443 = !DINamespace(name: "{impl#1}", scope: !14)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!199, !4435}
!4446 = !{!4447}
!4447 = !DILocalVariable(name: "self", arg: 1, scope: !4442, file: !4350, line: 71, type: !4435)
!4448 = !DILocation(line: 71, column: 14, scope: !4442)
!4449 = !DILocation(line: 72, column: 26, scope: !4442)
!4450 = !DILocation(line: 72, column: 23, scope: !4442)
!4451 = !DILocation(line: 72, column: 22, scope: !4442)
!4452 = !DILocation(line: 73, column: 6, scope: !4442)
!4453 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9e7a6ea6d3e05f35E", scope: !4454, file: !4350, line: 77, type: !4455, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4457)
!4454 = !DINamespace(name: "{impl#2}", scope: !14)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{!230, !4365}
!4457 = !{!4458, !4459}
!4458 = !DILocalVariable(name: "self", arg: 1, scope: !4453, file: !4350, line: 77, type: !4365)
!4459 = !DILocalVariable(name: "next_index", scope: !4460, file: !4350, line: 78, type: !9, align: 8)
!4460 = distinct !DILexicalBlock(scope: !4453, file: !4350, line: 78, column: 9)
!4461 = !DILocation(line: 77, column: 18, scope: !4453)
!4462 = !DILocation(line: 78, column: 26, scope: !4453)
!4463 = !DILocation(line: 78, column: 13, scope: !4460)
!4464 = !DILocation(line: 79, column: 27, scope: !4460)
!4465 = !DILocation(line: 79, column: 26, scope: !4460)
!4466 = !DILocation(line: 80, column: 6, scope: !4453)
!4467 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h9f2ff18f52fe7c21E", scope: !4468, file: !4350, line: 84, type: !4469, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4471)
!4468 = !DINamespace(name: "{impl#3}", scope: !14)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!327, !4435, !346}
!4471 = !{!4472, !4473}
!4472 = !DILocalVariable(name: "self", arg: 1, scope: !4467, file: !4350, line: 84, type: !4435)
!4473 = !DILocalVariable(name: "f", arg: 2, scope: !4467, file: !4350, line: 84, type: !346)
!4474 = !DILocation(line: 84, column: 12, scope: !4467)
!4475 = !DILocation(line: 84, column: 19, scope: !4467)
!4476 = !DILocation(line: 85, column: 9, scope: !4467)
!4477 = !DILocation(line: 85, column: 32, scope: !4467)
!4478 = !DILocation(line: 86, column: 6, scope: !4467)
!4479 = distinct !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h51981740ee4f4a55E", scope: !13, file: !4350, line: 101, type: !4480, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4482)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!13}
!4482 = !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h51981740ee4f4a55E", scope: !13, file: !4350, line: 101, type: !4480, scopeLine: 101, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4483 = !DILocation(line: 103, column: 20, scope: !4479)
!4484 = !DILocation(line: 107, column: 26, scope: !4479)
!4485 = !DILocation(line: 102, column: 9, scope: !4479)
!4486 = !{i32 0, i32 15}
!4487 = !DILocation(line: 109, column: 6, scope: !4479)
!4488 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h76b99035b226fdd7E", scope: !19, file: !4350, line: 132, type: !4489, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4491, retainedNodes: !4492)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!19, !22, !22}
!4491 = !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h76b99035b226fdd7E", scope: !19, file: !4350, line: 132, type: !4489, scopeLine: 132, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4492 = !{!4493, !4494, !4495}
!4493 = !DILocalVariable(name: "start_addr", arg: 1, scope: !4488, file: !4350, line: 132, type: !22)
!4494 = !DILocalVariable(name: "end_addr", arg: 2, scope: !4488, file: !4350, line: 132, type: !22)
!4495 = !DILocalVariable(name: "last_byte", scope: !4496, file: !4350, line: 133, type: !22, align: 8)
!4496 = distinct !DILexicalBlock(scope: !4488, file: !4350, line: 133, column: 9)
!4497 = !DILocation(line: 132, column: 16, scope: !4488)
!4498 = !DILocation(line: 132, column: 33, scope: !4488)
!4499 = !DILocation(line: 133, column: 25, scope: !4488)
!4500 = !DILocation(line: 133, column: 13, scope: !4496)
!4501 = !DILocation(line: 135, column: 33, scope: !4496)
!4502 = !DILocation(line: 136, column: 31, scope: !4496)
!4503 = !DILocation(line: 134, column: 9, scope: !4496)
!4504 = !DILocation(line: 138, column: 6, scope: !4488)
!4505 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hdb1a5080229bebd5E", scope: !19, file: !4350, line: 141, type: !4506, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4509, retainedNodes: !4510)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{!297, !4508}
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4509 = !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hdb1a5080229bebd5E", scope: !19, file: !4350, line: 141, type: !4506, scopeLine: 141, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4510 = !{!4511}
!4511 = !DILocalVariable(name: "self", arg: 1, scope: !4505, file: !4350, line: 141, type: !4508)
!4512 = !DILocation(line: 141, column: 21, scope: !4505)
!4513 = !DILocation(line: 142, column: 9, scope: !4505)
!4514 = !DILocation(line: 142, column: 36, scope: !4505)
!4515 = !DILocation(line: 143, column: 6, scope: !4505)
!4516 = distinct !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h5218c4ca556c9ddeE", scope: !19, file: !4350, line: 146, type: !4517, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4519, retainedNodes: !4520)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!22, !4508}
!4519 = !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h5218c4ca556c9ddeE", scope: !19, file: !4350, line: 146, type: !4517, scopeLine: 146, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4520 = !{!4521}
!4521 = !DILocalVariable(name: "self", arg: 1, scope: !4516, file: !4350, line: 146, type: !4508)
!4522 = !DILocation(line: 146, column: 23, scope: !4516)
!4523 = !DILocation(line: 147, column: 9, scope: !4516)
!4524 = !DILocation(line: 148, column: 6, scope: !4516)
!4525 = distinct !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h0ac491e6cf3b0ec0E", scope: !19, file: !4350, line: 151, type: !4517, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4526, retainedNodes: !4527)
!4526 = !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h0ac491e6cf3b0ec0E", scope: !19, file: !4350, line: 151, type: !4517, scopeLine: 151, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4527 = !{!4528}
!4528 = !DILocalVariable(name: "self", arg: 1, scope: !4525, file: !4350, line: 151, type: !4508)
!4529 = !DILocation(line: 151, column: 21, scope: !4525)
!4530 = !DILocation(line: 152, column: 9, scope: !4525)
!4531 = !DILocation(line: 153, column: 6, scope: !4525)
!4532 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h55f0d07467b614d1E", scope: !4533, file: !4350, line: 157, type: !4534, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4536)
!4533 = !DINamespace(name: "{impl#6}", scope: !14)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!327, !4508, !346}
!4536 = !{!4537, !4538}
!4537 = !DILocalVariable(name: "self", arg: 1, scope: !4532, file: !4350, line: 157, type: !4508)
!4538 = !DILocalVariable(name: "f", arg: 2, scope: !4532, file: !4350, line: 157, type: !346)
!4539 = !DILocation(line: 157, column: 12, scope: !4532)
!4540 = !DILocation(line: 157, column: 19, scope: !4532)
!4541 = !DILocation(line: 161, column: 13, scope: !4532)
!4542 = !DILocalVariable(name: "x", arg: 1, scope: !4543, file: !4544, line: 108, type: !577)
!4543 = distinct !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt2rt8Argument13new_lower_hex17h7bee0e8e06a5a9c7E", scope: !699, file: !4544, line: 108, type: !4545, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4548, declaration: !4547, retainedNodes: !4550)
!4544 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "fa4076eb10d6ef970d6bf2afd1298bf1")
!4545 = !DISubroutineType(types: !4546)
!4546 = !{!699, !577}
!4547 = !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt2rt8Argument13new_lower_hex17h7bee0e8e06a5a9c7E", scope: !699, file: !4544, line: 108, type: !4545, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4548)
!4548 = !{!4549}
!4549 = !DITemplateTypeParameter(name: "T", type: !22)
!4550 = !{!4542}
!4551 = !DILocation(line: 108, column: 43, scope: !4543, inlinedAt: !4552)
!4552 = distinct !DILocation(line: 158, column: 9, scope: !4532)
!4553 = !DILocalVariable(name: "x", arg: 1, scope: !4554, file: !4544, line: 83, type: !577)
!4554 = distinct !DISubprogram(name: "new<u64>", linkageName: "_ZN4core3fmt2rt8Argument3new17h116d5f82293d8d71E", scope: !699, file: !4544, line: 83, type: !4555, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4548, declaration: !4560, retainedNodes: !4561)
!4555 = !DISubroutineType(types: !4556)
!4556 = !{!699, !577, !4557}
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u64, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !4558, size: 64, align: 64, dwarfAddressSpace: 0)
!4558 = !DISubroutineType(types: !4559)
!4559 = !{!327, !577, !346}
!4560 = !DISubprogram(name: "new<u64>", linkageName: "_ZN4core3fmt2rt8Argument3new17h116d5f82293d8d71E", scope: !699, file: !4544, line: 83, type: !4555, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4548)
!4561 = !{!4553, !4562}
!4562 = !DILocalVariable(name: "f", arg: 2, scope: !4554, file: !4544, line: 83, type: !4557)
!4563 = !DILocation(line: 83, column: 19, scope: !4554, inlinedAt: !4564)
!4564 = distinct !DILocation(line: 109, column: 9, scope: !4543, inlinedAt: !4552)
!4565 = !DILocation(line: 83, column: 29, scope: !4554, inlinedAt: !4564)
!4566 = !DILocation(line: 92, column: 18, scope: !4554, inlinedAt: !4564)
!4567 = !DILocation(line: 93, column: 6, scope: !4554, inlinedAt: !4564)
!4568 = !DILocation(line: 109, column: 9, scope: !4543, inlinedAt: !4552)
!4569 = !DILocation(line: 158, column: 9, scope: !4532)
!4570 = !DILocation(line: 162, column: 13, scope: !4532)
!4571 = !DILocation(line: 108, column: 43, scope: !4543, inlinedAt: !4572)
!4572 = distinct !DILocation(line: 158, column: 9, scope: !4532)
!4573 = !DILocation(line: 83, column: 19, scope: !4554, inlinedAt: !4574)
!4574 = distinct !DILocation(line: 109, column: 9, scope: !4543, inlinedAt: !4572)
!4575 = !DILocation(line: 83, column: 29, scope: !4554, inlinedAt: !4574)
!4576 = !DILocation(line: 92, column: 18, scope: !4554, inlinedAt: !4574)
!4577 = !DILocation(line: 93, column: 6, scope: !4554, inlinedAt: !4574)
!4578 = !DILocation(line: 109, column: 9, scope: !4543, inlinedAt: !4572)
!4579 = !{i8 0, i8 4}
!4580 = !{i64 0, i64 3}
!4581 = !DILocalVariable(name: "position", arg: 1, scope: !4582, file: !4544, line: 22, type: !9)
!4582 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt11Placeholder3new17h1ae5c01786c90e80E", scope: !665, file: !4544, line: 21, type: !4583, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4585, retainedNodes: !4586)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!665, !9, !351, !68, !27, !672, !672}
!4585 = !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt11Placeholder3new17h1ae5c01786c90e80E", scope: !665, file: !4544, line: 21, type: !4583, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!4586 = !{!4581, !4587, !4588, !4589, !4590, !4591}
!4587 = !DILocalVariable(name: "fill", arg: 2, scope: !4582, file: !4544, line: 23, type: !351)
!4588 = !DILocalVariable(name: "align", arg: 3, scope: !4582, file: !4544, line: 24, type: !68)
!4589 = !DILocalVariable(name: "flags", arg: 4, scope: !4582, file: !4544, line: 25, type: !27)
!4590 = !DILocalVariable(name: "precision", arg: 5, scope: !4582, file: !4544, line: 26, type: !672)
!4591 = !DILocalVariable(name: "width", arg: 6, scope: !4582, file: !4544, line: 27, type: !672)
!4592 = !DILocation(line: 22, column: 9, scope: !4582, inlinedAt: !4593)
!4593 = distinct !DILocation(line: 158, column: 9, scope: !4532)
!4594 = !DILocation(line: 23, column: 9, scope: !4582, inlinedAt: !4593)
!4595 = !DILocation(line: 24, column: 9, scope: !4582, inlinedAt: !4593)
!4596 = !DILocation(line: 25, column: 9, scope: !4582, inlinedAt: !4593)
!4597 = !DILocation(line: 26, column: 9, scope: !4582, inlinedAt: !4593)
!4598 = !DILocation(line: 27, column: 9, scope: !4582, inlinedAt: !4593)
!4599 = !DILocation(line: 29, column: 9, scope: !4582, inlinedAt: !4593)
!4600 = !DILocation(line: 22, column: 9, scope: !4582, inlinedAt: !4601)
!4601 = distinct !DILocation(line: 158, column: 9, scope: !4532)
!4602 = !DILocation(line: 23, column: 9, scope: !4582, inlinedAt: !4601)
!4603 = !DILocation(line: 24, column: 9, scope: !4582, inlinedAt: !4601)
!4604 = !DILocation(line: 25, column: 9, scope: !4582, inlinedAt: !4601)
!4605 = !DILocation(line: 26, column: 9, scope: !4582, inlinedAt: !4601)
!4606 = !DILocation(line: 27, column: 9, scope: !4582, inlinedAt: !4601)
!4607 = !DILocation(line: 29, column: 9, scope: !4582, inlinedAt: !4601)
!4608 = !DILocation(line: 164, column: 6, scope: !4532)
!4609 = distinct !DISubprogram(name: "from", linkageName: "_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17he58aaef6a2e26b29E", scope: !4610, file: !4350, line: 218, type: !4611, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4619)
!4610 = !DINamespace(name: "{impl#7}", scope: !14)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{!13, !4613}
!4613 = !DICompositeType(tag: DW_TAG_structure_type, name: "E820MemoryRegion", scope: !14, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !4614, templateParams: !24, identifier: "b63505d796e33d06a995fcf58c9b4250")
!4614 = !{!4615, !4616, !4617, !4618}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !4613, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagPublic)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4613, file: !2, baseType: !22, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !4613, file: !2, baseType: !27, size: 32, align: 32, offset: 128, flags: DIFlagPublic)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_extended_attributes", scope: !4613, file: !2, baseType: !27, size: 32, align: 32, offset: 160, flags: DIFlagPublic)
!4619 = !{!4620, !4621, !4623}
!4620 = !DILocalVariable(name: "region", arg: 1, scope: !4609, file: !4350, line: 218, type: !4613)
!4621 = !DILocalVariable(name: "region_type", scope: !4622, file: !4350, line: 219, type: !26, align: 4)
!4622 = distinct !DILexicalBlock(scope: !4609, file: !4350, line: 219, column: 9)
!4623 = !DILocalVariable(name: "t", scope: !4624, file: !4350, line: 225, type: !27, align: 4)
!4624 = distinct !DILexicalBlock(scope: !4609, file: !4350, line: 225, column: 13)
!4625 = !DILocation(line: 218, column: 13, scope: !4609)
!4626 = !DILocation(line: 219, column: 13, scope: !4622)
!4627 = !DILocation(line: 225, column: 13, scope: !4624)
!4628 = !DILocation(line: 219, column: 27, scope: !4609)
!4629 = !DILocation(line: 225, column: 13, scope: !4609)
!4630 = !DILocalVariable(name: "x", arg: 1, scope: !4631, file: !4544, line: 96, type: !4634)
!4631 = distinct !DISubprogram(name: "new_display<u32>", linkageName: "_ZN4core3fmt2rt8Argument11new_display17hfaf5307b2c70e788E", scope: !699, file: !4544, line: 96, type: !4632, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4636, declaration: !4635, retainedNodes: !4638)
!4632 = !DISubroutineType(types: !4633)
!4633 = !{!699, !4634}
!4634 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!4635 = !DISubprogram(name: "new_display<u32>", linkageName: "_ZN4core3fmt2rt8Argument11new_display17hfaf5307b2c70e788E", scope: !699, file: !4544, line: 96, type: !4632, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4636)
!4636 = !{!4637}
!4637 = !DITemplateTypeParameter(name: "T", type: !27)
!4638 = !{!4630}
!4639 = !DILocation(line: 96, column: 40, scope: !4631, inlinedAt: !4640)
!4640 = distinct !DILocation(line: 225, column: 18, scope: !4624)
!4641 = !DILocalVariable(name: "x", arg: 1, scope: !4642, file: !4544, line: 83, type: !4634)
!4642 = distinct !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt2rt8Argument3new17h17883257708bd681E", scope: !699, file: !4544, line: 83, type: !4643, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4636, declaration: !4648, retainedNodes: !4649)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!699, !4634, !4645}
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !4646, size: 64, align: 64, dwarfAddressSpace: 0)
!4646 = !DISubroutineType(types: !4647)
!4647 = !{!327, !4634, !346}
!4648 = !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt2rt8Argument3new17h17883257708bd681E", scope: !699, file: !4544, line: 83, type: !4643, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4636)
!4649 = !{!4641, !4650}
!4650 = !DILocalVariable(name: "f", arg: 2, scope: !4642, file: !4544, line: 83, type: !4645)
!4651 = !DILocation(line: 83, column: 19, scope: !4642, inlinedAt: !4652)
!4652 = distinct !DILocation(line: 97, column: 9, scope: !4631, inlinedAt: !4640)
!4653 = !DILocation(line: 83, column: 29, scope: !4642, inlinedAt: !4652)
!4654 = !DILocation(line: 92, column: 18, scope: !4642, inlinedAt: !4652)
!4655 = !DILocation(line: 93, column: 6, scope: !4642, inlinedAt: !4652)
!4656 = !DILocation(line: 97, column: 9, scope: !4631, inlinedAt: !4640)
!4657 = !DILocation(line: 225, column: 18, scope: !4624)
!4658 = !DILocation(line: 220, column: 18, scope: !4609)
!4659 = !DILocation(line: 221, column: 18, scope: !4609)
!4660 = !DILocation(line: 222, column: 18, scope: !4609)
!4661 = !DILocation(line: 223, column: 18, scope: !4609)
!4662 = !DILocation(line: 224, column: 18, scope: !4609)
!4663 = !DILocation(line: 228, column: 36, scope: !4622)
!4664 = !DILocation(line: 228, column: 55, scope: !4622)
!4665 = !DILocation(line: 228, column: 75, scope: !4622)
!4666 = !DILocation(line: 228, column: 20, scope: !4622)
!4667 = !DILocation(line: 229, column: 13, scope: !4622)
!4668 = !DILocation(line: 227, column: 9, scope: !4622)
!4669 = !DILocation(line: 231, column: 6, scope: !4609)
!4670 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17h8f70a81797e10a5fE", scope: !4672, file: !4671, line: 53, type: !4678, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4680, retainedNodes: !4681)
!4671 = !DIFile(filename: "src/bootinfo/mod.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "a171ea6c439575860461f3a713fd0ff5")
!4672 = !DICompositeType(tag: DW_TAG_structure_type, name: "BootInfo", scope: !15, file: !2, size: 12672, align: 64, flags: DIFlagPublic, elements: !4673, templateParams: !24, identifier: "e18687418748e1373be9f3686cbf889c")
!4673 = !{!4674, !4675, !4676, !4677}
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "memory_map", scope: !4672, file: !2, baseType: !4351, size: 12352, align: 64, flags: DIFlagPublic)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "physical_memory_offset", scope: !4672, file: !2, baseType: !22, size: 64, align: 64, offset: 12352, flags: DIFlagPublic)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "tls_template", scope: !4672, file: !2, baseType: !4076, size: 192, align: 64, offset: 12416, flags: DIFlagPrivate)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "_non_exhaustive", scope: !4672, file: !2, baseType: !72, size: 8, align: 8, offset: 12608, flags: DIFlagPrivate)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{!4672, !4351, !4068, !22, !22}
!4680 = !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17h8f70a81797e10a5fE", scope: !4672, file: !4671, line: 53, type: !4678, scopeLine: 53, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4681 = !{!4682, !4683, !4684, !4685, !4686}
!4682 = !DILocalVariable(name: "memory_map", arg: 1, scope: !4670, file: !4671, line: 54, type: !4351)
!4683 = !DILocalVariable(name: "tls_template", arg: 2, scope: !4670, file: !4671, line: 55, type: !4068)
!4684 = !DILocalVariable(name: "recursive_page_table_addr", arg: 3, scope: !4670, file: !4671, line: 56, type: !22)
!4685 = !DILocalVariable(name: "physical_memory_offset", arg: 4, scope: !4670, file: !4671, line: 57, type: !22)
!4686 = !DILocalVariable(name: "tls_template", scope: !4687, file: !4671, line: 59, type: !4076, align: 8)
!4687 = distinct !DILexicalBlock(scope: !4670, file: !4671, line: 59, column: 9)
!4688 = !DILocation(line: 54, column: 9, scope: !4670)
!4689 = !DILocation(line: 55, column: 9, scope: !4670)
!4690 = !DILocation(line: 56, column: 9, scope: !4670)
!4691 = !DILocation(line: 57, column: 9, scope: !4670)
!4692 = !DILocation(line: 59, column: 13, scope: !4687)
!4693 = !DILocation(line: 59, column: 51, scope: !4670)
!4694 = !DILocation(line: 59, column: 28, scope: !4670)
!4695 = !DILocation(line: 64, column: 9, scope: !4687)
!4696 = !DILocation(line: 73, column: 6, scope: !4670)
!4697 = distinct !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17h622dd44abe5a9e87E", scope: !4672, file: !4671, line: 81, type: !4698, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4701, retainedNodes: !4702)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{!4068, !4700}
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::BootInfo", baseType: !4672, size: 64, align: 64, dwarfAddressSpace: 0)
!4701 = !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17h622dd44abe5a9e87E", scope: !4672, file: !4671, line: 81, type: !4698, scopeLine: 81, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4702 = !{!4703}
!4703 = !DILocalVariable(name: "self", arg: 1, scope: !4697, file: !4671, line: 81, type: !4700)
!4704 = !DILocation(line: 81, column: 25, scope: !4697)
!4705 = !DILocation(line: 82, column: 12, scope: !4697)
!4706 = !DILocation(line: 85, column: 13, scope: !4697)
!4707 = !DILocation(line: 82, column: 9, scope: !4697)
!4708 = !DILocation(line: 83, column: 18, scope: !4697)
!4709 = !DILocation(line: 83, column: 13, scope: !4697)
!4710 = !DILocation(line: 87, column: 6, scope: !4697)
!4711 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17hb5f31ef666b56f1bE", scope: !4712, file: !4350, line: 90, type: !4713, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4715)
!4712 = !DINamespace(name: "{impl#8}", scope: !14)
!4713 = !DISubroutineType(types: !4714)
!4714 = !{!327, !12, !346}
!4715 = !{!4716, !4717}
!4716 = !DILocalVariable(name: "self", arg: 1, scope: !4711, file: !4350, line: 90, type: !12)
!4717 = !DILocalVariable(name: "f", arg: 2, scope: !4711, file: !4350, line: 90, type: !346)
!4718 = !DILocation(line: 90, column: 10, scope: !4711)
!4719 = !DILocation(line: 96, column: 5, scope: !4711)
!4720 = !DILocation(line: 90, column: 15, scope: !4711)
!4721 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h2bed866459e5eb4bE", scope: !4722, file: !4350, line: 168, type: !4723, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4725)
!4722 = !DINamespace(name: "{impl#21}", scope: !14)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{!327, !60, !346}
!4725 = !{!4726, !4727}
!4726 = !DILocalVariable(name: "self", arg: 1, scope: !4721, file: !4350, line: 168, type: !60)
!4727 = !DILocalVariable(name: "f", arg: 2, scope: !4721, file: !4350, line: 168, type: !346)
!4728 = !DILocation(line: 168, column: 10, scope: !4721)
!4729 = !DILocation(line: 168, column: 14, scope: !4721)
!4730 = !DILocation(line: 168, column: 15, scope: !4721)
