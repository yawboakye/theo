; ModuleID = 'bootloader.29cc74be93a1743e-cgu.0'
source_filename = "bootloader.29cc74be93a1743e-cgu.0"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-obuasi-unknown-none"

%"bootinfo::memory_map::MemoryRegion" = type { { i64, i64 }, i32, [1 x i32] }
%"core::ops::range::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, { ptr, i64 } }
%"core::fmt::rt::UnsafeArg" = type { {} }
%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>" = type { %"bootinfo::memory_map::MemoryRegion" }
%"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<bootinfo::memory_map::MemoryRegion>" = type { ptr, {} }
%"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>" = type { [1 x i64] }
%"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]" = type {}
%"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]" = type { { ptr, i64 }, ptr, ptr }
%"core::option::Option<core::fmt::Arguments<'_>>" = type { [2 x i64], ptr, [3 x i64] }
%"bootinfo::TlsTemplate" = type { i64, i64, i64 }
%"core::option::Option<bootinfo::TlsTemplate>::Some" = type { [1 x i64], %"bootinfo::TlsTemplate" }
%"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]" = type {}
%"bootinfo::memory_map::MemoryMap" = type { [64 x %"bootinfo::memory_map::MemoryRegion"], i64 }
%"core::fmt::builders::DebugList<'_, '_>" = type { %"core::fmt::builders::DebugInner<'_, '_>" }
%"core::fmt::builders::DebugInner<'_, '_>" = type { ptr, i8, i8, [6 x i8] }
%"core::fmt::rt::Placeholder" = type { { i64, i64 }, { i64, i64 }, i64, i32, i32, i8, [7 x i8] }
%"bootinfo::memory_map::E820MemoryRegion" = type { i64, i64, i32, i32 }
%"bootinfo::BootInfo" = type { %"bootinfo::memory_map::MemoryMap", %"bootinfo::TlsTemplate", i8, [7 x i8] }
%"core::option::Option<bootinfo::TlsTemplate>" = type { i64, [3 x i64] }

@alloc_fa017189c529f9a37ad81f1b7f28d734 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the range is within the slice" }>, align 1
@alloc_e4c0784e4975da2173a354afd99193ad = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: slice::get_unchecked_mut requires that the range is within the slice" }>, align 1
@alloc_763310d78c99c2c1ad3f8a9821e942f3 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"is_nonoverlapping: `size_of::<T>() * count` overflows a usize" }>, align 1
@alloc_cf71ba46b07f75a509e946b584ee4f31 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs" }>, align 1
@alloc_cedf6a437d568d1934a9920da4e49b54 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\F6\09\00\00\0A\00\00\00" }>, align 8
@alloc_2dc69c8e402c95b2e6d36f194d5617fa = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\F7\09\00\00+\00\00\00" }>, align 8
@str.0 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc_a36aaf77ae0956e77cc674d0bf04620c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\F7\09\00\00J\00\00\00" }>, align 8
@alloc_8df0580a595a87d56789d20c7318e185 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_2f5fae7ca9908dec8d13988b47dc9dc4 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned and non-null" }>, align 1
@vtable.1 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17hae02b1beb7e7cb90E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha73fadb73b4826ddE" }>, align 8, !dbg !0
@alloc_c2ea93c90919bb7b1e482f917e413fa1 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc_70ba8b7154ac9595b89826f1cfa01994 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\005\01\00\008\00\00\00" }>, align 8
@str.2 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc_91c7fa63c3cfeaa3c795652d5cf060e4 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc_560206a49c61adca6f3f0639a12632eb = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_91c7fa63c3cfeaa3c795652d5cf060e4, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_1207ea98e8ac4534e05ac8444482993c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\006\01\00\00\0D\00\00\00" }>, align 8
@alloc_5eca5fde541bf3444e5a23d5419b88a4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00+\01\00\00\0D\00\00\00" }>, align 8
@alloc_513570631223a12912d85da2bec3b15a = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc_062d8212fd02b81dce3f023edbf3244d = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs" }>, align 1
@alloc_f5758da710ba897165288b0f4da8acb3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_062d8212fd02b81dce3f023edbf3244d, [16 x i8] c"k\00\00\00\00\00\00\00\E5\02\00\00\0C\00\00\00" }>, align 8
@str.3 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc_8b72e65625de3e221368553edb4591ff = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs" }>, align 1
@alloc_4d780623f0d854654618d3ce6b6a177d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8b72e65625de3e221368553edb4591ff, [16 x i8] c"k\00\00\00\00\00\00\00\B7\04\00\00\05\00\00\00" }>, align 8
@str.4 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc_444495105b9016883a01942a28847d22 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs" }>, align 1
@alloc_0e90a8d2edaf8520d1b6cc44dc6ee0c4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_444495105b9016883a01942a28847d22, [16 x i8] c"m\00\00\00\00\00\00\00\C6\01\00\00\1D\00\00\00" }>, align 8
@alloc_29f87e6ac6e7e4317253d26531c5c81c = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc_a8d2d57d37571df30f9c47ba3b3c586b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\AC\03\00\00&\00\00\00" }>, align 8
@str.5 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc_1c99eb2e2429202974a1788dce7f6920 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\AE\03\00\00\09\00\00\00" }>, align 8
@str.6 = internal constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc_aee30a4ba5cd6160a04cfc5ee6f29e2a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\AF\03\00\00\09\00\00\00" }>, align 8
@alloc_546a48d82dbbd37bfd409d4513b73f46 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::swap_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_dbabcbd9c3313ee88be66af0b6b2af23 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\C8\03\00\00\09\00\00\00" }>, align 8
@alloc_981fd9513041e1603a1d1d7b668a749d = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_b7474065d782af00c4610bb4ef55210b = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_20b3d155afd5c58c42e598b7e6d186ef = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc_cc91f7045aeea4ab0f301c62c00dba06 = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_bcdcc30e858a48da2606f80aa0163c31 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00+\06\00\00\1A\00\00\00" }>, align 8
@alloc_fad0cd83b7d1858a846a172eb260e593 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc_60ac762d06592b2ab3358175d7a7c295 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_fad0cd83b7d1858a846a172eb260e593, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_38eb3fe2a71bea9ddc57ce847c7c3987 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00&\06\00\00\0D\00\00\00" }>, align 8
@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc_054967ab02808043e6941783e8d3de80 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00\1C\03\00\00\09\00\00\00" }>, align 8
@alloc_cb50775363ffdd1238910b6e9573721d = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"unsafe precondition(s) violated: ptr::sub_ptr requires `this >= origin`" }>, align 1
@alloc_fddaeef1fe1a23c45402ef8f58614acb = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc_9a72dc1c87ddefcce62e4b5ab68e5150 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\FF" }>, align 1
@alloc_0e767b22ac99e9123f3c482417f77f98 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc_76fa8839e346213ef9d31b2afdb0086d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\D8\06\00\00M\00\00\00" }>, align 8
@alloc_3dc073651148de734d2593768efc16e9 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: slice::split_at_mut_unchecked requires the index to be within the slice" }>, align 1
@alloc_dd0dc542054f5a3bd5e0287046a20794 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: a.len() == n" }>, align 1
@alloc_ecc9899c650d8314fba3084b3c654203 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\BE\02\00\00\0D\00\00\00" }>, align 8
@alloc_deedf7aeab1a7c66b5420b58a4093bcc = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: b.len() == n" }>, align 1
@alloc_ff56e0ff16b9da2be75af81ae63895bc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\BF\02\00\00\0D\00\00\00" }>, align 8
@alloc_2216ac2b12fee1f72596cee1b2a48660 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C5\02\00\00 \00\00\00" }>, align 8
@alloc_5c5f0f88f9e7a84c338861be835ff420 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C5\02\00\00-\00\00\00" }>, align 8
@alloc_3802366fa986a65287f2fa3ffe444552 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C9\02\00\00 \00\00\00" }>, align 8
@alloc_932be07abcf6e404c637b3e479c1e7c9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C9\02\00\00-\00\00\00" }>, align 8
@alloc_1fe2ed67373e408d8a88dd6dd998e88a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C9\02\00\00+\00\00\00" }>, align 8
@alloc_6827e7b7bc8d29e581436027f00ebf5a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CA\02\00\00\11\00\00\00" }>, align 8
@alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_140877f72603b53a2926afdc5b6562c1 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: v.len() >= 2" }>, align 1
@alloc_d80990e1774d1c38795ebd415913ef0a = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs" }>, align 1
@alloc_6932146a2b5945f5118e7e865cb7ff4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\\\00\00\00\05\00\00\00" }>, align 8
@alloc_2b18b37ae84d61762f070ebc082ffd36 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\00\00\00F\00\00\00" }>, align 8
@alloc_141337dbddbbf875f1e651a897c1c26f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00'\00\00\00\05\00\00\00" }>, align 8
@alloc_90f4b6dda14e5cb7081926ef9c658315 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00*\00\00\00\0D\00\00\00" }>, align 8
@alloc_e41efc6332efd19972427a8ca6f9ac9d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00G\00\00\00\1A\00\00\00" }>, align 8
@alloc_912dd1c737b966744c5b309cc20a3d47 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\DF\02\00\00\11\00\00\00" }>, align 8
@alloc_7aff2c5e0ce2b115fc6c1e2cef0aaf8b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E0\02\00\00\11\00\00\00" }>, align 8
@alloc_51fd6fd3cd9ef520ddfe39086f06b289 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E1\02\00\00\11\00\00\00" }>, align 8
@alloc_6a8eb4c18787545063c119f92681aeff = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\13\03\00\00\0A\00\00\00" }>, align 8
@alloc_8b1cf5b76b10a43810ba75cdb94336e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\F1\02\00\00\11\00\00\00" }>, align 8
@alloc_4e8855159810091534f04a19bbe30782 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\00\03\00\00\1C\00\00\00" }>, align 8
@alloc_787d88f30b9a4c9abd6abb658d261d97 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\00\03\00\00/\00\00\00" }>, align 8
@alloc_2745df5dada1022057bbf8b1e08b9408 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\BD\02\00\00\13\00\00\00" }>, align 8
@alloc_c3165b226cb3c0c182e30d6993318b09 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\C3\02\00\00+\00\00\00" }>, align 8
@alloc_c938216ce784d5d7b6bb0e8f59c85beb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\C7\02\00\00\11\00\00\00" }>, align 8
@alloc_55987e570b17d50f773e204af1733715 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00\14\00\00\00" }>, align 8
@alloc_dd29033771d55fdf04aba4a1982901e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00\0F\00\00\00" }>, align 8
@alloc_f8322b69080b1e19bc4df073038a414d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00l\02\00\00\07\00\00\00" }>, align 8
@alloc_23975e137ecce848c3167e283c742672 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00m\02\00\00\18\00\00\00" }>, align 8
@alloc_3ea9d353dbaea466ca156be00652f893 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00n\02\00\00\16\00\00\00" }>, align 8
@alloc_a23b538f7d9197acefade9a7784184c2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\82\02\00\00\11\00\00\00" }>, align 8
@alloc_3aa499bef66e3a89497706d0904ac653 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\86\02\00\00;\00\00\00" }>, align 8
@alloc_6b88286adc8b79b2ce0db9f94ea83bc3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\02\00\00\11\00\00\00" }>, align 8
@alloc_10d6a7449345760a13244dcd4f3e8edd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\98\02\00\00\05\00\00\00" }>, align 8
@alloc_894987bd31137d43dbfbf66922648de6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\90\02\00\00\0D\00\00\00" }>, align 8
@alloc_bae318ebda80fadd5948c94c31acdbd2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\93\02\00\00\0D\00\00\00" }>, align 8
@alloc_fe4e881dfa6c70f91499a9b97cada070 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00_\01\00\00&\00\00\00" }>, align 8
@alloc_2417cbaa5b767dc07fcb426311fbedcd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00e\01\00\00\11\00\00\00" }>, align 8
@alloc_7d4914bfaafcfa4692cc10dc5496d4e2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00s\01\00\00\1B\00\00\00" }>, align 8
@alloc_8221bdf38a3766feb9723f333c95dc9e = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"assertion failed: block_l <= BLOCK && block_r <= BLOCK" }>, align 1
@alloc_d98b9ce84085f5d91faa526ef2b40520 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00u\01\00\00\0D\00\00\00" }>, align 8
@alloc_5d32d2daaec9cf0d402f2dc37af0ea6f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00*\00\00\00" }>, align 8
@alloc_a3f9d5911d83d2dfd6ee66814bbe6049 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"assertion failed: width(l, r) == block_l + block_r" }>, align 1
@alloc_ea197cb372011b0fee90d7558b246bfb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00\0D\00\00\00" }>, align 8
@alloc_0a48b3a7e93a3fb66a7841c604466c03 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D2\01\00\00*\00\00\00" }>, align 8
@alloc_255f6db4d0c02746fb4a9b785ea6e516 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D6\01\00\007\00\00\00" }>, align 8
@alloc_3fa281490ed5627b0d5acda868d81af0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\01\00\00.\00\00\00" }>, align 8
@alloc_2107e90e8c7dda0adfd21e59e3b7e9ee = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\DB\01\00\000\00\00\00" }>, align 8
@alloc_23d83fb97dc5ddd699c8f80f695d1b3b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\02\02\00\00\09\00\00\00" }>, align 8
@alloc_fbd29d12e7b221b5790588e8407e814c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\19\02\00\00\09\00\00\00" }>, align 8
@alloc_0ba58876d11be66a75ed3c6ebb0e6bf5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\1E\02\00\00$\00\00\00" }>, align 8
@alloc_60cd9f07f649265b0b23f897aad9bad7 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: mem::size_of::<T>() > 0" }>, align 1
@alloc_9dd923649e31f13c3223b59f17507a2e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\01\00\00\09\00\00\00" }>, align 8
@alloc_c103c0ba323341afbed17e7fe7e651ca = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Y\01\00\00\09\00\00\00" }>, align 8
@alloc_bd81c17235b1444753a1935a813b485f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D7\00\00\00K\00\00\00" }>, align 8
@alloc_e743259f65f79dce5fdf7e439c96cb01 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\00\00\00\11\00\00\00" }>, align 8
@alloc_2300fc4e056106188d3f21c349fb8e76 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\10\00\00\00" }>, align 8
@alloc_0cd04c6390f55d83a74a72e18ad99930 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\0B\00\00\00" }>, align 8
@alloc_5f37f9a166db798315b708b1541f42a2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\00,\00\00\00" }>, align 8
@alloc_51848abd31708fd9bd4e978ad4e2fdf6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\004\00\00\00" }>, align 8
@alloc_59f135123cded1fb506d3f148328939a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EE\00\00\00-\00\00\00" }>, align 8
@alloc_5429279aa16fa0cdfc25e6fc8726a06a = private unnamed_addr constant <{ [46 x i8] }> <{ [46 x i8] c"assertion failed: offset != 0 && offset <= len" }>, align 1
@alloc_99bb945c879f5888798b28005543a365 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\9B\00\00\00\05\00\00\00" }>, align 8
@alloc_73eebdc85b9e117e5d0f01368c59f59c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\A3\00\00\00\1E\00\00\00" }>, align 8
@alloc_6973cb22fd5a814eff7046b5b9169c77 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"assertion failed: offset != 0 && offset <= len && len >= 2" }>, align 1
@alloc_15caf4948137b9f7be8cedfe4929bfd3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\B4\00\00\00\05\00\00\00" }>, align 8
@alloc_9da74b8166775a21c862af0758b35f3d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\BD\00\00\00\1E\00\00\00" }>, align 8
@alloc_afed1504fcd128c4005dc410e4c81be0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00?\03\00\00\0D\00\00\00" }>, align 8
@alloc_587605405deda51184d8e058ecd3dd79 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00S\03\00\00\1D\00\00\00" }>, align 8
@alloc_696cf6b9c96fa15d1a2bc76997b92dc8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00W\03\00\00\1A\00\00\00" }>, align 8
@alloc_6a2abb486c72767951ddbfabb5cef306 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\03\00\00&\00\00\00" }>, align 8
@alloc_971270e5ffee50b341d575bd26c9235e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00b\03\00\00\1F\00\00\00" }>, align 8
@alloc_06bcb3e9440cff471acdc9917714413b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00c\03\00\00$\00\00\00" }>, align 8
@alloc_f8fe30ccfa6c382fc0c6802f54db9165 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00d\03\00\00\16\00\00\00" }>, align 8
@alloc_dc7cc06f65f47d89307805f9ed1e1cb4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00 \01\00\00\0B\00\00\00" }>, align 8
@alloc_218d542ba7d42d9731521fd943356c38 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00!\01\00\00\18\00\00\00" }>, align 8
@alloc_8c633453631874cfb45135c562495182 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\01\01\00\00\1D\00\00\00" }>, align 8
@alloc_cced75eb33ad0d231589a125c7f2c71e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\07\01\00\00\10\00\00\00" }>, align 8
@alloc_02d41e7169598a3cfcfd3f0d1c833ec2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00#\00\00\00" }>, align 8
@alloc_794be56d42be9995e3a84c84d26159ed = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\000\00\00\00" }>, align 8
@alloc_d32b57d7e285e3b164a125d44291af3f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00.\00\00\00" }>, align 8
@alloc_3f7ac4164e6f54924783af0ed6bc3c8d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00\11\00\00\00" }>, align 8
@alloc_5714221f35142e87516e8a17190398c5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00\1A\00\00\00" }>, align 8
@alloc_8b3b0b984669970c12a2c2d899b23d16 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00$\00\00\00" }>, align 8
@alloc_4685547f2c3cd5dc1819afd3ce6280d4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\14\01\00\00\0F\00\00\00" }>, align 8
@alloc_a32d8ca4e4d506b0d34a470e4dcb5cd1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\006\02\00\00\0B\00\00\00" }>, align 8
@alloc_e52ab9305e2b15d74c4e9ac02c87db27 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\007\02\00\00\1C\00\00\00" }>, align 8
@alloc_0b2a738361d208826a072b92b3acda46 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\008\02\00\00\1A\00\00\00" }>, align 8
@alloc_96c6545aa6432add279027414fe61766 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00M\02\00\00\11\00\00\00" }>, align 8
@alloc_0b6e8a57da681e1fb7c4d0e2204e6a73 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Q\02\00\005\00\00\00" }>, align 8
@alloc_a38e39bd8e066eb11cb79be2a1a30355 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00R\02\00\00\11\00\00\00" }>, align 8
@alloc_b0c68aa41aa72af376e4904f7447f27d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00'\00\00\00" }>, align 8
@alloc_b173b94e8487e85973e5816a197e44e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00\0A\00\00\00" }>, align 8
@alloc_62f31cc339340f8d2589d3fbbff1b89f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\02\00\00\07\00\00\00" }>, align 8
@alloc_da17763e772b00039467b49b69f200eb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\7F\03\00\00\11\00\00\00" }>, align 8
@alloc_b3b3c2a7efcea294ef431b7ed1abebea = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the index is within the slice" }>, align 1
@alloc_cb9e1adc7c2835de63b1ee25a132c405 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs" }>, align 1
@alloc_0943d9cf8c1b2e3a95fc7ea34abb4c1f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cb9e1adc7c2835de63b1ee25a132c405, [16 x i8] c"n\00\00\00\00\00\00\00\81\00\00\00\01\00\00\00" }>, align 8
@alloc_377fe4797e3690987ab15f0122f4880b = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"too many memory regions in memory map" }>, align 1
@alloc_7d15286e500c88a119425ae53316340e = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs" }>, align 1
@alloc_7196c88dea27a90737fe52164bfa6d4b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\1C\00\00\00\09\00\00\00" }>, align 8
@alloc_e65e0ba17a4d9de8b42e16f5ae86b726 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00 \00\00\00\09\00\00\00" }>, align 8
@alloc_6248fd711ab5313acabe549160484394 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00!\00\00\00\09\00\00\00" }>, align 8
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc_bc412f3c128804cf7932bd162091bc4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00H\00\00\00\0A\00\00\00" }>, align 8
@alloc_db57840325994cb1e9e58dfeb27e1cf2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00O\00\00\00\0E\00\00\00" }>, align 8
@alloc_cad8f68633be23a5a8047bc131d14ec3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\85\00\00\00\19\00\00\00" }>, align 8
@alloc_9e0090e7731cd791b1d2228aa613acc1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\88\00\00\00\1F\00\00\00" }>, align 8
@alloc_57ce308cfbee0eeaa37d0e2ac37f242e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\93\00\00\00\09\00\00\00" }>, align 8
@alloc_4848cdfc410b3d9eebbe30a8648bbf6f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\98\00\00\00\09\00\00\00" }>, align 8
@alloc_67fee3923a1253e576603db2a7cc3769 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"FrameRange(" }>, align 1
@alloc_07656b3a0de61ce5c628545e169e4a19 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".." }>, align 1
@alloc_9e3f62b0e6490cc45676dc85f910c2d0 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc_b835a9d6c252fc7d7d9309678c4406b9 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_67fee3923a1253e576603db2a7cc3769, [8 x i8] c"\0B\00\00\00\00\00\00\00", ptr @alloc_07656b3a0de61ce5c628545e169e4a19, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_4ca1ac426b102a9acc7fcf913cf4c660 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"invalid region type " }>, align 1
@alloc_0a0c8f921f96ace4b9d73a9fb1f3a7e8 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_4ca1ac426b102a9acc7fcf913cf4c660, [8 x i8] c"\14\00\00\00\00\00\00\00" }>, align 8
@alloc_7aa2ce3965daa798a811db4359705d8b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E1\00\00\00\12\00\00\00" }>, align 8
@alloc_82eaa0d65834937aa85ffd9cf79e73a5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E4\00\00\007\00\00\00" }>, align 8
@alloc_2fa382d66c8b05cee83d1e636a456d83 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"MemoryRegion" }>, align 1
@alloc_c6d312f4fb2564cdde1868738b40e953 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"range" }>, align 1
@vtable.7 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h9b528ae7c97fe701E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6acd55a3121539eE" }>, align 8, !dbg !44
@alloc_24a09d864e93eaea8a967d85ad5fb14b = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"region_type" }>, align 1
@vtable.8 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h6e55fed4ff0fa7d3E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7fc877f30612e8b6E" }>, align 8, !dbg !52
@alloc_4f458a5ac3a6382b3750f993ab870080 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"NonExhaustive" }>, align 1
@alloc_3faf0b3374c02c8ecbb0aba47045e793 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Package" }>, align 1
@alloc_1f9c4cc73f4140a97f2cf1f721646a68 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"BootInfo" }>, align 1
@alloc_59ba7b9f7211443cd55a366616eef46a = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc_296c708f84ba4aacbf601faaf01ee90e = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"FrameZero" }>, align 1
@alloc_88f77a4216025d9c2616c4e0631b580d = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"Bootloader" }>, align 1
@alloc_84113867da1e74b2269b5cf897cae626 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"PageTable" }>, align 1
@alloc_272cabb5c5fb66cc8e055c6a08dd5a38 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"KernelStack" }>, align 1
@alloc_bfff067230aa23bc581d3ad54a803735 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Kernel" }>, align 1
@alloc_2db2f360d33be2fea5593ededc5fb904 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"BadMemory" }>, align 1
@alloc_497f8f871d9b9bd5767a37917b988618 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"AcpiNvs" }>, align 1
@alloc_405580fa38aa12693d369698203e043e = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"AcpiReclaimable" }>, align 1
@alloc_f09f4d0dabebc98449d61db8d60067bb = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Reserved" }>, align 1
@alloc_3e93a37ed61282b1c76f7355bd470201 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"InUse" }>, align 1
@alloc_3c5b86a9b7fa1d302afea08936e483c5 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Usable" }>, align 1
@alloc_bee533f45c59e636f24e3b92e9dcf8a1 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"E820MemoryRegion" }>, align 1
@alloc_e896abd190c076ac3d64221d9ae37a51 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"start_addr" }>, align 1
@vtable.9 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17h59468430190addc9E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h13fb050ba9099d34E" }>, align 8, !dbg !61
@alloc_f92b1a49cd2fef011d7606f6333298f2 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"len" }>, align 1
@vtable.a = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17h0d1b952ff6a411c0E", [16 x i8] c"\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h5a181105292e9ec3E" }>, align 8, !dbg !69
@alloc_3453f215b747c0edd0eebf0fbcea5172 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"acpi_extended_attributes" }>, align 1
@vtable.b = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h1d48bcbf945a0c27E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2641041178920c58E" }>, align 8, !dbg !77
@alloc_9edc7a92f8d25561ab6dc7613f63189d = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"memory_map" }>, align 1
@vtable.c = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17h2c5337d4da264d35E", [16 x i8] c"\08\06\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17hde0ce815ed20566bE" }>, align 8, !dbg !86
@alloc_1cbcc15d14c439465e35578ac36229c9 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"tls_template" }>, align 1
@vtable.d = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17h6ae0b0f7ed3292adE", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f7dc0e5f5bc2876E" }>, align 8, !dbg !101
@alloc_b0bb0c7a0f8be091d3fc1c11116fce9b = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"_non_exhaustive" }>, align 1
@vtable.e = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h90f3a43d58ba3f66E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h39c1a4e341aed4a1E" }>, align 8, !dbg !114
@alloc_db9f6246386b35b655b2a4a0bfe4b5d7 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"TlsTemplate" }>, align 1
@alloc_586126a6b84f2dd36fa1e3b3e4c38ef1 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"file_size" }>, align 1
@alloc_6a7e1d6cb9743b05f95a08c478d87c6e = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"mem_size" }>, align 1
@vtable.f = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17he613e3a6f7dd0b26E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8b7be4750848ea74E" }>, align 8, !dbg !124

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h174965a1ba63e8fdE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !162 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %new_len.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !183, metadata !DIExpression()), !dbg !191
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !184, metadata !DIExpression()), !dbg !192
  call void @llvm.dbg.declare(metadata ptr %this, metadata !185, metadata !DIExpression()), !dbg !193
  store i64 %self.0, ptr %this, align 8, !dbg !194
  %5 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !194
  store i64 %self.1, ptr %5, align 8, !dbg !194
  br i1 true, label %bb1, label %bb2, !dbg !195

bb2:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h156612c739a92e31E.exit", %start
  %6 = sub nuw i64 %self.1, %self.0, !dbg !196
  store i64 %6, ptr %0, align 8, !dbg !196
  %new_len = load i64, ptr %0, align 8, !dbg !196, !noundef !24
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !196
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !187, metadata !DIExpression()), !dbg !197
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_11 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h574f85348a0cba07E"(ptr %slice.0, i64 %slice.1) #10, !dbg !198
  store ptr %_11, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !210
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !209, metadata !DIExpression()), !dbg !212
  %7 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %self.0, !dbg !213
; call core::ptr::slice_from_raw_parts
  %8 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc575d0d4a9b6007aE(ptr %7, i64 %new_len) #10, !dbg !214
  %9 = extractvalue { ptr, i64 } %8, 0, !dbg !214
  %10 = extractvalue { ptr, i64 } %8, 1, !dbg !214
  %11 = insertvalue { ptr, i64 } poison, ptr %9, 0, !dbg !215
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !215
  ret { ptr, i64 } %12, !dbg !215

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !195
  %14 = load i64, ptr %13, align 8, !dbg !195, !noundef !24
  %15 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !195
  %16 = load i64, ptr %15, align 8, !dbg !195, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !195
  store i64 %14, ptr %17, align 8, !dbg !195
  %18 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !195
  store i64 %16, ptr %18, align 8, !dbg !195
  %19 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !195
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !195
  store ptr %slice.0, ptr %20, align 8, !dbg !195
  %21 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !195
  store i64 %slice.1, ptr %21, align 8, !dbg !195
  %22 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !195
  %23 = load i64, ptr %22, align 8, !dbg !195, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !195
  %25 = load i64, ptr %24, align 8, !dbg !195, !noundef !24
  %26 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !195
  %27 = getelementptr inbounds { ptr, i64 }, ptr %26, i32 0, i32 0, !dbg !195
  %28 = load ptr, ptr %27, align 8, !dbg !195, !noundef !24
  %29 = getelementptr inbounds { ptr, i64 }, ptr %26, i32 0, i32 1, !dbg !195
  %30 = load i64, ptr %29, align 8, !dbg !195, !noundef !24
  store i64 %23, ptr %this.dbg.spill.i, align 8
  %31 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %25, ptr %31, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !216, metadata !DIExpression()), !dbg !224
  store ptr %28, ptr %slice.dbg.spill.i, align 8
  %32 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %30, ptr %32, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !223, metadata !DIExpression()), !dbg !224
  %_5.i = icmp uge i64 %25, %23, !dbg !226
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !226

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !226
  br label %bb3.i, !dbg !226

bb2.i:                                            ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5092485984f6bd12E"(ptr %28, i64 %30) #10, !dbg !228
  %_8.i = icmp ule i64 %25, %_10.i, !dbg !229
  %33 = zext i1 %_8.i to i8, !dbg !226
  store i8 %33, ptr %_4.i, align 1, !dbg !226
  br label %bb3.i, !dbg !226

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %34 = load i8, ptr %_4.i, align 1, !dbg !230, !range !231, !noundef !24
  %35 = trunc i8 %34 to i1, !dbg !230
  %_3.i = xor i1 %35, true, !dbg !230
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h156612c739a92e31E.exit", !dbg !230

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_fa017189c529f9a37ad81f1b7f28d734, i64 97) #11, !dbg !232
  unreachable, !dbg !232

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h156612c739a92e31E.exit": ; preds = %bb3.i
  br label %bb2, !dbg !195
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hfacf56c2574810d2E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !233 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %new_len.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !241, metadata !DIExpression()), !dbg !247
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !242, metadata !DIExpression()), !dbg !248
  call void @llvm.dbg.declare(metadata ptr %this, metadata !243, metadata !DIExpression()), !dbg !249
  store i64 %self.0, ptr %this, align 8, !dbg !250
  %5 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !250
  store i64 %self.1, ptr %5, align 8, !dbg !250
  br i1 true, label %bb1, label %bb2, !dbg !251

bb2:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h76428ad97d6eff0cE.exit", %start
  %6 = sub nuw i64 %self.1, %self.0, !dbg !252
  store i64 %6, ptr %0, align 8, !dbg !252
  %new_len = load i64, ptr %0, align 8, !dbg !252, !noundef !24
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !252
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !245, metadata !DIExpression()), !dbg !253
  store ptr %slice.0, ptr %self.dbg.spill.i1, align 8
  %7 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %slice.1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !254, metadata !DIExpression()), !dbg !263
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !272
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !274
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %self.0, !dbg !275
; call core::ptr::slice_from_raw_parts_mut
  %9 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h1f03307f4642ee5fE(ptr %8, i64 %new_len) #10, !dbg !276
  %10 = extractvalue { ptr, i64 } %9, 0, !dbg !276
  %11 = extractvalue { ptr, i64 } %9, 1, !dbg !276
  %12 = insertvalue { ptr, i64 } poison, ptr %10, 0, !dbg !277
  %13 = insertvalue { ptr, i64 } %12, i64 %11, 1, !dbg !277
  ret { ptr, i64 } %13, !dbg !277

bb1:                                              ; preds = %start
  %14 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !251
  %15 = load i64, ptr %14, align 8, !dbg !251, !noundef !24
  %16 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !251
  %17 = load i64, ptr %16, align 8, !dbg !251, !noundef !24
  %18 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !251
  store i64 %15, ptr %18, align 8, !dbg !251
  %19 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !251
  store i64 %17, ptr %19, align 8, !dbg !251
  %20 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !251
  %21 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 0, !dbg !251
  store ptr %slice.0, ptr %21, align 8, !dbg !251
  %22 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 1, !dbg !251
  store i64 %slice.1, ptr %22, align 8, !dbg !251
  %23 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !251
  %24 = load i64, ptr %23, align 8, !dbg !251, !noundef !24
  %25 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !251
  %26 = load i64, ptr %25, align 8, !dbg !251, !noundef !24
  %27 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !251
  %28 = getelementptr inbounds { ptr, i64 }, ptr %27, i32 0, i32 0, !dbg !251
  %29 = load ptr, ptr %28, align 8, !dbg !251, !noundef !24
  %30 = getelementptr inbounds { ptr, i64 }, ptr %27, i32 0, i32 1, !dbg !251
  %31 = load i64, ptr %30, align 8, !dbg !251, !noundef !24
  store i64 %24, ptr %this.dbg.spill.i, align 8
  %32 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %26, ptr %32, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !278, metadata !DIExpression()), !dbg !285
  store ptr %29, ptr %slice.dbg.spill.i, align 8
  %33 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %31, ptr %33, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !284, metadata !DIExpression()), !dbg !285
  %_5.i = icmp uge i64 %26, %24, !dbg !287
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !287

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !287
  br label %bb3.i, !dbg !287

bb2.i:                                            ; preds = %bb1
  store ptr %29, ptr %self.dbg.spill.i2, align 8
  %34 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %31, ptr %34, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !289, metadata !DIExpression()), !dbg !294
; call core::ptr::metadata::metadata
  %35 = call i64 @_ZN4core3ptr8metadata8metadata17h9fb0ee2fa53d74d6E(ptr %29, i64 %31) #10, !dbg !296
  %_8.i = icmp ule i64 %26, %35, !dbg !297
  %36 = zext i1 %_8.i to i8, !dbg !287
  store i8 %36, ptr %_4.i, align 1, !dbg !287
  br label %bb3.i, !dbg !287

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %37 = load i8, ptr %_4.i, align 1, !dbg !298, !range !231, !noundef !24
  %38 = trunc i8 %37 to i1, !dbg !298
  %_3.i = xor i1 %38, true, !dbg !298
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h76428ad97d6eff0cE.exit", !dbg !298

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_e4c0784e4975da2173a354afd99193ad, i64 101) #11, !dbg !299
  unreachable, !dbg !299

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h76428ad97d6eff0cE.exit": ; preds = %bb3.i
  br label %bb2, !dbg !251
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h06c169b84a427d0eE"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !300 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !321, metadata !DIExpression()), !dbg !323
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !322, metadata !DIExpression()), !dbg !324
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !325
  br i1 %_3, label %bb1, label %bb2, !dbg !325

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !326
  br i1 %_9, label %bb3, label %bb4, !dbg !326

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hd1cba732495dd632E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !327
  unreachable, !dbg !327

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h174965a1ba63e8fdE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !328
  %_15.0 = extractvalue { ptr, i64 } %5, 0, !dbg !328
  %_15.1 = extractvalue { ptr, i64 } %5, 1, !dbg !328
  %6 = insertvalue { ptr, i64 } poison, ptr %_15.0, 0, !dbg !329
  %7 = insertvalue { ptr, i64 } %6, i64 %_15.1, 1, !dbg !329
  ret { ptr, i64 } %7, !dbg !329

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hf9324e536528af73E(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !330
  unreachable, !dbg !330
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d4cc9f120219a7eE"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !331 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !339, metadata !DIExpression()), !dbg !341
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !340, metadata !DIExpression()), !dbg !342
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !343
  br i1 %_3, label %bb1, label %bb2, !dbg !343

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !344
  br i1 %_9, label %bb3, label %bb4, !dbg !344

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hd1cba732495dd632E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !345
  unreachable, !dbg !345

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hfacf56c2574810d2E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !346
  %_17.0 = extractvalue { ptr, i64 } %5, 0, !dbg !346
  %_17.1 = extractvalue { ptr, i64 } %5, 1, !dbg !346
  %6 = insertvalue { ptr, i64 } poison, ptr %_17.0, 0, !dbg !347
  %7 = insertvalue { ptr, i64 } %6, i64 %_17.1, 1, !dbg !347
  ret { ptr, i64 } %7, !dbg !347

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hf9324e536528af73E(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !348
  unreachable, !dbg !348
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h6d8936b6797b6854E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !349 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !357, metadata !DIExpression()), !dbg !359
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !358, metadata !DIExpression()), !dbg !360
  store i64 0, ptr %_4, align 8, !dbg !361
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !361
  store i64 %self, ptr %3, align 8, !dbg !361
  %4 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !361
  %5 = load i64, ptr %4, align 8, !dbg !361, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !361
  %7 = load i64, ptr %6, align 8, !dbg !361, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d4cc9f120219a7eE"(i64 %5, i64 %7, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !361
  %_3.0 = extractvalue { ptr, i64 } %8, 0, !dbg !361
  %_3.1 = extractvalue { ptr, i64 } %8, 1, !dbg !361
  %9 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !362
  %10 = insertvalue { ptr, i64 } %9, i64 %_3.1, 1, !dbg !362
  ret { ptr, i64 } %10, !dbg !362
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h447124bbfa895005E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !363 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !371, metadata !DIExpression()), !dbg !373
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !372, metadata !DIExpression()), !dbg !374
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !289, metadata !DIExpression()), !dbg !375
; call core::ptr::metadata::metadata
  %3 = call i64 @_ZN4core3ptr8metadata8metadata17h9fb0ee2fa53d74d6E(ptr %slice.0, i64 %slice.1) #10, !dbg !377
  store i64 %self, ptr %_3, align 8, !dbg !378
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !378
  store i64 %3, ptr %4, align 8, !dbg !378
  %5 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !378
  %6 = load i64, ptr %5, align 8, !dbg !378, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !378
  %8 = load i64, ptr %7, align 8, !dbg !378, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %9 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hfacf56c2574810d2E"(i64 %6, i64 %8, ptr %slice.0, i64 %slice.1) #10, !dbg !378
  %10 = extractvalue { ptr, i64 } %9, 0, !dbg !378
  %11 = extractvalue { ptr, i64 } %9, 1, !dbg !378
  %12 = insertvalue { ptr, i64 } poison, ptr %10, 0, !dbg !379
  %13 = insertvalue { ptr, i64 } %12, i64 %11, 1, !dbg !379
  ret { ptr, i64 } %13, !dbg !379
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5fa0145d511e9c00E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !380 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !384, metadata !DIExpression()), !dbg !386
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !385, metadata !DIExpression()), !dbg !387
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !388
  br i1 %_3, label %bb1, label %bb2, !dbg !388

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h447124bbfa895005E"(i64 %self, ptr %slice.0, i64 %slice.1) #10, !dbg !389
  %_11.0 = extractvalue { ptr, i64 } %3, 0, !dbg !389
  %_11.1 = extractvalue { ptr, i64 } %3, 1, !dbg !389
  %4 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0, !dbg !390
  %5 = insertvalue { ptr, i64 } %4, i64 %_11.1, 1, !dbg !390
  ret { ptr, i64 } %5, !dbg !390

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h4780e5c69461b1a1E(i64 %self, i64 %slice.1, ptr align 8 %0) #11, !dbg !391
  unreachable, !dbg !391
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5e1dce60117b08eaE"(ptr %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !392 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8, !dbg !405
  call void @llvm.dbg.declare(metadata ptr %self, metadata !403, metadata !DIExpression()), !dbg !405
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !404, metadata !DIExpression()), !dbg !406
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17hfcf1b7a8b65298caE"(ptr align 8 %self) #10, !dbg !407
  %_4 = load i64, ptr %_5, align 8, !dbg !408, !noundef !24
  %_3 = icmp eq i64 %_4, -1, !dbg !408
  br i1 %_3, label %bb2, label %bb3, !dbg !408

bb3:                                              ; preds = %start
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %3 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h03aca0fca6a98bafE"(ptr %self) #10, !dbg !409
  %_9.0 = extractvalue { i64, i64 } %3, 0, !dbg !409
  %_9.1 = extractvalue { i64, i64 } %3, 1, !dbg !409
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d4cc9f120219a7eE"(i64 %_9.0, i64 %_9.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !409
  %_8.0 = extractvalue { ptr, i64 } %4, 0, !dbg !409
  %_8.1 = extractvalue { ptr, i64 } %4, 1, !dbg !409
  %5 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0, !dbg !410
  %6 = insertvalue { ptr, i64 } %5, i64 %_8.1, 1, !dbg !410
  ret { ptr, i64 } %6, !dbg !410

bb2:                                              ; preds = %start
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17hee23829b1a0f9510E(ptr align 8 %0) #11, !dbg !411
  unreachable, !dbg !411
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hda782a337d58430aE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !412 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !420, metadata !DIExpression()), !dbg !422
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !421, metadata !DIExpression()), !dbg !423
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h1773e3b7b4e11a68E"(ptr sret(%"core::ops::range::RangeInclusive<usize>") %_4, i64 0, i64 %self) #10, !dbg !424
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5e1dce60117b08eaE"(ptr %_4, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !424
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !424
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !424
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !425
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !425
  ret { ptr, i64 } %5, !dbg !425
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7fc877f30612e8b6E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !426 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !485, metadata !DIExpression()), !dbg !489
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !486, metadata !DIExpression()), !dbg !490
  %_3 = load ptr, ptr %self, align 8, !dbg !491, !nonnull !24, !align !492, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h9e1df074eec26333E"(ptr align 4 %_3, ptr align 8 %f) #10, !dbg !493
  ret i1 %0, !dbg !494
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha73fadb73b4826ddE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !495 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !500, metadata !DIExpression()), !dbg !502
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !501, metadata !DIExpression()), !dbg !503
  %_3 = load ptr, ptr %self, align 8, !dbg !504, !nonnull !24, !align !505, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h0f039e3563dcdc30E"(ptr align 8 %_3, ptr align 8 %f) #10, !dbg !506
  ret i1 %0, !dbg !507
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h486db419f38937a8E(ptr %src, ptr %dst, i64 %count) unnamed_addr #1 !dbg !508 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %diff = alloca i64, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !513, metadata !DIExpression()), !dbg !524
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !514, metadata !DIExpression()), !dbg !525
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !515, metadata !DIExpression()), !dbg !526
  call void @llvm.dbg.declare(metadata ptr %diff, metadata !522, metadata !DIExpression()), !dbg !527
  store ptr %src, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !528, metadata !DIExpression()), !dbg !533
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !535, metadata !DIExpression()), !dbg !542
  %0 = ptrtoint ptr %src to i64, !dbg !544
  store i64 %0, ptr %src_usize.dbg.spill, align 8, !dbg !545
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !516, metadata !DIExpression()), !dbg !546
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !528, metadata !DIExpression()), !dbg !547
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !535, metadata !DIExpression()), !dbg !549
  %1 = ptrtoint ptr %dst to i64, !dbg !551
  store i64 %1, ptr %dst_usize.dbg.spill, align 8, !dbg !552
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !518, metadata !DIExpression()), !dbg !553
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17he5a0beee4fd45944E"(i64 24, i64 %count) #10, !dbg !554
  %_7.0 = extractvalue { i64, i64 } %2, 0, !dbg !554
  %_7.1 = extractvalue { i64, i64 } %2, 1, !dbg !554
; call core::option::Option<T>::expect
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h5071cc80846a4d42E"(i64 %_7.0, i64 %_7.1, ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i64 61, ptr align 8 @alloc_cedf6a437d568d1934a9920da4e49b54) #10, !dbg !554
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !554
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !520, metadata !DIExpression()), !dbg !555
  %_11 = icmp ugt i64 %0, %1, !dbg !556
  br i1 %_11, label %bb6, label %bb8, !dbg !556

bb8:                                              ; preds = %start
  %_19.0 = sub i64 %1, %0, !dbg !557
  %_19.1 = icmp ult i64 %1, %0, !dbg !557
  %3 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !557
  br i1 %3, label %panic1, label %bb9, !dbg !557

bb6:                                              ; preds = %start
  %_16.0 = sub i64 %0, %1, !dbg !558
  %_16.1 = icmp ult i64 %0, %1, !dbg !558
  %4 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !558
  br i1 %4, label %panic, label %bb7, !dbg !558

bb7:                                              ; preds = %bb6
  store i64 %_16.0, ptr %diff, align 8, !dbg !558
  br label %bb10, !dbg !559

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2dc69c8e402c95b2e6d36f194d5617fa) #11, !dbg !558
  unreachable, !dbg !558

bb10:                                             ; preds = %bb9, %bb7
  %_20 = load i64, ptr %diff, align 8, !dbg !560, !noundef !24
  %5 = icmp uge i64 %_20, %size, !dbg !560
  ret i1 %5, !dbg !561

bb9:                                              ; preds = %bb8
  store i64 %_19.0, ptr %diff, align 8, !dbg !557
  br label %bb10, !dbg !559

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_a36aaf77ae0956e77cc674d0bf04620c) #11, !dbg !557
  unreachable, !dbg !557
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !562 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !566, metadata !DIExpression()), !dbg !569
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !567, metadata !DIExpression()), !dbg !570
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !568, metadata !DIExpression()), !dbg !571
  br i1 true, label %bb1, label %bb2, !dbg !572

bb2:                                              ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0e7febf4a715d66eE.exit, %start
  %0 = mul i64 %count, 24, !dbg !573
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !573
  ret void, !dbg !574

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !572
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !572
  store ptr %dst, ptr %1, align 8, !dbg !572
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !572
  store i64 %count, ptr %2, align 8, !dbg !572
  %3 = load ptr, ptr %_6, align 8, !dbg !572, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !572
  %5 = load ptr, ptr %4, align 8, !dbg !572, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !572
  %7 = load i64, ptr %6, align 8, !dbg !572, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !575, metadata !DIExpression()), !dbg !581
  store ptr %5, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !579, metadata !DIExpression()), !dbg !581
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !580, metadata !DIExpression()), !dbg !581
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %3) #10, !dbg !583
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !583

bb4.i:                                            ; preds = %bb1
  store i8 0, ptr %_6.i, align 1, !dbg !583
  br label %bb6.i, !dbg !583

bb5.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %5) #10, !dbg !584
  %8 = zext i1 %_8.i to i8, !dbg !583
  store i8 %8, ptr %_6.i, align 1, !dbg !583
  br label %bb6.i, !dbg !583

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !583, !range !231, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !583
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !583

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !583
  br label %bb3.i, !dbg !583

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h486db419f38937a8E(ptr %3, ptr %5, i64 %7) #10, !dbg !585
  %11 = zext i1 %_10.i to i8, !dbg !583
  store i8 %11, ptr %_5.i, align 1, !dbg !583
  br label %bb3.i, !dbg !583

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !586, !range !231, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !586
  %_4.i = xor i1 %13, true, !dbg !586
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0e7febf4a715d66eE.exit, !dbg !586

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !587
  unreachable, !dbg !587

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0e7febf4a715d66eE.exit: ; preds = %bb3.i
  br label %bb2, !dbg !572
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17hbc768b6fe7843ff2E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !588 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !594, metadata !DIExpression()), !dbg !597
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !595, metadata !DIExpression()), !dbg !598
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !596, metadata !DIExpression()), !dbg !599
  br i1 true, label %bb1, label %bb2, !dbg !600

bb2:                                              ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h25ac2bb0467aa76aE.exit, %start
  %0 = mul i64 %count, 8, !dbg !601
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !601
  ret void, !dbg !602

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !600
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !600
  store ptr %dst, ptr %1, align 8, !dbg !600
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !600
  store i64 %count, ptr %2, align 8, !dbg !600
  %3 = load ptr, ptr %_6, align 8, !dbg !600, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !600
  %5 = load ptr, ptr %4, align 8, !dbg !600, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !600
  %7 = load i64, ptr %6, align 8, !dbg !600, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !603, metadata !DIExpression()), !dbg !608
  store ptr %5, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !606, metadata !DIExpression()), !dbg !608
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !607, metadata !DIExpression()), !dbg !608
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h076c6b210e9ba34bE(ptr %3) #10, !dbg !610
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !610

bb4.i:                                            ; preds = %bb1
  store i8 0, ptr %_6.i, align 1, !dbg !610
  br label %bb6.i, !dbg !610

bb5.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h076c6b210e9ba34bE(ptr %5) #10, !dbg !611
  %8 = zext i1 %_8.i to i8, !dbg !610
  store i8 %8, ptr %_6.i, align 1, !dbg !610
  br label %bb6.i, !dbg !610

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !610, !range !231, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !610
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !610

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !610
  br label %bb3.i, !dbg !610

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h50bd2a1559c638aaE(ptr %3, ptr %5, i64 %7) #10, !dbg !612
  %11 = zext i1 %_10.i to i8, !dbg !610
  store i8 %11, ptr %_5.i, align 1, !dbg !610
  br label %bb3.i, !dbg !610

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !613, !range !231, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !613
  %_4.i = xor i1 %13, true, !dbg !613
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h25ac2bb0467aa76aE.exit, !dbg !613

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !614
  unreachable, !dbg !614

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h25ac2bb0467aa76aE.exit: ; preds = %bb3.i
  br label %bb2, !dbg !600
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1f7b303582864a0eE(ptr %ptr) unnamed_addr #1 !dbg !615 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !630, metadata !DIExpression()), !dbg !633
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h970d60a8eb56c4a7E"(ptr %ptr) #10, !dbg !634
  %_2 = xor i1 %_3, true, !dbg !635
  br i1 %_2, label %bb2, label %bb1, !dbg !635

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !635
  br label %bb3, !dbg !635

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hc48e8baf7044c5d4E"(ptr %ptr) #10, !dbg !636
  %1 = zext i1 %_4 to i8, !dbg !635
  store i8 %1, ptr %0, align 1, !dbg !635
  br label %bb3, !dbg !635

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !637, !range !231, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !637
  ret i1 %3, !dbg !637
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %ptr) unnamed_addr #1 !dbg !638 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !642, metadata !DIExpression()), !dbg !643
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha851001275c507fbE"(ptr %ptr) #10, !dbg !644
  %_2 = xor i1 %_3, true, !dbg !645
  br i1 %_2, label %bb2, label %bb1, !dbg !645

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !645
  br label %bb3, !dbg !645

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hfa87dcb40fcac1f2E"(ptr %ptr) #10, !dbg !646
  %1 = zext i1 %_4 to i8, !dbg !645
  store i8 %1, ptr %0, align 1, !dbg !645
  br label %bb3, !dbg !645

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !647, !range !231, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !647
  ret i1 %3, !dbg !647
}

; core::intrinsics::is_valid_allocation_size
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hde767ae676a5474fE(i64 %len) unnamed_addr #1 !dbg !648 {
start:
  %len.dbg.spill = alloca i64, align 8
  %max_len.dbg.spill = alloca i64, align 8
  store i64 384307168202282325, ptr %max_len.dbg.spill, align 8, !dbg !655
  call void @llvm.dbg.declare(metadata ptr %max_len.dbg.spill, metadata !653, metadata !DIExpression()), !dbg !655
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !655
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !652, metadata !DIExpression()), !dbg !656
  %0 = icmp ule i64 %len, 384307168202282325, !dbg !657
  ret i1 %0, !dbg !658
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17h51769a115d3c0008E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !659 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !661, metadata !DIExpression()), !dbg !664
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !662, metadata !DIExpression()), !dbg !665
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !663, metadata !DIExpression()), !dbg !666
  br i1 true, label %bb1, label %bb2, !dbg !667

bb2:                                              ; preds = %_ZN4core10intrinsics4copy7runtime17ha2950624090d1286E.exit, %start
  %0 = mul i64 8, %count, !dbg !668
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !668
  ret void, !dbg !669

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !667
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !667
  store ptr %dst, ptr %1, align 8, !dbg !667
  %2 = load ptr, ptr %_6, align 8, !dbg !667, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !667
  %4 = load ptr, ptr %3, align 8, !dbg !667, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !670, metadata !DIExpression()), !dbg !677
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !676, metadata !DIExpression()), !dbg !677
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h076c6b210e9ba34bE(ptr %2) #10, !dbg !679
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !679

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !679
  br label %bb3.i, !dbg !679

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h076c6b210e9ba34bE(ptr %4) #10, !dbg !680
  %5 = zext i1 %_6.i to i8, !dbg !679
  store i8 %5, ptr %_4.i, align 1, !dbg !679
  br label %bb3.i, !dbg !679

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %6 = load i8, ptr %_4.i, align 1, !dbg !681, !range !231, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !681
  %_3.i = xor i1 %7, true, !dbg !681
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17ha2950624090d1286E.exit, !dbg !681

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_2f5fae7ca9908dec8d13988b47dc9dc4, i64 104) #11, !dbg !682
  unreachable, !dbg !682

_ZN4core10intrinsics4copy7runtime17ha2950624090d1286E.exit: ; preds = %bb3.i
  br label %bb2, !dbg !667
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17hec6c0c291f5acb3dE(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !683 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !685, metadata !DIExpression()), !dbg !688
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !686, metadata !DIExpression()), !dbg !689
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !687, metadata !DIExpression()), !dbg !690
  br i1 true, label %bb1, label %bb2, !dbg !691

bb2:                                              ; preds = %_ZN4core10intrinsics4copy7runtime17h166a771d022cb87dE.exit, %start
  %0 = mul i64 24, %count, !dbg !692
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !692
  ret void, !dbg !693

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !691
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !691
  store ptr %dst, ptr %1, align 8, !dbg !691
  %2 = load ptr, ptr %_6, align 8, !dbg !691, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !691
  %4 = load ptr, ptr %3, align 8, !dbg !691, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !694, metadata !DIExpression()), !dbg !700
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !699, metadata !DIExpression()), !dbg !700
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %2) #10, !dbg !702
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !702

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !702
  br label %bb3.i, !dbg !702

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %4) #10, !dbg !703
  %5 = zext i1 %_6.i to i8, !dbg !702
  store i8 %5, ptr %_4.i, align 1, !dbg !702
  br label %bb3.i, !dbg !702

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %6 = load i8, ptr %_4.i, align 1, !dbg !704, !range !231, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !704
  %_3.i = xor i1 %7, true, !dbg !704
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17h166a771d022cb87dE.exit, !dbg !704

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_2f5fae7ca9908dec8d13988b47dc9dc4, i64 104) #11, !dbg !705
  unreachable, !dbg !705

_ZN4core10intrinsics4copy7runtime17h166a771d022cb87dE.exit: ; preds = %bb3.i
  br label %bb2, !dbg !691
}

; core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc3ea1d6743894018E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !706 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !713, metadata !DIExpression()), !dbg !715
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !714, metadata !DIExpression()), !dbg !716
  %_4 = load i64, ptr %self, align 8, !dbg !717, !noundef !24
  %_5 = load i64, ptr %other, align 8, !dbg !718, !noundef !24
  %_3 = icmp ult i64 %_4, %_5, !dbg !717
  br i1 %_3, label %bb1, label %bb2, !dbg !717

bb2:                                              ; preds = %start
  %_7 = load i64, ptr %self, align 8, !dbg !719, !noundef !24
  %_8 = load i64, ptr %other, align 8, !dbg !720, !noundef !24
  %_6 = icmp eq i64 %_7, %_8, !dbg !719
  br i1 %_6, label %bb3, label %bb4, !dbg !719

bb1:                                              ; preds = %start
  store i8 -1, ptr %0, align 1, !dbg !721
  br label %bb5, !dbg !722

bb5:                                              ; preds = %bb4, %bb3, %bb1
  %1 = load i8, ptr %0, align 1, !dbg !723, !range !724, !noundef !24
  ret i8 %1, !dbg !723

bb4:                                              ; preds = %bb2
  store i8 1, ptr %0, align 1, !dbg !725
  br label %bb5, !dbg !726

bb3:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !727
  br label %bb5, !dbg !726
}

; core::fmt::num::<impl core::fmt::Debug for u32>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h5a181105292e9ec3E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #0 !dbg !728 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !735, metadata !DIExpression()), !dbg !737
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !736, metadata !DIExpression()), !dbg !738
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h5963914f9d40c5c3E(ptr align 8 %f) #10, !dbg !739
  br i1 %_3, label %bb2, label %bb3, !dbg !739

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17hb9f96613a8f3519bE(ptr align 8 %f) #10, !dbg !740
  br i1 %_5, label %bb5, label %bb6, !dbg !740

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17hcba59fc6d1fdd2feE"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !741
  %2 = zext i1 %1 to i8, !dbg !741
  store i8 %2, ptr %0, align 1, !dbg !741
  br label %bb7, !dbg !741

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !742, !range !231, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !742
  ret i1 %4, !dbg !742

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h31783820a1b808a3E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !743
  %6 = zext i1 %5 to i8, !dbg !743
  store i8 %6, ptr %0, align 1, !dbg !743
  br label %bb7, !dbg !743

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h45ef34116673d46cE"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !744
  %8 = zext i1 %7 to i8, !dbg !744
  store i8 %8, ptr %0, align 1, !dbg !744
  br label %bb7, !dbg !744
}

; core::fmt::num::<impl core::fmt::Debug for u64>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h13fb050ba9099d34E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !745 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !750, metadata !DIExpression()), !dbg !752
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !751, metadata !DIExpression()), !dbg !753
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h5963914f9d40c5c3E(ptr align 8 %f) #10, !dbg !754
  br i1 %_3, label %bb2, label %bb3, !dbg !754

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17hb9f96613a8f3519bE(ptr align 8 %f) #10, !dbg !755
  br i1 %_5, label %bb5, label %bb6, !dbg !755

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hfbc2546c85867680E"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !756
  %2 = zext i1 %1 to i8, !dbg !756
  store i8 %2, ptr %0, align 1, !dbg !756
  br label %bb7, !dbg !756

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !757, !range !231, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !757
  ret i1 %4, !dbg !757

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hd8d71846b5015edbE"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !758
  %6 = zext i1 %5 to i8, !dbg !758
  store i8 %6, ptr %0, align 1, !dbg !758
  br label %bb7, !dbg !758

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h4da77c41649bbbeaE"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !759
  %8 = zext i1 %7 to i8, !dbg !759
  store i8 %8, ptr %0, align 1, !dbg !759
  br label %bb7, !dbg !759
}

; core::fmt::builders::DebugList::entries
; Function Attrs: noredzone nounwind
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17ha58637c42fd033a9E(ptr align 8 %self, ptr %entries.0, ptr %entries.1) unnamed_addr #1 !dbg !760 {
start:
  %entries.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %entry = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !789, metadata !DIExpression()), !dbg !798
  %0 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 0
  store ptr %entries.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 1
  store ptr %entries.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %entries.dbg.spill, metadata !790, metadata !DIExpression()), !dbg !799
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !791, metadata !DIExpression()), !dbg !800
  call void @llvm.dbg.declare(metadata ptr %entry, metadata !793, metadata !DIExpression()), !dbg !801
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he62b74e3d16636bcE"(ptr %entries.0, ptr %entries.1) #10, !dbg !802
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !802
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !802
  %3 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 0, !dbg !802
  store ptr %_3.0, ptr %3, align 8, !dbg !802
  %4 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 1, !dbg !802
  store ptr %_3.1, ptr %4, align 8, !dbg !802
  br label %bb2, !dbg !803

bb2:                                              ; preds = %bb4, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdd40061f16302badE"(ptr align 8 %iter) #10, !dbg !800
  store ptr %5, ptr %_5, align 8, !dbg !800
  %6 = load ptr, ptr %_5, align 8, !dbg !800, !noundef !24
  %7 = ptrtoint ptr %6 to i64, !dbg !800
  %8 = icmp eq i64 %7, 0, !dbg !800
  %_7 = select i1 %8, i64 0, i64 1, !dbg !800
  %9 = icmp eq i64 %_7, 0, !dbg !800
  br i1 %9, label %bb6, label %bb4, !dbg !800

bb6:                                              ; preds = %bb2
  ret ptr %self, !dbg !804

bb4:                                              ; preds = %bb2
  %10 = load ptr, ptr %_5, align 8, !dbg !805, !nonnull !24, !align !505, !noundef !24
  store ptr %10, ptr %entry, align 8, !dbg !805
; call core::fmt::builders::DebugList::entry
  %_9 = call align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h944979d9b37b528cE(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.1) #10, !dbg !806
  br label %bb2, !dbg !807

bb5:                                              ; No predecessors!
  unreachable, !dbg !800
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17he6b6155d83e3d98fE(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1, ptr align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 !dbg !808 {
start:
  %_4.dbg.spill = alloca %"core::fmt::rt::UnsafeArg", align 1
  %fmt.dbg.spill = alloca { ptr, i64 }, align 8
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_5 = alloca { ptr, i64 }, align 8
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::rt::UnsafeArg", align 1
  call void @llvm.dbg.declare(metadata ptr %_unsafe_arg.dbg.spill, metadata !884, metadata !DIExpression()), !dbg !886
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0, !dbg !886
  store ptr %pieces.0, ptr %1, align 8, !dbg !886
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1, !dbg !886
  store i64 %pieces.1, ptr %2, align 8, !dbg !886
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !881, metadata !DIExpression()), !dbg !887
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0, !dbg !886
  store ptr %args.0, ptr %3, align 8, !dbg !886
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1, !dbg !886
  store i64 %args.1, ptr %4, align 8, !dbg !886
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !882, metadata !DIExpression()), !dbg !888
  %5 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 0, !dbg !886
  store ptr %fmt.0, ptr %5, align 8, !dbg !886
  %6 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 1, !dbg !886
  store i64 %fmt.1, ptr %6, align 8, !dbg !886
  call void @llvm.dbg.declare(metadata ptr %fmt.dbg.spill, metadata !883, metadata !DIExpression()), !dbg !889
  call void @llvm.dbg.declare(metadata ptr %_4.dbg.spill, metadata !885, metadata !DIExpression()), !dbg !886
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !890
  store ptr %fmt.0, ptr %7, align 8, !dbg !890
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !890
  store i64 %fmt.1, ptr %8, align 8, !dbg !890
  %9 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !891
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !891
  store ptr %pieces.0, ptr %10, align 8, !dbg !891
  %11 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !891
  store i64 %pieces.1, ptr %11, align 8, !dbg !891
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !891
  %13 = load ptr, ptr %12, align 8, !dbg !891, !align !505, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !891
  %15 = load i64, ptr %14, align 8, !dbg !891
  %16 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !891
  store ptr %13, ptr %16, align 8, !dbg !891
  %17 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !891
  store i64 %15, ptr %17, align 8, !dbg !891
  %18 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !891
  %19 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 0, !dbg !891
  store ptr %args.0, ptr %19, align 8, !dbg !891
  %20 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 1, !dbg !891
  store i64 %args.1, ptr %20, align 8, !dbg !891
  ret void, !dbg !892
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments6new_v117h9cb1f000867efa0eE(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !893 {
start:
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_15 = alloca { ptr, i64 }, align 8
  %_13 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !897, metadata !DIExpression()), !dbg !899
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !898, metadata !DIExpression()), !dbg !900
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !901
  br i1 %_4, label %bb1, label %bb2, !dbg !901

bb2:                                              ; preds = %start
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %args.1, i64 1), !dbg !902
  %_11.0 = extractvalue { i64, i1 } %5, 0, !dbg !902
  %_11.1 = extractvalue { i64, i1 } %5, 1, !dbg !902
  %6 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !902
  br i1 %6, label %panic, label %bb4, !dbg !902

bb1:                                              ; preds = %start
  store i8 1, ptr %_3, align 1, !dbg !901
  br label %bb3, !dbg !901

bb3:                                              ; preds = %bb4, %bb1
  %7 = load i8, ptr %_3, align 1, !dbg !901, !range !231, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !901
  br i1 %8, label %bb5, label %bb7, !dbg !901

bb4:                                              ; preds = %bb2
  %_7 = icmp ugt i64 %pieces.1, %_11.0, !dbg !903
  %9 = zext i1 %_7 to i8, !dbg !901
  store i8 %9, ptr %_3, align 1, !dbg !901
  br label %bb3, !dbg !901

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_70ba8b7154ac9595b89826f1cfa01994) #11, !dbg !902
  unreachable, !dbg !902

bb7:                                              ; preds = %bb3
  store ptr null, ptr %_15, align 8, !dbg !904
  %10 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !905
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !905
  store ptr %pieces.0, ptr %11, align 8, !dbg !905
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !905
  store i64 %pieces.1, ptr %12, align 8, !dbg !905
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_15, i32 0, i32 0, !dbg !905
  %14 = load ptr, ptr %13, align 8, !dbg !905, !align !505, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_15, i32 0, i32 1, !dbg !905
  %16 = load i64, ptr %15, align 8, !dbg !905
  %17 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !905
  store ptr %14, ptr %17, align 8, !dbg !905
  %18 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !905
  store i64 %16, ptr %18, align 8, !dbg !905
  %19 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !905
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !905
  store ptr %args.0, ptr %20, align 8, !dbg !905
  %21 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !905
  store i64 %args.1, ptr %21, align 8, !dbg !905
  ret void, !dbg !906

bb5:                                              ; preds = %bb3
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17hec4bca10500626d6E(ptr sret(%"core::fmt::Arguments<'_>") %_13, ptr align 8 @alloc_560206a49c61adca6f3f0639a12632eb, i64 1) #10, !dbg !907
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcc3c3e2c718b0327E(ptr %_13, ptr align 8 @alloc_1207ea98e8ac4534e05ac8444482993c) #11, !dbg !907
  unreachable, !dbg !907
}

; core::fmt::Arguments::new_const
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments9new_const17hec4bca10500626d6E(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1) unnamed_addr #0 !dbg !908 {
start:
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !912, metadata !DIExpression()), !dbg !913
  %_2 = icmp ugt i64 %pieces.1, 1, !dbg !914
  br i1 %_2, label %bb1, label %bb3, !dbg !914

bb3:                                              ; preds = %start
  store ptr null, ptr %_7, align 8, !dbg !915
  %3 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !916
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !916
  store ptr %pieces.0, ptr %4, align 8, !dbg !916
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !916
  store i64 %pieces.1, ptr %5, align 8, !dbg !916
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !916
  %7 = load ptr, ptr %6, align 8, !dbg !916, !align !505, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !916
  %9 = load i64, ptr %8, align 8, !dbg !916
  %10 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !916
  store ptr %7, ptr %10, align 8, !dbg !916
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !916
  store i64 %9, ptr %11, align 8, !dbg !916
  %12 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !916
  %13 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 0, !dbg !916
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %13, align 8, !dbg !916
  %14 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 1, !dbg !916
  store i64 0, ptr %14, align 8, !dbg !916
  ret void, !dbg !917

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17hec4bca10500626d6E(ptr sret(%"core::fmt::Arguments<'_>") %_5, ptr align 8 @alloc_560206a49c61adca6f3f0639a12632eb, i64 1) #10, !dbg !918
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcc3c3e2c718b0327E(ptr %_5, ptr align 8 @alloc_5eca5fde541bf3444e5a23d5419b88a4) #11, !dbg !918
  unreachable, !dbg !918
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h807652d7fd21b86bE(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !919 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %_9 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %b = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %a = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !925, metadata !DIExpression()), !dbg !931
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !926, metadata !DIExpression()), !dbg !932
  call void @llvm.dbg.declare(metadata ptr %a, metadata !927, metadata !DIExpression()), !dbg !933
  call void @llvm.dbg.declare(metadata ptr %b, metadata !929, metadata !DIExpression()), !dbg !934
; call core::ptr::read
  call void @_ZN4core3ptr4read17h905ff3938d01e6a8E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %a, ptr %x) #10, !dbg !935
; call core::ptr::read
  call void @_ZN4core3ptr4read17h905ff3938d01e6a8E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %b, ptr %y) #10, !dbg !936
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !937
; call core::ptr::write
  call void @_ZN4core3ptr5write17hafed66b0985665bbE(ptr %x, ptr %_9) #10, !dbg !938
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !939
; call core::ptr::write
  call void @_ZN4core3ptr5write17hafed66b0985665bbE(ptr %y, ptr %_12) #10, !dbg !940
  ret void, !dbg !941
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17he4eea0885f042464E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !942 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_9 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %b = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %a = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !947, metadata !DIExpression()), !dbg !953
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !948, metadata !DIExpression()), !dbg !954
  call void @llvm.dbg.declare(metadata ptr %a, metadata !949, metadata !DIExpression()), !dbg !955
  call void @llvm.dbg.declare(metadata ptr %b, metadata !951, metadata !DIExpression()), !dbg !956
; call core::ptr::read
  call void @_ZN4core3ptr4read17hd09643a295aa6f4fE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %a, ptr %x) #10, !dbg !957
; call core::ptr::read
  call void @_ZN4core3ptr4read17hd09643a295aa6f4fE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %b, ptr %y) #10, !dbg !958
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !959
; call core::ptr::write
  call void @_ZN4core3ptr5write17h3f35e8ee32e65675E(ptr %x, ptr %_9) #10, !dbg !960
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !961
; call core::ptr::write
  call void @_ZN4core3ptr5write17h3f35e8ee32e65675E(ptr %y, ptr %_12) #10, !dbg !962
  ret void, !dbg !963
}

; core::mem::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem4swap17h5e32ce30d0549785E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !964 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !966, metadata !DIExpression()), !dbg !968
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !967, metadata !DIExpression()), !dbg !969
  %_7 = icmp eq i64 8, 0, !dbg !970
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !970
  br i1 %0, label %panic, label %bb3, !dbg !970

bb3:                                              ; preds = %start
  %_4 = udiv i64 24, 8, !dbg !970
  %_3 = icmp ugt i64 %_4, 4, !dbg !970
  br i1 %_3, label %bb4, label %bb5, !dbg !970

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_f5758da710ba897165288b0f4da8acb3) #11, !dbg !970
  unreachable, !dbg !970

bb5:                                              ; preds = %bb3
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17he4eea0885f042464E(ptr align 8 %x, ptr align 8 %y) #10, !dbg !971
  br label %bb6, !dbg !971

bb4:                                              ; preds = %bb3
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h14bf40e646ab197dE(ptr %x, ptr %y, i64 1) #10, !dbg !972
  br label %bb6, !dbg !972

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !973
}

; core::mem::forget
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem6forget17h252116982950a14dE(ptr %t) unnamed_addr #0 !dbg !974 {
start:
  %_2 = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  call void @llvm.dbg.declare(metadata ptr %t, metadata !978, metadata !DIExpression()), !dbg !979
  call void @llvm.dbg.declare(metadata ptr %t, metadata !980, metadata !DIExpression()), !dbg !986
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %t, i64 24, i1 false), !dbg !988
  ret void, !dbg !989
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17he5a0beee4fd45944E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !990 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !997, metadata !DIExpression()), !dbg !1002
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !998, metadata !DIExpression()), !dbg !1003
  store i64 %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1004, metadata !DIExpression()), !dbg !1017
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1013, metadata !DIExpression()), !dbg !1019
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1020
  %_5.0.i = extractvalue { i64, i1 } %3, 0, !dbg !1020
  %_5.1.i = extractvalue { i64, i1 } %3, 1, !dbg !1020
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !1021
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill.i, metadata !1014, metadata !DIExpression()), !dbg !1022
  %4 = zext i1 %_5.1.i to i8, !dbg !1023
  store i8 %4, ptr %b.dbg.spill.i, align 1, !dbg !1023
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill.i, metadata !1016, metadata !DIExpression()), !dbg !1024
  store i64 %_5.0.i, ptr %0, align 8, !dbg !1025
  %5 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1025
  %6 = zext i1 %_5.1.i to i8, !dbg !1025
  store i8 %6, ptr %5, align 8, !dbg !1025
  %7 = load i64, ptr %0, align 8, !dbg !1026, !noundef !24
  %8 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1026
  %9 = load i8, ptr %8, align 8, !dbg !1026, !range !231, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1026
  %11 = zext i1 %10 to i8, !dbg !1026
  %12 = insertvalue { i64, i8 } poison, i64 %7, 0, !dbg !1026
  %13 = insertvalue { i64, i8 } %12, i8 %11, 1, !dbg !1026
  %_5.0 = extractvalue { i64, i8 } %13, 0, !dbg !1027
  %14 = extractvalue { i64, i8 } %13, 1, !dbg !1027
  %_5.1 = trunc i8 %14 to i1, !dbg !1027
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !1028
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !999, metadata !DIExpression()), !dbg !1029
  %15 = zext i1 %_5.1 to i8, !dbg !1030
  store i8 %15, ptr %b.dbg.spill, align 1, !dbg !1030
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1001, metadata !DIExpression()), !dbg !1031
  %16 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1032
  %17 = zext i1 %16 to i8, !dbg !1032
  store i8 %17, ptr %1, align 1, !dbg !1032
  %18 = load i8, ptr %1, align 1, !dbg !1032, !range !231, !noundef !24
  %_6 = trunc i8 %18 to i1, !dbg !1032
  br i1 %_6, label %bb3, label %bb4, !dbg !1032

bb4:                                              ; preds = %start
  %19 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1033
  store i64 %_5.0, ptr %19, align 8, !dbg !1033
  store i64 1, ptr %2, align 8, !dbg !1033
  br label %bb5, !dbg !1034

bb3:                                              ; preds = %start
  store i64 0, ptr %2, align 8, !dbg !1035
  br label %bb5, !dbg !1034

bb5:                                              ; preds = %bb4, %bb3
  %20 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !1036
  %21 = load i64, ptr %20, align 8, !dbg !1036, !range !1037, !noundef !24
  %22 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1036
  %23 = load i64, ptr %22, align 8, !dbg !1036
  %24 = insertvalue { i64, i64 } poison, i64 %21, 0, !dbg !1036
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1, !dbg !1036
  ret { i64, i64 } %25, !dbg !1036
}

; core::num::<impl usize>::next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17ha4fc2aa9633a53bdE"(i64 %self) unnamed_addr #0 !dbg !1038 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1042, metadata !DIExpression()), !dbg !1043
; call core::num::<impl usize>::one_less_than_next_power_of_two
  %_2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h3a7b7dd04ec8ca05E"(i64 %self) #10, !dbg !1044
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_2, i64 1), !dbg !1044
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !1044
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !1044
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !1044
  br i1 %1, label %panic, label %bb2, !dbg !1044

bb2:                                              ; preds = %start
  ret i64 %_3.0, !dbg !1045

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_4d780623f0d854654618d3ce6b6a177d) #11, !dbg !1044
  unreachable, !dbg !1044
}

; core::num::<impl usize>::one_less_than_next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h3a7b7dd04ec8ca05E"(i64 %self) unnamed_addr #0 !dbg !1046 {
start:
  %z.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %p.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1048, metadata !DIExpression()), !dbg !1053
  %_2 = icmp ule i64 %self, 1, !dbg !1054
  br i1 %_2, label %bb1, label %bb2, !dbg !1054

bb2:                                              ; preds = %start
  %_4.0 = sub i64 %self, 1, !dbg !1055
  %_4.1 = icmp ult i64 %self, 1, !dbg !1055
  %2 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1055
  br i1 %2, label %panic, label %bb3, !dbg !1055

bb1:                                              ; preds = %start
  store i64 0, ptr %1, align 8, !dbg !1056
  br label %bb6, !dbg !1057

bb6:                                              ; preds = %bb5, %bb1
  %3 = load i64, ptr %1, align 8, !dbg !1057, !noundef !24
  ret i64 %3, !dbg !1057

bb3:                                              ; preds = %bb2
  store i64 %_4.0, ptr %p.dbg.spill, align 8, !dbg !1055
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !1049, metadata !DIExpression()), !dbg !1058
  %4 = call i64 @llvm.ctlz.i64(i64 %_4.0, i1 true), !dbg !1059
  store i64 %4, ptr %0, align 8, !dbg !1059
  %z = load i64, ptr %0, align 8, !dbg !1059, !noundef !24
  store i64 %z, ptr %z.dbg.spill, align 8, !dbg !1059
  call void @llvm.dbg.declare(metadata ptr %z.dbg.spill, metadata !1051, metadata !DIExpression()), !dbg !1060
  %_7 = icmp ult i64 %z, 64, !dbg !1061
  %5 = call i1 @llvm.expect.i1(i1 %_7, i1 true), !dbg !1061
  br i1 %5, label %bb5, label %panic1, !dbg !1061

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4d780623f0d854654618d3ce6b6a177d) #11, !dbg !1055
  unreachable, !dbg !1055

bb5:                                              ; preds = %bb3
  %6 = and i64 %z, 63, !dbg !1061
  %7 = lshr i64 -1, %6, !dbg !1061
  store i64 %7, ptr %1, align 8, !dbg !1061
  br label %bb6, !dbg !1057

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.4, i64 36, ptr align 8 @alloc_4d780623f0d854654618d3ce6b6a177d) #11, !dbg !1061
  unreachable, !dbg !1061
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h03aca0fca6a98bafE"(ptr %self) unnamed_addr #0 !dbg !1062 {
start:
  %exclusive_end.dbg.spill = alloca i64, align 8
  %start1 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1067, metadata !DIExpression()), !dbg !1072
  call void @llvm.dbg.declare(metadata ptr %start1, metadata !1070, metadata !DIExpression()), !dbg !1073
  %1 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 1, !dbg !1074
  %_3 = load i64, ptr %1, align 8, !dbg !1074, !noundef !24
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_3, i64 1), !dbg !1074
  %_4.0 = extractvalue { i64, i1 } %2, 0, !dbg !1074
  %_4.1 = extractvalue { i64, i1 } %2, 1, !dbg !1074
  %3 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1074
  br i1 %3, label %panic, label %bb1, !dbg !1074

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %exclusive_end.dbg.spill, align 8, !dbg !1074
  call void @llvm.dbg.declare(metadata ptr %exclusive_end.dbg.spill, metadata !1068, metadata !DIExpression()), !dbg !1075
  %4 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 2, !dbg !1076
  %5 = load i8, ptr %4, align 8, !dbg !1076, !range !231, !noundef !24
  %_6 = trunc i8 %5 to i1, !dbg !1076
  br i1 %_6, label %bb2, label %bb3, !dbg !1076

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0e90a8d2edaf8520d1b6cc44dc6ee0c4) #11, !dbg !1074
  unreachable, !dbg !1074

bb3:                                              ; preds = %bb1
  %6 = load i64, ptr %self, align 8, !dbg !1077, !noundef !24
  store i64 %6, ptr %start1, align 8, !dbg !1077
  br label %bb4, !dbg !1078

bb2:                                              ; preds = %bb1
  store i64 %_4.0, ptr %start1, align 8, !dbg !1079
  br label %bb4, !dbg !1078

bb4:                                              ; preds = %bb3, %bb2
  %_7 = load i64, ptr %start1, align 8, !dbg !1080, !noundef !24
  store i64 %_7, ptr %0, align 8, !dbg !1080
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1080
  store i64 %_4.0, ptr %7, align 8, !dbg !1080
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !1081
  %9 = load i64, ptr %8, align 8, !dbg !1081, !noundef !24
  %10 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1081
  %11 = load i64, ptr %10, align 8, !dbg !1081, !noundef !24
  %12 = insertvalue { i64, i64 } poison, i64 %9, 0, !dbg !1081
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1, !dbg !1081
  ret { i64, i64 } %13, !dbg !1081
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17he8ad2fd493a493d0E"(ptr align 8 %self, ptr align 8 %0, ptr align 8 %1) unnamed_addr #1 !dbg !1082 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %args = alloca { ptr, ptr }, align 8
  store ptr %0, ptr %args, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1
  store ptr %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1101, metadata !DIExpression()), !dbg !1110
  call void @llvm.dbg.declare(metadata ptr %args, metadata !1102, metadata !DIExpression()), !dbg !1111
  %_3 = load ptr, ptr %self, align 8, !dbg !1112, !nonnull !24, !align !505, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 0, !dbg !1112
  %4 = load ptr, ptr %3, align 8, !dbg !1112, !nonnull !24, !align !505, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1, !dbg !1112
  %6 = load ptr, ptr %5, align 8, !dbg !1112, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %7 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %_3, ptr align 8 %4, ptr align 8 %6) #10, !dbg !1112
  ret i1 %7, !dbg !1113
}

; core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hc7fa04d0e9e7b875E"(ptr %_1) unnamed_addr #1 !dbg !1114 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1125, metadata !DIExpression()), !dbg !1128
; call <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h77dec7ed114c43caE"(ptr align 8 %_1) #10, !dbg !1128
  ret void, !dbg !1128
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr19swap_nonoverlapping17h14bf40e646ab197dE(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1129 {
start:
  %self.dbg.spill.i20 = alloca ptr, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %y.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill16 = alloca i64, align 8
  %y.dbg.spill13 = alloca ptr, align 8
  %x.dbg.spill11 = alloca ptr, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %y.dbg.spill5 = alloca ptr, align 8
  %x.dbg.spill3 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_39 = alloca i8, align 1
  %_20 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1133, metadata !DIExpression()), !dbg !1149
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1134, metadata !DIExpression()), !dbg !1150
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1135, metadata !DIExpression()), !dbg !1151
  br i1 true, label %bb1, label %bb2, !dbg !1152

bb2:                                              ; preds = %_ZN4core3ptr19swap_nonoverlapping7runtime17h3fd3520157bcf689E.exit, %start
  %_8 = icmp ule i64 8, 8, !dbg !1153
  br i1 %_8, label %bb4, label %bb3, !dbg !1153

bb1:                                              ; preds = %start
  store ptr %x, ptr %_6, align 8, !dbg !1152
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1152
  store ptr %y, ptr %1, align 8, !dbg !1152
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1152
  store i64 %count, ptr %2, align 8, !dbg !1152
  %3 = load ptr, ptr %_6, align 8, !dbg !1152, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1152
  %5 = load ptr, ptr %4, align 8, !dbg !1152, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1152
  %7 = load i64, ptr %6, align 8, !dbg !1152, !noundef !24
  store ptr %3, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !1154, metadata !DIExpression()), !dbg !1160
  store ptr %5, ptr %y.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill.i, metadata !1158, metadata !DIExpression()), !dbg !1160
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1159, metadata !DIExpression()), !dbg !1160
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %3) #10, !dbg !1162
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !1162

bb4.i:                                            ; preds = %bb1
  store i8 0, ptr %_6.i, align 1, !dbg !1162
  br label %bb6.i, !dbg !1162

bb5.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_9.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %5) #10, !dbg !1164
  %8 = zext i1 %_9.i to i8, !dbg !1162
  store i8 %8, ptr %_6.i, align 1, !dbg !1162
  br label %bb6.i, !dbg !1162

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !1162, !range !231, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1162
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !1162

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !1162
  br label %bb3.i, !dbg !1162

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_11.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h486db419f38937a8E(ptr %3, ptr %5, i64 %7) #10, !dbg !1165
  %11 = zext i1 %_11.i to i8, !dbg !1162
  store i8 %11, ptr %_5.i, align 1, !dbg !1162
  br label %bb3.i, !dbg !1162

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !1166, !range !231, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !1166
  %_4.i = xor i1 %13, true, !dbg !1166
  br i1 %_4.i, label %bb10.i, label %_ZN4core3ptr19swap_nonoverlapping7runtime17h3fd3520157bcf689E.exit, !dbg !1166

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_546a48d82dbbd37bfd409d4513b73f46, i64 166) #11, !dbg !1167
  unreachable, !dbg !1167

_ZN4core3ptr19swap_nonoverlapping7runtime17h3fd3520157bcf689E.exit: ; preds = %bb3.i
  br label %bb2, !dbg !1152

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_7, align 1, !dbg !1153
  br label %bb5, !dbg !1153

bb4:                                              ; preds = %bb2
  store i64 24, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1168, metadata !DIExpression()), !dbg !1171
  store i64 24, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1173, metadata !DIExpression()), !dbg !1178
  store i64 2, ptr %0, align 8, !dbg !1180
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1180, !noundef !24
  %14 = trunc i64 %_2.i.i to i32, !dbg !1180
  %15 = icmp eq i32 %14, 1, !dbg !1181
  %_12 = xor i1 %15, true, !dbg !1182
  br i1 %_12, label %bb8, label %bb9, !dbg !1183

bb9:                                              ; preds = %bb4
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 8, i64 2), !dbg !1184
  %_19.0 = extractvalue { i64, i1 } %16, 0, !dbg !1184
  %_19.1 = extractvalue { i64, i1 } %16, 1, !dbg !1184
  %17 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !1184
  br i1 %17, label %panic, label %bb15, !dbg !1184

bb8:                                              ; preds = %bb4
  store i8 1, ptr %_11, align 1, !dbg !1183
  br label %bb10, !dbg !1183

bb10:                                             ; preds = %bb15, %bb8
  %18 = load i8, ptr %_11, align 1, !dbg !1153, !range !231, !noundef !24
  %19 = trunc i8 %18 to i1, !dbg !1153
  %20 = zext i1 %19 to i8, !dbg !1153
  store i8 %20, ptr %_7, align 1, !dbg !1153
  br label %bb5, !dbg !1153

bb15:                                             ; preds = %bb9
  %_15 = icmp ugt i64 24, %_19.0, !dbg !1185
  %21 = zext i1 %_15 to i8, !dbg !1183
  store i8 %21, ptr %_11, align 1, !dbg !1183
  br label %bb10, !dbg !1183

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_a8d2d57d37571df30f9c47ba3b3c586b) #11, !dbg !1184
  unreachable, !dbg !1184

bb5:                                              ; preds = %bb3, %bb10
  %22 = load i8, ptr %_7, align 1, !dbg !1153, !range !231, !noundef !24
  %23 = trunc i8 %22 to i1, !dbg !1153
  br i1 %23, label %bb16, label %bb48, !dbg !1153

bb48:                                             ; preds = %bb35, %bb5
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17ha7471897e390b518E(ptr %x, ptr %y, i64 %count) #10, !dbg !1186
  br label %bb49, !dbg !1186

bb16:                                             ; preds = %bb5
  %_21 = icmp uge i64 8, 8, !dbg !1187
  br i1 %_21, label %bb18, label %bb17, !dbg !1187

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_20, align 1, !dbg !1187
  br label %bb19, !dbg !1187

bb18:                                             ; preds = %bb16
  %_28 = icmp eq i64 8, 0, !dbg !1187
  %24 = call i1 @llvm.expect.i1(i1 %_28, i1 false), !dbg !1187
  br i1 %24, label %panic1, label %bb24, !dbg !1187

bb24:                                             ; preds = %bb18
  %_25 = urem i64 24, 8, !dbg !1187
  %_24 = icmp eq i64 %_25, 0, !dbg !1187
  %25 = zext i1 %_24 to i8, !dbg !1187
  store i8 %25, ptr %_20, align 1, !dbg !1187
  br label %bb19, !dbg !1187

panic1:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.6, i64 57, ptr align 8 @alloc_1c99eb2e2429202974a1788dce7f6920) #11, !dbg !1187
  unreachable, !dbg !1187

bb19:                                             ; preds = %bb17, %bb24
  %26 = load i8, ptr %_20, align 1, !dbg !1187, !range !231, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !1187
  br i1 %27, label %bb25, label %bb32, !dbg !1187

bb32:                                             ; preds = %bb19
  %_40 = icmp uge i64 8, 1, !dbg !1188
  br i1 %_40, label %bb34, label %bb33, !dbg !1188

bb25:                                             ; preds = %bb19
  store ptr %x, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !1189, metadata !DIExpression()), !dbg !1196
  store ptr %x, ptr %x.dbg.spill3, align 8, !dbg !1187
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill3, metadata !1136, metadata !DIExpression()), !dbg !1198
  store ptr %y, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !1189, metadata !DIExpression()), !dbg !1199
  store ptr %y, ptr %y.dbg.spill5, align 8, !dbg !1198
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill5, metadata !1138, metadata !DIExpression()), !dbg !1201
  %_35 = icmp eq i64 8, 0, !dbg !1201
  %28 = call i1 @llvm.expect.i1(i1 %_35, i1 false), !dbg !1201
  br i1 %28, label %panic6, label %bb30, !dbg !1201

bb30:                                             ; preds = %bb25
  %_32 = udiv i64 24, 8, !dbg !1201
  %29 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_32), !dbg !1201
  %_36.0 = extractvalue { i64, i1 } %29, 0, !dbg !1201
  %_36.1 = extractvalue { i64, i1 } %29, 1, !dbg !1201
  %30 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !1201
  br i1 %30, label %panic7, label %bb31, !dbg !1201

panic6:                                           ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_1c99eb2e2429202974a1788dce7f6920) #11, !dbg !1201
  unreachable, !dbg !1201

bb31:                                             ; preds = %bb30
  store i64 %_36.0, ptr %count.dbg.spill8, align 8, !dbg !1201
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill8, metadata !1140, metadata !DIExpression()), !dbg !1202
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h2992f7f5871a51d8E(ptr %x, ptr %y, i64 %_36.0) #10, !dbg !1202
  br label %bb49, !dbg !1202

panic7:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_1c99eb2e2429202974a1788dce7f6920) #11, !dbg !1201
  unreachable, !dbg !1201

bb49:                                             ; preds = %bb48, %bb47, %bb31
  ret void, !dbg !1203

bb33:                                             ; preds = %bb32
  store i8 0, ptr %_39, align 1, !dbg !1188
  br label %bb35, !dbg !1188

bb34:                                             ; preds = %bb32
  %_47 = icmp eq i64 1, 0, !dbg !1188
  %31 = call i1 @llvm.expect.i1(i1 %_47, i1 false), !dbg !1188
  br i1 %31, label %panic9, label %bb40, !dbg !1188

bb40:                                             ; preds = %bb34
  %_44 = urem i64 24, 1, !dbg !1188
  %_43 = icmp eq i64 %_44, 0, !dbg !1188
  %32 = zext i1 %_43 to i8, !dbg !1188
  store i8 %32, ptr %_39, align 1, !dbg !1188
  br label %bb35, !dbg !1188

panic9:                                           ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.6, i64 57, ptr align 8 @alloc_aee30a4ba5cd6160a04cfc5ee6f29e2a) #11, !dbg !1188
  unreachable, !dbg !1188

bb35:                                             ; preds = %bb33, %bb40
  %33 = load i8, ptr %_39, align 1, !dbg !1188, !range !231, !noundef !24
  %34 = trunc i8 %33 to i1, !dbg !1188
  br i1 %34, label %bb41, label %bb48, !dbg !1188

bb41:                                             ; preds = %bb35
  store ptr %x, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !1204, metadata !DIExpression()), !dbg !1211
  store ptr %x, ptr %x.dbg.spill11, align 8, !dbg !1188
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill11, metadata !1142, metadata !DIExpression()), !dbg !1213
  store ptr %y, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !1204, metadata !DIExpression()), !dbg !1214
  store ptr %y, ptr %y.dbg.spill13, align 8, !dbg !1213
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill13, metadata !1145, metadata !DIExpression()), !dbg !1216
  %_54 = icmp eq i64 1, 0, !dbg !1216
  %35 = call i1 @llvm.expect.i1(i1 %_54, i1 false), !dbg !1216
  br i1 %35, label %panic14, label %bb46, !dbg !1216

bb46:                                             ; preds = %bb41
  %_51 = udiv i64 24, 1, !dbg !1216
  %36 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_51), !dbg !1216
  %_55.0 = extractvalue { i64, i1 } %36, 0, !dbg !1216
  %_55.1 = extractvalue { i64, i1 } %36, 1, !dbg !1216
  %37 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !1216
  br i1 %37, label %panic15, label %bb47, !dbg !1216

panic14:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_aee30a4ba5cd6160a04cfc5ee6f29e2a) #11, !dbg !1216
  unreachable, !dbg !1216

bb47:                                             ; preds = %bb46
  store i64 %_55.0, ptr %count.dbg.spill16, align 8, !dbg !1216
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill16, metadata !1147, metadata !DIExpression()), !dbg !1217
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h94881f616af7425fE(ptr %x, ptr %y, i64 %_55.0) #10, !dbg !1217
  br label %bb49, !dbg !1217

panic15:                                          ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_aee30a4ba5cd6160a04cfc5ee6f29e2a) #11, !dbg !1216
  unreachable, !dbg !1216
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc575d0d4a9b6007aE(ptr %data, i64 %len) unnamed_addr #0 !dbg !1218 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1222, metadata !DIExpression()), !dbg !1224
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1223, metadata !DIExpression()), !dbg !1225
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !535, metadata !DIExpression()), !dbg !1226
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h5ef2fb41e999ef30E(ptr %data, i64 %len) #10, !dbg !1228
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1228
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1228
  %3 = insertvalue { ptr, i64 } poison, ptr %1, 0, !dbg !1229
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1229
  ret { ptr, i64 } %4, !dbg !1229
}

; core::ptr::drop_in_place<u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17h0d1b952ff6a411c0E"(ptr %_1) unnamed_addr #0 !dbg !1230 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1235, metadata !DIExpression()), !dbg !1238
  ret void, !dbg !1238
}

; core::ptr::drop_in_place<u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17h59468430190addc9E"(ptr %_1) unnamed_addr #0 !dbg !1239 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1244, metadata !DIExpression()), !dbg !1247
  ret void, !dbg !1247
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h1f03307f4642ee5fE(ptr %data, i64 %len) unnamed_addr #0 !dbg !1248 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1252, metadata !DIExpression()), !dbg !1254
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1253, metadata !DIExpression()), !dbg !1255
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1256, metadata !DIExpression()), !dbg !1262
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h3528cc9840df2208E(ptr %data, i64 %len) #10, !dbg !1264
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1264
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1264
  %3 = insertvalue { ptr, i64 } poison, ptr %1, 0, !dbg !1265
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1265
  ret { ptr, i64 } %4, !dbg !1265
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h90f3a43d58ba3f66E"(ptr %_1) unnamed_addr #0 !dbg !1266 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1271, metadata !DIExpression()), !dbg !1274
  ret void, !dbg !1274
}

; core::ptr::drop_in_place<&u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h1d48bcbf945a0c27E"(ptr %_1) unnamed_addr #0 !dbg !1275 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1280, metadata !DIExpression()), !dbg !1283
  ret void, !dbg !1283
}

; core::ptr::drop_in_place<&u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17he613e3a6f7dd0b26E"(ptr %_1) unnamed_addr #0 !dbg !1284 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1289, metadata !DIExpression()), !dbg !1292
  ret void, !dbg !1292
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17ha7471897e390b518E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1293 {
start:
  %self.dbg.spill.i10 = alloca ptr, align 8
  %self.dbg.spill.i9 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1295, metadata !DIExpression()), !dbg !1309
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1296, metadata !DIExpression()), !dbg !1310
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1297, metadata !DIExpression()), !dbg !1311
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1303, metadata !DIExpression()), !dbg !1312
  store ptr %x, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1313, metadata !DIExpression()), !dbg !1320
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1322
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1298, metadata !DIExpression()), !dbg !1323
  store ptr %y, ptr %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !1313, metadata !DIExpression()), !dbg !1324
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1326
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1301, metadata !DIExpression()), !dbg !1327
  store i64 0, ptr %i, align 8, !dbg !1328
  br label %bb3, !dbg !1329

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1330, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1330
  br i1 %_7, label %bb4, label %bb9, !dbg !1330

bb9:                                              ; preds = %bb3
  ret void, !dbg !1331

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !1332, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1333, metadata !DIExpression()), !dbg !1339
  store i64 %_12, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1338, metadata !DIExpression()), !dbg !1341
  %0 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %x, i64 %_12, !dbg !1342
  store ptr %0, ptr %x.dbg.spill5, align 8, !dbg !1343
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1305, metadata !DIExpression()), !dbg !1344
  %_16 = load i64, ptr %i, align 8, !dbg !1345, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1333, metadata !DIExpression()), !dbg !1346
  store i64 %_16, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1338, metadata !DIExpression()), !dbg !1348
  %1 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %y, i64 %_16, !dbg !1349
  store ptr %1, ptr %y.dbg.spill6, align 8, !dbg !1350
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1307, metadata !DIExpression()), !dbg !1351
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h807652d7fd21b86bE(ptr align 8 %0, ptr align 8 %1) #10, !dbg !1352
  %2 = load i64, ptr %i, align 8, !dbg !1353, !noundef !24
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %2, i64 1), !dbg !1353
  %_18.0 = extractvalue { i64, i1 } %3, 0, !dbg !1353
  %_18.1 = extractvalue { i64, i1 } %3, 1, !dbg !1353
  %4 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1353
  br i1 %4, label %panic, label %bb8, !dbg !1353

bb8:                                              ; preds = %bb4
  store i64 %_18.0, ptr %i, align 8, !dbg !1353
  br label %bb3, !dbg !1329

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_dbabcbd9c3313ee88be66af0b6b2af23) #11, !dbg !1353
  unreachable, !dbg !1353
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h905ff3938d01e6a8E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %0, ptr %src) unnamed_addr #0 !dbg !1354 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1358, metadata !DIExpression()), !dbg !1359
  br i1 true, label %bb1, label %bb2, !dbg !1360

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17hbe099cc0c7dcd741E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %src, i64 24, i1 false), !dbg !1361
  ret void, !dbg !1362

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1360
  %1 = load ptr, ptr %_4, align 8, !dbg !1360, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1363, metadata !DIExpression()), !dbg !1369
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1f7b303582864a0eE(ptr %1) #10, !dbg !1371
  %_2.i = xor i1 %_3.i, true, !dbg !1373
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17hbe099cc0c7dcd741E.exit, !dbg !1373

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1374
  unreachable, !dbg !1374

_ZN4core3ptr4read7runtime17hbe099cc0c7dcd741E.exit: ; preds = %bb1
  br label %bb2, !dbg !1360
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17hd09643a295aa6f4fE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %src) unnamed_addr #0 !dbg !1375 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1379, metadata !DIExpression()), !dbg !1380
  br i1 true, label %bb1, label %bb2, !dbg !1381

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17ha0362d9476d0d463E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %src, i64 24, i1 false), !dbg !1382
  ret void, !dbg !1383

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1381
  %1 = load ptr, ptr %_4, align 8, !dbg !1381, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1384, metadata !DIExpression()), !dbg !1389
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %1) #10, !dbg !1391
  %_2.i = xor i1 %_3.i, true, !dbg !1393
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17ha0362d9476d0d463E.exit, !dbg !1393

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1394
  unreachable, !dbg !1394

_ZN4core3ptr4read7runtime17ha0362d9476d0d463E.exit: ; preds = %bb1
  br label %bb2, !dbg !1381
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17hdded449a2079ac21E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1395 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1399, metadata !DIExpression()), !dbg !1403
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1400, metadata !DIExpression()), !dbg !1404
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1401, metadata !DIExpression()), !dbg !1405
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1406, metadata !DIExpression()), !dbg !1412
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %x, ptr %tmp, i64 1) #10, !dbg !1414
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17hec6c0c291f5acb3dE(ptr %y, ptr %x, i64 1) #10, !dbg !1415
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1416, metadata !DIExpression()), !dbg !1422
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %tmp, ptr %y, i64 1) #10, !dbg !1424
  ret void, !dbg !1425
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17hedb66df694a232a2E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1426 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1430, metadata !DIExpression()), !dbg !1441
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1431, metadata !DIExpression()), !dbg !1442
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1432, metadata !DIExpression()), !dbg !1443
  %1 = load i64, ptr %0, align 8, !dbg !1444
  store i64 %1, ptr %tmp, align 8, !dbg !1449
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1450, metadata !DIExpression()), !dbg !1456
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hbc768b6fe7843ff2E(ptr %x, ptr %tmp, i64 1) #10, !dbg !1458
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h51769a115d3c0008E(ptr %y, ptr %x, i64 1) #10, !dbg !1459
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1460, metadata !DIExpression()), !dbg !1466
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hbc768b6fe7843ff2E(ptr %tmp, ptr %y, i64 1) #10, !dbg !1468
  ret void, !dbg !1469
}

; core::ptr::drop_in_place<bootloader::bootinfo::TlsTemplate>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17h6ae0b0f7ed3292adE"(ptr %_1) unnamed_addr #0 !dbg !1470 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1475, metadata !DIExpression()), !dbg !1478
  ret void, !dbg !1478
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h3f35e8ee32e65675E(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1479 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1483, metadata !DIExpression()), !dbg !1485
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1484, metadata !DIExpression()), !dbg !1486
  br i1 true, label %bb1, label %bb2, !dbg !1487

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h6c25d0ab43985085E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1488
  ret void, !dbg !1489

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1487
  %0 = load ptr, ptr %_5, align 8, !dbg !1487, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1490, metadata !DIExpression()), !dbg !1496
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %0) #10, !dbg !1498
  %_2.i = xor i1 %_3.i, true, !dbg !1500
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17h6c25d0ab43985085E.exit, !dbg !1500

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1501
  unreachable, !dbg !1501

_ZN4core3ptr5write7runtime17h6c25d0ab43985085E.exit: ; preds = %bb1
  br label %bb2, !dbg !1487
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hafed66b0985665bbE(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1502 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1506, metadata !DIExpression()), !dbg !1508
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1507, metadata !DIExpression()), !dbg !1509
  br i1 true, label %bb1, label %bb2, !dbg !1510

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17hc4ed1339c3c863d7E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1511
  ret void, !dbg !1512

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1510
  %0 = load ptr, ptr %_5, align 8, !dbg !1510, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1513, metadata !DIExpression()), !dbg !1518
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1f7b303582864a0eE(ptr %0) #10, !dbg !1520
  %_2.i = xor i1 %_3.i, true, !dbg !1522
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17hc4ed1339c3c863d7E.exit, !dbg !1522

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1523
  unreachable, !dbg !1523

_ZN4core3ptr5write7runtime17hc4ed1339c3c863d7E.exit: ; preds = %bb1
  br label %bb2, !dbg !1510
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17h2c5337d4da264d35E"(ptr %_1) unnamed_addr #0 !dbg !1524 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1529, metadata !DIExpression()), !dbg !1532
  ret void, !dbg !1532
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::FrameRange>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h9b528ae7c97fe701E"(ptr %_1) unnamed_addr #0 !dbg !1533 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1538, metadata !DIExpression()), !dbg !1541
  ret void, !dbg !1541
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17hae02b1beb7e7cb90E"(ptr %_1) unnamed_addr #0 !dbg !1542 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1547, metadata !DIExpression()), !dbg !1548
  ret void, !dbg !1548
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h6e55fed4ff0fa7d3E"(ptr %_1) unnamed_addr #0 !dbg !1549 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1554, metadata !DIExpression()), !dbg !1557
  ret void, !dbg !1557
}

; core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h2180d59b4f32e1e2E"(ptr %ptr) unnamed_addr #0 !dbg !1558 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1563, metadata !DIExpression()), !dbg !1564
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1565, metadata !DIExpression()), !dbg !1572
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1574, metadata !DIExpression()), !dbg !1580
  %0 = ptrtoint ptr %ptr to i64, !dbg !1582
  %1 = icmp eq i64 %0, 0, !dbg !1583
  ret i1 %1, !dbg !1584
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h80913f6eb8ff5050E"(ptr %self) unnamed_addr #0 !dbg !1585 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1589, metadata !DIExpression()), !dbg !1590
  store ptr %self, ptr %_2, align 8, !dbg !1591
  %0 = load ptr, ptr %_2, align 8, !dbg !1592, !noundef !24
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h2180d59b4f32e1e2E"(ptr %0) #10, !dbg !1592
  ret i1 %1, !dbg !1593
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h5ef2fb41e999ef30E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1594 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1600, metadata !DIExpression()), !dbg !1602
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1601, metadata !DIExpression()), !dbg !1603
  store ptr %data_address, ptr %_4, align 8, !dbg !1604
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1604
  store i64 %metadata, ptr %0, align 8, !dbg !1604
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1605
  %2 = load ptr, ptr %1, align 8, !dbg !1605, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1605
  %4 = load i64, ptr %3, align 8, !dbg !1605, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1605
  store ptr %2, ptr %5, align 8, !dbg !1605
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1605
  store i64 %4, ptr %6, align 8, !dbg !1605
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1605
  %8 = load ptr, ptr %7, align 8, !dbg !1605, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1605
  %10 = load i64, ptr %9, align 8, !dbg !1605, !noundef !24
  %11 = insertvalue { ptr, i64 } poison, ptr %8, 0, !dbg !1606
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1606
  ret { ptr, i64 } %12, !dbg !1606
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define ptr @_ZN4core3ptr8metadata14from_raw_parts17hfe156685108b7d9dE(ptr %data_address) unnamed_addr #0 !dbg !1607 {
start:
  %metadata.dbg.spill = alloca {}, align 1
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"core::ptr::metadata::PtrComponents<bootinfo::memory_map::MemoryRegion>", align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1611, metadata !DIExpression()), !dbg !1613
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1612, metadata !DIExpression()), !dbg !1614
  store ptr %data_address, ptr %_4, align 8, !dbg !1615
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 8, i1 false), !dbg !1616
  %0 = load ptr, ptr %_3, align 8, !dbg !1616, !noundef !24
  ret ptr %0, !dbg !1617
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h3528cc9840df2208E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1618 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1622, metadata !DIExpression()), !dbg !1624
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1623, metadata !DIExpression()), !dbg !1625
  store ptr %data_address, ptr %_4, align 8, !dbg !1626
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1626
  store i64 %metadata, ptr %0, align 8, !dbg !1626
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1627
  %2 = load ptr, ptr %1, align 8, !dbg !1627, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1627
  %4 = load i64, ptr %3, align 8, !dbg !1627, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1627
  store ptr %2, ptr %5, align 8, !dbg !1627
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1627
  store i64 %4, ptr %6, align 8, !dbg !1627
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1627
  %8 = load ptr, ptr %7, align 8, !dbg !1627, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1627
  %10 = load i64, ptr %9, align 8, !dbg !1627, !noundef !24
  %11 = insertvalue { ptr, i64 } poison, ptr %8, 0, !dbg !1628
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1628
  ret { ptr, i64 } %12, !dbg !1628
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr8metadata8metadata17h9fb0ee2fa53d74d6E(ptr %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1629 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1633, metadata !DIExpression()), !dbg !1634
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 0, !dbg !1635
  store ptr %ptr.0, ptr %2, align 8, !dbg !1635
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1635
  store i64 %ptr.1, ptr %3, align 8, !dbg !1635
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1635
  %5 = load i64, ptr %4, align 8, !dbg !1635, !noundef !24
  ret i64 %5, !dbg !1636
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr8metadata8metadata17hf388667ed3b973a7E(ptr %ptr) unnamed_addr #0 !dbg !1637 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1639, metadata !DIExpression()), !dbg !1640
  store ptr %ptr, ptr %_2, align 8, !dbg !1641
  ret void, !dbg !1642
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5580be51254bb83eE"(ptr %ptr) unnamed_addr #0 !dbg !1643 {
start:
  %ptr.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1648, metadata !DIExpression()), !dbg !1649
  br i1 true, label %bb1, label %bb2, !dbg !1650

bb2:                                              ; preds = %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17head1b3abff70122eE.exit", %start
  store ptr %ptr, ptr %0, align 8, !dbg !1651
  %1 = load ptr, ptr %0, align 8, !dbg !1652, !nonnull !24, !noundef !24
  ret ptr %1, !dbg !1652

bb1:                                              ; preds = %start
  store ptr %ptr, ptr %_4, align 8, !dbg !1650
  %2 = load ptr, ptr %_4, align 8, !dbg !1650, !noundef !24
  store ptr %2, ptr %ptr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !1653, metadata !DIExpression()), !dbg !1658
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h80913f6eb8ff5050E"(ptr %2) #10, !dbg !1660
  %_3.i = xor i1 %_4.i, true, !dbg !1662
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17head1b3abff70122eE.exit", !dbg !1663

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_20b3d155afd5c58c42e598b7e6d186ef, i64 93) #11, !dbg !1664
  unreachable, !dbg !1664

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17head1b3abff70122eE.exit": ; preds = %bb1
  br label %bb2, !dbg !1650
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hc48e8baf7044c5d4E"(ptr %self) unnamed_addr #0 !dbg !1665 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1667, metadata !DIExpression()), !dbg !1668
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hece5c81fd3c029b4E"(ptr %self, i64 8) #10, !dbg !1669
  ret i1 %0, !dbg !1670
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hfa87dcb40fcac1f2E"(ptr %self) unnamed_addr #0 !dbg !1671 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1673, metadata !DIExpression()), !dbg !1674
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hac99ed1fb9b4d30fE"(ptr %self, i64 8) #10, !dbg !1675
  ret i1 %0, !dbg !1676
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hc5cacdf760c67ebbE"(ptr %ptr, i64 %align) unnamed_addr #0 !dbg !1677 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %align.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1682, metadata !DIExpression()), !dbg !1684
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1683, metadata !DIExpression()), !dbg !1685
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1686, metadata !DIExpression()), !dbg !1692
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1694, metadata !DIExpression()), !dbg !1700
  %0 = ptrtoint ptr %ptr to i64, !dbg !1702
  %_6.0 = sub i64 %align, 1, !dbg !1703
  %_6.1 = icmp ult i64 %align, 1, !dbg !1703
  %1 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !1703
  br i1 %1, label %panic, label %bb2, !dbg !1703

bb2:                                              ; preds = %start
  %_3 = and i64 %0, %_6.0, !dbg !1704
  %2 = icmp eq i64 %_3, 0, !dbg !1704
  ret i1 %2, !dbg !1705

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_bcdcc30e858a48da2606f80aa0163c31) #11, !dbg !1703
  unreachable, !dbg !1703
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hac99ed1fb9b4d30fE"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1706 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1710, metadata !DIExpression()), !dbg !1712
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1711, metadata !DIExpression()), !dbg !1713
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1168, metadata !DIExpression()), !dbg !1714
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1173, metadata !DIExpression()), !dbg !1716
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1718
  store i64 %1, ptr %0, align 8, !dbg !1718
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1718, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !1718
  %3 = icmp eq i32 %2, 1, !dbg !1719
  %_3 = xor i1 %3, true, !dbg !1720
  br i1 %_3, label %bb2, label %bb4, !dbg !1720

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !535, metadata !DIExpression()), !dbg !1721
  store ptr %self, ptr %_8, align 8, !dbg !1723
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !1723
  store i64 %align, ptr %4, align 8, !dbg !1723
  %5 = load ptr, ptr %_8, align 8, !dbg !1724, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !1724
  %7 = load i64, ptr %6, align 8, !dbg !1724, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hc5cacdf760c67ebbE"(ptr %5, i64 %7) #10, !dbg !1724
  ret i1 %8, !dbg !1725

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17hec4bca10500626d6E(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !1726
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcc3c3e2c718b0327E(ptr %_6, ptr align 8 @alloc_38eb3fe2a71bea9ddc57ce847c7c3987) #11, !dbg !1726
  unreachable, !dbg !1726
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hece5c81fd3c029b4E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1727 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1731, metadata !DIExpression()), !dbg !1733
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1732, metadata !DIExpression()), !dbg !1734
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1168, metadata !DIExpression()), !dbg !1735
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1173, metadata !DIExpression()), !dbg !1737
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1739
  store i64 %1, ptr %0, align 8, !dbg !1739
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1739, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !1739
  %3 = icmp eq i32 %2, 1, !dbg !1740
  %_3 = xor i1 %3, true, !dbg !1741
  br i1 %_3, label %bb2, label %bb4, !dbg !1741

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1742, metadata !DIExpression()), !dbg !1748
  store ptr %self, ptr %_8, align 8, !dbg !1750
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !1750
  store i64 %align, ptr %4, align 8, !dbg !1750
  %5 = load ptr, ptr %_8, align 8, !dbg !1751, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !1751
  %7 = load i64, ptr %6, align 8, !dbg !1751, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hc5cacdf760c67ebbE"(ptr %5, i64 %7) #10, !dbg !1751
  ret i1 %8, !dbg !1752

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17hec4bca10500626d6E(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !1753
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcc3c3e2c718b0327E(ptr %_6, ptr align 8 @alloc_38eb3fe2a71bea9ddc57ce847c7c3987) #11, !dbg !1753
  unreachable, !dbg !1753
}

; core::ptr::const_ptr::<impl *const T>::with_metadata_of
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h1643daf528826fd6E"(ptr %self, ptr %meta) unnamed_addr #0 !dbg !1754 {
start:
  %meta.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1759, metadata !DIExpression()), !dbg !1763
  store ptr %meta, ptr %meta.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %meta.dbg.spill, metadata !1760, metadata !DIExpression()), !dbg !1764
; call core::ptr::metadata::metadata
  call void @_ZN4core3ptr8metadata8metadata17hf388667ed3b973a7E(ptr %meta) #10, !dbg !1765
; call core::ptr::metadata::from_raw_parts
  %0 = call ptr @_ZN4core3ptr8metadata14from_raw_parts17hfe156685108b7d9dE(ptr %self) #10, !dbg !1766
  ret ptr %0, !dbg !1767
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17he0d5fdc4add1571dE"(ptr %ptr) unnamed_addr #0 !dbg !1768 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1773, metadata !DIExpression()), !dbg !1774
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1775, metadata !DIExpression()), !dbg !1780
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1782, metadata !DIExpression()), !dbg !1787
  %0 = ptrtoint ptr %ptr to i64, !dbg !1789
  %1 = icmp eq i64 %0, 0, !dbg !1790
  ret i1 %1, !dbg !1791
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h970d60a8eb56c4a7E"(ptr %self) unnamed_addr #0 !dbg !1792 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1794, metadata !DIExpression()), !dbg !1795
  store ptr %self, ptr %_2, align 8, !dbg !1796
  %0 = load ptr, ptr %_2, align 8, !dbg !1797, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17he0d5fdc4add1571dE"(ptr %0) #10, !dbg !1797
  ret i1 %1, !dbg !1798
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha851001275c507fbE"(ptr %self) unnamed_addr #0 !dbg !1799 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1801, metadata !DIExpression()), !dbg !1802
  store ptr %self, ptr %_2, align 8, !dbg !1803
  %0 = load ptr, ptr %_2, align 8, !dbg !1804, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17he0d5fdc4add1571dE"(ptr %0) #10, !dbg !1804
  ret i1 %1, !dbg !1805
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hce918766f5f8b5ffE"(ptr %self, ptr %origin) unnamed_addr #0 !dbg !1806 {
start:
  %origin.dbg.spill.i = alloca ptr, align 8
  %this.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %pointee_size.dbg.spill = alloca i64, align 8
  %origin.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca i8, align 1
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1810, metadata !DIExpression()), !dbg !1816
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1812, metadata !DIExpression()), !dbg !1817
  store ptr %origin, ptr %origin.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill, metadata !1811, metadata !DIExpression()), !dbg !1818
  br i1 true, label %bb1, label %bb2, !dbg !1819

bb2:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hbc49cdb577889e5eE.exit", %start
  store i64 24, ptr %pointee_size.dbg.spill, align 8, !dbg !1820
  call void @llvm.dbg.declare(metadata ptr %pointee_size.dbg.spill, metadata !1814, metadata !DIExpression()), !dbg !1821
  %_9 = icmp ult i64 0, 24, !dbg !1822
  br i1 %_9, label %bb5, label %bb4, !dbg !1822

bb1:                                              ; preds = %start
  store ptr %self, ptr %_5, align 8, !dbg !1819
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !1819
  store ptr %origin, ptr %1, align 8, !dbg !1819
  %2 = load ptr, ptr %_5, align 8, !dbg !1819, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !1819
  %4 = load ptr, ptr %3, align 8, !dbg !1819, !noundef !24
  store ptr %2, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !1823, metadata !DIExpression()), !dbg !1830
  store ptr %4, ptr %origin.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill.i, metadata !1829, metadata !DIExpression()), !dbg !1830
  %_4.i = icmp uge ptr %2, %4, !dbg !1832
  %_3.i = xor i1 %_4.i, true, !dbg !1834
  br i1 %_3.i, label %bb1.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hbc49cdb577889e5eE.exit", !dbg !1834

bb1.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_cb50775363ffdd1238910b6e9573721d, i64 71) #11, !dbg !1835
  unreachable, !dbg !1835

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hbc49cdb577889e5eE.exit": ; preds = %bb1
  br label %bb2, !dbg !1819

bb4:                                              ; preds = %bb2
  store i8 0, ptr %_8, align 1, !dbg !1822
  br label %bb6, !dbg !1822

bb5:                                              ; preds = %bb2
  %_11 = icmp ule i64 24, 9223372036854775807, !dbg !1836
  %5 = zext i1 %_11 to i8, !dbg !1822
  store i8 %5, ptr %_8, align 1, !dbg !1822
  br label %bb6, !dbg !1822

bb6:                                              ; preds = %bb4, %bb5
  %6 = load i8, ptr %_8, align 1, !dbg !1837, !range !231, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !1837
  %_7 = xor i1 %7, true, !dbg !1837
  br i1 %_7, label %bb7, label %bb8, !dbg !1837

bb8:                                              ; preds = %bb6
  %8 = ptrtoint ptr %self to i64, !dbg !1838
  %9 = ptrtoint ptr %origin to i64, !dbg !1838
  %10 = sub nuw i64 %8, %9, !dbg !1838
  %11 = udiv exact i64 %10, 24, !dbg !1838
  store i64 %11, ptr %0, align 8, !dbg !1838
  %12 = load i64, ptr %0, align 8, !dbg !1838, !noundef !24
  ret i64 %12, !dbg !1839

bb7:                                              ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_054967ab02808043e6941783e8d3de80) #11, !dbg !1837
  unreachable, !dbg !1837
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5092485984f6bd12E"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !1840 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1843, metadata !DIExpression()), !dbg !1844
; call core::ptr::metadata::metadata
  %2 = call i64 @_ZN4core3ptr8metadata8metadata17h9fb0ee2fa53d74d6E(ptr %self.0, i64 %self.1) #10, !dbg !1845
  ret i64 %2, !dbg !1846
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h574f85348a0cba07E"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !1847 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1851, metadata !DIExpression()), !dbg !1852
  ret ptr %self.0, !dbg !1853
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h8d5eadf86b048e09E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !1854 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1862, metadata !DIExpression()), !dbg !1866
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1863, metadata !DIExpression()), !dbg !1867
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha9e84043736c1da0E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !1868
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !1868
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !1868
  %6 = insertvalue { ptr, i64 } poison, ptr %4, 0, !dbg !1869
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !1869
  ret { ptr, i64 } %7, !dbg !1869
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h7ac6186df89a0e74E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !1870 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1876, metadata !DIExpression()), !dbg !1878
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1877, metadata !DIExpression()), !dbg !1879
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h0704c58ab2009668E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !1880
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !1880
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !1880
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !1881
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !1881
  ret { ptr, i64 } %5, !dbg !1881
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17he70e0f6eb42f454eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid, ptr align 8 %1) unnamed_addr #0 !dbg !1882 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1891, metadata !DIExpression()), !dbg !1893
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !1892, metadata !DIExpression()), !dbg !1894
  %_4 = icmp ule i64 %mid, %self.1, !dbg !1895
  %_3 = xor i1 %_4, true, !dbg !1896
  br i1 %_3, label %bb1, label %bb2, !dbg !1896

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17he691702b1f2e72fdE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) #10, !dbg !1897
  ret void, !dbg !1898

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_fddaeef1fe1a23c45402ef8f58614acb, i64 35, ptr align 8 %1) #11, !dbg !1896
  unreachable, !dbg !1896
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !1899 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1903, metadata !DIExpression()), !dbg !1907
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1904, metadata !DIExpression()), !dbg !1908
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h1d6d7b937a203b74E"(i64 %index, ptr %self.0, i64 %self.1) #10, !dbg !1909
  ret ptr %_3, !dbg !1910
}

; core::slice::<impl [T]>::as_mut_ptr_range
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17hdeab7bd7aef8111dE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1911 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1921, metadata !DIExpression()), !dbg !1926
  store ptr %self.0, ptr %self.dbg.spill.i2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !1927, metadata !DIExpression()), !dbg !1932
  store ptr %self.0, ptr %start.dbg.spill, align 8, !dbg !1934
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !1922, metadata !DIExpression()), !dbg !1935
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !1936
  store i64 %self.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !1938
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %self.1, !dbg !1939
  store ptr %4, ptr %end.dbg.spill, align 8, !dbg !1940
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !1924, metadata !DIExpression()), !dbg !1941
  store ptr %self.0, ptr %0, align 8, !dbg !1942
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !1942
  store ptr %4, ptr %5, align 8, !dbg !1942
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !1943
  %7 = load ptr, ptr %6, align 8, !dbg !1943, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !1943
  %9 = load ptr, ptr %8, align 8, !dbg !1943, !noundef !24
  %10 = insertvalue { ptr, ptr } poison, ptr %7, 0, !dbg !1943
  %11 = insertvalue { ptr, ptr } %10, ptr %9, 1, !dbg !1943
  ret { ptr, ptr } %11, !dbg !1943
}

; core::slice::<impl [T]>::sort_unstable_by
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17hd2747746a3a97436E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1944 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_4 = alloca ptr, align 8
  %compare = alloca %"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]", align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1948, metadata !DIExpression()), !dbg !1952
  call void @llvm.dbg.declare(metadata ptr %compare, metadata !1949, metadata !DIExpression()), !dbg !1953
  store ptr %compare, ptr %_4, align 8, !dbg !1954
  %2 = load ptr, ptr %_4, align 8, !dbg !1955, !nonnull !24, !align !1956, !noundef !24
; call core::slice::sort::quicksort
  call void @_ZN4core5slice4sort9quicksort17h3f0b1e0165be5174E(ptr align 8 %self.0, i64 %self.1, ptr align 1 %2) #10, !dbg !1955
  ret void, !dbg !1957
}

; core::slice::<impl [T]>::sort_unstable_by::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !1958 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  %_5 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1964, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !1965
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !1962, metadata !DIExpression()), !dbg !1966
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1963, metadata !DIExpression()), !dbg !1967
  %_8 = load ptr, ptr %_1, align 8, !dbg !1968, !nonnull !24, !align !1956, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !1968
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !1968
  store ptr %b, ptr %0, align 8, !dbg !1968
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !1968
  %2 = load ptr, ptr %1, align 8, !dbg !1968, !nonnull !24, !align !505, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !1968
  %4 = load ptr, ptr %3, align 8, !dbg !1968, !nonnull !24, !align !505, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %5 = call i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h00af19674a3d0533E"(ptr align 1 %_8, ptr align 8 %2, ptr align 8 %4) #10, !dbg !1968, !range !724
  store i8 %5, ptr %_5, align 1, !dbg !1968
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %6 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc945fd9699462719E"(ptr align 1 %_5, ptr align 1 @alloc_9a72dc1c87ddefcce62e4b5ab68e5150) #10, !dbg !1968
  ret i1 %6, !dbg !1969
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17he691702b1f2e72fdE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 !dbg !1970 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %mid.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1974, metadata !DIExpression()), !dbg !1980
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !1975, metadata !DIExpression()), !dbg !1981
  store i64 %self.1, ptr %len.dbg.spill, align 8, !dbg !1982
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1976, metadata !DIExpression()), !dbg !1983
  store ptr %self.0, ptr %self.dbg.spill.i1, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1927, metadata !DIExpression()), !dbg !1984
  store ptr %self.0, ptr %ptr.dbg.spill, align 8, !dbg !1986
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1978, metadata !DIExpression()), !dbg !1987
  br i1 true, label %bb2, label %bb3, !dbg !1988

bb3:                                              ; preds = %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17ha5a58f3c63ded112E.exit", %start
; call core::slice::raw::from_raw_parts_mut
  %4 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h838e6bae462279e0E(ptr %self.0, i64 %mid) #10, !dbg !1989
  %_10.0 = extractvalue { ptr, i64 } %4, 0, !dbg !1989
  %_10.1 = extractvalue { ptr, i64 } %4, 1, !dbg !1989
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !1990
  store i64 %mid, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !1992
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %mid, !dbg !1993
  %_17.0 = sub i64 %self.1, %mid, !dbg !1994
  %_17.1 = icmp ult i64 %self.1, %mid, !dbg !1994
  %6 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !1994
  br i1 %6, label %panic, label %bb6, !dbg !1994

bb2:                                              ; preds = %start
  store i64 %mid, ptr %_8, align 8, !dbg !1988
  %7 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !1988
  store i64 %self.1, ptr %7, align 8, !dbg !1988
  %8 = load i64, ptr %_8, align 8, !dbg !1988, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !1988
  %10 = load i64, ptr %9, align 8, !dbg !1988, !noundef !24
  store i64 %8, ptr %mid.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill.i, metadata !1995, metadata !DIExpression()), !dbg !2002
  store i64 %10, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2001, metadata !DIExpression()), !dbg !2002
  %_4.i = icmp ule i64 %8, %10, !dbg !2004
  %_3.i = xor i1 %_4.i, true, !dbg !2006
  br i1 %_3.i, label %bb1.i, label %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17ha5a58f3c63ded112E.exit", !dbg !2006

bb1.i:                                            ; preds = %bb2
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_3dc073651148de734d2593768efc16e9, i64 104) #11, !dbg !2007
  unreachable, !dbg !2007

"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17ha5a58f3c63ded112E.exit": ; preds = %bb2
  br label %bb3, !dbg !1988

bb6:                                              ; preds = %bb3
; call core::slice::raw::from_raw_parts_mut
  %11 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h838e6bae462279e0E(ptr %5, i64 %_17.0) #10, !dbg !2008
  %_13.0 = extractvalue { ptr, i64 } %11, 0, !dbg !2008
  %_13.1 = extractvalue { ptr, i64 } %11, 1, !dbg !2008
  %12 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2009
  store ptr %_10.0, ptr %12, align 8, !dbg !2009
  %13 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2009
  store i64 %_10.1, ptr %13, align 8, !dbg !2009
  %14 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %0, i32 0, i32 1, !dbg !2009
  %15 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 0, !dbg !2009
  store ptr %_13.0, ptr %15, align 8, !dbg !2009
  %16 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 1, !dbg !2009
  store i64 %_13.1, ptr %16, align 8, !dbg !2009
  ret void, !dbg !2010

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_76fa8839e346213ef9d31b2afdb0086d) #11, !dbg !1994
  unreachable, !dbg !1994
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h7be652596d4d48c5E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2011 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2015, metadata !DIExpression()), !dbg !2016
; call core::slice::iter::Iter<T>::new
  %2 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hba84009d2693d29eE"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2017
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !2017
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !2017
  %5 = insertvalue { ptr, ptr } poison, ptr %3, 0, !dbg !2018
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !2018
  ret { ptr, ptr } %6, !dbg !2018
}

; core::slice::<impl [T]>::swap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h896a93d8011e65cdE"(ptr align 8 %self.0, i64 %self.1, i64 %a, i64 %b, ptr align 8 %0) unnamed_addr #0 !dbg !2019 {
start:
  %pb.dbg.spill = alloca ptr, align 8
  %pa.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2023, metadata !DIExpression()), !dbg !2030
  store i64 %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2024, metadata !DIExpression()), !dbg !2031
  store i64 %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2025, metadata !DIExpression()), !dbg !2032
  %_6 = icmp ult i64 %a, %self.1, !dbg !2033
  %3 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !2033
  br i1 %3, label %bb1, label %panic, !dbg !2033

bb1:                                              ; preds = %start
  %pa = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %a, !dbg !2034
  store ptr %pa, ptr %pa.dbg.spill, align 8, !dbg !2034
  call void @llvm.dbg.declare(metadata ptr %pa.dbg.spill, metadata !2026, metadata !DIExpression()), !dbg !2035
  %_9 = icmp ult i64 %b, %self.1, !dbg !2036
  %4 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !2036
  br i1 %4, label %bb2, label %panic1, !dbg !2036

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %a, i64 %self.1, ptr align 8 %0) #11, !dbg !2033
  unreachable, !dbg !2033

bb2:                                              ; preds = %bb1
  %pb = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %b, !dbg !2037
  store ptr %pb, ptr %pb.dbg.spill, align 8, !dbg !2037
  call void @llvm.dbg.declare(metadata ptr %pb.dbg.spill, metadata !2028, metadata !DIExpression()), !dbg !2038
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17hdded449a2079ac21E(ptr %pa, ptr %pb) #10, !dbg !2039
  ret void, !dbg !2040

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %b, i64 %self.1, ptr align 8 %0) #11, !dbg !2036
  unreachable, !dbg !2036
}

; core::slice::<impl [T]>::reverse
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h2263e868b33f283cE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2041 {
start:
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %back_half.dbg.spill = alloca { ptr, i64 }, align 8
  %front_half.dbg.spill = alloca { ptr, i64 }, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %half_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2045, metadata !DIExpression()), !dbg !2054
  %half_len = udiv i64 %self.1, 2, !dbg !2055
  store i64 %half_len, ptr %half_len.dbg.spill, align 8, !dbg !2055
  call void @llvm.dbg.declare(metadata ptr %half_len.dbg.spill, metadata !2046, metadata !DIExpression()), !dbg !2056
; call core::slice::<impl [T]>::as_mut_ptr_range
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17hdeab7bd7aef8111dE"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2057
  %_8.0 = extractvalue { ptr, ptr } %2, 0, !dbg !2057
  %_8.1 = extractvalue { ptr, ptr } %2, 1, !dbg !2057
  store ptr %_8.0, ptr %start.dbg.spill, align 8, !dbg !2058
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2048, metadata !DIExpression()), !dbg !2059
  store ptr %_8.1, ptr %end.dbg.spill, align 8, !dbg !2060
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2050, metadata !DIExpression()), !dbg !2061
; call core::slice::raw::from_raw_parts_mut
  %3 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h838e6bae462279e0E(ptr %_8.0, i64 %half_len) #10, !dbg !2062
  %_12.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2062
  %_12.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2062
  store ptr %_8.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2063, metadata !DIExpression()), !dbg !2067
  store i64 %half_len, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2066, metadata !DIExpression()), !dbg !2069
  store i64 %half_len, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2070, metadata !DIExpression()), !dbg !2078
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2080, metadata !DIExpression()), !dbg !2086
  store i64 %half_len, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2085, metadata !DIExpression()), !dbg !2088
  %4 = sub i64 0, %half_len, !dbg !2089
  store ptr %_8.1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !2090, metadata !DIExpression()), !dbg !2096
  store i64 %4, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !2095, metadata !DIExpression()), !dbg !2098
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_8.1, i64 %4, !dbg !2099
; call core::slice::raw::from_raw_parts_mut
  %6 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h838e6bae462279e0E(ptr %5, i64 %half_len) #10, !dbg !2100
  %_13.0 = extractvalue { ptr, i64 } %6, 0, !dbg !2100
  %_13.1 = extractvalue { ptr, i64 } %6, 1, !dbg !2100
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2101
  store ptr %_12.0, ptr %7, align 8, !dbg !2101
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2101
  store i64 %_12.1, ptr %8, align 8, !dbg !2101
  %9 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2101
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !2101
  store ptr %_13.0, ptr %10, align 8, !dbg !2101
  %11 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !2101
  store i64 %_13.1, ptr %11, align 8, !dbg !2101
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2102
  %front_half.0 = load ptr, ptr %12, align 8, !dbg !2102, !nonnull !24, !align !505, !noundef !24
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2102
  %front_half.1 = load i64, ptr %13, align 8, !dbg !2102, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 0, !dbg !2102
  store ptr %front_half.0, ptr %14, align 8, !dbg !2102
  %15 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 1, !dbg !2102
  store i64 %front_half.1, ptr %15, align 8, !dbg !2102
  call void @llvm.dbg.declare(metadata ptr %front_half.dbg.spill, metadata !2051, metadata !DIExpression()), !dbg !2103
  %16 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2104
  %17 = getelementptr inbounds { ptr, i64 }, ptr %16, i32 0, i32 0, !dbg !2104
  %back_half.0 = load ptr, ptr %17, align 8, !dbg !2104, !nonnull !24, !align !505, !noundef !24
  %18 = getelementptr inbounds { ptr, i64 }, ptr %16, i32 0, i32 1, !dbg !2104
  %back_half.1 = load i64, ptr %18, align 8, !dbg !2104, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 0, !dbg !2104
  store ptr %back_half.0, ptr %19, align 8, !dbg !2104
  %20 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 1, !dbg !2104
  store i64 %back_half.1, ptr %20, align 8, !dbg !2104
  call void @llvm.dbg.declare(metadata ptr %back_half.dbg.spill, metadata !2053, metadata !DIExpression()), !dbg !2105
; call core::slice::<impl [T]>::reverse::revswap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17h959d8f77fd0aae5bE"(ptr align 8 %front_half.0, i64 %front_half.1, ptr align 8 %back_half.0, i64 %back_half.1, i64 %half_len) #10, !dbg !2106
  ret void, !dbg !2107
}

; core::slice::<impl [T]>::reverse::revswap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17h959d8f77fd0aae5bE"(ptr align 8 %a.0, i64 %a.1, ptr align 8 %b.0, i64 %b.1, i64 %n) unnamed_addr #0 !dbg !2108 {
start:
  %b.dbg.spill6 = alloca { ptr, i64 }, align 8
  %a.dbg.spill3 = alloca { ptr, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %a.dbg.spill = alloca { ptr, i64 }, align 8
  %i = alloca i64, align 8
  %_24 = alloca i64, align 8
  %_21 = alloca i64, align 8
  %_18 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 0
  store ptr %a.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 1
  store i64 %a.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2113, metadata !DIExpression()), !dbg !2121
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2114, metadata !DIExpression()), !dbg !2122
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !2115, metadata !DIExpression()), !dbg !2123
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2119, metadata !DIExpression()), !dbg !2124
  br i1 true, label %bb1, label %bb3, !dbg !2125

bb3:                                              ; preds = %bb1, %start
  br i1 true, label %bb4, label %bb6, !dbg !2126

bb1:                                              ; preds = %start
  %_6 = icmp eq i64 %a.1, %n, !dbg !2127
  %_5 = xor i1 %_6, true, !dbg !2125
  br i1 %_5, label %bb2, label %bb3, !dbg !2125

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_dd0dc542054f5a3bd5e0287046a20794, i64 30, ptr align 8 @alloc_ecc9899c650d8314fba3084b3c654203) #11, !dbg !2125
  unreachable, !dbg !2125

bb6:                                              ; preds = %bb4, %bb3
  store i64 %n, ptr %_21, align 8, !dbg !2128
  %4 = load i64, ptr %_21, align 8, !dbg !2129, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56804621d2071613E"(ptr align 8 %a.0, i64 %a.1, i64 %4, ptr align 8 @alloc_2216ac2b12fee1f72596cee1b2a48660) #10, !dbg !2129
  %_20.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2129
  %_20.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2129
  store i64 %n, ptr %_24, align 8, !dbg !2130
  %6 = load i64, ptr %_24, align 8, !dbg !2131, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %7 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56804621d2071613E"(ptr align 8 %b.0, i64 %b.1, i64 %6, ptr align 8 @alloc_5c5f0f88f9e7a84c338861be835ff420) #10, !dbg !2131
  %_23.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2131
  %_23.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2131
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !2132
  store ptr %_20.0, ptr %8, align 8, !dbg !2132
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !2132
  store i64 %_20.1, ptr %9, align 8, !dbg !2132
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_18, i32 0, i32 1, !dbg !2132
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2132
  store ptr %_23.0, ptr %11, align 8, !dbg !2132
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2132
  store i64 %_23.1, ptr %12, align 8, !dbg !2132
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !2133
  %a.01 = load ptr, ptr %13, align 8, !dbg !2133, !nonnull !24, !align !505, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !2133
  %a.12 = load i64, ptr %14, align 8, !dbg !2133, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 0, !dbg !2133
  store ptr %a.01, ptr %15, align 8, !dbg !2133
  %16 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 1, !dbg !2133
  store i64 %a.12, ptr %16, align 8, !dbg !2133
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill3, metadata !2116, metadata !DIExpression()), !dbg !2134
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_18, i32 0, i32 1, !dbg !2135
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2135
  %b.04 = load ptr, ptr %18, align 8, !dbg !2135, !nonnull !24, !align !505, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2135
  %b.15 = load i64, ptr %19, align 8, !dbg !2135, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 0, !dbg !2135
  store ptr %b.04, ptr %20, align 8, !dbg !2135
  %21 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 1, !dbg !2135
  store i64 %b.15, ptr %21, align 8, !dbg !2135
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill6, metadata !2118, metadata !DIExpression()), !dbg !2136
  store i64 0, ptr %i, align 8, !dbg !2137
  br label %bb9, !dbg !2138

bb4:                                              ; preds = %bb3
  %_12 = icmp eq i64 %b.1, %n, !dbg !2139
  %_11 = xor i1 %_12, true, !dbg !2126
  br i1 %_11, label %bb5, label %bb6, !dbg !2126

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_deedf7aeab1a7c66b5420b58a4093bcc, i64 30, ptr align 8 @alloc_ff56e0ff16b9da2be75af81ae63895bc) #11, !dbg !2126
  unreachable, !dbg !2126

bb9:                                              ; preds = %bb16, %bb6
  %_27 = load i64, ptr %i, align 8, !dbg !2140, !noundef !24
  %_26 = icmp ult i64 %_27, %n, !dbg !2140
  br i1 %_26, label %bb10, label %bb17, !dbg !2140

bb17:                                             ; preds = %bb9
  ret void, !dbg !2141

bb10:                                             ; preds = %bb9
  %_30 = load i64, ptr %i, align 8, !dbg !2142, !noundef !24
  %_32 = icmp ult i64 %_30, %a.12, !dbg !2143
  %22 = call i1 @llvm.expect.i1(i1 %_32, i1 true), !dbg !2143
  br i1 %22, label %bb11, label %panic, !dbg !2143

bb11:                                             ; preds = %bb10
  %_29 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %a.01, i64 0, i64 %_30, !dbg !2144
  %_36.0 = sub i64 %n, 1, !dbg !2145
  %_36.1 = icmp ult i64 %n, 1, !dbg !2145
  %23 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !2145
  br i1 %23, label %panic7, label %bb12, !dbg !2145

panic:                                            ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %_30, i64 %a.12, ptr align 8 @alloc_3802366fa986a65287f2fa3ffe444552) #11, !dbg !2143
  unreachable, !dbg !2143

bb12:                                             ; preds = %bb11
  %_37 = load i64, ptr %i, align 8, !dbg !2146, !noundef !24
  %_38.0 = sub i64 %_36.0, %_37, !dbg !2145
  %_38.1 = icmp ult i64 %_36.0, %_37, !dbg !2145
  %24 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !2145
  br i1 %24, label %panic8, label %bb13, !dbg !2145

panic7:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_932be07abcf6e404c637b3e479c1e7c9) #11, !dbg !2145
  unreachable, !dbg !2145

bb13:                                             ; preds = %bb12
  %_40 = icmp ult i64 %_38.0, %b.15, !dbg !2147
  %25 = call i1 @llvm.expect.i1(i1 %_40, i1 true), !dbg !2147
  br i1 %25, label %bb14, label %panic9, !dbg !2147

panic8:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_932be07abcf6e404c637b3e479c1e7c9) #11, !dbg !2145
  unreachable, !dbg !2145

bb14:                                             ; preds = %bb13
  %_33 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %b.04, i64 0, i64 %_38.0, !dbg !2148
; call core::mem::swap
  call void @_ZN4core3mem4swap17h5e32ce30d0549785E(ptr align 8 %_29, ptr align 8 %_33) #10, !dbg !2149
  %26 = load i64, ptr %i, align 8, !dbg !2150, !noundef !24
  %27 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %26, i64 1), !dbg !2150
  %_41.0 = extractvalue { i64, i1 } %27, 0, !dbg !2150
  %_41.1 = extractvalue { i64, i1 } %27, 1, !dbg !2150
  %28 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !2150
  br i1 %28, label %panic10, label %bb16, !dbg !2150

panic9:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %_38.0, i64 %b.15, ptr align 8 @alloc_1fe2ed67373e408d8a88dd6dd998e88a) #11, !dbg !2147
  unreachable, !dbg !2147

bb16:                                             ; preds = %bb14
  store i64 %_41.0, ptr %i, align 8, !dbg !2150
  br label %bb9, !dbg !2138

panic10:                                          ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_6827e7b7bc8d29e581436027f00ebf5a) #11, !dbg !2150
  unreachable, !dbg !2150
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h838e6bae462279e0E(ptr %data, i64 %len) unnamed_addr #0 !dbg !2151 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !2157, metadata !DIExpression()), !dbg !2159
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2158, metadata !DIExpression()), !dbg !2160
  br i1 true, label %bb1, label %bb2, !dbg !2161

bb2:                                              ; preds = %_ZN4core5slice3raw18from_raw_parts_mut7runtime17h8b4aca642836055cE.exit, %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h1f03307f4642ee5fE(ptr %data, i64 %len) #10, !dbg !2162
  %_6.0 = extractvalue { ptr, i64 } %0, 0, !dbg !2162
  %_6.1 = extractvalue { ptr, i64 } %0, 1, !dbg !2162
  %1 = insertvalue { ptr, i64 } poison, ptr %_6.0, 0, !dbg !2163
  %2 = insertvalue { ptr, i64 } %1, i64 %_6.1, 1, !dbg !2163
  ret { ptr, i64 } %2, !dbg !2163

bb1:                                              ; preds = %start
  store ptr %data, ptr %_5, align 8, !dbg !2161
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2161
  store i64 %len, ptr %3, align 8, !dbg !2161
  %4 = load ptr, ptr %_5, align 8, !dbg !2161, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2161
  %6 = load i64, ptr %5, align 8, !dbg !2161, !noundef !24
  store ptr %4, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !2164, metadata !DIExpression()), !dbg !2171
  store i64 %6, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2170, metadata !DIExpression()), !dbg !2171
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE(ptr %4) #10, !dbg !2173
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !2173

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !2173
  br label %bb3.i, !dbg !2173

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_valid_allocation_size
  %_7.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hde767ae676a5474fE(i64 %6) #10, !dbg !2175
  %7 = zext i1 %_7.i to i8, !dbg !2173
  store i8 %7, ptr %_4.i, align 1, !dbg !2173
  br label %bb3.i, !dbg !2173

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %8 = load i8, ptr %_4.i, align 1, !dbg !2176, !range !231, !noundef !24
  %9 = trunc i8 %8 to i1, !dbg !2176
  %_3.i = xor i1 %9, true, !dbg !2176
  br i1 %_3.i, label %bb6.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17h8b4aca642836055cE.exit, !dbg !2176

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a, i64 166) #11, !dbg !2177
  unreachable, !dbg !2177

_ZN4core5slice3raw18from_raw_parts_mut7runtime17h8b4aca642836055cE.exit: ; preds = %bb3.i
  br label %bb2, !dbg !2161
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hba84009d2693d29eE"(ptr align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2178 {
start:
  %self.dbg.spill.i4 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca ptr, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %end = alloca ptr, align 8
  %1 = alloca { ptr, ptr }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !2181, metadata !DIExpression()), !dbg !2186
  call void @llvm.dbg.declare(metadata ptr %end, metadata !2184, metadata !DIExpression()), !dbg !2187
  store ptr %slice.0, ptr %self.dbg.spill.i4, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i4, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !2188, metadata !DIExpression()), !dbg !2193
  store ptr %slice.0, ptr %ptr.dbg.spill, align 8, !dbg !2195
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2182, metadata !DIExpression()), !dbg !2196
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha851001275c507fbE"(ptr %slice.0) #10, !dbg !2197
  %_3 = xor i1 %_4, true, !dbg !2198
  call void @llvm.assume(i1 %_3), !dbg !2199
  br i1 false, label %bb3, label %bb4, !dbg !2200

bb4:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !199, metadata !DIExpression()), !dbg !2201
  store i64 %slice.1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !209, metadata !DIExpression()), !dbg !2203
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %slice.1, !dbg !2204
  store ptr %5, ptr %end, align 8, !dbg !2205
  br label %bb5, !dbg !2205

bb3:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2206, metadata !DIExpression()), !dbg !2210
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2209, metadata !DIExpression()), !dbg !2212
  store ptr %slice.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !2213, metadata !DIExpression()), !dbg !2218
  store ptr %slice.0, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2220, metadata !DIExpression()), !dbg !2226
  store i64 %slice.1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !2225, metadata !DIExpression()), !dbg !2228
  store ptr %slice.0, ptr %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2.i, metadata !2229, metadata !DIExpression()), !dbg !2235
  store i64 %slice.1, ptr %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1.i, metadata !2234, metadata !DIExpression()), !dbg !2237
  %6 = getelementptr i8, ptr %slice.0, i64 %slice.1, !dbg !2238
  store ptr %6, ptr %0, align 8, !dbg !2238
  %7 = load ptr, ptr %0, align 8, !dbg !2238, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::with_metadata_of
  %8 = call ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h1643daf528826fd6E"(ptr %7, ptr %slice.0) #10, !dbg !2239
  store ptr %8, ptr %end, align 8, !dbg !2240
  br label %bb5, !dbg !2240

bb5:                                              ; preds = %bb4, %bb3
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_12 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5580be51254bb83eE"(ptr %slice.0) #10, !dbg !2241
  %_15 = load ptr, ptr %end, align 8, !dbg !2242, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !2243
  store ptr %_12, ptr %9, align 8, !dbg !2243
  store ptr %_15, ptr %1, align 8, !dbg !2243
  %10 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0, !dbg !2244
  %11 = load ptr, ptr %10, align 8, !dbg !2244, !noundef !24
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !2244
  %13 = load ptr, ptr %12, align 8, !dbg !2244, !nonnull !24, !noundef !24
  %14 = insertvalue { ptr, ptr } poison, ptr %11, 0, !dbg !2244
  %15 = insertvalue { ptr, ptr } %14, ptr %13, 1, !dbg !2244
  ret { ptr, ptr } %15, !dbg !2244
}

; core::slice::sort::insert_head
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_head17h2a439797abf0e653E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2245 {
start:
  %self.dbg.spill.i13 = alloca ptr, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i11 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %count.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_48 = alloca ptr, align 8
  %_46 = alloca { ptr, ptr }, align 8
  %_40 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_36 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_19 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2250, metadata !DIExpression()), !dbg !2263
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2251, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2254, metadata !DIExpression()), !dbg !2265
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2256, metadata !DIExpression()), !dbg !2266
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2258, metadata !DIExpression()), !dbg !2267
  br i1 true, label %bb1, label %bb3, !dbg !2268

bb3:                                              ; preds = %bb1, %start
; call core::slice::<impl [T]>::get_unchecked
  %_12 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %v.0, i64 %v.1, i64 1) #10, !dbg !2269
; call core::slice::<impl [T]>::get_unchecked
  %_15 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %v.0, i64 %v.1, i64 0) #10, !dbg !2270
  store ptr %_12, ptr %_10, align 8, !dbg !2271
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2271
  store ptr %_15, ptr %2, align 8, !dbg !2271
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2271
  %4 = load ptr, ptr %3, align 8, !dbg !2271, !nonnull !24, !align !505, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2271
  %6 = load ptr, ptr %5, align 8, !dbg !2271, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %4, ptr align 8 %6) #10, !dbg !2271
  br i1 %_9, label %bb7, label %bb31, !dbg !2271

bb1:                                              ; preds = %start
  %_5 = icmp uge i64 %v.1, 2, !dbg !2272
  %_4 = xor i1 %_5, true, !dbg !2268
  br i1 %_4, label %bb2, label %bb3, !dbg !2268

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_6932146a2b5945f5118e7e865cb7ff4c) #11, !dbg !2268
  unreachable, !dbg !2268

bb31:                                             ; preds = %bb30, %bb3
  ret void, !dbg !2273

bb7:                                              ; preds = %bb3
  store ptr %v.0, ptr %self.dbg.spill.i11, align 8
  %7 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i11, i32 0, i32 1
  store i64 %v.1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !1927, metadata !DIExpression()), !dbg !2274
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2276
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2252, metadata !DIExpression()), !dbg !2277
; call core::ptr::read
  call void @_ZN4core3ptr4read17hd09643a295aa6f4fE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_19, ptr %v.0) #10, !dbg !2278
  call void @llvm.dbg.declare(metadata ptr %_19, metadata !980, metadata !DIExpression()), !dbg !2279
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_19, i64 24, i1 false), !dbg !2281
  store ptr %tmp, ptr %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i13, metadata !2282, metadata !DIExpression()), !dbg !2289
  store ptr %v.0, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !265, metadata !DIExpression()), !dbg !2291
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !271, metadata !DIExpression()), !dbg !2293
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2294
  store ptr %tmp, ptr %hole, align 8, !dbg !2295
  %9 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2295
  store ptr %8, ptr %9, align 8, !dbg !2295
  store ptr %v.0, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !265, metadata !DIExpression()), !dbg !2296
  store i64 1, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !271, metadata !DIExpression()), !dbg !2298
  %10 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2299
  store ptr %v.0, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !265, metadata !DIExpression()), !dbg !2300
  store i64 0, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !271, metadata !DIExpression()), !dbg !2302
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %10, ptr %v.0, i64 1) #10, !dbg !2303
  store i64 2, ptr %_36, align 8, !dbg !2304
  %11 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 1, !dbg !2304
  store i64 %v.1, ptr %11, align 8, !dbg !2304
  %12 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 0, !dbg !2304
  %13 = load i64, ptr %12, align 8, !dbg !2304, !noundef !24
  %14 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 1, !dbg !2304
  %15 = load i64, ptr %14, align 8, !dbg !2304, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %16 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbd4e891038e99fd5E"(i64 %13, i64 %15) #10, !dbg !2304
  %_35.0 = extractvalue { i64, i64 } %16, 0, !dbg !2304
  %_35.1 = extractvalue { i64, i64 } %16, 1, !dbg !2304
  %17 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2304
  store i64 %_35.0, ptr %17, align 8, !dbg !2304
  %18 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2304
  store i64 %_35.1, ptr %18, align 8, !dbg !2304
  br label %bb17, !dbg !2305

bb17:                                             ; preds = %bb26, %bb7
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %19 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hcbda1fddb935b88aE"(ptr align 8 %iter) #10, !dbg !2267
  store { i64, i64 } %19, ptr %_40, align 8, !dbg !2267
  %_42 = load i64, ptr %_40, align 8, !dbg !2267, !range !1037, !noundef !24
  %20 = icmp eq i64 %_42, 0, !dbg !2267
  br i1 %20, label %bb30, label %bb19, !dbg !2267

bb30:                                             ; preds = %bb19, %bb17
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hc7fa04d0e9e7b875E"(ptr %hole) #10, !dbg !2306
  br label %bb31, !dbg !2306

bb19:                                             ; preds = %bb17
  %21 = getelementptr inbounds { i64, i64 }, ptr %_40, i32 0, i32 1, !dbg !2307
  %i = load i64, ptr %21, align 8, !dbg !2307, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2307
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2260, metadata !DIExpression()), !dbg !2308
; call core::slice::<impl [T]>::get_unchecked
  %22 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %v.0, i64 %v.1, i64 %i) #10, !dbg !2309
  store ptr %22, ptr %_48, align 8, !dbg !2309
  %_63 = load ptr, ptr %_48, align 8, !dbg !2310, !nonnull !24, !align !505, !noundef !24
  store ptr %tmp, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2282, metadata !DIExpression()), !dbg !2311
  store ptr %_63, ptr %_46, align 8, !dbg !2313
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_46, i32 0, i32 1, !dbg !2313
  store ptr %tmp, ptr %23, align 8, !dbg !2313
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_46, i32 0, i32 0, !dbg !2313
  %25 = load ptr, ptr %24, align 8, !dbg !2313, !nonnull !24, !align !505, !noundef !24
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_46, i32 0, i32 1, !dbg !2313
  %27 = load ptr, ptr %26, align 8, !dbg !2313, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_45 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %25, ptr align 8 %27) #10, !dbg !2313
  %_44 = xor i1 %_45, true, !dbg !2314
  br i1 %_44, label %bb30, label %bb24, !dbg !2314

bb20:                                             ; No predecessors!
  unreachable, !dbg !2267

bb24:                                             ; preds = %bb19
  store ptr %v.0, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !265, metadata !DIExpression()), !dbg !2315
  store i64 %i, ptr %count.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i3, metadata !271, metadata !DIExpression()), !dbg !2317
  %28 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2318
  %_60.0 = sub i64 %i, 1, !dbg !2319
  %_60.1 = icmp ult i64 %i, 1, !dbg !2319
  %29 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false), !dbg !2319
  br i1 %29, label %panic, label %bb26, !dbg !2319

bb26:                                             ; preds = %bb24
  store ptr %v.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !265, metadata !DIExpression()), !dbg !2320
  store i64 %_60.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !271, metadata !DIExpression()), !dbg !2322
  %30 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_60.0, !dbg !2323
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %28, ptr %30, i64 1) #10, !dbg !2324
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !2325
  store i64 %i, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !2327
  %31 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2328
  %32 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2329
  store ptr %31, ptr %32, align 8, !dbg !2329
  br label %bb17, !dbg !2305

panic:                                            ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2b18b37ae84d61762f070ebc082ffd36) #11, !dbg !2319
  unreachable, !dbg !2319
}

; core::slice::sort::insert_tail
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_tail17h015d8bc2b7089f6bE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2330 {
start:
  %self.dbg.spill.i17 = alloca ptr, align 8
  %self.dbg.spill.i16 = alloca ptr, align 8
  %self.dbg.spill.i15 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %rhs.dbg.spill.i.i6 = alloca i64, align 8
  %self.dbg.spill.i1.i7 = alloca i64, align 8
  %self.dbg.spill.i.i8 = alloca i64, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %j_ptr.dbg.spill = alloca ptr, align 8
  %j.dbg.spill = alloca i64, align 8
  %i_ptr.dbg.spill = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_51 = alloca { ptr, ptr }, align 8
  %_43 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_39 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_23 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_17 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2332, metadata !DIExpression()), !dbg !2358
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2333, metadata !DIExpression()), !dbg !2359
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2340, metadata !DIExpression()), !dbg !2360
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2342, metadata !DIExpression()), !dbg !2361
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2344, metadata !DIExpression()), !dbg !2362
  br i1 true, label %bb1, label %bb3, !dbg !2363

bb3:                                              ; preds = %bb1, %start
  store ptr %v.0, ptr %self.dbg.spill.i15, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i15, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i15, metadata !1927, metadata !DIExpression()), !dbg !2364
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2366
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2334, metadata !DIExpression()), !dbg !2367
  %_13.0 = sub i64 %v.1, 1, !dbg !2368
  %_13.1 = icmp ult i64 %v.1, 1, !dbg !2368
  %3 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !2368
  br i1 %3, label %panic, label %bb5, !dbg !2368

bb1:                                              ; preds = %start
  %_5 = icmp uge i64 %v.1, 2, !dbg !2369
  %_4 = xor i1 %_5, true, !dbg !2363
  br i1 %_4, label %bb2, label %bb3, !dbg !2363

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_141337dbddbbf875f1e651a897c1c26f) #11, !dbg !2363
  unreachable, !dbg !2363

bb5:                                              ; preds = %bb3
  store i64 %_13.0, ptr %i.dbg.spill, align 8, !dbg !2368
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2336, metadata !DIExpression()), !dbg !2370
  store ptr %v.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !265, metadata !DIExpression()), !dbg !2371
  store i64 %_13.0, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !271, metadata !DIExpression()), !dbg !2373
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_13.0, !dbg !2374
  store ptr %4, ptr %i_ptr.dbg.spill, align 8, !dbg !2375
  call void @llvm.dbg.declare(metadata ptr %i_ptr.dbg.spill, metadata !2338, metadata !DIExpression()), !dbg !2376
  store ptr %4, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !2063, metadata !DIExpression()), !dbg !2377
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !2066, metadata !DIExpression()), !dbg !2379
  store i64 1, ptr %self.dbg.spill.i.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i8, metadata !2070, metadata !DIExpression()), !dbg !2380
  store i64 0, ptr %self.dbg.spill.i1.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i7, metadata !2080, metadata !DIExpression()), !dbg !2382
  store i64 1, ptr %rhs.dbg.spill.i.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i6, metadata !2085, metadata !DIExpression()), !dbg !2384
  store ptr %4, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2090, metadata !DIExpression()), !dbg !2385
  store i64 -1, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !2095, metadata !DIExpression()), !dbg !2387
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %4, i64 -1, !dbg !2388
  store ptr %4, ptr %_17, align 8, !dbg !2389
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !2389
  store ptr %5, ptr %6, align 8, !dbg !2389
  %7 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 0, !dbg !2389
  %8 = load ptr, ptr %7, align 8, !dbg !2389, !nonnull !24, !align !505, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !2389
  %10 = load ptr, ptr %9, align 8, !dbg !2389, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_16 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %8, ptr align 8 %10) #10, !dbg !2389
  br i1 %_16, label %bb9, label %bb28, !dbg !2389

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_90f4b6dda14e5cb7081926ef9c658315) #11, !dbg !2368
  unreachable, !dbg !2368

bb28:                                             ; preds = %bb27, %bb5
  ret void, !dbg !2390

bb9:                                              ; preds = %bb5
; call core::ptr::read
  call void @_ZN4core3ptr4read17hd09643a295aa6f4fE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_23, ptr %4) #10, !dbg !2391
  call void @llvm.dbg.declare(metadata ptr %_23, metadata !980, metadata !DIExpression()), !dbg !2392
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_23, i64 24, i1 false), !dbg !2394
  store ptr %tmp, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !2282, metadata !DIExpression()), !dbg !2395
  store ptr %4, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !2063, metadata !DIExpression()), !dbg !2397
  store i64 1, ptr %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i4, metadata !2066, metadata !DIExpression()), !dbg !2399
  store i64 1, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2070, metadata !DIExpression()), !dbg !2400
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2080, metadata !DIExpression()), !dbg !2402
  store i64 1, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2085, metadata !DIExpression()), !dbg !2404
  store ptr %4, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !2090, metadata !DIExpression()), !dbg !2405
  store i64 -1, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !2095, metadata !DIExpression()), !dbg !2407
  %11 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %4, i64 -1, !dbg !2408
  store ptr %tmp, ptr %hole, align 8, !dbg !2409
  %12 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2409
  store ptr %11, ptr %12, align 8, !dbg !2409
  %13 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2410
  %_35 = load ptr, ptr %13, align 8, !dbg !2410, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %_35, ptr %4, i64 1) #10, !dbg !2411
  %_41.0 = sub i64 %_13.0, 1, !dbg !2412
  %_41.1 = icmp ult i64 %_13.0, 1, !dbg !2412
  %14 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !2412
  br i1 %14, label %panic1, label %bb15, !dbg !2412

bb15:                                             ; preds = %bb9
  store i64 0, ptr %_39, align 8, !dbg !2413
  %15 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 1, !dbg !2413
  store i64 %_41.0, ptr %15, align 8, !dbg !2413
  %16 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 0, !dbg !2413
  %17 = load i64, ptr %16, align 8, !dbg !2413, !noundef !24
  %18 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 1, !dbg !2413
  %19 = load i64, ptr %18, align 8, !dbg !2413, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %20 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h65b7d1992fe3aff5E(i64 %17, i64 %19) #10, !dbg !2413
  %_38.0 = extractvalue { i64, i64 } %20, 0, !dbg !2413
  %_38.1 = extractvalue { i64, i64 } %20, 1, !dbg !2413
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %21 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf2d885b31dabed3dE"(i64 %_38.0, i64 %_38.1) #10, !dbg !2413
  %_37.0 = extractvalue { i64, i64 } %21, 0, !dbg !2413
  %_37.1 = extractvalue { i64, i64 } %21, 1, !dbg !2413
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2413
  store i64 %_37.0, ptr %22, align 8, !dbg !2413
  %23 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2413
  store i64 %_37.1, ptr %23, align 8, !dbg !2413
  br label %bb18, !dbg !2414

panic1:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_e41efc6332efd19972427a8ca6f9ac9d) #11, !dbg !2412
  unreachable, !dbg !2412

bb18:                                             ; preds = %bb25, %bb15
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %24 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0a40464f3be5dc7aE"(ptr align 8 %iter) #10, !dbg !2362
  store { i64, i64 } %24, ptr %_43, align 8, !dbg !2362
  %_45 = load i64, ptr %_43, align 8, !dbg !2362, !range !1037, !noundef !24
  %25 = icmp eq i64 %_45, 0, !dbg !2362
  br i1 %25, label %bb27, label %bb20, !dbg !2362

bb27:                                             ; preds = %bb20, %bb18
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hc7fa04d0e9e7b875E"(ptr %hole) #10, !dbg !2415
  br label %bb28, !dbg !2415

bb20:                                             ; preds = %bb18
  %26 = getelementptr inbounds { i64, i64 }, ptr %_43, i32 0, i32 1, !dbg !2416
  %j = load i64, ptr %26, align 8, !dbg !2416, !noundef !24
  store i64 %j, ptr %j.dbg.spill, align 8, !dbg !2416
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !2354, metadata !DIExpression()), !dbg !2417
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !2418
  store i64 %j, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !2420
  %27 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %j, !dbg !2421
  store ptr %27, ptr %j_ptr.dbg.spill, align 8, !dbg !2422
  call void @llvm.dbg.declare(metadata ptr %j_ptr.dbg.spill, metadata !2356, metadata !DIExpression()), !dbg !2423
  store ptr %tmp, ptr %self.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i16, metadata !2282, metadata !DIExpression()), !dbg !2424
  store ptr %tmp, ptr %_51, align 8, !dbg !2426
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_51, i32 0, i32 1, !dbg !2426
  store ptr %27, ptr %28, align 8, !dbg !2426
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_51, i32 0, i32 0, !dbg !2426
  %30 = load ptr, ptr %29, align 8, !dbg !2426, !nonnull !24, !align !505, !noundef !24
  %31 = getelementptr inbounds { ptr, ptr }, ptr %_51, i32 0, i32 1, !dbg !2426
  %32 = load ptr, ptr %31, align 8, !dbg !2426, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_50 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %30, ptr align 8 %32) #10, !dbg !2426
  %_49 = xor i1 %_50, true, !dbg !2427
  br i1 %_49, label %bb27, label %bb25, !dbg !2427

bb21:                                             ; No predecessors!
  unreachable, !dbg !2362

bb25:                                             ; preds = %bb20
  %33 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2428
  %_59 = load ptr, ptr %33, align 8, !dbg !2428, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %27, ptr %_59, i64 1) #10, !dbg !2429
  %34 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2430
  store ptr %27, ptr %34, align 8, !dbg !2430
  br label %bb18, !dbg !2414
}

; core::slice::sort::choose_pivot
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort12choose_pivot17haaa6164e4366da71E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2431 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_41 = alloca { ptr, ptr, ptr }, align 8
  %_37 = alloca ptr, align 8
  %_33 = alloca ptr, align 8
  %_29 = alloca ptr, align 8
  %sort_adjacent = alloca ptr, align 8
  %sort3 = alloca ptr, align 8
  %sort2 = alloca %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", align 8
  %swaps = alloca i64, align 8
  %c = alloca i64, align 8
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2435, metadata !DIExpression()), !dbg !2468
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2436, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.declare(metadata ptr %a, metadata !2439, metadata !DIExpression()), !dbg !2470
  call void @llvm.dbg.declare(metadata ptr %b, metadata !2441, metadata !DIExpression()), !dbg !2471
  call void @llvm.dbg.declare(metadata ptr %c, metadata !2443, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.declare(metadata ptr %swaps, metadata !2445, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.declare(metadata ptr %sort2, metadata !2447, metadata !DIExpression()), !dbg !2474
  call void @llvm.dbg.declare(metadata ptr %sort3, metadata !2456, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.declare(metadata ptr %sort_adjacent, metadata !2462, metadata !DIExpression()), !dbg !2476
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2477
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2437, metadata !DIExpression()), !dbg !2478
  %_6 = udiv i64 %v.1, 4, !dbg !2479
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_6, i64 1), !dbg !2479
  %_8.0 = extractvalue { i64, i1 } %3, 0, !dbg !2479
  %_8.1 = extractvalue { i64, i1 } %3, 1, !dbg !2479
  %4 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2479
  br i1 %4, label %panic, label %bb2, !dbg !2479

bb2:                                              ; preds = %start
  store i64 %_8.0, ptr %a, align 8, !dbg !2479
  %_10 = udiv i64 %v.1, 4, !dbg !2480
  %5 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2480
  %_12.0 = extractvalue { i64, i1 } %5, 0, !dbg !2480
  %_12.1 = extractvalue { i64, i1 } %5, 1, !dbg !2480
  %6 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2480
  br i1 %6, label %panic1, label %bb4, !dbg !2480

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_912dd1c737b966744c5b309cc20a3d47) #11, !dbg !2479
  unreachable, !dbg !2479

bb4:                                              ; preds = %bb2
  store i64 %_12.0, ptr %b, align 8, !dbg !2480
  %_14 = udiv i64 %v.1, 4, !dbg !2481
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_14, i64 3), !dbg !2481
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !2481
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !2481
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !2481
  br i1 %8, label %panic2, label %bb6, !dbg !2481

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_7aff2c5e0ce2b115fc6c1e2cef0aaf8b) #11, !dbg !2480
  unreachable, !dbg !2480

bb6:                                              ; preds = %bb4
  store i64 %_16.0, ptr %c, align 8, !dbg !2481
  store i64 0, ptr %swaps, align 8, !dbg !2482
  %_18 = icmp uge i64 %v.1, 8, !dbg !2483
  br i1 %_18, label %bb7, label %bb12, !dbg !2483

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_51fd6fd3cd9ef520ddfe39086f06b289) #11, !dbg !2481
  unreachable, !dbg !2481

bb12:                                             ; preds = %bb11, %bb6
  %_46 = load i64, ptr %swaps, align 8, !dbg !2484, !noundef !24
  %_45 = icmp ult i64 %_46, 12, !dbg !2484
  br i1 %_45, label %bb13, label %bb14, !dbg !2484

bb7:                                              ; preds = %bb6
  %9 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 1, !dbg !2485
  store ptr %is_less, ptr %9, align 8, !dbg !2485
  %10 = getelementptr inbounds { ptr, i64 }, ptr %sort2, i32 0, i32 0, !dbg !2485
  store ptr %v.0, ptr %10, align 8, !dbg !2485
  %11 = getelementptr inbounds { ptr, i64 }, ptr %sort2, i32 0, i32 1, !dbg !2485
  store i64 %v.1, ptr %11, align 8, !dbg !2485
  %12 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 2, !dbg !2485
  store ptr %swaps, ptr %12, align 8, !dbg !2485
  store ptr %sort2, ptr %sort3, align 8, !dbg !2486
  %_24 = icmp uge i64 %v.1, 50, !dbg !2487
  br i1 %_24, label %bb8, label %bb11, !dbg !2487

bb11:                                             ; preds = %bb8, %bb7
  store ptr %a, ptr %_41, align 8, !dbg !2488
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2488
  store ptr %b, ptr %13, align 8, !dbg !2488
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2488
  store ptr %c, ptr %14, align 8, !dbg !2488
  %15 = load ptr, ptr %_41, align 8, !dbg !2488, !nonnull !24, !align !505, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2488
  %17 = load ptr, ptr %16, align 8, !dbg !2488, !nonnull !24, !align !505, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2488
  %19 = load ptr, ptr %18, align 8, !dbg !2488, !nonnull !24, !align !505, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hbe335321fc506100E"(ptr align 8 %sort3, ptr align 8 %15, ptr align 8 %17, ptr align 8 %19) #10, !dbg !2488
  br label %bb12, !dbg !2488

bb8:                                              ; preds = %bb7
  store ptr %sort3, ptr %sort_adjacent, align 8, !dbg !2489
  store ptr %a, ptr %_29, align 8, !dbg !2490
  %20 = load ptr, ptr %_29, align 8, !dbg !2490, !nonnull !24, !align !505, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h6b50692fa5d6cf94E"(ptr align 8 %sort_adjacent, ptr align 8 %20) #10, !dbg !2490
  store ptr %b, ptr %_33, align 8, !dbg !2491
  %21 = load ptr, ptr %_33, align 8, !dbg !2491, !nonnull !24, !align !505, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h6b50692fa5d6cf94E"(ptr align 8 %sort_adjacent, ptr align 8 %21) #10, !dbg !2491
  store ptr %c, ptr %_37, align 8, !dbg !2492
  %22 = load ptr, ptr %_37, align 8, !dbg !2492, !nonnull !24, !align !505, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h6b50692fa5d6cf94E"(ptr align 8 %sort_adjacent, ptr align 8 %22) #10, !dbg !2492
  br label %bb11, !dbg !2492

bb14:                                             ; preds = %bb12
; call core::slice::<impl [T]>::reverse
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h2263e868b33f283cE"(ptr align 8 %v.0, i64 %v.1) #10, !dbg !2493
  %_53.0 = sub i64 %v.1, 1, !dbg !2494
  %_53.1 = icmp ult i64 %v.1, 1, !dbg !2494
  %23 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !2494
  br i1 %23, label %panic3, label %bb16, !dbg !2494

bb13:                                             ; preds = %bb12
  %_47 = load i64, ptr %b, align 8, !dbg !2495, !noundef !24
  %_49 = load i64, ptr %swaps, align 8, !dbg !2496, !noundef !24
  %_48 = icmp eq i64 %_49, 0, !dbg !2496
  store i64 %_47, ptr %0, align 8, !dbg !2497
  %24 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2497
  %25 = zext i1 %_48 to i8, !dbg !2497
  store i8 %25, ptr %24, align 8, !dbg !2497
  br label %bb18, !dbg !2498

bb18:                                             ; preds = %bb17, %bb13
  %26 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !2499
  %27 = load i64, ptr %26, align 8, !dbg !2499, !noundef !24
  %28 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2499
  %29 = load i8, ptr %28, align 8, !dbg !2499, !range !231, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !2499
  %31 = zext i1 %30 to i8, !dbg !2499
  %32 = insertvalue { i64, i8 } poison, i64 %27, 0, !dbg !2499
  %33 = insertvalue { i64, i8 } %32, i8 %31, 1, !dbg !2499
  ret { i64, i8 } %33, !dbg !2499

bb16:                                             ; preds = %bb14
  %_54 = load i64, ptr %b, align 8, !dbg !2500, !noundef !24
  %_55.0 = sub i64 %_53.0, %_54, !dbg !2494
  %_55.1 = icmp ult i64 %_53.0, %_54, !dbg !2494
  %34 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2494
  br i1 %34, label %panic4, label %bb17, !dbg !2494

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6a8eb4c18787545063c119f92681aeff) #11, !dbg !2494
  unreachable, !dbg !2494

bb17:                                             ; preds = %bb16
  store i64 %_55.0, ptr %0, align 8, !dbg !2501
  %35 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2501
  store i8 1, ptr %35, align 8, !dbg !2501
  br label %bb18, !dbg !2498

panic4:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6a8eb4c18787545063c119f92681aeff) #11, !dbg !2494
  unreachable, !dbg !2494
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h30b9f742c3f6ac23E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2502 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2508, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 16, DW_OP_deref)), !dbg !2511
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2509, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2512
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2510, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 24, DW_OP_deref)), !dbg !2513
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2506, metadata !DIExpression()), !dbg !2514
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2507, metadata !DIExpression()), !dbg !2515
  %0 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 1, !dbg !2516
  %_16 = load ptr, ptr %0, align 8, !dbg !2516, !nonnull !24, !align !505, !noundef !24
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2517
  %_17.0 = load ptr, ptr %1, align 8, !dbg !2517, !nonnull !24, !align !505, !noundef !24
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2517
  %_17.1 = load i64, ptr %2, align 8, !dbg !2517, !noundef !24
  %_8 = load i64, ptr %b, align 8, !dbg !2518, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_7 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %_17.0, i64 %_17.1, i64 %_8) #10, !dbg !2517
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2519
  %_18.0 = load ptr, ptr %3, align 8, !dbg !2519, !nonnull !24, !align !505, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2519
  %_18.1 = load i64, ptr %4, align 8, !dbg !2519, !noundef !24
  %_11 = load i64, ptr %a, align 8, !dbg !2520, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_10 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %_18.0, i64 %_18.1, i64 %_11) #10, !dbg !2519
  store ptr %_7, ptr %_5, align 8, !dbg !2516
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2516
  store ptr %_10, ptr %5, align 8, !dbg !2516
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 0, !dbg !2516
  %7 = load ptr, ptr %6, align 8, !dbg !2516, !nonnull !24, !align !505, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2516
  %9 = load ptr, ptr %8, align 8, !dbg !2516, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %_16, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2516
  br i1 %_4, label %bb4, label %bb7, !dbg !2516

bb7:                                              ; preds = %bb6, %start
  ret void, !dbg !2521

bb4:                                              ; preds = %start
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17hedb66df694a232a2E(ptr %a, ptr %b) #10, !dbg !2522
  %10 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2523
  %_19 = load ptr, ptr %10, align 8, !dbg !2523, !nonnull !24, !align !505, !noundef !24
  %11 = load i64, ptr %_19, align 8, !dbg !2523, !noundef !24
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %11, i64 1), !dbg !2523
  %_15.0 = extractvalue { i64, i1 } %12, 0, !dbg !2523
  %_15.1 = extractvalue { i64, i1 } %12, 1, !dbg !2523
  %13 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2523
  %_20 = load ptr, ptr %13, align 8, !dbg !2523, !nonnull !24, !align !505, !noundef !24
  %14 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !2523
  br i1 %14, label %panic, label %bb6, !dbg !2523

bb6:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2523
  %_21 = load ptr, ptr %15, align 8, !dbg !2523, !nonnull !24, !align !505, !noundef !24
  store i64 %_15.0, ptr %_21, align 8, !dbg !2523
  br label %bb7, !dbg !2524

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_8b1cf5b76b10a43810ba75cdb94336e8) #11, !dbg !2523
  unreachable, !dbg !2523
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h6b50692fa5d6cf94E"(ptr align 8 %_1, ptr align 8 %a) unnamed_addr #0 !dbg !2525 {
start:
  %tmp.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca i64, align 8
  %_5 = alloca { ptr, ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2531, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2534
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2530, metadata !DIExpression()), !dbg !2535
  %tmp = load i64, ptr %a, align 8, !dbg !2536, !noundef !24
  store i64 %tmp, ptr %tmp.dbg.spill, align 8, !dbg !2536
  call void @llvm.dbg.declare(metadata ptr %tmp.dbg.spill, metadata !2532, metadata !DIExpression()), !dbg !2537
  %_12 = load ptr, ptr %_1, align 8, !dbg !2538, !nonnull !24, !align !505, !noundef !24
  %_8.0 = sub i64 %tmp, 1, !dbg !2539
  %_8.1 = icmp ult i64 %tmp, 1, !dbg !2539
  %0 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2539
  br i1 %0, label %panic, label %bb1, !dbg !2539

bb1:                                              ; preds = %start
  store i64 %_8.0, ptr %_7, align 8, !dbg !2539
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %tmp, i64 1), !dbg !2540
  %_11.0 = extractvalue { i64, i1 } %1, 0, !dbg !2540
  %_11.1 = extractvalue { i64, i1 } %1, 1, !dbg !2540
  %2 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !2540
  br i1 %2, label %panic1, label %bb2, !dbg !2540

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4e8855159810091534f04a19bbe30782) #11, !dbg !2539
  unreachable, !dbg !2539

bb2:                                              ; preds = %bb1
  store i64 %_11.0, ptr %_10, align 8, !dbg !2540
  store ptr %_7, ptr %_5, align 8, !dbg !2538
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2538
  store ptr %a, ptr %3, align 8, !dbg !2538
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2538
  store ptr %_10, ptr %4, align 8, !dbg !2538
  %5 = load ptr, ptr %_5, align 8, !dbg !2538, !nonnull !24, !align !505, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2538
  %7 = load ptr, ptr %6, align 8, !dbg !2538, !nonnull !24, !align !505, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2538
  %9 = load ptr, ptr %8, align 8, !dbg !2538, !nonnull !24, !align !505, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hbe335321fc506100E"(ptr align 8 %_12, ptr align 8 %5, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2538
  ret void, !dbg !2541

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_787d88f30b9a4c9abd6abb658d261d97) #11, !dbg !2540
  unreachable, !dbg !2540
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hbe335321fc506100E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b, ptr align 8 %c) unnamed_addr #0 !dbg !2542 {
start:
  %c.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca { ptr, ptr }, align 8
  %_8 = alloca { ptr, ptr }, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2549, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2550
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2546, metadata !DIExpression()), !dbg !2551
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2547, metadata !DIExpression()), !dbg !2552
  store ptr %c, ptr %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !2548, metadata !DIExpression()), !dbg !2553
  %_11 = load ptr, ptr %_1, align 8, !dbg !2554, !nonnull !24, !align !505, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2554
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2554
  store ptr %b, ptr %0, align 8, !dbg !2554
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2554
  %2 = load ptr, ptr %1, align 8, !dbg !2554, !nonnull !24, !align !505, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2554
  %4 = load ptr, ptr %3, align 8, !dbg !2554, !nonnull !24, !align !505, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h30b9f742c3f6ac23E"(ptr align 8 %_11, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2554
  %_12 = load ptr, ptr %_1, align 8, !dbg !2555, !nonnull !24, !align !505, !noundef !24
  store ptr %b, ptr %_8, align 8, !dbg !2555
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2555
  store ptr %c, ptr %5, align 8, !dbg !2555
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 0, !dbg !2555
  %7 = load ptr, ptr %6, align 8, !dbg !2555, !nonnull !24, !align !505, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2555
  %9 = load ptr, ptr %8, align 8, !dbg !2555, !nonnull !24, !align !505, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h30b9f742c3f6ac23E"(ptr align 8 %_12, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2555
  %_13 = load ptr, ptr %_1, align 8, !dbg !2556, !nonnull !24, !align !505, !noundef !24
  store ptr %a, ptr %_10, align 8, !dbg !2556
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2556
  store ptr %b, ptr %10, align 8, !dbg !2556
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2556
  %12 = load ptr, ptr %11, align 8, !dbg !2556, !nonnull !24, !align !505, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2556
  %14 = load ptr, ptr %13, align 8, !dbg !2556, !nonnull !24, !align !505, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h30b9f742c3f6ac23E"(ptr align 8 %_13, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2556
  ret void, !dbg !2557
}

; core::slice::sort::break_patterns
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort14break_patterns17h03b957f412d2760fE(ptr align 8 %v.0, i64 %v.1) unnamed_addr #2 !dbg !2558 {
start:
  %i.dbg.spill = alloca i64, align 8
  %pos.dbg.spill = alloca i64, align 8
  %modulus.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %other = alloca i64, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %gen_usize = alloca ptr, align 8
  %seed = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2560, metadata !DIExpression()), !dbg !2581
  call void @llvm.dbg.declare(metadata ptr %seed, metadata !2563, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.declare(metadata ptr %gen_usize, metadata !2565, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2575, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.declare(metadata ptr %other, metadata !2579, metadata !DIExpression()), !dbg !2585
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2586
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2561, metadata !DIExpression()), !dbg !2587
  %_4 = icmp uge i64 %v.1, 8, !dbg !2588
  br i1 %_4, label %bb1, label %bb17, !dbg !2588

bb17:                                             ; preds = %bb6, %start
  ret void, !dbg !2589

bb1:                                              ; preds = %start
  store i64 %v.1, ptr %seed, align 8, !dbg !2590
  store ptr %seed, ptr %gen_usize, align 8, !dbg !2591
; call core::num::<impl usize>::next_power_of_two
  %modulus = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17ha4fc2aa9633a53bdE"(i64 %v.1) #10, !dbg !2592
  store i64 %modulus, ptr %modulus.dbg.spill, align 8, !dbg !2592
  call void @llvm.dbg.declare(metadata ptr %modulus.dbg.spill, metadata !2571, metadata !DIExpression()), !dbg !2593
  %_10 = udiv i64 %v.1, 4, !dbg !2594
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2594
  %_12.0 = extractvalue { i64, i1 } %2, 0, !dbg !2594
  %_12.1 = extractvalue { i64, i1 } %2, 1, !dbg !2594
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2594
  br i1 %3, label %panic, label %bb4, !dbg !2594

bb4:                                              ; preds = %bb1
  store i64 %_12.0, ptr %pos.dbg.spill, align 8, !dbg !2594
  call void @llvm.dbg.declare(metadata ptr %pos.dbg.spill, metadata !2573, metadata !DIExpression()), !dbg !2595
  store i64 0, ptr %_14, align 8, !dbg !2596
  %4 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2596
  store i64 3, ptr %4, align 8, !dbg !2596
  %5 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !2596
  %6 = load i64, ptr %5, align 8, !dbg !2596, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2596
  %8 = load i64, ptr %7, align 8, !dbg !2596, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbd4e891038e99fd5E"(i64 %6, i64 %8) #10, !dbg !2596
  %_13.0 = extractvalue { i64, i64 } %9, 0, !dbg !2596
  %_13.1 = extractvalue { i64, i64 } %9, 1, !dbg !2596
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2596
  store i64 %_13.0, ptr %10, align 8, !dbg !2596
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2596
  store i64 %_13.1, ptr %11, align 8, !dbg !2596
  br label %bb6, !dbg !2597

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_2745df5dada1022057bbf8b1e08b9408) #11, !dbg !2594
  unreachable, !dbg !2594

bb6:                                              ; preds = %bb16, %bb4
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %12 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hcbda1fddb935b88aE"(ptr align 8 %iter) #10, !dbg !2584
  store { i64, i64 } %12, ptr %_16, align 8, !dbg !2584
  %_18 = load i64, ptr %_16, align 8, !dbg !2584, !range !1037, !noundef !24
  %13 = icmp eq i64 %_18, 0, !dbg !2584
  br i1 %13, label %bb17, label %bb8, !dbg !2584

bb8:                                              ; preds = %bb6
  %14 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !2598
  %i = load i64, ptr %14, align 8, !dbg !2598, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2598
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2577, metadata !DIExpression()), !dbg !2599
; call core::slice::sort::break_patterns::{{closure}}
  %_21 = call i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h9a1849ac52b1accbE"(ptr align 8 %gen_usize) #10, !dbg !2600
  %_25.0 = sub i64 %modulus, 1, !dbg !2601
  %_25.1 = icmp ult i64 %modulus, 1, !dbg !2601
  %15 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false), !dbg !2601
  br i1 %15, label %panic1, label %bb11, !dbg !2601

bb9:                                              ; No predecessors!
  unreachable, !dbg !2584

bb11:                                             ; preds = %bb8
  %16 = and i64 %_21, %_25.0, !dbg !2600
  store i64 %16, ptr %other, align 8, !dbg !2600
  %_27 = load i64, ptr %other, align 8, !dbg !2602, !noundef !24
  %_26 = icmp uge i64 %_27, %v.1, !dbg !2602
  br i1 %_26, label %bb12, label %bb14, !dbg !2602

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c3165b226cb3c0c182e30d6993318b09) #11, !dbg !2601
  unreachable, !dbg !2601

bb14:                                             ; preds = %bb13, %bb11
  %_32.0 = sub i64 %_12.0, 1, !dbg !2603
  %_32.1 = icmp ult i64 %_12.0, 1, !dbg !2603
  %17 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !2603
  br i1 %17, label %panic3, label %bb15, !dbg !2603

bb12:                                             ; preds = %bb11
  %18 = load i64, ptr %other, align 8, !dbg !2604, !noundef !24
  %_28.0 = sub i64 %18, %v.1, !dbg !2604
  %_28.1 = icmp ult i64 %18, %v.1, !dbg !2604
  %19 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !2604
  br i1 %19, label %panic2, label %bb13, !dbg !2604

bb13:                                             ; preds = %bb12
  store i64 %_28.0, ptr %other, align 8, !dbg !2604
  br label %bb14, !dbg !2605

panic2:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c938216ce784d5d7b6bb0e8f59c85beb) #11, !dbg !2604
  unreachable, !dbg !2604

bb15:                                             ; preds = %bb14
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_32.0, i64 %i), !dbg !2603
  %_33.0 = extractvalue { i64, i1 } %20, 0, !dbg !2603
  %_33.1 = extractvalue { i64, i1 } %20, 1, !dbg !2603
  %21 = call i1 @llvm.expect.i1(i1 %_33.1, i1 false), !dbg !2603
  br i1 %21, label %panic4, label %bb16, !dbg !2603

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_55987e570b17d50f773e204af1733715) #11, !dbg !2603
  unreachable, !dbg !2603

bb16:                                             ; preds = %bb15
  %_34 = load i64, ptr %other, align 8, !dbg !2606, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h896a93d8011e65cdE"(ptr align 8 %v.0, i64 %v.1, i64 %_33.0, i64 %_34, ptr align 8 @alloc_dd29033771d55fdf04aba4a1982901e8) #10, !dbg !2607
  br label %bb6, !dbg !2607

panic4:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_55987e570b17d50f773e204af1733715) #11, !dbg !2603
  unreachable, !dbg !2603
}

; core::slice::sort::break_patterns::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h9a1849ac52b1accbE"(ptr align 8 %_1) unnamed_addr #0 !dbg !2608 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  %r1 = alloca i64, align 8
  %r = alloca i32, align 4
  %0 = alloca i64, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2613, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2618
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2614, metadata !DIExpression()), !dbg !2619
  call void @llvm.dbg.declare(metadata ptr %r1, metadata !2616, metadata !DIExpression()), !dbg !2620
  br i1 false, label %bb1, label %bb5, !dbg !2621

bb5:                                              ; preds = %start
  %_36 = load ptr, ptr %_1, align 8, !dbg !2622, !nonnull !24, !align !505, !noundef !24
  %_19 = load i64, ptr %_36, align 8, !dbg !2622, !noundef !24
  store i64 %_19, ptr %r1, align 8, !dbg !2622
  %_21 = load i64, ptr %r1, align 8, !dbg !2623, !noundef !24
  %_20 = shl i64 %_21, 13, !dbg !2623
  %1 = load i64, ptr %r1, align 8, !dbg !2624, !noundef !24
  %2 = xor i64 %1, %_20, !dbg !2624
  store i64 %2, ptr %r1, align 8, !dbg !2624
  %_25 = load i64, ptr %r1, align 8, !dbg !2625, !noundef !24
  %_24 = lshr i64 %_25, 7, !dbg !2625
  %3 = load i64, ptr %r1, align 8, !dbg !2626, !noundef !24
  %4 = xor i64 %3, %_24, !dbg !2626
  store i64 %4, ptr %r1, align 8, !dbg !2626
  %_29 = load i64, ptr %r1, align 8, !dbg !2627, !noundef !24
  %_28 = shl i64 %_29, 17, !dbg !2627
  %5 = load i64, ptr %r1, align 8, !dbg !2628, !noundef !24
  %6 = xor i64 %5, %_28, !dbg !2628
  store i64 %6, ptr %r1, align 8, !dbg !2628
  %_32 = load i64, ptr %r1, align 8, !dbg !2629, !noundef !24
  %_37 = load ptr, ptr %_1, align 8, !dbg !2630, !nonnull !24, !align !505, !noundef !24
  store i64 %_32, ptr %_37, align 8, !dbg !2630
  %_38 = load ptr, ptr %_1, align 8, !dbg !2631, !nonnull !24, !align !505, !noundef !24
  %7 = load i64, ptr %_38, align 8, !dbg !2631, !noundef !24
  store i64 %7, ptr %0, align 8, !dbg !2631
  br label %bb9, !dbg !2632

bb1:                                              ; preds = %start
  %_33 = load ptr, ptr %_1, align 8, !dbg !2633, !nonnull !24, !align !505, !noundef !24
  %_4 = load i64, ptr %_33, align 8, !dbg !2633, !noundef !24
  %8 = trunc i64 %_4 to i32, !dbg !2633
  store i32 %8, ptr %r, align 4, !dbg !2633
  %_6 = load i32, ptr %r, align 4, !dbg !2634, !noundef !24
  %_5 = shl i32 %_6, 13, !dbg !2634
  %9 = load i32, ptr %r, align 4, !dbg !2635, !noundef !24
  %10 = xor i32 %9, %_5, !dbg !2635
  store i32 %10, ptr %r, align 4, !dbg !2635
  %_10 = load i32, ptr %r, align 4, !dbg !2636, !noundef !24
  %_9 = lshr i32 %_10, 17, !dbg !2636
  %11 = load i32, ptr %r, align 4, !dbg !2637, !noundef !24
  %12 = xor i32 %11, %_9, !dbg !2637
  store i32 %12, ptr %r, align 4, !dbg !2637
  %_14 = load i32, ptr %r, align 4, !dbg !2638, !noundef !24
  %_13 = shl i32 %_14, 5, !dbg !2638
  %13 = load i32, ptr %r, align 4, !dbg !2639, !noundef !24
  %14 = xor i32 %13, %_13, !dbg !2639
  store i32 %14, ptr %r, align 4, !dbg !2639
  %_17 = load i32, ptr %r, align 4, !dbg !2640, !noundef !24
  %_34 = load ptr, ptr %_1, align 8, !dbg !2641, !nonnull !24, !align !505, !noundef !24
  %15 = zext i32 %_17 to i64, !dbg !2641
  store i64 %15, ptr %_34, align 8, !dbg !2641
  %_35 = load ptr, ptr %_1, align 8, !dbg !2642, !nonnull !24, !align !505, !noundef !24
  %16 = load i64, ptr %_35, align 8, !dbg !2642, !noundef !24
  store i64 %16, ptr %0, align 8, !dbg !2642
  br label %bb9, !dbg !2632

bb9:                                              ; preds = %bb5, %bb1
  %17 = load i64, ptr %0, align 8, !dbg !2643, !noundef !24
  ret i64 %17, !dbg !2643
}

; core::slice::sort::partition_equal
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort15partition_equal17hb3338f23996c1155E(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2644 {
start:
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %self.dbg.spill.i16 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i14 = alloca i64, align 8
  %self.dbg.spill.i15 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_44 = alloca { ptr, ptr }, align 8
  %_39 = alloca i8, align 1
  %_33 = alloca { ptr, ptr }, align 8
  %_27 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_13 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_7 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2648, metadata !DIExpression()), !dbg !2668
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2649, metadata !DIExpression()), !dbg !2669
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2650, metadata !DIExpression()), !dbg !2670
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2656, metadata !DIExpression()), !dbg !2671
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !2658, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2662, metadata !DIExpression()), !dbg !2673
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2664, metadata !DIExpression()), !dbg !2674
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h896a93d8011e65cdE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_f8322b69080b1e19bc4df073038a414d) #10, !dbg !2675
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17he70e0f6eb42f454eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_7, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_23975e137ecce848c3167e283c742672) #10, !dbg !2676
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !2677
  %pivot.0 = load ptr, ptr %2, align 8, !dbg !2677, !nonnull !24, !align !505, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !2677
  %pivot.1 = load i64, ptr %3, align 8, !dbg !2677, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !2677
  store ptr %pivot.0, ptr %4, align 8, !dbg !2677
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !2677
  store i64 %pivot.1, ptr %5, align 8, !dbg !2677
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !2651, metadata !DIExpression()), !dbg !2678
  %6 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !2679
  %7 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 0, !dbg !2679
  %v.02 = load ptr, ptr %7, align 8, !dbg !2679, !nonnull !24, !align !505, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 1, !dbg !2679
  %v.13 = load i64, ptr %8, align 8, !dbg !2679, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !2679
  store ptr %v.02, ptr %9, align 8, !dbg !2679
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !2679
  store i64 %v.13, ptr %10, align 8, !dbg !2679
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !2653, metadata !DIExpression()), !dbg !2680
  %_11 = icmp ult i64 0, %pivot.1, !dbg !2681
  %11 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !2681
  br i1 %11, label %bb3, label %panic, !dbg !2681

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !2682
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !2682
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !2654, metadata !DIExpression()), !dbg !2683
; call core::ptr::read
  call void @_ZN4core3ptr4read17hd09643a295aa6f4fE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_13, ptr %pivot5) #10, !dbg !2684
  call void @llvm.dbg.declare(metadata ptr %_13, metadata !980, metadata !DIExpression()), !dbg !2685
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_13, i64 24, i1 false), !dbg !2687
  store ptr %tmp, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !2282, metadata !DIExpression()), !dbg !2688
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !2690
  %12 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !2690
  store ptr %pivot5, ptr %12, align 8, !dbg !2690
  store ptr %tmp, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !2282, metadata !DIExpression()), !dbg !2691
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !2693
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !2660, metadata !DIExpression()), !dbg !2694
  store i64 0, ptr %l, align 8, !dbg !2695
  store i64 %v.13, ptr %r, align 8, !dbg !2696
  br label %bb8, !dbg !2697

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 0, i64 %pivot.1, ptr align 8 @alloc_3ea9d353dbaea466ca156be00652f893) #11, !dbg !2681
  unreachable, !dbg !2681

bb8:                                              ; preds = %bb33, %bb15, %bb3
  %_29 = load i64, ptr %l, align 8, !dbg !2698, !noundef !24
  %_30 = load i64, ptr %r, align 8, !dbg !2699, !noundef !24
  %_28 = icmp ult i64 %_29, %_30, !dbg !2698
  br i1 %_28, label %bb10, label %bb9, !dbg !2698

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_27, align 1, !dbg !2698
  br label %bb11, !dbg !2698

bb10:                                             ; preds = %bb8
  %_37 = load i64, ptr %l, align 8, !dbg !2700, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_35 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %v.02, i64 %v.13, i64 %_37) #10, !dbg !2701
  store ptr %tmp, ptr %_33, align 8, !dbg !2702
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !2702
  store ptr %_35, ptr %13, align 8, !dbg !2702
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 0, !dbg !2702
  %15 = load ptr, ptr %14, align 8, !dbg !2702, !nonnull !24, !align !505, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !2702
  %17 = load ptr, ptr %16, align 8, !dbg !2702, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_32 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %15, ptr align 8 %17) #10, !dbg !2702
  %_31 = xor i1 %_32, true, !dbg !2703
  %18 = zext i1 %_31 to i8, !dbg !2698
  store i8 %18, ptr %_27, align 1, !dbg !2698
  br label %bb11, !dbg !2698

bb11:                                             ; preds = %bb9, %bb10
  %19 = load i8, ptr %_27, align 1, !dbg !2698, !range !231, !noundef !24
  %20 = trunc i8 %19 to i1, !dbg !2698
  br i1 %20, label %bb14, label %bb16, !dbg !2698

bb16:                                             ; preds = %bb24, %bb11
  %_41 = load i64, ptr %l, align 8, !dbg !2704, !noundef !24
  %_42 = load i64, ptr %r, align 8, !dbg !2705, !noundef !24
  %_40 = icmp ult i64 %_41, %_42, !dbg !2704
  br i1 %_40, label %bb18, label %bb17, !dbg !2704

bb14:                                             ; preds = %bb11
  %21 = load i64, ptr %l, align 8, !dbg !2706, !noundef !24
  %22 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 1), !dbg !2706
  %_38.0 = extractvalue { i64, i1 } %22, 0, !dbg !2706
  %_38.1 = extractvalue { i64, i1 } %22, 1, !dbg !2706
  %23 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !2706
  br i1 %23, label %panic8, label %bb15, !dbg !2706

bb15:                                             ; preds = %bb14
  store i64 %_38.0, ptr %l, align 8, !dbg !2706
  br label %bb8, !dbg !2707

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_a23b538f7d9197acefade9a7784184c2) #11, !dbg !2706
  unreachable, !dbg !2706

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_39, align 1, !dbg !2704
  br label %bb19, !dbg !2704

bb18:                                             ; preds = %bb16
  %_49 = load i64, ptr %r, align 8, !dbg !2708, !noundef !24
  %_50.0 = sub i64 %_49, 1, !dbg !2708
  %_50.1 = icmp ult i64 %_49, 1, !dbg !2708
  %24 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false), !dbg !2708
  br i1 %24, label %panic9, label %bb20, !dbg !2708

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_46 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %v.02, i64 %v.13, i64 %_50.0) #10, !dbg !2709
  store ptr %tmp, ptr %_44, align 8, !dbg !2710
  %25 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !2710
  store ptr %_46, ptr %25, align 8, !dbg !2710
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 0, !dbg !2710
  %27 = load ptr, ptr %26, align 8, !dbg !2710, !nonnull !24, !align !505, !noundef !24
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !2710
  %29 = load ptr, ptr %28, align 8, !dbg !2710, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_43 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %27, ptr align 8 %29) #10, !dbg !2710
  %30 = zext i1 %_43 to i8, !dbg !2704
  store i8 %30, ptr %_39, align 1, !dbg !2704
  br label %bb19, !dbg !2704

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_3aa499bef66e3a89497706d0904ac653) #11, !dbg !2708
  unreachable, !dbg !2708

bb19:                                             ; preds = %bb17, %bb20
  %31 = load i8, ptr %_39, align 1, !dbg !2704, !range !231, !noundef !24
  %32 = trunc i8 %31 to i1, !dbg !2704
  br i1 %32, label %bb23, label %bb25, !dbg !2704

bb25:                                             ; preds = %bb19
  %_53 = load i64, ptr %l, align 8, !dbg !2711, !noundef !24
  %_54 = load i64, ptr %r, align 8, !dbg !2712, !noundef !24
  %_52 = icmp uge i64 %_53, %_54, !dbg !2711
  br i1 %_52, label %bb26, label %bb27, !dbg !2711

bb23:                                             ; preds = %bb19
  %33 = load i64, ptr %r, align 8, !dbg !2713, !noundef !24
  %_51.0 = sub i64 %33, 1, !dbg !2713
  %_51.1 = icmp ult i64 %33, 1, !dbg !2713
  %34 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false), !dbg !2713
  br i1 %34, label %panic10, label %bb24, !dbg !2713

bb24:                                             ; preds = %bb23
  store i64 %_51.0, ptr %r, align 8, !dbg !2713
  br label %bb16, !dbg !2714

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6b88286adc8b79b2ce0db9f94ea83bc3) #11, !dbg !2713
  unreachable, !dbg !2713

bb27:                                             ; preds = %bb25
  %35 = load i64, ptr %r, align 8, !dbg !2715, !noundef !24
  %_55.0 = sub i64 %35, 1, !dbg !2715
  %_55.1 = icmp ult i64 %35, 1, !dbg !2715
  %36 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2715
  br i1 %36, label %panic12, label %bb28, !dbg !2715

bb26:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !2716, !noundef !24
  %37 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_65, i64 1), !dbg !2716
  %_66.0 = extractvalue { i64, i1 } %37, 0, !dbg !2716
  %_66.1 = extractvalue { i64, i1 } %37, 1, !dbg !2716
  %38 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !2716
  br i1 %38, label %panic11, label %bb34, !dbg !2716

bb34:                                             ; preds = %bb26
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hc7fa04d0e9e7b875E"(ptr %_pivot_guard) #10, !dbg !2717
  ret i64 %_66.0, !dbg !2718

panic11:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_10d6a7449345760a13244dcd4f3e8edd) #11, !dbg !2716
  unreachable, !dbg !2716

bb28:                                             ; preds = %bb27
  store i64 %_55.0, ptr %r, align 8, !dbg !2715
  store ptr %v.02, ptr %self.dbg.spill.i16, align 8
  %39 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i16, i32 0, i32 1
  store i64 %v.13, ptr %39, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i16, metadata !1927, metadata !DIExpression()), !dbg !2719
  store ptr %v.02, ptr %ptr.dbg.spill, align 8, !dbg !2721
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2666, metadata !DIExpression()), !dbg !2722
  %_60 = load i64, ptr %l, align 8, !dbg !2723, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i15, metadata !265, metadata !DIExpression()), !dbg !2724
  store i64 %_60, ptr %count.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i14, metadata !271, metadata !DIExpression()), !dbg !2726
  %40 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_60, !dbg !2727
  %_63 = load i64, ptr %r, align 8, !dbg !2728, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !2729
  store i64 %_63, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !2731
  %41 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_63, !dbg !2732
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17hdded449a2079ac21E(ptr %40, ptr %41) #10, !dbg !2733
  %42 = load i64, ptr %l, align 8, !dbg !2734, !noundef !24
  %43 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %42, i64 1), !dbg !2734
  %_64.0 = extractvalue { i64, i1 } %43, 0, !dbg !2734
  %_64.1 = extractvalue { i64, i1 } %43, 1, !dbg !2734
  %44 = call i1 @llvm.expect.i1(i1 %_64.1, i1 false), !dbg !2734
  br i1 %44, label %panic13, label %bb33, !dbg !2734

panic12:                                          ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_894987bd31137d43dbfbf66922648de6) #11, !dbg !2715
  unreachable, !dbg !2715

bb33:                                             ; preds = %bb28
  store i64 %_64.0, ptr %l, align 8, !dbg !2734
  br label %bb8, !dbg !2697

panic13:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_bae318ebda80fadd5948c94c31acdbd2) #11, !dbg !2734
  unreachable, !dbg !2734
}

; core::slice::sort::partition_in_blocks
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks17h802e2d36a30c7fe0E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2735 {
start:
  %small.dbg.spill.i140 = alloca i8, align 1
  %small.dbg.spill.i139 = alloca i8, align 1
  %small.dbg.spill.i138 = alloca i8, align 1
  %small.dbg.spill.i137 = alloca i8, align 1
  %small.dbg.spill.i136 = alloca i8, align 1
  %small.dbg.spill.i135 = alloca i8, align 1
  %small.dbg.spill.i134 = alloca i8, align 1
  %small.dbg.spill.i133 = alloca i8, align 1
  %small.dbg.spill.i132 = alloca i8, align 1
  %small.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i131 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i130 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i129 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i128 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i127 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i126 = alloca { ptr, i64 }, align 8
  %addr.dbg.spill.i.i125 = alloca i64, align 8
  %addr.dbg.spill.i.i124 = alloca i64, align 8
  %addr.dbg.spill.i.i123 = alloca i64, align 8
  %addr.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i121 = alloca i64, align 8
  %self.dbg.spill.i122 = alloca ptr, align 8
  %count.dbg.spill.i119 = alloca i64, align 8
  %self.dbg.spill.i120 = alloca ptr, align 8
  %count.dbg.spill.i117 = alloca i64, align 8
  %self.dbg.spill.i118 = alloca ptr, align 8
  %count.dbg.spill.i115 = alloca i64, align 8
  %self.dbg.spill.i116 = alloca ptr, align 8
  %count.dbg.spill.i113 = alloca i64, align 8
  %self.dbg.spill.i114 = alloca ptr, align 8
  %count.dbg.spill.i111 = alloca i64, align 8
  %self.dbg.spill.i112 = alloca ptr, align 8
  %count.dbg.spill.i109 = alloca i64, align 8
  %self.dbg.spill.i110 = alloca ptr, align 8
  %count.dbg.spill.i107 = alloca i64, align 8
  %self.dbg.spill.i108 = alloca ptr, align 8
  %count.dbg.spill.i105 = alloca i64, align 8
  %self.dbg.spill.i106 = alloca ptr, align 8
  %count.dbg.spill.i103 = alloca i64, align 8
  %self.dbg.spill.i104 = alloca ptr, align 8
  %count.dbg.spill.i101 = alloca i64, align 8
  %self.dbg.spill.i102 = alloca ptr, align 8
  %rhs.dbg.spill.i.i96 = alloca i64, align 8
  %self.dbg.spill.i1.i97 = alloca i64, align 8
  %self.dbg.spill.i.i98 = alloca i64, align 8
  %count.dbg.spill.i99 = alloca i64, align 8
  %self.dbg.spill.i100 = alloca ptr, align 8
  %rhs.dbg.spill.i.i91 = alloca i64, align 8
  %self.dbg.spill.i1.i92 = alloca i64, align 8
  %self.dbg.spill.i.i93 = alloca i64, align 8
  %count.dbg.spill.i94 = alloca i64, align 8
  %self.dbg.spill.i95 = alloca ptr, align 8
  %rhs.dbg.spill.i.i86 = alloca i64, align 8
  %self.dbg.spill.i1.i87 = alloca i64, align 8
  %self.dbg.spill.i.i88 = alloca i64, align 8
  %count.dbg.spill.i89 = alloca i64, align 8
  %self.dbg.spill.i90 = alloca ptr, align 8
  %rhs.dbg.spill.i.i81 = alloca i64, align 8
  %self.dbg.spill.i1.i82 = alloca i64, align 8
  %self.dbg.spill.i.i83 = alloca i64, align 8
  %count.dbg.spill.i84 = alloca i64, align 8
  %self.dbg.spill.i85 = alloca ptr, align 8
  %rhs.dbg.spill.i.i76 = alloca i64, align 8
  %self.dbg.spill.i1.i77 = alloca i64, align 8
  %self.dbg.spill.i.i78 = alloca i64, align 8
  %count.dbg.spill.i79 = alloca i64, align 8
  %self.dbg.spill.i80 = alloca ptr, align 8
  %rhs.dbg.spill.i.i71 = alloca i64, align 8
  %self.dbg.spill.i1.i72 = alloca i64, align 8
  %self.dbg.spill.i.i73 = alloca i64, align 8
  %count.dbg.spill.i74 = alloca i64, align 8
  %self.dbg.spill.i75 = alloca ptr, align 8
  %rhs.dbg.spill.i.i66 = alloca i64, align 8
  %self.dbg.spill.i1.i67 = alloca i64, align 8
  %self.dbg.spill.i.i68 = alloca i64, align 8
  %count.dbg.spill.i69 = alloca i64, align 8
  %self.dbg.spill.i70 = alloca ptr, align 8
  %rhs.dbg.spill.i.i61 = alloca i64, align 8
  %self.dbg.spill.i1.i62 = alloca i64, align 8
  %self.dbg.spill.i.i63 = alloca i64, align 8
  %count.dbg.spill.i64 = alloca i64, align 8
  %self.dbg.spill.i65 = alloca ptr, align 8
  %rhs.dbg.spill.i.i56 = alloca i64, align 8
  %self.dbg.spill.i1.i57 = alloca i64, align 8
  %self.dbg.spill.i.i58 = alloca i64, align 8
  %count.dbg.spill.i59 = alloca i64, align 8
  %self.dbg.spill.i60 = alloca ptr, align 8
  %rhs.dbg.spill.i.i51 = alloca i64, align 8
  %self.dbg.spill.i1.i52 = alloca i64, align 8
  %self.dbg.spill.i.i53 = alloca i64, align 8
  %count.dbg.spill.i54 = alloca i64, align 8
  %self.dbg.spill.i55 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i49 = alloca i64, align 8
  %self.dbg.spill.i50 = alloca ptr, align 8
  %count.dbg.spill.i47 = alloca i64, align 8
  %self.dbg.spill.i48 = alloca ptr, align 8
  %count.dbg.spill.i45 = alloca i64, align 8
  %self.dbg.spill.i46 = alloca ptr, align 8
  %count.dbg.spill.i43 = alloca i64, align 8
  %self.dbg.spill.i44 = alloca ptr, align 8
  %count.dbg.spill.i41 = alloca i64, align 8
  %self.dbg.spill.i42 = alloca ptr, align 8
  %count.dbg.spill.i39 = alloca i64, align 8
  %self.dbg.spill.i40 = alloca ptr, align 8
  %count.dbg.spill.i37 = alloca i64, align 8
  %self.dbg.spill.i38 = alloca ptr, align 8
  %count.dbg.spill.i35 = alloca i64, align 8
  %self.dbg.spill.i36 = alloca ptr, align 8
  %count.dbg.spill.i33 = alloca i64, align 8
  %self.dbg.spill.i34 = alloca ptr, align 8
  %count.dbg.spill.i31 = alloca i64, align 8
  %self.dbg.spill.i32 = alloca ptr, align 8
  %count.dbg.spill.i29 = alloca i64, align 8
  %self.dbg.spill.i30 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca ptr, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca ptr, align 8
  %count.dbg.spill.i21 = alloca i64, align 8
  %self.dbg.spill.i22 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i8, align 1
  %1 = alloca i8, align 1
  %this.dbg.spill.i19 = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { ptr, i64 }, align 8
  %right_val.dbg.spill17 = alloca ptr, align 8
  %left_val.dbg.spill15 = alloca ptr, align 8
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %i.dbg.spill9 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %is_done.dbg.spill = alloca i8, align 1
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_259 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind4 = alloca i8, align 1
  %_247 = alloca i64, align 8
  %_245 = alloca { ptr, ptr }, align 8
  %_224 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind = alloca i8, align 1
  %_212 = alloca i64, align 8
  %_210 = alloca { ptr, ptr }, align 8
  %_189 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_148 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_145 = alloca { i64, i64 }, align 8
  %tmp = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_115 = alloca { ptr, ptr }, align 8
  %_105 = alloca { i64, i64 }, align 8
  %iter2 = alloca { i64, i64 }, align 8
  %_102 = alloca { i64, i64 }, align 8
  %elem1 = alloca ptr, align 8
  %_89 = alloca { ptr, ptr }, align 8
  %_80 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_77 = alloca { i64, i64 }, align 8
  %elem = alloca ptr, align 8
  %_51 = alloca i8, align 1
  %_28 = alloca i8, align 1
  %rem = alloca i64, align 8
  %offsets_r = alloca [128 x i8], align 1
  %end_r = alloca ptr, align 8
  %start_r = alloca ptr, align 8
  %block_r = alloca i64, align 8
  %r = alloca ptr, align 8
  %offsets_l = alloca [128 x i8], align 1
  %end_l = alloca ptr, align 8
  %start_l = alloca ptr, align 8
  %block_l = alloca i64, align 8
  %l = alloca ptr, align 8
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2739, metadata !DIExpression()), !dbg !2810
  store ptr %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2740, metadata !DIExpression()), !dbg !2811
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2741, metadata !DIExpression()), !dbg !2812
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2742, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.declare(metadata ptr %block_l, metadata !2744, metadata !DIExpression()), !dbg !2814
  call void @llvm.dbg.declare(metadata ptr %start_l, metadata !2746, metadata !DIExpression()), !dbg !2815
  call void @llvm.dbg.declare(metadata ptr %end_l, metadata !2748, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.declare(metadata ptr %offsets_l, metadata !2750, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2762, metadata !DIExpression()), !dbg !2818
  call void @llvm.dbg.declare(metadata ptr %block_r, metadata !2764, metadata !DIExpression()), !dbg !2819
  call void @llvm.dbg.declare(metadata ptr %start_r, metadata !2766, metadata !DIExpression()), !dbg !2820
  call void @llvm.dbg.declare(metadata ptr %end_r, metadata !2768, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.declare(metadata ptr %offsets_r, metadata !2770, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.declare(metadata ptr %rem, metadata !2774, metadata !DIExpression()), !dbg !2823
  call void @llvm.dbg.declare(metadata ptr %elem, metadata !2776, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2778, metadata !DIExpression()), !dbg !2825
  call void @llvm.dbg.declare(metadata ptr %elem1, metadata !2782, metadata !DIExpression()), !dbg !2826
  call void @llvm.dbg.declare(metadata ptr %iter2, metadata !2784, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2790, metadata !DIExpression()), !dbg !2828
  call void @llvm.dbg.declare(metadata ptr %iter3, metadata !2792, metadata !DIExpression()), !dbg !2829
  call void @llvm.dbg.declare(metadata ptr %kind, metadata !2800, metadata !DIExpression()), !dbg !2830
  call void @llvm.dbg.declare(metadata ptr %kind4, metadata !2807, metadata !DIExpression()), !dbg !2831
  store ptr %v.0, ptr %self.dbg.spill.i129, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i129, i32 0, i32 1
  store i64 %v.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i129, metadata !1927, metadata !DIExpression()), !dbg !2832
  store ptr %v.0, ptr %l, align 8, !dbg !2834
  store i64 128, ptr %block_l, align 8, !dbg !2835
  store i64 0, ptr %addr.dbg.spill.i.i125, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i125, metadata !2836, metadata !DIExpression()), !dbg !2841
; call core::ptr::metadata::from_raw_parts_mut
  %6 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3b69d035fab1880E(ptr null) #10, !dbg !2847
  store ptr %6, ptr %start_l, align 8, !dbg !2848
  store i64 0, ptr %addr.dbg.spill.i.i124, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i124, metadata !2836, metadata !DIExpression()), !dbg !2849
; call core::ptr::metadata::from_raw_parts_mut
  %7 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3b69d035fab1880E(ptr null) #10, !dbg !2852
  store ptr %7, ptr %end_l, align 8, !dbg !2853
  %8 = load i8, ptr %0, align 1, !dbg !2854
  %9 = getelementptr inbounds [128 x i8], ptr %offsets_l, i64 0, i64 0, !dbg !2859
  call void @llvm.memset.p0.i64(ptr align 1 %9, i8 %8, i64 128, i1 false), !dbg !2859
  %_11 = load ptr, ptr %l, align 8, !dbg !2860, !noundef !24
  store ptr %_11, ptr %self.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i36, metadata !265, metadata !DIExpression()), !dbg !2861
  store i64 %v.1, ptr %count.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i35, metadata !271, metadata !DIExpression()), !dbg !2863
  %10 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %v.1, !dbg !2864
  store ptr %10, ptr %r, align 8, !dbg !2860
  store i64 128, ptr %block_r, align 8, !dbg !2865
  store i64 0, ptr %addr.dbg.spill.i.i123, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i123, metadata !2836, metadata !DIExpression()), !dbg !2866
; call core::ptr::metadata::from_raw_parts_mut
  %11 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3b69d035fab1880E(ptr null) #10, !dbg !2869
  store ptr %11, ptr %start_r, align 8, !dbg !2870
  store i64 0, ptr %addr.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i, metadata !2836, metadata !DIExpression()), !dbg !2871
; call core::ptr::metadata::from_raw_parts_mut
  %12 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3b69d035fab1880E(ptr null) #10, !dbg !2874
  store ptr %12, ptr %end_r, align 8, !dbg !2875
  %13 = load i8, ptr %1, align 1, !dbg !2876
  %14 = getelementptr inbounds [128 x i8], ptr %offsets_r, i64 0, i64 0, !dbg !2878
  call void @llvm.memset.p0.i64(ptr align 1 %14, i8 %13, i64 128, i1 false), !dbg !2878
  br label %bb9, !dbg !2879

bb9:                                              ; preds = %bb103, %start
  %_21 = load ptr, ptr %l, align 8, !dbg !2880, !noundef !24
  %_22 = load ptr, ptr %r, align 8, !dbg !2881, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_20 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E(ptr %_21, ptr %_22) #10, !dbg !2882
  %15 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 128), !dbg !2883
  %_24.0 = extractvalue { i64, i1 } %15, 0, !dbg !2883
  %_24.1 = extractvalue { i64, i1 } %15, 1, !dbg !2883
  %16 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !2883
  br i1 %16, label %panic, label %bb11, !dbg !2883

bb11:                                             ; preds = %bb9
  %is_done = icmp ule i64 %_20, %_24.0, !dbg !2882
  %17 = zext i1 %is_done to i8, !dbg !2882
  store i8 %17, ptr %is_done.dbg.spill, align 1, !dbg !2882
  call void @llvm.dbg.declare(metadata ptr %is_done.dbg.spill, metadata !2772, metadata !DIExpression()), !dbg !2884
  br i1 %is_done, label %bb12, label %bb37, !dbg !2885

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_fe4e881dfa6c70f91499a9b97cada070) #11, !dbg !2883
  unreachable, !dbg !2883

bb37:                                             ; preds = %bb35, %bb32, %bb11
  %_69 = load ptr, ptr %start_l, align 8, !dbg !2886, !noundef !24
  %_70 = load ptr, ptr %end_l, align 8, !dbg !2887, !noundef !24
  %_68 = icmp eq ptr %_69, %_70, !dbg !2886
  br i1 %_68, label %bb38, label %bb48, !dbg !2886

bb12:                                             ; preds = %bb11
  %_26 = load ptr, ptr %l, align 8, !dbg !2888, !noundef !24
  %_27 = load ptr, ptr %r, align 8, !dbg !2889, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %18 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E(ptr %_26, ptr %_27) #10, !dbg !2890
  store i64 %18, ptr %rem, align 8, !dbg !2890
  %_30 = load ptr, ptr %start_l, align 8, !dbg !2891, !noundef !24
  %_31 = load ptr, ptr %end_l, align 8, !dbg !2892, !noundef !24
  %_29 = icmp ult ptr %_30, %_31, !dbg !2891
  br i1 %_29, label %bb14, label %bb15, !dbg !2891

bb15:                                             ; preds = %bb12
  %_33 = load ptr, ptr %start_r, align 8, !dbg !2893, !noundef !24
  %_34 = load ptr, ptr %end_r, align 8, !dbg !2894, !noundef !24
  %_32 = icmp ult ptr %_33, %_34, !dbg !2893
  %19 = zext i1 %_32 to i8, !dbg !2891
  store i8 %19, ptr %_28, align 1, !dbg !2891
  br label %bb16, !dbg !2891

bb14:                                             ; preds = %bb12
  store i8 1, ptr %_28, align 1, !dbg !2891
  br label %bb16, !dbg !2891

bb16:                                             ; preds = %bb15, %bb14
  %20 = load i8, ptr %_28, align 1, !dbg !2891, !range !231, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !2891
  br i1 %21, label %bb17, label %bb19, !dbg !2891

bb19:                                             ; preds = %bb18, %bb16
  %_37 = load ptr, ptr %start_l, align 8, !dbg !2895, !noundef !24
  %_38 = load ptr, ptr %end_l, align 8, !dbg !2896, !noundef !24
  %_36 = icmp ult ptr %_37, %_38, !dbg !2895
  br i1 %_36, label %bb20, label %bb21, !dbg !2895

bb17:                                             ; preds = %bb16
  %22 = load i64, ptr %rem, align 8, !dbg !2897, !noundef !24
  %_35.0 = sub i64 %22, 128, !dbg !2897
  %_35.1 = icmp ult i64 %22, 128, !dbg !2897
  %23 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !2897
  br i1 %23, label %panic5, label %bb18, !dbg !2897

bb18:                                             ; preds = %bb17
  store i64 %_35.0, ptr %rem, align 8, !dbg !2897
  br label %bb19, !dbg !2898

panic5:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2417cbaa5b767dc07fcb426311fbedcd) #11, !dbg !2897
  unreachable, !dbg !2897

bb21:                                             ; preds = %bb19
  %_41 = load ptr, ptr %start_r, align 8, !dbg !2899, !noundef !24
  %_42 = load ptr, ptr %end_r, align 8, !dbg !2900, !noundef !24
  %_40 = icmp ult ptr %_41, %_42, !dbg !2899
  br i1 %_40, label %bb22, label %bb23, !dbg !2899

bb20:                                             ; preds = %bb19
  %_39 = load i64, ptr %rem, align 8, !dbg !2901, !noundef !24
  store i64 %_39, ptr %block_r, align 8, !dbg !2902
  br label %bb26, !dbg !2903

bb26:                                             ; preds = %bb25, %bb22, %bb20
  br i1 true, label %bb27, label %bb32, !dbg !2904

bb23:                                             ; preds = %bb21
  %_44 = load i64, ptr %rem, align 8, !dbg !2905, !noundef !24
  %24 = udiv i64 %_44, 2, !dbg !2906
  store i64 %24, ptr %block_l, align 8, !dbg !2906
  %_46 = load i64, ptr %rem, align 8, !dbg !2907, !noundef !24
  %_47 = load i64, ptr %block_l, align 8, !dbg !2908, !noundef !24
  %_48.0 = sub i64 %_46, %_47, !dbg !2907
  %_48.1 = icmp ult i64 %_46, %_47, !dbg !2907
  %25 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false), !dbg !2907
  br i1 %25, label %panic6, label %bb25, !dbg !2907

bb22:                                             ; preds = %bb21
  %_43 = load i64, ptr %rem, align 8, !dbg !2909, !noundef !24
  store i64 %_43, ptr %block_l, align 8, !dbg !2910
  br label %bb26, !dbg !2911

bb25:                                             ; preds = %bb23
  store i64 %_48.0, ptr %block_r, align 8, !dbg !2912
  br label %bb26, !dbg !2911

panic6:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_7d4914bfaafcfa4692cc10dc5496d4e2) #11, !dbg !2907
  unreachable, !dbg !2907

bb32:                                             ; preds = %bb30, %bb26
  br i1 true, label %bb33, label %bb37, !dbg !2913

bb27:                                             ; preds = %bb26
  %_53 = load i64, ptr %block_l, align 8, !dbg !2914, !noundef !24
  %_52 = icmp ule i64 %_53, 128, !dbg !2914
  br i1 %_52, label %bb29, label %bb28, !dbg !2914

bb28:                                             ; preds = %bb27
  store i8 0, ptr %_51, align 1, !dbg !2914
  br label %bb30, !dbg !2914

bb29:                                             ; preds = %bb27
  %_55 = load i64, ptr %block_r, align 8, !dbg !2915, !noundef !24
  %_54 = icmp ule i64 %_55, 128, !dbg !2915
  %26 = zext i1 %_54 to i8, !dbg !2914
  store i8 %26, ptr %_51, align 1, !dbg !2914
  br label %bb30, !dbg !2914

bb30:                                             ; preds = %bb28, %bb29
  %27 = load i8, ptr %_51, align 1, !dbg !2904, !range !231, !noundef !24
  %28 = trunc i8 %27 to i1, !dbg !2904
  %_50 = xor i1 %28, true, !dbg !2904
  br i1 %_50, label %bb31, label %bb32, !dbg !2904

bb31:                                             ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_8221bdf38a3766feb9723f333c95dc9e, i64 54, ptr align 8 @alloc_d98b9ce84085f5d91faa526ef2b40520) #11, !dbg !2904
  unreachable, !dbg !2904

bb33:                                             ; preds = %bb32
  %_61 = load ptr, ptr %l, align 8, !dbg !2916, !noundef !24
  %_62 = load ptr, ptr %r, align 8, !dbg !2917, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_60 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E(ptr %_61, ptr %_62) #10, !dbg !2918
  %_64 = load i64, ptr %block_l, align 8, !dbg !2919, !noundef !24
  %_65 = load i64, ptr %block_r, align 8, !dbg !2920, !noundef !24
  %29 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_64, i64 %_65), !dbg !2919
  %_66.0 = extractvalue { i64, i1 } %29, 0, !dbg !2919
  %_66.1 = extractvalue { i64, i1 } %29, 1, !dbg !2919
  %30 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !2919
  br i1 %30, label %panic7, label %bb35, !dbg !2919

bb35:                                             ; preds = %bb33
  %_59 = icmp eq i64 %_60, %_66.0, !dbg !2918
  %_58 = xor i1 %_59, true, !dbg !2913
  br i1 %_58, label %bb36, label %bb37, !dbg !2913

panic7:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_5d32d2daaec9cf0d402f2dc37af0ea6f) #11, !dbg !2919
  unreachable, !dbg !2919

bb36:                                             ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_a3f9d5911d83d2dfd6ee66814bbe6049, i64 50, ptr align 8 @alloc_ea197cb372011b0fee90d7558b246bfb) #11, !dbg !2913
  unreachable, !dbg !2913

bb48:                                             ; preds = %bb41, %bb37
  %_94 = load ptr, ptr %start_r, align 8, !dbg !2921, !noundef !24
  %_95 = load ptr, ptr %end_r, align 8, !dbg !2922, !noundef !24
  %_93 = icmp eq ptr %_94, %_95, !dbg !2921
  br i1 %_93, label %bb49, label %bb58, !dbg !2921

bb38:                                             ; preds = %bb37
  store ptr %offsets_l, ptr %this.dbg.spill.i19, align 8
  %31 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i19, i32 0, i32 1
  store i64 128, ptr %31, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i19, metadata !2923, metadata !DIExpression()), !dbg !2933
  store ptr %offsets_l, ptr %self.dbg.spill.i130, align 8
  %32 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i130, i32 0, i32 1
  store i64 128, ptr %32, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i130, metadata !2935, metadata !DIExpression()), !dbg !2943
  store ptr %offsets_l, ptr %start_l, align 8, !dbg !2945
  %_74 = load ptr, ptr %start_l, align 8, !dbg !2946, !noundef !24
  store ptr %_74, ptr %end_l, align 8, !dbg !2947
  %33 = load ptr, ptr %l, align 8, !dbg !2948, !noundef !24
  store ptr %33, ptr %elem, align 8, !dbg !2948
  %_78 = load i64, ptr %block_l, align 8, !dbg !2949, !noundef !24
  store i64 0, ptr %_77, align 8, !dbg !2950
  %34 = getelementptr inbounds { i64, i64 }, ptr %_77, i32 0, i32 1, !dbg !2950
  store i64 %_78, ptr %34, align 8, !dbg !2950
  %35 = getelementptr inbounds { i64, i64 }, ptr %_77, i32 0, i32 0, !dbg !2950
  %36 = load i64, ptr %35, align 8, !dbg !2950, !noundef !24
  %37 = getelementptr inbounds { i64, i64 }, ptr %_77, i32 0, i32 1, !dbg !2950
  %38 = load i64, ptr %37, align 8, !dbg !2950, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %39 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbd4e891038e99fd5E"(i64 %36, i64 %38) #10, !dbg !2950
  %_76.0 = extractvalue { i64, i64 } %39, 0, !dbg !2950
  %_76.1 = extractvalue { i64, i64 } %39, 1, !dbg !2950
  %40 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2950
  store i64 %_76.0, ptr %40, align 8, !dbg !2950
  %41 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2950
  store i64 %_76.1, ptr %41, align 8, !dbg !2950
  br label %bb41, !dbg !2951

bb41:                                             ; preds = %bb43, %bb38
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %42 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hcbda1fddb935b88aE"(ptr align 8 %iter) #10, !dbg !2825
  store { i64, i64 } %42, ptr %_80, align 8, !dbg !2825
  %_82 = load i64, ptr %_80, align 8, !dbg !2825, !range !1037, !noundef !24
  %43 = icmp eq i64 %_82, 0, !dbg !2825
  br i1 %43, label %bb48, label %bb43, !dbg !2825

bb43:                                             ; preds = %bb41
  %44 = getelementptr inbounds { i64, i64 }, ptr %_80, i32 0, i32 1, !dbg !2952
  %i = load i64, ptr %44, align 8, !dbg !2952, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2952
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2780, metadata !DIExpression()), !dbg !2953
  %45 = load ptr, ptr %end_l, align 8, !dbg !2954, !noundef !24
  %46 = trunc i64 %i to i8, !dbg !2954
  store i8 %46, ptr %45, align 1, !dbg !2954
  %_85 = load ptr, ptr %end_l, align 8, !dbg !2955, !noundef !24
  %_90 = load ptr, ptr %elem, align 8, !dbg !2956, !noundef !24
  store ptr %_90, ptr %_89, align 8, !dbg !2957
  %47 = getelementptr inbounds { ptr, ptr }, ptr %_89, i32 0, i32 1, !dbg !2957
  store ptr %pivot, ptr %47, align 8, !dbg !2957
  %48 = getelementptr inbounds { ptr, ptr }, ptr %_89, i32 0, i32 0, !dbg !2957
  %49 = load ptr, ptr %48, align 8, !dbg !2957, !nonnull !24, !align !505, !noundef !24
  %50 = getelementptr inbounds { ptr, ptr }, ptr %_89, i32 0, i32 1, !dbg !2957
  %51 = load ptr, ptr %50, align 8, !dbg !2957, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_88 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %49, ptr align 8 %51) #10, !dbg !2957
  %_87 = xor i1 %_88, true, !dbg !2958
  %_86 = zext i1 %_87 to i64, !dbg !2958
  store ptr %_85, ptr %self.dbg.spill.i48, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i48, metadata !2959, metadata !DIExpression()), !dbg !2965
  store i64 %_86, ptr %count.dbg.spill.i47, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i47, metadata !2964, metadata !DIExpression()), !dbg !2967
  %52 = getelementptr inbounds i8, ptr %_85, i64 %_86, !dbg !2968
  store ptr %52, ptr %end_l, align 8, !dbg !2969
  %_92 = load ptr, ptr %elem, align 8, !dbg !2970, !noundef !24
  store ptr %_92, ptr %self.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i34, metadata !265, metadata !DIExpression()), !dbg !2971
  store i64 1, ptr %count.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i33, metadata !271, metadata !DIExpression()), !dbg !2973
  %53 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_92, i64 1, !dbg !2974
  store ptr %53, ptr %elem, align 8, !dbg !2975
  br label %bb41, !dbg !2951

bb58:                                             ; preds = %bb52, %bb48
  %_119 = load ptr, ptr %start_l, align 8, !dbg !2976, !noundef !24
  %_120 = load ptr, ptr %end_l, align 8, !dbg !2977, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_118 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h2ada822d627da173E(ptr %_119, ptr %_120) #10, !dbg !2978
  %_122 = load ptr, ptr %start_r, align 8, !dbg !2979, !noundef !24
  %_123 = load ptr, ptr %end_r, align 8, !dbg !2980, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_121 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h2ada822d627da173E(ptr %_122, ptr %_123) #10, !dbg !2981
; call core::cmp::min
  %count = call i64 @_ZN4core3cmp3min17h04f45068448e0381E(i64 %_118, i64 %_121) #10, !dbg !2982
  store i64 %count, ptr %count.dbg.spill, align 8, !dbg !2982
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !2788, metadata !DIExpression()), !dbg !2983
  %_124 = icmp ugt i64 %count, 0, !dbg !2984
  br i1 %_124, label %bb62, label %bb97, !dbg !2984

bb49:                                             ; preds = %bb48
  store ptr %offsets_r, ptr %this.dbg.spill.i, align 8
  %54 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 128, ptr %54, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !2923, metadata !DIExpression()), !dbg !2985
  store ptr %offsets_r, ptr %self.dbg.spill.i131, align 8
  %55 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i131, i32 0, i32 1
  store i64 128, ptr %55, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i131, metadata !2935, metadata !DIExpression()), !dbg !2987
  store ptr %offsets_r, ptr %start_r, align 8, !dbg !2989
  %_99 = load ptr, ptr %start_r, align 8, !dbg !2990, !noundef !24
  store ptr %_99, ptr %end_r, align 8, !dbg !2991
  %56 = load ptr, ptr %r, align 8, !dbg !2992, !noundef !24
  store ptr %56, ptr %elem1, align 8, !dbg !2992
  %_103 = load i64, ptr %block_r, align 8, !dbg !2993, !noundef !24
  store i64 0, ptr %_102, align 8, !dbg !2994
  %57 = getelementptr inbounds { i64, i64 }, ptr %_102, i32 0, i32 1, !dbg !2994
  store i64 %_103, ptr %57, align 8, !dbg !2994
  %58 = getelementptr inbounds { i64, i64 }, ptr %_102, i32 0, i32 0, !dbg !2994
  %59 = load i64, ptr %58, align 8, !dbg !2994, !noundef !24
  %60 = getelementptr inbounds { i64, i64 }, ptr %_102, i32 0, i32 1, !dbg !2994
  %61 = load i64, ptr %60, align 8, !dbg !2994, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %62 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbd4e891038e99fd5E"(i64 %59, i64 %61) #10, !dbg !2994
  %_101.0 = extractvalue { i64, i64 } %62, 0, !dbg !2994
  %_101.1 = extractvalue { i64, i64 } %62, 1, !dbg !2994
  %63 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 0, !dbg !2994
  store i64 %_101.0, ptr %63, align 8, !dbg !2994
  %64 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 1, !dbg !2994
  store i64 %_101.1, ptr %64, align 8, !dbg !2994
  br label %bb52, !dbg !2995

bb52:                                             ; preds = %bb54, %bb49
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %65 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hcbda1fddb935b88aE"(ptr align 8 %iter2) #10, !dbg !2827
  store { i64, i64 } %65, ptr %_105, align 8, !dbg !2827
  %_107 = load i64, ptr %_105, align 8, !dbg !2827, !range !1037, !noundef !24
  %66 = icmp eq i64 %_107, 0, !dbg !2827
  br i1 %66, label %bb58, label %bb54, !dbg !2827

bb54:                                             ; preds = %bb52
  %67 = getelementptr inbounds { i64, i64 }, ptr %_105, i32 0, i32 1, !dbg !2996
  %i8 = load i64, ptr %67, align 8, !dbg !2996, !noundef !24
  store i64 %i8, ptr %i.dbg.spill9, align 8, !dbg !2996
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill9, metadata !2786, metadata !DIExpression()), !dbg !2997
  %_110 = load ptr, ptr %elem1, align 8, !dbg !2998, !noundef !24
  store ptr %_110, ptr %self.dbg.spill.i90, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i90, metadata !2063, metadata !DIExpression()), !dbg !2999
  store i64 1, ptr %count.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i89, metadata !2066, metadata !DIExpression()), !dbg !3001
  store i64 1, ptr %self.dbg.spill.i.i88, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i88, metadata !2070, metadata !DIExpression()), !dbg !3002
  store i64 0, ptr %self.dbg.spill.i1.i87, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i87, metadata !2080, metadata !DIExpression()), !dbg !3004
  store i64 1, ptr %rhs.dbg.spill.i.i86, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i86, metadata !2085, metadata !DIExpression()), !dbg !3006
  store ptr %_110, ptr %self.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i102, metadata !2090, metadata !DIExpression()), !dbg !3007
  store i64 -1, ptr %count.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i101, metadata !2095, metadata !DIExpression()), !dbg !3009
  %68 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_110, i64 -1, !dbg !3010
  store ptr %68, ptr %elem1, align 8, !dbg !3011
  %69 = load ptr, ptr %end_r, align 8, !dbg !3012, !noundef !24
  %70 = trunc i64 %i8 to i8, !dbg !3012
  store i8 %70, ptr %69, align 1, !dbg !3012
  %_112 = load ptr, ptr %end_r, align 8, !dbg !3013, !noundef !24
  %_116 = load ptr, ptr %elem1, align 8, !dbg !3014, !noundef !24
  store ptr %_116, ptr %_115, align 8, !dbg !3015
  %71 = getelementptr inbounds { ptr, ptr }, ptr %_115, i32 0, i32 1, !dbg !3015
  store ptr %pivot, ptr %71, align 8, !dbg !3015
  %72 = getelementptr inbounds { ptr, ptr }, ptr %_115, i32 0, i32 0, !dbg !3015
  %73 = load ptr, ptr %72, align 8, !dbg !3015, !nonnull !24, !align !505, !noundef !24
  %74 = getelementptr inbounds { ptr, ptr }, ptr %_115, i32 0, i32 1, !dbg !3015
  %75 = load ptr, ptr %74, align 8, !dbg !3015, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_114 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %73, ptr align 8 %75) #10, !dbg !3015
  %_113 = zext i1 %_114 to i64, !dbg !3015
  store ptr %_112, ptr %self.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i46, metadata !2959, metadata !DIExpression()), !dbg !3016
  store i64 %_113, ptr %count.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i45, metadata !2964, metadata !DIExpression()), !dbg !3018
  %76 = getelementptr inbounds i8, ptr %_112, i64 %_113, !dbg !3019
  store ptr %76, ptr %end_r, align 8, !dbg !3020
  br label %bb52, !dbg !2995

bb97:                                             ; preds = %bb91, %bb58
  %_195 = load ptr, ptr %start_l, align 8, !dbg !3021, !noundef !24
  %_196 = load ptr, ptr %end_l, align 8, !dbg !3022, !noundef !24
  %_194 = icmp eq ptr %_195, %_196, !dbg !3021
  br i1 %_194, label %bb98, label %bb100, !dbg !3021

bb62:                                             ; preds = %bb58
  %_129 = load ptr, ptr %l, align 8, !dbg !3023, !noundef !24
  %77 = load ptr, ptr %start_l, align 8, !dbg !3023, !noundef !24
  %_131 = load i8, ptr %77, align 1, !dbg !3023, !noundef !24
  store i8 %_131, ptr %small.dbg.spill.i140, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i140, metadata !3024, metadata !DIExpression()), !dbg !3033
  %78 = zext i8 %_131 to i64, !dbg !3035
  store ptr %_129, ptr %self.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i32, metadata !265, metadata !DIExpression()), !dbg !3036
  store i64 %78, ptr %count.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i31, metadata !271, metadata !DIExpression()), !dbg !3038
  %79 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_129, i64 %78, !dbg !3039
; call core::ptr::read
  call void @_ZN4core3ptr4read17hd09643a295aa6f4fE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %tmp, ptr %79) #10, !dbg !3040
  %_135 = load ptr, ptr %r, align 8, !dbg !3041, !noundef !24
  %80 = load ptr, ptr %start_r, align 8, !dbg !3041, !noundef !24
  %_138 = load i8, ptr %80, align 1, !dbg !3041, !noundef !24
  store i8 %_138, ptr %small.dbg.spill.i139, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i139, metadata !3024, metadata !DIExpression()), !dbg !3042
  %81 = zext i8 %_138 to i64, !dbg !3044
  %82 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %81, i64 1), !dbg !3041
  %_139.0 = extractvalue { i64, i1 } %82, 0, !dbg !3041
  %_139.1 = extractvalue { i64, i1 } %82, 1, !dbg !3041
  %83 = call i1 @llvm.expect.i1(i1 %_139.1, i1 false), !dbg !3041
  br i1 %83, label %panic10, label %bb67, !dbg !3041

bb67:                                             ; preds = %bb62
  store ptr %_135, ptr %self.dbg.spill.i85, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i85, metadata !2063, metadata !DIExpression()), !dbg !3045
  store i64 %_139.0, ptr %count.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i84, metadata !2066, metadata !DIExpression()), !dbg !3047
  store i64 %_139.0, ptr %self.dbg.spill.i.i83, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i83, metadata !2070, metadata !DIExpression()), !dbg !3048
  store i64 0, ptr %self.dbg.spill.i1.i82, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i82, metadata !2080, metadata !DIExpression()), !dbg !3050
  store i64 %_139.0, ptr %rhs.dbg.spill.i.i81, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i81, metadata !2085, metadata !DIExpression()), !dbg !3052
  %84 = sub i64 0, %_139.0, !dbg !3053
  store ptr %_135, ptr %self.dbg.spill.i104, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i104, metadata !2090, metadata !DIExpression()), !dbg !3054
  store i64 %84, ptr %count.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i103, metadata !2095, metadata !DIExpression()), !dbg !3056
  %85 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_135, i64 %84, !dbg !3057
  %_141 = load ptr, ptr %l, align 8, !dbg !3058, !noundef !24
  %86 = load ptr, ptr %start_l, align 8, !dbg !3058, !noundef !24
  %_143 = load i8, ptr %86, align 1, !dbg !3058, !noundef !24
  store i8 %_143, ptr %small.dbg.spill.i138, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i138, metadata !3024, metadata !DIExpression()), !dbg !3059
  %87 = zext i8 %_143 to i64, !dbg !3061
  store ptr %_141, ptr %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i30, metadata !265, metadata !DIExpression()), !dbg !3062
  store i64 %87, ptr %count.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i29, metadata !271, metadata !DIExpression()), !dbg !3064
  %88 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_141, i64 %87, !dbg !3065
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %85, ptr %88, i64 1) #10, !dbg !3066
  store i64 1, ptr %_145, align 8, !dbg !3067
  %89 = getelementptr inbounds { i64, i64 }, ptr %_145, i32 0, i32 1, !dbg !3067
  store i64 %count, ptr %89, align 8, !dbg !3067
  %90 = getelementptr inbounds { i64, i64 }, ptr %_145, i32 0, i32 0, !dbg !3067
  %91 = load i64, ptr %90, align 8, !dbg !3067, !noundef !24
  %92 = getelementptr inbounds { i64, i64 }, ptr %_145, i32 0, i32 1, !dbg !3067
  %93 = load i64, ptr %92, align 8, !dbg !3067, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %94 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbd4e891038e99fd5E"(i64 %91, i64 %93) #10, !dbg !3067
  %_144.0 = extractvalue { i64, i64 } %94, 0, !dbg !3067
  %_144.1 = extractvalue { i64, i64 } %94, 1, !dbg !3067
  %95 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 0, !dbg !3067
  store i64 %_144.0, ptr %95, align 8, !dbg !3067
  %96 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 1, !dbg !3067
  store i64 %_144.1, ptr %96, align 8, !dbg !3067
  br label %bb73, !dbg !3068

panic10:                                          ; preds = %bb62
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0a48b3a7e93a3fb66a7841c604466c03) #11, !dbg !3041
  unreachable, !dbg !3041

bb73:                                             ; preds = %bb86, %bb67
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %97 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hcbda1fddb935b88aE"(ptr align 8 %iter3) #10, !dbg !2829
  store { i64, i64 } %97, ptr %_148, align 8, !dbg !2829
  %_150 = load i64, ptr %_148, align 8, !dbg !2829, !range !1037, !noundef !24
  %98 = icmp eq i64 %_150, 0, !dbg !2829
  br i1 %98, label %bb76, label %bb75, !dbg !2829

bb76:                                             ; preds = %bb73
  %_183 = load ptr, ptr %r, align 8, !dbg !3069, !noundef !24
  %99 = load ptr, ptr %start_r, align 8, !dbg !3069, !noundef !24
  %_186 = load i8, ptr %99, align 1, !dbg !3069, !noundef !24
  store i8 %_186, ptr %small.dbg.spill.i133, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i133, metadata !3024, metadata !DIExpression()), !dbg !3070
  %100 = zext i8 %_186 to i64, !dbg !3072
  %101 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %100, i64 1), !dbg !3069
  %_187.0 = extractvalue { i64, i1 } %101, 0, !dbg !3069
  %_187.1 = extractvalue { i64, i1 } %101, 1, !dbg !3069
  %102 = call i1 @llvm.expect.i1(i1 %_187.1, i1 false), !dbg !3069
  br i1 %102, label %panic13, label %bb91, !dbg !3069

bb75:                                             ; preds = %bb73
  %_152 = load ptr, ptr %start_l, align 8, !dbg !3073, !noundef !24
  store ptr %_152, ptr %self.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i44, metadata !2959, metadata !DIExpression()), !dbg !3074
  store i64 1, ptr %count.dbg.spill.i43, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i43, metadata !2964, metadata !DIExpression()), !dbg !3076
  %103 = getelementptr inbounds i8, ptr %_152, i64 1, !dbg !3077
  store ptr %103, ptr %start_l, align 8, !dbg !3078
  %_156 = load ptr, ptr %l, align 8, !dbg !3079, !noundef !24
  %104 = load ptr, ptr %start_l, align 8, !dbg !3079, !noundef !24
  %_158 = load i8, ptr %104, align 1, !dbg !3079, !noundef !24
  store i8 %_158, ptr %small.dbg.spill.i137, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i137, metadata !3024, metadata !DIExpression()), !dbg !3080
  %105 = zext i8 %_158 to i64, !dbg !3082
  store ptr %_156, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !265, metadata !DIExpression()), !dbg !3083
  store i64 %105, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !271, metadata !DIExpression()), !dbg !3085
  %106 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_156, i64 %105, !dbg !3086
  %_160 = load ptr, ptr %r, align 8, !dbg !3087, !noundef !24
  %107 = load ptr, ptr %start_r, align 8, !dbg !3087, !noundef !24
  %_163 = load i8, ptr %107, align 1, !dbg !3087, !noundef !24
  store i8 %_163, ptr %small.dbg.spill.i136, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i136, metadata !3024, metadata !DIExpression()), !dbg !3088
  %108 = zext i8 %_163 to i64, !dbg !3090
  %109 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %108, i64 1), !dbg !3087
  %_164.0 = extractvalue { i64, i1 } %109, 0, !dbg !3087
  %_164.1 = extractvalue { i64, i1 } %109, 1, !dbg !3087
  %110 = call i1 @llvm.expect.i1(i1 %_164.1, i1 false), !dbg !3087
  br i1 %110, label %panic11, label %bb81, !dbg !3087

bb44:                                             ; No predecessors!
  unreachable, !dbg !2825

bb81:                                             ; preds = %bb75
  store ptr %_160, ptr %self.dbg.spill.i80, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i80, metadata !2063, metadata !DIExpression()), !dbg !3091
  store i64 %_164.0, ptr %count.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i79, metadata !2066, metadata !DIExpression()), !dbg !3093
  store i64 %_164.0, ptr %self.dbg.spill.i.i78, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i78, metadata !2070, metadata !DIExpression()), !dbg !3094
  store i64 0, ptr %self.dbg.spill.i1.i77, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i77, metadata !2080, metadata !DIExpression()), !dbg !3096
  store i64 %_164.0, ptr %rhs.dbg.spill.i.i76, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i76, metadata !2085, metadata !DIExpression()), !dbg !3098
  %111 = sub i64 0, %_164.0, !dbg !3099
  store ptr %_160, ptr %self.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i106, metadata !2090, metadata !DIExpression()), !dbg !3100
  store i64 %111, ptr %count.dbg.spill.i105, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i105, metadata !2095, metadata !DIExpression()), !dbg !3102
  %112 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_160, i64 %111, !dbg !3103
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %106, ptr %112, i64 1) #10, !dbg !3104
  %_166 = load ptr, ptr %start_r, align 8, !dbg !3105, !noundef !24
  store ptr %_166, ptr %self.dbg.spill.i42, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i42, metadata !2959, metadata !DIExpression()), !dbg !3106
  store i64 1, ptr %count.dbg.spill.i41, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i41, metadata !2964, metadata !DIExpression()), !dbg !3108
  %113 = getelementptr inbounds i8, ptr %_166, i64 1, !dbg !3109
  store ptr %113, ptr %start_r, align 8, !dbg !3110
  %_170 = load ptr, ptr %r, align 8, !dbg !3111, !noundef !24
  %114 = load ptr, ptr %start_r, align 8, !dbg !3111, !noundef !24
  %_173 = load i8, ptr %114, align 1, !dbg !3111, !noundef !24
  store i8 %_173, ptr %small.dbg.spill.i135, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i135, metadata !3024, metadata !DIExpression()), !dbg !3112
  %115 = zext i8 %_173 to i64, !dbg !3114
  %116 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %115, i64 1), !dbg !3111
  %_174.0 = extractvalue { i64, i1 } %116, 0, !dbg !3111
  %_174.1 = extractvalue { i64, i1 } %116, 1, !dbg !3111
  %117 = call i1 @llvm.expect.i1(i1 %_174.1, i1 false), !dbg !3111
  br i1 %117, label %panic12, label %bb86, !dbg !3111

panic11:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_255f6db4d0c02746fb4a9b785ea6e516) #11, !dbg !3087
  unreachable, !dbg !3087

bb86:                                             ; preds = %bb81
  store ptr %_170, ptr %self.dbg.spill.i75, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i75, metadata !2063, metadata !DIExpression()), !dbg !3115
  store i64 %_174.0, ptr %count.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i74, metadata !2066, metadata !DIExpression()), !dbg !3117
  store i64 %_174.0, ptr %self.dbg.spill.i.i73, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i73, metadata !2070, metadata !DIExpression()), !dbg !3118
  store i64 0, ptr %self.dbg.spill.i1.i72, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i72, metadata !2080, metadata !DIExpression()), !dbg !3120
  store i64 %_174.0, ptr %rhs.dbg.spill.i.i71, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i71, metadata !2085, metadata !DIExpression()), !dbg !3122
  %118 = sub i64 0, %_174.0, !dbg !3123
  store ptr %_170, ptr %self.dbg.spill.i108, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i108, metadata !2090, metadata !DIExpression()), !dbg !3124
  store i64 %118, ptr %count.dbg.spill.i107, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i107, metadata !2095, metadata !DIExpression()), !dbg !3126
  %119 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_170, i64 %118, !dbg !3127
  %_176 = load ptr, ptr %l, align 8, !dbg !3128, !noundef !24
  %120 = load ptr, ptr %start_l, align 8, !dbg !3128, !noundef !24
  %_178 = load i8, ptr %120, align 1, !dbg !3128, !noundef !24
  store i8 %_178, ptr %small.dbg.spill.i134, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i134, metadata !3024, metadata !DIExpression()), !dbg !3129
  %121 = zext i8 %_178 to i64, !dbg !3131
  store ptr %_176, ptr %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i26, metadata !265, metadata !DIExpression()), !dbg !3132
  store i64 %121, ptr %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i25, metadata !271, metadata !DIExpression()), !dbg !3134
  %122 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_176, i64 %121, !dbg !3135
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %119, ptr %122, i64 1) #10, !dbg !3136
  br label %bb73, !dbg !3136

panic12:                                          ; preds = %bb81
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_3fa281490ed5627b0d5acda868d81af0) #11, !dbg !3111
  unreachable, !dbg !3111

bb91:                                             ; preds = %bb76
  store ptr %_183, ptr %self.dbg.spill.i70, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i70, metadata !2063, metadata !DIExpression()), !dbg !3137
  store i64 %_187.0, ptr %count.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i69, metadata !2066, metadata !DIExpression()), !dbg !3139
  store i64 %_187.0, ptr %self.dbg.spill.i.i68, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i68, metadata !2070, metadata !DIExpression()), !dbg !3140
  store i64 0, ptr %self.dbg.spill.i1.i67, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i67, metadata !2080, metadata !DIExpression()), !dbg !3142
  store i64 %_187.0, ptr %rhs.dbg.spill.i.i66, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i66, metadata !2085, metadata !DIExpression()), !dbg !3144
  %123 = sub i64 0, %_187.0, !dbg !3145
  store ptr %_183, ptr %self.dbg.spill.i110, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i110, metadata !2090, metadata !DIExpression()), !dbg !3146
  store i64 %123, ptr %count.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i109, metadata !2095, metadata !DIExpression()), !dbg !3148
  %124 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_183, i64 %123, !dbg !3149
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %tmp, ptr %124, i64 1) #10, !dbg !3150
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_189, ptr align 8 %tmp, i64 24, i1 false), !dbg !3151
; call core::mem::forget
  call void @_ZN4core3mem6forget17h252116982950a14dE(ptr %_189) #10, !dbg !3152
  %_191 = load ptr, ptr %start_l, align 8, !dbg !3153, !noundef !24
  store ptr %_191, ptr %self.dbg.spill.i40, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i40, metadata !2959, metadata !DIExpression()), !dbg !3154
  store i64 1, ptr %count.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i39, metadata !2964, metadata !DIExpression()), !dbg !3156
  %125 = getelementptr inbounds i8, ptr %_191, i64 1, !dbg !3157
  store ptr %125, ptr %start_l, align 8, !dbg !3158
  %_193 = load ptr, ptr %start_r, align 8, !dbg !3159, !noundef !24
  store ptr %_193, ptr %self.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i38, metadata !2959, metadata !DIExpression()), !dbg !3160
  store i64 1, ptr %count.dbg.spill.i37, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i37, metadata !2964, metadata !DIExpression()), !dbg !3162
  %126 = getelementptr inbounds i8, ptr %_193, i64 1, !dbg !3163
  store ptr %126, ptr %start_r, align 8, !dbg !3164
  br label %bb97, !dbg !3165

panic13:                                          ; preds = %bb76
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_2107e90e8c7dda0adfd21e59e3b7e9ee) #11, !dbg !3069
  unreachable, !dbg !3069

bb100:                                            ; preds = %bb98, %bb97
  %_201 = load ptr, ptr %start_r, align 8, !dbg !3166, !noundef !24
  %_202 = load ptr, ptr %end_r, align 8, !dbg !3167, !noundef !24
  %_200 = icmp eq ptr %_201, %_202, !dbg !3166
  br i1 %_200, label %bb101, label %bb103, !dbg !3166

bb98:                                             ; preds = %bb97
  %_198 = load ptr, ptr %l, align 8, !dbg !3168, !noundef !24
  %_199 = load i64, ptr %block_l, align 8, !dbg !3169, !noundef !24
  store ptr %_198, ptr %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i24, metadata !265, metadata !DIExpression()), !dbg !3170
  store i64 %_199, ptr %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i23, metadata !271, metadata !DIExpression()), !dbg !3172
  %127 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_198, i64 %_199, !dbg !3173
  store ptr %127, ptr %l, align 8, !dbg !3174
  br label %bb100, !dbg !3175

bb103:                                            ; preds = %bb101, %bb100
  br i1 %is_done, label %bb104, label %bb9, !dbg !3176

bb101:                                            ; preds = %bb100
  %_204 = load ptr, ptr %r, align 8, !dbg !3177, !noundef !24
  %_205 = load i64, ptr %block_r, align 8, !dbg !3178, !noundef !24
  store ptr %_204, ptr %self.dbg.spill.i65, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i65, metadata !2063, metadata !DIExpression()), !dbg !3179
  store i64 %_205, ptr %count.dbg.spill.i64, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i64, metadata !2066, metadata !DIExpression()), !dbg !3181
  store i64 %_205, ptr %self.dbg.spill.i.i63, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i63, metadata !2070, metadata !DIExpression()), !dbg !3182
  store i64 0, ptr %self.dbg.spill.i1.i62, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i62, metadata !2080, metadata !DIExpression()), !dbg !3184
  store i64 %_205, ptr %rhs.dbg.spill.i.i61, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i61, metadata !2085, metadata !DIExpression()), !dbg !3186
  %128 = sub i64 0, %_205, !dbg !3187
  store ptr %_204, ptr %self.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i112, metadata !2090, metadata !DIExpression()), !dbg !3188
  store i64 %128, ptr %count.dbg.spill.i111, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i111, metadata !2095, metadata !DIExpression()), !dbg !3190
  %129 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_204, i64 %128, !dbg !3191
  store ptr %129, ptr %r, align 8, !dbg !3192
  br label %bb103, !dbg !3193

bb104:                                            ; preds = %bb103
  %_207 = load ptr, ptr %start_l, align 8, !dbg !3194, !noundef !24
  %_208 = load ptr, ptr %end_l, align 8, !dbg !3195, !noundef !24
  %_206 = icmp ult ptr %_207, %_208, !dbg !3194
  br i1 %_206, label %bb105, label %bb106, !dbg !3194

bb106:                                            ; preds = %bb104
  %_242 = load ptr, ptr %start_r, align 8, !dbg !3196, !noundef !24
  %_243 = load ptr, ptr %end_r, align 8, !dbg !3197, !noundef !24
  %_241 = icmp ult ptr %_242, %_243, !dbg !3196
  br i1 %_241, label %bb120, label %bb121, !dbg !3196

bb105:                                            ; preds = %bb104
  br i1 true, label %bb107, label %bb110, !dbg !3198

bb110:                                            ; preds = %bb111, %bb107, %bb105
  %_226 = load ptr, ptr %start_l, align 8, !dbg !3199, !noundef !24
  %_227 = load ptr, ptr %end_l, align 8, !dbg !3200, !noundef !24
  %_225 = icmp ult ptr %_226, %_227, !dbg !3199
  br i1 %_225, label %bb111, label %bb118, !dbg !3199

bb107:                                            ; preds = %bb105
  %_213 = load ptr, ptr %l, align 8, !dbg !3201, !noundef !24
  %_214 = load ptr, ptr %r, align 8, !dbg !3202, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %130 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E(ptr %_213, ptr %_214) #10, !dbg !3203
  store i64 %130, ptr %_212, align 8, !dbg !3203
  store ptr %_212, ptr %_210, align 8, !dbg !3198
  %131 = getelementptr inbounds { ptr, ptr }, ptr %_210, i32 0, i32 1, !dbg !3198
  store ptr %block_l, ptr %131, align 8, !dbg !3198
  %left_val = load ptr, ptr %_210, align 8, !dbg !3198, !nonnull !24, !align !505, !noundef !24
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !3198
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !2794, metadata !DIExpression()), !dbg !3204
  %132 = getelementptr inbounds { ptr, ptr }, ptr %_210, i32 0, i32 1, !dbg !3198
  %right_val = load ptr, ptr %132, align 8, !dbg !3198, !nonnull !24, !align !505, !noundef !24
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !3198
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !2799, metadata !DIExpression()), !dbg !3204
  %_220 = load i64, ptr %left_val, align 8, !dbg !3204, !noundef !24
  %_221 = load i64, ptr %right_val, align 8, !dbg !3204, !noundef !24
  %_219 = icmp eq i64 %_220, %_221, !dbg !3204
  %_218 = xor i1 %_219, true, !dbg !3204
  br i1 %_218, label %bb109, label %bb110, !dbg !3204

bb109:                                            ; preds = %bb107
  store i8 0, ptr %kind, align 1, !dbg !3204
  %133 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_224, i32 0, i32 1, !dbg !2830
  store ptr null, ptr %133, align 8, !dbg !2830
  %134 = load i8, ptr %kind, align 1, !dbg !2830, !range !3205, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hfe11ff726ee97f7aE(i8 %134, ptr align 8 %left_val, ptr align 8 %right_val, ptr %_224, ptr align 8 @alloc_23d83fb97dc5ddd699c8f80f695d1b3b) #11, !dbg !2830
  unreachable, !dbg !2830

bb118:                                            ; preds = %bb110
  store ptr %v.0, ptr %self.dbg.spill.i128, align 8
  %135 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i128, i32 0, i32 1
  store i64 %v.1, ptr %135, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i128, metadata !1927, metadata !DIExpression()), !dbg !3206
  %_240 = load ptr, ptr %r, align 8, !dbg !3208, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %136 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E(ptr %v.0, ptr %_240) #10, !dbg !3209
  store i64 %136, ptr %2, align 8, !dbg !3209
  br label %bb136, !dbg !3209

bb111:                                            ; preds = %bb110
  %_229 = load ptr, ptr %end_l, align 8, !dbg !3210, !noundef !24
  store ptr %_229, ptr %self.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i100, metadata !3211, metadata !DIExpression()), !dbg !3215
  store i64 1, ptr %count.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i99, metadata !3214, metadata !DIExpression()), !dbg !3217
  store i64 1, ptr %self.dbg.spill.i.i98, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i98, metadata !2070, metadata !DIExpression()), !dbg !3218
  store i64 0, ptr %self.dbg.spill.i1.i97, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i97, metadata !2080, metadata !DIExpression()), !dbg !3220
  store i64 1, ptr %rhs.dbg.spill.i.i96, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i96, metadata !2085, metadata !DIExpression()), !dbg !3222
  store ptr %_229, ptr %self.dbg.spill.i120, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i120, metadata !3223, metadata !DIExpression()), !dbg !3229
  store i64 -1, ptr %count.dbg.spill.i119, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i119, metadata !3228, metadata !DIExpression()), !dbg !3231
  %137 = getelementptr inbounds i8, ptr %_229, i64 -1, !dbg !3232
  store ptr %137, ptr %end_l, align 8, !dbg !3233
  %_232 = load ptr, ptr %l, align 8, !dbg !3234, !noundef !24
  %138 = load ptr, ptr %end_l, align 8, !dbg !3235, !noundef !24
  %_234 = load i8, ptr %138, align 1, !dbg !3235, !noundef !24
  store i8 %_234, ptr %small.dbg.spill.i132, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i132, metadata !3024, metadata !DIExpression()), !dbg !3236
  %139 = zext i8 %_234 to i64, !dbg !3238
  store ptr %_232, ptr %self.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !265, metadata !DIExpression()), !dbg !3239
  store i64 %139, ptr %count.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i21, metadata !271, metadata !DIExpression()), !dbg !3241
  %140 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_232, i64 %139, !dbg !3242
  %_236 = load ptr, ptr %r, align 8, !dbg !3243, !noundef !24
  store ptr %_236, ptr %self.dbg.spill.i60, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i60, metadata !2063, metadata !DIExpression()), !dbg !3244
  store i64 1, ptr %count.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i59, metadata !2066, metadata !DIExpression()), !dbg !3246
  store i64 1, ptr %self.dbg.spill.i.i58, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i58, metadata !2070, metadata !DIExpression()), !dbg !3247
  store i64 0, ptr %self.dbg.spill.i1.i57, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i57, metadata !2080, metadata !DIExpression()), !dbg !3249
  store i64 1, ptr %rhs.dbg.spill.i.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i56, metadata !2085, metadata !DIExpression()), !dbg !3251
  store ptr %_236, ptr %self.dbg.spill.i114, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i114, metadata !2090, metadata !DIExpression()), !dbg !3252
  store i64 -1, ptr %count.dbg.spill.i113, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i113, metadata !2095, metadata !DIExpression()), !dbg !3254
  %141 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_236, i64 -1, !dbg !3255
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17hdded449a2079ac21E(ptr %140, ptr %141) #10, !dbg !3256
  %_238 = load ptr, ptr %r, align 8, !dbg !3257, !noundef !24
  store ptr %_238, ptr %self.dbg.spill.i55, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i55, metadata !2063, metadata !DIExpression()), !dbg !3258
  store i64 1, ptr %count.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i54, metadata !2066, metadata !DIExpression()), !dbg !3260
  store i64 1, ptr %self.dbg.spill.i.i53, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i53, metadata !2070, metadata !DIExpression()), !dbg !3261
  store i64 0, ptr %self.dbg.spill.i1.i52, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i52, metadata !2080, metadata !DIExpression()), !dbg !3263
  store i64 1, ptr %rhs.dbg.spill.i.i51, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i51, metadata !2085, metadata !DIExpression()), !dbg !3265
  store ptr %_238, ptr %self.dbg.spill.i116, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i116, metadata !2090, metadata !DIExpression()), !dbg !3266
  store i64 -1, ptr %count.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i115, metadata !2095, metadata !DIExpression()), !dbg !3268
  %142 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_238, i64 -1, !dbg !3269
  store ptr %142, ptr %r, align 8, !dbg !3270
  br label %bb110, !dbg !3271

bb136:                                            ; preds = %bb121, %bb133, %bb118
  %143 = load i64, ptr %2, align 8, !dbg !3272, !noundef !24
  ret i64 %143, !dbg !3272

bb121:                                            ; preds = %bb106
  store ptr %v.0, ptr %self.dbg.spill.i126, align 8
  %144 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i126, i32 0, i32 1
  store i64 %v.1, ptr %144, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i126, metadata !1927, metadata !DIExpression()), !dbg !3273
  %_278 = load ptr, ptr %l, align 8, !dbg !3275, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %145 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E(ptr %v.0, ptr %_278) #10, !dbg !3276
  store i64 %145, ptr %2, align 8, !dbg !3276
  br label %bb136, !dbg !3276

bb120:                                            ; preds = %bb106
  br i1 true, label %bb122, label %bb125, !dbg !3277

bb125:                                            ; preds = %bb129, %bb122, %bb120
  %_261 = load ptr, ptr %start_r, align 8, !dbg !3278, !noundef !24
  %_262 = load ptr, ptr %end_r, align 8, !dbg !3279, !noundef !24
  %_260 = icmp ult ptr %_261, %_262, !dbg !3278
  br i1 %_260, label %bb126, label %bb133, !dbg !3278

bb122:                                            ; preds = %bb120
  %_248 = load ptr, ptr %l, align 8, !dbg !3280, !noundef !24
  %_249 = load ptr, ptr %r, align 8, !dbg !3281, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %146 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E(ptr %_248, ptr %_249) #10, !dbg !3282
  store i64 %146, ptr %_247, align 8, !dbg !3282
  store ptr %_247, ptr %_245, align 8, !dbg !3277
  %147 = getelementptr inbounds { ptr, ptr }, ptr %_245, i32 0, i32 1, !dbg !3277
  store ptr %block_r, ptr %147, align 8, !dbg !3277
  %left_val14 = load ptr, ptr %_245, align 8, !dbg !3277, !nonnull !24, !align !505, !noundef !24
  store ptr %left_val14, ptr %left_val.dbg.spill15, align 8, !dbg !3277
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill15, metadata !2803, metadata !DIExpression()), !dbg !3283
  %148 = getelementptr inbounds { ptr, ptr }, ptr %_245, i32 0, i32 1, !dbg !3277
  %right_val16 = load ptr, ptr %148, align 8, !dbg !3277, !nonnull !24, !align !505, !noundef !24
  store ptr %right_val16, ptr %right_val.dbg.spill17, align 8, !dbg !3277
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill17, metadata !2806, metadata !DIExpression()), !dbg !3283
  %_255 = load i64, ptr %left_val14, align 8, !dbg !3283, !noundef !24
  %_256 = load i64, ptr %right_val16, align 8, !dbg !3283, !noundef !24
  %_254 = icmp eq i64 %_255, %_256, !dbg !3283
  %_253 = xor i1 %_254, true, !dbg !3283
  br i1 %_253, label %bb124, label %bb125, !dbg !3283

bb124:                                            ; preds = %bb122
  store i8 0, ptr %kind4, align 1, !dbg !3283
  %149 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_259, i32 0, i32 1, !dbg !2831
  store ptr null, ptr %149, align 8, !dbg !2831
  %150 = load i8, ptr %kind4, align 1, !dbg !2831, !range !3205, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hfe11ff726ee97f7aE(i8 %150, ptr align 8 %left_val14, ptr align 8 %right_val16, ptr %_259, ptr align 8 @alloc_fbd29d12e7b221b5790588e8407e814c) #11, !dbg !2831
  unreachable, !dbg !2831

bb133:                                            ; preds = %bb125
  store ptr %v.0, ptr %self.dbg.spill.i127, align 8
  %151 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i127, i32 0, i32 1
  store i64 %v.1, ptr %151, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i127, metadata !1927, metadata !DIExpression()), !dbg !3284
  %_276 = load ptr, ptr %l, align 8, !dbg !3286, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %152 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E(ptr %v.0, ptr %_276) #10, !dbg !3287
  store i64 %152, ptr %2, align 8, !dbg !3287
  br label %bb136, !dbg !3287

bb126:                                            ; preds = %bb125
  %_264 = load ptr, ptr %end_r, align 8, !dbg !3288, !noundef !24
  store ptr %_264, ptr %self.dbg.spill.i95, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i95, metadata !3211, metadata !DIExpression()), !dbg !3289
  store i64 1, ptr %count.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i94, metadata !3214, metadata !DIExpression()), !dbg !3291
  store i64 1, ptr %self.dbg.spill.i.i93, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i93, metadata !2070, metadata !DIExpression()), !dbg !3292
  store i64 0, ptr %self.dbg.spill.i1.i92, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i92, metadata !2080, metadata !DIExpression()), !dbg !3294
  store i64 1, ptr %rhs.dbg.spill.i.i91, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i91, metadata !2085, metadata !DIExpression()), !dbg !3296
  store ptr %_264, ptr %self.dbg.spill.i122, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i122, metadata !3223, metadata !DIExpression()), !dbg !3297
  store i64 -1, ptr %count.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i121, metadata !3228, metadata !DIExpression()), !dbg !3299
  %153 = getelementptr inbounds i8, ptr %_264, i64 -1, !dbg !3300
  store ptr %153, ptr %end_r, align 8, !dbg !3301
  %_266 = load ptr, ptr %l, align 8, !dbg !3302, !noundef !24
  %_268 = load ptr, ptr %r, align 8, !dbg !3303, !noundef !24
  %154 = load ptr, ptr %end_r, align 8, !dbg !3304, !noundef !24
  %_271 = load i8, ptr %154, align 1, !dbg !3304, !noundef !24
  store i8 %_271, ptr %small.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i, metadata !3024, metadata !DIExpression()), !dbg !3305
  %155 = zext i8 %_271 to i64, !dbg !3307
  %156 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %155, i64 1), !dbg !3308
  %_272.0 = extractvalue { i64, i1 } %156, 0, !dbg !3308
  %_272.1 = extractvalue { i64, i1 } %156, 1, !dbg !3308
  %157 = call i1 @llvm.expect.i1(i1 %_272.1, i1 false), !dbg !3308
  br i1 %157, label %panic18, label %bb129, !dbg !3308

bb129:                                            ; preds = %bb126
  store ptr %_268, ptr %self.dbg.spill.i50, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i50, metadata !2063, metadata !DIExpression()), !dbg !3309
  store i64 %_272.0, ptr %count.dbg.spill.i49, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i49, metadata !2066, metadata !DIExpression()), !dbg !3311
  store i64 %_272.0, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2070, metadata !DIExpression()), !dbg !3312
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2080, metadata !DIExpression()), !dbg !3314
  store i64 %_272.0, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2085, metadata !DIExpression()), !dbg !3316
  %158 = sub i64 0, %_272.0, !dbg !3317
  store ptr %_268, ptr %self.dbg.spill.i118, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i118, metadata !2090, metadata !DIExpression()), !dbg !3318
  store i64 %158, ptr %count.dbg.spill.i117, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i117, metadata !2095, metadata !DIExpression()), !dbg !3320
  %159 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_268, i64 %158, !dbg !3321
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17hdded449a2079ac21E(ptr %_266, ptr %159) #10, !dbg !3322
  %_274 = load ptr, ptr %l, align 8, !dbg !3323, !noundef !24
  store ptr %_274, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !3324
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !3326
  %160 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_274, i64 1, !dbg !3327
  store ptr %160, ptr %l, align 8, !dbg !3328
  br label %bb125, !dbg !3329

panic18:                                          ; preds = %bb126
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0ba58876d11be66a75ed3c6ebb0e6bf5) #11, !dbg !3308
  unreachable, !dbg !3308
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h2ada822d627da173E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3330 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3335, metadata !DIExpression()), !dbg !3337
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3336, metadata !DIExpression()), !dbg !3338
  %_4 = icmp ugt i64 1, 0, !dbg !3339
  %_3 = xor i1 %_4, true, !dbg !3340
  br i1 %_3, label %bb2, label %bb3, !dbg !3340

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !1565, metadata !DIExpression()), !dbg !3341
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1574, metadata !DIExpression()), !dbg !3343
  %0 = ptrtoint ptr %r to i64, !dbg !3345
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1565, metadata !DIExpression()), !dbg !3346
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1574, metadata !DIExpression()), !dbg !3348
  %1 = ptrtoint ptr %l to i64, !dbg !3350
  %_10.0 = sub i64 %0, %1, !dbg !3351
  %_10.1 = icmp ult i64 %0, %1, !dbg !3351
  %2 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3351
  br i1 %2, label %panic, label %bb6, !dbg !3351

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_9dd923649e31f13c3223b59f17507a2e) #11, !dbg !3340
  unreachable, !dbg !3340

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 1, 0, !dbg !3351
  %3 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3351
  br i1 %3, label %panic1, label %bb8, !dbg !3351

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3351
  unreachable, !dbg !3351

bb8:                                              ; preds = %bb6
  %4 = udiv i64 %_10.0, 1, !dbg !3351
  ret i64 %4, !dbg !3352

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3351
  unreachable, !dbg !3351
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3353 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3357, metadata !DIExpression()), !dbg !3359
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3358, metadata !DIExpression()), !dbg !3360
  %_4 = icmp ugt i64 24, 0, !dbg !3361
  %_3 = xor i1 %_4, true, !dbg !3362
  br i1 %_3, label %bb2, label %bb3, !dbg !3362

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3363, metadata !DIExpression()), !dbg !3368
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1256, metadata !DIExpression()), !dbg !3370
  %0 = ptrtoint ptr %r to i64, !dbg !3372
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3363, metadata !DIExpression()), !dbg !3373
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1256, metadata !DIExpression()), !dbg !3375
  %1 = ptrtoint ptr %l to i64, !dbg !3377
  %_10.0 = sub i64 %0, %1, !dbg !3378
  %_10.1 = icmp ult i64 %0, %1, !dbg !3378
  %2 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3378
  br i1 %2, label %panic, label %bb6, !dbg !3378

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_9dd923649e31f13c3223b59f17507a2e) #11, !dbg !3362
  unreachable, !dbg !3362

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 24, 0, !dbg !3378
  %3 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3378
  br i1 %3, label %panic1, label %bb8, !dbg !3378

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3378
  unreachable, !dbg !3378

bb8:                                              ; preds = %bb6
  %4 = udiv i64 %_10.0, 24, !dbg !3378
  ret i64 %4, !dbg !3379

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3378
  unreachable, !dbg !3378
}

; core::slice::sort::partial_insertion_sort
; Function Attrs: cold noredzone nounwind
define zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17hee34f5a0b526f267E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #2 !dbg !3380 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_50 = alloca i64, align 8
  %_42 = alloca i64, align 8
  %_17 = alloca { ptr, ptr }, align 8
  %_12 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %i = alloca i64, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3384, metadata !DIExpression()), !dbg !3392
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3385, metadata !DIExpression()), !dbg !3393
  call void @llvm.dbg.declare(metadata ptr %i, metadata !3388, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3390, metadata !DIExpression()), !dbg !3395
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3396
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3386, metadata !DIExpression()), !dbg !3397
  store i64 1, ptr %i, align 8, !dbg !3398
  store i64 0, ptr %_7, align 8, !dbg !3399
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3399
  store i64 5, ptr %3, align 8, !dbg !3399
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3399
  %5 = load i64, ptr %4, align 8, !dbg !3399, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3399
  %7 = load i64, ptr %6, align 8, !dbg !3399, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbd4e891038e99fd5E"(i64 %5, i64 %7) #10, !dbg !3399
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3399
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3399
  %9 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3399
  store i64 %_6.0, ptr %9, align 8, !dbg !3399
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3399
  store i64 %_6.1, ptr %10, align 8, !dbg !3399
  br label %bb2, !dbg !3400

bb2:                                              ; preds = %bb25, %bb21, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %11 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hcbda1fddb935b88aE"(ptr align 8 %iter) #10, !dbg !3395
  store { i64, i64 } %11, ptr %_9, align 8, !dbg !3395
  %_11 = load i64, ptr %_9, align 8, !dbg !3395, !range !1037, !noundef !24
  %12 = icmp eq i64 %_11, 0, !dbg !3395
  br i1 %12, label %bb5, label %bb6, !dbg !3395

bb5:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !3401
  br label %bb28, !dbg !3402

bb6:                                              ; preds = %bb15, %bb2
  %_14 = load i64, ptr %i, align 8, !dbg !3403, !noundef !24
  %_13 = icmp ult i64 %_14, %v.1, !dbg !3403
  br i1 %_13, label %bb8, label %bb7, !dbg !3403

bb4:                                              ; No predecessors!
  unreachable, !dbg !3395

bb7:                                              ; preds = %bb6
  store i8 0, ptr %_12, align 1, !dbg !3403
  br label %bb9, !dbg !3403

bb8:                                              ; preds = %bb6
  %_21 = load i64, ptr %i, align 8, !dbg !3404, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_19 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %v.0, i64 %v.1, i64 %_21) #10, !dbg !3405
  %_26 = load i64, ptr %i, align 8, !dbg !3406, !noundef !24
  %_27.0 = sub i64 %_26, 1, !dbg !3406
  %_27.1 = icmp ult i64 %_26, 1, !dbg !3406
  %13 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !3406
  br i1 %13, label %panic, label %bb11, !dbg !3406

bb11:                                             ; preds = %bb8
; call core::slice::<impl [T]>::get_unchecked
  %_23 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %v.0, i64 %v.1, i64 %_27.0) #10, !dbg !3407
  store ptr %_19, ptr %_17, align 8, !dbg !3408
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3408
  store ptr %_23, ptr %14, align 8, !dbg !3408
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 0, !dbg !3408
  %16 = load ptr, ptr %15, align 8, !dbg !3408, !nonnull !24, !align !505, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3408
  %18 = load ptr, ptr %17, align 8, !dbg !3408, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_16 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3408
  %_15 = xor i1 %_16, true, !dbg !3409
  %19 = zext i1 %_15 to i8, !dbg !3403
  store i8 %19, ptr %_12, align 1, !dbg !3403
  br label %bb9, !dbg !3403

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_bd81c17235b1444753a1935a813b485f) #11, !dbg !3406
  unreachable, !dbg !3406

bb9:                                              ; preds = %bb7, %bb11
  %20 = load i8, ptr %_12, align 1, !dbg !3403, !range !231, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3403
  br i1 %21, label %bb14, label %bb16, !dbg !3403

bb16:                                             ; preds = %bb9
  %_30 = load i64, ptr %i, align 8, !dbg !3410, !noundef !24
  %_29 = icmp eq i64 %_30, %v.1, !dbg !3410
  br i1 %_29, label %bb17, label %bb18, !dbg !3410

bb14:                                             ; preds = %bb9
  %22 = load i64, ptr %i, align 8, !dbg !3411, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !3411
  %_28.0 = extractvalue { i64, i1 } %23, 0, !dbg !3411
  %_28.1 = extractvalue { i64, i1 } %23, 1, !dbg !3411
  %24 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !3411
  br i1 %24, label %panic1, label %bb15, !dbg !3411

bb15:                                             ; preds = %bb14
  store i64 %_28.0, ptr %i, align 8, !dbg !3411
  br label %bb6, !dbg !3412

panic1:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_e743259f65f79dce5fdf7e439c96cb01) #11, !dbg !3411
  unreachable, !dbg !3411

bb18:                                             ; preds = %bb16
  %_31 = icmp ult i64 %v.1, 50, !dbg !3413
  br i1 %_31, label %bb19, label %bb20, !dbg !3413

bb17:                                             ; preds = %bb16
  store i8 1, ptr %0, align 1, !dbg !3414
  br label %bb28, !dbg !3415

bb28:                                             ; preds = %bb5, %bb19, %bb17
  %25 = load i8, ptr %0, align 1, !dbg !3402, !range !231, !noundef !24
  %26 = trunc i8 %25 to i1, !dbg !3402
  ret i1 %26, !dbg !3402

bb20:                                             ; preds = %bb18
  %_34 = load i64, ptr %i, align 8, !dbg !3418, !noundef !24
  %_35.0 = sub i64 %_34, 1, !dbg !3418
  %_35.1 = icmp ult i64 %_34, 1, !dbg !3418
  %27 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !3418
  br i1 %27, label %panic2, label %bb21, !dbg !3418

bb19:                                             ; preds = %bb18
  store i8 0, ptr %0, align 1, !dbg !3419
  br label %bb28, !dbg !3415

bb21:                                             ; preds = %bb20
  %_36 = load i64, ptr %i, align 8, !dbg !3420, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h896a93d8011e65cdE"(ptr align 8 %v.0, i64 %v.1, i64 %_35.0, i64 %_36, ptr align 8 @alloc_0cd04c6390f55d83a74a72e18ad99930) #10, !dbg !3421
  %_38 = load i64, ptr %i, align 8, !dbg !3422, !noundef !24
  %_37 = icmp uge i64 %_38, 2, !dbg !3422
  br i1 %_37, label %bb23, label %bb2, !dbg !3422

panic2:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2300fc4e056106188d3f21c349fb8e76) #11, !dbg !3418
  unreachable, !dbg !3418

bb23:                                             ; preds = %bb21
  %_43 = load i64, ptr %i, align 8, !dbg !3423, !noundef !24
  store i64 %_43, ptr %_42, align 8, !dbg !3424
  %28 = load i64, ptr %_42, align 8, !dbg !3425, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %29 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56804621d2071613E"(ptr align 8 %v.0, i64 %v.1, i64 %28, ptr align 8 @alloc_5f37f9a166db798315b708b1541f42a2) #10, !dbg !3425
  %_41.0 = extractvalue { ptr, i64 } %29, 0, !dbg !3425
  %_41.1 = extractvalue { ptr, i64 } %29, 1, !dbg !3425
  %_45 = load i64, ptr %i, align 8, !dbg !3426, !noundef !24
  %_46.0 = sub i64 %_45, 1, !dbg !3426
  %_46.1 = icmp ult i64 %_45, 1, !dbg !3426
  %30 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3426
  br i1 %30, label %panic3, label %bb25, !dbg !3426

bb25:                                             ; preds = %bb23
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17h0d5bb514fedee4b9E(ptr align 8 %_41.0, i64 %_41.1, i64 %_46.0, ptr align 8 %is_less) #10, !dbg !3427
  %_51 = load i64, ptr %i, align 8, !dbg !3428, !noundef !24
  store i64 %_51, ptr %_50, align 8, !dbg !3429
  %31 = load i64, ptr %_50, align 8, !dbg !3430, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %32 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56804621d2071613E"(ptr align 8 %v.0, i64 %v.1, i64 %31, ptr align 8 @alloc_59f135123cded1fb506d3f148328939a) #10, !dbg !3430
  %_49.0 = extractvalue { ptr, i64 } %32, 0, !dbg !3430
  %_49.1 = extractvalue { ptr, i64 } %32, 1, !dbg !3430
; call core::slice::sort::insertion_sort_shift_right
  call void @_ZN4core5slice4sort26insertion_sort_shift_right17h1f8d7f273034a422E(ptr align 8 %_49.0, i64 %_49.1, i64 1, ptr align 8 %is_less) #10, !dbg !3431
  br label %bb2, !dbg !3431

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_51848abd31708fd9bd4e978ad4e2fdf6) #11, !dbg !3426
  unreachable, !dbg !3426
}

; core::slice::sort::insertion_sort_shift_left
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort25insertion_sort_shift_left17h0d5bb514fedee4b9E(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3432 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_20 = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3436, metadata !DIExpression()), !dbg !3445
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3437, metadata !DIExpression()), !dbg !3446
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3438, metadata !DIExpression()), !dbg !3447
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3441, metadata !DIExpression()), !dbg !3448
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3449
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3439, metadata !DIExpression()), !dbg !3450
  %2 = icmp eq i64 %offset, 0, !dbg !3451
  br i1 %2, label %bb1, label %bb2, !dbg !3451

bb1:                                              ; preds = %start
  store i8 0, ptr %_7, align 1, !dbg !3451
  br label %bb3, !dbg !3451

bb2:                                              ; preds = %start
  %_8 = icmp ule i64 %offset, %v.1, !dbg !3452
  %3 = zext i1 %_8 to i8, !dbg !3451
  store i8 %3, ptr %_7, align 1, !dbg !3451
  br label %bb3, !dbg !3451

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, ptr %_7, align 1, !dbg !3453, !range !231, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3453
  %_6 = xor i1 %5, true, !dbg !3453
  br i1 %_6, label %bb4, label %bb5, !dbg !3453

bb5:                                              ; preds = %bb3
  store i64 %offset, ptr %_11, align 8, !dbg !3454
  %6 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3454
  store i64 %v.1, ptr %6, align 8, !dbg !3454
  %7 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 0, !dbg !3454
  %8 = load i64, ptr %7, align 8, !dbg !3454, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3454
  %10 = load i64, ptr %9, align 8, !dbg !3454, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %11 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbd4e891038e99fd5E"(i64 %8, i64 %10) #10, !dbg !3454
  %_10.0 = extractvalue { i64, i64 } %11, 0, !dbg !3454
  %_10.1 = extractvalue { i64, i64 } %11, 1, !dbg !3454
  %12 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3454
  store i64 %_10.0, ptr %12, align 8, !dbg !3454
  %13 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3454
  store i64 %_10.1, ptr %13, align 8, !dbg !3454
  br label %bb7, !dbg !3455

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_5429279aa16fa0cdfc25e6fc8726a06a, i64 46, ptr align 8 @alloc_99bb945c879f5888798b28005543a365) #11, !dbg !3453
  unreachable, !dbg !3453

bb7:                                              ; preds = %bb9, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %14 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hcbda1fddb935b88aE"(ptr align 8 %iter) #10, !dbg !3448
  store { i64, i64 } %14, ptr %_13, align 8, !dbg !3448
  %_15 = load i64, ptr %_13, align 8, !dbg !3448, !range !1037, !noundef !24
  %15 = icmp eq i64 %_15, 0, !dbg !3448
  br i1 %15, label %bb11, label %bb9, !dbg !3448

bb11:                                             ; preds = %bb7
  ret void, !dbg !3456

bb9:                                              ; preds = %bb7
  %16 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3457
  %i = load i64, ptr %16, align 8, !dbg !3457, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3457
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3443, metadata !DIExpression()), !dbg !3458
  store i64 %i, ptr %_20, align 8, !dbg !3459
  %17 = load i64, ptr %_20, align 8, !dbg !3460, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %18 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h021e02b7974eccafE"(ptr align 8 %v.0, i64 %v.1, i64 %17, ptr align 8 @alloc_73eebdc85b9e117e5d0f01368c59f59c) #10, !dbg !3460
  %_19.0 = extractvalue { ptr, i64 } %18, 0, !dbg !3460
  %_19.1 = extractvalue { ptr, i64 } %18, 1, !dbg !3460
; call core::slice::sort::insert_tail
  call void @_ZN4core5slice4sort11insert_tail17h015d8bc2b7089f6bE(ptr align 8 %_19.0, i64 %_19.1, ptr align 8 %is_less) #10, !dbg !3461
  br label %bb7, !dbg !3461

bb10:                                             ; No predecessors!
  unreachable, !dbg !3448
}

; core::slice::sort::insertion_sort_shift_right
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort26insertion_sort_shift_right17h1f8d7f273034a422E(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3462 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3464, metadata !DIExpression()), !dbg !3473
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3465, metadata !DIExpression()), !dbg !3474
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3466, metadata !DIExpression()), !dbg !3475
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3469, metadata !DIExpression()), !dbg !3476
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3477
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3467, metadata !DIExpression()), !dbg !3478
  %2 = icmp eq i64 %offset, 0, !dbg !3479
  br i1 %2, label %bb4, label %bb5, !dbg !3479

bb4:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !3479
  br label %bb6, !dbg !3479

bb5:                                              ; preds = %start
  %_9 = icmp ule i64 %offset, %v.1, !dbg !3480
  %3 = zext i1 %_9 to i8, !dbg !3479
  store i8 %3, ptr %_8, align 1, !dbg !3479
  br label %bb6, !dbg !3479

bb6:                                              ; preds = %bb4, %bb5
  %4 = load i8, ptr %_8, align 1, !dbg !3479, !range !231, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3479
  br i1 %5, label %bb2, label %bb1, !dbg !3479

bb1:                                              ; preds = %bb6
  store i8 0, ptr %_7, align 1, !dbg !3479
  br label %bb3, !dbg !3479

bb2:                                              ; preds = %bb6
  %_10 = icmp uge i64 %v.1, 2, !dbg !3481
  %6 = zext i1 %_10 to i8, !dbg !3479
  store i8 %6, ptr %_7, align 1, !dbg !3479
  br label %bb3, !dbg !3479

bb3:                                              ; preds = %bb1, %bb2
  %7 = load i8, ptr %_7, align 1, !dbg !3482, !range !231, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !3482
  %_6 = xor i1 %8, true, !dbg !3482
  br i1 %_6, label %bb7, label %bb8, !dbg !3482

bb8:                                              ; preds = %bb3
  store i64 0, ptr %_14, align 8, !dbg !3483
  %9 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3483
  store i64 %offset, ptr %9, align 8, !dbg !3483
  %10 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !3483
  %11 = load i64, ptr %10, align 8, !dbg !3483, !noundef !24
  %12 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3483
  %13 = load i64, ptr %12, align 8, !dbg !3483, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %14 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h65b7d1992fe3aff5E(i64 %11, i64 %13) #10, !dbg !3483
  %_13.0 = extractvalue { i64, i64 } %14, 0, !dbg !3483
  %_13.1 = extractvalue { i64, i64 } %14, 1, !dbg !3483
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %15 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf2d885b31dabed3dE"(i64 %_13.0, i64 %_13.1) #10, !dbg !3483
  %_12.0 = extractvalue { i64, i64 } %15, 0, !dbg !3483
  %_12.1 = extractvalue { i64, i64 } %15, 1, !dbg !3483
  %16 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3483
  store i64 %_12.0, ptr %16, align 8, !dbg !3483
  %17 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3483
  store i64 %_12.1, ptr %17, align 8, !dbg !3483
  br label %bb11, !dbg !3484

bb7:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_6973cb22fd5a814eff7046b5b9169c77, i64 58, ptr align 8 @alloc_15caf4948137b9f7be8cedfe4929bfd3) #11, !dbg !3482
  unreachable, !dbg !3482

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %18 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0a40464f3be5dc7aE"(ptr align 8 %iter) #10, !dbg !3476
  store { i64, i64 } %18, ptr %_16, align 8, !dbg !3476
  %_18 = load i64, ptr %_16, align 8, !dbg !3476, !range !1037, !noundef !24
  %19 = icmp eq i64 %_18, 0, !dbg !3476
  br i1 %19, label %bb15, label %bb13, !dbg !3476

bb15:                                             ; preds = %bb11
  ret void, !dbg !3485

bb13:                                             ; preds = %bb11
  %20 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !3486
  %i = load i64, ptr %20, align 8, !dbg !3486, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3486
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3471, metadata !DIExpression()), !dbg !3487
  store i64 %i, ptr %_23, align 8, !dbg !3488
  %21 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3488
  store i64 %v.1, ptr %21, align 8, !dbg !3488
  %22 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !3489
  %23 = load i64, ptr %22, align 8, !dbg !3489, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3489
  %25 = load i64, ptr %24, align 8, !dbg !3489, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %26 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h0704c58ab2009668E"(ptr align 8 %v.0, i64 %v.1, i64 %23, i64 %25, ptr align 8 @alloc_9da74b8166775a21c862af0758b35f3d) #10, !dbg !3489
  %_22.0 = extractvalue { ptr, i64 } %26, 0, !dbg !3489
  %_22.1 = extractvalue { ptr, i64 } %26, 1, !dbg !3489
; call core::slice::sort::insert_head
  call void @_ZN4core5slice4sort11insert_head17h2a439797abf0e653E(ptr align 8 %_22.0, i64 %_22.1, ptr align 8 %is_less) #10, !dbg !3490
  br label %bb11, !dbg !3490

bb14:                                             ; No predecessors!
  unreachable, !dbg !3476
}

; core::slice::sort::recurse
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort7recurse17h167841c41c7f1248E(ptr align 8 %0, i64 %1, ptr align 8 %is_less, ptr align 8 %2, i32 %3) unnamed_addr #1 !dbg !3491 {
start:
  %pivot.dbg.spill9 = alloca ptr, align 8
  %right.dbg.spill7 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill4 = alloca { ptr, i64 }, align 8
  %right.dbg.spill = alloca { ptr, i64 }, align 8
  %left.dbg.spill = alloca { ptr, i64 }, align 8
  %was_p.dbg.spill = alloca i8, align 1
  %mid.dbg.spill2 = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %p.dbg.spill = alloca ptr, align 8
  %likely_sorted.dbg.spill = alloca i8, align 1
  %pivot.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %_76 = alloca ptr, align 8
  %_74 = alloca ptr, align 8
  %_61 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_57 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_44 = alloca i64, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_26 = alloca i8, align 1
  %_25 = alloca i8, align 1
  %was_partitioned = alloca i8, align 1
  %was_balanced = alloca i8, align 1
  %limit = alloca i32, align 4
  %pred = alloca ptr, align 8
  %v = alloca { ptr, i64 }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %pred, align 8
  store i32 %3, ptr %limit, align 4
  call void @llvm.dbg.declare(metadata ptr %v, metadata !3506, metadata !DIExpression()), !dbg !3534
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3507, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.declare(metadata ptr %pred, metadata !3508, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.declare(metadata ptr %limit, metadata !3509, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.declare(metadata ptr %was_balanced, metadata !3510, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.declare(metadata ptr %was_partitioned, metadata !3512, metadata !DIExpression()), !dbg !3539
  store i8 1, ptr %was_balanced, align 1, !dbg !3540
  store i8 1, ptr %was_partitioned, align 1, !dbg !3541
  br label %bb1, !dbg !3542

bb1:                                              ; preds = %bb37, %bb35, %bb24, %start
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3543
  %_8.0 = load ptr, ptr %6, align 8, !dbg !3543, !nonnull !24, !align !505, !noundef !24
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3543
  %_8.1 = load i64, ptr %7, align 8, !dbg !3543, !noundef !24
  store i64 %_8.1, ptr %len.dbg.spill, align 8, !dbg !3543
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3514, metadata !DIExpression()), !dbg !3544
  %_9 = icmp ule i64 %_8.1, 20, !dbg !3545
  br i1 %_9, label %bb2, label %bb4, !dbg !3545

bb4:                                              ; preds = %bb1
  %_13 = load i32, ptr %limit, align 4, !dbg !3546, !noundef !24
  %8 = icmp eq i32 %_13, 0, !dbg !3546
  br i1 %8, label %bb5, label %bb6, !dbg !3546

bb2:                                              ; preds = %bb1
  %_10 = icmp uge i64 %_8.1, 2, !dbg !3547
  br i1 %_10, label %bb3, label %bb39, !dbg !3547

bb39:                                             ; preds = %bb5, %bb18, %bb3, %bb2
  ret void, !dbg !3548

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3549
  %_12.0 = load ptr, ptr %9, align 8, !dbg !3549, !nonnull !24, !align !505, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3549
  %_12.1 = load i64, ptr %10, align 8, !dbg !3549, !noundef !24
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17h0d5bb514fedee4b9E(ptr align 8 %_12.0, i64 %_12.1, i64 1, ptr align 8 %is_less) #10, !dbg !3550
  br label %bb39, !dbg !3550

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3551
  %_15.0 = load ptr, ptr %11, align 8, !dbg !3551, !nonnull !24, !align !505, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3551
  %_15.1 = load i64, ptr %12, align 8, !dbg !3551, !noundef !24
; call core::slice::sort::heapsort
  call void @_ZN4core5slice4sort8heapsort17h702116c078140a2cE(ptr align 8 %_15.0, i64 %_15.1, ptr align 8 %is_less) #10, !dbg !3552
  br label %bb39, !dbg !3552

bb6:                                              ; preds = %bb4
  %13 = load i8, ptr %was_balanced, align 1, !dbg !3553, !range !231, !noundef !24
  %_17 = trunc i8 %13 to i1, !dbg !3553
  %_16 = xor i1 %_17, true, !dbg !3554
  br i1 %_16, label %bb7, label %bb10, !dbg !3554

bb10:                                             ; preds = %bb9, %bb6
  %14 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3555
  %_24.0 = load ptr, ptr %14, align 8, !dbg !3555, !nonnull !24, !align !505, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3555
  %_24.1 = load i64, ptr %15, align 8, !dbg !3555, !noundef !24
; call core::slice::sort::choose_pivot
  %16 = call { i64, i8 } @_ZN4core5slice4sort12choose_pivot17haaa6164e4366da71E(ptr align 8 %_24.0, i64 %_24.1, ptr align 8 %is_less) #10, !dbg !3556
  %_23.0 = extractvalue { i64, i8 } %16, 0, !dbg !3556
  %17 = extractvalue { i64, i8 } %16, 1, !dbg !3556
  %_23.1 = trunc i8 %17 to i1, !dbg !3556
  store i64 %_23.0, ptr %pivot.dbg.spill, align 8, !dbg !3557
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3516, metadata !DIExpression()), !dbg !3558
  %18 = zext i1 %_23.1 to i8, !dbg !3559
  store i8 %18, ptr %likely_sorted.dbg.spill, align 1, !dbg !3559
  call void @llvm.dbg.declare(metadata ptr %likely_sorted.dbg.spill, metadata !3518, metadata !DIExpression()), !dbg !3560
  %19 = load i8, ptr %was_balanced, align 1, !dbg !3561, !range !231, !noundef !24
  %_27 = trunc i8 %19 to i1, !dbg !3561
  br i1 %_27, label %bb16, label %bb15, !dbg !3561

bb7:                                              ; preds = %bb6
  %20 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3562
  %_19.0 = load ptr, ptr %20, align 8, !dbg !3562, !nonnull !24, !align !505, !noundef !24
  %21 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3562
  %_19.1 = load i64, ptr %21, align 8, !dbg !3562, !noundef !24
; call core::slice::sort::break_patterns
  call void @_ZN4core5slice4sort14break_patterns17h03b957f412d2760fE(ptr align 8 %_19.0, i64 %_19.1) #10, !dbg !3563
  %22 = load i32, ptr %limit, align 4, !dbg !3564, !noundef !24
  %_20.0 = sub i32 %22, 1, !dbg !3564
  %_20.1 = icmp ult i32 %22, 1, !dbg !3564
  %23 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !3564
  br i1 %23, label %panic, label %bb9, !dbg !3564

bb9:                                              ; preds = %bb7
  store i32 %_20.0, ptr %limit, align 4, !dbg !3564
  br label %bb10, !dbg !3565

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_afed1504fcd128c4005dc410e4c81be0) #11, !dbg !3564
  unreachable, !dbg !3564

bb15:                                             ; preds = %bb10
  store i8 0, ptr %_26, align 1, !dbg !3561
  br label %bb17, !dbg !3561

bb16:                                             ; preds = %bb10
  %24 = load i8, ptr %was_partitioned, align 1, !dbg !3566, !range !231, !noundef !24
  %_28 = trunc i8 %24 to i1, !dbg !3566
  %25 = zext i1 %_28 to i8, !dbg !3561
  store i8 %25, ptr %_26, align 1, !dbg !3561
  br label %bb17, !dbg !3561

bb17:                                             ; preds = %bb15, %bb16
  %26 = load i8, ptr %_26, align 1, !dbg !3561, !range !231, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !3561
  br i1 %27, label %bb13, label %bb12, !dbg !3561

bb12:                                             ; preds = %bb17
  store i8 0, ptr %_25, align 1, !dbg !3561
  br label %bb14, !dbg !3561

bb13:                                             ; preds = %bb17
  %28 = zext i1 %_23.1 to i8, !dbg !3561
  store i8 %28, ptr %_25, align 1, !dbg !3561
  br label %bb14, !dbg !3561

bb14:                                             ; preds = %bb12, %bb13
  %29 = load i8, ptr %_25, align 1, !dbg !3561, !range !231, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !3561
  br i1 %30, label %bb18, label %bb20, !dbg !3561

bb20:                                             ; preds = %bb18, %bb14
  %31 = load ptr, ptr %pred, align 8, !dbg !3567, !noundef !24
  %32 = ptrtoint ptr %31 to i64, !dbg !3567
  %33 = icmp eq i64 %32, 0, !dbg !3567
  %_31 = select i1 %33, i64 0, i64 1, !dbg !3567
  %34 = icmp eq i64 %_31, 1, !dbg !3567
  br i1 %34, label %bb21, label %bb27, !dbg !3567

bb18:                                             ; preds = %bb14
  %35 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3568
  %_30.0 = load ptr, ptr %35, align 8, !dbg !3568, !nonnull !24, !align !505, !noundef !24
  %36 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3568
  %_30.1 = load i64, ptr %36, align 8, !dbg !3568, !noundef !24
; call core::slice::sort::partial_insertion_sort
  %_29 = call zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17hee34f5a0b526f267E(ptr align 8 %_30.0, i64 %_30.1, ptr align 8 %is_less) #10, !dbg !3569
  br i1 %_29, label %bb39, label %bb20, !dbg !3569

bb21:                                             ; preds = %bb20
  %p = load ptr, ptr %pred, align 8, !dbg !3570, !nonnull !24, !align !505, !noundef !24
  store ptr %p, ptr %p.dbg.spill, align 8, !dbg !3570
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !3519, metadata !DIExpression()), !dbg !3570
  %37 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3571
  %38 = load ptr, ptr %37, align 8, !dbg !3571, !nonnull !24, !align !505, !noundef !24
  %39 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3571
  %_37 = load i64, ptr %39, align 8, !dbg !3571, !noundef !24
  %_38 = icmp ult i64 %_23.0, %_37, !dbg !3571
  %40 = call i1 @llvm.expect.i1(i1 %_38, i1 true), !dbg !3571
  br i1 %40, label %bb22, label %panic1, !dbg !3571

bb27:                                             ; preds = %bb22, %bb20
  %41 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3572
  %_49.0 = load ptr, ptr %41, align 8, !dbg !3572, !nonnull !24, !align !505, !noundef !24
  %42 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3572
  %_49.1 = load i64, ptr %42, align 8, !dbg !3572, !noundef !24
; call core::slice::sort::partition
  %43 = call { i64, i8 } @_ZN4core5slice4sort9partition17h0f3cc3bbc0a537a0E(ptr align 8 %_49.0, i64 %_49.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3573
  %_48.0 = extractvalue { i64, i8 } %43, 0, !dbg !3573
  %44 = extractvalue { i64, i8 } %43, 1, !dbg !3573
  %_48.1 = trunc i8 %44 to i1, !dbg !3573
  store i64 %_48.0, ptr %mid.dbg.spill2, align 8, !dbg !3574
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill2, metadata !3523, metadata !DIExpression()), !dbg !3575
  %45 = zext i1 %_48.1 to i8, !dbg !3576
  store i8 %45, ptr %was_p.dbg.spill, align 1, !dbg !3576
  call void @llvm.dbg.declare(metadata ptr %was_p.dbg.spill, metadata !3525, metadata !DIExpression()), !dbg !3577
  %_52.0 = sub i64 %_8.1, %_48.0, !dbg !3578
  %_52.1 = icmp ult i64 %_8.1, %_48.0, !dbg !3578
  %46 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !3578
  br i1 %46, label %panic3, label %bb29, !dbg !3578

bb22:                                             ; preds = %bb21
  %47 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3579
  %48 = load ptr, ptr %47, align 8, !dbg !3579, !nonnull !24, !align !505, !noundef !24
  %49 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3579
  %50 = load i64, ptr %49, align 8, !dbg !3579, !noundef !24
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %48, i64 0, i64 %_23.0, !dbg !3579
  store ptr %p, ptr %_35, align 8, !dbg !3580
  %51 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3580
  store ptr %_36, ptr %51, align 8, !dbg !3580
  %52 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3580
  %53 = load ptr, ptr %52, align 8, !dbg !3580, !nonnull !24, !align !505, !noundef !24
  %54 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3580
  %55 = load ptr, ptr %54, align 8, !dbg !3580, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %53, ptr align 8 %55) #10, !dbg !3580
  %_33 = xor i1 %_34, true, !dbg !3581
  br i1 %_33, label %bb24, label %bb27, !dbg !3581

panic1:                                           ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %_23.0, i64 %_37, ptr align 8 @alloc_587605405deda51184d8e058ecd3dd79) #11, !dbg !3571
  unreachable, !dbg !3571

bb24:                                             ; preds = %bb22
  %56 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3582
  %_40.0 = load ptr, ptr %56, align 8, !dbg !3582, !nonnull !24, !align !505, !noundef !24
  %57 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3582
  %_40.1 = load i64, ptr %57, align 8, !dbg !3582, !noundef !24
; call core::slice::sort::partition_equal
  %mid = call i64 @_ZN4core5slice4sort15partition_equal17hb3338f23996c1155E(ptr align 8 %_40.0, i64 %_40.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3583
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3583
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3521, metadata !DIExpression()), !dbg !3584
  %58 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3585
  %_43.0 = load ptr, ptr %58, align 8, !dbg !3585, !nonnull !24, !align !505, !noundef !24
  %59 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3585
  %_43.1 = load i64, ptr %59, align 8, !dbg !3585, !noundef !24
  store i64 %mid, ptr %_44, align 8, !dbg !3586
  %60 = load i64, ptr %_44, align 8, !dbg !3585, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %61 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1d91165492a26d83E"(ptr align 8 %_43.0, i64 %_43.1, i64 %60, ptr align 8 @alloc_696cf6b9c96fa15d1a2bc76997b92dc8) #10, !dbg !3585
  %_42.0 = extractvalue { ptr, i64 } %61, 0, !dbg !3585
  %_42.1 = extractvalue { ptr, i64 } %61, 1, !dbg !3585
  %62 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3587
  store ptr %_42.0, ptr %62, align 8, !dbg !3587
  %63 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3587
  store i64 %_42.1, ptr %63, align 8, !dbg !3587
  br label %bb1, !dbg !3588

bb29:                                             ; preds = %bb27
; call core::cmp::min
  %_50 = call i64 @_ZN4core3cmp3min17h04f45068448e0381E(i64 %_48.0, i64 %_52.0) #10, !dbg !3590
  %_53 = udiv i64 %_8.1, 8, !dbg !3591
  %64 = icmp uge i64 %_50, %_53, !dbg !3592
  %65 = zext i1 %64 to i8, !dbg !3592
  store i8 %65, ptr %was_balanced, align 1, !dbg !3592
  %66 = zext i1 %_48.1 to i8, !dbg !3593
  store i8 %66, ptr %was_partitioned, align 1, !dbg !3593
  %67 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3594
  %_58.0 = load ptr, ptr %67, align 8, !dbg !3594, !nonnull !24, !align !505, !noundef !24
  %68 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3594
  %_58.1 = load i64, ptr %68, align 8, !dbg !3594, !noundef !24
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17he70e0f6eb42f454eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_57, ptr align 8 %_58.0, i64 %_58.1, i64 %_48.0, ptr align 8 @alloc_971270e5ffee50b341d575bd26c9235e) #10, !dbg !3594
  %69 = getelementptr inbounds { ptr, i64 }, ptr %_57, i32 0, i32 0, !dbg !3595
  %left.0 = load ptr, ptr %69, align 8, !dbg !3595, !nonnull !24, !align !505, !noundef !24
  %70 = getelementptr inbounds { ptr, i64 }, ptr %_57, i32 0, i32 1, !dbg !3595
  %left.1 = load i64, ptr %70, align 8, !dbg !3595, !noundef !24
  %71 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 0, !dbg !3595
  store ptr %left.0, ptr %71, align 8, !dbg !3595
  %72 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 1, !dbg !3595
  store i64 %left.1, ptr %72, align 8, !dbg !3595
  call void @llvm.dbg.declare(metadata ptr %left.dbg.spill, metadata !3526, metadata !DIExpression()), !dbg !3596
  %73 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_57, i32 0, i32 1, !dbg !3597
  %74 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 0, !dbg !3597
  %right.0 = load ptr, ptr %74, align 8, !dbg !3597, !nonnull !24, !align !505, !noundef !24
  %75 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 1, !dbg !3597
  %right.1 = load i64, ptr %75, align 8, !dbg !3597, !noundef !24
  %76 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 0, !dbg !3597
  store ptr %right.0, ptr %76, align 8, !dbg !3597
  %77 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 1, !dbg !3597
  store i64 %right.1, ptr %77, align 8, !dbg !3597
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill, metadata !3528, metadata !DIExpression()), !dbg !3598
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17he70e0f6eb42f454eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_61, ptr align 8 %right.0, i64 %right.1, i64 1, ptr align 8 @alloc_06bcb3e9440cff471acdc9917714413b) #10, !dbg !3599
  %78 = getelementptr inbounds { ptr, i64 }, ptr %_61, i32 0, i32 0, !dbg !3600
  %pivot.0 = load ptr, ptr %78, align 8, !dbg !3600, !nonnull !24, !align !505, !noundef !24
  %79 = getelementptr inbounds { ptr, i64 }, ptr %_61, i32 0, i32 1, !dbg !3600
  %pivot.1 = load i64, ptr %79, align 8, !dbg !3600, !noundef !24
  %80 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 0, !dbg !3600
  store ptr %pivot.0, ptr %80, align 8, !dbg !3600
  %81 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 1, !dbg !3600
  store i64 %pivot.1, ptr %81, align 8, !dbg !3600
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill4, metadata !3529, metadata !DIExpression()), !dbg !3601
  %82 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_61, i32 0, i32 1, !dbg !3602
  %83 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 0, !dbg !3602
  %right.05 = load ptr, ptr %83, align 8, !dbg !3602, !nonnull !24, !align !505, !noundef !24
  %84 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 1, !dbg !3602
  %right.16 = load i64, ptr %84, align 8, !dbg !3602, !noundef !24
  %85 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 0, !dbg !3602
  store ptr %right.05, ptr %85, align 8, !dbg !3602
  %86 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 1, !dbg !3602
  store i64 %right.16, ptr %86, align 8, !dbg !3602
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill7, metadata !3531, metadata !DIExpression()), !dbg !3603
  %_65 = icmp ult i64 0, %pivot.1, !dbg !3604
  %87 = call i1 @llvm.expect.i1(i1 %_65, i1 true), !dbg !3604
  br i1 %87, label %bb34, label %panic8, !dbg !3604

panic3:                                           ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6a2abb486c72767951ddbfabb5cef306) #11, !dbg !3578
  unreachable, !dbg !3578

bb34:                                             ; preds = %bb29
  %pivot = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3605
  store ptr %pivot, ptr %pivot.dbg.spill9, align 8, !dbg !3605
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill9, metadata !3532, metadata !DIExpression()), !dbg !3606
  %_66 = icmp ult i64 %left.1, %right.16, !dbg !3607
  br i1 %_66, label %bb35, label %bb37, !dbg !3607

panic8:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 0, i64 %pivot.1, ptr align 8 @alloc_f8fe30ccfa6c382fc0c6802f54db9165) #11, !dbg !3604
  unreachable, !dbg !3604

bb37:                                             ; preds = %bb34
  store ptr %pivot, ptr %_76, align 8, !dbg !3608
  %_77 = load i32, ptr %limit, align 4, !dbg !3609, !noundef !24
  %88 = load ptr, ptr %_76, align 8, !dbg !3610, !align !505, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h167841c41c7f1248E(ptr align 8 %right.05, i64 %right.16, ptr align 8 %is_less, ptr align 8 %88, i32 %_77) #10, !dbg !3610
  %89 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3611
  store ptr %left.0, ptr %89, align 8, !dbg !3611
  %90 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3611
  store i64 %left.1, ptr %90, align 8, !dbg !3611
  br label %bb1, !dbg !3612

bb35:                                             ; preds = %bb34
  %_72 = load ptr, ptr %pred, align 8, !dbg !3613, !align !505, !noundef !24
  %_73 = load i32, ptr %limit, align 4, !dbg !3614, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h167841c41c7f1248E(ptr align 8 %left.0, i64 %left.1, ptr align 8 %is_less, ptr align 8 %_72, i32 %_73) #10, !dbg !3615
  %91 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3616
  store ptr %right.05, ptr %91, align 8, !dbg !3616
  %92 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3616
  store i64 %right.16, ptr %92, align 8, !dbg !3616
  store ptr %pivot, ptr %_74, align 8, !dbg !3617
  %93 = load ptr, ptr %_74, align 8, !dbg !3618, !align !505, !noundef !24
  store ptr %93, ptr %pred, align 8, !dbg !3618
  br label %bb1, !dbg !3612
}

; core::slice::sort::heapsort
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort8heapsort17h702116c078140a2cE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %0) unnamed_addr #2 !dbg !3619 {
start:
  %i.dbg.spill3 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_36 = alloca i64, align 8
  %_33 = alloca { { ptr, i64 }, i64 }, align 8
  %_26 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_22 = alloca { i64, i64 }, align 8
  %_19 = alloca { { ptr, i64 }, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %sift_down = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3621, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3622, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.declare(metadata ptr %sift_down, metadata !3623, metadata !DIExpression()), !dbg !3641
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3629, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !3633, metadata !DIExpression()), !dbg !3643
  store ptr %is_less, ptr %sift_down, align 8, !dbg !3644
  %_8 = udiv i64 %v.1, 2, !dbg !3645
  store i64 0, ptr %_7, align 8, !dbg !3646
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3646
  store i64 %_8, ptr %3, align 8, !dbg !3646
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3646
  %5 = load i64, ptr %4, align 8, !dbg !3646, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3646
  %7 = load i64, ptr %6, align 8, !dbg !3646, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %8 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h65b7d1992fe3aff5E(i64 %5, i64 %7) #10, !dbg !3646
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3646
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3646
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf2d885b31dabed3dE"(i64 %_6.0, i64 %_6.1) #10, !dbg !3646
  %_5.0 = extractvalue { i64, i64 } %9, 0, !dbg !3646
  %_5.1 = extractvalue { i64, i64 } %9, 1, !dbg !3646
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3646
  store i64 %_5.0, ptr %10, align 8, !dbg !3646
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3646
  store i64 %_5.1, ptr %11, align 8, !dbg !3646
  br label %bb4, !dbg !3647

bb4:                                              ; preds = %bb6, %start
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0a40464f3be5dc7aE"(ptr align 8 %iter) #10, !dbg !3642
  store { i64, i64 } %12, ptr %_13, align 8, !dbg !3642
  %_15 = load i64, ptr %_13, align 8, !dbg !3642, !range !1037, !noundef !24
  %13 = icmp eq i64 %_15, 0, !dbg !3642
  br i1 %13, label %bb8, label %bb6, !dbg !3642

bb8:                                              ; preds = %bb4
  store i64 1, ptr %_22, align 8, !dbg !3648
  %14 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3648
  store i64 %v.1, ptr %14, align 8, !dbg !3648
  %15 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 0, !dbg !3648
  %16 = load i64, ptr %15, align 8, !dbg !3648, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3648
  %18 = load i64, ptr %17, align 8, !dbg !3648, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %19 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h65b7d1992fe3aff5E(i64 %16, i64 %18) #10, !dbg !3648
  %_21.0 = extractvalue { i64, i64 } %19, 0, !dbg !3648
  %_21.1 = extractvalue { i64, i64 } %19, 1, !dbg !3648
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf2d885b31dabed3dE"(i64 %_21.0, i64 %_21.1) #10, !dbg !3648
  %_20.0 = extractvalue { i64, i64 } %20, 0, !dbg !3648
  %_20.1 = extractvalue { i64, i64 } %20, 1, !dbg !3648
  %21 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 0, !dbg !3648
  store i64 %_20.0, ptr %21, align 8, !dbg !3648
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 1, !dbg !3648
  store i64 %_20.1, ptr %22, align 8, !dbg !3648
  br label %bb11, !dbg !3649

bb6:                                              ; preds = %bb4
  %23 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3650
  %i = load i64, ptr %23, align 8, !dbg !3650, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3650
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3631, metadata !DIExpression()), !dbg !3651
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3652
  store ptr %v.0, ptr %24, align 8, !dbg !3652
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3652
  store i64 %v.1, ptr %25, align 8, !dbg !3652
  %26 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3652
  store i64 %i, ptr %26, align 8, !dbg !3652
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3652
  %28 = load ptr, ptr %27, align 8, !dbg !3652, !nonnull !24, !align !505, !noundef !24
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3652
  %30 = load i64, ptr %29, align 8, !dbg !3652, !noundef !24
  %31 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3652
  %32 = load i64, ptr %31, align 8, !dbg !3652, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hed9cd11bc89823d9E"(ptr align 8 %sift_down, ptr align 8 %28, i64 %30, i64 %32) #10, !dbg !3652
  br label %bb4, !dbg !3652

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %33 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0a40464f3be5dc7aE"(ptr align 8 %iter1) #10, !dbg !3643
  store { i64, i64 } %33, ptr %_26, align 8, !dbg !3643
  %_28 = load i64, ptr %_26, align 8, !dbg !3643, !range !1037, !noundef !24
  %34 = icmp eq i64 %_28, 0, !dbg !3643
  br i1 %34, label %bb14, label %bb13, !dbg !3643

bb14:                                             ; preds = %bb11
  ret void, !dbg !3653

bb13:                                             ; preds = %bb11
  %35 = getelementptr inbounds { i64, i64 }, ptr %_26, i32 0, i32 1, !dbg !3654
  %i2 = load i64, ptr %35, align 8, !dbg !3654, !noundef !24
  store i64 %i2, ptr %i.dbg.spill3, align 8, !dbg !3654
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill3, metadata !3635, metadata !DIExpression()), !dbg !3655
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h896a93d8011e65cdE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %i2, ptr align 8 @alloc_dc7cc06f65f47d89307805f9ed1e1cb4) #10, !dbg !3656
  store i64 %i2, ptr %_36, align 8, !dbg !3657
  %36 = load i64, ptr %_36, align 8, !dbg !3658, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %37 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56804621d2071613E"(ptr align 8 %v.0, i64 %v.1, i64 %36, ptr align 8 @alloc_218d542ba7d42d9731521fd943356c38) #10, !dbg !3658
  %_35.0 = extractvalue { ptr, i64 } %37, 0, !dbg !3658
  %_35.1 = extractvalue { ptr, i64 } %37, 1, !dbg !3658
  %38 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3659
  store ptr %_35.0, ptr %38, align 8, !dbg !3659
  %39 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3659
  store i64 %_35.1, ptr %39, align 8, !dbg !3659
  %40 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3659
  store i64 0, ptr %40, align 8, !dbg !3659
  %41 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3659
  %42 = load ptr, ptr %41, align 8, !dbg !3659, !nonnull !24, !align !505, !noundef !24
  %43 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3659
  %44 = load i64, ptr %43, align 8, !dbg !3659, !noundef !24
  %45 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3659
  %46 = load i64, ptr %45, align 8, !dbg !3659, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hed9cd11bc89823d9E"(ptr align 8 %sift_down, ptr align 8 %42, i64 %44, i64 %46) #10, !dbg !3659
  br label %bb11, !dbg !3659

bb7:                                              ; No predecessors!
  unreachable, !dbg !3642
}

; core::slice::sort::heapsort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hed9cd11bc89823d9E"(ptr align 8 %_1, ptr align 8 %v.0, i64 %v.1, i64 %0) unnamed_addr #0 !dbg !3660 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_21 = alloca { ptr, ptr }, align 8
  %child = alloca i64, align 8
  %node = alloca i64, align 8
  store i64 %0, ptr %node, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !3667, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !3670
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3665, metadata !DIExpression()), !dbg !3671
  call void @llvm.dbg.declare(metadata ptr %node, metadata !3666, metadata !DIExpression()), !dbg !3672
  call void @llvm.dbg.declare(metadata ptr %child, metadata !3668, metadata !DIExpression()), !dbg !3673
  br label %bb1, !dbg !3674

bb1:                                              ; preds = %bb16, %start
  %_6 = load i64, ptr %node, align 8, !dbg !3675, !noundef !24
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 %_6), !dbg !3676
  %_7.0 = extractvalue { i64, i1 } %3, 0, !dbg !3676
  %_7.1 = extractvalue { i64, i1 } %3, 1, !dbg !3676
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !3676
  br i1 %4, label %panic, label %bb2, !dbg !3676

bb2:                                              ; preds = %bb1
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7.0, i64 1), !dbg !3676
  %_8.0 = extractvalue { i64, i1 } %5, 0, !dbg !3676
  %_8.1 = extractvalue { i64, i1 } %5, 1, !dbg !3676
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3676
  br i1 %6, label %panic1, label %bb3, !dbg !3676

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_8c633453631874cfb45135c562495182) #11, !dbg !3676
  unreachable, !dbg !3676

bb3:                                              ; preds = %bb2
  store i64 %_8.0, ptr %child, align 8, !dbg !3676
  %_10 = load i64, ptr %child, align 8, !dbg !3677, !noundef !24
  %_9 = icmp uge i64 %_10, %v.1, !dbg !3677
  br i1 %_9, label %bb18, label %bb4, !dbg !3677

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_8c633453631874cfb45135c562495182) #11, !dbg !3676
  unreachable, !dbg !3676

bb4:                                              ; preds = %bb3
  %_15 = load i64, ptr %child, align 8, !dbg !3678, !noundef !24
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 1), !dbg !3678
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !3678
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !3678
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !3678
  br i1 %8, label %panic2, label %bb5, !dbg !3678

bb18:                                             ; preds = %bb14, %bb3
  ret void, !dbg !3679

bb5:                                              ; preds = %bb4
  %_13 = icmp ult i64 %_16.0, %v.1, !dbg !3678
  br i1 %_13, label %bb6, label %bb12, !dbg !3678

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_cced75eb33ad0d231589a125c7f2c71e) #11, !dbg !3678
  unreachable, !dbg !3678

bb12:                                             ; preds = %bb11, %bb5
  %_49 = load ptr, ptr %_1, align 8, !dbg !3680, !nonnull !24, !align !505, !noundef !24
  %_37 = load i64, ptr %node, align 8, !dbg !3681, !noundef !24
  %_39 = icmp ult i64 %_37, %v.1, !dbg !3682
  %9 = call i1 @llvm.expect.i1(i1 %_39, i1 true), !dbg !3682
  br i1 %9, label %bb13, label %panic7, !dbg !3682

bb6:                                              ; preds = %bb5
  %_48 = load ptr, ptr %_1, align 8, !dbg !3683, !nonnull !24, !align !505, !noundef !24
  %_23 = load i64, ptr %child, align 8, !dbg !3684, !noundef !24
  %_25 = icmp ult i64 %_23, %v.1, !dbg !3685
  %10 = call i1 @llvm.expect.i1(i1 %_25, i1 true), !dbg !3685
  br i1 %10, label %bb7, label %panic3, !dbg !3685

bb7:                                              ; preds = %bb6
  %_22 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_23, !dbg !3686
  %_28 = load i64, ptr %child, align 8, !dbg !3687, !noundef !24
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_28, i64 1), !dbg !3687
  %_29.0 = extractvalue { i64, i1 } %11, 0, !dbg !3687
  %_29.1 = extractvalue { i64, i1 } %11, 1, !dbg !3687
  %12 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !3687
  br i1 %12, label %panic4, label %bb8, !dbg !3687

panic3:                                           ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %_23, i64 %v.1, ptr align 8 @alloc_02d41e7169598a3cfcfd3f0d1c833ec2) #11, !dbg !3685
  unreachable, !dbg !3685

bb8:                                              ; preds = %bb7
  %_31 = icmp ult i64 %_29.0, %v.1, !dbg !3688
  %13 = call i1 @llvm.expect.i1(i1 %_31, i1 true), !dbg !3688
  br i1 %13, label %bb9, label %panic5, !dbg !3688

panic4:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_794be56d42be9995e3a84c84d26159ed) #11, !dbg !3687
  unreachable, !dbg !3687

bb9:                                              ; preds = %bb8
  %_26 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_29.0, !dbg !3689
  store ptr %_22, ptr %_21, align 8, !dbg !3683
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3683
  store ptr %_26, ptr %14, align 8, !dbg !3683
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 0, !dbg !3683
  %16 = load ptr, ptr %15, align 8, !dbg !3683, !nonnull !24, !align !505, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3683
  %18 = load ptr, ptr %17, align 8, !dbg !3683, !nonnull !24, !align !505, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_20 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17he8ad2fd493a493d0E"(ptr align 8 %_48, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3683
  %_19 = zext i1 %_20 to i64, !dbg !3683
  %19 = load i64, ptr %child, align 8, !dbg !3690, !noundef !24
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 %_19), !dbg !3690
  %_32.0 = extractvalue { i64, i1 } %20, 0, !dbg !3690
  %_32.1 = extractvalue { i64, i1 } %20, 1, !dbg !3690
  %21 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !3690
  br i1 %21, label %panic6, label %bb11, !dbg !3690

panic5:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %_29.0, i64 %v.1, ptr align 8 @alloc_d32b57d7e285e3b164a125d44291af3f) #11, !dbg !3688
  unreachable, !dbg !3688

bb11:                                             ; preds = %bb9
  store i64 %_32.0, ptr %child, align 8, !dbg !3690
  br label %bb12, !dbg !3691

panic6:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_3f7ac4164e6f54924783af0ed6bc3c8d) #11, !dbg !3690
  unreachable, !dbg !3690

bb13:                                             ; preds = %bb12
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_37, !dbg !3692
  %_41 = load i64, ptr %child, align 8, !dbg !3693, !noundef !24
  %_43 = icmp ult i64 %_41, %v.1, !dbg !3694
  %22 = call i1 @llvm.expect.i1(i1 %_43, i1 true), !dbg !3694
  br i1 %22, label %bb14, label %panic8, !dbg !3694

panic7:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %_37, i64 %v.1, ptr align 8 @alloc_5714221f35142e87516e8a17190398c5) #11, !dbg !3682
  unreachable, !dbg !3682

bb14:                                             ; preds = %bb13
  %_40 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_41, !dbg !3695
  store ptr %_36, ptr %_35, align 8, !dbg !3680
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3680
  store ptr %_40, ptr %23, align 8, !dbg !3680
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3680
  %25 = load ptr, ptr %24, align 8, !dbg !3680, !nonnull !24, !align !505, !noundef !24
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3680
  %27 = load ptr, ptr %26, align 8, !dbg !3680, !nonnull !24, !align !505, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_34 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17he8ad2fd493a493d0E"(ptr align 8 %_49, ptr align 8 %25, ptr align 8 %27) #10, !dbg !3680
  %_33 = xor i1 %_34, true, !dbg !3696
  br i1 %_33, label %bb18, label %bb16, !dbg !3696

panic8:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %_41, i64 %v.1, ptr align 8 @alloc_8b3b0b984669970c12a2c2d899b23d16) #11, !dbg !3694
  unreachable, !dbg !3694

bb16:                                             ; preds = %bb14
  %_45 = load i64, ptr %node, align 8, !dbg !3697, !noundef !24
  %_46 = load i64, ptr %child, align 8, !dbg !3698, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h896a93d8011e65cdE"(ptr align 8 %v.0, i64 %v.1, i64 %_45, i64 %_46, ptr align 8 @alloc_4685547f2c3cd5dc1819afd3ce6280d4) #10, !dbg !3699
  %_47 = load i64, ptr %child, align 8, !dbg !3700, !noundef !24
  store i64 %_47, ptr %node, align 8, !dbg !3701
  br label %bb1, !dbg !3674
}

; core::slice::sort::partition
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort9partition17h0f3cc3bbc0a537a0E(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !3702 {
start:
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %was_partitioned.dbg.spill = alloca i8, align 1
  %mid.dbg.spill = alloca i64, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_60 = alloca { i64, i64 }, align 8
  %_47 = alloca { ptr, ptr }, align 8
  %_41 = alloca i8, align 1
  %_35 = alloca { ptr, ptr }, align 8
  %_30 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_16 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_6 = alloca { i64, i8 }, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3706, metadata !DIExpression()), !dbg !3727
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3707, metadata !DIExpression()), !dbg !3728
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3708, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3717, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !3719, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.declare(metadata ptr %l, metadata !3723, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.declare(metadata ptr %r, metadata !3725, metadata !DIExpression()), !dbg !3733
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h896a93d8011e65cdE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_a32d8ca4e4d506b0d34a470e4dcb5cd1) #10, !dbg !3734
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17he70e0f6eb42f454eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_10, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_e52ab9305e2b15d74c4e9ac02c87db27) #10, !dbg !3735
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !3736
  %pivot.0 = load ptr, ptr %3, align 8, !dbg !3736, !nonnull !24, !align !505, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !3736
  %pivot.1 = load i64, ptr %4, align 8, !dbg !3736, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !3736
  store ptr %pivot.0, ptr %5, align 8, !dbg !3736
  %6 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !3736
  store i64 %pivot.1, ptr %6, align 8, !dbg !3736
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !3712, metadata !DIExpression()), !dbg !3737
  %7 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !3738
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !3738
  %v.02 = load ptr, ptr %8, align 8, !dbg !3738, !nonnull !24, !align !505, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !3738
  %v.13 = load i64, ptr %9, align 8, !dbg !3738, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !3738
  store ptr %v.02, ptr %10, align 8, !dbg !3738
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !3738
  store i64 %v.13, ptr %11, align 8, !dbg !3738
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !3714, metadata !DIExpression()), !dbg !3739
  %_14 = icmp ult i64 0, %pivot.1, !dbg !3740
  %12 = call i1 @llvm.expect.i1(i1 %_14, i1 true), !dbg !3740
  br i1 %12, label %bb3, label %panic, !dbg !3740

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3741
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !3741
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !3715, metadata !DIExpression()), !dbg !3742
; call core::ptr::read
  call void @_ZN4core3ptr4read17hd09643a295aa6f4fE(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_16, ptr %pivot5) #10, !dbg !3743
  call void @llvm.dbg.declare(metadata ptr %_16, metadata !980, metadata !DIExpression()), !dbg !3744
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_16, i64 24, i1 false), !dbg !3746
  store ptr %tmp, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2282, metadata !DIExpression()), !dbg !3747
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !3749
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !3749
  store ptr %pivot5, ptr %13, align 8, !dbg !3749
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2282, metadata !DIExpression()), !dbg !3750
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !3752
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !3721, metadata !DIExpression()), !dbg !3753
  store i64 0, ptr %l, align 8, !dbg !3754
  store i64 %v.13, ptr %r, align 8, !dbg !3755
  br label %bb8, !dbg !3756

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 0, i64 %pivot.1, ptr align 8 @alloc_0b2a738361d208826a072b92b3acda46) #11, !dbg !3740
  unreachable, !dbg !3740

bb8:                                              ; preds = %bb15, %bb3
  %_32 = load i64, ptr %l, align 8, !dbg !3757, !noundef !24
  %_33 = load i64, ptr %r, align 8, !dbg !3758, !noundef !24
  %_31 = icmp ult i64 %_32, %_33, !dbg !3757
  br i1 %_31, label %bb10, label %bb9, !dbg !3757

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_30, align 1, !dbg !3757
  br label %bb11, !dbg !3757

bb10:                                             ; preds = %bb8
  %_39 = load i64, ptr %l, align 8, !dbg !3759, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_37 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %v.02, i64 %v.13, i64 %_39) #10, !dbg !3760
  store ptr %_37, ptr %_35, align 8, !dbg !3761
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3761
  store ptr %tmp, ptr %14, align 8, !dbg !3761
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3761
  %16 = load ptr, ptr %15, align 8, !dbg !3761, !nonnull !24, !align !505, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3761
  %18 = load ptr, ptr %17, align 8, !dbg !3761, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3761
  %19 = zext i1 %_34 to i8, !dbg !3757
  store i8 %19, ptr %_30, align 1, !dbg !3757
  br label %bb11, !dbg !3757

bb11:                                             ; preds = %bb9, %bb10
  %20 = load i8, ptr %_30, align 1, !dbg !3757, !range !231, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3757
  br i1 %21, label %bb14, label %bb16, !dbg !3757

bb16:                                             ; preds = %bb24, %bb11
  %_43 = load i64, ptr %l, align 8, !dbg !3762, !noundef !24
  %_44 = load i64, ptr %r, align 8, !dbg !3763, !noundef !24
  %_42 = icmp ult i64 %_43, %_44, !dbg !3762
  br i1 %_42, label %bb18, label %bb17, !dbg !3762

bb14:                                             ; preds = %bb11
  %22 = load i64, ptr %l, align 8, !dbg !3764, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !3764
  %_40.0 = extractvalue { i64, i1 } %23, 0, !dbg !3764
  %_40.1 = extractvalue { i64, i1 } %23, 1, !dbg !3764
  %24 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false), !dbg !3764
  br i1 %24, label %panic8, label %bb15, !dbg !3764

bb15:                                             ; preds = %bb14
  store i64 %_40.0, ptr %l, align 8, !dbg !3764
  br label %bb8, !dbg !3756

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_96c6545aa6432add279027414fe61766) #11, !dbg !3764
  unreachable, !dbg !3764

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_41, align 1, !dbg !3762
  br label %bb19, !dbg !3762

bb18:                                             ; preds = %bb16
  %_52 = load i64, ptr %r, align 8, !dbg !3765, !noundef !24
  %_53.0 = sub i64 %_52, 1, !dbg !3765
  %_53.1 = icmp ult i64 %_52, 1, !dbg !3765
  %25 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !3765
  br i1 %25, label %panic9, label %bb20, !dbg !3765

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_49 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E"(ptr align 8 %v.02, i64 %v.13, i64 %_53.0) #10, !dbg !3766
  store ptr %_49, ptr %_47, align 8, !dbg !3767
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !3767
  store ptr %tmp, ptr %26, align 8, !dbg !3767
  %27 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 0, !dbg !3767
  %28 = load ptr, ptr %27, align 8, !dbg !3767, !nonnull !24, !align !505, !noundef !24
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !3767
  %30 = load ptr, ptr %29, align 8, !dbg !3767, !nonnull !24, !align !505, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_46 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E"(ptr align 8 %is_less, ptr align 8 %28, ptr align 8 %30) #10, !dbg !3767
  %_45 = xor i1 %_46, true, !dbg !3768
  %31 = zext i1 %_45 to i8, !dbg !3762
  store i8 %31, ptr %_41, align 1, !dbg !3762
  br label %bb19, !dbg !3762

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_0b6e8a57da681e1fb7c4d0e2204e6a73) #11, !dbg !3765
  unreachable, !dbg !3765

bb19:                                             ; preds = %bb17, %bb20
  %32 = load i8, ptr %_41, align 1, !dbg !3762, !range !231, !noundef !24
  %33 = trunc i8 %32 to i1, !dbg !3762
  br i1 %33, label %bb23, label %bb25, !dbg !3762

bb25:                                             ; preds = %bb19
  %_56 = load i64, ptr %l, align 8, !dbg !3769, !noundef !24
  %_61 = load i64, ptr %l, align 8, !dbg !3770, !noundef !24
  %_62 = load i64, ptr %r, align 8, !dbg !3771, !noundef !24
  store i64 %_61, ptr %_60, align 8, !dbg !3770
  %34 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !3770
  store i64 %_62, ptr %34, align 8, !dbg !3770
  %35 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 0, !dbg !3772
  %36 = load i64, ptr %35, align 8, !dbg !3772, !noundef !24
  %37 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !3772
  %38 = load i64, ptr %37, align 8, !dbg !3772, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %39 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h0704c58ab2009668E"(ptr align 8 %v.02, i64 %v.13, i64 %36, i64 %38, ptr align 8 @alloc_b0c68aa41aa72af376e4904f7447f27d) #10, !dbg !3772
  %_59.0 = extractvalue { ptr, i64 } %39, 0, !dbg !3772
  %_59.1 = extractvalue { ptr, i64 } %39, 1, !dbg !3772
; call core::slice::sort::partition_in_blocks
  %_57 = call i64 @_ZN4core5slice4sort19partition_in_blocks17h802e2d36a30c7fe0E(ptr align 8 %_59.0, i64 %_59.1, ptr align 8 %tmp, ptr align 8 %is_less) #10, !dbg !3773
  %40 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_56, i64 %_57), !dbg !3769
  %_63.0 = extractvalue { i64, i1 } %40, 0, !dbg !3769
  %_63.1 = extractvalue { i64, i1 } %40, 1, !dbg !3769
  %41 = call i1 @llvm.expect.i1(i1 %_63.1, i1 false), !dbg !3769
  br i1 %41, label %panic11, label %bb28, !dbg !3769

bb23:                                             ; preds = %bb19
  %42 = load i64, ptr %r, align 8, !dbg !3774, !noundef !24
  %_54.0 = sub i64 %42, 1, !dbg !3774
  %_54.1 = icmp ult i64 %42, 1, !dbg !3774
  %43 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !3774
  br i1 %43, label %panic10, label %bb24, !dbg !3774

bb24:                                             ; preds = %bb23
  store i64 %_54.0, ptr %r, align 8, !dbg !3774
  br label %bb16, !dbg !3775

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_a38e39bd8e066eb11cb79be2a1a30355) #11, !dbg !3774
  unreachable, !dbg !3774

bb28:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !3776, !noundef !24
  %_66 = load i64, ptr %r, align 8, !dbg !3777, !noundef !24
  %_64 = icmp uge i64 %_65, %_66, !dbg !3776
  store i64 %_63.0, ptr %_6, align 8, !dbg !3778
  %44 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3778
  %45 = zext i1 %_64 to i8, !dbg !3778
  store i8 %45, ptr %44, align 8, !dbg !3778
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hc7fa04d0e9e7b875E"(ptr %_pivot_guard) #10, !dbg !3779
  %mid = load i64, ptr %_6, align 8, !dbg !3780, !noundef !24
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3780
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3709, metadata !DIExpression()), !dbg !3781
  %46 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3782
  %47 = load i8, ptr %46, align 8, !dbg !3782, !range !231, !noundef !24
  %was_partitioned = trunc i8 %47 to i1, !dbg !3782
  %48 = zext i1 %was_partitioned to i8, !dbg !3782
  store i8 %48, ptr %was_partitioned.dbg.spill, align 1, !dbg !3782
  call void @llvm.dbg.declare(metadata ptr %was_partitioned.dbg.spill, metadata !3711, metadata !DIExpression()), !dbg !3783
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h896a93d8011e65cdE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %mid, ptr align 8 @alloc_62f31cc339340f8d2589d3fbbff1b89f) #10, !dbg !3784
  store i64 %mid, ptr %0, align 8, !dbg !3785
  %49 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !3785
  %50 = zext i1 %was_partitioned to i8, !dbg !3785
  store i8 %50, ptr %49, align 8, !dbg !3785
  %51 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !3786
  %52 = load i64, ptr %51, align 8, !dbg !3786, !noundef !24
  %53 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !3786
  %54 = load i8, ptr %53, align 8, !dbg !3786, !range !231, !noundef !24
  %55 = trunc i8 %54 to i1, !dbg !3786
  %56 = zext i1 %55 to i8, !dbg !3786
  %57 = insertvalue { i64, i8 } poison, i64 %52, 0, !dbg !3786
  %58 = insertvalue { i64, i8 } %57, i8 %56, 1, !dbg !3786
  ret { i64, i8 } %58, !dbg !3786

panic11:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_b173b94e8487e85973e5816a197e44e8) #11, !dbg !3769
  unreachable, !dbg !3769
}

; core::slice::sort::quicksort
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort9quicksort17h3f0b1e0165be5174E(ptr align 8 %v.0, i64 %v.1, ptr align 1 %0) unnamed_addr #1 !dbg !3787 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %limit.dbg.spill = alloca i32, align 4
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3791, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3792, metadata !DIExpression()), !dbg !3796
  br i1 false, label %bb1, label %bb2, !dbg !3797

bb2:                                              ; preds = %start
  store i64 %v.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3798, metadata !DIExpression()), !dbg !3801
  %4 = call i64 @llvm.ctlz.i64(i64 %v.1, i1 false), !dbg !3803
  store i64 %4, ptr %1, align 8, !dbg !3803
  %_2.i = load i64, ptr %1, align 8, !dbg !3803, !noundef !24
  %5 = trunc i64 %_2.i to i32, !dbg !3803
  %_8.0 = sub i32 64, %5, !dbg !3804
  %_8.1 = icmp ult i32 64, %5, !dbg !3804
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3804
  br i1 %6, label %panic, label %bb4, !dbg !3804

bb1:                                              ; preds = %start
  br label %bb6, !dbg !3805

bb6:                                              ; preds = %bb4, %bb1
  ret void, !dbg !3806

bb4:                                              ; preds = %bb2
  store i32 %_8.0, ptr %limit.dbg.spill, align 4, !dbg !3804
  call void @llvm.dbg.declare(metadata ptr %limit.dbg.spill, metadata !3793, metadata !DIExpression()), !dbg !3807
  store ptr null, ptr %_11, align 8, !dbg !3808
  %7 = load ptr, ptr %_11, align 8, !dbg !3809, !align !505, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h167841c41c7f1248E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less, ptr align 8 %7, i32 %_8.0) #10, !dbg !3809
  br label %bb6, !dbg !3805

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_da17763e772b00039467b49b69f200eb) #11, !dbg !3804
  unreachable, !dbg !3804
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha9e84043736c1da0E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !3810 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3815, metadata !DIExpression()), !dbg !3817
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3816, metadata !DIExpression()), !dbg !3818
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h06c169b84a427d0eE"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3819
  %6 = extractvalue { ptr, i64 } %5, 0, !dbg !3819
  %7 = extractvalue { ptr, i64 } %5, 1, !dbg !3819
  %8 = insertvalue { ptr, i64 } poison, ptr %6, 0, !dbg !3820
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !3820
  ret { ptr, i64 } %9, !dbg !3820
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h021e02b7974eccafE"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !3821 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3826, metadata !DIExpression()), !dbg !3830
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3827, metadata !DIExpression()), !dbg !3831
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hda782a337d58430aE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3832
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3832
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3832
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !3833
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !3833
  ret { ptr, i64 } %5, !dbg !3833
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h0704c58ab2009668E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !3834 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3838, metadata !DIExpression()), !dbg !3840
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3839, metadata !DIExpression()), !dbg !3841
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d4cc9f120219a7eE"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3842
  %_3.0 = extractvalue { ptr, i64 } %5, 0, !dbg !3842
  %_3.1 = extractvalue { ptr, i64 } %5, 1, !dbg !3842
  %6 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !3843
  %7 = insertvalue { ptr, i64 } %6, i64 %_3.1, 1, !dbg !3843
  ret { ptr, i64 } %7, !dbg !3843
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1d91165492a26d83E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !3844 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3848, metadata !DIExpression()), !dbg !3852
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3849, metadata !DIExpression()), !dbg !3853
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5fa0145d511e9c00E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3854
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3854
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3854
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !3855
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !3855
  ret { ptr, i64 } %5, !dbg !3855
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56804621d2071613E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !3856 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3860, metadata !DIExpression()), !dbg !3864
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3861, metadata !DIExpression()), !dbg !3865
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h6d8936b6797b6854E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3866
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3866
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3866
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !3867
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !3867
  ret { ptr, i64 } %5, !dbg !3867
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h416681f6f5421894E"(ptr sret(%"bootinfo::TlsTemplate") %0, ptr %self, ptr %default) unnamed_addr #0 !dbg !3868 {
start:
  %_5 = alloca i8, align 1
  %x = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3884, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.declare(metadata ptr %default, metadata !3885, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.declare(metadata ptr %x, metadata !3886, metadata !DIExpression()), !dbg !3890
  store i8 0, ptr %_5, align 1, !dbg !3891
  store i8 1, ptr %_5, align 1, !dbg !3891
  %_3 = load i64, ptr %self, align 8, !dbg !3891, !range !1037, !noundef !24
  %1 = icmp eq i64 %_3, 0, !dbg !3892
  br i1 %1, label %bb1, label %bb3, !dbg !3892

bb1:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !3893
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %default, i64 24, i1 false), !dbg !3893
  br label %bb6, !dbg !3893

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %self, i32 0, i32 1, !dbg !3894
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %2, i64 24, i1 false), !dbg !3894
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %x, i64 24, i1 false), !dbg !3895
  br label %bb6, !dbg !3896

bb2:                                              ; No predecessors!
  unreachable, !dbg !3891

bb6:                                              ; preds = %bb1, %bb3
  %3 = load i8, ptr %_5, align 1, !dbg !3897, !range !231, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !3897
  br i1 %4, label %bb5, label %bb4, !dbg !3897

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !3898

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !3897
}

; <core::cmp::Ordering as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc945fd9699462719E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !3899 {
start:
  %__arg1_tag.dbg.spill = alloca i8, align 1
  %__self_tag.dbg.spill = alloca i8, align 1
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3905, metadata !DIExpression()), !dbg !3911
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !3906, metadata !DIExpression()), !dbg !3911
  %__self_tag = load i8, ptr %self, align 1, !dbg !3911, !range !724, !noundef !24
  store i8 %__self_tag, ptr %__self_tag.dbg.spill, align 1, !dbg !3911
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill, metadata !3907, metadata !DIExpression()), !dbg !3912
  %__arg1_tag = load i8, ptr %other, align 1, !dbg !3912, !range !724, !noundef !24
  store i8 %__arg1_tag, ptr %__arg1_tag.dbg.spill, align 1, !dbg !3912
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill, metadata !3909, metadata !DIExpression()), !dbg !3913
  %0 = icmp eq i8 %__self_tag, %__arg1_tag, !dbg !3913
  ret i1 %0, !dbg !3914
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he62b74e3d16636bcE"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !3915 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3923, metadata !DIExpression()), !dbg !3925
  %2 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !3926
  %3 = insertvalue { ptr, ptr } %2, ptr %self.1, 1, !dbg !3926
  ret { ptr, ptr } %3, !dbg !3926
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h1d6d7b937a203b74E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !3927 {
start:
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, { ptr, i64 } }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3932, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3934, metadata !DIExpression()), !dbg !3937
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !3933, metadata !DIExpression()), !dbg !3938
  br i1 true, label %bb1, label %bb2, !dbg !3939

bb2:                                              ; preds = %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hede7f674f02cd84aE.exit", %start
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h574f85348a0cba07E"(ptr %slice.0, i64 %slice.1) #10, !dbg !3940
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !3941
  store i64 %self, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !209, metadata !DIExpression()), !dbg !3943
  %2 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_6, i64 %self, !dbg !3944
  ret ptr %2, !dbg !3945

bb1:                                              ; preds = %start
  store i64 %self, ptr %_5, align 8, !dbg !3939
  %3 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !3939
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !3939
  store ptr %slice.0, ptr %4, align 8, !dbg !3939
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !3939
  store i64 %slice.1, ptr %5, align 8, !dbg !3939
  %6 = load i64, ptr %_5, align 8, !dbg !3939, !noundef !24
  %7 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !3939
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !3939
  %9 = load ptr, ptr %8, align 8, !dbg !3939, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !3939
  %11 = load i64, ptr %10, align 8, !dbg !3939, !noundef !24
  store i64 %6, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !3946, metadata !DIExpression()), !dbg !3953
  store ptr %9, ptr %slice.dbg.spill.i, align 8
  %12 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %11, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !3952, metadata !DIExpression()), !dbg !3953
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5092485984f6bd12E"(ptr %9, i64 %11) #10, !dbg !3955
  %_4.i = icmp ult i64 %6, %_5.i, !dbg !3957
  %_3.i = xor i1 %_4.i, true, !dbg !3958
  br i1 %_3.i, label %bb2.i, label %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hede7f674f02cd84aE.exit", !dbg !3958

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1 @alloc_b3b3c2a7efcea294ef431b7ed1abebea, i64 97) #11, !dbg !3959
  unreachable, !dbg !3959

"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hede7f674f02cd84aE.exit": ; preds = %bb1
  br label %bb2, !dbg !3939
}

; <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h77dec7ed114c43caE"(ptr align 8 %self) unnamed_addr #1 !dbg !3960 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3966, metadata !DIExpression()), !dbg !3967
  %_3 = load ptr, ptr %self, align 8, !dbg !3968, !noundef !24
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !3969
  %_4 = load ptr, ptr %0, align 8, !dbg !3969, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE(ptr %_3, ptr %_4, i64 1) #10, !dbg !3970
  ret void, !dbg !3971
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdd40061f16302badE"(ptr align 8 %self) unnamed_addr #0 !dbg !3972 {
start:
  %self.dbg.spill.i2.i = alloca ptr, align 8
  %self.dbg.spill.i1.i = alloca ptr, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %old.dbg.spill.i = alloca ptr, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %0 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %1 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3979, metadata !DIExpression()), !dbg !3980
  %2 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !3981
  %_5 = load ptr, ptr %2, align 8, !dbg !3981, !nonnull !24, !noundef !24
  store ptr %_5, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3982, metadata !DIExpression()), !dbg !3987
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h80913f6eb8ff5050E"(ptr %_5) #10, !dbg !3981
  %_2 = xor i1 %_3, true, !dbg !3989
  call void @llvm.assume(i1 %_2), !dbg !3990
  br i1 true, label %bb3, label %bb5, !dbg !3991

bb5:                                              ; preds = %bb3, %start
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !3992
  %_13 = load ptr, ptr %3, align 8, !dbg !3992, !nonnull !24, !noundef !24
  store ptr %_13, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3982, metadata !DIExpression()), !dbg !3993
  %_14 = load ptr, ptr %self, align 8, !dbg !3992, !noundef !24
  %_10 = icmp eq ptr %_13, %_14, !dbg !3992
  br i1 %_10, label %bb7, label %bb8, !dbg !3992

bb3:                                              ; preds = %start
  %_9 = load ptr, ptr %self, align 8, !dbg !3995, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha851001275c507fbE"(ptr %_9) #10, !dbg !3995
  %_7 = xor i1 %_8, true, !dbg !3996
  call void @llvm.assume(i1 %_7), !dbg !3997
  br label %bb5, !dbg !3998

bb8:                                              ; preds = %bb5
  store ptr %self, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3999, metadata !DIExpression()), !dbg !4007
  store i64 1, ptr %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill.i, metadata !4004, metadata !DIExpression()), !dbg !4009
  %4 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4010
  %_9.i = load ptr, ptr %4, align 8, !dbg !4010, !nonnull !24, !noundef !24
  store ptr %_9.i, ptr %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2.i, metadata !3982, metadata !DIExpression()), !dbg !4011
  store ptr %_9.i, ptr %old.dbg.spill.i, align 8, !dbg !4010
  call void @llvm.dbg.declare(metadata ptr %old.dbg.spill.i, metadata !4005, metadata !DIExpression()), !dbg !4013
  %5 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4014
  %_13.i = load ptr, ptr %5, align 8, !dbg !4014, !nonnull !24, !noundef !24
  store ptr %_13.i, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !3982, metadata !DIExpression()), !dbg !4015
  store ptr %_13.i, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !265, metadata !DIExpression()), !dbg !4017
  store i64 1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !271, metadata !DIExpression()), !dbg !4019
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_13.i, i64 1, !dbg !4020
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_10.i = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5580be51254bb83eE"(ptr %6) #10, !dbg !4021
  %7 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4022
  store ptr %_10.i, ptr %7, align 8, !dbg !4022
  store ptr %_9.i, ptr %0, align 8, !dbg !4023
  %8 = load ptr, ptr %0, align 8, !dbg !4024, !noundef !24
  store ptr %8, ptr %1, align 8, !dbg !4025
  br label %bb10, !dbg !4026

bb7:                                              ; preds = %bb5
  store ptr null, ptr %1, align 8, !dbg !4027
  br label %bb10, !dbg !4026

bb10:                                             ; preds = %bb8, %bb7
  %9 = load ptr, ptr %1, align 8, !dbg !4028, !align !505, !noundef !24
  ret ptr %9, !dbg !4028
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17hcc2d0912bee039a4E"(ptr align 8 %self) unnamed_addr #0 !dbg !4029 {
start:
  %self.dbg.spill.i7 = alloca ptr, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %x.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_19 = alloca ptr, align 8
  %_14 = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  %predicate = alloca %"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]", align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4034, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.declare(metadata ptr %predicate, metadata !4035, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4036, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.declare(metadata ptr %i, metadata !4040, metadata !DIExpression()), !dbg !4049
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4050
  %start1 = load ptr, ptr %1, align 8, !dbg !4050, !nonnull !24, !noundef !24
  store ptr %start1, ptr %start.dbg.spill, align 8, !dbg !4050
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !4038, metadata !DIExpression()), !dbg !4051
  br i1 false, label %bb1, label %bb5, !dbg !4051

bb5:                                              ; preds = %start
  %_10 = load ptr, ptr %self, align 8, !dbg !4051, !noundef !24
  store ptr %start1, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !3982, metadata !DIExpression()), !dbg !4052
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %2 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hce918766f5f8b5ffE"(ptr %_10, ptr %start1) #10, !dbg !4051
  store i64 %2, ptr %n, align 8, !dbg !4051
  br label %bb7, !dbg !4051

bb1:                                              ; preds = %start
  %_7 = load ptr, ptr %self, align 8, !dbg !4051, !noundef !24
  store ptr %_7, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !528, metadata !DIExpression()), !dbg !4054
  store ptr %_7, ptr %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i7, metadata !535, metadata !DIExpression()), !dbg !4056
  %3 = ptrtoint ptr %_7 to i64, !dbg !4058
  store ptr %start1, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !3982, metadata !DIExpression()), !dbg !4059
  store ptr %start1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3363, metadata !DIExpression()), !dbg !4061
  store ptr %start1, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !1256, metadata !DIExpression()), !dbg !4063
  %4 = ptrtoint ptr %start1 to i64, !dbg !4065
  store i64 %3, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4066, metadata !DIExpression()), !dbg !4072
  store i64 %4, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !4071, metadata !DIExpression()), !dbg !4074
  %5 = sub i64 %3, %4, !dbg !4075
  store i64 %5, ptr %n, align 8, !dbg !4051
  br label %bb7, !dbg !4051

bb7:                                              ; preds = %bb5, %bb1
  store i64 0, ptr %i, align 8, !dbg !4076
  br label %bb8, !dbg !4077

bb8:                                              ; preds = %bb14, %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %6 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdd40061f16302badE"(ptr align 8 %self) #10, !dbg !4078
  store ptr %6, ptr %_14, align 8, !dbg !4078
  %7 = load ptr, ptr %_14, align 8, !dbg !4079, !noundef !24
  %8 = ptrtoint ptr %7 to i64, !dbg !4079
  %9 = icmp eq i64 %8, 0, !dbg !4079
  %_15 = select i1 %9, i64 0, i64 1, !dbg !4079
  %10 = icmp eq i64 %_15, 1, !dbg !4079
  br i1 %10, label %bb10, label %bb15, !dbg !4079

bb10:                                             ; preds = %bb8
  %x = load ptr, ptr %_14, align 8, !dbg !4080, !nonnull !24, !align !505, !noundef !24
  store ptr %x, ptr %x.dbg.spill, align 8, !dbg !4080
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4042, metadata !DIExpression()), !dbg !4080
  store ptr %x, ptr %_19, align 8, !dbg !4081
  %11 = load ptr, ptr %_19, align 8, !dbg !4081, !nonnull !24, !align !505, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %_17 = call zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h1b40a0ee33e7d25fE"(ptr align 1 %predicate, ptr align 8 %11) #10, !dbg !4081
  br i1 %_17, label %bb12, label %bb13, !dbg !4081

bb15:                                             ; preds = %bb8
  store i64 0, ptr %0, align 8, !dbg !4082
  br label %bb16, !dbg !4083

bb16:                                             ; preds = %bb12, %bb15
  %12 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4084
  %13 = load i64, ptr %12, align 8, !dbg !4084, !range !1037, !noundef !24
  %14 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4084
  %15 = load i64, ptr %14, align 8, !dbg !4084
  %16 = insertvalue { i64, i64 } poison, i64 %13, 0, !dbg !4084
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1, !dbg !4084
  ret { i64, i64 } %17, !dbg !4084

bb13:                                             ; preds = %bb10
  %18 = load i64, ptr %i, align 8, !dbg !4085, !noundef !24
  %19 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %18, i64 1), !dbg !4085
  %_24.0 = extractvalue { i64, i1 } %19, 0, !dbg !4085
  %_24.1 = extractvalue { i64, i1 } %19, 1, !dbg !4085
  %20 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !4085
  br i1 %20, label %panic, label %bb14, !dbg !4085

bb12:                                             ; preds = %bb10
  %_21 = load i64, ptr %i, align 8, !dbg !4086, !noundef !24
  %_22 = load i64, ptr %n, align 8, !dbg !4087, !noundef !24
  %_20 = icmp ult i64 %_21, %_22, !dbg !4086
  call void @llvm.assume(i1 %_20), !dbg !4088
  %_23 = load i64, ptr %i, align 8, !dbg !4089, !noundef !24
  %21 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4090
  store i64 %_23, ptr %21, align 8, !dbg !4090
  store i64 1, ptr %0, align 8, !dbg !4090
  br label %bb16, !dbg !4083

bb14:                                             ; preds = %bb13
  store i64 %_24.0, ptr %i, align 8, !dbg !4085
  br label %bb8, !dbg !4077

panic:                                            ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0943d9cf8c1b2e3a95fc7ea34abb4c1f) #11, !dbg !4085
  unreachable, !dbg !4085
}

; bootloader::bootinfo::memory_map::MemoryMap::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h2616b9e7bdfdd501E(ptr sret(%"bootinfo::memory_map::MemoryMap") %0) unnamed_addr #1 !dbg !4091 {
start:
  %_2 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_1 = alloca [64 x %"bootinfo::memory_map::MemoryRegion"], align 8
; call bootloader::bootinfo::memory_map::MemoryRegion::empty
  call void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h55ec63749d256b36E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_2) #10, !dbg !4095
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 0, !dbg !4096
  %2 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 64, !dbg !4096
  br label %repeat_loop_header, !dbg !4096

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %3 = phi ptr [ %1, %start ], [ %5, %repeat_loop_body ]
  %4 = icmp ne ptr %3, %2
  br i1 %4, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_2, i64 24, i1 false)
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %3, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_1, i64 1536, i1 false), !dbg !4097
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %0, i32 0, i32 1, !dbg !4097
  store i64 0, ptr %6, align 8, !dbg !4097
  ret void, !dbg !4098
}

; bootloader::bootinfo::memory_map::MemoryMap::add_region
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h17a8d23eca39c97fE(ptr align 8 %self, ptr %region) unnamed_addr #1 !dbg !4099 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4104, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4105, metadata !DIExpression()), !dbg !4107
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h2640bfcc0aedb196E(ptr align 8 %self) #10, !dbg !4108
  %_4 = icmp ult i64 %_5, 64, !dbg !4108
  %_3 = xor i1 %_4, true, !dbg !4109
  br i1 %_3, label %bb2, label %bb3, !dbg !4109

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_8 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h2640bfcc0aedb196E(ptr align 8 %self) #10, !dbg !4110
  %_11 = icmp ult i64 %_8, 64, !dbg !4111
  %0 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !4111
  br i1 %0, label %bb5, label %panic, !dbg !4111

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @alloc_377fe4797e3690987ab15f0122f4880b, i64 37, ptr align 8 @alloc_7196c88dea27a90737fe52164bfa6d4b) #11, !dbg !4109
  unreachable, !dbg !4109

bb5:                                              ; preds = %bb3
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %self, i64 0, i64 %_8, !dbg !4111
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %region, i64 24, i1 false), !dbg !4111
  %2 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4112
  %3 = load i64, ptr %2, align 8, !dbg !4112, !noundef !24
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %3, i64 1), !dbg !4112
  %_12.0 = extractvalue { i64, i1 } %4, 0, !dbg !4112
  %_12.1 = extractvalue { i64, i1 } %4, 1, !dbg !4112
  %5 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !4112
  br i1 %5, label %panic1, label %bb6, !dbg !4112

panic:                                            ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64 %_8, i64 64, ptr align 8 @alloc_e65e0ba17a4d9de8b42e16f5ae86b726) #11, !dbg !4111
  unreachable, !dbg !4111

bb6:                                              ; preds = %bb5
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4112
  store i64 %_12.0, ptr %6, align 8, !dbg !4112
; call bootloader::bootinfo::memory_map::MemoryMap::sort
  call void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h26af0bced487670dE(ptr align 8 %self) #10, !dbg !4113
  ret void, !dbg !4114

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_6248fd711ab5313acabe549160484394) #11, !dbg !4112
  unreachable, !dbg !4112
}

; bootloader::bootinfo::memory_map::MemoryMap::sort
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h26af0bced487670dE(ptr align 8 %self) unnamed_addr #1 !dbg !4115 {
start:
  %first_zero_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, ptr }, align 8
  %_5 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4119, metadata !DIExpression()), !dbg !4122
; call core::slice::<impl [T]>::sort_unstable_by
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17hd2747746a3a97436E"(ptr align 8 %self, i64 64) #10, !dbg !4123
; call core::slice::<impl [T]>::iter
  %0 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h7be652596d4d48c5E"(ptr align 8 %self, i64 64) #10, !dbg !4124
  store { ptr, ptr } %0, ptr %_7, align 8, !dbg !4124
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %1 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17hcc2d0912bee039a4E"(ptr align 8 %_7) #10, !dbg !4124
  store { i64, i64 } %1, ptr %_5, align 8, !dbg !4124
  %_10 = load i64, ptr %_5, align 8, !dbg !4125, !range !1037, !noundef !24
  %2 = icmp eq i64 %_10, 1, !dbg !4125
  br i1 %2, label %bb4, label %bb5, !dbg !4125

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4126
  %first_zero_index = load i64, ptr %3, align 8, !dbg !4126, !noundef !24
  store i64 %first_zero_index, ptr %first_zero_index.dbg.spill, align 8, !dbg !4126
  call void @llvm.dbg.declare(metadata ptr %first_zero_index.dbg.spill, metadata !4120, metadata !DIExpression()), !dbg !4126
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4127
  store i64 %first_zero_index, ptr %4, align 8, !dbg !4127
  br label %bb5, !dbg !4128

bb5:                                              ; preds = %bb4, %start
  ret void, !dbg !4129
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h00af19674a3d0533E"(ptr align 1 %_1, ptr align 8 %r1, ptr align 8 %r2) unnamed_addr #0 !dbg !4130 {
start:
  %r2.dbg.spill = alloca ptr, align 8
  %r1.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %ordering = alloca i8, align 1
  %0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4138, metadata !DIExpression()), !dbg !4139
  store ptr %r1, ptr %r1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r1.dbg.spill, metadata !4134, metadata !DIExpression()), !dbg !4140
  store ptr %r2, ptr %r2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r2.dbg.spill, metadata !4135, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.declare(metadata ptr %ordering, metadata !4136, metadata !DIExpression()), !dbg !4142
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_4 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hc9037f00f6fb5391E(ptr align 8 %r1) #10, !dbg !4143
  br i1 %_4, label %bb2, label %bb3, !dbg !4143

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_6 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hc9037f00f6fb5391E(ptr align 8 %r2) #10, !dbg !4144
  br i1 %_6, label %bb5, label %bb6, !dbg !4144

bb2:                                              ; preds = %start
  store i8 1, ptr %0, align 1, !dbg !4145
  br label %bb11, !dbg !4146

bb11:                                             ; preds = %bb10, %bb9, %bb5, %bb2
  %1 = load i8, ptr %0, align 1, !dbg !4147, !range !724, !noundef !24
  ret i8 %1, !dbg !4147

bb6:                                              ; preds = %bb3
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %2 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc3ea1d6743894018E"(ptr align 8 %r1, ptr align 8 %r2) #10, !dbg !4148, !range !724
  store i8 %2, ptr %ordering, align 1, !dbg !4148
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %_11 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc945fd9699462719E"(ptr align 1 %ordering, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #10, !dbg !4149
  br i1 %_11, label %bb9, label %bb10, !dbg !4149

bb5:                                              ; preds = %bb3
  store i8 -1, ptr %0, align 1, !dbg !4150
  br label %bb11, !dbg !4151

bb10:                                             ; preds = %bb6
  %3 = load i8, ptr %ordering, align 1, !dbg !4152, !range !724, !noundef !24
  store i8 %3, ptr %0, align 1, !dbg !4152
  br label %bb11, !dbg !4153

bb9:                                              ; preds = %bb6
  %_13 = getelementptr inbounds { i64, i64 }, ptr %r1, i32 0, i32 1, !dbg !4154
  %_14 = getelementptr inbounds { i64, i64 }, ptr %r2, i32 0, i32 1, !dbg !4155
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %4 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc3ea1d6743894018E"(ptr align 8 %_13, ptr align 8 %_14) #10, !dbg !4154, !range !724
  store i8 %4, ptr %0, align 1, !dbg !4154
  br label %bb11, !dbg !4154
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h1b40a0ee33e7d25fE"(ptr align 1 %_1, ptr align 8 %r) unnamed_addr #0 !dbg !4156 {
start:
  %r.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4162, metadata !DIExpression()), !dbg !4163
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !4161, metadata !DIExpression()), !dbg !4164
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %0 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hc9037f00f6fb5391E(ptr align 8 %r) #10, !dbg !4165
  ret i1 %0, !dbg !4166
}

; bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
; Function Attrs: noredzone nounwind
define internal i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h2640bfcc0aedb196E(ptr align 8 %self) unnamed_addr #1 !dbg !4167 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4172, metadata !DIExpression()), !dbg !4173
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4174
  %_2 = load i64, ptr %0, align 8, !dbg !4174, !noundef !24
  ret i64 %_2, !dbg !4175
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17he740c87536ea809eE"(ptr align 8 %self) unnamed_addr #1 !dbg !4176 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4181, metadata !DIExpression()), !dbg !4182
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h2640bfcc0aedb196E(ptr align 8 %self) #10, !dbg !4183
  store i64 0, ptr %_4, align 8, !dbg !4184
  %0 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4184
  store i64 %_5, ptr %0, align 8, !dbg !4184
  %1 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !4185
  %2 = load i64, ptr %1, align 8, !dbg !4185, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4185
  %4 = load i64, ptr %3, align 8, !dbg !4185, !noundef !24
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %5 = call { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h8d5eadf86b048e09E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_bc412f3c128804cf7932bd162091bc4c) #10, !dbg !4185
  %_2.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4185
  %_2.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4185
  %6 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0, !dbg !4186
  %7 = insertvalue { ptr, i64 } %6, i64 %_2.1, 1, !dbg !4186
  ret { ptr, i64 } %7, !dbg !4186
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3bb7e4593bc89787E"(ptr align 8 %self) unnamed_addr #1 !dbg !4187 {
start:
  %next_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4192, metadata !DIExpression()), !dbg !4195
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %next_index = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h2640bfcc0aedb196E(ptr align 8 %self) #10, !dbg !4196
  store i64 %next_index, ptr %next_index.dbg.spill, align 8, !dbg !4196
  call void @llvm.dbg.declare(metadata ptr %next_index.dbg.spill, metadata !4193, metadata !DIExpression()), !dbg !4197
  store i64 0, ptr %_6, align 8, !dbg !4198
  %0 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4198
  store i64 %next_index, ptr %0, align 8, !dbg !4198
  %1 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !4199
  %2 = load i64, ptr %1, align 8, !dbg !4199, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4199
  %4 = load i64, ptr %3, align 8, !dbg !4199, !noundef !24
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h7ac6186df89a0e74E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_db57840325994cb1e9e58dfeb27e1cf2) #10, !dbg !4199
  %_4.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4199
  %_4.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4199
  %6 = insertvalue { ptr, i64 } poison, ptr %_4.0, 0, !dbg !4200
  %7 = insertvalue { ptr, i64 } %6, i64 %_4.1, 1, !dbg !4200
  ret { ptr, i64 } %7, !dbg !4200
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17hde0ce815ed20566bE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4201 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca %"core::fmt::builders::DebugList<'_, '_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4206, metadata !DIExpression()), !dbg !4208
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4207, metadata !DIExpression()), !dbg !4209
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17hc24d41d16039a92aE(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") %_6, ptr align 8 %f) #10, !dbg !4210
; call <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17he740c87536ea809eE"(ptr align 8 %self) #10, !dbg !4211
  %_9.0 = extractvalue { ptr, i64 } %0, 0, !dbg !4211
  %_9.1 = extractvalue { ptr, i64 } %0, 1, !dbg !4211
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h7be652596d4d48c5E"(ptr align 8 %_9.0, i64 %_9.1) #10, !dbg !4211
  %_7.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4211
  %_7.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4211
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17ha58637c42fd033a9E(ptr align 8 %_6, ptr %_7.0, ptr %_7.1) #10, !dbg !4210
; call core::fmt::builders::DebugList::finish
  %2 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hd78589456b37a68fE(ptr align 8 %_4) #10, !dbg !4210
  ret i1 %2, !dbg !4212
}

; bootloader::bootinfo::memory_map::MemoryRegion::empty
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h55ec63749d256b36E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0) unnamed_addr #1 !dbg !4213 {
start:
  %_2 = alloca i32, align 4
  %_1 = alloca { i64, i64 }, align 8
  store i64 0, ptr %_1, align 8, !dbg !4216
  %1 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4216
  store i64 0, ptr %1, align 8, !dbg !4216
  store i32 11, ptr %_2, align 4, !dbg !4217
  %2 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 0, !dbg !4218
  %3 = load i64, ptr %2, align 8, !dbg !4218, !noundef !24
  %4 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4218
  %5 = load i64, ptr %4, align 8, !dbg !4218, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4218
  store i64 %3, ptr %6, align 8, !dbg !4218
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4218
  store i64 %5, ptr %7, align 8, !dbg !4218
  %8 = load i32, ptr %_2, align 4, !dbg !4218, !range !4219, !noundef !24
  %9 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4218
  store i32 %8, ptr %9, align 8, !dbg !4218
  ret void, !dbg !4220
}

; bootloader::bootinfo::memory_map::FrameRange::new
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h20d4ca24d5d68a79E(i64 %start_addr, i64 %end_addr) unnamed_addr #1 !dbg !4221 {
start:
  %last_byte.dbg.spill = alloca i64, align 8
  %end_addr.dbg.spill = alloca i64, align 8
  %start_addr.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %start_addr, ptr %start_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %start_addr.dbg.spill, metadata !4225, metadata !DIExpression()), !dbg !4229
  store i64 %end_addr, ptr %end_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %end_addr.dbg.spill, metadata !4226, metadata !DIExpression()), !dbg !4230
  %_4.0 = sub i64 %end_addr, 1, !dbg !4231
  %_4.1 = icmp ult i64 %end_addr, 1, !dbg !4231
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !4231
  br i1 %1, label %panic, label %bb1, !dbg !4231

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %last_byte.dbg.spill, align 8, !dbg !4231
  call void @llvm.dbg.declare(metadata ptr %last_byte.dbg.spill, metadata !4227, metadata !DIExpression()), !dbg !4232
  %_5 = udiv i64 %start_addr, 4096, !dbg !4233
  %_8 = udiv i64 %_4.0, 4096, !dbg !4234
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_8, i64 1), !dbg !4234
  %_10.0 = extractvalue { i64, i1 } %2, 0, !dbg !4234
  %_10.1 = extractvalue { i64, i1 } %2, 1, !dbg !4234
  %3 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !4234
  br i1 %3, label %panic1, label %bb4, !dbg !4234

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_cad8f68633be23a5a8047bc131d14ec3) #11, !dbg !4231
  unreachable, !dbg !4231

bb4:                                              ; preds = %bb1
  store i64 %_5, ptr %0, align 8, !dbg !4235
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4235
  store i64 %_10.0, ptr %4, align 8, !dbg !4235
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4236
  %6 = load i64, ptr %5, align 8, !dbg !4236, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4236
  %8 = load i64, ptr %7, align 8, !dbg !4236, !noundef !24
  %9 = insertvalue { i64, i64 } poison, i64 %6, 0, !dbg !4236
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !4236
  ret { i64, i64 } %10, !dbg !4236

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_9e0090e7731cd791b1d2228aa613acc1) #11, !dbg !4234
  unreachable, !dbg !4234
}

; bootloader::bootinfo::memory_map::FrameRange::is_empty
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hc9037f00f6fb5391E(ptr align 8 %self) unnamed_addr #1 !dbg !4237 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4242, metadata !DIExpression()), !dbg !4243
  %_2 = load i64, ptr %self, align 8, !dbg !4244, !noundef !24
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4245
  %_3 = load i64, ptr %0, align 8, !dbg !4245, !noundef !24
  %1 = icmp eq i64 %_2, %_3, !dbg !4244
  ret i1 %1, !dbg !4246
}

; bootloader::bootinfo::memory_map::FrameRange::start_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h27ffd354e5e2b74dE(ptr align 8 %self) unnamed_addr #1 !dbg !4247 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4251, metadata !DIExpression()), !dbg !4252
  %_2 = load i64, ptr %self, align 8, !dbg !4253, !noundef !24
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4253
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !4253
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !4253
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4253
  br i1 %1, label %panic, label %bb1, !dbg !4253

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4254

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_57ce308cfbee0eeaa37d0e2ac37f242e) #11, !dbg !4253
  unreachable, !dbg !4253
}

; bootloader::bootinfo::memory_map::FrameRange::end_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hdf8a8ef58a3f519dE(ptr align 8 %self) unnamed_addr #1 !dbg !4255 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4257, metadata !DIExpression()), !dbg !4258
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4259
  %_2 = load i64, ptr %0, align 8, !dbg !4259, !noundef !24
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4259
  %_3.0 = extractvalue { i64, i1 } %1, 0, !dbg !4259
  %_3.1 = extractvalue { i64, i1 } %1, 1, !dbg !4259
  %2 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4259
  br i1 %2, label %panic, label %bb1, !dbg !4259

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4260

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_4848cdfc410b3d9eebbe30a8648bbf6f) #11, !dbg !4259
  unreachable, !dbg !4259
}

; <bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6acd55a3121539eE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4261 {
start:
  %f.dbg.spill.i9 = alloca ptr, align 8
  %x.dbg.spill.i10 = alloca ptr, align 8
  %0 = alloca { ptr, ptr }, align 8
  %f.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i8 = alloca ptr, align 8
  %1 = alloca { ptr, ptr }, align 8
  %x.dbg.spill.i7 = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %width.dbg.spill.i1 = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i2 = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i3 = alloca i32, align 4
  %align.dbg.spill.i4 = alloca i8, align 1
  %fill.dbg.spill.i5 = alloca i32, align 4
  %position.dbg.spill.i6 = alloca i64, align 8
  %width.dbg.spill.i = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i = alloca i32, align 4
  %align.dbg.spill.i = alloca i8, align 1
  %fill.dbg.spill.i = alloca i32, align 4
  %position.dbg.spill.i = alloca i64, align 8
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_24 = alloca { i64, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_22 = alloca i8, align 1
  %_21 = alloca %"core::fmt::rt::Placeholder", align 8
  %_20 = alloca { i64, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_18 = alloca i8, align 1
  %_17 = alloca %"core::fmt::rt::Placeholder", align 8
  %_16 = alloca [2 x %"core::fmt::rt::Placeholder"], align 8
  %_13 = alloca i64, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca [2 x { ptr, ptr }], align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4266, metadata !DIExpression()), !dbg !4268
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4267, metadata !DIExpression()), !dbg !4269
; call bootloader::bootinfo::memory_map::FrameRange::start_addr
  %2 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h27ffd354e5e2b74dE(ptr align 8 %self) #10, !dbg !4270
  store i64 %2, ptr %_10, align 8, !dbg !4270
  store ptr %_10, ptr %x.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i7, metadata !4271, metadata !DIExpression()), !dbg !4277
  store ptr %_10, ptr %x.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i8, metadata !4279, metadata !DIExpression()), !dbg !4286
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hfbc2546c85867680E", ptr %f.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i, metadata !4285, metadata !DIExpression()), !dbg !4288
  store ptr %_10, ptr %1, align 8, !dbg !4289
  %3 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !4289
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hfbc2546c85867680E", ptr %3, align 8, !dbg !4289
  %4 = load ptr, ptr %1, align 8, !dbg !4290, !nonnull !24, !align !1956, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !4290
  %6 = load ptr, ptr %5, align 8, !dbg !4290, !nonnull !24, !noundef !24
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0, !dbg !4290
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1, !dbg !4290
  %9 = extractvalue { ptr, ptr } %8, 0, !dbg !4291
  %10 = extractvalue { ptr, ptr } %8, 1, !dbg !4291
  %_8.0 = extractvalue { ptr, ptr } %8, 0, !dbg !4292
  %_8.1 = extractvalue { ptr, ptr } %8, 1, !dbg !4292
; call bootloader::bootinfo::memory_map::FrameRange::end_addr
  %11 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hdf8a8ef58a3f519dE(ptr align 8 %self) #10, !dbg !4293
  store i64 %11, ptr %_13, align 8, !dbg !4293
  store ptr %_13, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !4271, metadata !DIExpression()), !dbg !4294
  store ptr %_13, ptr %x.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i10, metadata !4279, metadata !DIExpression()), !dbg !4296
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hfbc2546c85867680E", ptr %f.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i9, metadata !4285, metadata !DIExpression()), !dbg !4298
  store ptr %_13, ptr %0, align 8, !dbg !4299
  %12 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4299
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hfbc2546c85867680E", ptr %12, align 8, !dbg !4299
  %13 = load ptr, ptr %0, align 8, !dbg !4300, !nonnull !24, !align !1956, !noundef !24
  %14 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4300
  %15 = load ptr, ptr %14, align 8, !dbg !4300, !nonnull !24, !noundef !24
  %16 = insertvalue { ptr, ptr } poison, ptr %13, 0, !dbg !4300
  %17 = insertvalue { ptr, ptr } %16, ptr %15, 1, !dbg !4300
  %18 = extractvalue { ptr, ptr } %17, 0, !dbg !4301
  %19 = extractvalue { ptr, ptr } %17, 1, !dbg !4301
  %_11.0 = extractvalue { ptr, ptr } %17, 0, !dbg !4292
  %_11.1 = extractvalue { ptr, ptr } %17, 1, !dbg !4292
  %20 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 0, !dbg !4292
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0, !dbg !4292
  store ptr %_8.0, ptr %21, align 8, !dbg !4292
  %22 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1, !dbg !4292
  store ptr %_8.1, ptr %22, align 8, !dbg !4292
  %23 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 1, !dbg !4292
  %24 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 0, !dbg !4292
  store ptr %_11.0, ptr %24, align 8, !dbg !4292
  %25 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 1, !dbg !4292
  store ptr %_11.1, ptr %25, align 8, !dbg !4292
  store i8 3, ptr %_18, align 1, !dbg !4292
  store i64 2, ptr %_19, align 8, !dbg !4292
  store i64 2, ptr %_20, align 8, !dbg !4292
  %26 = load i8, ptr %_18, align 1, !dbg !4292, !range !4302, !noundef !24
  %27 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !4292
  %28 = load i64, ptr %27, align 8, !dbg !4292, !range !4303, !noundef !24
  %29 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !4292
  %30 = load i64, ptr %29, align 8, !dbg !4292
  %31 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 0, !dbg !4292
  %32 = load i64, ptr %31, align 8, !dbg !4292, !range !4303, !noundef !24
  %33 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !4292
  %34 = load i64, ptr %33, align 8, !dbg !4292
  store i64 0, ptr %position.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i6, metadata !4304, metadata !DIExpression()), !dbg !4314
  store i32 32, ptr %fill.dbg.spill.i5, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i5, metadata !4309, metadata !DIExpression()), !dbg !4316
  store i8 %26, ptr %align.dbg.spill.i4, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i4, metadata !4310, metadata !DIExpression()), !dbg !4317
  store i32 4, ptr %flags.dbg.spill.i3, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i3, metadata !4311, metadata !DIExpression()), !dbg !4318
  store i64 %28, ptr %precision.dbg.spill.i2, align 8
  %35 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i2, i32 0, i32 1
  store i64 %30, ptr %35, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i2, metadata !4312, metadata !DIExpression()), !dbg !4319
  store i64 %32, ptr %width.dbg.spill.i1, align 8
  %36 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i1, i32 0, i32 1
  store i64 %34, ptr %36, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i1, metadata !4313, metadata !DIExpression()), !dbg !4320
  %37 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 2, !dbg !4321
  store i64 0, ptr %37, align 8, !dbg !4321
  %38 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 4, !dbg !4321
  store i32 32, ptr %38, align 4, !dbg !4321
  %39 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 5, !dbg !4321
  store i8 %26, ptr %39, align 8, !dbg !4321
  %40 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 3, !dbg !4321
  store i32 4, ptr %40, align 8, !dbg !4321
  store i64 %28, ptr %_17, align 8, !dbg !4321
  %41 = getelementptr inbounds { i64, i64 }, ptr %_17, i32 0, i32 1, !dbg !4321
  store i64 %30, ptr %41, align 8, !dbg !4321
  %42 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 1, !dbg !4321
  store i64 %32, ptr %42, align 8, !dbg !4321
  %43 = getelementptr inbounds { i64, i64 }, ptr %42, i32 0, i32 1, !dbg !4321
  store i64 %34, ptr %43, align 8, !dbg !4321
  store i8 3, ptr %_22, align 1, !dbg !4292
  store i64 2, ptr %_23, align 8, !dbg !4292
  store i64 2, ptr %_24, align 8, !dbg !4292
  %44 = load i8, ptr %_22, align 1, !dbg !4292, !range !4302, !noundef !24
  %45 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !4292
  %46 = load i64, ptr %45, align 8, !dbg !4292, !range !4303, !noundef !24
  %47 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !4292
  %48 = load i64, ptr %47, align 8, !dbg !4292
  %49 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 0, !dbg !4292
  %50 = load i64, ptr %49, align 8, !dbg !4292, !range !4303, !noundef !24
  %51 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 1, !dbg !4292
  %52 = load i64, ptr %51, align 8, !dbg !4292
  store i64 1, ptr %position.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i, metadata !4304, metadata !DIExpression()), !dbg !4322
  store i32 32, ptr %fill.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i, metadata !4309, metadata !DIExpression()), !dbg !4324
  store i8 %44, ptr %align.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !4310, metadata !DIExpression()), !dbg !4325
  store i32 4, ptr %flags.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i, metadata !4311, metadata !DIExpression()), !dbg !4326
  store i64 %46, ptr %precision.dbg.spill.i, align 8
  %53 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i, i32 0, i32 1
  store i64 %48, ptr %53, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i, metadata !4312, metadata !DIExpression()), !dbg !4327
  store i64 %50, ptr %width.dbg.spill.i, align 8
  %54 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i, i32 0, i32 1
  store i64 %52, ptr %54, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i, metadata !4313, metadata !DIExpression()), !dbg !4328
  %55 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 2, !dbg !4329
  store i64 1, ptr %55, align 8, !dbg !4329
  %56 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 4, !dbg !4329
  store i32 32, ptr %56, align 4, !dbg !4329
  %57 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 5, !dbg !4329
  store i8 %44, ptr %57, align 8, !dbg !4329
  %58 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 3, !dbg !4329
  store i32 4, ptr %58, align 8, !dbg !4329
  store i64 %46, ptr %_21, align 8, !dbg !4329
  %59 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 1, !dbg !4329
  store i64 %48, ptr %59, align 8, !dbg !4329
  %60 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 1, !dbg !4329
  store i64 %50, ptr %60, align 8, !dbg !4329
  %61 = getelementptr inbounds { i64, i64 }, ptr %60, i32 0, i32 1, !dbg !4329
  store i64 %52, ptr %61, align 8, !dbg !4329
  %62 = getelementptr inbounds [2 x %"core::fmt::rt::Placeholder"], ptr %_16, i64 0, i64 0, !dbg !4292
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %62, ptr align 8 %_17, i64 56, i1 false), !dbg !4292
  %63 = getelementptr inbounds [2 x %"core::fmt::rt::Placeholder"], ptr %_16, i64 0, i64 1, !dbg !4292
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %63, ptr align 8 %_21, i64 56, i1 false), !dbg !4292
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17he6b6155d83e3d98fE(ptr sret(%"core::fmt::Arguments<'_>") %_3, ptr align 8 @alloc_b835a9d6c252fc7d7d9309678c4406b9, i64 3, ptr align 8 %_7, i64 2, ptr align 8 %_16, i64 2) #10, !dbg !4292
; call core::fmt::Formatter::write_fmt
  %64 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h07bff8451d2c096fE(ptr align 8 %f, ptr %_3) #10, !dbg !4292
  ret i1 %64, !dbg !4330
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::convert::From<bootloader::bootinfo::memory_map::E820MemoryRegion>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17h73949eda888754b7E"(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %region) unnamed_addr #1 !dbg !4331 {
start:
  %f.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i1 = alloca ptr, align 8
  %1 = alloca { ptr, ptr }, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %_9 = alloca [1 x { ptr, ptr }], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %t = alloca i32, align 4
  %region_type = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4342, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.declare(metadata ptr %region_type, metadata !4343, metadata !DIExpression()), !dbg !4348
  call void @llvm.dbg.declare(metadata ptr %t, metadata !4345, metadata !DIExpression()), !dbg !4349
  %2 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4350
  %3 = load i32, ptr %2, align 8, !dbg !4350, !noundef !24
  switch i32 %3, label %bb1 [
    i32 1, label %bb2
    i32 2, label %bb3
    i32 3, label %bb4
    i32 4, label %bb5
    i32 5, label %bb6
  ], !dbg !4350

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4351
  %5 = load i32, ptr %4, align 8, !dbg !4351, !noundef !24
  store i32 %5, ptr %t, align 4, !dbg !4351
  store ptr %t, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !4352, metadata !DIExpression()), !dbg !4357
  store ptr %t, ptr %x.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i1, metadata !4359, metadata !DIExpression()), !dbg !4366
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h31783820a1b808a3E", ptr %f.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i, metadata !4365, metadata !DIExpression()), !dbg !4368
  store ptr %t, ptr %1, align 8, !dbg !4369
  %6 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !4369
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h31783820a1b808a3E", ptr %6, align 8, !dbg !4369
  %7 = load ptr, ptr %1, align 8, !dbg !4370, !nonnull !24, !align !1956, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !4370
  %9 = load ptr, ptr %8, align 8, !dbg !4370, !nonnull !24, !noundef !24
  %10 = insertvalue { ptr, ptr } poison, ptr %7, 0, !dbg !4370
  %11 = insertvalue { ptr, ptr } %10, ptr %9, 1, !dbg !4370
  %12 = extractvalue { ptr, ptr } %11, 0, !dbg !4371
  %13 = extractvalue { ptr, ptr } %11, 1, !dbg !4371
  %_10.0 = extractvalue { ptr, ptr } %11, 0, !dbg !4372
  %_10.1 = extractvalue { ptr, ptr } %11, 1, !dbg !4372
  %14 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_9, i64 0, i64 0, !dbg !4372
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0, !dbg !4372
  store ptr %_10.0, ptr %15, align 8, !dbg !4372
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1, !dbg !4372
  store ptr %_10.1, ptr %16, align 8, !dbg !4372
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h9cb1f000867efa0eE(ptr sret(%"core::fmt::Arguments<'_>") %_5, ptr align 8 @alloc_0a0c8f921f96ace4b9d73a9fb1f3a7e8, i64 1, ptr align 8 %_9, i64 1) #10, !dbg !4372
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcc3c3e2c718b0327E(ptr %_5, ptr align 8 @alloc_7aa2ce3965daa798a811db4359705d8b) #11, !dbg !4372
  unreachable, !dbg !4372

bb2:                                              ; preds = %start
  store i32 0, ptr %region_type, align 4, !dbg !4373
  br label %bb9, !dbg !4373

bb3:                                              ; preds = %start
  store i32 2, ptr %region_type, align 4, !dbg !4374
  br label %bb9, !dbg !4374

bb4:                                              ; preds = %start
  store i32 3, ptr %region_type, align 4, !dbg !4375
  br label %bb9, !dbg !4375

bb5:                                              ; preds = %start
  store i32 4, ptr %region_type, align 4, !dbg !4376
  br label %bb9, !dbg !4376

bb6:                                              ; preds = %start
  store i32 5, ptr %region_type, align 4, !dbg !4377
  br label %bb9, !dbg !4377

bb9:                                              ; preds = %bb2, %bb3, %bb4, %bb5, %bb6
  %_13 = load i64, ptr %region, align 8, !dbg !4378, !noundef !24
  %_15 = load i64, ptr %region, align 8, !dbg !4379, !noundef !24
  %17 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 1, !dbg !4380
  %_16 = load i64, ptr %17, align 8, !dbg !4380, !noundef !24
  %18 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 %_16), !dbg !4379
  %_17.0 = extractvalue { i64, i1 } %18, 0, !dbg !4379
  %_17.1 = extractvalue { i64, i1 } %18, 1, !dbg !4379
  %19 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !4379
  br i1 %19, label %panic, label %bb10, !dbg !4379

bb10:                                             ; preds = %bb9
; call bootloader::bootinfo::memory_map::FrameRange::new
  %20 = call { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h20d4ca24d5d68a79E(i64 %_13, i64 %_17.0) #10, !dbg !4381
  %_12.0 = extractvalue { i64, i64 } %20, 0, !dbg !4381
  %_12.1 = extractvalue { i64, i64 } %20, 1, !dbg !4381
  %_18 = load i32, ptr %region_type, align 4, !dbg !4382, !range !4219, !noundef !24
  %21 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4383
  store i64 %_12.0, ptr %21, align 8, !dbg !4383
  %22 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4383
  store i64 %_12.1, ptr %22, align 8, !dbg !4383
  %23 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4383
  store i32 %_18, ptr %23, align 8, !dbg !4383
  ret void, !dbg !4384

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_82eaa0d65834937aa85ffd9cf79e73a5) #11, !dbg !4379
  unreachable, !dbg !4379
}

; bootloader::bootinfo::BootInfo::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo3new17hb7000f8aa50a7337E(ptr sret(%"bootinfo::BootInfo") %0, ptr %memory_map, ptr %tls_template, i64 %recursive_page_table_addr, i64 %physical_memory_offset) unnamed_addr #1 !dbg !4385 {
start:
  %1 = alloca %"core::option::Option<bootinfo::TlsTemplate>", align 8
  %physical_memory_offset.dbg.spill = alloca i64, align 8
  %recursive_page_table_addr.dbg.spill = alloca i64, align 8
  %_7 = alloca %"bootinfo::TlsTemplate", align 8
  %_6 = alloca %"bootinfo::TlsTemplate", align 8
  %tls_template1 = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %memory_map, metadata !4395, metadata !DIExpression()), !dbg !4401
  call void @llvm.dbg.declare(metadata ptr %tls_template, metadata !4396, metadata !DIExpression()), !dbg !4402
  store i64 %recursive_page_table_addr, ptr %recursive_page_table_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %recursive_page_table_addr.dbg.spill, metadata !4397, metadata !DIExpression()), !dbg !4403
  store i64 %physical_memory_offset, ptr %physical_memory_offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %physical_memory_offset.dbg.spill, metadata !4398, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.declare(metadata ptr %tls_template1, metadata !4399, metadata !DIExpression()), !dbg !4405
  store i64 0, ptr %_6, align 8, !dbg !4406
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 1, !dbg !4406
  store i64 0, ptr %2, align 8, !dbg !4406
  %3 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 2, !dbg !4406
  store i64 0, ptr %3, align 8, !dbg !4406
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %tls_template, i64 32, i1 false), !dbg !4407
; call core::option::Option<T>::unwrap_or
  call void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h416681f6f5421894E"(ptr sret(%"bootinfo::TlsTemplate") %tls_template1, ptr %1, ptr %_6) #10, !dbg !4407
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tls_template1, i64 24, i1 false), !dbg !4408
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %memory_map, i64 1544, i1 false), !dbg !4409
  %4 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 1, !dbg !4409
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_7, i64 24, i1 false), !dbg !4409
  %5 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 2, !dbg !4409
  store i8 0, ptr %5, align 8, !dbg !4409
  ret void, !dbg !4410
}

; bootloader::bootinfo::BootInfo::tls_template
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo12tls_template17hc4176584bdd69f2aE(ptr sret(%"core::option::Option<bootinfo::TlsTemplate>") %0, ptr align 8 %self) unnamed_addr #1 !dbg !4411 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"bootinfo::TlsTemplate", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4416, metadata !DIExpression()), !dbg !4417
  %1 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4418
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %1, i32 0, i32 2, !dbg !4418
  %_3 = load i64, ptr %2, align 8, !dbg !4418, !noundef !24
  %_2 = icmp ugt i64 %_3, 0, !dbg !4418
  br i1 %_2, label %bb1, label %bb2, !dbg !4418

bb2:                                              ; preds = %start
  store i64 0, ptr %0, align 8, !dbg !4419
  br label %bb3, !dbg !4420

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4421
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %3, i64 24, i1 false), !dbg !4421
  %4 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %0, i32 0, i32 1, !dbg !4422
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_4, i64 24, i1 false), !dbg !4422
  store i64 1, ptr %0, align 8, !dbg !4422
  br label %bb3, !dbg !4420

bb3:                                              ; preds = %bb2, %bb1
  ret void, !dbg !4423
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h0f039e3563dcdc30E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4424 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4429, metadata !DIExpression()), !dbg !4431
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4430, metadata !DIExpression()), !dbg !4431
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4432
  store ptr %0, ptr %_10, align 8, !dbg !4432
; call core::fmt::Formatter::debug_struct_field2_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hfb775bcb5230b168E(ptr align 8 %f, ptr align 1 @alloc_2fa382d66c8b05cee83d1e636a456d83, i64 12, ptr align 1 @alloc_c6d312f4fb2564cdde1868738b40e953, i64 5, ptr align 1 %self, ptr align 8 @vtable.7, ptr align 1 @alloc_24a09d864e93eaea8a967d85ad5fb14b, i64 11, ptr align 1 %_10, ptr align 8 @vtable.8) #10, !dbg !4431
  ret i1 %1, !dbg !4433
}

; <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h9e1df074eec26333E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4434 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_3 = alloca { ptr, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4439, metadata !DIExpression()), !dbg !4441
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4440, metadata !DIExpression()), !dbg !4441
  %0 = load i32, ptr %self, align 4, !dbg !4441, !range !4219, !noundef !24
  %_4 = zext i32 %0 to i64, !dbg !4441
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
    i64 10, label %bb13
    i64 11, label %bb14
    i64 12, label %bb15
    i64 13, label %bb16
    i64 14, label %bb1
  ], !dbg !4441

bb2:                                              ; preds = %start
  unreachable, !dbg !4441

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_3c5b86a9b7fa1d302afea08936e483c5, ptr %1, align 8, !dbg !4441
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 6, ptr %2, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_3e93a37ed61282b1c76f7355bd470201, ptr %3, align 8, !dbg !4441
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 5, ptr %4, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb5:                                              ; preds = %start
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_f09f4d0dabebc98449d61db8d60067bb, ptr %5, align 8, !dbg !4441
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 8, ptr %6, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb6:                                              ; preds = %start
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_405580fa38aa12693d369698203e043e, ptr %7, align 8, !dbg !4441
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 15, ptr %8, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb7:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_497f8f871d9b9bd5767a37917b988618, ptr %9, align 8, !dbg !4441
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 7, ptr %10, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb8:                                              ; preds = %start
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_2db2f360d33be2fea5593ededc5fb904, ptr %11, align 8, !dbg !4441
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 9, ptr %12, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb9:                                              ; preds = %start
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_bfff067230aa23bc581d3ad54a803735, ptr %13, align 8, !dbg !4441
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 6, ptr %14, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb10:                                             ; preds = %start
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_272cabb5c5fb66cc8e055c6a08dd5a38, ptr %15, align 8, !dbg !4441
  %16 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 11, ptr %16, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb11:                                             ; preds = %start
  %17 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_84113867da1e74b2269b5cf897cae626, ptr %17, align 8, !dbg !4441
  %18 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 9, ptr %18, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb12:                                             ; preds = %start
  %19 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_88f77a4216025d9c2616c4e0631b580d, ptr %19, align 8, !dbg !4441
  %20 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 10, ptr %20, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb13:                                             ; preds = %start
  %21 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_296c708f84ba4aacbf601faaf01ee90e, ptr %21, align 8, !dbg !4441
  %22 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 9, ptr %22, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb14:                                             ; preds = %start
  %23 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_59ba7b9f7211443cd55a366616eef46a, ptr %23, align 8, !dbg !4441
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 5, ptr %24, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb15:                                             ; preds = %start
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_1f9c4cc73f4140a97f2cf1f721646a68, ptr %25, align 8, !dbg !4441
  %26 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 8, ptr %26, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb16:                                             ; preds = %start
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_3faf0b3374c02c8ecbb0aba47045e793, ptr %27, align 8, !dbg !4441
  %28 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 7, ptr %28, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb1:                                              ; preds = %start
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  store ptr @alloc_4f458a5ac3a6382b3750f993ab870080, ptr %29, align 8, !dbg !4441
  %30 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  store i64 13, ptr %30, align 8, !dbg !4441
  br label %bb17, !dbg !4442

bb17:                                             ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb14, %bb15, %bb16, %bb1
  %31 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4441
  %32 = load ptr, ptr %31, align 8, !dbg !4441, !nonnull !24, !align !1956, !noundef !24
  %33 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4441
  %34 = load i64, ptr %33, align 8, !dbg !4441, !noundef !24
; call core::fmt::Formatter::write_str
  %35 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h9186aeae33837220E(ptr align 8 %f, ptr align 1 %32, i64 %34) #10, !dbg !4441
  ret i1 %35, !dbg !4443
}

; <bootloader::bootinfo::memory_map::E820MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17he68b891e832dbb70E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4444 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_16 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4450, metadata !DIExpression()), !dbg !4452
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4451, metadata !DIExpression()), !dbg !4452
  %_9 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4453
  %_12 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 2, !dbg !4454
  %0 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 3, !dbg !4455
  store ptr %0, ptr %_16, align 8, !dbg !4455
; call core::fmt::Formatter::debug_struct_field4_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17h439f6313a8e4508bE(ptr align 8 %f, ptr align 1 @alloc_bee533f45c59e636f24e3b92e9dcf8a1, i64 16, ptr align 1 @alloc_e896abd190c076ac3d64221d9ae37a51, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc_f92b1a49cd2fef011d7606f6333298f2, i64 3, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc_24a09d864e93eaea8a967d85ad5fb14b, i64 11, ptr align 1 %_12, ptr align 8 @vtable.a, ptr align 1 @alloc_3453f215b747c0edd0eebf0fbcea5172, i64 24, ptr align 1 %_16, ptr align 8 @vtable.b) #10, !dbg !4452
  ret i1 %1, !dbg !4456
}

; <bootloader::bootinfo::BootInfo as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17h02b8504b3d8e61ceE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4457 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4462, metadata !DIExpression()), !dbg !4464
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4463, metadata !DIExpression()), !dbg !4464
  %_9 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4465
  %0 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 2, !dbg !4466
  store ptr %0, ptr %_13, align 8, !dbg !4466
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h443d59eeb1cd76e3E(ptr align 8 %f, ptr align 1 @alloc_1f9c4cc73f4140a97f2cf1f721646a68, i64 8, ptr align 1 @alloc_9edc7a92f8d25561ab6dc7613f63189d, i64 10, ptr align 1 %self, ptr align 8 @vtable.c, ptr align 1 @alloc_1cbcc15d14c439465e35578ac36229c9, i64 12, ptr align 1 %_9, ptr align 8 @vtable.d, ptr align 1 @alloc_b0bb0c7a0f8be091d3fc1c11116fce9b, i64 15, ptr align 1 %_13, ptr align 8 @vtable.e) #10, !dbg !4464
  ret i1 %1, !dbg !4467
}

; <bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f7dc0e5f5bc2876E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4468 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4474, metadata !DIExpression()), !dbg !4476
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4475, metadata !DIExpression()), !dbg !4476
  %_9 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 1, !dbg !4477
  %0 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 2, !dbg !4478
  store ptr %0, ptr %_13, align 8, !dbg !4478
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h443d59eeb1cd76e3E(ptr align 8 %f, ptr align 1 @alloc_db9f6246386b35b655b2a4a0bfe4b5d7, i64 11, ptr align 1 @alloc_e896abd190c076ac3d64221d9ae37a51, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc_586126a6b84f2dd36fa1e3b3e4c38ef1, i64 9, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc_6a7e1d6cb9743b05f95a08c478d87c6e, i64 8, ptr align 1 %_13, ptr align 8 @vtable.f) #10, !dbg !4476
  ret i1 %1, !dbg !4479
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking14panic_nounwind17h99a5e7a516e71df0E(ptr align 1, i64) unnamed_addr #5

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17hd1cba732495dd632E(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hf9324e536528af73E(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h4780e5c69461b1a1E(i64, i64, ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint noredzone nounwind
declare align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17hfcf1b7a8b65298caE"(ptr align 8) unnamed_addr #0

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17hee23829b1a0f9510E(ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint noredzone nounwind
declare void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h1773e3b7b4e11a68E"(ptr sret(%"core::ops::range::RangeInclusive<usize>"), i64, i64) unnamed_addr #0

; core::option::Option<T>::expect
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h5071cc80846a4d42E"(i64, i64, ptr align 1, i64, ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #6

; core::panicking::panic
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking5panic17ha8334ff47e234676E(ptr align 1, i64, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #7

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h076c6b210e9ba34bE(ptr) unnamed_addr #1

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h50bd2a1559c638aaE(ptr, ptr, i64) unnamed_addr #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #7

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h31783820a1b808a3E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hfbc2546c85867680E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h5963914f9d40c5c3E(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17hcba59fc6d1fdd2feE"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17hb9f96613a8f3519bE(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h45ef34116673d46cE"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h4da77c41649bbbeaE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hd8d71846b5015edbE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: noredzone nounwind
declare align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h944979d9b37b528cE(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; core::panicking::panic_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking9panic_fmt17hcc3c3e2c718b0327E(ptr, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h2992f7f5871a51d8E(ptr, ptr, i64) unnamed_addr #0

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h94881f616af7425fE(ptr, ptr, i64) unnamed_addr #0

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
declare ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hd3b69d035fab1880E(ptr) unnamed_addr #0

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17hfc0bdb80f7cb0255E(i64, i64, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #8

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbd4e891038e99fd5E"(i64, i64) unnamed_addr #0

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hcbda1fddb935b88aE"(ptr align 8) unnamed_addr #0

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h65b7d1992fe3aff5E(i64, i64) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf2d885b31dabed3dE"(i64, i64) unnamed_addr #0

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0a40464f3be5dc7aE"(ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #9

; core::cmp::min
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3cmp3min17h04f45068448e0381E(i64, i64) unnamed_addr #0

; core::panicking::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking13assert_failed17hfe11ff726ee97f7aE(i8, ptr align 8, ptr align 8, ptr, ptr align 8) unnamed_addr #5

; core::fmt::Formatter::debug_list
; Function Attrs: noredzone nounwind
declare void @_ZN4core3fmt9Formatter10debug_list17hc24d41d16039a92aE(ptr sret(%"core::fmt::builders::DebugList<'_, '_>"), ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hd78589456b37a68fE(ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h07bff8451d2c096fE(ptr align 8, ptr) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hfb775bcb5230b168E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h9186aeae33837220E(ptr align 8, ptr align 1, i64) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2641041178920c58E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field4_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17h439f6313a8e4508bE(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h39c1a4e341aed4a1E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field3_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h443d59eeb1cd76e3E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8b7be4750848ea74E"(ptr align 8, ptr align 8) unnamed_addr #1

attributes #0 = { inlinehint noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #1 = { noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #2 = { cold noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #3 = { noinline noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { cold noinline noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #6 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #7 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #8 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #9 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!133, !134, !135}
!llvm.dbg.cu = !{!136}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !24, identifier: "2779528a88d6dc0ad82a0e4e9fbaa7e4")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !17, templateParams: !24, identifier: "a8f2a6d4cce426be14c00524dc0874f0")
!14 = !DINamespace(name: "memory_map", scope: !15)
!15 = !DINamespace(name: "bootinfo", scope: !16)
!16 = !DINamespace(name: "bootloader", scope: null)
!17 = !{!18, !25}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !13, file: !2, baseType: !19, size: 128, align: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "FrameRange", scope: !14, file: !2, size: 128, align: 64, elements: !20, templateParams: !24, identifier: "eda0d2a9321fee60b061820d7cde2525")
!20 = !{!21, !23}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64)
!22 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!24 = !{}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !13, file: !2, baseType: !26, size: 32, align: 32, offset: 128)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MemoryRegionType", scope: !14, file: !2, baseType: !27, size: 32, align: 32, flags: DIFlagEnumClass, elements: !28)
!27 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43}
!29 = !DIEnumerator(name: "Usable", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "InUse", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "Reserved", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "AcpiReclaimable", value: 3, isUnsigned: true)
!33 = !DIEnumerator(name: "AcpiNvs", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "BadMemory", value: 5, isUnsigned: true)
!35 = !DIEnumerator(name: "Kernel", value: 6, isUnsigned: true)
!36 = !DIEnumerator(name: "KernelStack", value: 7, isUnsigned: true)
!37 = !DIEnumerator(name: "PageTable", value: 8, isUnsigned: true)
!38 = !DIEnumerator(name: "Bootloader", value: 9, isUnsigned: true)
!39 = !DIEnumerator(name: "FrameZero", value: 10, isUnsigned: true)
!40 = !DIEnumerator(name: "Empty", value: 11, isUnsigned: true)
!41 = !DIEnumerator(name: "BootInfo", value: 12, isUnsigned: true)
!42 = !DIEnumerator(name: "Package", value: 13, isUnsigned: true)
!43 = !DIEnumerator(name: "NonExhaustive", value: 14, isUnsigned: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !46, isLocal: true, isDefinition: true)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !47, vtableHolder: !19, templateParams: !24, identifier: "5f02d32e8784bf6269c2277222c666a7")
!47 = !{!48, !49, !50, !51}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !46, file: !2, baseType: !6, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !46, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !54, isLocal: true, isDefinition: true)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !55, vtableHolder: !60, templateParams: !24, identifier: "b7439872a6042f4ce7d743026fd7bb07")
!55 = !{!56, !57, !58, !59}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !54, file: !2, baseType: !6, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !54, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !26, size: 64, align: 64, dwarfAddressSpace: 0)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "<u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !63, isLocal: true, isDefinition: true)
!63 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !64, vtableHolder: !22, templateParams: !24, identifier: "d94ad0b8aa36c594adcb6a1d7842575c")
!64 = !{!65, !66, !67, !68}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !63, file: !2, baseType: !6, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !63, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!69 = !DIGlobalVariableExpression(var: !70, expr: !DIExpression())
!70 = distinct !DIGlobalVariable(name: "<u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !71, isLocal: true, isDefinition: true)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !72, vtableHolder: !27, templateParams: !24, identifier: "369548007d832e0ecbffb9d4645358e7")
!72 = !{!73, !74, !75, !76}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !71, file: !2, baseType: !6, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !71, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!77 = !DIGlobalVariableExpression(var: !78, expr: !DIExpression())
!78 = distinct !DIGlobalVariable(name: "<&u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !79, isLocal: true, isDefinition: true)
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !80, vtableHolder: !85, templateParams: !24, identifier: "816cae719e586f73a314bc441f41d44f")
!80 = !{!81, !82, !83, !84}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !79, file: !2, baseType: !6, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !79, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !88, isLocal: true, isDefinition: true)
!88 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !89, vtableHolder: !94, templateParams: !24, identifier: "d4eefc3f1de6f177d6d5b54fb4ddfbc3")
!89 = !{!90, !91, !92, !93}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !88, file: !2, baseType: !6, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !88, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!94 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryMap", scope: !14, file: !2, size: 12352, align: 64, elements: !95, templateParams: !24, identifier: "12562056e38898ffcca3d526315c36c9")
!95 = !{!96, !100}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !94, file: !2, baseType: !97, size: 12288, align: 64)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 12288, align: 64, elements: !98)
!98 = !{!99}
!99 = !DISubrange(count: 64, lowerBound: 0)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "next_entry_index", scope: !94, file: !2, baseType: !22, size: 64, align: 64, offset: 12288)
!101 = !DIGlobalVariableExpression(var: !102, expr: !DIExpression())
!102 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !103, isLocal: true, isDefinition: true)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !104, vtableHolder: !109, templateParams: !24, identifier: "f38a48dd32686bf0e1e0e7e5157754e6")
!104 = !{!105, !106, !107, !108}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !103, file: !2, baseType: !6, size: 64, align: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !103, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!109 = !DICompositeType(tag: DW_TAG_structure_type, name: "TlsTemplate", scope: !15, file: !2, size: 192, align: 64, elements: !110, templateParams: !24, identifier: "2e65e53cc0097cd2125656914d9ede0a")
!110 = !{!111, !112, !113}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !109, file: !2, baseType: !22, size: 64, align: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "file_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "mem_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 128)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "<&u8 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !116, isLocal: true, isDefinition: true)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u8 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !117, vtableHolder: !122, templateParams: !24, identifier: "a5b4825ed3aa5bf346786108612239b0")
!117 = !{!118, !119, !120, !121}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !116, file: !2, baseType: !6, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !116, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!123 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "<&u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !126, isLocal: true, isDefinition: true)
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !127, vtableHolder: !132, templateParams: !24, identifier: "bf750079e417872ca71f9aed0159cc28")
!127 = !{!128, !129, !130, !131}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !126, file: !2, baseType: !6, size: 64, align: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !126, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!133 = !{i32 8, !"PIC Level", i32 2}
!134 = !{i32 2, !"Dwarf Version", i32 4}
!135 = !{i32 2, !"Debug Info Version", i32 3}
!136 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !137, producer: "clang LLVM (rustc version 1.71.0-nightly (f49560538 2023-04-28))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !138, globals: !161, splitDebugInlining: false)
!137 = !DIFile(filename: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/lib.rs/@/bootloader.29cc74be93a1743e-cgu.0", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23")
!138 = !{!26, !139, !148, !155}
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !140, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !143)
!140 = !DINamespace(name: "rt", scope: !141)
!141 = !DINamespace(name: "fmt", scope: !142)
!142 = !DINamespace(name: "core", scope: null)
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !149, file: !2, baseType: !150, size: 8, align: 8, flags: DIFlagEnumClass, elements: !151)
!149 = !DINamespace(name: "cmp", scope: !142)
!150 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!151 = !{!152, !153, !154}
!152 = !DIEnumerator(name: "Less", value: -1)
!153 = !DIEnumerator(name: "Equal", value: 0)
!154 = !DIEnumerator(name: "Greater", value: 1)
!155 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !156, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !157)
!156 = !DINamespace(name: "panicking", scope: !142)
!157 = !{!158, !159, !160}
!158 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!159 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!161 = !{!0, !44, !52, !61, !69, !77, !86, !101, !114, !124}
!162 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h174965a1ba63e8fdE", scope: !164, file: !163, line: 371, type: !167, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !182)
!163 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "d107e626d2145c8c7d098a7b217e6306")
!164 = !DINamespace(name: "{impl#4}", scope: !165)
!165 = !DINamespace(name: "index", scope: !166)
!166 = !DINamespace(name: "slice", scope: !142)
!167 = !DISubroutineType(types: !168)
!168 = !{!169, !174, !169}
!169 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !170, templateParams: !24, identifier: "b2df953ab6d64c329946497154c9e3d3")
!170 = !{!171, !173}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !169, file: !2, baseType: !172, size: 64, align: 64)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !169, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!174 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !175, file: !2, size: 128, align: 64, elements: !177, templateParams: !180, identifier: "18cd61c87dbf51eb4088b653e33d00b5")
!175 = !DINamespace(name: "range", scope: !176)
!176 = !DINamespace(name: "ops", scope: !142)
!177 = !{!178, !179}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !174, file: !2, baseType: !9, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !174, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!180 = !{!181}
!181 = !DITemplateTypeParameter(name: "Idx", type: !9)
!182 = !{!183, !184, !185, !187}
!183 = !DILocalVariable(name: "self", arg: 1, scope: !162, file: !163, line: 371, type: !174)
!184 = !DILocalVariable(name: "slice", arg: 2, scope: !162, file: !163, line: 371, type: !169)
!185 = !DILocalVariable(name: "this", scope: !186, file: !163, line: 372, type: !174, align: 8)
!186 = distinct !DILexicalBlock(scope: !162, file: !163, line: 372, column: 9)
!187 = !DILocalVariable(name: "new_len", scope: !188, file: !163, line: 383, type: !9, align: 8)
!188 = distinct !DILexicalBlock(scope: !186, file: !163, line: 383, column: 13)
!189 = !{!190}
!190 = !DITemplateTypeParameter(name: "T", type: !13)
!191 = !DILocation(line: 371, column: 29, scope: !162)
!192 = !DILocation(line: 371, column: 35, scope: !162)
!193 = !DILocation(line: 372, column: 13, scope: !186)
!194 = !DILocation(line: 372, column: 20, scope: !162)
!195 = !DILocation(line: 378, column: 13, scope: !186)
!196 = !DILocation(line: 383, column: 27, scope: !186)
!197 = !DILocation(line: 383, column: 17, scope: !188)
!198 = !DILocation(line: 384, column: 39, scope: !188)
!199 = !DILocalVariable(name: "self", arg: 1, scope: !200, file: !201, line: 915, type: !207)
!200 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3fe5160e9aea5b50E", scope: !202, file: !201, line: 915, type: !205, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !208)
!201 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "3038863dc20b91ad4f69036221337420")
!202 = !DINamespace(name: "{impl#0}", scope: !203)
!203 = !DINamespace(name: "const_ptr", scope: !204)
!204 = !DINamespace(name: "ptr", scope: !142)
!205 = !DISubroutineType(types: !206)
!206 = !{!207, !207, !9}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!208 = !{!199, !209}
!209 = !DILocalVariable(name: "count", arg: 2, scope: !200, file: !201, line: 915, type: !9)
!210 = !DILocation(line: 915, column: 29, scope: !200, inlinedAt: !211)
!211 = distinct !DILocation(line: 384, column: 39, scope: !188)
!212 = !DILocation(line: 915, column: 35, scope: !200, inlinedAt: !211)
!213 = !DILocation(line: 927, column: 13, scope: !200, inlinedAt: !211)
!214 = !DILocation(line: 384, column: 13, scope: !188)
!215 = !DILocation(line: 386, column: 6, scope: !162)
!216 = !DILocalVariable(name: "this", arg: 1, scope: !217, file: !218, line: 2510, type: !174)
!217 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h156612c739a92e31E", scope: !219, file: !218, line: 2510, type: !220, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !222)
!218 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "b961ce15748c96c32140721627355748")
!219 = !DINamespace(name: "get_unchecked", scope: !164)
!220 = !DISubroutineType(types: !221)
!221 = !{null, !174, !169}
!222 = !{!216, !223}
!223 = !DILocalVariable(name: "slice", arg: 2, scope: !217, file: !218, line: 2510, type: !169)
!224 = !DILocation(line: 2510, column: 39, scope: !217, inlinedAt: !225)
!225 = distinct !DILocation(line: 378, column: 13, scope: !186)
!226 = !DILocation(line: 381, column: 17, scope: !227, inlinedAt: !225)
!227 = !DILexicalBlockFile(scope: !217, file: !163, discriminator: 0)
!228 = !DILocation(line: 381, column: 55, scope: !227, inlinedAt: !225)
!229 = !DILocation(line: 381, column: 43, scope: !227, inlinedAt: !225)
!230 = !DILocation(line: 2511, column: 20, scope: !217, inlinedAt: !225)
!231 = !{i8 0, i8 2}
!232 = !DILocation(line: 2513, column: 21, scope: !217, inlinedAt: !225)
!233 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hfacf56c2574810d2E", scope: !164, file: !163, line: 389, type: !234, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !240)
!234 = !DISubroutineType(types: !235)
!235 = !{!236, !174, !236}
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !237, templateParams: !24, identifier: "7f4badd13c4de7ab822ca5c4c9d7d27f")
!237 = !{!238, !239}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !236, file: !2, baseType: !172, size: 64, align: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !236, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!240 = !{!241, !242, !243, !245}
!241 = !DILocalVariable(name: "self", arg: 1, scope: !233, file: !163, line: 389, type: !174)
!242 = !DILocalVariable(name: "slice", arg: 2, scope: !233, file: !163, line: 389, type: !236)
!243 = !DILocalVariable(name: "this", scope: !244, file: !163, line: 390, type: !174, align: 8)
!244 = distinct !DILexicalBlock(scope: !233, file: !163, line: 390, column: 9)
!245 = !DILocalVariable(name: "new_len", scope: !246, file: !163, line: 398, type: !9, align: 8)
!246 = distinct !DILexicalBlock(scope: !244, file: !163, line: 398, column: 13)
!247 = !DILocation(line: 389, column: 33, scope: !233)
!248 = !DILocation(line: 389, column: 39, scope: !233)
!249 = !DILocation(line: 390, column: 13, scope: !244)
!250 = !DILocation(line: 390, column: 20, scope: !233)
!251 = !DILocation(line: 393, column: 13, scope: !244)
!252 = !DILocation(line: 398, column: 27, scope: !244)
!253 = !DILocation(line: 398, column: 17, scope: !246)
!254 = !DILocalVariable(name: "self", arg: 1, scope: !255, file: !256, line: 2032, type: !236)
!255 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h6b018f74a5c43a00E", scope: !257, file: !256, line: 2032, type: !259, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !262)
!256 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "4a6afd5ac69802a5308a55262a61b144")
!257 = !DINamespace(name: "{impl#1}", scope: !258)
!258 = !DINamespace(name: "mut_ptr", scope: !204)
!259 = !DISubroutineType(types: !260)
!260 = !{!261, !236}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!262 = !{!254}
!263 = !DILocation(line: 2032, column: 29, scope: !255, inlinedAt: !264)
!264 = distinct !DILocation(line: 399, column: 43, scope: !246)
!265 = !DILocalVariable(name: "self", arg: 1, scope: !266, file: !256, line: 1025, type: !261)
!266 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h6b99bcd453829b97E", scope: !267, file: !256, line: 1025, type: !268, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !270)
!267 = !DINamespace(name: "{impl#0}", scope: !258)
!268 = !DISubroutineType(types: !269)
!269 = !{!261, !261, !9}
!270 = !{!265, !271}
!271 = !DILocalVariable(name: "count", arg: 2, scope: !266, file: !256, line: 1025, type: !9)
!272 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !273)
!273 = distinct !DILocation(line: 399, column: 43, scope: !246)
!274 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !273)
!275 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !273)
!276 = !DILocation(line: 399, column: 13, scope: !246)
!277 = !DILocation(line: 401, column: 6, scope: !233)
!278 = !DILocalVariable(name: "this", arg: 1, scope: !279, file: !218, line: 2510, type: !174)
!279 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h76428ad97d6eff0cE", scope: !280, file: !218, line: 2510, type: !281, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !283)
!280 = !DINamespace(name: "get_unchecked_mut", scope: !164)
!281 = !DISubroutineType(types: !282)
!282 = !{null, !174, !236}
!283 = !{!278, !284}
!284 = !DILocalVariable(name: "slice", arg: 2, scope: !279, file: !218, line: 2510, type: !236)
!285 = !DILocation(line: 2510, column: 39, scope: !279, inlinedAt: !286)
!286 = distinct !DILocation(line: 393, column: 13, scope: !244)
!287 = !DILocation(line: 396, column: 17, scope: !288, inlinedAt: !286)
!288 = !DILexicalBlockFile(scope: !279, file: !163, discriminator: 0)
!289 = !DILocalVariable(name: "self", arg: 1, scope: !290, file: !256, line: 1896, type: !236)
!290 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h2cd53046dd6ffd97E", scope: !257, file: !256, line: 1896, type: !291, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{!9, !236}
!293 = !{!289}
!294 = !DILocation(line: 1896, column: 22, scope: !290, inlinedAt: !295)
!295 = distinct !DILocation(line: 396, column: 55, scope: !288, inlinedAt: !286)
!296 = !DILocation(line: 1897, column: 9, scope: !290, inlinedAt: !295)
!297 = !DILocation(line: 396, column: 43, scope: !288, inlinedAt: !286)
!298 = !DILocation(line: 2511, column: 20, scope: !279, inlinedAt: !286)
!299 = !DILocation(line: 2513, column: 21, scope: !279, inlinedAt: !286)
!300 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h06c169b84a427d0eE", scope: !164, file: !163, line: 404, type: !301, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !320)
!301 = !DISubroutineType(types: !302)
!302 = !{!303, !174, !303, !307}
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !304, templateParams: !24, identifier: "a1f66151f051bfdee5f3669608d8086b")
!304 = !{!305, !306}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !303, file: !2, baseType: !172, size: 64, align: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !303, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !308, size: 64, align: 64, dwarfAddressSpace: 0)
!308 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !309, file: !2, size: 192, align: 64, elements: !311, templateParams: !24, identifier: "3e3218ee032660044ada2288cb4b8584")
!309 = !DINamespace(name: "location", scope: !310)
!310 = !DINamespace(name: "panic", scope: !142)
!311 = !{!312, !318, !319}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !308, file: !2, baseType: !313, size: 128, align: 64)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !314, templateParams: !24, identifier: "857c99401054bcaa39f98e6e0c6d74b")
!314 = !{!315, !317}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !313, file: !2, baseType: !316, size: 64, align: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !313, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !308, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !308, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!320 = !{!321, !322}
!321 = !DILocalVariable(name: "self", arg: 1, scope: !300, file: !163, line: 404, type: !174)
!322 = !DILocalVariable(name: "slice", arg: 2, scope: !300, file: !163, line: 404, type: !303)
!323 = !DILocation(line: 404, column: 14, scope: !300)
!324 = !DILocation(line: 404, column: 20, scope: !300)
!325 = !DILocation(line: 405, column: 12, scope: !300)
!326 = !DILocation(line: 407, column: 19, scope: !300)
!327 = !DILocation(line: 406, column: 13, scope: !300)
!328 = !DILocation(line: 411, column: 20, scope: !300)
!329 = !DILocation(line: 412, column: 6, scope: !300)
!330 = !DILocation(line: 408, column: 13, scope: !300)
!331 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d4cc9f120219a7eE", scope: !164, file: !163, line: 415, type: !332, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !338)
!332 = !DISubroutineType(types: !333)
!333 = !{!334, !174, !334, !307}
!334 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !335, templateParams: !24, identifier: "3ad04270f3c30707fca606d2b27e2714")
!335 = !{!336, !337}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !334, file: !2, baseType: !172, size: 64, align: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !334, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!338 = !{!339, !340}
!339 = !DILocalVariable(name: "self", arg: 1, scope: !331, file: !163, line: 415, type: !174)
!340 = !DILocalVariable(name: "slice", arg: 2, scope: !331, file: !163, line: 415, type: !334)
!341 = !DILocation(line: 415, column: 18, scope: !331)
!342 = !DILocation(line: 415, column: 24, scope: !331)
!343 = !DILocation(line: 416, column: 12, scope: !331)
!344 = !DILocation(line: 418, column: 19, scope: !331)
!345 = !DILocation(line: 417, column: 13, scope: !331)
!346 = !DILocation(line: 422, column: 24, scope: !331)
!347 = !DILocation(line: 423, column: 6, scope: !331)
!348 = !DILocation(line: 419, column: 13, scope: !331)
!349 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h6d8936b6797b6854E", scope: !350, file: !163, line: 459, type: !351, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !356)
!350 = !DINamespace(name: "{impl#5}", scope: !165)
!351 = !DISubroutineType(types: !352)
!352 = !{!334, !353, !334, !307}
!353 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !175, file: !2, size: 64, align: 64, elements: !354, templateParams: !180, identifier: "6cb6de305a10bf2cff0b0b7208377db7")
!354 = !{!355}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !353, file: !2, baseType: !9, size: 64, align: 64)
!356 = !{!357, !358}
!357 = !DILocalVariable(name: "self", arg: 1, scope: !349, file: !163, line: 459, type: !353)
!358 = !DILocalVariable(name: "slice", arg: 2, scope: !349, file: !163, line: 459, type: !334)
!359 = !DILocation(line: 459, column: 18, scope: !349)
!360 = !DILocation(line: 459, column: 24, scope: !349)
!361 = !DILocation(line: 460, column: 9, scope: !349)
!362 = !DILocation(line: 461, column: 6, scope: !349)
!363 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h447124bbfa895005E", scope: !364, file: !163, line: 486, type: !365, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !370)
!364 = !DINamespace(name: "{impl#6}", scope: !165)
!365 = !DISubroutineType(types: !366)
!366 = !{!236, !367, !236}
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !175, file: !2, size: 64, align: 64, elements: !368, templateParams: !180, identifier: "633fa894cee051e54c34353f6c506c59")
!368 = !{!369}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !367, file: !2, baseType: !9, size: 64, align: 64)
!370 = !{!371, !372}
!371 = !DILocalVariable(name: "self", arg: 1, scope: !363, file: !163, line: 486, type: !367)
!372 = !DILocalVariable(name: "slice", arg: 2, scope: !363, file: !163, line: 486, type: !236)
!373 = !DILocation(line: 486, column: 33, scope: !363)
!374 = !DILocation(line: 486, column: 39, scope: !363)
!375 = !DILocation(line: 1896, column: 22, scope: !290, inlinedAt: !376)
!376 = distinct !DILocation(line: 488, column: 31, scope: !363)
!377 = !DILocation(line: 1897, column: 9, scope: !290, inlinedAt: !376)
!378 = !DILocation(line: 488, column: 18, scope: !363)
!379 = !DILocation(line: 489, column: 6, scope: !363)
!380 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5fa0145d511e9c00E", scope: !364, file: !163, line: 501, type: !381, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !383)
!381 = !DISubroutineType(types: !382)
!382 = !{!334, !367, !334, !307}
!383 = !{!384, !385}
!384 = !DILocalVariable(name: "self", arg: 1, scope: !380, file: !163, line: 501, type: !367)
!385 = !DILocalVariable(name: "slice", arg: 2, scope: !380, file: !163, line: 501, type: !334)
!386 = !DILocation(line: 501, column: 18, scope: !380)
!387 = !DILocation(line: 501, column: 24, scope: !380)
!388 = !DILocation(line: 502, column: 12, scope: !380)
!389 = !DILocation(line: 506, column: 24, scope: !380)
!390 = !DILocation(line: 507, column: 6, scope: !380)
!391 = !DILocation(line: 503, column: 13, scope: !380)
!392 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5e1dce60117b08eaE", scope: !393, file: !163, line: 582, type: !394, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !402)
!393 = !DINamespace(name: "{impl#8}", scope: !165)
!394 = !DISubroutineType(types: !395)
!395 = !{!334, !396, !334, !307}
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !175, file: !2, size: 192, align: 64, elements: !397, templateParams: !180, identifier: "4cc010dd72530bd497804bb5144e1045")
!397 = !{!398, !399, !400}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !396, file: !2, baseType: !9, size: 64, align: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !396, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !396, file: !2, baseType: !401, size: 8, align: 8, offset: 128)
!401 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!402 = !{!403, !404}
!403 = !DILocalVariable(name: "self", arg: 1, scope: !392, file: !163, line: 582, type: !396)
!404 = !DILocalVariable(name: "slice", arg: 2, scope: !392, file: !163, line: 582, type: !334)
!405 = !DILocation(line: 582, column: 18, scope: !392)
!406 = !DILocation(line: 582, column: 24, scope: !392)
!407 = !DILocation(line: 583, column: 13, scope: !392)
!408 = !DILocation(line: 583, column: 12, scope: !392)
!409 = !DILocation(line: 586, column: 9, scope: !392)
!410 = !DILocation(line: 587, column: 6, scope: !392)
!411 = !DILocation(line: 584, column: 13, scope: !392)
!412 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hda782a337d58430aE", scope: !413, file: !163, line: 623, type: !414, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !419)
!413 = !DINamespace(name: "{impl#9}", scope: !165)
!414 = !DISubroutineType(types: !415)
!415 = !{!334, !416, !334, !307}
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeToInclusive<usize>", scope: !175, file: !2, size: 64, align: 64, elements: !417, templateParams: !180, identifier: "d7397f3fe79997e63efbd65817c75b2c")
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !2, baseType: !9, size: 64, align: 64)
!419 = !{!420, !421}
!420 = !DILocalVariable(name: "self", arg: 1, scope: !412, file: !163, line: 623, type: !416)
!421 = !DILocalVariable(name: "slice", arg: 2, scope: !412, file: !163, line: 623, type: !334)
!422 = !DILocation(line: 623, column: 18, scope: !412)
!423 = !DILocation(line: 623, column: 24, scope: !412)
!424 = !DILocation(line: 624, column: 9, scope: !412)
!425 = !DILocation(line: 625, column: 6, scope: !412)
!426 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7fc877f30612e8b6E", scope: !428, file: !427, line: 2269, type: !429, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !487, retainedNodes: !484)
!427 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "6b0c81a808d92ec5841ea47424002502")
!428 = !DINamespace(name: "{impl#53}", scope: !141)
!429 = !DISubroutineType(types: !430)
!430 = !{!431, !449, !450}
!431 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !432, file: !2, size: 8, align: 8, elements: !433, templateParams: !24, identifier: "2fd86163cab7c59d321f813815445f61")
!432 = !DINamespace(name: "result", scope: !142)
!433 = !{!434}
!434 = !DICompositeType(tag: DW_TAG_variant_part, scope: !431, file: !2, size: 8, align: 8, elements: !435, templateParams: !24, identifier: "54f01c7802f052a075c25065a54e3108", discriminator: !448)
!435 = !{!436, !444}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !434, file: !2, baseType: !437, size: 8, align: 8, extraData: i64 0)
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !431, file: !2, size: 8, align: 8, elements: !438, templateParams: !440, identifier: "199ca63b65771145c1ecaa36e0c45446")
!438 = !{!439}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !437, file: !2, baseType: !7, align: 8, offset: 8)
!440 = !{!441, !442}
!441 = !DITemplateTypeParameter(name: "T", type: !7)
!442 = !DITemplateTypeParameter(name: "E", type: !443)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !141, file: !2, align: 8, elements: !24, identifier: "e8cc4da9d962b0d25409a133a5d42c")
!444 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !434, file: !2, baseType: !445, size: 8, align: 8, extraData: i64 1)
!445 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !431, file: !2, size: 8, align: 8, elements: !446, templateParams: !440, identifier: "42ce6621199a4384f72edb2ce280fbba")
!446 = !{!447}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !445, file: !2, baseType: !443, align: 8, offset: 8)
!448 = !DIDerivedType(tag: DW_TAG_member, scope: !431, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagArtificial)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !451, size: 64, align: 64, dwarfAddressSpace: 0)
!451 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !141, file: !2, size: 512, align: 64, elements: !452, templateParams: !24, identifier: "ba1c66510e28e89fe66e924337088184")
!452 = !{!453, !454, !456, !457, !472, !473}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !451, file: !2, baseType: !27, size: 32, align: 32, offset: 384)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !451, file: !2, baseType: !455, size: 32, align: 32, offset: 416)
!455 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !451, file: !2, baseType: !139, size: 8, align: 8, offset: 448)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !451, file: !2, baseType: !458, size: 128, align: 64, offset: 128)
!458 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !459, file: !2, size: 128, align: 64, elements: !460, templateParams: !24, identifier: "7182c598151f2d841d4f46050c57b41c")
!459 = !DINamespace(name: "option", scope: !142)
!460 = !{!461}
!461 = !DICompositeType(tag: DW_TAG_variant_part, scope: !458, file: !2, size: 128, align: 64, elements: !462, templateParams: !24, identifier: "cbec1a373e2f23dd816907c50c746fd0", discriminator: !471)
!462 = !{!463, !467}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !461, file: !2, baseType: !464, size: 128, align: 64, extraData: i64 0)
!464 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !458, file: !2, size: 128, align: 64, elements: !24, templateParams: !465, identifier: "656d115187d98681854f3179cd6091aa")
!465 = !{!466}
!466 = !DITemplateTypeParameter(name: "T", type: !9)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !461, file: !2, baseType: !468, size: 128, align: 64, extraData: i64 1)
!468 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !458, file: !2, size: 128, align: 64, elements: !469, templateParams: !465, identifier: "8a80ba7685ed458a9d770fc472f6a3ea")
!469 = !{!470}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !468, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, scope: !458, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !451, file: !2, baseType: !458, size: 128, align: 64, offset: 256)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !451, file: !2, baseType: !474, size: 128, align: 64)
!474 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !475, templateParams: !24, identifier: "5db60ab68e9a33842ed84c98957b092f")
!475 = !{!476, !479}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !474, file: !2, baseType: !477, size: 64, align: 64)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64, align: 64, dwarfAddressSpace: 0)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !24, identifier: "2bf51e8df80b66cd32f422ed18b7c106")
!479 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !474, file: !2, baseType: !480, size: 64, align: 64, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !481, size: 64, align: 64, dwarfAddressSpace: 0)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !482)
!482 = !{!483}
!483 = !DISubrange(count: 3, lowerBound: 0)
!484 = !{!485, !486}
!485 = !DILocalVariable(name: "self", arg: 1, scope: !426, file: !427, line: 2269, type: !449)
!486 = !DILocalVariable(name: "f", arg: 2, scope: !426, file: !427, line: 2269, type: !450)
!487 = !{!488}
!488 = !DITemplateTypeParameter(name: "T", type: !26)
!489 = !DILocation(line: 2269, column: 20, scope: !426)
!490 = !DILocation(line: 2269, column: 27, scope: !426)
!491 = !DILocation(line: 2269, column: 71, scope: !426)
!492 = !{i64 4}
!493 = !DILocation(line: 2269, column: 62, scope: !426)
!494 = !DILocation(line: 2269, column: 84, scope: !426)
!495 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha73fadb73b4826ddE", scope: !428, file: !427, line: 2269, type: !496, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !499)
!496 = !DISubroutineType(types: !497)
!497 = !{!431, !498, !450}
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!499 = !{!500, !501}
!500 = !DILocalVariable(name: "self", arg: 1, scope: !495, file: !427, line: 2269, type: !498)
!501 = !DILocalVariable(name: "f", arg: 2, scope: !495, file: !427, line: 2269, type: !450)
!502 = !DILocation(line: 2269, column: 20, scope: !495)
!503 = !DILocation(line: 2269, column: 27, scope: !495)
!504 = !DILocation(line: 2269, column: 71, scope: !495)
!505 = !{i64 8}
!506 = !DILocation(line: 2269, column: 62, scope: !495)
!507 = !DILocation(line: 2269, column: 84, scope: !495)
!508 = distinct !DISubprogram(name: "is_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17h486db419f38937a8E", scope: !509, file: !218, line: 2545, type: !510, scopeLine: 2545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !512)
!509 = !DINamespace(name: "intrinsics", scope: !142)
!510 = !DISubroutineType(types: !511)
!511 = !{!401, !207, !207, !9}
!512 = !{!513, !514, !515, !516, !518, !520, !522}
!513 = !DILocalVariable(name: "src", arg: 1, scope: !508, file: !218, line: 2545, type: !207)
!514 = !DILocalVariable(name: "dst", arg: 2, scope: !508, file: !218, line: 2545, type: !207)
!515 = !DILocalVariable(name: "count", arg: 3, scope: !508, file: !218, line: 2545, type: !9)
!516 = !DILocalVariable(name: "src_usize", scope: !517, file: !218, line: 2546, type: !9, align: 8)
!517 = distinct !DILexicalBlock(scope: !508, file: !218, line: 2546, column: 5)
!518 = !DILocalVariable(name: "dst_usize", scope: !519, file: !218, line: 2547, type: !9, align: 8)
!519 = distinct !DILexicalBlock(scope: !517, file: !218, line: 2547, column: 5)
!520 = !DILocalVariable(name: "size", scope: !521, file: !218, line: 2548, type: !9, align: 8)
!521 = distinct !DILexicalBlock(scope: !519, file: !218, line: 2548, column: 5)
!522 = !DILocalVariable(name: "diff", scope: !523, file: !218, line: 2551, type: !9, align: 8)
!523 = distinct !DILexicalBlock(scope: !521, file: !218, line: 2551, column: 5)
!524 = !DILocation(line: 2545, column: 36, scope: !508)
!525 = !DILocation(line: 2545, column: 51, scope: !508)
!526 = !DILocation(line: 2545, column: 66, scope: !508)
!527 = !DILocation(line: 2551, column: 9, scope: !523)
!528 = !DILocalVariable(name: "self", arg: 1, scope: !529, file: !201, line: 203, type: !207)
!529 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hfb069b686cbbe0aaE", scope: !202, file: !201, line: 203, type: !530, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !532)
!530 = !DISubroutineType(types: !531)
!531 = !{!9, !207}
!532 = !{!528}
!533 = !DILocation(line: 203, column: 17, scope: !529, inlinedAt: !534)
!534 = distinct !DILocation(line: 2546, column: 21, scope: !508)
!535 = !DILocalVariable(name: "self", arg: 1, scope: !536, file: !201, line: 58, type: !207)
!536 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc79edfa29f27cd76E", scope: !202, file: !201, line: 58, type: !537, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !540, retainedNodes: !539)
!537 = !DISubroutineType(types: !538)
!538 = !{!6, !207}
!539 = !{!535}
!540 = !{!190, !541}
!541 = !DITemplateTypeParameter(name: "U", type: !7)
!542 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !543)
!543 = distinct !DILocation(line: 207, column: 33, scope: !529, inlinedAt: !534)
!544 = !DILocation(line: 207, column: 18, scope: !529, inlinedAt: !534)
!545 = !DILocation(line: 2546, column: 21, scope: !508)
!546 = !DILocation(line: 2546, column: 9, scope: !517)
!547 = !DILocation(line: 203, column: 17, scope: !529, inlinedAt: !548)
!548 = distinct !DILocation(line: 2547, column: 21, scope: !517)
!549 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !550)
!550 = distinct !DILocation(line: 207, column: 33, scope: !529, inlinedAt: !548)
!551 = !DILocation(line: 207, column: 18, scope: !529, inlinedAt: !548)
!552 = !DILocation(line: 2547, column: 21, scope: !517)
!553 = !DILocation(line: 2547, column: 9, scope: !519)
!554 = !DILocation(line: 2548, column: 16, scope: !519)
!555 = !DILocation(line: 2548, column: 9, scope: !521)
!556 = !DILocation(line: 2551, column: 19, scope: !521)
!557 = !DILocation(line: 2551, column: 74, scope: !521)
!558 = !DILocation(line: 2551, column: 43, scope: !521)
!559 = !DILocation(line: 2551, column: 16, scope: !521)
!560 = !DILocation(line: 2554, column: 5, scope: !523)
!561 = !DILocation(line: 2555, column: 2, scope: !508)
!562 = distinct !DISubprogram(name: "copy_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h41ba5ef21035be4eE", scope: !509, file: !218, line: 2647, type: !563, scopeLine: 2647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !565)
!563 = !DISubroutineType(types: !564)
!564 = !{null, !207, !261, !9}
!565 = !{!566, !567, !568}
!566 = !DILocalVariable(name: "src", arg: 1, scope: !562, file: !218, line: 2647, type: !207)
!567 = !DILocalVariable(name: "dst", arg: 2, scope: !562, file: !218, line: 2647, type: !261)
!568 = !DILocalVariable(name: "count", arg: 3, scope: !562, file: !218, line: 2647, type: !9)
!569 = !DILocation(line: 2647, column: 44, scope: !562)
!570 = !DILocation(line: 2647, column: 59, scope: !562)
!571 = !DILocation(line: 2647, column: 72, scope: !562)
!572 = !DILocation(line: 2657, column: 9, scope: !562)
!573 = !DILocation(line: 2665, column: 9, scope: !562)
!574 = !DILocation(line: 2667, column: 2, scope: !562)
!575 = !DILocalVariable(name: "src", arg: 1, scope: !576, file: !218, line: 2510, type: !207)
!576 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h0e7febf4a715d66eE", scope: !577, file: !218, line: 2510, type: !563, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !578)
!577 = !DINamespace(name: "copy_nonoverlapping", scope: !509)
!578 = !{!575, !579, !580}
!579 = !DILocalVariable(name: "dst", arg: 2, scope: !576, file: !218, line: 2510, type: !261)
!580 = !DILocalVariable(name: "count", arg: 3, scope: !576, file: !218, line: 2510, type: !9)
!581 = !DILocation(line: 2510, column: 39, scope: !576, inlinedAt: !582)
!582 = distinct !DILocation(line: 2657, column: 9, scope: !562)
!583 = !DILocation(line: 2661, column: 13, scope: !576, inlinedAt: !582)
!584 = !DILocation(line: 2662, column: 20, scope: !576, inlinedAt: !582)
!585 = !DILocation(line: 2663, column: 20, scope: !576, inlinedAt: !582)
!586 = !DILocation(line: 2511, column: 20, scope: !576, inlinedAt: !582)
!587 = !DILocation(line: 2513, column: 21, scope: !576, inlinedAt: !582)
!588 = distinct !DISubprogram(name: "copy_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hbc768b6fe7843ff2E", scope: !509, file: !218, line: 2647, type: !589, scopeLine: 2647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !593)
!589 = !DISubroutineType(types: !590)
!590 = !{null, !591, !592, !9}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!593 = !{!594, !595, !596}
!594 = !DILocalVariable(name: "src", arg: 1, scope: !588, file: !218, line: 2647, type: !591)
!595 = !DILocalVariable(name: "dst", arg: 2, scope: !588, file: !218, line: 2647, type: !592)
!596 = !DILocalVariable(name: "count", arg: 3, scope: !588, file: !218, line: 2647, type: !9)
!597 = !DILocation(line: 2647, column: 44, scope: !588)
!598 = !DILocation(line: 2647, column: 59, scope: !588)
!599 = !DILocation(line: 2647, column: 72, scope: !588)
!600 = !DILocation(line: 2657, column: 9, scope: !588)
!601 = !DILocation(line: 2665, column: 9, scope: !588)
!602 = !DILocation(line: 2667, column: 2, scope: !588)
!603 = !DILocalVariable(name: "src", arg: 1, scope: !604, file: !218, line: 2510, type: !591)
!604 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h25ac2bb0467aa76aE", scope: !577, file: !218, line: 2510, type: !589, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !605)
!605 = !{!603, !606, !607}
!606 = !DILocalVariable(name: "dst", arg: 2, scope: !604, file: !218, line: 2510, type: !592)
!607 = !DILocalVariable(name: "count", arg: 3, scope: !604, file: !218, line: 2510, type: !9)
!608 = !DILocation(line: 2510, column: 39, scope: !604, inlinedAt: !609)
!609 = distinct !DILocation(line: 2657, column: 9, scope: !588)
!610 = !DILocation(line: 2661, column: 13, scope: !604, inlinedAt: !609)
!611 = !DILocation(line: 2662, column: 20, scope: !604, inlinedAt: !609)
!612 = !DILocation(line: 2663, column: 20, scope: !604, inlinedAt: !609)
!613 = !DILocation(line: 2511, column: 20, scope: !604, inlinedAt: !609)
!614 = !DILocation(line: 2513, column: 21, scope: !604, inlinedAt: !609)
!615 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h1f7b303582864a0eE", scope: !509, file: !218, line: 2529, type: !616, scopeLine: 2529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !629)
!616 = !DISubroutineType(types: !617)
!617 = !{!401, !618}
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !619, size: 64, align: 64, dwarfAddressSpace: 0)
!619 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !620, file: !2, size: 192, align: 64, elements: !622, templateParams: !189, identifier: "e68c541abc9f54ffcafed90f3e63c21d")
!620 = !DINamespace(name: "maybe_uninit", scope: !621)
!621 = !DINamespace(name: "mem", scope: !142)
!622 = !{!623, !624}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !619, file: !2, baseType: !7, align: 8)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !619, file: !2, baseType: !625, size: 192, align: 64)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !626, file: !2, size: 192, align: 64, elements: !627, templateParams: !189, identifier: "17f0b6b8b89d9625ca2d393820e42193")
!626 = !DINamespace(name: "manually_drop", scope: !621)
!627 = !{!628}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !625, file: !2, baseType: !13, size: 192, align: 64)
!629 = !{!630}
!630 = !DILocalVariable(name: "ptr", arg: 1, scope: !615, file: !218, line: 2529, type: !618)
!631 = !{!632}
!632 = !DITemplateTypeParameter(name: "T", type: !619)
!633 = !DILocation(line: 2529, column: 42, scope: !615)
!634 = !DILocation(line: 2530, column: 6, scope: !615)
!635 = !DILocation(line: 2530, column: 5, scope: !615)
!636 = !DILocation(line: 2530, column: 23, scope: !615)
!637 = !DILocation(line: 2531, column: 2, scope: !615)
!638 = distinct !DISubprogram(name: "is_aligned_and_not_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17hc5f2ec5300fbb4bfE", scope: !509, file: !218, line: 2529, type: !639, scopeLine: 2529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !641)
!639 = !DISubroutineType(types: !640)
!640 = !{!401, !207}
!641 = !{!642}
!642 = !DILocalVariable(name: "ptr", arg: 1, scope: !638, file: !218, line: 2529, type: !207)
!643 = !DILocation(line: 2529, column: 42, scope: !638)
!644 = !DILocation(line: 2530, column: 6, scope: !638)
!645 = !DILocation(line: 2530, column: 5, scope: !638)
!646 = !DILocation(line: 2530, column: 23, scope: !638)
!647 = !DILocation(line: 2531, column: 2, scope: !638)
!648 = distinct !DISubprogram(name: "is_valid_allocation_size<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics24is_valid_allocation_size17hde767ae676a5474fE", scope: !509, file: !218, line: 2535, type: !649, scopeLine: 2535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !651)
!649 = !DISubroutineType(types: !650)
!650 = !{!401, !9}
!651 = !{!652, !653}
!652 = !DILocalVariable(name: "len", arg: 1, scope: !648, file: !218, line: 2535, type: !9)
!653 = !DILocalVariable(name: "max_len", scope: !654, file: !218, line: 2536, type: !9, align: 8)
!654 = distinct !DILexicalBlock(scope: !648, file: !218, line: 2536, column: 5)
!655 = !DILocation(line: 2536, column: 9, scope: !654)
!656 = !DILocation(line: 2535, column: 43, scope: !648)
!657 = !DILocation(line: 2540, column: 5, scope: !654)
!658 = !DILocation(line: 2541, column: 2, scope: !648)
!659 = distinct !DISubprogram(name: "copy<usize>", linkageName: "_ZN4core10intrinsics4copy17h51769a115d3c0008E", scope: !509, file: !218, line: 2738, type: !589, scopeLine: 2738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !660)
!660 = !{!661, !662, !663}
!661 = !DILocalVariable(name: "src", arg: 1, scope: !659, file: !218, line: 2738, type: !591)
!662 = !DILocalVariable(name: "dst", arg: 2, scope: !659, file: !218, line: 2738, type: !592)
!663 = !DILocalVariable(name: "count", arg: 3, scope: !659, file: !218, line: 2738, type: !9)
!664 = !DILocation(line: 2738, column: 29, scope: !659)
!665 = !DILocation(line: 2738, column: 44, scope: !659)
!666 = !DILocation(line: 2738, column: 57, scope: !659)
!667 = !DILocation(line: 2747, column: 9, scope: !659)
!668 = !DILocation(line: 2752, column: 9, scope: !659)
!669 = !DILocation(line: 2754, column: 2, scope: !659)
!670 = !DILocalVariable(name: "src", arg: 1, scope: !671, file: !218, line: 2510, type: !591)
!671 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics4copy7runtime17ha2950624090d1286E", scope: !672, file: !218, line: 2510, type: !673, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !675)
!672 = !DINamespace(name: "copy", scope: !509)
!673 = !DISubroutineType(types: !674)
!674 = !{null, !591, !592}
!675 = !{!670, !676}
!676 = !DILocalVariable(name: "dst", arg: 2, scope: !671, file: !218, line: 2510, type: !592)
!677 = !DILocation(line: 2510, column: 39, scope: !671, inlinedAt: !678)
!678 = distinct !DILocation(line: 2747, column: 9, scope: !659)
!679 = !DILocation(line: 2750, column: 13, scope: !671, inlinedAt: !678)
!680 = !DILocation(line: 2750, column: 45, scope: !671, inlinedAt: !678)
!681 = !DILocation(line: 2511, column: 20, scope: !671, inlinedAt: !678)
!682 = !DILocation(line: 2513, column: 21, scope: !671, inlinedAt: !678)
!683 = distinct !DISubprogram(name: "copy<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy17hec6c0c291f5acb3dE", scope: !509, file: !218, line: 2738, type: !563, scopeLine: 2738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !684)
!684 = !{!685, !686, !687}
!685 = !DILocalVariable(name: "src", arg: 1, scope: !683, file: !218, line: 2738, type: !207)
!686 = !DILocalVariable(name: "dst", arg: 2, scope: !683, file: !218, line: 2738, type: !261)
!687 = !DILocalVariable(name: "count", arg: 3, scope: !683, file: !218, line: 2738, type: !9)
!688 = !DILocation(line: 2738, column: 29, scope: !683)
!689 = !DILocation(line: 2738, column: 44, scope: !683)
!690 = !DILocation(line: 2738, column: 57, scope: !683)
!691 = !DILocation(line: 2747, column: 9, scope: !683)
!692 = !DILocation(line: 2752, column: 9, scope: !683)
!693 = !DILocation(line: 2754, column: 2, scope: !683)
!694 = !DILocalVariable(name: "src", arg: 1, scope: !695, file: !218, line: 2510, type: !207)
!695 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy7runtime17h166a771d022cb87dE", scope: !672, file: !218, line: 2510, type: !696, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !698)
!696 = !DISubroutineType(types: !697)
!697 = !{null, !207, !261}
!698 = !{!694, !699}
!699 = !DILocalVariable(name: "dst", arg: 2, scope: !695, file: !218, line: 2510, type: !261)
!700 = !DILocation(line: 2510, column: 39, scope: !695, inlinedAt: !701)
!701 = distinct !DILocation(line: 2747, column: 9, scope: !683)
!702 = !DILocation(line: 2750, column: 13, scope: !695, inlinedAt: !701)
!703 = !DILocation(line: 2750, column: 45, scope: !695, inlinedAt: !701)
!704 = !DILocation(line: 2511, column: 20, scope: !695, inlinedAt: !701)
!705 = !DILocation(line: 2513, column: 21, scope: !695, inlinedAt: !701)
!706 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc3ea1d6743894018E", scope: !708, file: !707, line: 1375, type: !710, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !712)
!707 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "d644eb02e860469d314db953642d3471")
!708 = !DINamespace(name: "{impl#63}", scope: !709)
!709 = !DINamespace(name: "impls", scope: !149)
!710 = !DISubroutineType(types: !711)
!711 = !{!148, !132, !132}
!712 = !{!713, !714}
!713 = !DILocalVariable(name: "self", arg: 1, scope: !706, file: !707, line: 1375, type: !132)
!714 = !DILocalVariable(name: "other", arg: 2, scope: !706, file: !707, line: 1375, type: !132)
!715 = !DILocation(line: 1375, column: 24, scope: !706)
!716 = !DILocation(line: 1375, column: 31, scope: !706)
!717 = !DILocation(line: 1378, column: 24, scope: !706)
!718 = !DILocation(line: 1378, column: 32, scope: !706)
!719 = !DILocation(line: 1379, column: 29, scope: !706)
!720 = !DILocation(line: 1379, column: 38, scope: !706)
!721 = !DILocation(line: 1378, column: 41, scope: !706)
!722 = !DILocation(line: 1378, column: 21, scope: !706)
!723 = !DILocation(line: 1381, column: 18, scope: !706)
!724 = !{i8 -1, i8 2}
!725 = !DILocation(line: 1380, column: 28, scope: !706)
!726 = !DILocation(line: 1379, column: 26, scope: !706)
!727 = !DILocation(line: 1379, column: 47, scope: !706)
!728 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h5a181105292e9ec3E", scope: !730, file: !729, line: 185, type: !732, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !734)
!729 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "02359a317e793c1b82de7b934f87f847")
!730 = !DINamespace(name: "{impl#86}", scope: !731)
!731 = !DINamespace(name: "num", scope: !141)
!732 = !DISubroutineType(types: !733)
!733 = !{!431, !85, !450}
!734 = !{!735, !736}
!735 = !DILocalVariable(name: "self", arg: 1, scope: !728, file: !729, line: 185, type: !85)
!736 = !DILocalVariable(name: "f", arg: 2, scope: !728, file: !729, line: 185, type: !450)
!737 = !DILocation(line: 185, column: 20, scope: !728)
!738 = !DILocation(line: 185, column: 27, scope: !728)
!739 = !DILocation(line: 186, column: 20, scope: !728)
!740 = !DILocation(line: 188, column: 27, scope: !728)
!741 = !DILocation(line: 187, column: 21, scope: !728)
!742 = !DILocation(line: 193, column: 14, scope: !728)
!743 = !DILocation(line: 191, column: 21, scope: !728)
!744 = !DILocation(line: 189, column: 21, scope: !728)
!745 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h13fb050ba9099d34E", scope: !746, file: !729, line: 185, type: !747, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !749)
!746 = !DINamespace(name: "{impl#87}", scope: !731)
!747 = !DISubroutineType(types: !748)
!748 = !{!431, !132, !450}
!749 = !{!750, !751}
!750 = !DILocalVariable(name: "self", arg: 1, scope: !745, file: !729, line: 185, type: !132)
!751 = !DILocalVariable(name: "f", arg: 2, scope: !745, file: !729, line: 185, type: !450)
!752 = !DILocation(line: 185, column: 20, scope: !745)
!753 = !DILocation(line: 185, column: 27, scope: !745)
!754 = !DILocation(line: 186, column: 20, scope: !745)
!755 = !DILocation(line: 188, column: 27, scope: !745)
!756 = !DILocation(line: 187, column: 21, scope: !745)
!757 = !DILocation(line: 193, column: 14, scope: !745)
!758 = !DILocation(line: 191, column: 21, scope: !745)
!759 = !DILocation(line: 189, column: 21, scope: !745)
!760 = distinct !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17ha58637c42fd033a9E", scope: !762, file: !761, line: 627, type: !771, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !795, retainedNodes: !788)
!761 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "1d369067f6435760f7cc849d2e066cf9")
!762 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !763, file: !2, size: 128, align: 64, elements: !764, templateParams: !24, identifier: "ae07da23b080ec60b105d8215b18a026")
!763 = !DINamespace(name: "builders", scope: !141)
!764 = !{!765}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !762, file: !2, baseType: !766, size: 128, align: 64)
!766 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !763, file: !2, size: 128, align: 64, elements: !767, templateParams: !24, identifier: "ee606292d8e267aa410b9fb0fdbcf0f1")
!767 = !{!768, !769, !770}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !766, file: !2, baseType: !450, size: 64, align: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !766, file: !2, baseType: !431, size: 8, align: 8, offset: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !766, file: !2, baseType: !401, size: 8, align: 8, offset: 72)
!771 = !DISubroutineType(types: !772)
!772 = !{!773, !773, !774}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !762, size: 64, align: 64, dwarfAddressSpace: 0)
!774 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !775, file: !2, size: 128, align: 64, elements: !776, templateParams: !189, identifier: "5bc19c3c7d4a2ee82859122c73f5cfe0")
!775 = !DINamespace(name: "iter", scope: !166)
!776 = !{!777, !782, !783}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !774, file: !2, baseType: !778, size: 64, align: 64, offset: 64)
!778 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !779, file: !2, size: 64, align: 64, elements: !780, templateParams: !189, identifier: "baadf4d0713ee55c88ab9538c882ce60")
!779 = !DINamespace(name: "non_null", scope: !204)
!780 = !{!781}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !778, file: !2, baseType: !207, size: 64, align: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !774, file: !2, baseType: !207, size: 64, align: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !774, file: !2, baseType: !784, align: 8)
!784 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !785, file: !2, align: 8, elements: !24, templateParams: !786, identifier: "f1569371ef1c8b341e77b601b13bc9cb")
!785 = !DINamespace(name: "marker", scope: !142)
!786 = !{!787}
!787 = !DITemplateTypeParameter(name: "T", type: !12)
!788 = !{!789, !790, !791, !793}
!789 = !DILocalVariable(name: "self", arg: 1, scope: !760, file: !761, line: 627, type: !773)
!790 = !DILocalVariable(name: "entries", arg: 2, scope: !760, file: !761, line: 627, type: !774)
!791 = !DILocalVariable(name: "iter", scope: !792, file: !761, line: 632, type: !774, align: 8)
!792 = distinct !DILexicalBlock(scope: !760, file: !761, line: 632, column: 9)
!793 = !DILocalVariable(name: "entry", scope: !794, file: !761, line: 632, type: !12, align: 8)
!794 = distinct !DILexicalBlock(scope: !792, file: !761, line: 632, column: 30)
!795 = !{!796, !797}
!796 = !DITemplateTypeParameter(name: "D", type: !12)
!797 = !DITemplateTypeParameter(name: "I", type: !774)
!798 = !DILocation(line: 627, column: 26, scope: !760)
!799 = !DILocation(line: 627, column: 37, scope: !760)
!800 = !DILocation(line: 632, column: 22, scope: !792)
!801 = !DILocation(line: 632, column: 13, scope: !794)
!802 = !DILocation(line: 632, column: 22, scope: !760)
!803 = !DILocation(line: 632, column: 9, scope: !792)
!804 = !DILocation(line: 636, column: 6, scope: !760)
!805 = !DILocation(line: 632, column: 13, scope: !792)
!806 = !DILocation(line: 633, column: 13, scope: !794)
!807 = !DILocation(line: 634, column: 9, scope: !792)
!808 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17he6b6155d83e3d98fE", scope: !809, file: !427, line: 333, type: !875, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !880)
!809 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !141, file: !2, size: 384, align: 64, elements: !810, templateParams: !24, identifier: "3fe42376b1215e3c513455baf65e326c")
!810 = !{!811, !817, !859}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !809, file: !2, baseType: !812, size: 128, align: 64, offset: 128)
!812 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !813, templateParams: !24, identifier: "d76b83877ddcb5cca61caf6bdca727ac")
!813 = !{!814, !816}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !812, file: !2, baseType: !815, size: 64, align: 64)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64, dwarfAddressSpace: 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !812, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !809, file: !2, baseType: !818, size: 128, align: 64)
!818 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::Placeholder]>", scope: !459, file: !2, size: 128, align: 64, elements: !819, templateParams: !24, identifier: "df5933aa3c6a9722742184851af5033a")
!819 = !{!820}
!820 = !DICompositeType(tag: DW_TAG_variant_part, scope: !818, file: !2, size: 128, align: 64, elements: !821, templateParams: !24, identifier: "1646963b667c96d9a442c2d3b1073220", discriminator: !858)
!821 = !{!822, !854}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !820, file: !2, baseType: !823, size: 128, align: 64, extraData: i64 0)
!823 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !818, file: !2, size: 128, align: 64, elements: !24, templateParams: !824, identifier: "97766f76e39853db3159b250c9d78db0")
!824 = !{!825}
!825 = !DITemplateTypeParameter(name: "T", type: !826)
!826 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Placeholder]", file: !2, size: 128, align: 64, elements: !827, templateParams: !24, identifier: "ccd3fb5103664797cd5b567c3f0fd7e9")
!827 = !{!828, !853}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !826, file: !2, baseType: !829, size: 64, align: 64)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64, align: 64, dwarfAddressSpace: 0)
!830 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !140, file: !2, size: 448, align: 64, elements: !831, templateParams: !24, identifier: "c260d6150bb5bc8c142c245d8170b89c")
!831 = !{!832, !833, !834, !835, !836, !852}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !830, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !830, file: !2, baseType: !455, size: 32, align: 32, offset: 352)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !830, file: !2, baseType: !139, size: 8, align: 8, offset: 384)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !830, file: !2, baseType: !27, size: 32, align: 32, offset: 320)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !830, file: !2, baseType: !837, size: 128, align: 64)
!837 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !140, file: !2, size: 128, align: 64, elements: !838, templateParams: !24, identifier: "b949088d80ce83b320d7a7cb28de90d")
!838 = !{!839}
!839 = !DICompositeType(tag: DW_TAG_variant_part, scope: !837, file: !2, size: 128, align: 64, elements: !840, templateParams: !24, identifier: "f47c4848087d9b8effa8dd614cb9155f", discriminator: !851)
!840 = !{!841, !845, !849}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !839, file: !2, baseType: !842, size: 128, align: 64, extraData: i64 0)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !837, file: !2, size: 128, align: 64, elements: !843, templateParams: !24, identifier: "e05070f661b792797efd4a004b55064e")
!843 = !{!844}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !842, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !839, file: !2, baseType: !846, size: 128, align: 64, extraData: i64 1)
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !837, file: !2, size: 128, align: 64, elements: !847, templateParams: !24, identifier: "9f51e9afc132ad1f315ce258130e8a4")
!847 = !{!848}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !846, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !839, file: !2, baseType: !850, size: 128, align: 64, extraData: i64 2)
!850 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !837, file: !2, size: 128, align: 64, elements: !24, identifier: "ada4c6a7bf59be7476587d993c5cac36")
!851 = !DIDerivedType(tag: DW_TAG_member, scope: !837, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !830, file: !2, baseType: !837, size: 128, align: 64, offset: 128)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !826, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !820, file: !2, baseType: !855, size: 128, align: 64)
!855 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !818, file: !2, size: 128, align: 64, elements: !856, templateParams: !824, identifier: "10a9ef3e4ebadceee41170cc5ddfec96")
!856 = !{!857}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !855, file: !2, baseType: !826, size: 128, align: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, scope: !818, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !809, file: !2, baseType: !860, size: 128, align: 64, offset: 256)
!860 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Argument]", file: !2, size: 128, align: 64, elements: !861, templateParams: !24, identifier: "b7d08e53003fad3855fb5c1b5ddc2cc6")
!861 = !{!862, !874}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !860, file: !2, baseType: !863, size: 64, align: 64)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64, align: 64, dwarfAddressSpace: 0)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !140, file: !2, size: 128, align: 64, elements: !865, templateParams: !24, identifier: "b2e8380e554a80515b7493dbea0eb626")
!865 = !{!866, !870}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !864, file: !2, baseType: !867, size: 64, align: 64)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::rt::{extern#0}::Opaque", baseType: !868, size: 64, align: 64, dwarfAddressSpace: 0)
!868 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !869, file: !2, align: 8, elements: !24, identifier: "4f858257f67fe311ee5b9d89fb7a346")
!869 = !DINamespace(name: "{extern#0}", scope: !140)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !864, file: !2, baseType: !871, size: 64, align: 64, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::rt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !872, size: 64, align: 64, dwarfAddressSpace: 0)
!872 = !DISubroutineType(types: !873)
!873 = !{!431, !867, !450}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !860, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!809, !812, !860, !826, !877}
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !140, file: !2, align: 8, elements: !878, templateParams: !24, identifier: "705e11c2ff919d421903976528c2")
!878 = !{!879}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !877, file: !2, baseType: !7, align: 8)
!880 = !{!881, !882, !883, !884, !885}
!881 = !DILocalVariable(name: "pieces", arg: 1, scope: !808, file: !427, line: 334, type: !812)
!882 = !DILocalVariable(name: "args", arg: 2, scope: !808, file: !427, line: 335, type: !860)
!883 = !DILocalVariable(name: "fmt", arg: 3, scope: !808, file: !427, line: 336, type: !826)
!884 = !DILocalVariable(name: "_unsafe_arg", scope: !808, file: !427, line: 337, type: !877, align: 1)
!885 = !DILocalVariable(arg: 4, scope: !808, file: !427, line: 337, type: !877)
!886 = !DILocation(line: 337, column: 9, scope: !808)
!887 = !DILocation(line: 334, column: 9, scope: !808)
!888 = !DILocation(line: 335, column: 9, scope: !808)
!889 = !DILocation(line: 336, column: 9, scope: !808)
!890 = !DILocation(line: 339, column: 34, scope: !808)
!891 = !DILocation(line: 339, column: 9, scope: !808)
!892 = !DILocation(line: 340, column: 6, scope: !808)
!893 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h9cb1f000867efa0eE", scope: !809, file: !427, line: 308, type: !894, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !896)
!894 = !DISubroutineType(types: !895)
!895 = !{!809, !812, !860}
!896 = !{!897, !898}
!897 = !DILocalVariable(name: "pieces", arg: 1, scope: !893, file: !427, line: 308, type: !812)
!898 = !DILocalVariable(name: "args", arg: 2, scope: !893, file: !427, line: 308, type: !860)
!899 = !DILocation(line: 308, column: 19, scope: !893)
!900 = !DILocation(line: 308, column: 47, scope: !893)
!901 = !DILocation(line: 309, column: 12, scope: !893)
!902 = !DILocation(line: 309, column: 56, scope: !893)
!903 = !DILocation(line: 309, column: 41, scope: !893)
!904 = !DILocation(line: 312, column: 34, scope: !893)
!905 = !DILocation(line: 312, column: 9, scope: !893)
!906 = !DILocation(line: 313, column: 6, scope: !893)
!907 = !DILocation(line: 310, column: 13, scope: !893)
!908 = distinct !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17hec4bca10500626d6E", scope: !809, file: !427, line: 297, type: !909, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !911)
!909 = !DISubroutineType(types: !910)
!910 = !{!809, !812}
!911 = !{!912}
!912 = !DILocalVariable(name: "pieces", arg: 1, scope: !908, file: !427, line: 297, type: !812)
!913 = !DILocation(line: 297, column: 28, scope: !908)
!914 = !DILocation(line: 298, column: 12, scope: !908)
!915 = !DILocation(line: 301, column: 34, scope: !908)
!916 = !DILocation(line: 301, column: 9, scope: !908)
!917 = !DILocation(line: 302, column: 6, scope: !908)
!918 = !DILocation(line: 299, column: 13, scope: !908)
!919 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem11swap_simple17h807652d7fd21b86bE", scope: !621, file: !920, line: 763, type: !921, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !924)
!920 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "67be03cda038c8ef7d5434bd5fa63bd3")
!921 = !DISubroutineType(types: !922)
!922 = !{null, !923, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !619, size: 64, align: 64, dwarfAddressSpace: 0)
!924 = !{!925, !926, !927, !929}
!925 = !DILocalVariable(name: "x", arg: 1, scope: !919, file: !920, line: 763, type: !923)
!926 = !DILocalVariable(name: "y", arg: 2, scope: !919, file: !920, line: 763, type: !923)
!927 = !DILocalVariable(name: "a", scope: !928, file: !920, line: 780, type: !619, align: 8)
!928 = distinct !DILexicalBlock(scope: !919, file: !920, line: 780, column: 9)
!929 = !DILocalVariable(name: "b", scope: !930, file: !920, line: 781, type: !619, align: 8)
!930 = distinct !DILexicalBlock(scope: !928, file: !920, line: 781, column: 9)
!931 = !DILocation(line: 763, column: 36, scope: !919)
!932 = !DILocation(line: 763, column: 47, scope: !919)
!933 = !DILocation(line: 780, column: 13, scope: !928)
!934 = !DILocation(line: 781, column: 13, scope: !930)
!935 = !DILocation(line: 780, column: 17, scope: !919)
!936 = !DILocation(line: 781, column: 17, scope: !928)
!937 = !DILocation(line: 782, column: 23, scope: !930)
!938 = !DILocation(line: 782, column: 9, scope: !930)
!939 = !DILocation(line: 783, column: 23, scope: !930)
!940 = !DILocation(line: 783, column: 9, scope: !930)
!941 = !DILocation(line: 785, column: 2, scope: !919)
!942 = distinct !DISubprogram(name: "swap_simple<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem11swap_simple17he4eea0885f042464E", scope: !621, file: !920, line: 763, type: !943, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !946)
!943 = !DISubroutineType(types: !944)
!944 = !{null, !945, !945}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!946 = !{!947, !948, !949, !951}
!947 = !DILocalVariable(name: "x", arg: 1, scope: !942, file: !920, line: 763, type: !945)
!948 = !DILocalVariable(name: "y", arg: 2, scope: !942, file: !920, line: 763, type: !945)
!949 = !DILocalVariable(name: "a", scope: !950, file: !920, line: 780, type: !13, align: 8)
!950 = distinct !DILexicalBlock(scope: !942, file: !920, line: 780, column: 9)
!951 = !DILocalVariable(name: "b", scope: !952, file: !920, line: 781, type: !13, align: 8)
!952 = distinct !DILexicalBlock(scope: !950, file: !920, line: 781, column: 9)
!953 = !DILocation(line: 763, column: 36, scope: !942)
!954 = !DILocation(line: 763, column: 47, scope: !942)
!955 = !DILocation(line: 780, column: 13, scope: !950)
!956 = !DILocation(line: 781, column: 13, scope: !952)
!957 = !DILocation(line: 780, column: 17, scope: !942)
!958 = !DILocation(line: 781, column: 17, scope: !950)
!959 = !DILocation(line: 782, column: 23, scope: !952)
!960 = !DILocation(line: 782, column: 9, scope: !952)
!961 = !DILocation(line: 783, column: 23, scope: !952)
!962 = !DILocation(line: 783, column: 9, scope: !952)
!963 = !DILocation(line: 785, column: 2, scope: !942)
!964 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem4swap17h5e32ce30d0549785E", scope: !621, file: !920, line: 726, type: !943, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !965)
!965 = !{!966, !967}
!966 = !DILocalVariable(name: "x", arg: 1, scope: !964, file: !920, line: 726, type: !945)
!967 = !DILocalVariable(name: "y", arg: 2, scope: !964, file: !920, line: 726, type: !945)
!968 = !DILocation(line: 726, column: 22, scope: !964)
!969 = !DILocation(line: 726, column: 33, scope: !964)
!970 = !DILocation(line: 741, column: 12, scope: !964)
!971 = !DILocation(line: 755, column: 5, scope: !964)
!972 = !DILocation(line: 744, column: 29, scope: !964)
!973 = !DILocation(line: 756, column: 2, scope: !964)
!974 = distinct !DISubprogram(name: "forget<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem6forget17h252116982950a14dE", scope: !621, file: !920, line: 148, type: !975, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !977)
!975 = !DISubroutineType(types: !976)
!976 = !{null, !13}
!977 = !{!978}
!978 = !DILocalVariable(name: "t", arg: 1, scope: !974, file: !920, line: 148, type: !13)
!979 = !DILocation(line: 148, column: 24, scope: !974)
!980 = !DILocalVariable(name: "value", arg: 1, scope: !981, file: !982, line: 70, type: !13)
!981 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf8ab99b4169cb985E", scope: !625, file: !982, line: 70, type: !983, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !985)
!982 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "757172e61d55c773a9468e6d26f74706")
!983 = !DISubroutineType(types: !984)
!984 = !{!625, !13}
!985 = !{!980}
!986 = !DILocation(line: 70, column: 22, scope: !981, inlinedAt: !987)
!987 = distinct !DILocation(line: 149, column: 13, scope: !974)
!988 = !DILocation(line: 71, column: 9, scope: !981, inlinedAt: !987)
!989 = !DILocation(line: 150, column: 2, scope: !974)
!990 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17he5a0beee4fd45944E", scope: !992, file: !991, line: 576, type: !994, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !996)
!991 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "9f9a8c2611080e433b531f707b01187e")
!992 = !DINamespace(name: "{impl#11}", scope: !993)
!993 = !DINamespace(name: "num", scope: !142)
!994 = !DISubroutineType(types: !995)
!995 = !{!458, !9, !9}
!996 = !{!997, !998, !999, !1001}
!997 = !DILocalVariable(name: "self", arg: 1, scope: !990, file: !991, line: 576, type: !9)
!998 = !DILocalVariable(name: "rhs", arg: 2, scope: !990, file: !991, line: 576, type: !9)
!999 = !DILocalVariable(name: "a", scope: !1000, file: !991, line: 577, type: !9, align: 8)
!1000 = distinct !DILexicalBlock(scope: !990, file: !991, line: 577, column: 13)
!1001 = !DILocalVariable(name: "b", scope: !1000, file: !991, line: 577, type: !401, align: 1)
!1002 = !DILocation(line: 576, column: 34, scope: !990)
!1003 = !DILocation(line: 576, column: 40, scope: !990)
!1004 = !DILocalVariable(name: "self", arg: 1, scope: !1005, file: !991, line: 1702, type: !9)
!1005 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h238b71a21f9ec77aE", scope: !992, file: !991, line: 1702, type: !1006, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1012)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!1008, !9, !9}
!1008 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1009, templateParams: !24, identifier: "4030f8452435be378048c6d8b59c8539")
!1009 = !{!1010, !1011}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1008, file: !2, baseType: !9, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1008, file: !2, baseType: !401, size: 8, align: 8, offset: 64)
!1012 = !{!1004, !1013, !1014, !1016}
!1013 = !DILocalVariable(name: "rhs", arg: 2, scope: !1005, file: !991, line: 1702, type: !9)
!1014 = !DILocalVariable(name: "a", scope: !1015, file: !991, line: 1703, type: !22, align: 8)
!1015 = distinct !DILexicalBlock(scope: !1005, file: !991, line: 1703, column: 13)
!1016 = !DILocalVariable(name: "b", scope: !1015, file: !991, line: 1703, type: !401, align: 1)
!1017 = !DILocation(line: 1702, column: 38, scope: !1005, inlinedAt: !1018)
!1018 = distinct !DILocation(line: 577, column: 26, scope: !990)
!1019 = !DILocation(line: 1702, column: 44, scope: !1005, inlinedAt: !1018)
!1020 = !DILocation(line: 1703, column: 26, scope: !1005, inlinedAt: !1018)
!1021 = !DILocation(line: 1703, column: 18, scope: !1005, inlinedAt: !1018)
!1022 = !DILocation(line: 1703, column: 18, scope: !1015, inlinedAt: !1018)
!1023 = !DILocation(line: 1703, column: 21, scope: !1005, inlinedAt: !1018)
!1024 = !DILocation(line: 1703, column: 21, scope: !1015, inlinedAt: !1018)
!1025 = !DILocation(line: 1704, column: 13, scope: !1015, inlinedAt: !1018)
!1026 = !DILocation(line: 1705, column: 10, scope: !1005, inlinedAt: !1018)
!1027 = !DILocation(line: 577, column: 26, scope: !990)
!1028 = !DILocation(line: 577, column: 18, scope: !990)
!1029 = !DILocation(line: 577, column: 18, scope: !1000)
!1030 = !DILocation(line: 577, column: 21, scope: !990)
!1031 = !DILocation(line: 577, column: 21, scope: !1000)
!1032 = !DILocation(line: 578, column: 16, scope: !1000)
!1033 = !DILocation(line: 578, column: 42, scope: !1000)
!1034 = !DILocation(line: 578, column: 13, scope: !1000)
!1035 = !DILocation(line: 578, column: 30, scope: !1000)
!1036 = !DILocation(line: 579, column: 10, scope: !990)
!1037 = !{i64 0, i64 2}
!1038 = distinct !DISubprogram(name: "next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17ha4fc2aa9633a53bdE", scope: !992, file: !991, line: 2216, type: !1039, scopeLine: 2216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1041)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!9, !9}
!1041 = !{!1042}
!1042 = !DILocalVariable(name: "self", arg: 1, scope: !1038, file: !991, line: 2216, type: !9)
!1043 = !DILocation(line: 2216, column: 40, scope: !1038)
!1044 = !DILocation(line: 2217, column: 13, scope: !1038)
!1045 = !DILocation(line: 2218, column: 10, scope: !1038)
!1046 = distinct !DISubprogram(name: "one_less_than_next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h3a7b7dd04ec8ca05E", scope: !992, file: !991, line: 2184, type: !1039, scopeLine: 2184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1047)
!1047 = !{!1048, !1049, !1051}
!1048 = !DILocalVariable(name: "self", arg: 1, scope: !1046, file: !991, line: 2184, type: !9)
!1049 = !DILocalVariable(name: "p", scope: !1050, file: !991, line: 2187, type: !9, align: 8)
!1050 = distinct !DILexicalBlock(scope: !1046, file: !991, line: 2187, column: 13)
!1051 = !DILocalVariable(name: "z", scope: !1052, file: !991, line: 2192, type: !9, align: 8)
!1052 = distinct !DILexicalBlock(scope: !1050, file: !991, line: 2192, column: 13)
!1053 = !DILocation(line: 2184, column: 50, scope: !1046)
!1054 = !DILocation(line: 2185, column: 16, scope: !1046)
!1055 = !DILocation(line: 2187, column: 21, scope: !1046)
!1056 = !DILocation(line: 2185, column: 35, scope: !1046)
!1057 = !DILocation(line: 2194, column: 10, scope: !1046)
!1058 = !DILocation(line: 2187, column: 17, scope: !1050)
!1059 = !DILocation(line: 2192, column: 30, scope: !1050)
!1060 = !DILocation(line: 2192, column: 17, scope: !1052)
!1061 = !DILocation(line: 2193, column: 13, scope: !1052)
!1062 = distinct !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h03aca0fca6a98bafE", scope: !396, file: !1063, line: 450, type: !1064, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1066)
!1063 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "9d2b5da18cc97d04b655a6220a6da08d")
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!174, !396}
!1066 = !{!1067, !1068, !1070}
!1067 = !DILocalVariable(name: "self", arg: 1, scope: !1062, file: !1063, line: 450, type: !396)
!1068 = !DILocalVariable(name: "exclusive_end", scope: !1069, file: !1063, line: 454, type: !9, align: 8)
!1069 = distinct !DILexicalBlock(scope: !1062, file: !1063, line: 454, column: 9)
!1070 = !DILocalVariable(name: "start", scope: !1071, file: !1063, line: 455, type: !9, align: 8)
!1071 = distinct !DILexicalBlock(scope: !1069, file: !1063, line: 455, column: 9)
!1072 = !DILocation(line: 450, column: 42, scope: !1062)
!1073 = !DILocation(line: 455, column: 13, scope: !1071)
!1074 = !DILocation(line: 454, column: 29, scope: !1062)
!1075 = !DILocation(line: 454, column: 13, scope: !1069)
!1076 = !DILocation(line: 455, column: 24, scope: !1069)
!1077 = !DILocation(line: 455, column: 64, scope: !1069)
!1078 = !DILocation(line: 455, column: 21, scope: !1069)
!1079 = !DILocation(line: 455, column: 41, scope: !1069)
!1080 = !DILocation(line: 456, column: 9, scope: !1071)
!1081 = !DILocation(line: 457, column: 6, scope: !1062)
!1082 = distinct !DISubprogram(name: "call_mut<(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion), core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17he8ad2fd493a493d0E", scope: !1084, file: !1083, line: 293, type: !1087, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1107, retainedNodes: !1100)
!1083 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "cfb73adf0f4bb6df3856d6eaf613e707")
!1084 = !DINamespace(name: "{impl#3}", scope: !1085)
!1085 = !DINamespace(name: "impls", scope: !1086)
!1086 = !DINamespace(name: "function", scope: !176)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!401, !1089, !12, !12}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1090, size: 64, align: 64, dwarfAddressSpace: 0)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1091, size: 64, align: 64, dwarfAddressSpace: 0)
!1091 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", scope: !1092, file: !2, size: 64, align: 64, elements: !1094, templateParams: !24, identifier: "e9e7ff33e49360074056c113d8bf7775")
!1092 = !DINamespace(name: "sort_unstable_by", scope: !1093)
!1093 = !DINamespace(name: "{impl#0}", scope: !166)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__compare", scope: !1091, file: !2, baseType: !1096, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}", baseType: !1097, size: 64, align: 64, dwarfAddressSpace: 0)
!1097 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1098, file: !2, align: 8, elements: !24, identifier: "5d66ebb864ebe12bdad9eea8ed206c27")
!1098 = !DINamespace(name: "sort", scope: !1099)
!1099 = !DINamespace(name: "{impl#0}", scope: !14)
!1100 = !{!1101, !1102}
!1101 = !DILocalVariable(name: "self", arg: 1, scope: !1082, file: !1083, line: 293, type: !1089)
!1102 = !DILocalVariable(name: "args", arg: 2, scope: !1082, file: !1083, line: 293, type: !1103)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion)", file: !2, size: 128, align: 64, elements: !1104, templateParams: !24, identifier: "2021b4a281e3e5a2217610eaf9c98e60")
!1104 = !{!1105, !1106}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1103, file: !2, baseType: !12, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1103, file: !2, baseType: !12, size: 64, align: 64, offset: 64)
!1107 = !{!1108, !1109}
!1108 = !DITemplateTypeParameter(name: "A", type: !1103)
!1109 = !DITemplateTypeParameter(name: "F", type: !1091)
!1110 = !DILocation(line: 293, column: 40, scope: !1082)
!1111 = !DILocation(line: 293, column: 51, scope: !1082)
!1112 = !DILocation(line: 294, column: 13, scope: !1082)
!1113 = !DILocation(line: 295, column: 10, scope: !1082)
!1114 = distinct !DISubprogram(name: "drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hc7fa04d0e9e7b875E", scope: !204, file: !1115, line: 490, type: !1116, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1126, retainedNodes: !1124)
!1115 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "61e00314733b7b7d5fdfe8b675068ee3")
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !1118}
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1119, size: 64, align: 64, dwarfAddressSpace: 0)
!1119 = !DICompositeType(tag: DW_TAG_structure_type, name: "InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !1120, file: !2, size: 128, align: 64, elements: !1121, templateParams: !189, identifier: "bda957c0407c277b8b58423b6057a51a")
!1120 = !DINamespace(name: "sort", scope: !166)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1119, file: !2, baseType: !207, size: 64, align: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1119, file: !2, baseType: !261, size: 64, align: 64, offset: 64)
!1124 = !{!1125}
!1125 = !DILocalVariable(arg: 1, scope: !1114, file: !1115, line: 490, type: !1118)
!1126 = !{!1127}
!1127 = !DITemplateTypeParameter(name: "T", type: !1119)
!1128 = !DILocation(line: 490, column: 1, scope: !1114)
!1129 = distinct !DISubprogram(name: "swap_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping17h14bf40e646ab197dE", scope: !204, file: !1115, line: 902, type: !1130, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1132)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{null, !261, !261, !9}
!1132 = !{!1133, !1134, !1135, !1136, !1138, !1140, !1142, !1145, !1147}
!1133 = !DILocalVariable(name: "x", arg: 1, scope: !1129, file: !1115, line: 902, type: !261)
!1134 = !DILocalVariable(name: "y", arg: 2, scope: !1129, file: !1115, line: 902, type: !261)
!1135 = !DILocalVariable(name: "count", arg: 3, scope: !1129, file: !1115, line: 902, type: !9)
!1136 = !DILocalVariable(name: "x", scope: !1137, file: !1115, line: 942, type: !592, align: 8)
!1137 = distinct !DILexicalBlock(scope: !1129, file: !1115, line: 909, column: 17)
!1138 = !DILocalVariable(name: "y", scope: !1139, file: !1115, line: 942, type: !592, align: 8)
!1139 = distinct !DILexicalBlock(scope: !1137, file: !1115, line: 910, column: 17)
!1140 = !DILocalVariable(name: "count", scope: !1141, file: !1115, line: 942, type: !9, align: 8)
!1141 = distinct !DILexicalBlock(scope: !1139, file: !1115, line: 911, column: 17)
!1142 = !DILocalVariable(name: "x", scope: !1143, file: !1115, line: 943, type: !1144, align: 8)
!1143 = distinct !DILexicalBlock(scope: !1129, file: !1115, line: 909, column: 17)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!1145 = !DILocalVariable(name: "y", scope: !1146, file: !1115, line: 943, type: !1144, align: 8)
!1146 = distinct !DILexicalBlock(scope: !1143, file: !1115, line: 910, column: 17)
!1147 = !DILocalVariable(name: "count", scope: !1148, file: !1115, line: 943, type: !9, align: 8)
!1148 = distinct !DILexicalBlock(scope: !1146, file: !1115, line: 911, column: 17)
!1149 = !DILocation(line: 902, column: 44, scope: !1129)
!1150 = !DILocation(line: 902, column: 55, scope: !1129)
!1151 = !DILocation(line: 902, column: 66, scope: !1129)
!1152 = !DILocation(line: 925, column: 9, scope: !1129)
!1153 = !DILocation(line: 938, column: 8, scope: !1129)
!1154 = !DILocalVariable(name: "x", arg: 1, scope: !1155, file: !218, line: 2510, type: !261)
!1155 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping7runtime17h3fd3520157bcf689E", scope: !1156, file: !218, line: 2510, type: !1130, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1157)
!1156 = !DINamespace(name: "swap_nonoverlapping", scope: !204)
!1157 = !{!1154, !1158, !1159}
!1158 = !DILocalVariable(name: "y", arg: 2, scope: !1155, file: !218, line: 2510, type: !261)
!1159 = !DILocalVariable(name: "count", arg: 3, scope: !1155, file: !218, line: 2510, type: !9)
!1160 = !DILocation(line: 2510, column: 39, scope: !1155, inlinedAt: !1161)
!1161 = distinct !DILocation(line: 925, column: 9, scope: !1129)
!1162 = !DILocation(line: 929, column: 13, scope: !1163, inlinedAt: !1161)
!1163 = !DILexicalBlockFile(scope: !1155, file: !1115, discriminator: 0)
!1164 = !DILocation(line: 930, column: 20, scope: !1163, inlinedAt: !1161)
!1165 = !DILocation(line: 931, column: 20, scope: !1163, inlinedAt: !1161)
!1166 = !DILocation(line: 2511, column: 20, scope: !1155, inlinedAt: !1161)
!1167 = !DILocation(line: 2513, column: 21, scope: !1155, inlinedAt: !1161)
!1168 = !DILocalVariable(name: "self", arg: 1, scope: !1169, file: !991, line: 2169, type: !9)
!1169 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17hbafd7582491c0eb1E", scope: !992, file: !991, line: 2169, type: !649, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1170)
!1170 = !{!1168}
!1171 = !DILocation(line: 2169, column: 38, scope: !1169, inlinedAt: !1172)
!1172 = distinct !DILocation(line: 939, column: 14, scope: !1129)
!1173 = !DILocalVariable(name: "self", arg: 1, scope: !1174, file: !991, line: 106, type: !9)
!1174 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hdcf0ade9f652f176E", scope: !992, file: !991, line: 106, type: !1175, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1177)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!27, !9}
!1177 = !{!1173}
!1178 = !DILocation(line: 106, column: 33, scope: !1174, inlinedAt: !1179)
!1179 = distinct !DILocation(line: 2170, column: 13, scope: !1169, inlinedAt: !1172)
!1180 = !DILocation(line: 107, column: 13, scope: !1174, inlinedAt: !1179)
!1181 = !DILocation(line: 2170, column: 13, scope: !1169, inlinedAt: !1172)
!1182 = !DILocation(line: 939, column: 13, scope: !1129)
!1183 = !DILocation(line: 939, column: 12, scope: !1129)
!1184 = !DILocation(line: 940, column: 38, scope: !1129)
!1185 = !DILocation(line: 940, column: 16, scope: !1129)
!1186 = !DILocation(line: 947, column: 14, scope: !1129)
!1187 = !DILocation(line: 942, column: 9, scope: !1129)
!1188 = !DILocation(line: 943, column: 9, scope: !1129)
!1189 = !DILocalVariable(name: "self", arg: 1, scope: !1190, file: !256, line: 57, type: !261)
!1190 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h7973a624048c3b84E", scope: !267, file: !256, line: 57, type: !1191, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1194, retainedNodes: !1193)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!592, !261}
!1193 = !{!1189}
!1194 = !{!190, !1195}
!1195 = !DITemplateTypeParameter(name: "U", type: !9)
!1196 = !DILocation(line: 57, column: 26, scope: !1190, inlinedAt: !1197)
!1197 = distinct !DILocation(line: 942, column: 9, scope: !1129)
!1198 = !DILocation(line: 942, column: 9, scope: !1137)
!1199 = !DILocation(line: 57, column: 26, scope: !1190, inlinedAt: !1200)
!1200 = distinct !DILocation(line: 942, column: 9, scope: !1137)
!1201 = !DILocation(line: 942, column: 9, scope: !1139)
!1202 = !DILocation(line: 942, column: 9, scope: !1141)
!1203 = !DILocation(line: 948, column: 2, scope: !1129)
!1204 = !DILocalVariable(name: "self", arg: 1, scope: !1205, file: !256, line: 57, type: !261)
!1205 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h8011e5fd6fa817baE", scope: !267, file: !256, line: 57, type: !1206, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1209, retainedNodes: !1208)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!1144, !261}
!1208 = !{!1204}
!1209 = !{!190, !1210}
!1210 = !DITemplateTypeParameter(name: "U", type: !123)
!1211 = !DILocation(line: 57, column: 26, scope: !1205, inlinedAt: !1212)
!1212 = distinct !DILocation(line: 943, column: 9, scope: !1129)
!1213 = !DILocation(line: 943, column: 9, scope: !1143)
!1214 = !DILocation(line: 57, column: 26, scope: !1205, inlinedAt: !1215)
!1215 = distinct !DILocation(line: 943, column: 9, scope: !1143)
!1216 = !DILocation(line: 943, column: 9, scope: !1146)
!1217 = !DILocation(line: 943, column: 9, scope: !1148)
!1218 = distinct !DISubprogram(name: "slice_from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hc575d0d4a9b6007aE", scope: !204, file: !1115, line: 733, type: !1219, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1221)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!169, !207, !9}
!1221 = !{!1222, !1223}
!1222 = !DILocalVariable(name: "data", arg: 1, scope: !1218, file: !1115, line: 733, type: !207)
!1223 = !DILocalVariable(name: "len", arg: 2, scope: !1218, file: !1115, line: 733, type: !9)
!1224 = !DILocation(line: 733, column: 38, scope: !1218)
!1225 = !DILocation(line: 733, column: 54, scope: !1218)
!1226 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !1227)
!1227 = distinct !DILocation(line: 734, column: 20, scope: !1218)
!1228 = !DILocation(line: 734, column: 5, scope: !1218)
!1229 = !DILocation(line: 735, column: 2, scope: !1218)
!1230 = distinct !DISubprogram(name: "drop_in_place<u32>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u32$GT$17h0d1b952ff6a411c0E", scope: !204, file: !1115, line: 490, type: !1231, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1236, retainedNodes: !1234)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{null, !1233}
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!1234 = !{!1235}
!1235 = !DILocalVariable(arg: 1, scope: !1230, file: !1115, line: 490, type: !1233)
!1236 = !{!1237}
!1237 = !DITemplateTypeParameter(name: "T", type: !27)
!1238 = !DILocation(line: 490, column: 1, scope: !1230)
!1239 = distinct !DISubprogram(name: "drop_in_place<u64>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u64$GT$17h59468430190addc9E", scope: !204, file: !1115, line: 490, type: !1240, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1245, retainedNodes: !1243)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{null, !1242}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!1243 = !{!1244}
!1244 = !DILocalVariable(arg: 1, scope: !1239, file: !1115, line: 490, type: !1242)
!1245 = !{!1246}
!1246 = !DITemplateTypeParameter(name: "T", type: !22)
!1247 = !DILocation(line: 490, column: 1, scope: !1239)
!1248 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h1f03307f4642ee5fE", scope: !204, file: !1115, line: 765, type: !1249, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1251)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!236, !261, !9}
!1251 = !{!1252, !1253}
!1252 = !DILocalVariable(name: "data", arg: 1, scope: !1248, file: !1115, line: 765, type: !261)
!1253 = !DILocalVariable(name: "len", arg: 2, scope: !1248, file: !1115, line: 765, type: !9)
!1254 = !DILocation(line: 765, column: 42, scope: !1248)
!1255 = !DILocation(line: 765, column: 56, scope: !1248)
!1256 = !DILocalVariable(name: "self", arg: 1, scope: !1257, file: !256, line: 57, type: !261)
!1257 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hacb888990be7cabaE", scope: !267, file: !256, line: 57, type: !1258, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !540, retainedNodes: !1261)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!1260, !261}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1261 = !{!1256}
!1262 = !DILocation(line: 57, column: 26, scope: !1257, inlinedAt: !1263)
!1263 = distinct !DILocation(line: 766, column: 24, scope: !1248)
!1264 = !DILocation(line: 766, column: 5, scope: !1248)
!1265 = !DILocation(line: 767, column: 2, scope: !1248)
!1266 = distinct !DISubprogram(name: "drop_in_place<&u8>", linkageName: "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h90f3a43d58ba3f66E", scope: !204, file: !1115, line: 490, type: !1267, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1272, retainedNodes: !1270)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{null, !1269}
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u8", baseType: !122, size: 64, align: 64, dwarfAddressSpace: 0)
!1270 = !{!1271}
!1271 = !DILocalVariable(arg: 1, scope: !1266, file: !1115, line: 490, type: !1269)
!1272 = !{!1273}
!1273 = !DITemplateTypeParameter(name: "T", type: !122)
!1274 = !DILocation(line: 490, column: 1, scope: !1266)
!1275 = distinct !DISubprogram(name: "drop_in_place<&u32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h1d48bcbf945a0c27E", scope: !204, file: !1115, line: 490, type: !1276, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1281, retainedNodes: !1279)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{null, !1278}
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u32", baseType: !85, size: 64, align: 64, dwarfAddressSpace: 0)
!1279 = !{!1280}
!1280 = !DILocalVariable(arg: 1, scope: !1275, file: !1115, line: 490, type: !1278)
!1281 = !{!1282}
!1282 = !DITemplateTypeParameter(name: "T", type: !85)
!1283 = !DILocation(line: 490, column: 1, scope: !1275)
!1284 = distinct !DISubprogram(name: "drop_in_place<&u64>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17he613e3a6f7dd0b26E", scope: !204, file: !1115, line: 490, type: !1285, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1290, retainedNodes: !1288)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{null, !1287}
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u64", baseType: !132, size: 64, align: 64, dwarfAddressSpace: 0)
!1288 = !{!1289}
!1289 = !DILocalVariable(arg: 1, scope: !1284, file: !1115, line: 490, type: !1287)
!1290 = !{!1291}
!1291 = !DITemplateTypeParameter(name: "T", type: !132)
!1292 = !DILocation(line: 490, column: 1, scope: !1284)
!1293 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17ha7471897e390b518E", scope: !204, file: !1115, line: 956, type: !1130, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1301, !1303, !1305, !1307}
!1295 = !DILocalVariable(name: "x", arg: 1, scope: !1293, file: !1115, line: 956, type: !261)
!1296 = !DILocalVariable(name: "y", arg: 2, scope: !1293, file: !1115, line: 956, type: !261)
!1297 = !DILocalVariable(name: "count", arg: 3, scope: !1293, file: !1115, line: 956, type: !9)
!1298 = !DILocalVariable(name: "x", scope: !1299, file: !1115, line: 957, type: !1300, align: 8)
!1299 = distinct !DILexicalBlock(scope: !1293, file: !1115, line: 957, column: 5)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !619, size: 64, align: 64, dwarfAddressSpace: 0)
!1301 = !DILocalVariable(name: "y", scope: !1302, file: !1115, line: 958, type: !1300, align: 8)
!1302 = distinct !DILexicalBlock(scope: !1299, file: !1115, line: 958, column: 5)
!1303 = !DILocalVariable(name: "i", scope: !1304, file: !1115, line: 959, type: !9, align: 8)
!1304 = distinct !DILexicalBlock(scope: !1302, file: !1115, line: 959, column: 5)
!1305 = !DILocalVariable(name: "x", scope: !1306, file: !1115, line: 962, type: !923, align: 8)
!1306 = distinct !DILexicalBlock(scope: !1304, file: !1115, line: 962, column: 9)
!1307 = !DILocalVariable(name: "y", scope: !1308, file: !1115, line: 965, type: !923, align: 8)
!1308 = distinct !DILexicalBlock(scope: !1306, file: !1115, line: 965, column: 9)
!1309 = !DILocation(line: 956, column: 55, scope: !1293)
!1310 = !DILocation(line: 956, column: 66, scope: !1293)
!1311 = !DILocation(line: 956, column: 77, scope: !1293)
!1312 = !DILocation(line: 959, column: 9, scope: !1304)
!1313 = !DILocalVariable(name: "self", arg: 1, scope: !1314, file: !256, line: 57, type: !261)
!1314 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h62f351e5d183da79E", scope: !267, file: !256, line: 57, type: !1315, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1318, retainedNodes: !1317)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!1300, !261}
!1317 = !{!1313}
!1318 = !{!190, !1319}
!1319 = !DITemplateTypeParameter(name: "U", type: !619)
!1320 = !DILocation(line: 57, column: 26, scope: !1314, inlinedAt: !1321)
!1321 = distinct !DILocation(line: 957, column: 13, scope: !1293)
!1322 = !DILocation(line: 957, column: 13, scope: !1293)
!1323 = !DILocation(line: 957, column: 9, scope: !1299)
!1324 = !DILocation(line: 57, column: 26, scope: !1314, inlinedAt: !1325)
!1325 = distinct !DILocation(line: 958, column: 13, scope: !1299)
!1326 = !DILocation(line: 958, column: 13, scope: !1299)
!1327 = !DILocation(line: 958, column: 9, scope: !1302)
!1328 = !DILocation(line: 959, column: 17, scope: !1302)
!1329 = !DILocation(line: 960, column: 5, scope: !1304)
!1330 = !DILocation(line: 960, column: 11, scope: !1304)
!1331 = !DILocation(line: 970, column: 2, scope: !1293)
!1332 = !DILocation(line: 962, column: 38, scope: !1304)
!1333 = !DILocalVariable(name: "self", arg: 1, scope: !1334, file: !256, line: 1025, type: !1300)
!1334 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0b6a3730033de2dcE", scope: !267, file: !256, line: 1025, type: !1335, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !1337)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!1300, !1300, !9}
!1337 = !{!1333, !1338}
!1338 = !DILocalVariable(name: "count", arg: 2, scope: !1334, file: !256, line: 1025, type: !9)
!1339 = !DILocation(line: 1025, column: 29, scope: !1334, inlinedAt: !1340)
!1340 = distinct !DILocation(line: 962, column: 32, scope: !1304)
!1341 = !DILocation(line: 1025, column: 35, scope: !1334, inlinedAt: !1340)
!1342 = !DILocation(line: 1037, column: 13, scope: !1334, inlinedAt: !1340)
!1343 = !DILocation(line: 962, column: 26, scope: !1304)
!1344 = !DILocation(line: 962, column: 13, scope: !1306)
!1345 = !DILocation(line: 965, column: 38, scope: !1306)
!1346 = !DILocation(line: 1025, column: 29, scope: !1334, inlinedAt: !1347)
!1347 = distinct !DILocation(line: 965, column: 32, scope: !1306)
!1348 = !DILocation(line: 1025, column: 35, scope: !1334, inlinedAt: !1347)
!1349 = !DILocation(line: 1037, column: 13, scope: !1334, inlinedAt: !1347)
!1350 = !DILocation(line: 965, column: 26, scope: !1306)
!1351 = !DILocation(line: 965, column: 13, scope: !1308)
!1352 = !DILocation(line: 966, column: 9, scope: !1308)
!1353 = !DILocation(line: 968, column: 9, scope: !1308)
!1354 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read17h905ff3938d01e6a8E", scope: !204, file: !1115, line: 1137, type: !1355, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !1357)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!619, !618}
!1357 = !{!1358}
!1358 = !DILocalVariable(name: "src", arg: 1, scope: !1354, file: !1115, line: 1137, type: !618)
!1359 = !DILocation(line: 1137, column: 29, scope: !1354)
!1360 = !DILocation(line: 1166, column: 9, scope: !1354)
!1361 = !DILocation(line: 1188, column: 13, scope: !1354)
!1362 = !DILocation(line: 1191, column: 2, scope: !1354)
!1363 = !DILocalVariable(name: "src", arg: 1, scope: !1364, file: !218, line: 2510, type: !618)
!1364 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read7runtime17hbe099cc0c7dcd741E", scope: !1365, file: !218, line: 2510, type: !1366, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !1368)
!1365 = !DINamespace(name: "read", scope: !204)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{null, !618}
!1368 = !{!1363}
!1369 = !DILocation(line: 2510, column: 39, scope: !1364, inlinedAt: !1370)
!1370 = distinct !DILocation(line: 1166, column: 9, scope: !1354)
!1371 = !DILocation(line: 1168, column: 35, scope: !1372, inlinedAt: !1370)
!1372 = !DILexicalBlockFile(scope: !1364, file: !1115, discriminator: 0)
!1373 = !DILocation(line: 2511, column: 20, scope: !1364, inlinedAt: !1370)
!1374 = !DILocation(line: 2513, column: 21, scope: !1364, inlinedAt: !1370)
!1375 = distinct !DISubprogram(name: "read<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read17hd09643a295aa6f4fE", scope: !204, file: !1115, line: 1137, type: !1376, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1378)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!13, !207}
!1378 = !{!1379}
!1379 = !DILocalVariable(name: "src", arg: 1, scope: !1375, file: !1115, line: 1137, type: !207)
!1380 = !DILocation(line: 1137, column: 29, scope: !1375)
!1381 = !DILocation(line: 1166, column: 9, scope: !1375)
!1382 = !DILocation(line: 1188, column: 13, scope: !1375)
!1383 = !DILocation(line: 1191, column: 2, scope: !1375)
!1384 = !DILocalVariable(name: "src", arg: 1, scope: !1385, file: !218, line: 2510, type: !207)
!1385 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read7runtime17ha0362d9476d0d463E", scope: !1365, file: !218, line: 2510, type: !1386, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1388)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{null, !207}
!1388 = !{!1384}
!1389 = !DILocation(line: 2510, column: 39, scope: !1385, inlinedAt: !1390)
!1390 = distinct !DILocation(line: 1166, column: 9, scope: !1375)
!1391 = !DILocation(line: 1168, column: 35, scope: !1392, inlinedAt: !1390)
!1392 = !DILexicalBlockFile(scope: !1385, file: !1115, discriminator: 0)
!1393 = !DILocation(line: 2511, column: 20, scope: !1385, inlinedAt: !1390)
!1394 = !DILocation(line: 2513, column: 21, scope: !1385, inlinedAt: !1390)
!1395 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4swap17hdded449a2079ac21E", scope: !204, file: !1115, line: 841, type: !1396, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1398)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{null, !261, !261}
!1398 = !{!1399, !1400, !1401}
!1399 = !DILocalVariable(name: "x", arg: 1, scope: !1395, file: !1115, line: 841, type: !261)
!1400 = !DILocalVariable(name: "y", arg: 2, scope: !1395, file: !1115, line: 841, type: !261)
!1401 = !DILocalVariable(name: "tmp", scope: !1402, file: !1115, line: 844, type: !619, align: 8)
!1402 = distinct !DILexicalBlock(scope: !1395, file: !1115, line: 844, column: 5)
!1403 = !DILocation(line: 841, column: 29, scope: !1395)
!1404 = !DILocation(line: 841, column: 40, scope: !1395)
!1405 = !DILocation(line: 844, column: 9, scope: !1402)
!1406 = !DILocalVariable(name: "self", arg: 1, scope: !1407, file: !1408, line: 567, type: !923)
!1407 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h0cfd990f043a342fE", scope: !619, file: !1408, line: 567, type: !1409, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1411)
!1408 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "8ffbcd82b8346addc36d5c4ff55db309")
!1409 = !DISubroutineType(types: !1410)
!1410 = !{!261, !923}
!1411 = !{!1406}
!1412 = !DILocation(line: 567, column: 29, scope: !1407, inlinedAt: !1413)
!1413 = distinct !DILocation(line: 852, column: 32, scope: !1402)
!1414 = !DILocation(line: 852, column: 9, scope: !1402)
!1415 = !DILocation(line: 853, column: 9, scope: !1402)
!1416 = !DILocalVariable(name: "self", arg: 1, scope: !1417, file: !1408, line: 528, type: !1420)
!1417 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h3d71c093f8fd7c66E", scope: !619, file: !1408, line: 528, type: !1418, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1421)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!207, !1420}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !619, size: 64, align: 64, dwarfAddressSpace: 0)
!1421 = !{!1416}
!1422 = !DILocation(line: 528, column: 25, scope: !1417, inlinedAt: !1423)
!1423 = distinct !DILocation(line: 854, column: 29, scope: !1402)
!1424 = !DILocation(line: 854, column: 9, scope: !1402)
!1425 = !DILocation(line: 856, column: 2, scope: !1395)
!1426 = distinct !DISubprogram(name: "swap<usize>", linkageName: "_ZN4core3ptr4swap17hedb66df694a232a2E", scope: !204, file: !1115, line: 841, type: !1427, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !1429)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{null, !592, !592}
!1429 = !{!1430, !1431, !1432}
!1430 = !DILocalVariable(name: "x", arg: 1, scope: !1426, file: !1115, line: 841, type: !592)
!1431 = !DILocalVariable(name: "y", arg: 2, scope: !1426, file: !1115, line: 841, type: !592)
!1432 = !DILocalVariable(name: "tmp", scope: !1433, file: !1115, line: 844, type: !1434, align: 8)
!1433 = distinct !DILexicalBlock(scope: !1426, file: !1115, line: 844, column: 5)
!1434 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !620, file: !2, size: 64, align: 64, elements: !1435, templateParams: !465, identifier: "7a741d8a1a362ed02fec40c71c4a7723")
!1435 = !{!1436, !1437}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1434, file: !2, baseType: !7, align: 8)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1434, file: !2, baseType: !1438, size: 64, align: 64)
!1438 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !626, file: !2, size: 64, align: 64, elements: !1439, templateParams: !465, identifier: "be4c81dcb9017cb26724dce0603a4134")
!1439 = !{!1440}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1438, file: !2, baseType: !9, size: 64, align: 64)
!1441 = !DILocation(line: 841, column: 29, scope: !1426)
!1442 = !DILocation(line: 841, column: 40, scope: !1426)
!1443 = !DILocation(line: 844, column: 9, scope: !1433)
!1444 = !DILocation(line: 315, column: 6, scope: !1445, inlinedAt: !1448)
!1445 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h8d4803d45748a961E", scope: !1434, file: !1408, line: 313, type: !1446, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !24)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!1434}
!1448 = distinct !DILocation(line: 844, column: 19, scope: !1426)
!1449 = !DILocation(line: 844, column: 19, scope: !1426)
!1450 = !DILocalVariable(name: "self", arg: 1, scope: !1451, file: !1408, line: 567, type: !1454)
!1451 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h4206bcd4eb0bab7cE", scope: !1434, file: !1408, line: 567, type: !1452, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !1455)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!592, !1454}
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !1434, size: 64, align: 64, dwarfAddressSpace: 0)
!1455 = !{!1450}
!1456 = !DILocation(line: 567, column: 29, scope: !1451, inlinedAt: !1457)
!1457 = distinct !DILocation(line: 852, column: 32, scope: !1433)
!1458 = !DILocation(line: 852, column: 9, scope: !1433)
!1459 = !DILocation(line: 853, column: 9, scope: !1433)
!1460 = !DILocalVariable(name: "self", arg: 1, scope: !1461, file: !1408, line: 528, type: !1464)
!1461 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h284085b11a890b08E", scope: !1434, file: !1408, line: 528, type: !1462, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !1465)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!591, !1464}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !1434, size: 64, align: 64, dwarfAddressSpace: 0)
!1465 = !{!1460}
!1466 = !DILocation(line: 528, column: 25, scope: !1461, inlinedAt: !1467)
!1467 = distinct !DILocation(line: 854, column: 29, scope: !1433)
!1468 = !DILocation(line: 854, column: 9, scope: !1433)
!1469 = !DILocation(line: 856, column: 2, scope: !1426)
!1470 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17h6ae0b0f7ed3292adE", scope: !204, file: !1115, line: 490, type: !1471, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1476, retainedNodes: !1474)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{null, !1473}
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!1474 = !{!1475}
!1475 = !DILocalVariable(arg: 1, scope: !1470, file: !1115, line: 490, type: !1473)
!1476 = !{!1477}
!1477 = !DITemplateTypeParameter(name: "T", type: !109)
!1478 = !DILocation(line: 490, column: 1, scope: !1470)
!1479 = distinct !DISubprogram(name: "write<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write17h3f35e8ee32e65675E", scope: !204, file: !1115, line: 1369, type: !1480, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1482)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{null, !261, !13}
!1482 = !{!1483, !1484}
!1483 = !DILocalVariable(name: "dst", arg: 1, scope: !1479, file: !1115, line: 1369, type: !261)
!1484 = !DILocalVariable(name: "src", arg: 2, scope: !1479, file: !1115, line: 1369, type: !13)
!1485 = !DILocation(line: 1369, column: 30, scope: !1479)
!1486 = !DILocation(line: 1369, column: 43, scope: !1479)
!1487 = !DILocation(line: 1382, column: 9, scope: !1479)
!1488 = !DILocation(line: 1386, column: 9, scope: !1479)
!1489 = !DILocation(line: 1389, column: 2, scope: !1479)
!1490 = !DILocalVariable(name: "dst", arg: 1, scope: !1491, file: !218, line: 2510, type: !261)
!1491 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write7runtime17h6c25d0ab43985085E", scope: !1492, file: !218, line: 2510, type: !1493, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1495)
!1492 = !DINamespace(name: "write", scope: !204)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{null, !261}
!1495 = !{!1490}
!1496 = !DILocation(line: 2510, column: 39, scope: !1491, inlinedAt: !1497)
!1497 = distinct !DILocation(line: 1382, column: 9, scope: !1479)
!1498 = !DILocation(line: 1384, column: 33, scope: !1499, inlinedAt: !1497)
!1499 = !DILexicalBlockFile(scope: !1491, file: !1115, discriminator: 0)
!1500 = !DILocation(line: 2511, column: 20, scope: !1491, inlinedAt: !1497)
!1501 = !DILocation(line: 2513, column: 21, scope: !1491, inlinedAt: !1497)
!1502 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write17hafed66b0985665bbE", scope: !204, file: !1115, line: 1369, type: !1503, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !1505)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{null, !1300, !619}
!1505 = !{!1506, !1507}
!1506 = !DILocalVariable(name: "dst", arg: 1, scope: !1502, file: !1115, line: 1369, type: !1300)
!1507 = !DILocalVariable(name: "src", arg: 2, scope: !1502, file: !1115, line: 1369, type: !619)
!1508 = !DILocation(line: 1369, column: 30, scope: !1502)
!1509 = !DILocation(line: 1369, column: 43, scope: !1502)
!1510 = !DILocation(line: 1382, column: 9, scope: !1502)
!1511 = !DILocation(line: 1386, column: 9, scope: !1502)
!1512 = !DILocation(line: 1389, column: 2, scope: !1502)
!1513 = !DILocalVariable(name: "dst", arg: 1, scope: !1514, file: !218, line: 2510, type: !1300)
!1514 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write7runtime17hc4ed1339c3c863d7E", scope: !1492, file: !218, line: 2510, type: !1515, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !1517)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{null, !1300}
!1517 = !{!1513}
!1518 = !DILocation(line: 2510, column: 39, scope: !1514, inlinedAt: !1519)
!1519 = distinct !DILocation(line: 1382, column: 9, scope: !1502)
!1520 = !DILocation(line: 1384, column: 33, scope: !1521, inlinedAt: !1519)
!1521 = !DILexicalBlockFile(scope: !1514, file: !1115, discriminator: 0)
!1522 = !DILocation(line: 2511, column: 20, scope: !1514, inlinedAt: !1519)
!1523 = !DILocation(line: 2513, column: 21, scope: !1514, inlinedAt: !1519)
!1524 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>", linkageName: "_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17h2c5337d4da264d35E", scope: !204, file: !1115, line: 490, type: !1525, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1530, retainedNodes: !1528)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{null, !1527}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!1528 = !{!1529}
!1529 = !DILocalVariable(arg: 1, scope: !1524, file: !1115, line: 490, type: !1527)
!1530 = !{!1531}
!1531 = !DITemplateTypeParameter(name: "T", type: !94)
!1532 = !DILocation(line: 490, column: 1, scope: !1524)
!1533 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::FrameRange>", linkageName: "_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h9b528ae7c97fe701E", scope: !204, file: !1115, line: 490, type: !1534, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1539, retainedNodes: !1537)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{null, !1536}
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!1537 = !{!1538}
!1538 = !DILocalVariable(arg: 1, scope: !1533, file: !1115, line: 490, type: !1536)
!1539 = !{!1540}
!1540 = !DITemplateTypeParameter(name: "T", type: !19)
!1541 = !DILocation(line: 490, column: 1, scope: !1533)
!1542 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17hae02b1beb7e7cb90E", scope: !204, file: !1115, line: 490, type: !1543, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !786, retainedNodes: !1546)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{null, !1545}
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!1546 = !{!1547}
!1547 = !DILocalVariable(arg: 1, scope: !1542, file: !1115, line: 490, type: !1545)
!1548 = !DILocation(line: 490, column: 1, scope: !1542)
!1549 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h6e55fed4ff0fa7d3E", scope: !204, file: !1115, line: 490, type: !1550, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1555, retainedNodes: !1553)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{null, !1552}
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!1553 = !{!1554}
!1554 = !DILocalVariable(arg: 1, scope: !1549, file: !1115, line: 490, type: !1552)
!1555 = !{!1556}
!1556 = !DITemplateTypeParameter(name: "T", type: !60)
!1557 = !DILocation(line: 490, column: 1, scope: !1549)
!1558 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h2180d59b4f32e1e2E", scope: !1559, file: !256, line: 35, type: !1560, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1562)
!1559 = !DINamespace(name: "is_null", scope: !267)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!401, !1144}
!1562 = !{!1563}
!1563 = !DILocalVariable(name: "ptr", arg: 1, scope: !1558, file: !256, line: 35, type: !1144)
!1564 = !DILocation(line: 35, column: 25, scope: !1558)
!1565 = !DILocalVariable(name: "self", arg: 1, scope: !1566, file: !256, line: 209, type: !1144)
!1566 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h98cc39c62f01ae63E", scope: !267, file: !256, line: 209, type: !1567, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !1569)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!9, !1144}
!1569 = !{!1565}
!1570 = !{!1571}
!1571 = !DITemplateTypeParameter(name: "T", type: !123)
!1572 = !DILocation(line: 209, column: 17, scope: !1566, inlinedAt: !1573)
!1573 = distinct !DILocation(line: 36, column: 13, scope: !1558)
!1574 = !DILocalVariable(name: "self", arg: 1, scope: !1575, file: !256, line: 57, type: !1144)
!1575 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h6f027333dd3e2c6eE", scope: !267, file: !256, line: 57, type: !1576, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1579, retainedNodes: !1578)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!1260, !1144}
!1578 = !{!1574}
!1579 = !{!1571, !541}
!1580 = !DILocation(line: 57, column: 26, scope: !1575, inlinedAt: !1581)
!1581 = distinct !DILocation(line: 213, column: 33, scope: !1566, inlinedAt: !1573)
!1582 = !DILocation(line: 213, column: 18, scope: !1566, inlinedAt: !1573)
!1583 = !DILocation(line: 36, column: 13, scope: !1558)
!1584 = !DILocation(line: 37, column: 10, scope: !1558)
!1585 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h80913f6eb8ff5050E", scope: !267, file: !256, line: 33, type: !1586, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1588)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!401, !261}
!1588 = !{!1589}
!1589 = !DILocalVariable(name: "self", arg: 1, scope: !1585, file: !256, line: 33, type: !261)
!1590 = !DILocation(line: 33, column: 26, scope: !1585)
!1591 = !DILocation(line: 50, column: 36, scope: !1585)
!1592 = !DILocation(line: 50, column: 18, scope: !1585)
!1593 = !DILocation(line: 51, column: 6, scope: !1585)
!1594 = distinct !DISubprogram(name: "from_raw_parts<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h5ef2fb41e999ef30E", scope: !1596, file: !1595, line: 111, type: !1597, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1599)
!1595 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1e1a461bde75de7a93357ca7e628f393")
!1596 = !DINamespace(name: "metadata", scope: !204)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!169, !6, !9}
!1599 = !{!1600, !1601}
!1600 = !DILocalVariable(name: "data_address", arg: 1, scope: !1594, file: !1595, line: 112, type: !6)
!1601 = !DILocalVariable(name: "metadata", arg: 2, scope: !1594, file: !1595, line: 113, type: !9)
!1602 = !DILocation(line: 112, column: 5, scope: !1594)
!1603 = !DILocation(line: 113, column: 5, scope: !1594)
!1604 = !DILocation(line: 118, column: 36, scope: !1594)
!1605 = !DILocation(line: 118, column: 14, scope: !1594)
!1606 = !DILocation(line: 119, column: 2, scope: !1594)
!1607 = distinct !DISubprogram(name: "from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hfe156685108b7d9dE", scope: !1596, file: !1595, line: 111, type: !1608, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1610)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!207, !6, !7}
!1610 = !{!1611, !1612}
!1611 = !DILocalVariable(name: "data_address", arg: 1, scope: !1607, file: !1595, line: 112, type: !6)
!1612 = !DILocalVariable(name: "metadata", arg: 2, scope: !1607, file: !1595, line: 113, type: !7)
!1613 = !DILocation(line: 112, column: 5, scope: !1607)
!1614 = !DILocation(line: 113, column: 5, scope: !1607)
!1615 = !DILocation(line: 118, column: 36, scope: !1607)
!1616 = !DILocation(line: 118, column: 14, scope: !1607)
!1617 = !DILocation(line: 119, column: 2, scope: !1607)
!1618 = distinct !DISubprogram(name: "from_raw_parts_mut<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h3528cc9840df2208E", scope: !1596, file: !1595, line: 128, type: !1619, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1621)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!236, !1260, !9}
!1621 = !{!1622, !1623}
!1622 = !DILocalVariable(name: "data_address", arg: 1, scope: !1618, file: !1595, line: 129, type: !1260)
!1623 = !DILocalVariable(name: "metadata", arg: 2, scope: !1618, file: !1595, line: 130, type: !9)
!1624 = !DILocation(line: 129, column: 5, scope: !1618)
!1625 = !DILocation(line: 130, column: 5, scope: !1618)
!1626 = !DILocation(line: 135, column: 36, scope: !1618)
!1627 = !DILocation(line: 135, column: 14, scope: !1618)
!1628 = !DILocation(line: 136, column: 2, scope: !1618)
!1629 = distinct !DISubprogram(name: "metadata<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata8metadata17h9fb0ee2fa53d74d6E", scope: !1596, file: !1595, line: 94, type: !1630, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1632)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!9, !169}
!1632 = !{!1633}
!1633 = !DILocalVariable(name: "ptr", arg: 1, scope: !1629, file: !1595, line: 94, type: !169)
!1634 = !DILocation(line: 94, column: 34, scope: !1629)
!1635 = !DILocation(line: 98, column: 14, scope: !1629)
!1636 = !DILocation(line: 99, column: 2, scope: !1629)
!1637 = distinct !DISubprogram(name: "metadata<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8metadata8metadata17hf388667ed3b973a7E", scope: !1596, file: !1595, line: 94, type: !1386, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1638)
!1638 = !{!1639}
!1639 = !DILocalVariable(name: "ptr", arg: 1, scope: !1637, file: !1595, line: 94, type: !207)
!1640 = !DILocation(line: 94, column: 34, scope: !1637)
!1641 = !DILocation(line: 98, column: 14, scope: !1637)
!1642 = !DILocation(line: 99, column: 2, scope: !1637)
!1643 = distinct !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5580be51254bb83eE", scope: !778, file: !1644, line: 197, type: !1645, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1647)
!1644 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "0934e1faf1d0a2260f9da293f7ce200e")
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!778, !261}
!1647 = !{!1648}
!1648 = !DILocalVariable(name: "ptr", arg: 1, scope: !1643, file: !1644, line: 197, type: !261)
!1649 = !DILocation(line: 197, column: 39, scope: !1643)
!1650 = !DILocation(line: 200, column: 13, scope: !1643)
!1651 = !DILocation(line: 201, column: 13, scope: !1643)
!1652 = !DILocation(line: 203, column: 6, scope: !1643)
!1653 = !DILocalVariable(name: "ptr", arg: 1, scope: !1654, file: !218, line: 2510, type: !261)
!1654 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17head1b3abff70122eE", scope: !1655, file: !218, line: 2510, type: !1493, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1657)
!1655 = !DINamespace(name: "new_unchecked", scope: !1656)
!1656 = !DINamespace(name: "{impl#3}", scope: !779)
!1657 = !{!1653}
!1658 = !DILocation(line: 2510, column: 39, scope: !1654, inlinedAt: !1659)
!1659 = distinct !DILocation(line: 200, column: 13, scope: !1643)
!1660 = !DILocation(line: 200, column: 134, scope: !1661, inlinedAt: !1659)
!1661 = !DILexicalBlockFile(scope: !1654, file: !1644, discriminator: 0)
!1662 = !DILocation(line: 200, column: 133, scope: !1661, inlinedAt: !1659)
!1663 = !DILocation(line: 2511, column: 20, scope: !1654, inlinedAt: !1659)
!1664 = !DILocation(line: 2513, column: 21, scope: !1654, inlinedAt: !1659)
!1665 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hc48e8baf7044c5d4E", scope: !202, file: !201, line: 1456, type: !616, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !1666)
!1666 = !{!1667}
!1667 = !DILocalVariable(name: "self", arg: 1, scope: !1665, file: !201, line: 1456, type: !618)
!1668 = !DILocation(line: 1456, column: 29, scope: !1665)
!1669 = !DILocation(line: 1460, column: 9, scope: !1665)
!1670 = !DILocation(line: 1461, column: 6, scope: !1665)
!1671 = distinct !DISubprogram(name: "is_aligned<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hfa87dcb40fcac1f2E", scope: !202, file: !201, line: 1456, type: !639, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1672)
!1672 = !{!1673}
!1673 = !DILocalVariable(name: "self", arg: 1, scope: !1671, file: !201, line: 1456, type: !207)
!1674 = !DILocation(line: 1456, column: 29, scope: !1671)
!1675 = !DILocation(line: 1460, column: 9, scope: !1671)
!1676 = !DILocation(line: 1461, column: 6, scope: !1671)
!1677 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hc5cacdf760c67ebbE", scope: !1678, file: !201, line: 1578, type: !1679, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1681)
!1678 = !DINamespace(name: "is_aligned_to", scope: !202)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!401, !6, !9}
!1681 = !{!1682, !1683}
!1682 = !DILocalVariable(name: "ptr", arg: 1, scope: !1677, file: !201, line: 1578, type: !6)
!1683 = !DILocalVariable(name: "align", arg: 2, scope: !1677, file: !201, line: 1578, type: !9)
!1684 = !DILocation(line: 1578, column: 25, scope: !1677)
!1685 = !DILocation(line: 1578, column: 41, scope: !1677)
!1686 = !DILocalVariable(name: "self", arg: 1, scope: !1687, file: !201, line: 203, type: !6)
!1687 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h23d823db730bc293E", scope: !202, file: !201, line: 203, type: !1688, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1691, retainedNodes: !1690)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!9, !6}
!1690 = !{!1686}
!1691 = !{!441}
!1692 = !DILocation(line: 203, column: 17, scope: !1687, inlinedAt: !1693)
!1693 = distinct !DILocation(line: 1579, column: 13, scope: !1677)
!1694 = !DILocalVariable(name: "self", arg: 1, scope: !1695, file: !201, line: 58, type: !6)
!1695 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h6a4fb87ccde71b63E", scope: !202, file: !201, line: 58, type: !1696, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1699, retainedNodes: !1698)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!6, !6}
!1698 = !{!1694}
!1699 = !{!441, !541}
!1700 = !DILocation(line: 58, column: 26, scope: !1695, inlinedAt: !1701)
!1701 = distinct !DILocation(line: 207, column: 33, scope: !1687, inlinedAt: !1693)
!1702 = !DILocation(line: 207, column: 18, scope: !1687, inlinedAt: !1693)
!1703 = !DILocation(line: 1579, column: 26, scope: !1677)
!1704 = !DILocation(line: 1579, column: 13, scope: !1677)
!1705 = !DILocation(line: 1580, column: 10, scope: !1677)
!1706 = distinct !DISubprogram(name: "is_aligned_to<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hac99ed1fb9b4d30fE", scope: !202, file: !201, line: 1572, type: !1707, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1709)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!401, !207, !9}
!1709 = !{!1710, !1711}
!1710 = !DILocalVariable(name: "self", arg: 1, scope: !1706, file: !201, line: 1572, type: !207)
!1711 = !DILocalVariable(name: "align", arg: 2, scope: !1706, file: !201, line: 1572, type: !9)
!1712 = !DILocation(line: 1572, column: 32, scope: !1706)
!1713 = !DILocation(line: 1572, column: 38, scope: !1706)
!1714 = !DILocation(line: 2169, column: 38, scope: !1169, inlinedAt: !1715)
!1715 = distinct !DILocation(line: 1573, column: 13, scope: !1706)
!1716 = !DILocation(line: 106, column: 33, scope: !1174, inlinedAt: !1717)
!1717 = distinct !DILocation(line: 2170, column: 13, scope: !1169, inlinedAt: !1715)
!1718 = !DILocation(line: 107, column: 13, scope: !1174, inlinedAt: !1717)
!1719 = !DILocation(line: 2170, column: 13, scope: !1169, inlinedAt: !1715)
!1720 = !DILocation(line: 1573, column: 12, scope: !1706)
!1721 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !1722)
!1722 = distinct !DILocation(line: 1592, column: 37, scope: !1706)
!1723 = !DILocation(line: 1592, column: 36, scope: !1706)
!1724 = !DILocation(line: 1592, column: 18, scope: !1706)
!1725 = !DILocation(line: 1593, column: 6, scope: !1706)
!1726 = !DILocation(line: 1574, column: 13, scope: !1706)
!1727 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hece5c81fd3c029b4E", scope: !202, file: !201, line: 1572, type: !1728, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !1730)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!401, !618, !9}
!1730 = !{!1731, !1732}
!1731 = !DILocalVariable(name: "self", arg: 1, scope: !1727, file: !201, line: 1572, type: !618)
!1732 = !DILocalVariable(name: "align", arg: 2, scope: !1727, file: !201, line: 1572, type: !9)
!1733 = !DILocation(line: 1572, column: 32, scope: !1727)
!1734 = !DILocation(line: 1572, column: 38, scope: !1727)
!1735 = !DILocation(line: 2169, column: 38, scope: !1169, inlinedAt: !1736)
!1736 = distinct !DILocation(line: 1573, column: 13, scope: !1727)
!1737 = !DILocation(line: 106, column: 33, scope: !1174, inlinedAt: !1738)
!1738 = distinct !DILocation(line: 2170, column: 13, scope: !1169, inlinedAt: !1736)
!1739 = !DILocation(line: 107, column: 13, scope: !1174, inlinedAt: !1738)
!1740 = !DILocation(line: 2170, column: 13, scope: !1169, inlinedAt: !1736)
!1741 = !DILocation(line: 1573, column: 12, scope: !1727)
!1742 = !DILocalVariable(name: "self", arg: 1, scope: !1743, file: !201, line: 58, type: !618)
!1743 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hd77e403265898748E", scope: !202, file: !201, line: 58, type: !1744, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1747, retainedNodes: !1746)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!6, !618}
!1746 = !{!1742}
!1747 = !{!632, !541}
!1748 = !DILocation(line: 58, column: 26, scope: !1743, inlinedAt: !1749)
!1749 = distinct !DILocation(line: 1592, column: 37, scope: !1727)
!1750 = !DILocation(line: 1592, column: 36, scope: !1727)
!1751 = !DILocation(line: 1592, column: 18, scope: !1727)
!1752 = !DILocation(line: 1593, column: 6, scope: !1727)
!1753 = !DILocation(line: 1574, column: 13, scope: !1727)
!1754 = distinct !DISubprogram(name: "with_metadata_of<u8, bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h1643daf528826fd6E", scope: !202, file: !201, line: 94, type: !1755, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1761, retainedNodes: !1758)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!207, !1757, !207}
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!1758 = !{!1759, !1760}
!1759 = !DILocalVariable(name: "self", arg: 1, scope: !1754, file: !201, line: 94, type: !1757)
!1760 = !DILocalVariable(name: "meta", arg: 2, scope: !1754, file: !201, line: 94, type: !207)
!1761 = !{!1571, !1762}
!1762 = !DITemplateTypeParameter(name: "U", type: !13)
!1763 = !DILocation(line: 94, column: 38, scope: !1754)
!1764 = !DILocation(line: 94, column: 44, scope: !1754)
!1765 = !DILocation(line: 98, column: 48, scope: !1754)
!1766 = !DILocation(line: 98, column: 9, scope: !1754)
!1767 = !DILocation(line: 99, column: 6, scope: !1754)
!1768 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17he0d5fdc4add1571dE", scope: !1769, file: !201, line: 36, type: !1770, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1772)
!1769 = !DINamespace(name: "is_null", scope: !202)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!401, !1757}
!1772 = !{!1773}
!1773 = !DILocalVariable(name: "ptr", arg: 1, scope: !1768, file: !201, line: 36, type: !1757)
!1774 = !DILocation(line: 36, column: 25, scope: !1768)
!1775 = !DILocalVariable(name: "self", arg: 1, scope: !1776, file: !201, line: 203, type: !1757)
!1776 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hac9fcbf963f9d8dbE", scope: !202, file: !201, line: 203, type: !1777, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !1779)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!9, !1757}
!1779 = !{!1775}
!1780 = !DILocation(line: 203, column: 17, scope: !1776, inlinedAt: !1781)
!1781 = distinct !DILocation(line: 37, column: 13, scope: !1768)
!1782 = !DILocalVariable(name: "self", arg: 1, scope: !1783, file: !201, line: 58, type: !1757)
!1783 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h18a25d6b7266bb28E", scope: !202, file: !201, line: 58, type: !1784, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1579, retainedNodes: !1786)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!6, !1757}
!1786 = !{!1782}
!1787 = !DILocation(line: 58, column: 26, scope: !1783, inlinedAt: !1788)
!1788 = distinct !DILocation(line: 207, column: 33, scope: !1776, inlinedAt: !1781)
!1789 = !DILocation(line: 207, column: 18, scope: !1776, inlinedAt: !1781)
!1790 = !DILocation(line: 37, column: 13, scope: !1768)
!1791 = !DILocation(line: 38, column: 10, scope: !1768)
!1792 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h970d60a8eb56c4a7E", scope: !202, file: !201, line: 34, type: !616, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !631, retainedNodes: !1793)
!1793 = !{!1794}
!1794 = !DILocalVariable(name: "self", arg: 1, scope: !1792, file: !201, line: 34, type: !618)
!1795 = !DILocation(line: 34, column: 26, scope: !1792)
!1796 = !DILocation(line: 51, column: 36, scope: !1792)
!1797 = !DILocation(line: 51, column: 18, scope: !1792)
!1798 = !DILocation(line: 52, column: 6, scope: !1792)
!1799 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha851001275c507fbE", scope: !202, file: !201, line: 34, type: !639, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1800)
!1800 = !{!1801}
!1801 = !DILocalVariable(name: "self", arg: 1, scope: !1799, file: !201, line: 34, type: !207)
!1802 = !DILocation(line: 34, column: 26, scope: !1799)
!1803 = !DILocation(line: 51, column: 36, scope: !1799)
!1804 = !DILocation(line: 51, column: 18, scope: !1799)
!1805 = !DILocation(line: 52, column: 6, scope: !1799)
!1806 = distinct !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hce918766f5f8b5ffE", scope: !202, file: !201, line: 781, type: !1807, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1809)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!9, !207, !207}
!1809 = !{!1810, !1811, !1812, !1814}
!1810 = !DILocalVariable(name: "self", arg: 1, scope: !1806, file: !201, line: 781, type: !207)
!1811 = !DILocalVariable(name: "origin", arg: 2, scope: !1806, file: !201, line: 781, type: !207)
!1812 = !DILocalVariable(name: "this", scope: !1813, file: !201, line: 785, type: !207, align: 8)
!1813 = distinct !DILexicalBlock(scope: !1806, file: !201, line: 785, column: 9)
!1814 = !DILocalVariable(name: "pointee_size", scope: !1815, file: !201, line: 795, type: !9, align: 8)
!1815 = distinct !DILexicalBlock(scope: !1813, file: !201, line: 795, column: 9)
!1816 = !DILocation(line: 781, column: 33, scope: !1806)
!1817 = !DILocation(line: 785, column: 13, scope: !1813)
!1818 = !DILocation(line: 781, column: 39, scope: !1806)
!1819 = !DILocation(line: 789, column: 13, scope: !1813)
!1820 = !DILocation(line: 795, column: 28, scope: !1813)
!1821 = !DILocation(line: 795, column: 13, scope: !1815)
!1822 = !DILocation(line: 796, column: 17, scope: !1815)
!1823 = !DILocalVariable(name: "this", arg: 1, scope: !1824, file: !218, line: 2510, type: !207)
!1824 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hbc49cdb577889e5eE", scope: !1825, file: !218, line: 2510, type: !1826, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1828)
!1825 = !DINamespace(name: "sub_ptr", scope: !202)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{null, !207, !207}
!1828 = !{!1823, !1829}
!1829 = !DILocalVariable(name: "origin", arg: 2, scope: !1824, file: !218, line: 2510, type: !207)
!1830 = !DILocation(line: 2510, column: 39, scope: !1824, inlinedAt: !1831)
!1831 = distinct !DILocation(line: 789, column: 13, scope: !1813)
!1832 = !DILocation(line: 791, column: 58, scope: !1833, inlinedAt: !1831)
!1833 = !DILexicalBlockFile(scope: !1824, file: !201, discriminator: 0)
!1834 = !DILocation(line: 2511, column: 20, scope: !1824, inlinedAt: !1831)
!1835 = !DILocation(line: 2513, column: 21, scope: !1824, inlinedAt: !1831)
!1836 = !DILocation(line: 796, column: 37, scope: !1815)
!1837 = !DILocation(line: 796, column: 9, scope: !1815)
!1838 = !DILocation(line: 798, column: 18, scope: !1815)
!1839 = !DILocation(line: 799, column: 6, scope: !1806)
!1840 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5092485984f6bd12E", scope: !1841, file: !201, line: 1617, type: !1630, scopeLine: 1617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1842)
!1841 = !DINamespace(name: "{impl#1}", scope: !203)
!1842 = !{!1843}
!1843 = !DILocalVariable(name: "self", arg: 1, scope: !1840, file: !201, line: 1617, type: !169)
!1844 = !DILocation(line: 1617, column: 22, scope: !1840)
!1845 = !DILocation(line: 1618, column: 9, scope: !1840)
!1846 = !DILocation(line: 1619, column: 6, scope: !1840)
!1847 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h574f85348a0cba07E", scope: !1841, file: !201, line: 1637, type: !1848, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1850)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!207, !169}
!1850 = !{!1851}
!1851 = !DILocalVariable(name: "self", arg: 1, scope: !1847, file: !201, line: 1637, type: !169)
!1852 = !DILocation(line: 1637, column: 25, scope: !1847)
!1853 = !DILocation(line: 1639, column: 6, scope: !1847)
!1854 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h8d5eadf86b048e09E", scope: !1856, file: !1855, line: 343, type: !1858, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1864, retainedNodes: !1861)
!1855 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "c10b88427730288d6cfd9f0a1aea93aa")
!1856 = !DINamespace(name: "{impl#15}", scope: !1857)
!1857 = !DINamespace(name: "array", scope: !142)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!303, !1860, !174, !307}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!1861 = !{!1862, !1863}
!1862 = !DILocalVariable(name: "self", arg: 1, scope: !1854, file: !1855, line: 343, type: !1860)
!1863 = !DILocalVariable(name: "index", arg: 2, scope: !1854, file: !1855, line: 343, type: !174)
!1864 = !{!190, !1865}
!1865 = !DITemplateTypeParameter(name: "I", type: !174)
!1866 = !DILocation(line: 343, column: 14, scope: !1854)
!1867 = !DILocation(line: 343, column: 21, scope: !1854)
!1868 = !DILocation(line: 344, column: 9, scope: !1854)
!1869 = !DILocation(line: 345, column: 6, scope: !1854)
!1870 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h7ac6186df89a0e74E", scope: !1871, file: !1855, line: 354, type: !1872, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1864, retainedNodes: !1875)
!1871 = !DINamespace(name: "{impl#16}", scope: !1857)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!334, !1874, !174, !307}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!1875 = !{!1876, !1877}
!1876 = !DILocalVariable(name: "self", arg: 1, scope: !1870, file: !1855, line: 354, type: !1874)
!1877 = !DILocalVariable(name: "index", arg: 2, scope: !1870, file: !1855, line: 354, type: !174)
!1878 = !DILocation(line: 354, column: 18, scope: !1870)
!1879 = !DILocation(line: 354, column: 29, scope: !1870)
!1880 = !DILocation(line: 355, column: 9, scope: !1870)
!1881 = !DILocation(line: 356, column: 6, scope: !1870)
!1882 = distinct !DISubprogram(name: "split_at_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17he70e0f6eb42f454eE", scope: !1093, file: !1883, line: 1631, type: !1884, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1890)
!1883 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "6c4d7544761812c5fa63901cf334e4f2")
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!1886, !334, !9, !307}
!1886 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut [bootloader::bootinfo::memory_map::MemoryRegion], &mut [bootloader::bootinfo::memory_map::MemoryRegion])", file: !2, size: 256, align: 64, elements: !1887, templateParams: !24, identifier: "fd57f43983bb0863bac9059cc103f373")
!1887 = !{!1888, !1889}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1886, file: !2, baseType: !334, size: 128, align: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1886, file: !2, baseType: !334, size: 128, align: 64, offset: 128)
!1890 = !{!1891, !1892}
!1891 = !DILocalVariable(name: "self", arg: 1, scope: !1882, file: !1883, line: 1631, type: !334)
!1892 = !DILocalVariable(name: "mid", arg: 2, scope: !1882, file: !1883, line: 1631, type: !9)
!1893 = !DILocation(line: 1631, column: 31, scope: !1882)
!1894 = !DILocation(line: 1631, column: 42, scope: !1882)
!1895 = !DILocation(line: 1632, column: 17, scope: !1882)
!1896 = !DILocation(line: 1632, column: 9, scope: !1882)
!1897 = !DILocation(line: 1635, column: 18, scope: !1882)
!1898 = !DILocation(line: 1636, column: 6, scope: !1882)
!1899 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h153d00e867ab1a04E", scope: !1093, file: !1883, line: 395, type: !1900, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1905, retainedNodes: !1902)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{!12, !303, !9}
!1902 = !{!1903, !1904}
!1903 = !DILocalVariable(name: "self", arg: 1, scope: !1899, file: !1883, line: 395, type: !303)
!1904 = !DILocalVariable(name: "index", arg: 2, scope: !1899, file: !1883, line: 395, type: !9)
!1905 = !{!190, !1906}
!1906 = !DITemplateTypeParameter(name: "I", type: !9)
!1907 = !DILocation(line: 395, column: 36, scope: !1899)
!1908 = !DILocation(line: 395, column: 43, scope: !1899)
!1909 = !DILocation(line: 402, column: 20, scope: !1899)
!1910 = !DILocation(line: 403, column: 6, scope: !1899)
!1911 = distinct !DISubprogram(name: "as_mut_ptr_range<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17hdeab7bd7aef8111dE", scope: !1093, file: !1883, line: 582, type: !1912, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1920)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{!1914, !334}
!1914 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<*mut bootloader::bootinfo::memory_map::MemoryRegion>", scope: !175, file: !2, size: 128, align: 64, elements: !1915, templateParams: !1918, identifier: "a4457378e56be9636800707cc7b35a25")
!1915 = !{!1916, !1917}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1914, file: !2, baseType: !261, size: 64, align: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1914, file: !2, baseType: !261, size: 64, align: 64, offset: 64)
!1918 = !{!1919}
!1919 = !DITemplateTypeParameter(name: "Idx", type: !261)
!1920 = !{!1921, !1922, !1924}
!1921 = !DILocalVariable(name: "self", arg: 1, scope: !1911, file: !1883, line: 582, type: !334)
!1922 = !DILocalVariable(name: "start", scope: !1923, file: !1883, line: 583, type: !261, align: 8)
!1923 = distinct !DILexicalBlock(scope: !1911, file: !1883, line: 583, column: 9)
!1924 = !DILocalVariable(name: "end", scope: !1925, file: !1883, line: 585, type: !261, align: 8)
!1925 = distinct !DILexicalBlock(scope: !1923, file: !1883, line: 585, column: 9)
!1926 = !DILocation(line: 582, column: 35, scope: !1911)
!1927 = !DILocalVariable(name: "self", arg: 1, scope: !1928, file: !1883, line: 502, type: !334)
!1928 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h71f8f45be6ffbd81E", scope: !1093, file: !1883, line: 502, type: !1929, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1931)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!261, !334}
!1931 = !{!1927}
!1932 = !DILocation(line: 502, column: 29, scope: !1928, inlinedAt: !1933)
!1933 = distinct !DILocation(line: 583, column: 21, scope: !1911)
!1934 = !DILocation(line: 583, column: 21, scope: !1911)
!1935 = !DILocation(line: 583, column: 13, scope: !1923)
!1936 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !1937)
!1937 = distinct !DILocation(line: 585, column: 28, scope: !1923)
!1938 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !1937)
!1939 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !1937)
!1940 = !DILocation(line: 585, column: 28, scope: !1923)
!1941 = !DILocation(line: 585, column: 13, scope: !1925)
!1942 = !DILocation(line: 586, column: 9, scope: !1925)
!1943 = !DILocation(line: 587, column: 6, scope: !1911)
!1944 = distinct !DISubprogram(name: "sort_unstable_by<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17hd2747746a3a97436E", scope: !1093, file: !1883, line: 2683, type: !1945, scopeLine: 2683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1950, retainedNodes: !1947)
!1945 = !DISubroutineType(types: !1946)
!1946 = !{null, !334, !1097}
!1947 = !{!1948, !1949}
!1948 = !DILocalVariable(name: "self", arg: 1, scope: !1944, file: !1883, line: 2683, type: !334)
!1949 = !DILocalVariable(name: "compare", arg: 2, scope: !1944, file: !1883, line: 2683, type: !1097)
!1950 = !{!190, !1951}
!1951 = !DITemplateTypeParameter(name: "F", type: !1097)
!1952 = !DILocation(line: 2683, column: 32, scope: !1944)
!1953 = !DILocation(line: 2683, column: 43, scope: !1944)
!1954 = !DILocation(line: 2687, column: 31, scope: !1944)
!1955 = !DILocation(line: 2687, column: 9, scope: !1944)
!1956 = !{i64 1}
!1957 = !DILocation(line: 2688, column: 6, scope: !1944)
!1958 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hceb410a891f0c114E", scope: !1092, file: !1883, line: 2687, type: !1959, scopeLine: 2687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1950, retainedNodes: !1961)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!401, !1090, !12, !12}
!1961 = !{!1962, !1963, !1964}
!1962 = !DILocalVariable(name: "a", arg: 2, scope: !1958, file: !1883, line: 2687, type: !12)
!1963 = !DILocalVariable(name: "b", arg: 3, scope: !1958, file: !1883, line: 2687, type: !12)
!1964 = !DILocalVariable(name: "compare", scope: !1958, file: !1883, line: 2683, type: !1097, align: 1)
!1965 = !DILocation(line: 2683, column: 47, scope: !1958)
!1966 = !DILocation(line: 2687, column: 32, scope: !1958)
!1967 = !DILocation(line: 2687, column: 35, scope: !1958)
!1968 = !DILocation(line: 2687, column: 38, scope: !1958)
!1969 = !DILocation(line: 2687, column: 69, scope: !1958)
!1970 = distinct !DISubprogram(name: "split_at_mut_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17he691702b1f2e72fdE", scope: !1093, file: !1883, line: 1739, type: !1971, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1973)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!1886, !334, !9}
!1973 = !{!1974, !1975, !1976, !1978}
!1974 = !DILocalVariable(name: "self", arg: 1, scope: !1970, file: !1883, line: 1739, type: !334)
!1975 = !DILocalVariable(name: "mid", arg: 2, scope: !1970, file: !1883, line: 1739, type: !9)
!1976 = !DILocalVariable(name: "len", scope: !1977, file: !1883, line: 1740, type: !9, align: 8)
!1977 = distinct !DILexicalBlock(scope: !1970, file: !1883, line: 1740, column: 9)
!1978 = !DILocalVariable(name: "ptr", scope: !1979, file: !1883, line: 1741, type: !261, align: 8)
!1979 = distinct !DILexicalBlock(scope: !1977, file: !1883, line: 1741, column: 9)
!1980 = !DILocation(line: 1739, column: 48, scope: !1970)
!1981 = !DILocation(line: 1739, column: 59, scope: !1970)
!1982 = !DILocation(line: 1740, column: 19, scope: !1970)
!1983 = !DILocation(line: 1740, column: 13, scope: !1977)
!1984 = !DILocation(line: 502, column: 29, scope: !1928, inlinedAt: !1985)
!1985 = distinct !DILocation(line: 1741, column: 19, scope: !1977)
!1986 = !DILocation(line: 1741, column: 19, scope: !1977)
!1987 = !DILocation(line: 1741, column: 13, scope: !1979)
!1988 = !DILocation(line: 1748, column: 13, scope: !1979)
!1989 = !DILocation(line: 1752, column: 14, scope: !1979)
!1990 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !1991)
!1991 = distinct !DILocation(line: 1752, column: 63, scope: !1979)
!1992 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !1991)
!1993 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !1991)
!1994 = !DILocation(line: 1752, column: 77, scope: !1979)
!1995 = !DILocalVariable(name: "mid", arg: 1, scope: !1996, file: !218, line: 2510, type: !9)
!1996 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17ha5a58f3c63ded112E", scope: !1997, file: !218, line: 2510, type: !1998, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2000)
!1997 = !DINamespace(name: "split_at_mut_unchecked", scope: !1093)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{null, !9, !9}
!2000 = !{!1995, !2001}
!2001 = !DILocalVariable(name: "len", arg: 2, scope: !1996, file: !218, line: 2510, type: !9)
!2002 = !DILocation(line: 2510, column: 39, scope: !1996, inlinedAt: !2003)
!2003 = distinct !DILocation(line: 1748, column: 13, scope: !1979)
!2004 = !DILocation(line: 1750, column: 45, scope: !2005, inlinedAt: !2003)
!2005 = !DILexicalBlockFile(scope: !1996, file: !1883, discriminator: 0)
!2006 = !DILocation(line: 2511, column: 20, scope: !1996, inlinedAt: !2003)
!2007 = !DILocation(line: 2513, column: 21, scope: !1996, inlinedAt: !2003)
!2008 = !DILocation(line: 1752, column: 44, scope: !1979)
!2009 = !DILocation(line: 1752, column: 13, scope: !1979)
!2010 = !DILocation(line: 1754, column: 6, scope: !1970)
!2011 = distinct !DISubprogram(name: "iter<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h7be652596d4d48c5E", scope: !1093, file: !1883, line: 736, type: !2012, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2014)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{!774, !303}
!2014 = !{!2015}
!2015 = !DILocalVariable(name: "self", arg: 1, scope: !2011, file: !1883, line: 736, type: !303)
!2016 = !DILocation(line: 736, column: 17, scope: !2011)
!2017 = !DILocation(line: 737, column: 9, scope: !2011)
!2018 = !DILocation(line: 738, column: 6, scope: !2011)
!2019 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h896a93d8011e65cdE", scope: !1093, file: !1883, line: 611, type: !2020, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2022)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{null, !334, !9, !9, !307}
!2022 = !{!2023, !2024, !2025, !2026, !2028}
!2023 = !DILocalVariable(name: "self", arg: 1, scope: !2019, file: !1883, line: 611, type: !334)
!2024 = !DILocalVariable(name: "a", arg: 2, scope: !2019, file: !1883, line: 611, type: !9)
!2025 = !DILocalVariable(name: "b", arg: 3, scope: !2019, file: !1883, line: 611, type: !9)
!2026 = !DILocalVariable(name: "pa", scope: !2027, file: !1883, line: 614, type: !261, align: 8)
!2027 = distinct !DILexicalBlock(scope: !2019, file: !1883, line: 614, column: 9)
!2028 = !DILocalVariable(name: "pb", scope: !2029, file: !1883, line: 615, type: !261, align: 8)
!2029 = distinct !DILexicalBlock(scope: !2027, file: !1883, line: 615, column: 9)
!2030 = !DILocation(line: 611, column: 23, scope: !2019)
!2031 = !DILocation(line: 611, column: 34, scope: !2019)
!2032 = !DILocation(line: 611, column: 44, scope: !2019)
!2033 = !DILocation(line: 614, column: 36, scope: !2019)
!2034 = !DILocation(line: 614, column: 18, scope: !2019)
!2035 = !DILocation(line: 614, column: 13, scope: !2027)
!2036 = !DILocation(line: 615, column: 36, scope: !2027)
!2037 = !DILocation(line: 615, column: 18, scope: !2027)
!2038 = !DILocation(line: 615, column: 13, scope: !2029)
!2039 = !DILocation(line: 621, column: 13, scope: !2029)
!2040 = !DILocation(line: 623, column: 6, scope: !2019)
!2041 = distinct !DISubprogram(name: "reverse<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h2263e868b33f283cE", scope: !1093, file: !1883, line: 678, type: !2042, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2044)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{null, !334}
!2044 = !{!2045, !2046, !2048, !2050, !2051, !2053}
!2045 = !DILocalVariable(name: "self", arg: 1, scope: !2041, file: !1883, line: 678, type: !334)
!2046 = !DILocalVariable(name: "half_len", scope: !2047, file: !1883, line: 679, type: !9, align: 8)
!2047 = distinct !DILexicalBlock(scope: !2041, file: !1883, line: 679, column: 9)
!2048 = !DILocalVariable(name: "start", scope: !2049, file: !1883, line: 680, type: !261, align: 8)
!2049 = distinct !DILexicalBlock(scope: !2047, file: !1883, line: 680, column: 9)
!2050 = !DILocalVariable(name: "end", scope: !2049, file: !1883, line: 680, type: !261, align: 8)
!2051 = !DILocalVariable(name: "front_half", scope: !2052, file: !1883, line: 684, type: !334, align: 8)
!2052 = distinct !DILexicalBlock(scope: !2049, file: !1883, line: 684, column: 9)
!2053 = !DILocalVariable(name: "back_half", scope: !2052, file: !1883, line: 684, type: !334, align: 8)
!2054 = !DILocation(line: 678, column: 20, scope: !2041)
!2055 = !DILocation(line: 679, column: 24, scope: !2041)
!2056 = !DILocation(line: 679, column: 13, scope: !2047)
!2057 = !DILocation(line: 680, column: 36, scope: !2047)
!2058 = !DILocation(line: 680, column: 21, scope: !2047)
!2059 = !DILocation(line: 680, column: 21, scope: !2049)
!2060 = !DILocation(line: 680, column: 28, scope: !2047)
!2061 = !DILocation(line: 680, column: 28, scope: !2049)
!2062 = !DILocation(line: 690, column: 21, scope: !2049)
!2063 = !DILocalVariable(name: "self", arg: 1, scope: !2064, file: !256, line: 1116, type: !261)
!2064 = distinct !DISubprogram(name: "sub<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h281d27d65c8f1b5aE", scope: !267, file: !256, line: 1116, type: !268, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2065)
!2065 = !{!2063, !2066}
!2066 = !DILocalVariable(name: "count", arg: 2, scope: !2064, file: !256, line: 1116, type: !9)
!2067 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !2068)
!2068 = distinct !DILocation(line: 691, column: 47, scope: !2049)
!2069 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !2068)
!2070 = !DILocalVariable(name: "self", arg: 1, scope: !2071, file: !2072, line: 1358, type: !2076)
!2071 = distinct !DISubprogram(name: "wrapping_neg", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17h893016b54d708d8aE", scope: !2073, file: !2072, line: 1358, type: !2074, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2077)
!2072 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "3cc61eba9d1c401bb41e13b0ee5e5cb8")
!2073 = !DINamespace(name: "{impl#5}", scope: !993)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!2076, !2076}
!2076 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!2077 = !{!2070}
!2078 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !2079)
!2079 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !2068)
!2080 = !DILocalVariable(name: "self", arg: 1, scope: !2081, file: !2072, line: 1183, type: !2076)
!2081 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_sub17h760510dedcdc1c1dE", scope: !2073, file: !2072, line: 1183, type: !2082, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2084)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!2076, !2076, !2076}
!2084 = !{!2080, !2085}
!2085 = !DILocalVariable(name: "rhs", arg: 2, scope: !2081, file: !2072, line: 1183, type: !2076)
!2086 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !2087)
!2087 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !2079)
!2088 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !2087)
!2089 = !DILocation(line: 1184, column: 13, scope: !2081, inlinedAt: !2087)
!2090 = !DILocalVariable(name: "self", arg: 1, scope: !2091, file: !256, line: 472, type: !261)
!2091 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h4e79223d80da698dE", scope: !267, file: !256, line: 472, type: !2092, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2094)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!261, !261, !2076}
!2094 = !{!2090, !2095}
!2095 = !DILocalVariable(name: "count", arg: 2, scope: !2091, file: !256, line: 472, type: !2076)
!2096 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !2097)
!2097 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !2068)
!2098 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !2097)
!2099 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !2097)
!2100 = !DILocation(line: 691, column: 21, scope: !2049)
!2101 = !DILocation(line: 689, column: 17, scope: !2049)
!2102 = !DILocation(line: 684, column: 14, scope: !2049)
!2103 = !DILocation(line: 684, column: 14, scope: !2052)
!2104 = !DILocation(line: 684, column: 26, scope: !2049)
!2105 = !DILocation(line: 684, column: 26, scope: !2052)
!2106 = !DILocation(line: 698, column: 9, scope: !2052)
!2107 = !DILocation(line: 717, column: 6, scope: !2041)
!2108 = distinct !DISubprogram(name: "revswap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17h959d8f77fd0aae5bE", scope: !2109, file: !1883, line: 701, type: !2110, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2112)
!2109 = !DINamespace(name: "reverse", scope: !1093)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{null, !334, !334, !9}
!2112 = !{!2113, !2114, !2115, !2116, !2118, !2119}
!2113 = !DILocalVariable(name: "a", arg: 1, scope: !2108, file: !1883, line: 701, type: !334)
!2114 = !DILocalVariable(name: "b", arg: 2, scope: !2108, file: !1883, line: 701, type: !334)
!2115 = !DILocalVariable(name: "n", arg: 3, scope: !2108, file: !1883, line: 701, type: !9)
!2116 = !DILocalVariable(name: "a", scope: !2117, file: !1883, line: 709, type: !334, align: 8)
!2117 = distinct !DILexicalBlock(scope: !2108, file: !1883, line: 709, column: 13)
!2118 = !DILocalVariable(name: "b", scope: !2117, file: !1883, line: 709, type: !334, align: 8)
!2119 = !DILocalVariable(name: "i", scope: !2120, file: !1883, line: 711, type: !9, align: 8)
!2120 = distinct !DILexicalBlock(scope: !2117, file: !1883, line: 711, column: 13)
!2121 = !DILocation(line: 701, column: 23, scope: !2108)
!2122 = !DILocation(line: 701, column: 36, scope: !2108)
!2123 = !DILocation(line: 701, column: 49, scope: !2108)
!2124 = !DILocation(line: 711, column: 17, scope: !2120)
!2125 = !DILocation(line: 702, column: 13, scope: !2108)
!2126 = !DILocation(line: 703, column: 13, scope: !2108)
!2127 = !DILocation(line: 702, column: 27, scope: !2108)
!2128 = !DILocation(line: 709, column: 34, scope: !2108)
!2129 = !DILocation(line: 709, column: 32, scope: !2108)
!2130 = !DILocation(line: 709, column: 47, scope: !2108)
!2131 = !DILocation(line: 709, column: 45, scope: !2108)
!2132 = !DILocation(line: 709, column: 26, scope: !2108)
!2133 = !DILocation(line: 709, column: 18, scope: !2108)
!2134 = !DILocation(line: 709, column: 18, scope: !2117)
!2135 = !DILocation(line: 709, column: 21, scope: !2108)
!2136 = !DILocation(line: 709, column: 21, scope: !2117)
!2137 = !DILocation(line: 711, column: 25, scope: !2117)
!2138 = !DILocation(line: 712, column: 13, scope: !2120)
!2139 = !DILocation(line: 703, column: 27, scope: !2108)
!2140 = !DILocation(line: 712, column: 19, scope: !2120)
!2141 = !DILocation(line: 716, column: 10, scope: !2108)
!2142 = !DILocation(line: 713, column: 34, scope: !2120)
!2143 = !DILocation(line: 713, column: 32, scope: !2120)
!2144 = !DILocation(line: 713, column: 27, scope: !2120)
!2145 = !DILocation(line: 713, column: 45, scope: !2120)
!2146 = !DILocation(line: 713, column: 53, scope: !2120)
!2147 = !DILocation(line: 713, column: 43, scope: !2120)
!2148 = !DILocation(line: 713, column: 38, scope: !2120)
!2149 = !DILocation(line: 713, column: 17, scope: !2120)
!2150 = !DILocation(line: 714, column: 17, scope: !2120)
!2151 = distinct !DISubprogram(name: "from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h838e6bae462279e0E", scope: !2153, file: !2152, line: 137, type: !2154, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2156)
!2152 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "4e9e8b780584cc248c586456197d9cf5")
!2153 = !DINamespace(name: "raw", scope: !166)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{!334, !261, !9}
!2156 = !{!2157, !2158}
!2157 = !DILocalVariable(name: "data", arg: 1, scope: !2151, file: !2152, line: 137, type: !261)
!2158 = !DILocalVariable(name: "len", arg: 2, scope: !2151, file: !2152, line: 137, type: !9)
!2159 = !DILocation(line: 137, column: 47, scope: !2151)
!2160 = !DILocation(line: 137, column: 61, scope: !2151)
!2161 = !DILocation(line: 140, column: 9, scope: !2151)
!2162 = !DILocation(line: 145, column: 15, scope: !2151)
!2163 = !DILocation(line: 147, column: 2, scope: !2151)
!2164 = !DILocalVariable(name: "data", arg: 1, scope: !2165, file: !218, line: 2510, type: !261)
!2165 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17h8b4aca642836055cE", scope: !2166, file: !218, line: 2510, type: !2167, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2169)
!2166 = !DINamespace(name: "from_raw_parts_mut", scope: !2153)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{null, !261, !9}
!2169 = !{!2164, !2170}
!2170 = !DILocalVariable(name: "len", arg: 2, scope: !2165, file: !218, line: 2510, type: !9)
!2171 = !DILocation(line: 2510, column: 39, scope: !2165, inlinedAt: !2172)
!2172 = distinct !DILocation(line: 140, column: 9, scope: !2151)
!2173 = !DILocation(line: 142, column: 46, scope: !2174, inlinedAt: !2172)
!2174 = !DILexicalBlockFile(scope: !2165, file: !2152, discriminator: 0)
!2175 = !DILocation(line: 143, column: 20, scope: !2174, inlinedAt: !2172)
!2176 = !DILocation(line: 2511, column: 20, scope: !2165, inlinedAt: !2172)
!2177 = !DILocation(line: 2513, column: 21, scope: !2165, inlinedAt: !2172)
!2178 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17hba84009d2693d29eE", scope: !774, file: !2179, line: 84, type: !2012, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2180)
!2179 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "0813dabb6b7f78d2aa0efc755c3db05e")
!2180 = !{!2181, !2182, !2184}
!2181 = !DILocalVariable(name: "slice", arg: 1, scope: !2178, file: !2179, line: 84, type: !303)
!2182 = !DILocalVariable(name: "ptr", scope: !2183, file: !2179, line: 85, type: !207, align: 8)
!2183 = distinct !DILexicalBlock(scope: !2178, file: !2179, line: 85, column: 9)
!2184 = !DILocalVariable(name: "end", scope: !2185, file: !2179, line: 90, type: !207, align: 8)
!2185 = distinct !DILexicalBlock(scope: !2183, file: !2179, line: 90, column: 13)
!2186 = !DILocation(line: 84, column: 23, scope: !2178)
!2187 = !DILocation(line: 90, column: 17, scope: !2185)
!2188 = !DILocalVariable(name: "self", arg: 1, scope: !2189, file: !1883, line: 472, type: !303)
!2189 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he3dfe1b64eeed07bE", scope: !1093, file: !1883, line: 472, type: !2190, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2192)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!207, !303}
!2192 = !{!2188}
!2193 = !DILocation(line: 472, column: 25, scope: !2189, inlinedAt: !2194)
!2194 = distinct !DILocation(line: 85, column: 19, scope: !2178)
!2195 = !DILocation(line: 85, column: 19, scope: !2178)
!2196 = !DILocation(line: 85, column: 13, scope: !2183)
!2197 = !DILocation(line: 88, column: 21, scope: !2183)
!2198 = !DILocation(line: 88, column: 20, scope: !2183)
!2199 = !DILocation(line: 88, column: 13, scope: !2183)
!2200 = !DILocation(line: 91, column: 20, scope: !2183)
!2201 = !DILocation(line: 915, column: 29, scope: !200, inlinedAt: !2202)
!2202 = distinct !DILocation(line: 91, column: 76, scope: !2183)
!2203 = !DILocation(line: 915, column: 35, scope: !200, inlinedAt: !2202)
!2204 = !DILocation(line: 927, column: 13, scope: !200, inlinedAt: !2202)
!2205 = !DILocation(line: 91, column: 76, scope: !2183)
!2206 = !DILocalVariable(name: "self", arg: 1, scope: !2207, file: !201, line: 1109, type: !207)
!2207 = distinct !DISubprogram(name: "wrapping_byte_add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$17wrapping_byte_add17h438efc6ae68685d4E", scope: !202, file: !201, line: 1109, type: !205, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2208)
!2208 = !{!2206, !2209}
!2209 = !DILocalVariable(name: "count", arg: 2, scope: !2207, file: !201, line: 1109, type: !9)
!2210 = !DILocation(line: 1109, column: 36, scope: !2207, inlinedAt: !2211)
!2211 = distinct !DILocation(line: 91, column: 32, scope: !2183)
!2212 = !DILocation(line: 1109, column: 42, scope: !2207, inlinedAt: !2211)
!2213 = !DILocalVariable(name: "self", arg: 1, scope: !2214, file: !201, line: 58, type: !207)
!2214 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h401fec69102fd75aE", scope: !202, file: !201, line: 58, type: !2215, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1209, retainedNodes: !2217)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!1757, !207}
!2217 = !{!2213}
!2218 = !DILocation(line: 58, column: 26, scope: !2214, inlinedAt: !2219)
!2219 = distinct !DILocation(line: 1110, column: 9, scope: !2207, inlinedAt: !2211)
!2220 = !DILocalVariable(name: "self", arg: 1, scope: !2221, file: !201, line: 1088, type: !1757)
!2221 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h538892035f59917fE", scope: !202, file: !201, line: 1088, type: !2222, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !2224)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!1757, !1757, !9}
!2224 = !{!2220, !2225}
!2225 = !DILocalVariable(name: "count", arg: 2, scope: !2221, file: !201, line: 1088, type: !9)
!2226 = !DILocation(line: 1088, column: 31, scope: !2221, inlinedAt: !2227)
!2227 = distinct !DILocation(line: 1110, column: 9, scope: !2207, inlinedAt: !2211)
!2228 = !DILocation(line: 1088, column: 37, scope: !2221, inlinedAt: !2227)
!2229 = !DILocalVariable(name: "self", arg: 1, scope: !2230, file: !201, line: 540, type: !1757)
!2230 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17heaeac8bc0b3558d0E", scope: !202, file: !201, line: 540, type: !2231, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !2233)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!1757, !1757, !2076}
!2233 = !{!2229, !2234}
!2234 = !DILocalVariable(name: "count", arg: 2, scope: !2230, file: !201, line: 540, type: !2076)
!2235 = !DILocation(line: 540, column: 34, scope: !2230, inlinedAt: !2236)
!2236 = distinct !DILocation(line: 1092, column: 9, scope: !2221, inlinedAt: !2227)
!2237 = !DILocation(line: 540, column: 40, scope: !2230, inlinedAt: !2236)
!2238 = !DILocation(line: 545, column: 18, scope: !2230, inlinedAt: !2236)
!2239 = !DILocation(line: 1110, column: 9, scope: !2207, inlinedAt: !2211)
!2240 = !DILocation(line: 91, column: 32, scope: !2183)
!2241 = !DILocation(line: 93, column: 25, scope: !2185)
!2242 = !DILocation(line: 93, column: 64, scope: !2185)
!2243 = !DILocation(line: 93, column: 13, scope: !2185)
!2244 = !DILocation(line: 95, column: 6, scope: !2178)
!2245 = distinct !DISubprogram(name: "insert_head<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_head17h2a439797abf0e653E", scope: !1120, file: !2246, line: 88, type: !2247, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !2249)
!2246 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs", directory: "", checksumkind: CSK_MD5, checksum: "04c702f2e4bcf9ee2193f4def2665906")
!2247 = !DISubroutineType(types: !2248)
!2248 = !{null, !334, !1090}
!2249 = !{!2250, !2251, !2252, !2254, !2256, !2258, !2260}
!2250 = !DILocalVariable(name: "v", arg: 1, scope: !2245, file: !2246, line: 88, type: !334)
!2251 = !DILocalVariable(name: "is_less", arg: 2, scope: !2245, file: !2246, line: 88, type: !1090)
!2252 = !DILocalVariable(name: "arr_ptr", scope: !2253, file: !2246, line: 97, type: !261, align: 8)
!2253 = distinct !DILexicalBlock(scope: !2245, file: !2246, line: 97, column: 13)
!2254 = !DILocalVariable(name: "tmp", scope: !2255, file: !2246, line: 116, type: !625, align: 8)
!2255 = distinct !DILexicalBlock(scope: !2253, file: !2246, line: 116, column: 13)
!2256 = !DILocalVariable(name: "hole", scope: !2257, file: !2246, line: 128, type: !1119, align: 8)
!2257 = distinct !DILexicalBlock(scope: !2255, file: !2246, line: 128, column: 13)
!2258 = !DILocalVariable(name: "iter", scope: !2259, file: !2246, line: 131, type: !174, align: 8)
!2259 = distinct !DILexicalBlock(scope: !2257, file: !2246, line: 131, column: 13)
!2260 = !DILocalVariable(name: "i", scope: !2261, file: !2246, line: 131, type: !9, align: 8)
!2261 = distinct !DILexicalBlock(scope: !2259, file: !2246, line: 131, column: 33)
!2262 = !{!190, !1109}
!2263 = !DILocation(line: 88, column: 29, scope: !2245)
!2264 = !DILocation(line: 88, column: 42, scope: !2245)
!2265 = !DILocation(line: 116, column: 17, scope: !2255)
!2266 = !DILocation(line: 128, column: 17, scope: !2257)
!2267 = !DILocation(line: 131, column: 22, scope: !2259)
!2268 = !DILocation(line: 92, column: 5, scope: !2245)
!2269 = !DILocation(line: 96, column: 20, scope: !2245)
!2270 = !DILocation(line: 96, column: 40, scope: !2245)
!2271 = !DILocation(line: 96, column: 12, scope: !2245)
!2272 = !DILocation(line: 92, column: 19, scope: !2245)
!2273 = !DILocation(line: 141, column: 2, scope: !2245)
!2274 = !DILocation(line: 502, column: 29, scope: !1928, inlinedAt: !2275)
!2275 = distinct !DILocation(line: 97, column: 27, scope: !2245)
!2276 = !DILocation(line: 97, column: 27, scope: !2245)
!2277 = !DILocation(line: 97, column: 17, scope: !2253)
!2278 = !DILocation(line: 116, column: 46, scope: !2253)
!2279 = !DILocation(line: 70, column: 22, scope: !981, inlinedAt: !2280)
!2280 = distinct !DILocation(line: 116, column: 23, scope: !2253)
!2281 = !DILocation(line: 71, column: 9, scope: !981, inlinedAt: !2280)
!2282 = !DILocalVariable(name: "self", arg: 1, scope: !2283, file: !982, line: 152, type: !2287)
!2283 = distinct !DISubprogram(name: "deref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h24c39d3587abe659E", scope: !2284, file: !982, line: 152, type: !2285, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2288)
!2284 = !DINamespace(name: "{impl#2}", scope: !626)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!12, !2287}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !625, size: 64, align: 64, dwarfAddressSpace: 0)
!2288 = !{!2282}
!2289 = !DILocation(line: 152, column: 14, scope: !2283, inlinedAt: !2290)
!2290 = distinct !DILocation(line: 128, column: 50, scope: !2255)
!2291 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2292)
!2292 = distinct !DILocation(line: 128, column: 62, scope: !2255)
!2293 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2292)
!2294 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2292)
!2295 = !DILocation(line: 128, column: 28, scope: !2255)
!2296 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2297)
!2297 = distinct !DILocation(line: 129, column: 38, scope: !2257)
!2298 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2297)
!2299 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2297)
!2300 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2301)
!2301 = distinct !DILocation(line: 129, column: 54, scope: !2257)
!2302 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2301)
!2303 = !DILocation(line: 129, column: 13, scope: !2257)
!2304 = !DILocation(line: 131, column: 22, scope: !2257)
!2305 = !DILocation(line: 131, column: 13, scope: !2259)
!2306 = !DILocation(line: 139, column: 9, scope: !2255)
!2307 = !DILocation(line: 131, column: 17, scope: !2259)
!2308 = !DILocation(line: 131, column: 17, scope: !2261)
!2309 = !DILocation(line: 132, column: 30, scope: !2261)
!2310 = !DILocation(line: 132, column: 29, scope: !2261)
!2311 = !DILocation(line: 152, column: 14, scope: !2283, inlinedAt: !2312)
!2312 = distinct !DILocation(line: 132, column: 51, scope: !2261)
!2313 = !DILocation(line: 132, column: 21, scope: !2261)
!2314 = !DILocation(line: 132, column: 20, scope: !2261)
!2315 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2316)
!2316 = distinct !DILocation(line: 135, column: 42, scope: !2261)
!2317 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2316)
!2318 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2316)
!2319 = !DILocation(line: 135, column: 70, scope: !2261)
!2320 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2321)
!2321 = distinct !DILocation(line: 135, column: 58, scope: !2261)
!2322 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2321)
!2323 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2321)
!2324 = !DILocation(line: 135, column: 17, scope: !2261)
!2325 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2326)
!2326 = distinct !DILocation(line: 136, column: 29, scope: !2261)
!2327 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2326)
!2328 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2326)
!2329 = !DILocation(line: 136, column: 17, scope: !2261)
!2330 = distinct !DISubprogram(name: "insert_tail<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_tail17h015d8bc2b7089f6bE", scope: !1120, file: !2246, line: 35, type: !2247, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !2331)
!2331 = !{!2332, !2333, !2334, !2336, !2338, !2340, !2342, !2344, !2354, !2356}
!2332 = !DILocalVariable(name: "v", arg: 1, scope: !2330, file: !2246, line: 35, type: !334)
!2333 = !DILocalVariable(name: "is_less", arg: 2, scope: !2330, file: !2246, line: 35, type: !1090)
!2334 = !DILocalVariable(name: "arr_ptr", scope: !2335, file: !2246, line: 41, type: !261, align: 8)
!2335 = distinct !DILexicalBlock(scope: !2330, file: !2246, line: 41, column: 5)
!2336 = !DILocalVariable(name: "i", scope: !2337, file: !2246, line: 42, type: !9, align: 8)
!2337 = distinct !DILexicalBlock(scope: !2335, file: !2246, line: 42, column: 5)
!2338 = !DILocalVariable(name: "i_ptr", scope: !2339, file: !2246, line: 47, type: !261, align: 8)
!2339 = distinct !DILexicalBlock(scope: !2337, file: !2246, line: 47, column: 9)
!2340 = !DILocalVariable(name: "tmp", scope: !2341, file: !2246, line: 56, type: !625, align: 8)
!2341 = distinct !DILexicalBlock(scope: !2339, file: !2246, line: 56, column: 13)
!2342 = !DILocalVariable(name: "hole", scope: !2343, file: !2246, line: 67, type: !1119, align: 8)
!2343 = distinct !DILexicalBlock(scope: !2341, file: !2246, line: 67, column: 13)
!2344 = !DILocalVariable(name: "iter", scope: !2345, file: !2246, line: 71, type: !2346, align: 8)
!2345 = distinct !DILexicalBlock(scope: !2343, file: !2246, line: 71, column: 13)
!2346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !2347, file: !2, size: 128, align: 64, elements: !2350, templateParams: !2352, identifier: "8898c05361ca6404f15b43237b530292")
!2347 = !DINamespace(name: "rev", scope: !2348)
!2348 = !DINamespace(name: "adapters", scope: !2349)
!2349 = !DINamespace(name: "iter", scope: !142)
!2350 = !{!2351}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2346, file: !2, baseType: !174, size: 128, align: 64)
!2352 = !{!2353}
!2353 = !DITemplateTypeParameter(name: "T", type: !174)
!2354 = !DILocalVariable(name: "j", scope: !2355, file: !2246, line: 71, type: !9, align: 8)
!2355 = distinct !DILexicalBlock(scope: !2345, file: !2246, line: 71, column: 41)
!2356 = !DILocalVariable(name: "j_ptr", scope: !2357, file: !2246, line: 72, type: !261, align: 8)
!2357 = distinct !DILexicalBlock(scope: !2355, file: !2246, line: 72, column: 17)
!2358 = !DILocation(line: 35, column: 29, scope: !2330)
!2359 = !DILocation(line: 35, column: 42, scope: !2330)
!2360 = !DILocation(line: 56, column: 17, scope: !2341)
!2361 = !DILocation(line: 67, column: 17, scope: !2343)
!2362 = !DILocation(line: 71, column: 22, scope: !2345)
!2363 = !DILocation(line: 39, column: 5, scope: !2330)
!2364 = !DILocation(line: 502, column: 29, scope: !1928, inlinedAt: !2365)
!2365 = distinct !DILocation(line: 41, column: 19, scope: !2330)
!2366 = !DILocation(line: 41, column: 19, scope: !2330)
!2367 = !DILocation(line: 41, column: 9, scope: !2335)
!2368 = !DILocation(line: 42, column: 13, scope: !2335)
!2369 = !DILocation(line: 39, column: 19, scope: !2330)
!2370 = !DILocation(line: 42, column: 9, scope: !2337)
!2371 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2372)
!2372 = distinct !DILocation(line: 47, column: 21, scope: !2337)
!2373 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2372)
!2374 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2372)
!2375 = !DILocation(line: 47, column: 21, scope: !2337)
!2376 = !DILocation(line: 47, column: 13, scope: !2339)
!2377 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !2378)
!2378 = distinct !DILocation(line: 52, column: 31, scope: !2339)
!2379 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !2378)
!2380 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !2381)
!2381 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !2378)
!2382 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !2383)
!2383 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !2381)
!2384 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !2383)
!2385 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !2386)
!2386 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !2378)
!2387 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !2386)
!2388 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !2386)
!2389 = !DILocation(line: 52, column: 12, scope: !2339)
!2390 = !DILocation(line: 83, column: 2, scope: !2330)
!2391 = !DILocation(line: 56, column: 46, scope: !2339)
!2392 = !DILocation(line: 70, column: 22, scope: !981, inlinedAt: !2393)
!2393 = distinct !DILocation(line: 56, column: 23, scope: !2339)
!2394 = !DILocation(line: 71, column: 9, scope: !981, inlinedAt: !2393)
!2395 = !DILocation(line: 152, column: 14, scope: !2283, inlinedAt: !2396)
!2396 = distinct !DILocation(line: 67, column: 50, scope: !2341)
!2397 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !2398)
!2398 = distinct !DILocation(line: 67, column: 62, scope: !2341)
!2399 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !2398)
!2400 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !2401)
!2401 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !2398)
!2402 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !2403)
!2403 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !2401)
!2404 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !2403)
!2405 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !2406)
!2406 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !2398)
!2407 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !2406)
!2408 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !2406)
!2409 = !DILocation(line: 67, column: 28, scope: !2341)
!2410 = !DILocation(line: 68, column: 38, scope: !2343)
!2411 = !DILocation(line: 68, column: 13, scope: !2343)
!2412 = !DILocation(line: 71, column: 26, scope: !2343)
!2413 = !DILocation(line: 71, column: 22, scope: !2343)
!2414 = !DILocation(line: 71, column: 13, scope: !2345)
!2415 = !DILocation(line: 81, column: 9, scope: !2341)
!2416 = !DILocation(line: 71, column: 17, scope: !2345)
!2417 = !DILocation(line: 71, column: 17, scope: !2355)
!2418 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2419)
!2419 = distinct !DILocation(line: 72, column: 29, scope: !2355)
!2420 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2419)
!2421 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2419)
!2422 = !DILocation(line: 72, column: 29, scope: !2355)
!2423 = !DILocation(line: 72, column: 21, scope: !2357)
!2424 = !DILocation(line: 152, column: 14, scope: !2283, inlinedAt: !2425)
!2425 = distinct !DILocation(line: 73, column: 30, scope: !2357)
!2426 = !DILocation(line: 73, column: 21, scope: !2357)
!2427 = !DILocation(line: 73, column: 20, scope: !2357)
!2428 = !DILocation(line: 77, column: 49, scope: !2357)
!2429 = !DILocation(line: 77, column: 17, scope: !2357)
!2430 = !DILocation(line: 78, column: 17, scope: !2357)
!2431 = distinct !DISubprogram(name: "choose_pivot<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot17haaa6164e4366da71E", scope: !1120, file: !2246, line: 722, type: !2432, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !2434)
!2432 = !DISubroutineType(types: !2433)
!2433 = !{!1008, !334, !1090}
!2434 = !{!2435, !2436, !2437, !2439, !2441, !2443, !2445, !2447, !2456, !2462}
!2435 = !DILocalVariable(name: "v", arg: 1, scope: !2431, file: !2246, line: 722, type: !334)
!2436 = !DILocalVariable(name: "is_less", arg: 2, scope: !2431, file: !2246, line: 722, type: !1090)
!2437 = !DILocalVariable(name: "len", scope: !2438, file: !2246, line: 732, type: !9, align: 8)
!2438 = distinct !DILexicalBlock(scope: !2431, file: !2246, line: 732, column: 5)
!2439 = !DILocalVariable(name: "a", scope: !2440, file: !2246, line: 735, type: !9, align: 8)
!2440 = distinct !DILexicalBlock(scope: !2438, file: !2246, line: 735, column: 5)
!2441 = !DILocalVariable(name: "b", scope: !2442, file: !2246, line: 736, type: !9, align: 8)
!2442 = distinct !DILexicalBlock(scope: !2440, file: !2246, line: 736, column: 5)
!2443 = !DILocalVariable(name: "c", scope: !2444, file: !2246, line: 737, type: !9, align: 8)
!2444 = distinct !DILexicalBlock(scope: !2442, file: !2246, line: 737, column: 5)
!2445 = !DILocalVariable(name: "swaps", scope: !2446, file: !2246, line: 740, type: !9, align: 8)
!2446 = distinct !DILexicalBlock(scope: !2444, file: !2246, line: 740, column: 5)
!2447 = !DILocalVariable(name: "sort2", scope: !2448, file: !2246, line: 750, type: !2449, align: 8)
!2448 = distinct !DILexicalBlock(scope: !2446, file: !2246, line: 750, column: 9)
!2449 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2450, file: !2, size: 256, align: 64, elements: !2451, templateParams: !24, identifier: "fbdcbadb656f89049a038c7c8943e0a6")
!2450 = !DINamespace(name: "choose_pivot", scope: !1120)
!2451 = !{!2452, !2453, !2454}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !2449, file: !2, baseType: !1090, size: 64, align: 64, offset: 128)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__v", scope: !2449, file: !2, baseType: !303, size: 128, align: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__swaps", scope: !2449, file: !2, baseType: !2455, size: 64, align: 64, offset: 192)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2456 = !DILocalVariable(name: "sort3", scope: !2457, file: !2246, line: 758, type: !2458, align: 8)
!2457 = distinct !DILexicalBlock(scope: !2448, file: !2246, line: 758, column: 9)
!2458 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2450, file: !2, size: 64, align: 64, elements: !2459, templateParams: !24, identifier: "cfa9dd3373e47b9a2fd6bcdb5be330e2")
!2459 = !{!2460}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort2", scope: !2458, file: !2, baseType: !2461, size: 64, align: 64)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2449, size: 64, align: 64, dwarfAddressSpace: 0)
!2462 = !DILocalVariable(name: "sort_adjacent", scope: !2463, file: !2246, line: 766, type: !2464, align: 8)
!2463 = distinct !DILexicalBlock(scope: !2457, file: !2246, line: 766, column: 13)
!2464 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2450, file: !2, size: 64, align: 64, elements: !2465, templateParams: !24, identifier: "84ebdbb3fba64a9cebe506745423c3e1")
!2465 = !{!2466}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort3", scope: !2464, file: !2, baseType: !2467, size: 64, align: 64)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2458, size: 64, align: 64, dwarfAddressSpace: 0)
!2468 = !DILocation(line: 722, column: 23, scope: !2431)
!2469 = !DILocation(line: 722, column: 36, scope: !2431)
!2470 = !DILocation(line: 735, column: 9, scope: !2440)
!2471 = !DILocation(line: 736, column: 9, scope: !2442)
!2472 = !DILocation(line: 737, column: 9, scope: !2444)
!2473 = !DILocation(line: 740, column: 9, scope: !2446)
!2474 = !DILocation(line: 750, column: 13, scope: !2448)
!2475 = !DILocation(line: 758, column: 13, scope: !2457)
!2476 = !DILocation(line: 766, column: 17, scope: !2463)
!2477 = !DILocation(line: 732, column: 15, scope: !2431)
!2478 = !DILocation(line: 732, column: 9, scope: !2438)
!2479 = !DILocation(line: 735, column: 17, scope: !2438)
!2480 = !DILocation(line: 736, column: 17, scope: !2440)
!2481 = !DILocation(line: 737, column: 17, scope: !2442)
!2482 = !DILocation(line: 740, column: 21, scope: !2444)
!2483 = !DILocation(line: 742, column: 8, scope: !2446)
!2484 = !DILocation(line: 781, column: 8, scope: !2446)
!2485 = !DILocation(line: 750, column: 25, scope: !2446)
!2486 = !DILocation(line: 758, column: 25, scope: !2448)
!2487 = !DILocation(line: 764, column: 12, scope: !2457)
!2488 = !DILocation(line: 778, column: 9, scope: !2457)
!2489 = !DILocation(line: 766, column: 37, scope: !2457)
!2490 = !DILocation(line: 772, column: 13, scope: !2463)
!2491 = !DILocation(line: 773, column: 13, scope: !2463)
!2492 = !DILocation(line: 774, column: 13, scope: !2463)
!2493 = !DILocation(line: 786, column: 9, scope: !2446)
!2494 = !DILocation(line: 787, column: 10, scope: !2446)
!2495 = !DILocation(line: 782, column: 10, scope: !2446)
!2496 = !DILocation(line: 782, column: 13, scope: !2446)
!2497 = !DILocation(line: 782, column: 9, scope: !2446)
!2498 = !DILocation(line: 781, column: 5, scope: !2446)
!2499 = !DILocation(line: 789, column: 2, scope: !2431)
!2500 = !DILocation(line: 787, column: 20, scope: !2446)
!2501 = !DILocation(line: 787, column: 9, scope: !2446)
!2502 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h30b9f742c3f6ac23E", scope: !2450, file: !2246, line: 750, type: !2503, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !2505)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{null, !2461, !2455, !2455}
!2505 = !{!2506, !2507, !2508, !2509, !2510}
!2506 = !DILocalVariable(name: "a", arg: 2, scope: !2502, file: !2246, line: 750, type: !2455)
!2507 = !DILocalVariable(name: "b", arg: 3, scope: !2502, file: !2246, line: 750, type: !2455)
!2508 = !DILocalVariable(name: "is_less", scope: !2502, file: !2246, line: 722, type: !1091, align: 8)
!2509 = !DILocalVariable(name: "v", scope: !2502, file: !2246, line: 722, type: !13, align: 8)
!2510 = !DILocalVariable(name: "swaps", scope: !2502, file: !2246, line: 740, type: !9, align: 8)
!2511 = !DILocation(line: 722, column: 36, scope: !2502)
!2512 = !DILocation(line: 722, column: 23, scope: !2502)
!2513 = !DILocation(line: 740, column: 13, scope: !2502)
!2514 = !DILocation(line: 750, column: 26, scope: !2502)
!2515 = !DILocation(line: 750, column: 41, scope: !2502)
!2516 = !DILocation(line: 751, column: 16, scope: !2502)
!2517 = !DILocation(line: 751, column: 24, scope: !2502)
!2518 = !DILocation(line: 751, column: 40, scope: !2502)
!2519 = !DILocation(line: 751, column: 45, scope: !2502)
!2520 = !DILocation(line: 751, column: 61, scope: !2502)
!2521 = !DILocation(line: 755, column: 10, scope: !2502)
!2522 = !DILocation(line: 752, column: 17, scope: !2502)
!2523 = !DILocation(line: 753, column: 17, scope: !2502)
!2524 = !DILocation(line: 751, column: 13, scope: !2502)
!2525 = distinct !DISubprogram(name: "{closure#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h6b50692fa5d6cf94E", scope: !2450, file: !2246, line: 766, type: !2526, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !2529)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{null, !2528, !2455}
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2464, size: 64, align: 64, dwarfAddressSpace: 0)
!2529 = !{!2530, !2531, !2532}
!2530 = !DILocalVariable(name: "a", arg: 2, scope: !2525, file: !2246, line: 766, type: !2455)
!2531 = !DILocalVariable(name: "sort3", scope: !2525, file: !2246, line: 758, type: !2458, align: 8)
!2532 = !DILocalVariable(name: "tmp", scope: !2533, file: !2246, line: 767, type: !9, align: 8)
!2533 = distinct !DILexicalBlock(scope: !2525, file: !2246, line: 767, column: 17)
!2534 = !DILocation(line: 758, column: 17, scope: !2525)
!2535 = !DILocation(line: 766, column: 38, scope: !2525)
!2536 = !DILocation(line: 767, column: 27, scope: !2525)
!2537 = !DILocation(line: 767, column: 21, scope: !2533)
!2538 = !DILocation(line: 768, column: 17, scope: !2533)
!2539 = !DILocation(line: 768, column: 28, scope: !2533)
!2540 = !DILocation(line: 768, column: 47, scope: !2533)
!2541 = !DILocation(line: 769, column: 14, scope: !2525)
!2542 = distinct !DISubprogram(name: "{closure#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hbe335321fc506100E", scope: !2450, file: !2246, line: 758, type: !2543, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !2545)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{null, !2467, !2455, !2455, !2455}
!2545 = !{!2546, !2547, !2548, !2549}
!2546 = !DILocalVariable(name: "a", arg: 2, scope: !2542, file: !2246, line: 758, type: !2455)
!2547 = !DILocalVariable(name: "b", arg: 3, scope: !2542, file: !2246, line: 758, type: !2455)
!2548 = !DILocalVariable(name: "c", arg: 4, scope: !2542, file: !2246, line: 758, type: !2455)
!2549 = !DILocalVariable(name: "sort2", scope: !2542, file: !2246, line: 750, type: !2449, align: 8)
!2550 = !DILocation(line: 750, column: 17, scope: !2542)
!2551 = !DILocation(line: 758, column: 26, scope: !2542)
!2552 = !DILocation(line: 758, column: 41, scope: !2542)
!2553 = !DILocation(line: 758, column: 56, scope: !2542)
!2554 = !DILocation(line: 759, column: 13, scope: !2542)
!2555 = !DILocation(line: 760, column: 13, scope: !2542)
!2556 = !DILocation(line: 761, column: 13, scope: !2542)
!2557 = !DILocation(line: 762, column: 10, scope: !2542)
!2558 = distinct !DISubprogram(name: "break_patterns<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns17h03b957f412d2760fE", scope: !1120, file: !2246, line: 673, type: !2042, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2559)
!2559 = !{!2560, !2561, !2563, !2565, !2571, !2573, !2575, !2577, !2579}
!2560 = !DILocalVariable(name: "v", arg: 1, scope: !2558, file: !2246, line: 673, type: !334)
!2561 = !DILocalVariable(name: "len", scope: !2562, file: !2246, line: 674, type: !9, align: 8)
!2562 = distinct !DILexicalBlock(scope: !2558, file: !2246, line: 674, column: 5)
!2563 = !DILocalVariable(name: "seed", scope: !2564, file: !2246, line: 676, type: !9, align: 8)
!2564 = distinct !DILexicalBlock(scope: !2562, file: !2246, line: 676, column: 9)
!2565 = !DILocalVariable(name: "gen_usize", scope: !2566, file: !2246, line: 677, type: !2567, align: 8)
!2566 = distinct !DILexicalBlock(scope: !2564, file: !2246, line: 677, column: 9)
!2567 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !2568, file: !2, size: 64, align: 64, elements: !2569, templateParams: !24, identifier: "56d53467329640c8a7a360c471c915df")
!2568 = !DINamespace(name: "break_patterns", scope: !1120)
!2569 = !{!2570}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__seed", scope: !2567, file: !2, baseType: !2455, size: 64, align: 64)
!2571 = !DILocalVariable(name: "modulus", scope: !2572, file: !2246, line: 698, type: !9, align: 8)
!2572 = distinct !DILexicalBlock(scope: !2566, file: !2246, line: 698, column: 9)
!2573 = !DILocalVariable(name: "pos", scope: !2574, file: !2246, line: 701, type: !9, align: 8)
!2574 = distinct !DILexicalBlock(scope: !2572, file: !2246, line: 701, column: 9)
!2575 = !DILocalVariable(name: "iter", scope: !2576, file: !2246, line: 703, type: !174, align: 8)
!2576 = distinct !DILexicalBlock(scope: !2574, file: !2246, line: 703, column: 9)
!2577 = !DILocalVariable(name: "i", scope: !2578, file: !2246, line: 703, type: !9, align: 8)
!2578 = distinct !DILexicalBlock(scope: !2576, file: !2246, line: 703, column: 23)
!2579 = !DILocalVariable(name: "other", scope: !2580, file: !2246, line: 707, type: !9, align: 8)
!2580 = distinct !DILexicalBlock(scope: !2578, file: !2246, line: 707, column: 13)
!2581 = !DILocation(line: 673, column: 22, scope: !2558)
!2582 = !DILocation(line: 676, column: 13, scope: !2564)
!2583 = !DILocation(line: 677, column: 13, scope: !2566)
!2584 = !DILocation(line: 703, column: 18, scope: !2576)
!2585 = !DILocation(line: 707, column: 17, scope: !2580)
!2586 = !DILocation(line: 674, column: 15, scope: !2558)
!2587 = !DILocation(line: 674, column: 9, scope: !2562)
!2588 = !DILocation(line: 675, column: 8, scope: !2562)
!2589 = !DILocation(line: 717, column: 2, scope: !2558)
!2590 = !DILocation(line: 676, column: 24, scope: !2562)
!2591 = !DILocation(line: 677, column: 29, scope: !2564)
!2592 = !DILocation(line: 698, column: 23, scope: !2566)
!2593 = !DILocation(line: 698, column: 13, scope: !2572)
!2594 = !DILocation(line: 701, column: 19, scope: !2572)
!2595 = !DILocation(line: 701, column: 13, scope: !2574)
!2596 = !DILocation(line: 703, column: 18, scope: !2574)
!2597 = !DILocation(line: 703, column: 9, scope: !2576)
!2598 = !DILocation(line: 703, column: 13, scope: !2576)
!2599 = !DILocation(line: 703, column: 13, scope: !2578)
!2600 = !DILocation(line: 707, column: 29, scope: !2578)
!2601 = !DILocation(line: 707, column: 43, scope: !2578)
!2602 = !DILocation(line: 710, column: 16, scope: !2580)
!2603 = !DILocation(line: 714, column: 20, scope: !2580)
!2604 = !DILocation(line: 711, column: 17, scope: !2580)
!2605 = !DILocation(line: 710, column: 13, scope: !2580)
!2606 = !DILocation(line: 714, column: 33, scope: !2580)
!2607 = !DILocation(line: 714, column: 13, scope: !2580)
!2608 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h9a1849ac52b1accbE", scope: !2568, file: !2246, line: 677, type: !2609, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2612)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!9, !2611}
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::break_patterns::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !2567, size: 64, align: 64, dwarfAddressSpace: 0)
!2612 = !{!2613, !2614, !2616}
!2613 = !DILocalVariable(name: "seed", scope: !2608, file: !2246, line: 676, type: !9, align: 8)
!2614 = !DILocalVariable(name: "r", scope: !2615, file: !2246, line: 680, type: !27, align: 4)
!2615 = distinct !DILexicalBlock(scope: !2608, file: !2246, line: 680, column: 17)
!2616 = !DILocalVariable(name: "r", scope: !2617, file: !2246, line: 687, type: !22, align: 8)
!2617 = distinct !DILexicalBlock(scope: !2608, file: !2246, line: 687, column: 17)
!2618 = !DILocation(line: 676, column: 17, scope: !2608)
!2619 = !DILocation(line: 680, column: 21, scope: !2615)
!2620 = !DILocation(line: 687, column: 21, scope: !2617)
!2621 = !DILocation(line: 679, column: 16, scope: !2608)
!2622 = !DILocation(line: 687, column: 29, scope: !2608)
!2623 = !DILocation(line: 688, column: 22, scope: !2617)
!2624 = !DILocation(line: 688, column: 17, scope: !2617)
!2625 = !DILocation(line: 689, column: 22, scope: !2617)
!2626 = !DILocation(line: 689, column: 17, scope: !2617)
!2627 = !DILocation(line: 690, column: 22, scope: !2617)
!2628 = !DILocation(line: 690, column: 17, scope: !2617)
!2629 = !DILocation(line: 691, column: 24, scope: !2617)
!2630 = !DILocation(line: 691, column: 17, scope: !2617)
!2631 = !DILocation(line: 692, column: 17, scope: !2617)
!2632 = !DILocation(line: 679, column: 13, scope: !2608)
!2633 = !DILocation(line: 680, column: 29, scope: !2608)
!2634 = !DILocation(line: 681, column: 22, scope: !2615)
!2635 = !DILocation(line: 681, column: 17, scope: !2615)
!2636 = !DILocation(line: 682, column: 22, scope: !2615)
!2637 = !DILocation(line: 682, column: 17, scope: !2615)
!2638 = !DILocation(line: 683, column: 22, scope: !2615)
!2639 = !DILocation(line: 683, column: 17, scope: !2615)
!2640 = !DILocation(line: 684, column: 24, scope: !2615)
!2641 = !DILocation(line: 684, column: 17, scope: !2615)
!2642 = !DILocation(line: 685, column: 17, scope: !2615)
!2643 = !DILocation(line: 694, column: 10, scope: !2608)
!2644 = distinct !DISubprogram(name: "partition_equal<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort15partition_equal17hb3338f23996c1155E", scope: !1120, file: !2246, line: 615, type: !2645, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !2647)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{!9, !334, !9, !1090}
!2647 = !{!2648, !2649, !2650, !2651, !2653, !2654, !2656, !2658, !2660, !2662, !2664, !2666}
!2648 = !DILocalVariable(name: "v", arg: 1, scope: !2644, file: !2246, line: 615, type: !334)
!2649 = !DILocalVariable(name: "pivot", arg: 2, scope: !2644, file: !2246, line: 615, type: !9)
!2650 = !DILocalVariable(name: "is_less", arg: 3, scope: !2644, file: !2246, line: 615, type: !1090)
!2651 = !DILocalVariable(name: "pivot", scope: !2652, file: !2246, line: 621, type: !334, align: 8)
!2652 = distinct !DILexicalBlock(scope: !2644, file: !2246, line: 621, column: 5)
!2653 = !DILocalVariable(name: "v", scope: !2652, file: !2246, line: 621, type: !334, align: 8)
!2654 = !DILocalVariable(name: "pivot", scope: !2655, file: !2246, line: 622, type: !945, align: 8)
!2655 = distinct !DILexicalBlock(scope: !2652, file: !2246, line: 622, column: 5)
!2656 = !DILocalVariable(name: "tmp", scope: !2657, file: !2246, line: 627, type: !625, align: 8)
!2657 = distinct !DILexicalBlock(scope: !2655, file: !2246, line: 627, column: 5)
!2658 = !DILocalVariable(name: "_pivot_guard", scope: !2659, file: !2246, line: 628, type: !1119, align: 8)
!2659 = distinct !DILexicalBlock(scope: !2657, file: !2246, line: 628, column: 5)
!2660 = !DILocalVariable(name: "pivot", scope: !2661, file: !2246, line: 629, type: !12, align: 8)
!2661 = distinct !DILexicalBlock(scope: !2659, file: !2246, line: 629, column: 5)
!2662 = !DILocalVariable(name: "l", scope: !2663, file: !2246, line: 632, type: !9, align: 8)
!2663 = distinct !DILexicalBlock(scope: !2661, file: !2246, line: 632, column: 5)
!2664 = !DILocalVariable(name: "r", scope: !2665, file: !2246, line: 633, type: !9, align: 8)
!2665 = distinct !DILexicalBlock(scope: !2663, file: !2246, line: 633, column: 5)
!2666 = !DILocalVariable(name: "ptr", scope: !2667, file: !2246, line: 657, type: !261, align: 8)
!2667 = distinct !DILexicalBlock(scope: !2665, file: !2246, line: 657, column: 13)
!2668 = !DILocation(line: 615, column: 26, scope: !2644)
!2669 = !DILocation(line: 615, column: 39, scope: !2644)
!2670 = !DILocation(line: 615, column: 53, scope: !2644)
!2671 = !DILocation(line: 627, column: 9, scope: !2657)
!2672 = !DILocation(line: 628, column: 9, scope: !2659)
!2673 = !DILocation(line: 632, column: 9, scope: !2663)
!2674 = !DILocation(line: 633, column: 9, scope: !2665)
!2675 = !DILocation(line: 620, column: 5, scope: !2644)
!2676 = !DILocation(line: 621, column: 22, scope: !2644)
!2677 = !DILocation(line: 621, column: 10, scope: !2644)
!2678 = !DILocation(line: 621, column: 10, scope: !2652)
!2679 = !DILocation(line: 621, column: 17, scope: !2644)
!2680 = !DILocation(line: 621, column: 17, scope: !2652)
!2681 = !DILocation(line: 622, column: 22, scope: !2652)
!2682 = !DILocation(line: 622, column: 17, scope: !2652)
!2683 = !DILocation(line: 622, column: 9, scope: !2655)
!2684 = !DILocation(line: 627, column: 47, scope: !2655)
!2685 = !DILocation(line: 70, column: 22, scope: !981, inlinedAt: !2686)
!2686 = distinct !DILocation(line: 627, column: 15, scope: !2655)
!2687 = !DILocation(line: 71, column: 9, scope: !981, inlinedAt: !2686)
!2688 = !DILocation(line: 152, column: 14, scope: !2283, inlinedAt: !2689)
!2689 = distinct !DILocation(line: 628, column: 46, scope: !2657)
!2690 = !DILocation(line: 628, column: 24, scope: !2657)
!2691 = !DILocation(line: 152, column: 14, scope: !2283, inlinedAt: !2692)
!2692 = distinct !DILocation(line: 629, column: 18, scope: !2659)
!2693 = !DILocation(line: 629, column: 17, scope: !2659)
!2694 = !DILocation(line: 629, column: 9, scope: !2661)
!2695 = !DILocation(line: 632, column: 17, scope: !2661)
!2696 = !DILocation(line: 633, column: 17, scope: !2663)
!2697 = !DILocation(line: 634, column: 5, scope: !2665)
!2698 = !DILocation(line: 641, column: 19, scope: !2665)
!2699 = !DILocation(line: 641, column: 23, scope: !2665)
!2700 = !DILocation(line: 641, column: 60, scope: !2665)
!2701 = !DILocation(line: 641, column: 44, scope: !2665)
!2702 = !DILocation(line: 641, column: 29, scope: !2665)
!2703 = !DILocation(line: 641, column: 28, scope: !2665)
!2704 = !DILocation(line: 646, column: 19, scope: !2665)
!2705 = !DILocation(line: 646, column: 23, scope: !2665)
!2706 = !DILocation(line: 642, column: 17, scope: !2665)
!2707 = !DILocation(line: 641, column: 13, scope: !2665)
!2708 = !DILocation(line: 646, column: 59, scope: !2665)
!2709 = !DILocation(line: 646, column: 43, scope: !2665)
!2710 = !DILocation(line: 646, column: 28, scope: !2665)
!2711 = !DILocation(line: 651, column: 16, scope: !2665)
!2712 = !DILocation(line: 651, column: 21, scope: !2665)
!2713 = !DILocation(line: 647, column: 17, scope: !2665)
!2714 = !DILocation(line: 646, column: 13, scope: !2665)
!2715 = !DILocation(line: 656, column: 13, scope: !2665)
!2716 = !DILocation(line: 664, column: 5, scope: !2665)
!2717 = !DILocation(line: 668, column: 1, scope: !2657)
!2718 = !DILocation(line: 668, column: 2, scope: !2644)
!2719 = !DILocation(line: 502, column: 29, scope: !1928, inlinedAt: !2720)
!2720 = distinct !DILocation(line: 657, column: 23, scope: !2665)
!2721 = !DILocation(line: 657, column: 23, scope: !2665)
!2722 = !DILocation(line: 657, column: 17, scope: !2667)
!2723 = !DILocation(line: 658, column: 31, scope: !2667)
!2724 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2725)
!2725 = distinct !DILocation(line: 658, column: 23, scope: !2667)
!2726 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2725)
!2727 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2725)
!2728 = !DILocation(line: 658, column: 43, scope: !2667)
!2729 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2730)
!2730 = distinct !DILocation(line: 658, column: 35, scope: !2667)
!2731 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2730)
!2732 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2730)
!2733 = !DILocation(line: 658, column: 13, scope: !2667)
!2734 = !DILocation(line: 659, column: 13, scope: !2667)
!2735 = distinct !DISubprogram(name: "partition_in_blocks<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort19partition_in_blocks17h802e2d36a30c7fe0E", scope: !1120, file: !2246, line: 302, type: !2736, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !2738)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!9, !334, !12, !1090}
!2738 = !{!2739, !2740, !2741, !2742, !2744, !2746, !2748, !2750, !2762, !2764, !2766, !2768, !2770, !2772, !2774, !2776, !2778, !2780, !2782, !2784, !2786, !2788, !2790, !2792, !2794, !2799, !2800, !2803, !2806, !2807}
!2739 = !DILocalVariable(name: "v", arg: 1, scope: !2735, file: !2246, line: 302, type: !334)
!2740 = !DILocalVariable(name: "pivot", arg: 2, scope: !2735, file: !2246, line: 302, type: !12)
!2741 = !DILocalVariable(name: "is_less", arg: 3, scope: !2735, file: !2246, line: 302, type: !1090)
!2742 = !DILocalVariable(name: "l", scope: !2743, file: !2246, line: 323, type: !261, align: 8)
!2743 = distinct !DILexicalBlock(scope: !2735, file: !2246, line: 323, column: 5)
!2744 = !DILocalVariable(name: "block_l", scope: !2745, file: !2246, line: 324, type: !9, align: 8)
!2745 = distinct !DILexicalBlock(scope: !2743, file: !2246, line: 324, column: 5)
!2746 = !DILocalVariable(name: "start_l", scope: !2747, file: !2246, line: 325, type: !1144, align: 8)
!2747 = distinct !DILexicalBlock(scope: !2745, file: !2246, line: 325, column: 5)
!2748 = !DILocalVariable(name: "end_l", scope: !2749, file: !2246, line: 326, type: !1144, align: 8)
!2749 = distinct !DILexicalBlock(scope: !2747, file: !2246, line: 326, column: 5)
!2750 = !DILocalVariable(name: "offsets_l", scope: !2751, file: !2246, line: 327, type: !2752, align: 1)
!2751 = distinct !DILexicalBlock(scope: !2749, file: !2246, line: 327, column: 5)
!2752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2753, size: 1024, align: 8, elements: !2760)
!2753 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !620, file: !2, size: 8, align: 8, elements: !2754, templateParams: !1570, identifier: "b98413d126923a4c2fd7fb7d278b60bf")
!2754 = !{!2755, !2756}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2753, file: !2, baseType: !7, align: 8)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2753, file: !2, baseType: !2757, size: 8, align: 8)
!2757 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !626, file: !2, size: 8, align: 8, elements: !2758, templateParams: !1570, identifier: "ca192c0e4ab0ecab6ef1001522039812")
!2758 = !{!2759}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2757, file: !2, baseType: !123, size: 8, align: 8)
!2760 = !{!2761}
!2761 = !DISubrange(count: 128, lowerBound: 0)
!2762 = !DILocalVariable(name: "r", scope: !2763, file: !2246, line: 331, type: !261, align: 8)
!2763 = distinct !DILexicalBlock(scope: !2751, file: !2246, line: 331, column: 5)
!2764 = !DILocalVariable(name: "block_r", scope: !2765, file: !2246, line: 332, type: !9, align: 8)
!2765 = distinct !DILexicalBlock(scope: !2763, file: !2246, line: 332, column: 5)
!2766 = !DILocalVariable(name: "start_r", scope: !2767, file: !2246, line: 333, type: !1144, align: 8)
!2767 = distinct !DILexicalBlock(scope: !2765, file: !2246, line: 333, column: 5)
!2768 = !DILocalVariable(name: "end_r", scope: !2769, file: !2246, line: 334, type: !1144, align: 8)
!2769 = distinct !DILexicalBlock(scope: !2767, file: !2246, line: 334, column: 5)
!2770 = !DILocalVariable(name: "offsets_r", scope: !2771, file: !2246, line: 335, type: !2752, align: 1)
!2771 = distinct !DILexicalBlock(scope: !2769, file: !2246, line: 335, column: 5)
!2772 = !DILocalVariable(name: "is_done", scope: !2773, file: !2246, line: 351, type: !401, align: 1)
!2773 = distinct !DILexicalBlock(scope: !2771, file: !2246, line: 351, column: 9)
!2774 = !DILocalVariable(name: "rem", scope: !2775, file: !2246, line: 355, type: !9, align: 8)
!2775 = distinct !DILexicalBlock(scope: !2773, file: !2246, line: 355, column: 13)
!2776 = !DILocalVariable(name: "elem", scope: !2777, file: !2246, line: 381, type: !261, align: 8)
!2777 = distinct !DILexicalBlock(scope: !2773, file: !2246, line: 381, column: 13)
!2778 = !DILocalVariable(name: "iter", scope: !2779, file: !2246, line: 383, type: !174, align: 8)
!2779 = distinct !DILexicalBlock(scope: !2777, file: !2246, line: 383, column: 13)
!2780 = !DILocalVariable(name: "i", scope: !2781, file: !2246, line: 383, type: !9, align: 8)
!2781 = distinct !DILexicalBlock(scope: !2779, file: !2246, line: 383, column: 33)
!2782 = !DILocalVariable(name: "elem", scope: !2783, file: !2246, line: 407, type: !261, align: 8)
!2783 = distinct !DILexicalBlock(scope: !2773, file: !2246, line: 407, column: 13)
!2784 = !DILocalVariable(name: "iter", scope: !2785, file: !2246, line: 409, type: !174, align: 8)
!2785 = distinct !DILexicalBlock(scope: !2783, file: !2246, line: 409, column: 13)
!2786 = !DILocalVariable(name: "i", scope: !2787, file: !2246, line: 409, type: !9, align: 8)
!2787 = distinct !DILexicalBlock(scope: !2785, file: !2246, line: 409, column: 33)
!2788 = !DILocalVariable(name: "count", scope: !2789, file: !2246, line: 431, type: !9, align: 8)
!2789 = distinct !DILexicalBlock(scope: !2773, file: !2246, line: 431, column: 9)
!2790 = !DILocalVariable(name: "tmp", scope: !2791, file: !2246, line: 465, type: !13, align: 8)
!2791 = distinct !DILexicalBlock(scope: !2789, file: !2246, line: 465, column: 17)
!2792 = !DILocalVariable(name: "iter", scope: !2793, file: !2246, line: 468, type: !174, align: 8)
!2793 = distinct !DILexicalBlock(scope: !2791, file: !2246, line: 468, column: 17)
!2794 = !DILocalVariable(name: "left_val", scope: !2795, file: !2246, line: 514, type: !2798, align: 8)
!2795 = !DILexicalBlockFile(scope: !2796, file: !2246, discriminator: 0)
!2796 = distinct !DILexicalBlock(scope: !2771, file: !2797, line: 39, column: 13)
!2797 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "91316768fcef075409117716556d21a0")
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2799 = !DILocalVariable(name: "right_val", scope: !2795, file: !2246, line: 514, type: !2798, align: 8)
!2800 = !DILocalVariable(name: "kind", scope: !2801, file: !2246, line: 514, type: !155, align: 1)
!2801 = !DILexicalBlockFile(scope: !2802, file: !2246, discriminator: 0)
!2802 = distinct !DILexicalBlock(scope: !2796, file: !2797, line: 41, column: 21)
!2803 = !DILocalVariable(name: "left_val", scope: !2804, file: !2246, line: 537, type: !2798, align: 8)
!2804 = !DILexicalBlockFile(scope: !2805, file: !2246, discriminator: 0)
!2805 = distinct !DILexicalBlock(scope: !2771, file: !2797, line: 39, column: 13)
!2806 = !DILocalVariable(name: "right_val", scope: !2804, file: !2246, line: 537, type: !2798, align: 8)
!2807 = !DILocalVariable(name: "kind", scope: !2808, file: !2246, line: 537, type: !155, align: 1)
!2808 = !DILexicalBlockFile(scope: !2809, file: !2246, discriminator: 0)
!2809 = distinct !DILexicalBlock(scope: !2805, file: !2797, line: 41, column: 21)
!2810 = !DILocation(line: 302, column: 30, scope: !2735)
!2811 = !DILocation(line: 302, column: 43, scope: !2735)
!2812 = !DILocation(line: 302, column: 54, scope: !2735)
!2813 = !DILocation(line: 323, column: 9, scope: !2743)
!2814 = !DILocation(line: 324, column: 9, scope: !2745)
!2815 = !DILocation(line: 325, column: 9, scope: !2747)
!2816 = !DILocation(line: 326, column: 9, scope: !2749)
!2817 = !DILocation(line: 327, column: 9, scope: !2751)
!2818 = !DILocation(line: 331, column: 9, scope: !2763)
!2819 = !DILocation(line: 332, column: 9, scope: !2765)
!2820 = !DILocation(line: 333, column: 9, scope: !2767)
!2821 = !DILocation(line: 334, column: 9, scope: !2769)
!2822 = !DILocation(line: 335, column: 9, scope: !2771)
!2823 = !DILocation(line: 355, column: 17, scope: !2775)
!2824 = !DILocation(line: 381, column: 17, scope: !2777)
!2825 = !DILocation(line: 383, column: 22, scope: !2779)
!2826 = !DILocation(line: 407, column: 17, scope: !2783)
!2827 = !DILocation(line: 409, column: 22, scope: !2785)
!2828 = !DILocation(line: 465, column: 21, scope: !2791)
!2829 = !DILocation(line: 468, column: 26, scope: !2793)
!2830 = !DILocation(line: 514, column: 9, scope: !2801)
!2831 = !DILocation(line: 537, column: 9, scope: !2808)
!2832 = !DILocation(line: 502, column: 29, scope: !1928, inlinedAt: !2833)
!2833 = distinct !DILocation(line: 323, column: 17, scope: !2735)
!2834 = !DILocation(line: 323, column: 17, scope: !2735)
!2835 = !DILocation(line: 324, column: 23, scope: !2743)
!2836 = !DILocalVariable(name: "addr", arg: 1, scope: !2837, file: !1115, line: 593, type: !9)
!2837 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h974425a2af3b76b3E", scope: !204, file: !1115, line: 593, type: !2838, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1691, retainedNodes: !2840)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!1260, !9}
!2840 = !{!2836}
!2841 = !DILocation(line: 593, column: 29, scope: !2837, inlinedAt: !2842)
!2842 = distinct !DILocation(line: 537, column: 24, scope: !2843, inlinedAt: !2846)
!2843 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h4acc625d883eacebE", scope: !204, file: !1115, line: 536, type: !2844, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !24)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!1144}
!2846 = distinct !DILocation(line: 325, column: 23, scope: !2745)
!2847 = !DILocation(line: 537, column: 5, scope: !2843, inlinedAt: !2846)
!2848 = !DILocation(line: 325, column: 23, scope: !2745)
!2849 = !DILocation(line: 593, column: 29, scope: !2837, inlinedAt: !2850)
!2850 = distinct !DILocation(line: 537, column: 24, scope: !2843, inlinedAt: !2851)
!2851 = distinct !DILocation(line: 326, column: 21, scope: !2747)
!2852 = !DILocation(line: 537, column: 5, scope: !2843, inlinedAt: !2851)
!2853 = !DILocation(line: 326, column: 21, scope: !2747)
!2854 = !DILocation(line: 315, column: 6, scope: !2855, inlinedAt: !2858)
!2855 = distinct !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hf765ddc71c0a07aaE", scope: !2753, file: !1408, line: 313, type: !2856, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !24)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{!2753}
!2858 = distinct !DILocation(line: 327, column: 26, scope: !2749)
!2859 = !DILocation(line: 327, column: 25, scope: !2749)
!2860 = !DILocation(line: 331, column: 26, scope: !2751)
!2861 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2862)
!2862 = distinct !DILocation(line: 331, column: 26, scope: !2751)
!2863 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2862)
!2864 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2862)
!2865 = !DILocation(line: 332, column: 23, scope: !2763)
!2866 = !DILocation(line: 593, column: 29, scope: !2837, inlinedAt: !2867)
!2867 = distinct !DILocation(line: 537, column: 24, scope: !2843, inlinedAt: !2868)
!2868 = distinct !DILocation(line: 333, column: 23, scope: !2765)
!2869 = !DILocation(line: 537, column: 5, scope: !2843, inlinedAt: !2868)
!2870 = !DILocation(line: 333, column: 23, scope: !2765)
!2871 = !DILocation(line: 593, column: 29, scope: !2837, inlinedAt: !2872)
!2872 = distinct !DILocation(line: 537, column: 24, scope: !2843, inlinedAt: !2873)
!2873 = distinct !DILocation(line: 334, column: 21, scope: !2767)
!2874 = !DILocation(line: 537, column: 5, scope: !2843, inlinedAt: !2873)
!2875 = !DILocation(line: 334, column: 21, scope: !2767)
!2876 = !DILocation(line: 315, column: 6, scope: !2855, inlinedAt: !2877)
!2877 = distinct !DILocation(line: 335, column: 26, scope: !2769)
!2878 = !DILocation(line: 335, column: 25, scope: !2769)
!2879 = !DILocation(line: 348, column: 5, scope: !2771)
!2880 = !DILocation(line: 351, column: 29, scope: !2771)
!2881 = !DILocation(line: 351, column: 32, scope: !2771)
!2882 = !DILocation(line: 351, column: 23, scope: !2771)
!2883 = !DILocation(line: 351, column: 38, scope: !2771)
!2884 = !DILocation(line: 351, column: 13, scope: !2773)
!2885 = !DILocation(line: 353, column: 12, scope: !2773)
!2886 = !DILocation(line: 377, column: 12, scope: !2773)
!2887 = !DILocation(line: 377, column: 23, scope: !2773)
!2888 = !DILocation(line: 355, column: 33, scope: !2773)
!2889 = !DILocation(line: 355, column: 36, scope: !2773)
!2890 = !DILocation(line: 355, column: 27, scope: !2773)
!2891 = !DILocation(line: 356, column: 16, scope: !2775)
!2892 = !DILocation(line: 356, column: 26, scope: !2775)
!2893 = !DILocation(line: 356, column: 35, scope: !2775)
!2894 = !DILocation(line: 356, column: 45, scope: !2775)
!2895 = !DILocation(line: 362, column: 16, scope: !2775)
!2896 = !DILocation(line: 362, column: 26, scope: !2775)
!2897 = !DILocation(line: 357, column: 17, scope: !2775)
!2898 = !DILocation(line: 356, column: 13, scope: !2775)
!2899 = !DILocation(line: 364, column: 23, scope: !2775)
!2900 = !DILocation(line: 364, column: 33, scope: !2775)
!2901 = !DILocation(line: 363, column: 27, scope: !2775)
!2902 = !DILocation(line: 363, column: 17, scope: !2775)
!2903 = !DILocation(line: 362, column: 13, scope: !2775)
!2904 = !DILocation(line: 373, column: 13, scope: !2775)
!2905 = !DILocation(line: 370, column: 27, scope: !2775)
!2906 = !DILocation(line: 370, column: 17, scope: !2775)
!2907 = !DILocation(line: 371, column: 27, scope: !2775)
!2908 = !DILocation(line: 371, column: 33, scope: !2775)
!2909 = !DILocation(line: 365, column: 27, scope: !2775)
!2910 = !DILocation(line: 365, column: 17, scope: !2775)
!2911 = !DILocation(line: 364, column: 20, scope: !2775)
!2912 = !DILocation(line: 371, column: 17, scope: !2775)
!2913 = !DILocation(line: 374, column: 13, scope: !2775)
!2914 = !DILocation(line: 373, column: 27, scope: !2775)
!2915 = !DILocation(line: 373, column: 47, scope: !2775)
!2916 = !DILocation(line: 374, column: 33, scope: !2775)
!2917 = !DILocation(line: 374, column: 36, scope: !2775)
!2918 = !DILocation(line: 374, column: 27, scope: !2775)
!2919 = !DILocation(line: 374, column: 42, scope: !2775)
!2920 = !DILocation(line: 374, column: 52, scope: !2775)
!2921 = !DILocation(line: 403, column: 12, scope: !2773)
!2922 = !DILocation(line: 403, column: 23, scope: !2773)
!2923 = !DILocalVariable(name: "this", arg: 1, scope: !2924, file: !1408, line: 1008, type: !2927)
!2924 = distinct !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17hbe297123fa452e93E", scope: !2753, file: !1408, line: 1008, type: !2925, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !2932)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!1144, !2927}
!2927 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !2928, templateParams: !24, identifier: "cebedb0e4e44cd01166393beb116c03")
!2928 = !{!2929, !2931}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2927, file: !2, baseType: !2930, size: 64, align: 64)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64, align: 64, dwarfAddressSpace: 0)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2927, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2932 = !{!2923}
!2933 = !DILocation(line: 1008, column: 35, scope: !2924, inlinedAt: !2934)
!2934 = distinct !DILocation(line: 379, column: 23, scope: !2773)
!2935 = !DILocalVariable(name: "self", arg: 1, scope: !2936, file: !1883, line: 502, type: !2927)
!2936 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7812f5616a730d3bE", scope: !1093, file: !1883, line: 502, type: !2937, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2941, retainedNodes: !2940)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{!2939, !2927}
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !2753, size: 64, align: 64, dwarfAddressSpace: 0)
!2940 = !{!2935}
!2941 = !{!2942}
!2942 = !DITemplateTypeParameter(name: "T", type: !2753)
!2943 = !DILocation(line: 502, column: 29, scope: !2936, inlinedAt: !2944)
!2944 = distinct !DILocation(line: 1009, column: 9, scope: !2924, inlinedAt: !2934)
!2945 = !DILocation(line: 379, column: 13, scope: !2773)
!2946 = !DILocation(line: 380, column: 21, scope: !2773)
!2947 = !DILocation(line: 380, column: 13, scope: !2773)
!2948 = !DILocation(line: 381, column: 28, scope: !2773)
!2949 = !DILocation(line: 383, column: 25, scope: !2777)
!2950 = !DILocation(line: 383, column: 22, scope: !2777)
!2951 = !DILocation(line: 383, column: 13, scope: !2779)
!2952 = !DILocation(line: 383, column: 17, scope: !2779)
!2953 = !DILocation(line: 383, column: 17, scope: !2781)
!2954 = !DILocation(line: 396, column: 21, scope: !2781)
!2955 = !DILocation(line: 397, column: 29, scope: !2781)
!2956 = !DILocation(line: 397, column: 48, scope: !2781)
!2957 = !DILocation(line: 397, column: 40, scope: !2781)
!2958 = !DILocation(line: 397, column: 39, scope: !2781)
!2959 = !DILocalVariable(name: "self", arg: 1, scope: !2960, file: !256, line: 1025, type: !1144)
!2960 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbb5cb5b6065c8267E", scope: !267, file: !256, line: 1025, type: !2961, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !2963)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{!1144, !1144, !9}
!2963 = !{!2959, !2964}
!2964 = !DILocalVariable(name: "count", arg: 2, scope: !2960, file: !256, line: 1025, type: !9)
!2965 = !DILocation(line: 1025, column: 29, scope: !2960, inlinedAt: !2966)
!2966 = distinct !DILocation(line: 397, column: 29, scope: !2781)
!2967 = !DILocation(line: 1025, column: 35, scope: !2960, inlinedAt: !2966)
!2968 = !DILocation(line: 1037, column: 13, scope: !2960, inlinedAt: !2966)
!2969 = !DILocation(line: 397, column: 21, scope: !2781)
!2970 = !DILocation(line: 398, column: 28, scope: !2781)
!2971 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2972)
!2972 = distinct !DILocation(line: 398, column: 28, scope: !2781)
!2973 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2972)
!2974 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2972)
!2975 = !DILocation(line: 398, column: 21, scope: !2781)
!2976 = !DILocation(line: 431, column: 36, scope: !2773)
!2977 = !DILocation(line: 431, column: 45, scope: !2773)
!2978 = !DILocation(line: 431, column: 30, scope: !2773)
!2979 = !DILocation(line: 431, column: 59, scope: !2773)
!2980 = !DILocation(line: 431, column: 68, scope: !2773)
!2981 = !DILocation(line: 431, column: 53, scope: !2773)
!2982 = !DILocation(line: 431, column: 21, scope: !2773)
!2983 = !DILocation(line: 431, column: 13, scope: !2789)
!2984 = !DILocation(line: 433, column: 12, scope: !2789)
!2985 = !DILocation(line: 1008, column: 35, scope: !2924, inlinedAt: !2986)
!2986 = distinct !DILocation(line: 405, column: 23, scope: !2773)
!2987 = !DILocation(line: 502, column: 29, scope: !2936, inlinedAt: !2988)
!2988 = distinct !DILocation(line: 1009, column: 9, scope: !2924, inlinedAt: !2986)
!2989 = !DILocation(line: 405, column: 13, scope: !2773)
!2990 = !DILocation(line: 406, column: 21, scope: !2773)
!2991 = !DILocation(line: 406, column: 13, scope: !2773)
!2992 = !DILocation(line: 407, column: 28, scope: !2773)
!2993 = !DILocation(line: 409, column: 25, scope: !2783)
!2994 = !DILocation(line: 409, column: 22, scope: !2783)
!2995 = !DILocation(line: 409, column: 13, scope: !2785)
!2996 = !DILocation(line: 409, column: 17, scope: !2785)
!2997 = !DILocation(line: 409, column: 17, scope: !2787)
!2998 = !DILocation(line: 423, column: 28, scope: !2787)
!2999 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !3000)
!3000 = distinct !DILocation(line: 423, column: 28, scope: !2787)
!3001 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !3000)
!3002 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3003)
!3003 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !3000)
!3004 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3005)
!3005 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3003)
!3006 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3005)
!3007 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !3008)
!3008 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !3000)
!3009 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !3008)
!3010 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !3008)
!3011 = !DILocation(line: 423, column: 21, scope: !2787)
!3012 = !DILocation(line: 424, column: 21, scope: !2787)
!3013 = !DILocation(line: 425, column: 29, scope: !2787)
!3014 = !DILocation(line: 425, column: 47, scope: !2787)
!3015 = !DILocation(line: 425, column: 39, scope: !2787)
!3016 = !DILocation(line: 1025, column: 29, scope: !2960, inlinedAt: !3017)
!3017 = distinct !DILocation(line: 425, column: 29, scope: !2787)
!3018 = !DILocation(line: 1025, column: 35, scope: !2960, inlinedAt: !3017)
!3019 = !DILocation(line: 1037, column: 13, scope: !2960, inlinedAt: !3017)
!3020 = !DILocation(line: 425, column: 21, scope: !2787)
!3021 = !DILocation(line: 482, column: 12, scope: !2789)
!3022 = !DILocation(line: 482, column: 23, scope: !2789)
!3023 = !DILocation(line: 465, column: 37, scope: !2789)
!3024 = !DILocalVariable(name: "small", arg: 1, scope: !3025, file: !3026, line: 52, type: !123)
!3025 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h97266e540dd09f32E", scope: !3027, file: !3026, line: 52, type: !3030, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3032)
!3026 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "414fe946a4d28dee13e1a0c8731be3b8")
!3027 = !DINamespace(name: "{impl#44}", scope: !3028)
!3028 = !DINamespace(name: "num", scope: !3029)
!3029 = !DINamespace(name: "convert", scope: !142)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{!9, !123}
!3032 = !{!3024}
!3033 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3034)
!3034 = distinct !DILocation(line: 465, column: 37, scope: !2789)
!3035 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3034)
!3036 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3037)
!3037 = distinct !DILocation(line: 465, column: 37, scope: !2789)
!3038 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3037)
!3039 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3037)
!3040 = !DILocation(line: 465, column: 27, scope: !2789)
!3041 = !DILocation(line: 466, column: 42, scope: !2791)
!3042 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3043)
!3043 = distinct !DILocation(line: 466, column: 42, scope: !2791)
!3044 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3043)
!3045 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !3046)
!3046 = distinct !DILocation(line: 466, column: 42, scope: !2791)
!3047 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !3046)
!3048 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3049)
!3049 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !3046)
!3050 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3051)
!3051 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3049)
!3052 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3051)
!3053 = !DILocation(line: 1184, column: 13, scope: !2081, inlinedAt: !3051)
!3054 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !3055)
!3055 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !3046)
!3056 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !3055)
!3057 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !3055)
!3058 = !DILocation(line: 466, column: 52, scope: !2791)
!3059 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3060)
!3060 = distinct !DILocation(line: 466, column: 52, scope: !2791)
!3061 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3060)
!3062 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3063)
!3063 = distinct !DILocation(line: 466, column: 52, scope: !2791)
!3064 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3063)
!3065 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3063)
!3066 = !DILocation(line: 466, column: 17, scope: !2791)
!3067 = !DILocation(line: 468, column: 26, scope: !2791)
!3068 = !DILocation(line: 468, column: 17, scope: !2793)
!3069 = !DILocation(line: 475, column: 48, scope: !2791)
!3070 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3071)
!3071 = distinct !DILocation(line: 475, column: 48, scope: !2791)
!3072 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3071)
!3073 = !DILocation(line: 469, column: 31, scope: !2793)
!3074 = !DILocation(line: 1025, column: 29, scope: !2960, inlinedAt: !3075)
!3075 = distinct !DILocation(line: 469, column: 31, scope: !2793)
!3076 = !DILocation(line: 1025, column: 35, scope: !2960, inlinedAt: !3075)
!3077 = !DILocation(line: 1037, column: 13, scope: !2960, inlinedAt: !3075)
!3078 = !DILocation(line: 469, column: 21, scope: !2793)
!3079 = !DILocation(line: 470, column: 46, scope: !2793)
!3080 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3081)
!3081 = distinct !DILocation(line: 470, column: 46, scope: !2793)
!3082 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3081)
!3083 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3084)
!3084 = distinct !DILocation(line: 470, column: 46, scope: !2793)
!3085 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3084)
!3086 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3084)
!3087 = !DILocation(line: 470, column: 55, scope: !2793)
!3088 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3089)
!3089 = distinct !DILocation(line: 470, column: 55, scope: !2793)
!3090 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3089)
!3091 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !3092)
!3092 = distinct !DILocation(line: 470, column: 55, scope: !2793)
!3093 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !3092)
!3094 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3095)
!3095 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !3092)
!3096 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3097)
!3097 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3095)
!3098 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3097)
!3099 = !DILocation(line: 1184, column: 13, scope: !2081, inlinedAt: !3097)
!3100 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !3101)
!3101 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !3092)
!3102 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !3101)
!3103 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !3101)
!3104 = !DILocation(line: 470, column: 21, scope: !2793)
!3105 = !DILocation(line: 471, column: 31, scope: !2793)
!3106 = !DILocation(line: 1025, column: 29, scope: !2960, inlinedAt: !3107)
!3107 = distinct !DILocation(line: 471, column: 31, scope: !2793)
!3108 = !DILocation(line: 1025, column: 35, scope: !2960, inlinedAt: !3107)
!3109 = !DILocation(line: 1037, column: 13, scope: !2960, inlinedAt: !3107)
!3110 = !DILocation(line: 471, column: 21, scope: !2793)
!3111 = !DILocation(line: 472, column: 46, scope: !2793)
!3112 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3113)
!3113 = distinct !DILocation(line: 472, column: 46, scope: !2793)
!3114 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3113)
!3115 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !3116)
!3116 = distinct !DILocation(line: 472, column: 46, scope: !2793)
!3117 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !3116)
!3118 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3119)
!3119 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !3116)
!3120 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3121)
!3121 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3119)
!3122 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3121)
!3123 = !DILocation(line: 1184, column: 13, scope: !2081, inlinedAt: !3121)
!3124 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !3125)
!3125 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !3116)
!3126 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !3125)
!3127 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !3125)
!3128 = !DILocation(line: 472, column: 56, scope: !2793)
!3129 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3130)
!3130 = distinct !DILocation(line: 472, column: 56, scope: !2793)
!3131 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3130)
!3132 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3133)
!3133 = distinct !DILocation(line: 472, column: 56, scope: !2793)
!3134 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3133)
!3135 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3133)
!3136 = !DILocation(line: 472, column: 21, scope: !2793)
!3137 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !3138)
!3138 = distinct !DILocation(line: 475, column: 48, scope: !2791)
!3139 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !3138)
!3140 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3141)
!3141 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !3138)
!3142 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3143)
!3143 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3141)
!3144 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3143)
!3145 = !DILocation(line: 1184, column: 13, scope: !2081, inlinedAt: !3143)
!3146 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !3147)
!3147 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !3138)
!3148 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !3147)
!3149 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !3147)
!3150 = !DILocation(line: 475, column: 17, scope: !2791)
!3151 = !DILocation(line: 476, column: 29, scope: !2791)
!3152 = !DILocation(line: 476, column: 17, scope: !2791)
!3153 = !DILocation(line: 477, column: 27, scope: !2791)
!3154 = !DILocation(line: 1025, column: 29, scope: !2960, inlinedAt: !3155)
!3155 = distinct !DILocation(line: 477, column: 27, scope: !2791)
!3156 = !DILocation(line: 1025, column: 35, scope: !2960, inlinedAt: !3155)
!3157 = !DILocation(line: 1037, column: 13, scope: !2960, inlinedAt: !3155)
!3158 = !DILocation(line: 477, column: 17, scope: !2791)
!3159 = !DILocation(line: 478, column: 27, scope: !2791)
!3160 = !DILocation(line: 1025, column: 29, scope: !2960, inlinedAt: !3161)
!3161 = distinct !DILocation(line: 478, column: 27, scope: !2791)
!3162 = !DILocation(line: 1025, column: 35, scope: !2960, inlinedAt: !3161)
!3163 = !DILocation(line: 1037, column: 13, scope: !2960, inlinedAt: !3161)
!3164 = !DILocation(line: 478, column: 17, scope: !2791)
!3165 = !DILocation(line: 433, column: 9, scope: !2789)
!3166 = !DILocation(line: 494, column: 12, scope: !2789)
!3167 = !DILocation(line: 494, column: 23, scope: !2789)
!3168 = !DILocation(line: 491, column: 26, scope: !2789)
!3169 = !DILocation(line: 491, column: 32, scope: !2789)
!3170 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3171)
!3171 = distinct !DILocation(line: 491, column: 26, scope: !2789)
!3172 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3171)
!3173 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3171)
!3174 = !DILocation(line: 491, column: 13, scope: !2789)
!3175 = !DILocation(line: 482, column: 9, scope: !2789)
!3176 = !DILocation(line: 502, column: 12, scope: !2789)
!3177 = !DILocation(line: 499, column: 26, scope: !2789)
!3178 = !DILocation(line: 499, column: 32, scope: !2789)
!3179 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !3180)
!3180 = distinct !DILocation(line: 499, column: 26, scope: !2789)
!3181 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !3180)
!3182 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3183)
!3183 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !3180)
!3184 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3185)
!3185 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3183)
!3186 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3185)
!3187 = !DILocation(line: 1184, column: 13, scope: !2081, inlinedAt: !3185)
!3188 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !3189)
!3189 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !3180)
!3190 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !3189)
!3191 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !3189)
!3192 = !DILocation(line: 499, column: 13, scope: !2789)
!3193 = !DILocation(line: 494, column: 9, scope: !2789)
!3194 = !DILocation(line: 511, column: 8, scope: !2771)
!3195 = !DILocation(line: 511, column: 18, scope: !2771)
!3196 = !DILocation(line: 534, column: 15, scope: !2771)
!3197 = !DILocation(line: 534, column: 25, scope: !2771)
!3198 = !DILocation(line: 514, column: 9, scope: !2771)
!3199 = !DILocation(line: 515, column: 15, scope: !2771)
!3200 = !DILocation(line: 515, column: 25, scope: !2771)
!3201 = !DILocation(line: 514, column: 32, scope: !2771)
!3202 = !DILocation(line: 514, column: 35, scope: !2771)
!3203 = !DILocation(line: 514, column: 26, scope: !2771)
!3204 = !DILocation(line: 514, column: 9, scope: !2795)
!3205 = !{i8 0, i8 3}
!3206 = !DILocation(line: 502, column: 29, scope: !1928, inlinedAt: !3207)
!3207 = distinct !DILocation(line: 533, column: 15, scope: !2771)
!3208 = !DILocation(line: 533, column: 31, scope: !2771)
!3209 = !DILocation(line: 533, column: 9, scope: !2771)
!3210 = !DILocation(line: 528, column: 25, scope: !2771)
!3211 = !DILocalVariable(name: "self", arg: 1, scope: !3212, file: !256, line: 1116, type: !1144)
!3212 = distinct !DISubprogram(name: "sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h917be20cb6d0ba8fE", scope: !267, file: !256, line: 1116, type: !2961, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !3213)
!3213 = !{!3211, !3214}
!3214 = !DILocalVariable(name: "count", arg: 2, scope: !3212, file: !256, line: 1116, type: !9)
!3215 = !DILocation(line: 1116, column: 29, scope: !3212, inlinedAt: !3216)
!3216 = distinct !DILocation(line: 528, column: 25, scope: !2771)
!3217 = !DILocation(line: 1116, column: 35, scope: !3212, inlinedAt: !3216)
!3218 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3219)
!3219 = distinct !DILocation(line: 1121, column: 30, scope: !3212, inlinedAt: !3216)
!3220 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3221)
!3221 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3219)
!3222 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3221)
!3223 = !DILocalVariable(name: "self", arg: 1, scope: !3224, file: !256, line: 472, type: !1144)
!3224 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hc9610eba483f0b19E", scope: !267, file: !256, line: 472, type: !3225, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !3227)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!1144, !1144, !2076}
!3227 = !{!3223, !3228}
!3228 = !DILocalVariable(name: "count", arg: 2, scope: !3224, file: !256, line: 472, type: !2076)
!3229 = !DILocation(line: 472, column: 32, scope: !3224, inlinedAt: !3230)
!3230 = distinct !DILocation(line: 1121, column: 18, scope: !3212, inlinedAt: !3216)
!3231 = !DILocation(line: 472, column: 38, scope: !3224, inlinedAt: !3230)
!3232 = !DILocation(line: 488, column: 13, scope: !3224, inlinedAt: !3230)
!3233 = !DILocation(line: 528, column: 17, scope: !2771)
!3234 = !DILocation(line: 529, column: 27, scope: !2771)
!3235 = !DILocation(line: 529, column: 45, scope: !2771)
!3236 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3237)
!3237 = distinct !DILocation(line: 529, column: 33, scope: !2771)
!3238 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3237)
!3239 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3240)
!3240 = distinct !DILocation(line: 529, column: 27, scope: !2771)
!3241 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3240)
!3242 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3240)
!3243 = !DILocation(line: 529, column: 55, scope: !2771)
!3244 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !3245)
!3245 = distinct !DILocation(line: 529, column: 55, scope: !2771)
!3246 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !3245)
!3247 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3248)
!3248 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !3245)
!3249 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3250)
!3250 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3248)
!3251 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3250)
!3252 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !3253)
!3253 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !3245)
!3254 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !3253)
!3255 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !3253)
!3256 = !DILocation(line: 529, column: 17, scope: !2771)
!3257 = !DILocation(line: 530, column: 21, scope: !2771)
!3258 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !3259)
!3259 = distinct !DILocation(line: 530, column: 21, scope: !2771)
!3260 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !3259)
!3261 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3262)
!3262 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !3259)
!3263 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3264)
!3264 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3262)
!3265 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3264)
!3266 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !3267)
!3267 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !3259)
!3268 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !3267)
!3269 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !3267)
!3270 = !DILocation(line: 530, column: 17, scope: !2771)
!3271 = !DILocation(line: 515, column: 9, scope: !2771)
!3272 = !DILocation(line: 551, column: 2, scope: !2735)
!3273 = !DILocation(line: 502, column: 29, scope: !1928, inlinedAt: !3274)
!3274 = distinct !DILocation(line: 549, column: 15, scope: !2771)
!3275 = !DILocation(line: 549, column: 31, scope: !2771)
!3276 = !DILocation(line: 549, column: 9, scope: !2771)
!3277 = !DILocation(line: 537, column: 9, scope: !2771)
!3278 = !DILocation(line: 538, column: 15, scope: !2771)
!3279 = !DILocation(line: 538, column: 25, scope: !2771)
!3280 = !DILocation(line: 537, column: 32, scope: !2771)
!3281 = !DILocation(line: 537, column: 35, scope: !2771)
!3282 = !DILocation(line: 537, column: 26, scope: !2771)
!3283 = !DILocation(line: 537, column: 9, scope: !2804)
!3284 = !DILocation(line: 502, column: 29, scope: !1928, inlinedAt: !3285)
!3285 = distinct !DILocation(line: 546, column: 15, scope: !2771)
!3286 = !DILocation(line: 546, column: 31, scope: !2771)
!3287 = !DILocation(line: 546, column: 9, scope: !2771)
!3288 = !DILocation(line: 541, column: 25, scope: !2771)
!3289 = !DILocation(line: 1116, column: 29, scope: !3212, inlinedAt: !3290)
!3290 = distinct !DILocation(line: 541, column: 25, scope: !2771)
!3291 = !DILocation(line: 1116, column: 35, scope: !3212, inlinedAt: !3290)
!3292 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3293)
!3293 = distinct !DILocation(line: 1121, column: 30, scope: !3212, inlinedAt: !3290)
!3294 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3295)
!3295 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3293)
!3296 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3295)
!3297 = !DILocation(line: 472, column: 32, scope: !3224, inlinedAt: !3298)
!3298 = distinct !DILocation(line: 1121, column: 18, scope: !3212, inlinedAt: !3290)
!3299 = !DILocation(line: 472, column: 38, scope: !3224, inlinedAt: !3298)
!3300 = !DILocation(line: 488, column: 13, scope: !3224, inlinedAt: !3298)
!3301 = !DILocation(line: 541, column: 17, scope: !2771)
!3302 = !DILocation(line: 542, column: 27, scope: !2771)
!3303 = !DILocation(line: 542, column: 30, scope: !2771)
!3304 = !DILocation(line: 542, column: 48, scope: !2771)
!3305 = !DILocation(line: 52, column: 21, scope: !3025, inlinedAt: !3306)
!3306 = distinct !DILocation(line: 542, column: 36, scope: !2771)
!3307 = !DILocation(line: 53, column: 17, scope: !3025, inlinedAt: !3306)
!3308 = !DILocation(line: 542, column: 36, scope: !2771)
!3309 = !DILocation(line: 1116, column: 29, scope: !2064, inlinedAt: !3310)
!3310 = distinct !DILocation(line: 542, column: 30, scope: !2771)
!3311 = !DILocation(line: 1116, column: 35, scope: !2064, inlinedAt: !3310)
!3312 = !DILocation(line: 1358, column: 35, scope: !2071, inlinedAt: !3313)
!3313 = distinct !DILocation(line: 1121, column: 30, scope: !2064, inlinedAt: !3310)
!3314 = !DILocation(line: 1183, column: 35, scope: !2081, inlinedAt: !3315)
!3315 = distinct !DILocation(line: 1359, column: 13, scope: !2071, inlinedAt: !3313)
!3316 = !DILocation(line: 1183, column: 41, scope: !2081, inlinedAt: !3315)
!3317 = !DILocation(line: 1184, column: 13, scope: !2081, inlinedAt: !3315)
!3318 = !DILocation(line: 472, column: 32, scope: !2091, inlinedAt: !3319)
!3319 = distinct !DILocation(line: 1121, column: 18, scope: !2064, inlinedAt: !3310)
!3320 = !DILocation(line: 472, column: 38, scope: !2091, inlinedAt: !3319)
!3321 = !DILocation(line: 488, column: 13, scope: !2091, inlinedAt: !3319)
!3322 = !DILocation(line: 542, column: 17, scope: !2771)
!3323 = !DILocation(line: 543, column: 21, scope: !2771)
!3324 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3325)
!3325 = distinct !DILocation(line: 543, column: 21, scope: !2771)
!3326 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3325)
!3327 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3325)
!3328 = !DILocation(line: 543, column: 17, scope: !2771)
!3329 = !DILocation(line: 538, column: 9, scope: !2771)
!3330 = distinct !DISubprogram(name: "width<u8>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h2ada822d627da173E", scope: !3331, file: !2246, line: 341, type: !3332, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1570, retainedNodes: !3334)
!3331 = !DINamespace(name: "partition_in_blocks", scope: !1120)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!9, !1144, !1144}
!3334 = !{!3335, !3336}
!3335 = !DILocalVariable(name: "l", arg: 1, scope: !3330, file: !2246, line: 341, type: !1144)
!3336 = !DILocalVariable(name: "r", arg: 2, scope: !3330, file: !2246, line: 341, type: !1144)
!3337 = !DILocation(line: 341, column: 17, scope: !3330)
!3338 = !DILocation(line: 341, column: 28, scope: !3330)
!3339 = !DILocation(line: 342, column: 17, scope: !3330)
!3340 = !DILocation(line: 342, column: 9, scope: !3330)
!3341 = !DILocation(line: 209, column: 17, scope: !1566, inlinedAt: !3342)
!3342 = distinct !DILocation(line: 345, column: 10, scope: !3330)
!3343 = !DILocation(line: 57, column: 26, scope: !1575, inlinedAt: !3344)
!3344 = distinct !DILocation(line: 213, column: 33, scope: !1566, inlinedAt: !3342)
!3345 = !DILocation(line: 213, column: 18, scope: !1566, inlinedAt: !3342)
!3346 = !DILocation(line: 209, column: 17, scope: !1566, inlinedAt: !3347)
!3347 = distinct !DILocation(line: 345, column: 21, scope: !3330)
!3348 = !DILocation(line: 57, column: 26, scope: !1575, inlinedAt: !3349)
!3349 = distinct !DILocation(line: 213, column: 33, scope: !1566, inlinedAt: !3347)
!3350 = !DILocation(line: 213, column: 18, scope: !1566, inlinedAt: !3347)
!3351 = !DILocation(line: 345, column: 9, scope: !3330)
!3352 = !DILocation(line: 346, column: 6, scope: !3330)
!3353 = distinct !DISubprogram(name: "width<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h798ebe68878cb752E", scope: !3331, file: !2246, line: 341, type: !3354, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !3356)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{!9, !261, !261}
!3356 = !{!3357, !3358}
!3357 = !DILocalVariable(name: "l", arg: 1, scope: !3353, file: !2246, line: 341, type: !261)
!3358 = !DILocalVariable(name: "r", arg: 2, scope: !3353, file: !2246, line: 341, type: !261)
!3359 = !DILocation(line: 341, column: 17, scope: !3353)
!3360 = !DILocation(line: 341, column: 28, scope: !3353)
!3361 = !DILocation(line: 342, column: 17, scope: !3353)
!3362 = !DILocation(line: 342, column: 9, scope: !3353)
!3363 = !DILocalVariable(name: "self", arg: 1, scope: !3364, file: !256, line: 209, type: !261)
!3364 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hcd125c5be5943e9bE", scope: !267, file: !256, line: 209, type: !3365, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !3367)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{!9, !261}
!3367 = !{!3363}
!3368 = !DILocation(line: 209, column: 17, scope: !3364, inlinedAt: !3369)
!3369 = distinct !DILocation(line: 345, column: 10, scope: !3353)
!3370 = !DILocation(line: 57, column: 26, scope: !1257, inlinedAt: !3371)
!3371 = distinct !DILocation(line: 213, column: 33, scope: !3364, inlinedAt: !3369)
!3372 = !DILocation(line: 213, column: 18, scope: !3364, inlinedAt: !3369)
!3373 = !DILocation(line: 209, column: 17, scope: !3364, inlinedAt: !3374)
!3374 = distinct !DILocation(line: 345, column: 21, scope: !3353)
!3375 = !DILocation(line: 57, column: 26, scope: !1257, inlinedAt: !3376)
!3376 = distinct !DILocation(line: 213, column: 33, scope: !3364, inlinedAt: !3374)
!3377 = !DILocation(line: 213, column: 18, scope: !3364, inlinedAt: !3374)
!3378 = !DILocation(line: 345, column: 9, scope: !3353)
!3379 = !DILocation(line: 346, column: 6, scope: !3353)
!3380 = distinct !DISubprogram(name: "partial_insertion_sort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort22partial_insertion_sort17hee34f5a0b526f267E", scope: !1120, file: !2246, line: 198, type: !3381, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !3383)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!401, !334, !1090}
!3383 = !{!3384, !3385, !3386, !3388, !3390}
!3384 = !DILocalVariable(name: "v", arg: 1, scope: !3380, file: !2246, line: 198, type: !334)
!3385 = !DILocalVariable(name: "is_less", arg: 2, scope: !3380, file: !2246, line: 198, type: !1090)
!3386 = !DILocalVariable(name: "len", scope: !3387, file: !2246, line: 207, type: !9, align: 8)
!3387 = distinct !DILexicalBlock(scope: !3380, file: !2246, line: 207, column: 5)
!3388 = !DILocalVariable(name: "i", scope: !3389, file: !2246, line: 208, type: !9, align: 8)
!3389 = distinct !DILexicalBlock(scope: !3387, file: !2246, line: 208, column: 5)
!3390 = !DILocalVariable(name: "iter", scope: !3391, file: !2246, line: 210, type: !174, align: 8)
!3391 = distinct !DILexicalBlock(scope: !3389, file: !2246, line: 210, column: 5)
!3392 = !DILocation(line: 198, column: 33, scope: !3380)
!3393 = !DILocation(line: 198, column: 46, scope: !3380)
!3394 = !DILocation(line: 208, column: 9, scope: !3389)
!3395 = !DILocation(line: 210, column: 14, scope: !3391)
!3396 = !DILocation(line: 207, column: 15, scope: !3380)
!3397 = !DILocation(line: 207, column: 9, scope: !3387)
!3398 = !DILocation(line: 208, column: 17, scope: !3387)
!3399 = !DILocation(line: 210, column: 14, scope: !3389)
!3400 = !DILocation(line: 210, column: 5, scope: !3391)
!3401 = !DILocation(line: 243, column: 5, scope: !3389)
!3402 = !DILocation(line: 244, column: 2, scope: !3380)
!3403 = !DILocation(line: 215, column: 19, scope: !3391)
!3404 = !DILocation(line: 215, column: 55, scope: !3391)
!3405 = !DILocation(line: 215, column: 39, scope: !3391)
!3406 = !DILocation(line: 215, column: 75, scope: !3391)
!3407 = !DILocation(line: 215, column: 59, scope: !3391)
!3408 = !DILocation(line: 215, column: 31, scope: !3391)
!3409 = !DILocation(line: 215, column: 30, scope: !3391)
!3410 = !DILocation(line: 221, column: 12, scope: !3391)
!3411 = !DILocation(line: 216, column: 17, scope: !3391)
!3412 = !DILocation(line: 215, column: 13, scope: !3391)
!3413 = !DILocation(line: 226, column: 12, scope: !3391)
!3414 = !DILocation(line: 222, column: 20, scope: !3391)
!3415 = !DILocation(line: 1, column: 1, scope: !3416)
!3416 = !DILexicalBlockFile(scope: !3391, file: !3417, discriminator: 0)
!3417 = !DIFile(filename: "src/lib.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "ef3e180ca1e13bae3e0904cdd600c8e7")
!3418 = !DILocation(line: 231, column: 16, scope: !3391)
!3419 = !DILocation(line: 227, column: 20, scope: !3391)
!3420 = !DILocation(line: 231, column: 23, scope: !3391)
!3421 = !DILocation(line: 231, column: 9, scope: !3391)
!3422 = !DILocation(line: 233, column: 12, scope: !3391)
!3423 = !DILocation(line: 235, column: 48, scope: !3391)
!3424 = !DILocation(line: 235, column: 46, scope: !3391)
!3425 = !DILocation(line: 235, column: 44, scope: !3391)
!3426 = !DILocation(line: 235, column: 52, scope: !3391)
!3427 = !DILocation(line: 235, column: 13, scope: !3391)
!3428 = !DILocation(line: 238, column: 49, scope: !3391)
!3429 = !DILocation(line: 238, column: 47, scope: !3391)
!3430 = !DILocation(line: 238, column: 45, scope: !3391)
!3431 = !DILocation(line: 238, column: 13, scope: !3391)
!3432 = distinct !DISubprogram(name: "insertion_sort_shift_left<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort25insertion_sort_shift_left17h0d5bb514fedee4b9E", scope: !1120, file: !2246, line: 148, type: !3433, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !3435)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{null, !334, !9, !1090}
!3435 = !{!3436, !3437, !3438, !3439, !3441, !3443}
!3436 = !DILocalVariable(name: "v", arg: 1, scope: !3432, file: !2246, line: 148, type: !334)
!3437 = !DILocalVariable(name: "offset", arg: 2, scope: !3432, file: !2246, line: 148, type: !9)
!3438 = !DILocalVariable(name: "is_less", arg: 3, scope: !3432, file: !2246, line: 148, type: !1090)
!3439 = !DILocalVariable(name: "len", scope: !3440, file: !2246, line: 152, type: !9, align: 8)
!3440 = distinct !DILexicalBlock(scope: !3432, file: !2246, line: 152, column: 5)
!3441 = !DILocalVariable(name: "iter", scope: !3442, file: !2246, line: 158, type: !174, align: 8)
!3442 = distinct !DILexicalBlock(scope: !3440, file: !2246, line: 158, column: 5)
!3443 = !DILocalVariable(name: "i", scope: !3444, file: !2246, line: 158, type: !9, align: 8)
!3444 = distinct !DILexicalBlock(scope: !3442, file: !2246, line: 158, column: 26)
!3445 = !DILocation(line: 148, column: 36, scope: !3432)
!3446 = !DILocation(line: 148, column: 49, scope: !3432)
!3447 = !DILocation(line: 148, column: 64, scope: !3432)
!3448 = !DILocation(line: 158, column: 14, scope: !3442)
!3449 = !DILocation(line: 152, column: 15, scope: !3432)
!3450 = !DILocation(line: 152, column: 9, scope: !3440)
!3451 = !DILocation(line: 155, column: 13, scope: !3440)
!3452 = !DILocation(line: 155, column: 28, scope: !3440)
!3453 = !DILocation(line: 155, column: 5, scope: !3440)
!3454 = !DILocation(line: 158, column: 14, scope: !3440)
!3455 = !DILocation(line: 158, column: 5, scope: !3442)
!3456 = !DILocation(line: 166, column: 2, scope: !3432)
!3457 = !DILocation(line: 158, column: 9, scope: !3442)
!3458 = !DILocation(line: 158, column: 9, scope: !3444)
!3459 = !DILocation(line: 163, column: 32, scope: !3444)
!3460 = !DILocation(line: 163, column: 30, scope: !3444)
!3461 = !DILocation(line: 163, column: 13, scope: !3444)
!3462 = distinct !DISubprogram(name: "insertion_sort_shift_right<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort26insertion_sort_shift_right17h1f8d7f273034a422E", scope: !1120, file: !2246, line: 173, type: !3433, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !3463)
!3463 = !{!3464, !3465, !3466, !3467, !3469, !3471}
!3464 = !DILocalVariable(name: "v", arg: 1, scope: !3462, file: !2246, line: 173, type: !334)
!3465 = !DILocalVariable(name: "offset", arg: 2, scope: !3462, file: !2246, line: 173, type: !9)
!3466 = !DILocalVariable(name: "is_less", arg: 3, scope: !3462, file: !2246, line: 173, type: !1090)
!3467 = !DILocalVariable(name: "len", scope: !3468, file: !2246, line: 177, type: !9, align: 8)
!3468 = distinct !DILexicalBlock(scope: !3462, file: !2246, line: 177, column: 5)
!3469 = !DILocalVariable(name: "iter", scope: !3470, file: !2246, line: 183, type: !2346, align: 8)
!3470 = distinct !DILexicalBlock(scope: !3468, file: !2246, line: 183, column: 5)
!3471 = !DILocalVariable(name: "i", scope: !3472, file: !2246, line: 183, type: !9, align: 8)
!3472 = distinct !DILexicalBlock(scope: !3470, file: !2246, line: 183, column: 32)
!3473 = !DILocation(line: 173, column: 37, scope: !3462)
!3474 = !DILocation(line: 173, column: 50, scope: !3462)
!3475 = !DILocation(line: 173, column: 65, scope: !3462)
!3476 = !DILocation(line: 183, column: 14, scope: !3470)
!3477 = !DILocation(line: 177, column: 15, scope: !3462)
!3478 = !DILocation(line: 177, column: 9, scope: !3468)
!3479 = !DILocation(line: 180, column: 13, scope: !3468)
!3480 = !DILocation(line: 180, column: 28, scope: !3468)
!3481 = !DILocation(line: 180, column: 45, scope: !3468)
!3482 = !DILocation(line: 180, column: 5, scope: !3468)
!3483 = !DILocation(line: 183, column: 14, scope: !3468)
!3484 = !DILocation(line: 183, column: 5, scope: !3470)
!3485 = !DILocation(line: 192, column: 2, scope: !3462)
!3486 = !DILocation(line: 183, column: 9, scope: !3470)
!3487 = !DILocation(line: 183, column: 9, scope: !3472)
!3488 = !DILocation(line: 189, column: 32, scope: !3472)
!3489 = !DILocation(line: 189, column: 30, scope: !3472)
!3490 = !DILocation(line: 189, column: 13, scope: !3472)
!3491 = distinct !DISubprogram(name: "recurse<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort7recurse17h167841c41c7f1248E", scope: !1120, file: !2246, line: 797, type: !3492, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !3505)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{null, !334, !1090, !3494, !27}
!3494 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !459, file: !2, size: 64, align: 64, elements: !3495, templateParams: !24, identifier: "f738022218333058e3eaf92977d87da8")
!3495 = !{!3496}
!3496 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3494, file: !2, size: 64, align: 64, elements: !3497, templateParams: !24, identifier: "2e887f4eaca8410aaa86af58b7e99517", discriminator: !3504)
!3497 = !{!3498, !3500}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3496, file: !2, baseType: !3499, size: 64, align: 64, extraData: i64 0)
!3499 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3494, file: !2, size: 64, align: 64, elements: !24, templateParams: !786, identifier: "4a6d91bb5ee62e24e85410d55577f816")
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3496, file: !2, baseType: !3501, size: 64, align: 64)
!3501 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3494, file: !2, size: 64, align: 64, elements: !3502, templateParams: !786, identifier: "4c3f380bd6d2e9ff2e4a2f52ffa6b470")
!3502 = !{!3503}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3501, file: !2, baseType: !12, size: 64, align: 64)
!3504 = !DIDerivedType(tag: DW_TAG_member, scope: !3494, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!3505 = !{!3506, !3507, !3508, !3509, !3510, !3512, !3514, !3516, !3518, !3519, !3521, !3523, !3525, !3526, !3528, !3529, !3531, !3532}
!3506 = !DILocalVariable(name: "v", arg: 1, scope: !3491, file: !2246, line: 797, type: !334)
!3507 = !DILocalVariable(name: "is_less", arg: 2, scope: !3491, file: !2246, line: 797, type: !1090)
!3508 = !DILocalVariable(name: "pred", arg: 3, scope: !3491, file: !2246, line: 797, type: !3494)
!3509 = !DILocalVariable(name: "limit", arg: 4, scope: !3491, file: !2246, line: 797, type: !27)
!3510 = !DILocalVariable(name: "was_balanced", scope: !3511, file: !2246, line: 805, type: !401, align: 1)
!3511 = distinct !DILexicalBlock(scope: !3491, file: !2246, line: 805, column: 5)
!3512 = !DILocalVariable(name: "was_partitioned", scope: !3513, file: !2246, line: 807, type: !401, align: 1)
!3513 = distinct !DILexicalBlock(scope: !3511, file: !2246, line: 807, column: 5)
!3514 = !DILocalVariable(name: "len", scope: !3515, file: !2246, line: 810, type: !9, align: 8)
!3515 = distinct !DILexicalBlock(scope: !3513, file: !2246, line: 810, column: 9)
!3516 = !DILocalVariable(name: "pivot", scope: !3517, file: !2246, line: 835, type: !9, align: 8)
!3517 = distinct !DILexicalBlock(scope: !3515, file: !2246, line: 835, column: 9)
!3518 = !DILocalVariable(name: "likely_sorted", scope: !3517, file: !2246, line: 835, type: !401, align: 1)
!3519 = !DILocalVariable(name: "p", scope: !3520, file: !2246, line: 850, type: !12, align: 8)
!3520 = distinct !DILexicalBlock(scope: !3517, file: !2246, line: 850, column: 31)
!3521 = !DILocalVariable(name: "mid", scope: !3522, file: !2246, line: 852, type: !9, align: 8)
!3522 = distinct !DILexicalBlock(scope: !3520, file: !2246, line: 852, column: 17)
!3523 = !DILocalVariable(name: "mid", scope: !3524, file: !2246, line: 861, type: !9, align: 8)
!3524 = distinct !DILexicalBlock(scope: !3517, file: !2246, line: 861, column: 9)
!3525 = !DILocalVariable(name: "was_p", scope: !3524, file: !2246, line: 861, type: !401, align: 1)
!3526 = !DILocalVariable(name: "left", scope: !3527, file: !2246, line: 866, type: !334, align: 8)
!3527 = distinct !DILexicalBlock(scope: !3524, file: !2246, line: 866, column: 9)
!3528 = !DILocalVariable(name: "right", scope: !3527, file: !2246, line: 866, type: !334, align: 8)
!3529 = !DILocalVariable(name: "pivot", scope: !3530, file: !2246, line: 867, type: !334, align: 8)
!3530 = distinct !DILexicalBlock(scope: !3527, file: !2246, line: 867, column: 9)
!3531 = !DILocalVariable(name: "right", scope: !3530, file: !2246, line: 867, type: !334, align: 8)
!3532 = !DILocalVariable(name: "pivot", scope: !3533, file: !2246, line: 868, type: !12, align: 8)
!3533 = distinct !DILexicalBlock(scope: !3530, file: !2246, line: 868, column: 9)
!3534 = !DILocation(line: 797, column: 22, scope: !3491)
!3535 = !DILocation(line: 797, column: 42, scope: !3491)
!3536 = !DILocation(line: 797, column: 59, scope: !3491)
!3537 = !DILocation(line: 797, column: 84, scope: !3491)
!3538 = !DILocation(line: 805, column: 9, scope: !3511)
!3539 = !DILocation(line: 807, column: 9, scope: !3513)
!3540 = !DILocation(line: 805, column: 28, scope: !3491)
!3541 = !DILocation(line: 807, column: 31, scope: !3511)
!3542 = !DILocation(line: 809, column: 5, scope: !3513)
!3543 = !DILocation(line: 810, column: 19, scope: !3513)
!3544 = !DILocation(line: 810, column: 13, scope: !3515)
!3545 = !DILocation(line: 813, column: 12, scope: !3515)
!3546 = !DILocation(line: 822, column: 12, scope: !3515)
!3547 = !DILocation(line: 814, column: 16, scope: !3515)
!3548 = !DILocation(line: 882, column: 2, scope: !3491)
!3549 = !DILocation(line: 815, column: 43, scope: !3515)
!3550 = !DILocation(line: 815, column: 17, scope: !3515)
!3551 = !DILocation(line: 823, column: 22, scope: !3515)
!3552 = !DILocation(line: 823, column: 13, scope: !3515)
!3553 = !DILocation(line: 829, column: 13, scope: !3515)
!3554 = !DILocation(line: 829, column: 12, scope: !3515)
!3555 = !DILocation(line: 835, column: 51, scope: !3515)
!3556 = !DILocation(line: 835, column: 38, scope: !3515)
!3557 = !DILocation(line: 835, column: 14, scope: !3515)
!3558 = !DILocation(line: 835, column: 14, scope: !3517)
!3559 = !DILocation(line: 835, column: 21, scope: !3515)
!3560 = !DILocation(line: 835, column: 21, scope: !3517)
!3561 = !DILocation(line: 839, column: 12, scope: !3517)
!3562 = !DILocation(line: 830, column: 28, scope: !3515)
!3563 = !DILocation(line: 830, column: 13, scope: !3515)
!3564 = !DILocation(line: 831, column: 13, scope: !3515)
!3565 = !DILocation(line: 829, column: 9, scope: !3515)
!3566 = !DILocation(line: 839, column: 28, scope: !3517)
!3567 = !DILocation(line: 850, column: 16, scope: !3520)
!3568 = !DILocation(line: 842, column: 39, scope: !3517)
!3569 = !DILocation(line: 842, column: 16, scope: !3517)
!3570 = !DILocation(line: 850, column: 21, scope: !3520)
!3571 = !DILocation(line: 851, column: 29, scope: !3520)
!3572 = !DILocation(line: 861, column: 38, scope: !3517)
!3573 = !DILocation(line: 861, column: 28, scope: !3517)
!3574 = !DILocation(line: 861, column: 14, scope: !3517)
!3575 = !DILocation(line: 861, column: 14, scope: !3524)
!3576 = !DILocation(line: 861, column: 19, scope: !3517)
!3577 = !DILocation(line: 861, column: 19, scope: !3524)
!3578 = !DILocation(line: 862, column: 38, scope: !3524)
!3579 = !DILocation(line: 851, column: 28, scope: !3520)
!3580 = !DILocation(line: 851, column: 17, scope: !3520)
!3581 = !DILocation(line: 851, column: 16, scope: !3520)
!3582 = !DILocation(line: 852, column: 43, scope: !3520)
!3583 = !DILocation(line: 852, column: 27, scope: !3520)
!3584 = !DILocation(line: 852, column: 21, scope: !3522)
!3585 = !DILocation(line: 855, column: 26, scope: !3522)
!3586 = !DILocation(line: 855, column: 28, scope: !3522)
!3587 = !DILocation(line: 855, column: 17, scope: !3522)
!3588 = !DILocation(line: 1, column: 1, scope: !3589)
!3589 = !DILexicalBlockFile(scope: !3513, file: !3417, discriminator: 0)
!3590 = !DILocation(line: 862, column: 24, scope: !3524)
!3591 = !DILocation(line: 862, column: 52, scope: !3524)
!3592 = !DILocation(line: 862, column: 9, scope: !3524)
!3593 = !DILocation(line: 863, column: 9, scope: !3524)
!3594 = !DILocation(line: 866, column: 29, scope: !3524)
!3595 = !DILocation(line: 866, column: 14, scope: !3524)
!3596 = !DILocation(line: 866, column: 14, scope: !3527)
!3597 = !DILocation(line: 866, column: 20, scope: !3524)
!3598 = !DILocation(line: 866, column: 20, scope: !3527)
!3599 = !DILocation(line: 867, column: 30, scope: !3527)
!3600 = !DILocation(line: 867, column: 14, scope: !3527)
!3601 = !DILocation(line: 867, column: 14, scope: !3530)
!3602 = !DILocation(line: 867, column: 21, scope: !3527)
!3603 = !DILocation(line: 867, column: 21, scope: !3530)
!3604 = !DILocation(line: 868, column: 22, scope: !3530)
!3605 = !DILocation(line: 868, column: 21, scope: !3530)
!3606 = !DILocation(line: 868, column: 13, scope: !3533)
!3607 = !DILocation(line: 873, column: 12, scope: !3533)
!3608 = !DILocation(line: 878, column: 37, scope: !3533)
!3609 = !DILocation(line: 878, column: 50, scope: !3533)
!3610 = !DILocation(line: 878, column: 13, scope: !3533)
!3611 = !DILocation(line: 879, column: 13, scope: !3533)
!3612 = !DILocation(line: 873, column: 9, scope: !3533)
!3613 = !DILocation(line: 874, column: 36, scope: !3533)
!3614 = !DILocation(line: 874, column: 42, scope: !3533)
!3615 = !DILocation(line: 874, column: 13, scope: !3533)
!3616 = !DILocation(line: 875, column: 13, scope: !3533)
!3617 = !DILocation(line: 876, column: 20, scope: !3533)
!3618 = !DILocation(line: 876, column: 13, scope: !3533)
!3619 = distinct !DISubprogram(name: "heapsort<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort17h702116c078140a2cE", scope: !1120, file: !2246, line: 249, type: !2247, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3637, retainedNodes: !3620)
!3620 = !{!3621, !3622, !3623, !3629, !3631, !3633, !3635}
!3621 = !DILocalVariable(name: "v", arg: 1, scope: !3619, file: !2246, line: 249, type: !334)
!3622 = !DILocalVariable(name: "is_less", arg: 2, scope: !3619, file: !2246, line: 249, type: !1090)
!3623 = !DILocalVariable(name: "sift_down", scope: !3624, file: !2246, line: 254, type: !3625, align: 8)
!3624 = distinct !DILexicalBlock(scope: !3619, file: !2246, line: 254, column: 5)
!3625 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !3626, file: !2, size: 64, align: 64, elements: !3627, templateParams: !24, identifier: "546fbdaf41fe6054613a49eee1503ac9")
!3626 = !DINamespace(name: "heapsort", scope: !1120)
!3627 = !{!3628}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !3625, file: !2, baseType: !1089, size: 64, align: 64)
!3629 = !DILocalVariable(name: "iter", scope: !3630, file: !2246, line: 282, type: !2346, align: 8)
!3630 = distinct !DILexicalBlock(scope: !3624, file: !2246, line: 282, column: 5)
!3631 = !DILocalVariable(name: "i", scope: !3632, file: !2246, line: 282, type: !9, align: 8)
!3632 = distinct !DILexicalBlock(scope: !3630, file: !2246, line: 282, column: 37)
!3633 = !DILocalVariable(name: "iter", scope: !3634, file: !2246, line: 287, type: !2346, align: 8)
!3634 = distinct !DILexicalBlock(scope: !3624, file: !2246, line: 287, column: 5)
!3635 = !DILocalVariable(name: "i", scope: !3636, file: !2246, line: 287, type: !9, align: 8)
!3636 = distinct !DILexicalBlock(scope: !3634, file: !2246, line: 287, column: 33)
!3637 = !{!190, !3638}
!3638 = !DITemplateTypeParameter(name: "F", type: !1090)
!3639 = !DILocation(line: 249, column: 23, scope: !3619)
!3640 = !DILocation(line: 249, column: 36, scope: !3619)
!3641 = !DILocation(line: 254, column: 9, scope: !3624)
!3642 = !DILocation(line: 282, column: 14, scope: !3630)
!3643 = !DILocation(line: 287, column: 14, scope: !3634)
!3644 = !DILocation(line: 254, column: 25, scope: !3619)
!3645 = !DILocation(line: 282, column: 18, scope: !3624)
!3646 = !DILocation(line: 282, column: 14, scope: !3624)
!3647 = !DILocation(line: 282, column: 5, scope: !3630)
!3648 = !DILocation(line: 287, column: 14, scope: !3624)
!3649 = !DILocation(line: 287, column: 5, scope: !3634)
!3650 = !DILocation(line: 282, column: 9, scope: !3630)
!3651 = !DILocation(line: 282, column: 9, scope: !3632)
!3652 = !DILocation(line: 283, column: 9, scope: !3632)
!3653 = !DILocation(line: 291, column: 2, scope: !3619)
!3654 = !DILocation(line: 287, column: 9, scope: !3634)
!3655 = !DILocation(line: 287, column: 9, scope: !3636)
!3656 = !DILocation(line: 288, column: 9, scope: !3636)
!3657 = !DILocation(line: 289, column: 26, scope: !3636)
!3658 = !DILocation(line: 289, column: 24, scope: !3636)
!3659 = !DILocation(line: 289, column: 9, scope: !3636)
!3660 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hed9cd11bc89823d9E", scope: !3626, file: !2246, line: 254, type: !3661, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3637, retainedNodes: !3664)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{null, !3663, !334, !9}
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::heapsort::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !3625, size: 64, align: 64, dwarfAddressSpace: 0)
!3664 = !{!3665, !3666, !3667, !3668}
!3665 = !DILocalVariable(name: "v", arg: 2, scope: !3660, file: !2246, line: 254, type: !334)
!3666 = !DILocalVariable(name: "node", arg: 3, scope: !3660, file: !2246, line: 254, type: !9)
!3667 = !DILocalVariable(name: "is_less", scope: !3660, file: !2246, line: 249, type: !1090, align: 8)
!3668 = !DILocalVariable(name: "child", scope: !3669, file: !2246, line: 257, type: !9, align: 8)
!3669 = distinct !DILexicalBlock(scope: !3660, file: !2246, line: 257, column: 13)
!3670 = !DILocation(line: 249, column: 40, scope: !3660)
!3671 = !DILocation(line: 254, column: 26, scope: !3660)
!3672 = !DILocation(line: 254, column: 39, scope: !3660)
!3673 = !DILocation(line: 257, column: 17, scope: !3669)
!3674 = !DILocation(line: 255, column: 9, scope: !3660)
!3675 = !DILocation(line: 257, column: 33, scope: !3660)
!3676 = !DILocation(line: 257, column: 29, scope: !3660)
!3677 = !DILocation(line: 258, column: 16, scope: !3669)
!3678 = !DILocation(line: 263, column: 16, scope: !3669)
!3679 = !DILocation(line: 279, column: 6, scope: !3660)
!3680 = !DILocation(line: 271, column: 17, scope: !3669)
!3681 = !DILocation(line: 271, column: 28, scope: !3669)
!3682 = !DILocation(line: 271, column: 26, scope: !3669)
!3683 = !DILocation(line: 267, column: 26, scope: !3669)
!3684 = !DILocation(line: 267, column: 37, scope: !3669)
!3685 = !DILocation(line: 267, column: 35, scope: !3669)
!3686 = !DILocation(line: 267, column: 34, scope: !3669)
!3687 = !DILocation(line: 267, column: 48, scope: !3669)
!3688 = !DILocation(line: 267, column: 46, scope: !3669)
!3689 = !DILocation(line: 267, column: 45, scope: !3669)
!3690 = !DILocation(line: 267, column: 17, scope: !3669)
!3691 = !DILocation(line: 263, column: 13, scope: !3669)
!3692 = !DILocation(line: 271, column: 25, scope: !3669)
!3693 = !DILocation(line: 271, column: 38, scope: !3669)
!3694 = !DILocation(line: 271, column: 36, scope: !3669)
!3695 = !DILocation(line: 271, column: 35, scope: !3669)
!3696 = !DILocation(line: 271, column: 16, scope: !3669)
!3697 = !DILocation(line: 276, column: 20, scope: !3669)
!3698 = !DILocation(line: 276, column: 26, scope: !3669)
!3699 = !DILocation(line: 276, column: 13, scope: !3669)
!3700 = !DILocation(line: 277, column: 20, scope: !3669)
!3701 = !DILocation(line: 277, column: 13, scope: !3669)
!3702 = distinct !DISubprogram(name: "partition<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9partition17h0f3cc3bbc0a537a0E", scope: !1120, file: !2246, line: 560, type: !3703, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !3705)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!1008, !334, !9, !1090}
!3705 = !{!3706, !3707, !3708, !3709, !3711, !3712, !3714, !3715, !3717, !3719, !3721, !3723, !3725}
!3706 = !DILocalVariable(name: "v", arg: 1, scope: !3702, file: !2246, line: 560, type: !334)
!3707 = !DILocalVariable(name: "pivot", arg: 2, scope: !3702, file: !2246, line: 560, type: !9)
!3708 = !DILocalVariable(name: "is_less", arg: 3, scope: !3702, file: !2246, line: 560, type: !1090)
!3709 = !DILocalVariable(name: "mid", scope: !3710, file: !2246, line: 564, type: !9, align: 8)
!3710 = distinct !DILexicalBlock(scope: !3702, file: !2246, line: 564, column: 5)
!3711 = !DILocalVariable(name: "was_partitioned", scope: !3710, file: !2246, line: 564, type: !401, align: 1)
!3712 = !DILocalVariable(name: "pivot", scope: !3713, file: !2246, line: 567, type: !334, align: 8)
!3713 = distinct !DILexicalBlock(scope: !3702, file: !2246, line: 567, column: 9)
!3714 = !DILocalVariable(name: "v", scope: !3713, file: !2246, line: 567, type: !334, align: 8)
!3715 = !DILocalVariable(name: "pivot", scope: !3716, file: !2246, line: 568, type: !945, align: 8)
!3716 = distinct !DILexicalBlock(scope: !3713, file: !2246, line: 568, column: 9)
!3717 = !DILocalVariable(name: "tmp", scope: !3718, file: !2246, line: 574, type: !625, align: 8)
!3718 = distinct !DILexicalBlock(scope: !3716, file: !2246, line: 574, column: 9)
!3719 = !DILocalVariable(name: "_pivot_guard", scope: !3720, file: !2246, line: 575, type: !1119, align: 8)
!3720 = distinct !DILexicalBlock(scope: !3718, file: !2246, line: 575, column: 9)
!3721 = !DILocalVariable(name: "pivot", scope: !3722, file: !2246, line: 576, type: !12, align: 8)
!3722 = distinct !DILexicalBlock(scope: !3720, file: !2246, line: 576, column: 9)
!3723 = !DILocalVariable(name: "l", scope: !3724, file: !2246, line: 579, type: !9, align: 8)
!3724 = distinct !DILexicalBlock(scope: !3722, file: !2246, line: 579, column: 9)
!3725 = !DILocalVariable(name: "r", scope: !3726, file: !2246, line: 580, type: !9, align: 8)
!3726 = distinct !DILexicalBlock(scope: !3724, file: !2246, line: 580, column: 9)
!3727 = !DILocation(line: 560, column: 20, scope: !3702)
!3728 = !DILocation(line: 560, column: 33, scope: !3702)
!3729 = !DILocation(line: 560, column: 47, scope: !3702)
!3730 = !DILocation(line: 574, column: 13, scope: !3718)
!3731 = !DILocation(line: 575, column: 13, scope: !3720)
!3732 = !DILocation(line: 579, column: 13, scope: !3724)
!3733 = !DILocation(line: 580, column: 13, scope: !3726)
!3734 = !DILocation(line: 566, column: 9, scope: !3702)
!3735 = !DILocation(line: 567, column: 26, scope: !3702)
!3736 = !DILocation(line: 567, column: 14, scope: !3702)
!3737 = !DILocation(line: 567, column: 14, scope: !3713)
!3738 = !DILocation(line: 567, column: 21, scope: !3702)
!3739 = !DILocation(line: 567, column: 21, scope: !3713)
!3740 = !DILocation(line: 568, column: 26, scope: !3713)
!3741 = !DILocation(line: 568, column: 21, scope: !3713)
!3742 = !DILocation(line: 568, column: 13, scope: !3716)
!3743 = !DILocation(line: 574, column: 51, scope: !3716)
!3744 = !DILocation(line: 70, column: 22, scope: !981, inlinedAt: !3745)
!3745 = distinct !DILocation(line: 574, column: 19, scope: !3716)
!3746 = !DILocation(line: 71, column: 9, scope: !981, inlinedAt: !3745)
!3747 = !DILocation(line: 152, column: 14, scope: !2283, inlinedAt: !3748)
!3748 = distinct !DILocation(line: 575, column: 50, scope: !3718)
!3749 = !DILocation(line: 575, column: 28, scope: !3718)
!3750 = !DILocation(line: 152, column: 14, scope: !2283, inlinedAt: !3751)
!3751 = distinct !DILocation(line: 576, column: 22, scope: !3720)
!3752 = !DILocation(line: 576, column: 21, scope: !3720)
!3753 = !DILocation(line: 576, column: 13, scope: !3722)
!3754 = !DILocation(line: 579, column: 21, scope: !3722)
!3755 = !DILocation(line: 580, column: 21, scope: !3724)
!3756 = !DILocation(line: 588, column: 13, scope: !3726)
!3757 = !DILocation(line: 588, column: 19, scope: !3726)
!3758 = !DILocation(line: 588, column: 23, scope: !3726)
!3759 = !DILocation(line: 588, column: 52, scope: !3726)
!3760 = !DILocation(line: 588, column: 36, scope: !3726)
!3761 = !DILocation(line: 588, column: 28, scope: !3726)
!3762 = !DILocation(line: 593, column: 19, scope: !3726)
!3763 = !DILocation(line: 593, column: 23, scope: !3726)
!3764 = !DILocation(line: 589, column: 17, scope: !3726)
!3765 = !DILocation(line: 593, column: 53, scope: !3726)
!3766 = !DILocation(line: 593, column: 37, scope: !3726)
!3767 = !DILocation(line: 593, column: 29, scope: !3726)
!3768 = !DILocation(line: 593, column: 28, scope: !3726)
!3769 = !DILocation(line: 598, column: 10, scope: !3726)
!3770 = !DILocation(line: 598, column: 41, scope: !3726)
!3771 = !DILocation(line: 598, column: 44, scope: !3726)
!3772 = !DILocation(line: 598, column: 39, scope: !3726)
!3773 = !DILocation(line: 598, column: 14, scope: !3726)
!3774 = !DILocation(line: 594, column: 17, scope: !3726)
!3775 = !DILocation(line: 593, column: 13, scope: !3726)
!3776 = !DILocation(line: 598, column: 65, scope: !3726)
!3777 = !DILocation(line: 598, column: 70, scope: !3726)
!3778 = !DILocation(line: 598, column: 9, scope: !3726)
!3779 = !DILocation(line: 603, column: 5, scope: !3718)
!3780 = !DILocation(line: 564, column: 10, scope: !3702)
!3781 = !DILocation(line: 564, column: 10, scope: !3710)
!3782 = !DILocation(line: 564, column: 15, scope: !3702)
!3783 = !DILocation(line: 564, column: 15, scope: !3710)
!3784 = !DILocation(line: 606, column: 5, scope: !3710)
!3785 = !DILocation(line: 608, column: 5, scope: !3710)
!3786 = !DILocation(line: 609, column: 2, scope: !3702)
!3787 = distinct !DISubprogram(name: "quicksort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9quicksort17h3f0b1e0165be5174E", scope: !1120, file: !2246, line: 885, type: !3788, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2262, retainedNodes: !3790)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{null, !334, !1091}
!3790 = !{!3791, !3792, !3793}
!3791 = !DILocalVariable(name: "v", arg: 1, scope: !3787, file: !2246, line: 885, type: !334)
!3792 = !DILocalVariable(name: "is_less", arg: 2, scope: !3787, file: !2246, line: 885, type: !1091)
!3793 = !DILocalVariable(name: "limit", scope: !3794, file: !2246, line: 895, type: !27, align: 4)
!3794 = distinct !DILexicalBlock(scope: !3787, file: !2246, line: 895, column: 5)
!3795 = !DILocation(line: 885, column: 24, scope: !3787)
!3796 = !DILocation(line: 885, column: 37, scope: !3787)
!3797 = !DILocation(line: 890, column: 8, scope: !3787)
!3798 = !DILocalVariable(name: "self", arg: 1, scope: !3799, file: !991, line: 148, type: !9)
!3799 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13leading_zeros17ha32b102d8d70271fE", scope: !992, file: !991, line: 148, type: !1175, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3800)
!3800 = !{!3798}
!3801 = !DILocation(line: 148, column: 36, scope: !3799, inlinedAt: !3802)
!3802 = distinct !DILocation(line: 895, column: 31, scope: !3787)
!3803 = !DILocation(line: 149, column: 13, scope: !3799, inlinedAt: !3802)
!3804 = !DILocation(line: 895, column: 17, scope: !3787)
!3805 = !DILocation(line: 898, column: 1, scope: !3787)
!3806 = !DILocation(line: 898, column: 2, scope: !3787)
!3807 = !DILocation(line: 895, column: 9, scope: !3794)
!3808 = !DILocation(line: 897, column: 30, scope: !3794)
!3809 = !DILocation(line: 897, column: 5, scope: !3794)
!3810 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha9e84043736c1da0E", scope: !3811, file: !163, line: 17, type: !3812, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1864, retainedNodes: !3814)
!3811 = !DINamespace(name: "{impl#0}", scope: !165)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!303, !303, !174, !307}
!3814 = !{!3815, !3816}
!3815 = !DILocalVariable(name: "self", arg: 1, scope: !3810, file: !163, line: 17, type: !303)
!3816 = !DILocalVariable(name: "index", arg: 2, scope: !3810, file: !163, line: 17, type: !174)
!3817 = !DILocation(line: 17, column: 14, scope: !3810)
!3818 = !DILocation(line: 17, column: 21, scope: !3810)
!3819 = !DILocation(line: 18, column: 9, scope: !3810)
!3820 = !DILocation(line: 19, column: 6, scope: !3810)
!3821 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeToInclusive<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h021e02b7974eccafE", scope: !3822, file: !163, line: 28, type: !3823, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3828, retainedNodes: !3825)
!3822 = !DINamespace(name: "{impl#1}", scope: !165)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{!334, !334, !416, !307}
!3825 = !{!3826, !3827}
!3826 = !DILocalVariable(name: "self", arg: 1, scope: !3821, file: !163, line: 28, type: !334)
!3827 = !DILocalVariable(name: "index", arg: 2, scope: !3821, file: !163, line: 28, type: !416)
!3828 = !{!190, !3829}
!3829 = !DITemplateTypeParameter(name: "I", type: !416)
!3830 = !DILocation(line: 28, column: 18, scope: !3821)
!3831 = !DILocation(line: 28, column: 29, scope: !3821)
!3832 = !DILocation(line: 29, column: 9, scope: !3821)
!3833 = !DILocation(line: 30, column: 6, scope: !3821)
!3834 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h0704c58ab2009668E", scope: !3822, file: !163, line: 28, type: !3835, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1864, retainedNodes: !3837)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{!334, !334, !174, !307}
!3837 = !{!3838, !3839}
!3838 = !DILocalVariable(name: "self", arg: 1, scope: !3834, file: !163, line: 28, type: !334)
!3839 = !DILocalVariable(name: "index", arg: 2, scope: !3834, file: !163, line: 28, type: !174)
!3840 = !DILocation(line: 28, column: 18, scope: !3834)
!3841 = !DILocation(line: 28, column: 29, scope: !3834)
!3842 = !DILocation(line: 29, column: 9, scope: !3834)
!3843 = !DILocation(line: 30, column: 6, scope: !3834)
!3844 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1d91165492a26d83E", scope: !3822, file: !163, line: 28, type: !3845, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3850, retainedNodes: !3847)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{!334, !334, !367, !307}
!3847 = !{!3848, !3849}
!3848 = !DILocalVariable(name: "self", arg: 1, scope: !3844, file: !163, line: 28, type: !334)
!3849 = !DILocalVariable(name: "index", arg: 2, scope: !3844, file: !163, line: 28, type: !367)
!3850 = !{!190, !3851}
!3851 = !DITemplateTypeParameter(name: "I", type: !367)
!3852 = !DILocation(line: 28, column: 18, scope: !3844)
!3853 = !DILocation(line: 28, column: 29, scope: !3844)
!3854 = !DILocation(line: 29, column: 9, scope: !3844)
!3855 = !DILocation(line: 30, column: 6, scope: !3844)
!3856 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56804621d2071613E", scope: !3822, file: !163, line: 28, type: !3857, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3862, retainedNodes: !3859)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{!334, !334, !353, !307}
!3859 = !{!3860, !3861}
!3860 = !DILocalVariable(name: "self", arg: 1, scope: !3856, file: !163, line: 28, type: !334)
!3861 = !DILocalVariable(name: "index", arg: 2, scope: !3856, file: !163, line: 28, type: !353)
!3862 = !{!190, !3863}
!3863 = !DITemplateTypeParameter(name: "I", type: !353)
!3864 = !DILocation(line: 28, column: 18, scope: !3856)
!3865 = !DILocation(line: 28, column: 29, scope: !3856)
!3866 = !DILocation(line: 29, column: 9, scope: !3856)
!3867 = !DILocation(line: 30, column: 6, scope: !3856)
!3868 = distinct !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h416681f6f5421894E", scope: !3870, file: !3869, line: 969, type: !3881, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1476, retainedNodes: !3883)
!3869 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "7fe636643511270d6f7e365434dea895")
!3870 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<bootloader::bootinfo::TlsTemplate>", scope: !459, file: !2, size: 256, align: 64, elements: !3871, templateParams: !24, identifier: "970142dc6a0671c37033b59980077c01")
!3871 = !{!3872}
!3872 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3870, file: !2, size: 256, align: 64, elements: !3873, templateParams: !24, identifier: "31218e318988647f10a3779fde4e33b1", discriminator: !3880)
!3873 = !{!3874, !3876}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3872, file: !2, baseType: !3875, size: 256, align: 64, extraData: i64 0)
!3875 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3870, file: !2, size: 256, align: 64, elements: !24, templateParams: !1476, identifier: "52349566d12e0aa884fdc68f22189d5")
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3872, file: !2, baseType: !3877, size: 256, align: 64, extraData: i64 1)
!3877 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3870, file: !2, size: 256, align: 64, elements: !3878, templateParams: !1476, identifier: "d3b2ff4f67e1cc9458fe02f0b70b60d9")
!3878 = !{!3879}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3877, file: !2, baseType: !109, size: 192, align: 64, offset: 64)
!3880 = !DIDerivedType(tag: DW_TAG_member, scope: !3870, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!109, !3870, !109}
!3883 = !{!3884, !3885, !3886}
!3884 = !DILocalVariable(name: "self", arg: 1, scope: !3868, file: !3869, line: 969, type: !3870)
!3885 = !DILocalVariable(name: "default", arg: 2, scope: !3868, file: !3869, line: 969, type: !109)
!3886 = !DILocalVariable(name: "x", scope: !3887, file: !3869, line: 971, type: !109, align: 8)
!3887 = distinct !DILexicalBlock(scope: !3868, file: !3869, line: 971, column: 13)
!3888 = !DILocation(line: 969, column: 22, scope: !3868)
!3889 = !DILocation(line: 969, column: 28, scope: !3868)
!3890 = !DILocation(line: 971, column: 18, scope: !3887)
!3891 = !DILocation(line: 970, column: 15, scope: !3868)
!3892 = !DILocation(line: 970, column: 9, scope: !3868)
!3893 = !DILocation(line: 972, column: 21, scope: !3868)
!3894 = !DILocation(line: 971, column: 18, scope: !3868)
!3895 = !DILocation(line: 971, column: 24, scope: !3887)
!3896 = !DILocation(line: 971, column: 24, scope: !3868)
!3897 = !DILocation(line: 974, column: 5, scope: !3868)
!3898 = !DILocation(line: 974, column: 6, scope: !3868)
!3899 = distinct !DISubprogram(name: "eq", linkageName: "_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc945fd9699462719E", scope: !3900, file: !707, line: 330, type: !3901, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3904)
!3900 = !DINamespace(name: "{impl#7}", scope: !149)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!401, !3903, !3903}
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cmp::Ordering", baseType: !148, size: 64, align: 64, dwarfAddressSpace: 0)
!3904 = !{!3905, !3906, !3907, !3909}
!3905 = !DILocalVariable(name: "self", arg: 1, scope: !3899, file: !707, line: 330, type: !3903)
!3906 = !DILocalVariable(name: "other", arg: 2, scope: !3899, file: !707, line: 330, type: !3903)
!3907 = !DILocalVariable(name: "__self_tag", scope: !3908, file: !707, line: 330, type: !150, align: 1)
!3908 = distinct !DILexicalBlock(scope: !3899, file: !707, line: 330, column: 23)
!3909 = !DILocalVariable(name: "__arg1_tag", scope: !3910, file: !707, line: 330, type: !150, align: 1)
!3910 = distinct !DILexicalBlock(scope: !3908, file: !707, line: 330, column: 23)
!3911 = !DILocation(line: 330, column: 23, scope: !3899)
!3912 = !DILocation(line: 330, column: 23, scope: !3908)
!3913 = !DILocation(line: 330, column: 23, scope: !3910)
!3914 = !DILocation(line: 330, column: 32, scope: !3899)
!3915 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he62b74e3d16636bcE", scope: !3917, file: !3916, line: 271, type: !3920, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3924, retainedNodes: !3922)
!3916 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "a39b82fc812ed30b3e6ebda5fbc56490")
!3917 = !DINamespace(name: "{impl#0}", scope: !3918)
!3918 = !DINamespace(name: "collect", scope: !3919)
!3919 = !DINamespace(name: "traits", scope: !2349)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{!774, !774}
!3922 = !{!3923}
!3923 = !DILocalVariable(name: "self", arg: 1, scope: !3915, file: !3916, line: 271, type: !774)
!3924 = !{!797}
!3925 = !DILocation(line: 271, column: 18, scope: !3915)
!3926 = !DILocation(line: 273, column: 6, scope: !3915)
!3927 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h1d6d7b937a203b74E", scope: !3928, file: !163, line: 227, type: !3929, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !3931)
!3928 = !DINamespace(name: "{impl#2}", scope: !165)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!207, !9, !169}
!3931 = !{!3932, !3933, !3934}
!3932 = !DILocalVariable(name: "self", arg: 1, scope: !3927, file: !163, line: 227, type: !9)
!3933 = !DILocalVariable(name: "slice", arg: 2, scope: !3927, file: !163, line: 227, type: !169)
!3934 = !DILocalVariable(name: "this", scope: !3935, file: !163, line: 228, type: !9, align: 8)
!3935 = distinct !DILexicalBlock(scope: !3927, file: !163, line: 228, column: 9)
!3936 = !DILocation(line: 227, column: 29, scope: !3927)
!3937 = !DILocation(line: 228, column: 13, scope: !3935)
!3938 = !DILocation(line: 227, column: 35, scope: !3927)
!3939 = !DILocation(line: 234, column: 13, scope: !3935)
!3940 = !DILocation(line: 238, column: 13, scope: !3935)
!3941 = !DILocation(line: 915, column: 29, scope: !200, inlinedAt: !3942)
!3942 = distinct !DILocation(line: 238, column: 13, scope: !3935)
!3943 = !DILocation(line: 915, column: 35, scope: !200, inlinedAt: !3942)
!3944 = !DILocation(line: 927, column: 13, scope: !200, inlinedAt: !3942)
!3945 = !DILocation(line: 240, column: 6, scope: !3927)
!3946 = !DILocalVariable(name: "this", arg: 1, scope: !3947, file: !218, line: 2510, type: !9)
!3947 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hede7f674f02cd84aE", scope: !3948, file: !218, line: 2510, type: !3949, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !3951)
!3948 = !DINamespace(name: "get_unchecked", scope: !3928)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{null, !9, !169}
!3951 = !{!3946, !3952}
!3952 = !DILocalVariable(name: "slice", arg: 2, scope: !3947, file: !218, line: 2510, type: !169)
!3953 = !DILocation(line: 2510, column: 39, scope: !3947, inlinedAt: !3954)
!3954 = distinct !DILocation(line: 234, column: 13, scope: !3935)
!3955 = !DILocation(line: 236, column: 63, scope: !3956, inlinedAt: !3954)
!3956 = !DILexicalBlockFile(scope: !3947, file: !163, discriminator: 0)
!3957 = !DILocation(line: 236, column: 56, scope: !3956, inlinedAt: !3954)
!3958 = !DILocation(line: 2511, column: 20, scope: !3947, inlinedAt: !3954)
!3959 = !DILocation(line: 2513, column: 21, scope: !3947, inlinedAt: !3954)
!3960 = distinct !DISubprogram(name: "drop<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h77dec7ed114c43caE", scope: !3961, file: !2246, line: 23, type: !3962, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !3965)
!3961 = !DINamespace(name: "{impl#0}", scope: !1120)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{null, !3964}
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1119, size: 64, align: 64, dwarfAddressSpace: 0)
!3965 = !{!3966}
!3966 = !DILocalVariable(name: "self", arg: 1, scope: !3960, file: !2246, line: 23, type: !3964)
!3967 = !DILocation(line: 23, column: 13, scope: !3960)
!3968 = !DILocation(line: 28, column: 38, scope: !3960)
!3969 = !DILocation(line: 28, column: 48, scope: !3960)
!3970 = !DILocation(line: 28, column: 13, scope: !3960)
!3971 = !DILocation(line: 30, column: 6, scope: !3960)
!3972 = distinct !DISubprogram(name: "next<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdd40061f16302badE", scope: !3974, file: !3973, line: 124, type: !3975, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !3978)
!3973 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "818adf3ab797f15644571b14adcdd299")
!3974 = !DINamespace(name: "{impl#181}", scope: !775)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!3494, !3977}
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !774, size: 64, align: 64, dwarfAddressSpace: 0)
!3978 = !{!3979}
!3979 = !DILocalVariable(name: "self", arg: 1, scope: !3972, file: !3973, line: 124, type: !3977)
!3980 = !DILocation(line: 124, column: 21, scope: !3972)
!3981 = !DILocation(line: 132, column: 29, scope: !3972)
!3982 = !DILocalVariable(name: "self", arg: 1, scope: !3983, file: !1644, line: 325, type: !778)
!3983 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha4d717d9905f0733E", scope: !778, file: !1644, line: 325, type: !3984, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !3986)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!261, !778}
!3986 = !{!3982}
!3987 = !DILocation(line: 325, column: 25, scope: !3983, inlinedAt: !3988)
!3988 = distinct !DILocation(line: 132, column: 29, scope: !3972)
!3989 = !DILocation(line: 132, column: 28, scope: !3972)
!3990 = !DILocation(line: 132, column: 21, scope: !3972)
!3991 = !DILocation(line: 133, column: 24, scope: !3972)
!3992 = !DILocation(line: 136, column: 24, scope: !3972)
!3993 = !DILocation(line: 325, column: 25, scope: !3983, inlinedAt: !3994)
!3994 = distinct !DILocation(line: 136, column: 24, scope: !3972)
!3995 = !DILocation(line: 134, column: 33, scope: !3972)
!3996 = !DILocation(line: 134, column: 32, scope: !3972)
!3997 = !DILocation(line: 134, column: 25, scope: !3972)
!3998 = !DILocation(line: 133, column: 21, scope: !3972)
!3999 = !DILocalVariable(name: "self", arg: 1, scope: !4000, file: !3973, line: 75, type: !3977)
!4000 = distinct !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h4131fdaafea3fdbcE", scope: !774, file: !3973, line: 75, type: !4001, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !4003)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!207, !3977, !9}
!4003 = !{!3999, !4004, !4005}
!4004 = !DILocalVariable(name: "offset", arg: 2, scope: !4000, file: !3973, line: 75, type: !9)
!4005 = !DILocalVariable(name: "old", scope: !4006, file: !3973, line: 80, type: !261, align: 8)
!4006 = distinct !DILexicalBlock(scope: !4000, file: !3973, line: 80, column: 21)
!4007 = !DILocation(line: 75, column: 38, scope: !4000, inlinedAt: !4008)
!4008 = distinct !DILocation(line: 139, column: 30, scope: !3972)
!4009 = !DILocation(line: 75, column: 49, scope: !4000, inlinedAt: !4008)
!4010 = !DILocation(line: 80, column: 31, scope: !4000, inlinedAt: !4008)
!4011 = !DILocation(line: 325, column: 25, scope: !3983, inlinedAt: !4012)
!4012 = distinct !DILocation(line: 80, column: 31, scope: !4000, inlinedAt: !4008)
!4013 = !DILocation(line: 80, column: 25, scope: !4006, inlinedAt: !4008)
!4014 = !DILocation(line: 83, column: 64, scope: !4006, inlinedAt: !4008)
!4015 = !DILocation(line: 325, column: 25, scope: !3983, inlinedAt: !4016)
!4016 = distinct !DILocation(line: 83, column: 64, scope: !4006, inlinedAt: !4008)
!4017 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !4018)
!4018 = distinct !DILocation(line: 83, column: 64, scope: !4006, inlinedAt: !4008)
!4019 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !4018)
!4020 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !4018)
!4021 = !DILocation(line: 83, column: 41, scope: !4006, inlinedAt: !4008)
!4022 = !DILocation(line: 83, column: 21, scope: !4006, inlinedAt: !4008)
!4023 = !DILocation(line: 84, column: 21, scope: !4006, inlinedAt: !4008)
!4024 = !DILocation(line: 86, column: 14, scope: !4000, inlinedAt: !4008)
!4025 = !DILocation(line: 139, column: 25, scope: !3972)
!4026 = !DILocation(line: 136, column: 21, scope: !3972)
!4027 = !DILocation(line: 137, column: 25, scope: !3972)
!4028 = !DILocation(line: 142, column: 14, scope: !3972)
!4029 = distinct !DISubprogram(name: "position<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17hcc2d0912bee039a4E", scope: !3974, file: !3973, line: 278, type: !4030, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4044, retainedNodes: !4033)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!458, !3977, !4032}
!4032 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !1098, file: !2, align: 8, elements: !24, identifier: "7d26408b4e69961ffc27c8ba98a50fd")
!4033 = !{!4034, !4035, !4036, !4038, !4040, !4042}
!4034 = !DILocalVariable(name: "self", arg: 1, scope: !4029, file: !3973, line: 278, type: !3977)
!4035 = !DILocalVariable(name: "predicate", arg: 2, scope: !4029, file: !3973, line: 278, type: !4032)
!4036 = !DILocalVariable(name: "n", scope: !4037, file: !3973, line: 282, type: !9, align: 8)
!4037 = distinct !DILexicalBlock(scope: !4029, file: !3973, line: 282, column: 17)
!4038 = !DILocalVariable(name: "start", scope: !4039, file: !3973, line: 282, type: !778, align: 8)
!4039 = distinct !DILexicalBlock(scope: !4029, file: !3973, line: 16, column: 9)
!4040 = !DILocalVariable(name: "i", scope: !4041, file: !3973, line: 283, type: !9, align: 8)
!4041 = distinct !DILexicalBlock(scope: !4037, file: !3973, line: 283, column: 17)
!4042 = !DILocalVariable(name: "x", scope: !4043, file: !3973, line: 284, type: !12, align: 8)
!4043 = distinct !DILexicalBlock(scope: !4041, file: !3973, line: 284, column: 49)
!4044 = !{!190, !4045}
!4045 = !DITemplateTypeParameter(name: "P", type: !4032)
!4046 = !DILocation(line: 278, column: 28, scope: !4029)
!4047 = !DILocation(line: 278, column: 39, scope: !4029)
!4048 = !DILocation(line: 282, column: 21, scope: !4037)
!4049 = !DILocation(line: 283, column: 21, scope: !4041)
!4050 = !DILocation(line: 282, column: 25, scope: !4029)
!4051 = !DILocation(line: 282, column: 25, scope: !4039)
!4052 = !DILocation(line: 325, column: 25, scope: !3983, inlinedAt: !4053)
!4053 = distinct !DILocation(line: 282, column: 25, scope: !4039)
!4054 = !DILocation(line: 203, column: 17, scope: !529, inlinedAt: !4055)
!4055 = distinct !DILocation(line: 282, column: 25, scope: !4039)
!4056 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !4057)
!4057 = distinct !DILocation(line: 207, column: 33, scope: !529, inlinedAt: !4055)
!4058 = !DILocation(line: 207, column: 18, scope: !529, inlinedAt: !4055)
!4059 = !DILocation(line: 325, column: 25, scope: !3983, inlinedAt: !4060)
!4060 = distinct !DILocation(line: 282, column: 25, scope: !4039)
!4061 = !DILocation(line: 209, column: 17, scope: !3364, inlinedAt: !4062)
!4062 = distinct !DILocation(line: 282, column: 25, scope: !4039)
!4063 = !DILocation(line: 57, column: 26, scope: !1257, inlinedAt: !4064)
!4064 = distinct !DILocation(line: 213, column: 33, scope: !3364, inlinedAt: !4062)
!4065 = !DILocation(line: 213, column: 18, scope: !3364, inlinedAt: !4062)
!4066 = !DILocalVariable(name: "self", arg: 1, scope: !4067, file: !991, line: 1229, type: !9)
!4067 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h8d412c38835ed4a6E", scope: !992, file: !991, line: 1229, type: !4068, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4070)
!4068 = !DISubroutineType(types: !4069)
!4069 = !{!9, !9, !9}
!4070 = !{!4066, !4071}
!4071 = !DILocalVariable(name: "rhs", arg: 2, scope: !4067, file: !991, line: 1229, type: !9)
!4072 = !DILocation(line: 1229, column: 35, scope: !4067, inlinedAt: !4073)
!4073 = distinct !DILocation(line: 282, column: 25, scope: !4039)
!4074 = !DILocation(line: 1229, column: 41, scope: !4067, inlinedAt: !4073)
!4075 = !DILocation(line: 1230, column: 13, scope: !4067, inlinedAt: !4073)
!4076 = !DILocation(line: 283, column: 29, scope: !4037)
!4077 = !DILocation(line: 284, column: 17, scope: !4041)
!4078 = !DILocation(line: 284, column: 37, scope: !4043)
!4079 = !DILocation(line: 284, column: 27, scope: !4043)
!4080 = !DILocation(line: 284, column: 32, scope: !4043)
!4081 = !DILocation(line: 285, column: 24, scope: !4043)
!4082 = !DILocation(line: 293, column: 17, scope: !4041)
!4083 = !DILocation(line: 294, column: 13, scope: !4029)
!4084 = !DILocation(line: 294, column: 14, scope: !4029)
!4085 = !DILocation(line: 291, column: 21, scope: !4043)
!4086 = !DILocation(line: 288, column: 41, scope: !4043)
!4087 = !DILocation(line: 288, column: 45, scope: !4043)
!4088 = !DILocation(line: 288, column: 34, scope: !4043)
!4089 = !DILocation(line: 289, column: 37, scope: !4043)
!4090 = !DILocation(line: 289, column: 32, scope: !4043)
!4091 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h2616b9e7bdfdd501E", scope: !94, file: !4092, line: 20, type: !4093, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !24)
!4092 = !DIFile(filename: "src/bootinfo/memory_map.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "e5c49912468d9331b5d84640370affee")
!4093 = !DISubroutineType(types: !4094)
!4094 = !{!94}
!4095 = !DILocation(line: 22, column: 23, scope: !4091)
!4096 = !DILocation(line: 22, column: 22, scope: !4091)
!4097 = !DILocation(line: 21, column: 9, scope: !4091)
!4098 = !DILocation(line: 25, column: 6, scope: !4091)
!4099 = distinct !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h17a8d23eca39c97fE", scope: !94, file: !4092, line: 27, type: !4100, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4103)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{null, !4102, !13}
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4103 = !{!4104, !4105}
!4104 = !DILocalVariable(name: "self", arg: 1, scope: !4099, file: !4092, line: 27, type: !4102)
!4105 = !DILocalVariable(name: "region", arg: 2, scope: !4099, file: !4092, line: 27, type: !13)
!4106 = !DILocation(line: 27, column: 23, scope: !4099)
!4107 = !DILocation(line: 27, column: 34, scope: !4099)
!4108 = !DILocation(line: 29, column: 13, scope: !4099)
!4109 = !DILocation(line: 28, column: 9, scope: !4099)
!4110 = !DILocation(line: 32, column: 22, scope: !4099)
!4111 = !DILocation(line: 32, column: 9, scope: !4099)
!4112 = !DILocation(line: 33, column: 9, scope: !4099)
!4113 = !DILocation(line: 34, column: 9, scope: !4099)
!4114 = !DILocation(line: 35, column: 6, scope: !4099)
!4115 = distinct !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h26af0bced487670dE", scope: !94, file: !4092, line: 37, type: !4116, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4118)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{null, !4102}
!4118 = !{!4119, !4120}
!4119 = !DILocalVariable(name: "self", arg: 1, scope: !4115, file: !4092, line: 37, type: !4102)
!4120 = !DILocalVariable(name: "first_zero_index", scope: !4121, file: !4092, line: 58, type: !9, align: 8)
!4121 = distinct !DILexicalBlock(scope: !4115, file: !4092, line: 58, column: 94)
!4122 = !DILocation(line: 37, column: 17, scope: !4115)
!4123 = !DILocation(line: 40, column: 9, scope: !4115)
!4124 = !DILocation(line: 58, column: 41, scope: !4121)
!4125 = !DILocation(line: 58, column: 16, scope: !4121)
!4126 = !DILocation(line: 58, column: 21, scope: !4121)
!4127 = !DILocation(line: 59, column: 13, scope: !4121)
!4128 = !DILocation(line: 58, column: 9, scope: !4115)
!4129 = !DILocation(line: 61, column: 6, scope: !4115)
!4130 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h00af19674a3d0533E", scope: !1098, file: !4092, line: 40, type: !4131, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4133)
!4131 = !DISubroutineType(types: !4132)
!4132 = !{!148, !1096, !12, !12}
!4133 = !{!4134, !4135, !4136, !4138}
!4134 = !DILocalVariable(name: "r1", arg: 2, scope: !4130, file: !4092, line: 40, type: !12)
!4135 = !DILocalVariable(name: "r2", arg: 3, scope: !4130, file: !4092, line: 40, type: !12)
!4136 = !DILocalVariable(name: "ordering", scope: !4137, file: !4092, line: 46, type: !148, align: 1)
!4137 = distinct !DILexicalBlock(scope: !4130, file: !4092, line: 46, column: 17)
!4138 = !DILocalVariable(arg: 1, scope: !4130, file: !4092, line: 40, type: !1096)
!4139 = !DILocation(line: 40, column: 39, scope: !4130)
!4140 = !DILocation(line: 40, column: 40, scope: !4130)
!4141 = !DILocation(line: 40, column: 44, scope: !4130)
!4142 = !DILocation(line: 46, column: 21, scope: !4137)
!4143 = !DILocation(line: 41, column: 16, scope: !4130)
!4144 = !DILocation(line: 43, column: 23, scope: !4130)
!4145 = !DILocation(line: 42, column: 17, scope: !4130)
!4146 = !DILocation(line: 41, column: 13, scope: !4130)
!4147 = !DILocation(line: 57, column: 10, scope: !4130)
!4148 = !DILocation(line: 46, column: 32, scope: !4130)
!4149 = !DILocation(line: 51, column: 20, scope: !4137)
!4150 = !DILocation(line: 44, column: 17, scope: !4130)
!4151 = !DILocation(line: 43, column: 20, scope: !4130)
!4152 = !DILocation(line: 54, column: 21, scope: !4137)
!4153 = !DILocation(line: 51, column: 17, scope: !4137)
!4154 = !DILocation(line: 52, column: 21, scope: !4137)
!4155 = !DILocation(line: 52, column: 51, scope: !4137)
!4156 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h1b40a0ee33e7d25fE", scope: !1098, file: !4092, line: 58, type: !4157, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4160)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{!401, !4159, !12}
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}", baseType: !4032, size: 64, align: 64, dwarfAddressSpace: 0)
!4160 = !{!4161, !4162}
!4161 = !DILocalVariable(name: "r", arg: 2, scope: !4156, file: !4092, line: 58, type: !12)
!4162 = !DILocalVariable(arg: 1, scope: !4156, file: !4092, line: 58, type: !4159)
!4163 = !DILocation(line: 58, column: 70, scope: !4156)
!4164 = !DILocation(line: 58, column: 71, scope: !4156)
!4165 = !DILocation(line: 58, column: 74, scope: !4156)
!4166 = !DILocation(line: 58, column: 92, scope: !4156)
!4167 = distinct !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h2640bfcc0aedb196E", scope: !94, file: !4092, line: 63, type: !4168, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4171)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{!9, !4170}
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4171 = !{!4172}
!4172 = !DILocalVariable(name: "self", arg: 1, scope: !4167, file: !4092, line: 63, type: !4170)
!4173 = !DILocation(line: 63, column: 25, scope: !4167)
!4174 = !DILocation(line: 64, column: 9, scope: !4167)
!4175 = !DILocation(line: 65, column: 6, scope: !4167)
!4176 = distinct !DISubprogram(name: "deref", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17he740c87536ea809eE", scope: !4177, file: !4092, line: 71, type: !4178, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4180)
!4177 = !DINamespace(name: "{impl#1}", scope: !14)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{!303, !4170}
!4180 = !{!4181}
!4181 = !DILocalVariable(name: "self", arg: 1, scope: !4176, file: !4092, line: 71, type: !4170)
!4182 = !DILocation(line: 71, column: 14, scope: !4176)
!4183 = !DILocation(line: 72, column: 26, scope: !4176)
!4184 = !DILocation(line: 72, column: 23, scope: !4176)
!4185 = !DILocation(line: 72, column: 10, scope: !4176)
!4186 = !DILocation(line: 73, column: 6, scope: !4176)
!4187 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3bb7e4593bc89787E", scope: !4188, file: !4092, line: 77, type: !4189, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4191)
!4188 = !DINamespace(name: "{impl#2}", scope: !14)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!334, !4102}
!4191 = !{!4192, !4193}
!4192 = !DILocalVariable(name: "self", arg: 1, scope: !4187, file: !4092, line: 77, type: !4102)
!4193 = !DILocalVariable(name: "next_index", scope: !4194, file: !4092, line: 78, type: !9, align: 8)
!4194 = distinct !DILexicalBlock(scope: !4187, file: !4092, line: 78, column: 9)
!4195 = !DILocation(line: 77, column: 18, scope: !4187)
!4196 = !DILocation(line: 78, column: 26, scope: !4187)
!4197 = !DILocation(line: 78, column: 13, scope: !4194)
!4198 = !DILocation(line: 79, column: 27, scope: !4194)
!4199 = !DILocation(line: 79, column: 14, scope: !4194)
!4200 = !DILocation(line: 80, column: 6, scope: !4187)
!4201 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17hde0ce815ed20566bE", scope: !4202, file: !4092, line: 84, type: !4203, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4205)
!4202 = !DINamespace(name: "{impl#3}", scope: !14)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!431, !4170, !450}
!4205 = !{!4206, !4207}
!4206 = !DILocalVariable(name: "self", arg: 1, scope: !4201, file: !4092, line: 84, type: !4170)
!4207 = !DILocalVariable(name: "f", arg: 2, scope: !4201, file: !4092, line: 84, type: !450)
!4208 = !DILocation(line: 84, column: 12, scope: !4201)
!4209 = !DILocation(line: 84, column: 19, scope: !4201)
!4210 = !DILocation(line: 85, column: 9, scope: !4201)
!4211 = !DILocation(line: 85, column: 32, scope: !4201)
!4212 = !DILocation(line: 86, column: 6, scope: !4201)
!4213 = distinct !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h55ec63749d256b36E", scope: !13, file: !4092, line: 101, type: !4214, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !24)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!13}
!4216 = !DILocation(line: 103, column: 20, scope: !4213)
!4217 = !DILocation(line: 107, column: 26, scope: !4213)
!4218 = !DILocation(line: 102, column: 9, scope: !4213)
!4219 = !{i32 0, i32 15}
!4220 = !DILocation(line: 109, column: 6, scope: !4213)
!4221 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h20d4ca24d5d68a79E", scope: !19, file: !4092, line: 132, type: !4222, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4224)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{!19, !22, !22}
!4224 = !{!4225, !4226, !4227}
!4225 = !DILocalVariable(name: "start_addr", arg: 1, scope: !4221, file: !4092, line: 132, type: !22)
!4226 = !DILocalVariable(name: "end_addr", arg: 2, scope: !4221, file: !4092, line: 132, type: !22)
!4227 = !DILocalVariable(name: "last_byte", scope: !4228, file: !4092, line: 133, type: !22, align: 8)
!4228 = distinct !DILexicalBlock(scope: !4221, file: !4092, line: 133, column: 9)
!4229 = !DILocation(line: 132, column: 16, scope: !4221)
!4230 = !DILocation(line: 132, column: 33, scope: !4221)
!4231 = !DILocation(line: 133, column: 25, scope: !4221)
!4232 = !DILocation(line: 133, column: 13, scope: !4228)
!4233 = !DILocation(line: 135, column: 33, scope: !4228)
!4234 = !DILocation(line: 136, column: 31, scope: !4228)
!4235 = !DILocation(line: 134, column: 9, scope: !4228)
!4236 = !DILocation(line: 138, column: 6, scope: !4221)
!4237 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hc9037f00f6fb5391E", scope: !19, file: !4092, line: 141, type: !4238, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4241)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!401, !4240}
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4241 = !{!4242}
!4242 = !DILocalVariable(name: "self", arg: 1, scope: !4237, file: !4092, line: 141, type: !4240)
!4243 = !DILocation(line: 141, column: 21, scope: !4237)
!4244 = !DILocation(line: 142, column: 9, scope: !4237)
!4245 = !DILocation(line: 142, column: 36, scope: !4237)
!4246 = !DILocation(line: 143, column: 6, scope: !4237)
!4247 = distinct !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h27ffd354e5e2b74dE", scope: !19, file: !4092, line: 146, type: !4248, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4250)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!22, !4240}
!4250 = !{!4251}
!4251 = !DILocalVariable(name: "self", arg: 1, scope: !4247, file: !4092, line: 146, type: !4240)
!4252 = !DILocation(line: 146, column: 23, scope: !4247)
!4253 = !DILocation(line: 147, column: 9, scope: !4247)
!4254 = !DILocation(line: 148, column: 6, scope: !4247)
!4255 = distinct !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hdf8a8ef58a3f519dE", scope: !19, file: !4092, line: 151, type: !4248, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4256)
!4256 = !{!4257}
!4257 = !DILocalVariable(name: "self", arg: 1, scope: !4255, file: !4092, line: 151, type: !4240)
!4258 = !DILocation(line: 151, column: 21, scope: !4255)
!4259 = !DILocation(line: 152, column: 9, scope: !4255)
!4260 = !DILocation(line: 153, column: 6, scope: !4255)
!4261 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6acd55a3121539eE", scope: !4262, file: !4092, line: 157, type: !4263, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4265)
!4262 = !DINamespace(name: "{impl#6}", scope: !14)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!431, !4240, !450}
!4265 = !{!4266, !4267}
!4266 = !DILocalVariable(name: "self", arg: 1, scope: !4261, file: !4092, line: 157, type: !4240)
!4267 = !DILocalVariable(name: "f", arg: 2, scope: !4261, file: !4092, line: 157, type: !450)
!4268 = !DILocation(line: 157, column: 12, scope: !4261)
!4269 = !DILocation(line: 157, column: 19, scope: !4261)
!4270 = !DILocation(line: 161, column: 13, scope: !4261)
!4271 = !DILocalVariable(name: "x", arg: 1, scope: !4272, file: !4273, line: 108, type: !132)
!4272 = distinct !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt2rt8Argument13new_lower_hex17h8c0d5c385a88ea55E", scope: !864, file: !4273, line: 108, type: !4274, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1245, retainedNodes: !4276)
!4273 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "113796e3f7e0ea158177fb3be1c4c32b")
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!864, !132}
!4276 = !{!4271}
!4277 = !DILocation(line: 108, column: 43, scope: !4272, inlinedAt: !4278)
!4278 = distinct !DILocation(line: 158, column: 9, scope: !4261)
!4279 = !DILocalVariable(name: "x", arg: 1, scope: !4280, file: !4273, line: 83, type: !132)
!4280 = distinct !DISubprogram(name: "new<u64>", linkageName: "_ZN4core3fmt2rt8Argument3new17h52a609640fe52c34E", scope: !864, file: !4273, line: 83, type: !4281, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1245, retainedNodes: !4284)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{!864, !132, !4283}
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u64, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !747, size: 64, align: 64, dwarfAddressSpace: 0)
!4284 = !{!4279, !4285}
!4285 = !DILocalVariable(name: "f", arg: 2, scope: !4280, file: !4273, line: 83, type: !4283)
!4286 = !DILocation(line: 83, column: 19, scope: !4280, inlinedAt: !4287)
!4287 = distinct !DILocation(line: 109, column: 9, scope: !4272, inlinedAt: !4278)
!4288 = !DILocation(line: 83, column: 29, scope: !4280, inlinedAt: !4287)
!4289 = !DILocation(line: 92, column: 18, scope: !4280, inlinedAt: !4287)
!4290 = !DILocation(line: 93, column: 6, scope: !4280, inlinedAt: !4287)
!4291 = !DILocation(line: 109, column: 9, scope: !4272, inlinedAt: !4278)
!4292 = !DILocation(line: 158, column: 9, scope: !4261)
!4293 = !DILocation(line: 162, column: 13, scope: !4261)
!4294 = !DILocation(line: 108, column: 43, scope: !4272, inlinedAt: !4295)
!4295 = distinct !DILocation(line: 158, column: 9, scope: !4261)
!4296 = !DILocation(line: 83, column: 19, scope: !4280, inlinedAt: !4297)
!4297 = distinct !DILocation(line: 109, column: 9, scope: !4272, inlinedAt: !4295)
!4298 = !DILocation(line: 83, column: 29, scope: !4280, inlinedAt: !4297)
!4299 = !DILocation(line: 92, column: 18, scope: !4280, inlinedAt: !4297)
!4300 = !DILocation(line: 93, column: 6, scope: !4280, inlinedAt: !4297)
!4301 = !DILocation(line: 109, column: 9, scope: !4272, inlinedAt: !4295)
!4302 = !{i8 0, i8 4}
!4303 = !{i64 0, i64 3}
!4304 = !DILocalVariable(name: "position", arg: 1, scope: !4305, file: !4273, line: 22, type: !9)
!4305 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt11Placeholder3new17hf10bc7133cfec213E", scope: !830, file: !4273, line: 21, type: !4306, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4308)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!830, !9, !455, !139, !27, !837, !837}
!4308 = !{!4304, !4309, !4310, !4311, !4312, !4313}
!4309 = !DILocalVariable(name: "fill", arg: 2, scope: !4305, file: !4273, line: 23, type: !455)
!4310 = !DILocalVariable(name: "align", arg: 3, scope: !4305, file: !4273, line: 24, type: !139)
!4311 = !DILocalVariable(name: "flags", arg: 4, scope: !4305, file: !4273, line: 25, type: !27)
!4312 = !DILocalVariable(name: "precision", arg: 5, scope: !4305, file: !4273, line: 26, type: !837)
!4313 = !DILocalVariable(name: "width", arg: 6, scope: !4305, file: !4273, line: 27, type: !837)
!4314 = !DILocation(line: 22, column: 9, scope: !4305, inlinedAt: !4315)
!4315 = distinct !DILocation(line: 158, column: 9, scope: !4261)
!4316 = !DILocation(line: 23, column: 9, scope: !4305, inlinedAt: !4315)
!4317 = !DILocation(line: 24, column: 9, scope: !4305, inlinedAt: !4315)
!4318 = !DILocation(line: 25, column: 9, scope: !4305, inlinedAt: !4315)
!4319 = !DILocation(line: 26, column: 9, scope: !4305, inlinedAt: !4315)
!4320 = !DILocation(line: 27, column: 9, scope: !4305, inlinedAt: !4315)
!4321 = !DILocation(line: 29, column: 9, scope: !4305, inlinedAt: !4315)
!4322 = !DILocation(line: 22, column: 9, scope: !4305, inlinedAt: !4323)
!4323 = distinct !DILocation(line: 158, column: 9, scope: !4261)
!4324 = !DILocation(line: 23, column: 9, scope: !4305, inlinedAt: !4323)
!4325 = !DILocation(line: 24, column: 9, scope: !4305, inlinedAt: !4323)
!4326 = !DILocation(line: 25, column: 9, scope: !4305, inlinedAt: !4323)
!4327 = !DILocation(line: 26, column: 9, scope: !4305, inlinedAt: !4323)
!4328 = !DILocation(line: 27, column: 9, scope: !4305, inlinedAt: !4323)
!4329 = !DILocation(line: 29, column: 9, scope: !4305, inlinedAt: !4323)
!4330 = !DILocation(line: 164, column: 6, scope: !4261)
!4331 = distinct !DISubprogram(name: "from", linkageName: "_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17h73949eda888754b7E", scope: !4332, file: !4092, line: 218, type: !4333, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4341)
!4332 = !DINamespace(name: "{impl#7}", scope: !14)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!13, !4335}
!4335 = !DICompositeType(tag: DW_TAG_structure_type, name: "E820MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !4336, templateParams: !24, identifier: "22cb2fe34aa294b859f7b5f3dc6be3da")
!4336 = !{!4337, !4338, !4339, !4340}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !4335, file: !2, baseType: !22, size: 64, align: 64)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4335, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !4335, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_extended_attributes", scope: !4335, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!4341 = !{!4342, !4343, !4345}
!4342 = !DILocalVariable(name: "region", arg: 1, scope: !4331, file: !4092, line: 218, type: !4335)
!4343 = !DILocalVariable(name: "region_type", scope: !4344, file: !4092, line: 219, type: !26, align: 4)
!4344 = distinct !DILexicalBlock(scope: !4331, file: !4092, line: 219, column: 9)
!4345 = !DILocalVariable(name: "t", scope: !4346, file: !4092, line: 225, type: !27, align: 4)
!4346 = distinct !DILexicalBlock(scope: !4331, file: !4092, line: 225, column: 13)
!4347 = !DILocation(line: 218, column: 13, scope: !4331)
!4348 = !DILocation(line: 219, column: 13, scope: !4344)
!4349 = !DILocation(line: 225, column: 13, scope: !4346)
!4350 = !DILocation(line: 219, column: 27, scope: !4331)
!4351 = !DILocation(line: 225, column: 13, scope: !4331)
!4352 = !DILocalVariable(name: "x", arg: 1, scope: !4353, file: !4273, line: 96, type: !85)
!4353 = distinct !DISubprogram(name: "new_display<u32>", linkageName: "_ZN4core3fmt2rt8Argument11new_display17h7f3280a3e39b74afE", scope: !864, file: !4273, line: 96, type: !4354, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1236, retainedNodes: !4356)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{!864, !85}
!4356 = !{!4352}
!4357 = !DILocation(line: 96, column: 40, scope: !4353, inlinedAt: !4358)
!4358 = distinct !DILocation(line: 225, column: 18, scope: !4346)
!4359 = !DILocalVariable(name: "x", arg: 1, scope: !4360, file: !4273, line: 83, type: !85)
!4360 = distinct !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt2rt8Argument3new17h72e64d87d7ceaf4eE", scope: !864, file: !4273, line: 83, type: !4361, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1236, retainedNodes: !4364)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{!864, !85, !4363}
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !732, size: 64, align: 64, dwarfAddressSpace: 0)
!4364 = !{!4359, !4365}
!4365 = !DILocalVariable(name: "f", arg: 2, scope: !4360, file: !4273, line: 83, type: !4363)
!4366 = !DILocation(line: 83, column: 19, scope: !4360, inlinedAt: !4367)
!4367 = distinct !DILocation(line: 97, column: 9, scope: !4353, inlinedAt: !4358)
!4368 = !DILocation(line: 83, column: 29, scope: !4360, inlinedAt: !4367)
!4369 = !DILocation(line: 92, column: 18, scope: !4360, inlinedAt: !4367)
!4370 = !DILocation(line: 93, column: 6, scope: !4360, inlinedAt: !4367)
!4371 = !DILocation(line: 97, column: 9, scope: !4353, inlinedAt: !4358)
!4372 = !DILocation(line: 225, column: 18, scope: !4346)
!4373 = !DILocation(line: 220, column: 18, scope: !4331)
!4374 = !DILocation(line: 221, column: 18, scope: !4331)
!4375 = !DILocation(line: 222, column: 18, scope: !4331)
!4376 = !DILocation(line: 223, column: 18, scope: !4331)
!4377 = !DILocation(line: 224, column: 18, scope: !4331)
!4378 = !DILocation(line: 228, column: 36, scope: !4344)
!4379 = !DILocation(line: 228, column: 55, scope: !4344)
!4380 = !DILocation(line: 228, column: 75, scope: !4344)
!4381 = !DILocation(line: 228, column: 20, scope: !4344)
!4382 = !DILocation(line: 229, column: 13, scope: !4344)
!4383 = !DILocation(line: 227, column: 9, scope: !4344)
!4384 = !DILocation(line: 231, column: 6, scope: !4331)
!4385 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17hb7000f8aa50a7337E", scope: !4387, file: !4386, line: 53, type: !4392, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4394)
!4386 = !DIFile(filename: "src/bootinfo/mod.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "a171ea6c439575860461f3a713fd0ff5")
!4387 = !DICompositeType(tag: DW_TAG_structure_type, name: "BootInfo", scope: !15, file: !2, size: 12608, align: 64, elements: !4388, templateParams: !24, identifier: "181402c208578508542b1b0df63e7858")
!4388 = !{!4389, !4390, !4391}
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "memory_map", scope: !4387, file: !2, baseType: !94, size: 12352, align: 64)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "tls_template", scope: !4387, file: !2, baseType: !109, size: 192, align: 64, offset: 12352)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "_non_exhaustive", scope: !4387, file: !2, baseType: !123, size: 8, align: 8, offset: 12544)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{!4387, !94, !3870, !22, !22}
!4394 = !{!4395, !4396, !4397, !4398, !4399}
!4395 = !DILocalVariable(name: "memory_map", arg: 1, scope: !4385, file: !4386, line: 54, type: !94)
!4396 = !DILocalVariable(name: "tls_template", arg: 2, scope: !4385, file: !4386, line: 55, type: !3870)
!4397 = !DILocalVariable(name: "recursive_page_table_addr", arg: 3, scope: !4385, file: !4386, line: 56, type: !22)
!4398 = !DILocalVariable(name: "physical_memory_offset", arg: 4, scope: !4385, file: !4386, line: 57, type: !22)
!4399 = !DILocalVariable(name: "tls_template", scope: !4400, file: !4386, line: 59, type: !109, align: 8)
!4400 = distinct !DILexicalBlock(scope: !4385, file: !4386, line: 59, column: 9)
!4401 = !DILocation(line: 54, column: 9, scope: !4385)
!4402 = !DILocation(line: 55, column: 9, scope: !4385)
!4403 = !DILocation(line: 56, column: 9, scope: !4385)
!4404 = !DILocation(line: 57, column: 9, scope: !4385)
!4405 = !DILocation(line: 59, column: 13, scope: !4400)
!4406 = !DILocation(line: 59, column: 51, scope: !4385)
!4407 = !DILocation(line: 59, column: 28, scope: !4385)
!4408 = !DILocation(line: 66, column: 13, scope: !4400)
!4409 = !DILocation(line: 64, column: 9, scope: !4400)
!4410 = !DILocation(line: 73, column: 6, scope: !4385)
!4411 = distinct !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17hc4176584bdd69f2aE", scope: !4387, file: !4386, line: 81, type: !4412, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4415)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{!3870, !4414}
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::BootInfo", baseType: !4387, size: 64, align: 64, dwarfAddressSpace: 0)
!4415 = !{!4416}
!4416 = !DILocalVariable(name: "self", arg: 1, scope: !4411, file: !4386, line: 81, type: !4414)
!4417 = !DILocation(line: 81, column: 25, scope: !4411)
!4418 = !DILocation(line: 82, column: 12, scope: !4411)
!4419 = !DILocation(line: 85, column: 13, scope: !4411)
!4420 = !DILocation(line: 82, column: 9, scope: !4411)
!4421 = !DILocation(line: 83, column: 18, scope: !4411)
!4422 = !DILocation(line: 83, column: 13, scope: !4411)
!4423 = !DILocation(line: 87, column: 6, scope: !4411)
!4424 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h0f039e3563dcdc30E", scope: !4425, file: !4092, line: 90, type: !4426, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4428)
!4425 = !DINamespace(name: "{impl#8}", scope: !14)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!431, !12, !450}
!4428 = !{!4429, !4430}
!4429 = !DILocalVariable(name: "self", arg: 1, scope: !4424, file: !4092, line: 90, type: !12)
!4430 = !DILocalVariable(name: "f", arg: 2, scope: !4424, file: !4092, line: 90, type: !450)
!4431 = !DILocation(line: 90, column: 10, scope: !4424)
!4432 = !DILocation(line: 96, column: 5, scope: !4424)
!4433 = !DILocation(line: 90, column: 15, scope: !4424)
!4434 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h9e1df074eec26333E", scope: !4435, file: !4092, line: 168, type: !4436, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4438)
!4435 = !DINamespace(name: "{impl#21}", scope: !14)
!4436 = !DISubroutineType(types: !4437)
!4437 = !{!431, !60, !450}
!4438 = !{!4439, !4440}
!4439 = !DILocalVariable(name: "self", arg: 1, scope: !4434, file: !4092, line: 168, type: !60)
!4440 = !DILocalVariable(name: "f", arg: 2, scope: !4434, file: !4092, line: 168, type: !450)
!4441 = !DILocation(line: 168, column: 10, scope: !4434)
!4442 = !DILocation(line: 168, column: 14, scope: !4434)
!4443 = !DILocation(line: 168, column: 15, scope: !4434)
!4444 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17he68b891e832dbb70E", scope: !4445, file: !4092, line: 208, type: !4446, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4449)
!4445 = !DINamespace(name: "{impl#28}", scope: !14)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!431, !4448, !450}
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::E820MemoryRegion", baseType: !4335, size: 64, align: 64, dwarfAddressSpace: 0)
!4449 = !{!4450, !4451}
!4450 = !DILocalVariable(name: "self", arg: 1, scope: !4444, file: !4092, line: 208, type: !4448)
!4451 = !DILocalVariable(name: "f", arg: 2, scope: !4444, file: !4092, line: 208, type: !450)
!4452 = !DILocation(line: 208, column: 10, scope: !4444)
!4453 = !DILocation(line: 212, column: 5, scope: !4444)
!4454 = !DILocation(line: 213, column: 5, scope: !4444)
!4455 = !DILocation(line: 214, column: 5, scope: !4444)
!4456 = !DILocation(line: 208, column: 15, scope: !4444)
!4457 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17h02b8504b3d8e61ceE", scope: !4458, file: !4386, line: 22, type: !4459, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4461)
!4458 = !DINamespace(name: "{impl#1}", scope: !15)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!431, !4414, !450}
!4461 = !{!4462, !4463}
!4462 = !DILocalVariable(name: "self", arg: 1, scope: !4457, file: !4386, line: 22, type: !4414)
!4463 = !DILocalVariable(name: "f", arg: 2, scope: !4457, file: !4386, line: 22, type: !450)
!4464 = !DILocation(line: 22, column: 10, scope: !4457)
!4465 = !DILocation(line: 45, column: 5, scope: !4457)
!4466 = !DILocation(line: 46, column: 5, scope: !4457)
!4467 = !DILocation(line: 22, column: 15, scope: !4457)
!4468 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f7dc0e5f5bc2876E", scope: !4469, file: !4386, line: 103, type: !4470, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4473)
!4469 = !DINamespace(name: "{impl#2}", scope: !15)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!431, !4472, !450}
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!4473 = !{!4474, !4475}
!4474 = !DILocalVariable(name: "self", arg: 1, scope: !4468, file: !4386, line: 103, type: !4472)
!4475 = !DILocalVariable(name: "f", arg: 2, scope: !4468, file: !4386, line: 103, type: !450)
!4476 = !DILocation(line: 103, column: 10, scope: !4468)
!4477 = !DILocation(line: 111, column: 5, scope: !4468)
!4478 = !DILocation(line: 115, column: 5, scope: !4468)
!4479 = !DILocation(line: 103, column: 15, scope: !4468)
