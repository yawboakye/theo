; ModuleID = 'bootloader.dd1f7e83ceca872c-cgu.0'
source_filename = "bootloader.dd1f7e83ceca872c-cgu.0"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-obuasi-unknown-none"

%"bootinfo::memory_map::MemoryRegion" = type { { i64, i64 }, i32, [1 x i32] }
%"core::ops::range::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, { ptr, i64 } }
%"core::fmt::rt::UnsafeArg" = type { {} }
%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>" = type { %"bootinfo::memory_map::MemoryRegion" }
%"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<u8>" = type { ptr, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]" = type {}
%"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]" = type { ptr, { ptr, i64 }, ptr }
%"core::option::Option<core::fmt::Arguments<'_>>" = type { ptr, [5 x i64] }
%"bootinfo::TlsTemplate" = type { i64, i64, i64 }
%"core::option::Option<bootinfo::TlsTemplate>::Some" = type { [1 x i64], %"bootinfo::TlsTemplate" }
%"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]" = type {}
%"bootinfo::memory_map::MemoryMap" = type { [64 x %"bootinfo::memory_map::MemoryRegion"], i64 }
%"core::fmt::builders::DebugList<'_, '_>" = type { %"core::fmt::builders::DebugInner<'_, '_>" }
%"core::fmt::builders::DebugInner<'_, '_>" = type { ptr, i8, i8, [6 x i8] }
%"core::fmt::rt::Placeholder" = type { { i64, i64 }, { i64, i64 }, i64, i32, i32, i8, [7 x i8] }
%"bootinfo::memory_map::E820MemoryRegion" = type { i64, i64, i32, i32 }
%"bootinfo::BootInfo" = type { %"bootinfo::memory_map::MemoryMap", %"bootinfo::TlsTemplate", i8, [7 x i8] }
%"core::option::Option<bootinfo::TlsTemplate>" = type { i64, [3 x i64] }

@alloc_fa017189c529f9a37ad81f1b7f28d734 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the range is within the slice" }>, align 1
@alloc_e4c0784e4975da2173a354afd99193ad = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: slice::get_unchecked_mut requires that the range is within the slice" }>, align 1
@alloc_763310d78c99c2c1ad3f8a9821e942f3 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"is_nonoverlapping: `size_of::<T>() * count` overflows a usize" }>, align 1
@alloc_cf71ba46b07f75a509e946b584ee4f31 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs" }>, align 1
@alloc_b6214d9bb9cff44098ff81c6a07fb622 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\FE\09\00\00\0A\00\00\00" }>, align 8
@alloc_4842962e9224c86809a6b0a39b458d1b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\FF\09\00\00+\00\00\00" }>, align 8
@str.0 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc_09047e47d7cb1d17d8eebe3155edff11 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\FF\09\00\00J\00\00\00" }>, align 8
@alloc_8df0580a595a87d56789d20c7318e185 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_2f5fae7ca9908dec8d13988b47dc9dc4 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned and non-null" }>, align 1
@vtable.1 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h3bb54a08777f807bE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0403dbc38cd8bbbdE" }>, align 8, !dbg !0
@alloc_c2ea93c90919bb7b1e482f917e413fa1 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc_6efc4ec71950c88bb18b2dcebbe56926 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\004\01\00\008\00\00\00" }>, align 8
@str.2 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc_91c7fa63c3cfeaa3c795652d5cf060e4 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc_560206a49c61adca6f3f0639a12632eb = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_91c7fa63c3cfeaa3c795652d5cf060e4, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_d3149a254d0e3dec02e2738403904da6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\005\01\00\00\0D\00\00\00" }>, align 8
@alloc_5eca5fde541bf3444e5a23d5419b88a4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00+\01\00\00\0D\00\00\00" }>, align 8
@alloc_513570631223a12912d85da2bec3b15a = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc_062d8212fd02b81dce3f023edbf3244d = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs" }>, align 1
@alloc_f5758da710ba897165288b0f4da8acb3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_062d8212fd02b81dce3f023edbf3244d, [16 x i8] c"k\00\00\00\00\00\00\00\E5\02\00\00\0C\00\00\00" }>, align 8
@str.3 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc_8b72e65625de3e221368553edb4591ff = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs" }>, align 1
@alloc_6d1d504c0e89254185551a8585bdfbfb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8b72e65625de3e221368553edb4591ff, [16 x i8] c"k\00\00\00\00\00\00\00\FA\04\00\00\05\00\00\00" }>, align 8
@str.4 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc_444495105b9016883a01942a28847d22 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs" }>, align 1
@alloc_0e90a8d2edaf8520d1b6cc44dc6ee0c4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_444495105b9016883a01942a28847d22, [16 x i8] c"m\00\00\00\00\00\00\00\C6\01\00\00\1D\00\00\00" }>, align 8
@alloc_29f87e6ac6e7e4317253d26531c5c81c = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc_311e6cf6eff9ab7fd9cc3e4fdf63206f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\B3\03\00\00&\00\00\00" }>, align 8
@str.5 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc_6ba8dfd3581ac766ea33e02991091220 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\B5\03\00\00\09\00\00\00" }>, align 8
@str.6 = internal constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc_23de3dfb299cac40c463cc01d279ed0d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\B6\03\00\00\09\00\00\00" }>, align 8
@alloc_546a48d82dbbd37bfd409d4513b73f46 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::swap_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_bab6ead7b4bfe41433022b5c9b228cf8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\CF\03\00\00\09\00\00\00" }>, align 8
@alloc_981fd9513041e1603a1d1d7b668a749d = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_b7474065d782af00c4610bb4ef55210b = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_20b3d155afd5c58c42e598b7e6d186ef = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc_cc91f7045aeea4ab0f301c62c00dba06 = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_bcdcc30e858a48da2606f80aa0163c31 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00+\06\00\00\1A\00\00\00" }>, align 8
@alloc_fad0cd83b7d1858a846a172eb260e593 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc_60ac762d06592b2ab3358175d7a7c295 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_fad0cd83b7d1858a846a172eb260e593, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_38eb3fe2a71bea9ddc57ce847c7c3987 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00&\06\00\00\0D\00\00\00" }>, align 8
@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc_054967ab02808043e6941783e8d3de80 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00\1C\03\00\00\09\00\00\00" }>, align 8
@alloc_cb50775363ffdd1238910b6e9573721d = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"unsafe precondition(s) violated: ptr::sub_ptr requires `this >= origin`" }>, align 1
@alloc_fddaeef1fe1a23c45402ef8f58614acb = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc_9a72dc1c87ddefcce62e4b5ab68e5150 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\FF" }>, align 1
@alloc_0e767b22ac99e9123f3c482417f77f98 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc_4a6cc2814e9c70d90675aafc22034495 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DD\06\00\00M\00\00\00" }>, align 8
@alloc_3dc073651148de734d2593768efc16e9 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: slice::split_at_mut_unchecked requires the index to be within the slice" }>, align 1
@alloc_dd0dc542054f5a3bd5e0287046a20794 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: a.len() == n" }>, align 1
@alloc_56d87f2c66d76c3f9f16853a2ec5e179 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C2\02\00\00\0D\00\00\00" }>, align 8
@alloc_deedf7aeab1a7c66b5420b58a4093bcc = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: b.len() == n" }>, align 1
@alloc_9bc869464e7f5dcda873bc5fba3167ae = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C3\02\00\00\0D\00\00\00" }>, align 8
@alloc_3802366fa986a65287f2fa3ffe444552 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C9\02\00\00 \00\00\00" }>, align 8
@alloc_932be07abcf6e404c637b3e479c1e7c9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C9\02\00\00-\00\00\00" }>, align 8
@alloc_4885065212b954fcf5498feb1a1b310e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CD\02\00\00 \00\00\00" }>, align 8
@alloc_ac4c1a7cd73cf22de14f2687be3e8fcc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CD\02\00\00-\00\00\00" }>, align 8
@alloc_2732a97934d3b057ad0dd41fcc13fd03 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CD\02\00\00+\00\00\00" }>, align 8
@alloc_9fb3574fe8b1524af3e60fcd315c8079 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00\11\00\00\00" }>, align 8
@alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_cb9e1adc7c2835de63b1ee25a132c405 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs" }>, align 1
@alloc_21940fc9f46b7e1887065fc60f1724b0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cb9e1adc7c2835de63b1ee25a132c405, [16 x i8] c"n\00\00\00\00\00\00\00\83\00\00\00\01\00\00\00" }>, align 8
@alloc_140877f72603b53a2926afdc5b6562c1 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: v.len() >= 2" }>, align 1
@alloc_d80990e1774d1c38795ebd415913ef0a = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs" }>, align 1
@alloc_6932146a2b5945f5118e7e865cb7ff4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\\\00\00\00\05\00\00\00" }>, align 8
@alloc_2b18b37ae84d61762f070ebc082ffd36 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\00\00\00F\00\00\00" }>, align 8
@alloc_141337dbddbbf875f1e651a897c1c26f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00'\00\00\00\05\00\00\00" }>, align 8
@alloc_90f4b6dda14e5cb7081926ef9c658315 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00*\00\00\00\0D\00\00\00" }>, align 8
@alloc_e41efc6332efd19972427a8ca6f9ac9d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00G\00\00\00\1A\00\00\00" }>, align 8
@alloc_912dd1c737b966744c5b309cc20a3d47 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\DF\02\00\00\11\00\00\00" }>, align 8
@alloc_7aff2c5e0ce2b115fc6c1e2cef0aaf8b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E0\02\00\00\11\00\00\00" }>, align 8
@alloc_51fd6fd3cd9ef520ddfe39086f06b289 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E1\02\00\00\11\00\00\00" }>, align 8
@alloc_6a8eb4c18787545063c119f92681aeff = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\13\03\00\00\0A\00\00\00" }>, align 8
@alloc_4e8855159810091534f04a19bbe30782 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\00\03\00\00\1C\00\00\00" }>, align 8
@alloc_787d88f30b9a4c9abd6abb658d261d97 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\00\03\00\00/\00\00\00" }>, align 8
@alloc_8b1cf5b76b10a43810ba75cdb94336e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\F1\02\00\00\11\00\00\00" }>, align 8
@alloc_2745df5dada1022057bbf8b1e08b9408 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\BD\02\00\00\13\00\00\00" }>, align 8
@alloc_c3165b226cb3c0c182e30d6993318b09 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\C3\02\00\00+\00\00\00" }>, align 8
@alloc_c938216ce784d5d7b6bb0e8f59c85beb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\C7\02\00\00\11\00\00\00" }>, align 8
@alloc_55987e570b17d50f773e204af1733715 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00\14\00\00\00" }>, align 8
@alloc_dd29033771d55fdf04aba4a1982901e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00\0F\00\00\00" }>, align 8
@alloc_f8322b69080b1e19bc4df073038a414d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00l\02\00\00\07\00\00\00" }>, align 8
@alloc_23975e137ecce848c3167e283c742672 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00m\02\00\00\18\00\00\00" }>, align 8
@alloc_3ea9d353dbaea466ca156be00652f893 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00n\02\00\00\16\00\00\00" }>, align 8
@alloc_a23b538f7d9197acefade9a7784184c2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\82\02\00\00\11\00\00\00" }>, align 8
@alloc_3aa499bef66e3a89497706d0904ac653 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\86\02\00\00;\00\00\00" }>, align 8
@alloc_6b88286adc8b79b2ce0db9f94ea83bc3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\02\00\00\11\00\00\00" }>, align 8
@alloc_10d6a7449345760a13244dcd4f3e8edd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\98\02\00\00\05\00\00\00" }>, align 8
@alloc_894987bd31137d43dbfbf66922648de6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\90\02\00\00\0D\00\00\00" }>, align 8
@alloc_bae318ebda80fadd5948c94c31acdbd2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\93\02\00\00\0D\00\00\00" }>, align 8
@alloc_fe4e881dfa6c70f91499a9b97cada070 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00_\01\00\00&\00\00\00" }>, align 8
@alloc_2417cbaa5b767dc07fcb426311fbedcd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00e\01\00\00\11\00\00\00" }>, align 8
@alloc_7d4914bfaafcfa4692cc10dc5496d4e2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00s\01\00\00\1B\00\00\00" }>, align 8
@alloc_8221bdf38a3766feb9723f333c95dc9e = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"assertion failed: block_l <= BLOCK && block_r <= BLOCK" }>, align 1
@alloc_d98b9ce84085f5d91faa526ef2b40520 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00u\01\00\00\0D\00\00\00" }>, align 8
@alloc_5d32d2daaec9cf0d402f2dc37af0ea6f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00*\00\00\00" }>, align 8
@alloc_a3f9d5911d83d2dfd6ee66814bbe6049 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"assertion failed: width(l, r) == block_l + block_r" }>, align 1
@alloc_ea197cb372011b0fee90d7558b246bfb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00\0D\00\00\00" }>, align 8
@alloc_0a48b3a7e93a3fb66a7841c604466c03 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D2\01\00\00*\00\00\00" }>, align 8
@alloc_255f6db4d0c02746fb4a9b785ea6e516 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D6\01\00\007\00\00\00" }>, align 8
@alloc_3fa281490ed5627b0d5acda868d81af0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\01\00\00.\00\00\00" }>, align 8
@alloc_2107e90e8c7dda0adfd21e59e3b7e9ee = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\DB\01\00\000\00\00\00" }>, align 8
@alloc_23d83fb97dc5ddd699c8f80f695d1b3b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\02\02\00\00\09\00\00\00" }>, align 8
@alloc_fbd29d12e7b221b5790588e8407e814c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\19\02\00\00\09\00\00\00" }>, align 8
@alloc_0ba58876d11be66a75ed3c6ebb0e6bf5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\1E\02\00\00$\00\00\00" }>, align 8
@alloc_60cd9f07f649265b0b23f897aad9bad7 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: mem::size_of::<T>() > 0" }>, align 1
@alloc_9dd923649e31f13c3223b59f17507a2e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\01\00\00\09\00\00\00" }>, align 8
@alloc_c103c0ba323341afbed17e7fe7e651ca = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Y\01\00\00\09\00\00\00" }>, align 8
@alloc_bd81c17235b1444753a1935a813b485f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D7\00\00\00K\00\00\00" }>, align 8
@alloc_e743259f65f79dce5fdf7e439c96cb01 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\00\00\00\11\00\00\00" }>, align 8
@alloc_2300fc4e056106188d3f21c349fb8e76 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\10\00\00\00" }>, align 8
@alloc_0cd04c6390f55d83a74a72e18ad99930 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\0B\00\00\00" }>, align 8
@alloc_5f37f9a166db798315b708b1541f42a2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\00,\00\00\00" }>, align 8
@alloc_51848abd31708fd9bd4e978ad4e2fdf6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\004\00\00\00" }>, align 8
@alloc_59f135123cded1fb506d3f148328939a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EE\00\00\00-\00\00\00" }>, align 8
@alloc_5429279aa16fa0cdfc25e6fc8726a06a = private unnamed_addr constant <{ [46 x i8] }> <{ [46 x i8] c"assertion failed: offset != 0 && offset <= len" }>, align 1
@alloc_99bb945c879f5888798b28005543a365 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\9B\00\00\00\05\00\00\00" }>, align 8
@alloc_73eebdc85b9e117e5d0f01368c59f59c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\A3\00\00\00\1E\00\00\00" }>, align 8
@alloc_6973cb22fd5a814eff7046b5b9169c77 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"assertion failed: offset != 0 && offset <= len && len >= 2" }>, align 1
@alloc_15caf4948137b9f7be8cedfe4929bfd3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\B4\00\00\00\05\00\00\00" }>, align 8
@alloc_9da74b8166775a21c862af0758b35f3d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\BD\00\00\00\1E\00\00\00" }>, align 8
@alloc_afed1504fcd128c4005dc410e4c81be0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00?\03\00\00\0D\00\00\00" }>, align 8
@alloc_587605405deda51184d8e058ecd3dd79 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00S\03\00\00\1D\00\00\00" }>, align 8
@alloc_696cf6b9c96fa15d1a2bc76997b92dc8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00W\03\00\00\1A\00\00\00" }>, align 8
@alloc_6a2abb486c72767951ddbfabb5cef306 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\03\00\00&\00\00\00" }>, align 8
@alloc_971270e5ffee50b341d575bd26c9235e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00b\03\00\00\1F\00\00\00" }>, align 8
@alloc_06bcb3e9440cff471acdc9917714413b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00c\03\00\00$\00\00\00" }>, align 8
@alloc_f8fe30ccfa6c382fc0c6802f54db9165 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00d\03\00\00\16\00\00\00" }>, align 8
@alloc_dc7cc06f65f47d89307805f9ed1e1cb4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00 \01\00\00\0B\00\00\00" }>, align 8
@alloc_218d542ba7d42d9731521fd943356c38 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00!\01\00\00\18\00\00\00" }>, align 8
@alloc_8c633453631874cfb45135c562495182 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\01\01\00\00\1D\00\00\00" }>, align 8
@alloc_cced75eb33ad0d231589a125c7f2c71e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\07\01\00\00\10\00\00\00" }>, align 8
@alloc_02d41e7169598a3cfcfd3f0d1c833ec2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00#\00\00\00" }>, align 8
@alloc_794be56d42be9995e3a84c84d26159ed = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\000\00\00\00" }>, align 8
@alloc_d32b57d7e285e3b164a125d44291af3f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00.\00\00\00" }>, align 8
@alloc_3f7ac4164e6f54924783af0ed6bc3c8d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00\11\00\00\00" }>, align 8
@alloc_5714221f35142e87516e8a17190398c5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00\1A\00\00\00" }>, align 8
@alloc_8b3b0b984669970c12a2c2d899b23d16 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00$\00\00\00" }>, align 8
@alloc_4685547f2c3cd5dc1819afd3ce6280d4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\14\01\00\00\0F\00\00\00" }>, align 8
@alloc_a32d8ca4e4d506b0d34a470e4dcb5cd1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\006\02\00\00\0B\00\00\00" }>, align 8
@alloc_e52ab9305e2b15d74c4e9ac02c87db27 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\007\02\00\00\1C\00\00\00" }>, align 8
@alloc_0b2a738361d208826a072b92b3acda46 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\008\02\00\00\1A\00\00\00" }>, align 8
@alloc_96c6545aa6432add279027414fe61766 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00M\02\00\00\11\00\00\00" }>, align 8
@alloc_0b6e8a57da681e1fb7c4d0e2204e6a73 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Q\02\00\005\00\00\00" }>, align 8
@alloc_a38e39bd8e066eb11cb79be2a1a30355 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00R\02\00\00\11\00\00\00" }>, align 8
@alloc_b0c68aa41aa72af376e4904f7447f27d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00'\00\00\00" }>, align 8
@alloc_b173b94e8487e85973e5816a197e44e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00\0A\00\00\00" }>, align 8
@alloc_62f31cc339340f8d2589d3fbbff1b89f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\02\00\00\07\00\00\00" }>, align 8
@alloc_da17763e772b00039467b49b69f200eb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\7F\03\00\00\11\00\00\00" }>, align 8
@alloc_b3b3c2a7efcea294ef431b7ed1abebea = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the index is within the slice" }>, align 1
@alloc_377fe4797e3690987ab15f0122f4880b = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"too many memory regions in memory map" }>, align 1
@alloc_7d15286e500c88a119425ae53316340e = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs" }>, align 1
@alloc_7196c88dea27a90737fe52164bfa6d4b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\1C\00\00\00\09\00\00\00" }>, align 8
@alloc_e65e0ba17a4d9de8b42e16f5ae86b726 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00 \00\00\00\09\00\00\00" }>, align 8
@alloc_6248fd711ab5313acabe549160484394 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00!\00\00\00\09\00\00\00" }>, align 8
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc_bc412f3c128804cf7932bd162091bc4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00H\00\00\00\0A\00\00\00" }>, align 8
@alloc_db57840325994cb1e9e58dfeb27e1cf2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00O\00\00\00\0E\00\00\00" }>, align 8
@alloc_cad8f68633be23a5a8047bc131d14ec3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\85\00\00\00\19\00\00\00" }>, align 8
@alloc_9e0090e7731cd791b1d2228aa613acc1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\88\00\00\00\1F\00\00\00" }>, align 8
@alloc_57ce308cfbee0eeaa37d0e2ac37f242e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\93\00\00\00\09\00\00\00" }>, align 8
@alloc_4848cdfc410b3d9eebbe30a8648bbf6f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\98\00\00\00\09\00\00\00" }>, align 8
@alloc_67fee3923a1253e576603db2a7cc3769 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"FrameRange(" }>, align 1
@alloc_07656b3a0de61ce5c628545e169e4a19 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".." }>, align 1
@alloc_9e3f62b0e6490cc45676dc85f910c2d0 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc_b835a9d6c252fc7d7d9309678c4406b9 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_67fee3923a1253e576603db2a7cc3769, [8 x i8] c"\0B\00\00\00\00\00\00\00", ptr @alloc_07656b3a0de61ce5c628545e169e4a19, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_4ca1ac426b102a9acc7fcf913cf4c660 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"invalid region type " }>, align 1
@alloc_0a0c8f921f96ace4b9d73a9fb1f3a7e8 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_4ca1ac426b102a9acc7fcf913cf4c660, [8 x i8] c"\14\00\00\00\00\00\00\00" }>, align 8
@alloc_7aa2ce3965daa798a811db4359705d8b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E1\00\00\00\12\00\00\00" }>, align 8
@alloc_82eaa0d65834937aa85ffd9cf79e73a5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E4\00\00\007\00\00\00" }>, align 8
@alloc_2fa382d66c8b05cee83d1e636a456d83 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"MemoryRegion" }>, align 1
@alloc_c6d312f4fb2564cdde1868738b40e953 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"range" }>, align 1
@vtable.7 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17hdd02efeef56b47dfE", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h83d8468df17985c2E" }>, align 8, !dbg !44
@alloc_24a09d864e93eaea8a967d85ad5fb14b = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"region_type" }>, align 1
@vtable.8 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h1d57c384ea79fe8eE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8bd86ba65fe73e59E" }>, align 8, !dbg !52
@alloc_4f458a5ac3a6382b3750f993ab870080 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"NonExhaustive" }>, align 1
@alloc_3faf0b3374c02c8ecbb0aba47045e793 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Package" }>, align 1
@alloc_1f9c4cc73f4140a97f2cf1f721646a68 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"BootInfo" }>, align 1
@alloc_59ba7b9f7211443cd55a366616eef46a = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc_296c708f84ba4aacbf601faaf01ee90e = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"FrameZero" }>, align 1
@alloc_88f77a4216025d9c2616c4e0631b580d = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"Bootloader" }>, align 1
@alloc_84113867da1e74b2269b5cf897cae626 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"PageTable" }>, align 1
@alloc_272cabb5c5fb66cc8e055c6a08dd5a38 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"KernelStack" }>, align 1
@alloc_bfff067230aa23bc581d3ad54a803735 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Kernel" }>, align 1
@alloc_2db2f360d33be2fea5593ededc5fb904 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"BadMemory" }>, align 1
@alloc_497f8f871d9b9bd5767a37917b988618 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"AcpiNvs" }>, align 1
@alloc_405580fa38aa12693d369698203e043e = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"AcpiReclaimable" }>, align 1
@alloc_f09f4d0dabebc98449d61db8d60067bb = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Reserved" }>, align 1
@alloc_3e93a37ed61282b1c76f7355bd470201 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"InUse" }>, align 1
@alloc_3c5b86a9b7fa1d302afea08936e483c5 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Usable" }>, align 1
@alloc_bee533f45c59e636f24e3b92e9dcf8a1 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"E820MemoryRegion" }>, align 1
@alloc_e896abd190c076ac3d64221d9ae37a51 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"start_addr" }>, align 1
@vtable.9 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17h05ec73a08d81ae4fE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h4f92344c1f7e8a62E" }>, align 8, !dbg !61
@alloc_f92b1a49cd2fef011d7606f6333298f2 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"len" }>, align 1
@vtable.a = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17hfe6a7d81b2093c11E", [16 x i8] c"\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17ha641c5a6c48c5a08E" }>, align 8, !dbg !69
@alloc_3453f215b747c0edd0eebf0fbcea5172 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"acpi_extended_attributes" }>, align 1
@vtable.b = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17hd4ef7394b8ffe338E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hdf56e56678bf286eE" }>, align 8, !dbg !77
@alloc_9edc7a92f8d25561ab6dc7613f63189d = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"memory_map" }>, align 1
@vtable.c = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17h55bd954b516d523eE", [16 x i8] c"\08\06\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h5eae1787705802a9E" }>, align 8, !dbg !86
@alloc_1cbcc15d14c439465e35578ac36229c9 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"tls_template" }>, align 1
@vtable.d = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17he2b7a0c5667c2dbdE", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h3b4e7e8c05b9f9a9E" }>, align 8, !dbg !101
@alloc_b0bb0c7a0f8be091d3fc1c11116fce9b = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"_non_exhaustive" }>, align 1
@vtable.e = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h2b611129a6be70b4E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc9495f431ff21ccbE" }>, align 8, !dbg !114
@alloc_db9f6246386b35b655b2a4a0bfe4b5d7 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"TlsTemplate" }>, align 1
@alloc_586126a6b84f2dd36fa1e3b3e4c38ef1 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"file_size" }>, align 1
@alloc_6a7e1d6cb9743b05f95a08c478d87c6e = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"mem_size" }>, align 1
@vtable.f = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h3531b96220751359E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h31f4e2fb6db0b7ffE" }>, align 8, !dbg !124

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h7e7668d57ecf7c1cE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !162 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %new_len.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !183, metadata !DIExpression()), !dbg !191
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !184, metadata !DIExpression()), !dbg !192
  call void @llvm.dbg.declare(metadata ptr %this, metadata !185, metadata !DIExpression()), !dbg !193
  store i64 %self.0, ptr %this, align 8, !dbg !194
  %5 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !194
  store i64 %self.1, ptr %5, align 8, !dbg !194
  br i1 true, label %bb1, label %bb2, !dbg !195

bb2:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h1119e31b604a5b7dE.exit", %start
  %6 = sub nuw i64 %self.1, %self.0, !dbg !196
  store i64 %6, ptr %0, align 8, !dbg !196
  %new_len = load i64, ptr %0, align 8, !dbg !196, !noundef !24
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !196
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !187, metadata !DIExpression()), !dbg !197
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_11 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h70db485c1eecd795E"(ptr %slice.0, i64 %slice.1) #10, !dbg !198
  store ptr %_11, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !210
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !209, metadata !DIExpression()), !dbg !212
  %7 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %self.0, !dbg !213
; call core::ptr::slice_from_raw_parts
  %8 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hacf245b3e0dc6ec3E(ptr %7, i64 %new_len) #10, !dbg !214
  %9 = extractvalue { ptr, i64 } %8, 0, !dbg !214
  %10 = extractvalue { ptr, i64 } %8, 1, !dbg !214
  %11 = insertvalue { ptr, i64 } poison, ptr %9, 0, !dbg !215
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !215
  ret { ptr, i64 } %12, !dbg !215

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !195
  %14 = load i64, ptr %13, align 8, !dbg !195, !noundef !24
  %15 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !195
  %16 = load i64, ptr %15, align 8, !dbg !195, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !195
  store i64 %14, ptr %17, align 8, !dbg !195
  %18 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !195
  store i64 %16, ptr %18, align 8, !dbg !195
  %19 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !195
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !195
  store ptr %slice.0, ptr %20, align 8, !dbg !195
  %21 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !195
  store i64 %slice.1, ptr %21, align 8, !dbg !195
  %22 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !195
  %23 = load i64, ptr %22, align 8, !dbg !195, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !195
  %25 = load i64, ptr %24, align 8, !dbg !195, !noundef !24
  %26 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !195
  %27 = getelementptr inbounds { ptr, i64 }, ptr %26, i32 0, i32 0, !dbg !195
  %28 = load ptr, ptr %27, align 8, !dbg !195, !noundef !24
  %29 = getelementptr inbounds { ptr, i64 }, ptr %26, i32 0, i32 1, !dbg !195
  %30 = load i64, ptr %29, align 8, !dbg !195, !noundef !24
  store i64 %23, ptr %this.dbg.spill.i, align 8
  %31 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %25, ptr %31, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !216, metadata !DIExpression()), !dbg !224
  store ptr %28, ptr %slice.dbg.spill.i, align 8
  %32 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %30, ptr %32, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !223, metadata !DIExpression()), !dbg !224
  %_5.i = icmp uge i64 %25, %23, !dbg !226
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !226

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !226
  br label %bb3.i, !dbg !226

bb2.i:                                            ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h6bad6bbc24fe61bbE"(ptr %28, i64 %30) #10, !dbg !228
  %_8.i = icmp ule i64 %25, %_10.i, !dbg !229
  %33 = zext i1 %_8.i to i8, !dbg !226
  store i8 %33, ptr %_4.i, align 1, !dbg !226
  br label %bb3.i, !dbg !226

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %34 = load i8, ptr %_4.i, align 1, !dbg !230, !range !231, !noundef !24
  %35 = trunc i8 %34 to i1, !dbg !230
  %_3.i = xor i1 %35, true, !dbg !230
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h1119e31b604a5b7dE.exit", !dbg !230

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_fa017189c529f9a37ad81f1b7f28d734, i64 97) #11, !dbg !232
  unreachable, !dbg !232

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h1119e31b604a5b7dE.exit": ; preds = %bb3.i
  br label %bb2, !dbg !195
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc050f2c8a207f4a1E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !233 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %new_len.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !241, metadata !DIExpression()), !dbg !247
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !242, metadata !DIExpression()), !dbg !248
  call void @llvm.dbg.declare(metadata ptr %this, metadata !243, metadata !DIExpression()), !dbg !249
  store i64 %self.0, ptr %this, align 8, !dbg !250
  %5 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !250
  store i64 %self.1, ptr %5, align 8, !dbg !250
  br i1 true, label %bb1, label %bb2, !dbg !251

bb2:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17hca9f376a8cd4e937E.exit", %start
  %6 = sub nuw i64 %self.1, %self.0, !dbg !252
  store i64 %6, ptr %0, align 8, !dbg !252
  %new_len = load i64, ptr %0, align 8, !dbg !252, !noundef !24
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !252
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !245, metadata !DIExpression()), !dbg !253
  store ptr %slice.0, ptr %self.dbg.spill.i1, align 8
  %7 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %slice.1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !254, metadata !DIExpression()), !dbg !263
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !272
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !274
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %self.0, !dbg !275
; call core::ptr::slice_from_raw_parts_mut
  %9 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h505fa47346920890E(ptr %8, i64 %new_len) #10, !dbg !276
  %10 = extractvalue { ptr, i64 } %9, 0, !dbg !276
  %11 = extractvalue { ptr, i64 } %9, 1, !dbg !276
  %12 = insertvalue { ptr, i64 } poison, ptr %10, 0, !dbg !277
  %13 = insertvalue { ptr, i64 } %12, i64 %11, 1, !dbg !277
  ret { ptr, i64 } %13, !dbg !277

bb1:                                              ; preds = %start
  %14 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !251
  %15 = load i64, ptr %14, align 8, !dbg !251, !noundef !24
  %16 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !251
  %17 = load i64, ptr %16, align 8, !dbg !251, !noundef !24
  %18 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !251
  store i64 %15, ptr %18, align 8, !dbg !251
  %19 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !251
  store i64 %17, ptr %19, align 8, !dbg !251
  %20 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !251
  %21 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 0, !dbg !251
  store ptr %slice.0, ptr %21, align 8, !dbg !251
  %22 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 1, !dbg !251
  store i64 %slice.1, ptr %22, align 8, !dbg !251
  %23 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !251
  %24 = load i64, ptr %23, align 8, !dbg !251, !noundef !24
  %25 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !251
  %26 = load i64, ptr %25, align 8, !dbg !251, !noundef !24
  %27 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !251
  %28 = getelementptr inbounds { ptr, i64 }, ptr %27, i32 0, i32 0, !dbg !251
  %29 = load ptr, ptr %28, align 8, !dbg !251, !noundef !24
  %30 = getelementptr inbounds { ptr, i64 }, ptr %27, i32 0, i32 1, !dbg !251
  %31 = load i64, ptr %30, align 8, !dbg !251, !noundef !24
  store i64 %24, ptr %this.dbg.spill.i, align 8
  %32 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %26, ptr %32, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !278, metadata !DIExpression()), !dbg !285
  store ptr %29, ptr %slice.dbg.spill.i, align 8
  %33 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %31, ptr %33, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !284, metadata !DIExpression()), !dbg !285
  %_5.i = icmp uge i64 %26, %24, !dbg !287
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !287

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !287
  br label %bb3.i, !dbg !287

bb2.i:                                            ; preds = %bb1
  store ptr %29, ptr %self.dbg.spill.i2, align 8
  %34 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %31, ptr %34, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !289, metadata !DIExpression()), !dbg !294
; call core::ptr::metadata::metadata
  %35 = call i64 @_ZN4core3ptr8metadata8metadata17hc96cb271582175c8E(ptr %29, i64 %31) #10, !dbg !296
  %_8.i = icmp ule i64 %26, %35, !dbg !297
  %36 = zext i1 %_8.i to i8, !dbg !287
  store i8 %36, ptr %_4.i, align 1, !dbg !287
  br label %bb3.i, !dbg !287

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %37 = load i8, ptr %_4.i, align 1, !dbg !298, !range !231, !noundef !24
  %38 = trunc i8 %37 to i1, !dbg !298
  %_3.i = xor i1 %38, true, !dbg !298
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17hca9f376a8cd4e937E.exit", !dbg !298

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_e4c0784e4975da2173a354afd99193ad, i64 101) #11, !dbg !299
  unreachable, !dbg !299

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17hca9f376a8cd4e937E.exit": ; preds = %bb3.i
  br label %bb2, !dbg !251
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h67b1c80919143750E"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !300 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !321, metadata !DIExpression()), !dbg !323
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !322, metadata !DIExpression()), !dbg !324
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !325
  br i1 %_3, label %bb1, label %bb2, !dbg !325

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !326
  br i1 %_9, label %bb3, label %bb4, !dbg !326

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h61be5a26ab624234E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !327
  unreachable, !dbg !327

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h7e7668d57ecf7c1cE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !328
  %_15.0 = extractvalue { ptr, i64 } %5, 0, !dbg !328
  %_15.1 = extractvalue { ptr, i64 } %5, 1, !dbg !328
  %6 = insertvalue { ptr, i64 } poison, ptr %_15.0, 0, !dbg !329
  %7 = insertvalue { ptr, i64 } %6, i64 %_15.1, 1, !dbg !329
  ret { ptr, i64 } %7, !dbg !329

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h8ccbdf9bc164ace1E(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !330
  unreachable, !dbg !330
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha10120fffeb1e562E"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !331 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !339, metadata !DIExpression()), !dbg !341
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !340, metadata !DIExpression()), !dbg !342
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !343
  br i1 %_3, label %bb1, label %bb2, !dbg !343

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !344
  br i1 %_9, label %bb3, label %bb4, !dbg !344

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h61be5a26ab624234E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !345
  unreachable, !dbg !345

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc050f2c8a207f4a1E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !346
  %_17.0 = extractvalue { ptr, i64 } %5, 0, !dbg !346
  %_17.1 = extractvalue { ptr, i64 } %5, 1, !dbg !346
  %6 = insertvalue { ptr, i64 } poison, ptr %_17.0, 0, !dbg !347
  %7 = insertvalue { ptr, i64 } %6, i64 %_17.1, 1, !dbg !347
  ret { ptr, i64 } %7, !dbg !347

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h8ccbdf9bc164ace1E(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !348
  unreachable, !dbg !348
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hbf77088feacd268fE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !349 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !357, metadata !DIExpression()), !dbg !359
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !358, metadata !DIExpression()), !dbg !360
  store i64 0, ptr %_4, align 8, !dbg !361
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !361
  store i64 %self, ptr %3, align 8, !dbg !361
  %4 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !361
  %5 = load i64, ptr %4, align 8, !dbg !361, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !361
  %7 = load i64, ptr %6, align 8, !dbg !361, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha10120fffeb1e562E"(i64 %5, i64 %7, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !361
  %_3.0 = extractvalue { ptr, i64 } %8, 0, !dbg !361
  %_3.1 = extractvalue { ptr, i64 } %8, 1, !dbg !361
  %9 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !362
  %10 = insertvalue { ptr, i64 } %9, i64 %_3.1, 1, !dbg !362
  ret { ptr, i64 } %10, !dbg !362
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hf70100c103a4d15fE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !363 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !371, metadata !DIExpression()), !dbg !373
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !372, metadata !DIExpression()), !dbg !374
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !289, metadata !DIExpression()), !dbg !375
; call core::ptr::metadata::metadata
  %3 = call i64 @_ZN4core3ptr8metadata8metadata17hc96cb271582175c8E(ptr %slice.0, i64 %slice.1) #10, !dbg !377
  store i64 %self, ptr %_3, align 8, !dbg !378
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !378
  store i64 %3, ptr %4, align 8, !dbg !378
  %5 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !378
  %6 = load i64, ptr %5, align 8, !dbg !378, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !378
  %8 = load i64, ptr %7, align 8, !dbg !378, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %9 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc050f2c8a207f4a1E"(i64 %6, i64 %8, ptr %slice.0, i64 %slice.1) #10, !dbg !378
  %10 = extractvalue { ptr, i64 } %9, 0, !dbg !378
  %11 = extractvalue { ptr, i64 } %9, 1, !dbg !378
  %12 = insertvalue { ptr, i64 } poison, ptr %10, 0, !dbg !379
  %13 = insertvalue { ptr, i64 } %12, i64 %11, 1, !dbg !379
  ret { ptr, i64 } %13, !dbg !379
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h269e9f2975c5869eE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !380 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !384, metadata !DIExpression()), !dbg !386
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !385, metadata !DIExpression()), !dbg !387
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !388
  br i1 %_3, label %bb1, label %bb2, !dbg !388

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hf70100c103a4d15fE"(i64 %self, ptr %slice.0, i64 %slice.1) #10, !dbg !389
  %_11.0 = extractvalue { ptr, i64 } %3, 0, !dbg !389
  %_11.1 = extractvalue { ptr, i64 } %3, 1, !dbg !389
  %4 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0, !dbg !390
  %5 = insertvalue { ptr, i64 } %4, i64 %_11.1, 1, !dbg !390
  ret { ptr, i64 } %5, !dbg !390

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h6ac11069eb8eb4c2E(i64 %self, i64 %slice.1, ptr align 8 %0) #11, !dbg !391
  unreachable, !dbg !391
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4c1974e2bc7c8e54E"(ptr %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !392 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %_10 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !403, metadata !DIExpression()), !dbg !405
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !404, metadata !DIExpression()), !dbg !406
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17hf67062cccc0218c7E"(ptr align 8 %self) #10, !dbg !407
  %_4 = load i64, ptr %_5, align 8, !dbg !408, !noundef !24
  %_3 = icmp eq i64 %_4, -1, !dbg !408
  br i1 %_3, label %bb2, label %bb3, !dbg !408

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_10, ptr align 8 %self, i64 24, i1 false), !dbg !409
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %3 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4d86d14667fde954E"(ptr %_10) #10, !dbg !409
  %_9.0 = extractvalue { i64, i64 } %3, 0, !dbg !409
  %_9.1 = extractvalue { i64, i64 } %3, 1, !dbg !409
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha10120fffeb1e562E"(i64 %_9.0, i64 %_9.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !409
  %_8.0 = extractvalue { ptr, i64 } %4, 0, !dbg !409
  %_8.1 = extractvalue { ptr, i64 } %4, 1, !dbg !409
  %5 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0, !dbg !410
  %6 = insertvalue { ptr, i64 } %5, i64 %_8.1, 1, !dbg !410
  ret { ptr, i64 } %6, !dbg !410

bb2:                                              ; preds = %start
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17h4900bd12740a8a2aE(ptr align 8 %0) #11, !dbg !411
  unreachable, !dbg !411
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h8e26a6a69cc33cafE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !412 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !420, metadata !DIExpression()), !dbg !422
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !421, metadata !DIExpression()), !dbg !423
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h1362291682ec083eE"(ptr sret(%"core::ops::range::RangeInclusive<usize>") %_4, i64 0, i64 %self) #10, !dbg !424
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4c1974e2bc7c8e54E"(ptr %_4, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !424
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !424
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !424
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !425
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !425
  ret { ptr, i64 } %5, !dbg !425
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0403dbc38cd8bbbdE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !426 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !485, metadata !DIExpression()), !dbg !487
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !486, metadata !DIExpression()), !dbg !488
  %_3 = load ptr, ptr %self, align 8, !dbg !489, !nonnull !24, !align !490, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17hffa72bdc7f4aaa40E"(ptr align 8 %_3, ptr align 8 %f) #10, !dbg !491
  ret i1 %0, !dbg !492
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8bd86ba65fe73e59E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !493 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !498, metadata !DIExpression()), !dbg !502
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !499, metadata !DIExpression()), !dbg !503
  %_3 = load ptr, ptr %self, align 8, !dbg !504, !nonnull !24, !align !505, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17hd446ef1bbee7b292E"(ptr align 4 %_3, ptr align 8 %f) #10, !dbg !506
  ret i1 %0, !dbg !507
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h02b9546723696483E(ptr %src, ptr %dst, i64 %count) unnamed_addr #1 !dbg !508 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %diff = alloca i64, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !513, metadata !DIExpression()), !dbg !524
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !514, metadata !DIExpression()), !dbg !525
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !515, metadata !DIExpression()), !dbg !526
  call void @llvm.dbg.declare(metadata ptr %diff, metadata !522, metadata !DIExpression()), !dbg !527
  store ptr %src, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !528, metadata !DIExpression()), !dbg !533
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !535, metadata !DIExpression()), !dbg !542
  %0 = ptrtoint ptr %src to i64, !dbg !544
  store i64 %0, ptr %src_usize.dbg.spill, align 8, !dbg !545
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !516, metadata !DIExpression()), !dbg !546
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !528, metadata !DIExpression()), !dbg !547
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !535, metadata !DIExpression()), !dbg !549
  %1 = ptrtoint ptr %dst to i64, !dbg !551
  store i64 %1, ptr %dst_usize.dbg.spill, align 8, !dbg !552
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !518, metadata !DIExpression()), !dbg !553
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h61f2a1803e6b4dbdE"(i64 24, i64 %count) #10, !dbg !554
  %_7.0 = extractvalue { i64, i64 } %2, 0, !dbg !554
  %_7.1 = extractvalue { i64, i64 } %2, 1, !dbg !554
; call core::option::Option<T>::expect
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h256471b5283470d7E"(i64 %_7.0, i64 %_7.1, ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i64 61, ptr align 8 @alloc_b6214d9bb9cff44098ff81c6a07fb622) #10, !dbg !554
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !554
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !520, metadata !DIExpression()), !dbg !555
  %_11 = icmp ugt i64 %0, %1, !dbg !556
  br i1 %_11, label %bb6, label %bb8, !dbg !556

bb8:                                              ; preds = %start
  %_19.0 = sub i64 %1, %0, !dbg !557
  %_19.1 = icmp ult i64 %1, %0, !dbg !557
  %3 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !557
  br i1 %3, label %panic1, label %bb9, !dbg !557

bb6:                                              ; preds = %start
  %_16.0 = sub i64 %0, %1, !dbg !558
  %_16.1 = icmp ult i64 %0, %1, !dbg !558
  %4 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !558
  br i1 %4, label %panic, label %bb7, !dbg !558

bb7:                                              ; preds = %bb6
  store i64 %_16.0, ptr %diff, align 8, !dbg !558
  br label %bb10, !dbg !559

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4842962e9224c86809a6b0a39b458d1b) #11, !dbg !558
  unreachable, !dbg !558

bb10:                                             ; preds = %bb9, %bb7
  %_20 = load i64, ptr %diff, align 8, !dbg !560, !noundef !24
  %5 = icmp uge i64 %_20, %size, !dbg !560
  ret i1 %5, !dbg !561

bb9:                                              ; preds = %bb8
  store i64 %_19.0, ptr %diff, align 8, !dbg !557
  br label %bb10, !dbg !559

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_09047e47d7cb1d17d8eebe3155edff11) #11, !dbg !557
  unreachable, !dbg !557
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hc662ec1828ef557bE(ptr %src, ptr %dst, i64 %count) unnamed_addr #1 !dbg !562 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %diff = alloca i64, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !567, metadata !DIExpression()), !dbg !578
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !568, metadata !DIExpression()), !dbg !579
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !569, metadata !DIExpression()), !dbg !580
  call void @llvm.dbg.declare(metadata ptr %diff, metadata !576, metadata !DIExpression()), !dbg !581
  store ptr %src, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !582, metadata !DIExpression()), !dbg !587
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !589, metadata !DIExpression()), !dbg !595
  %0 = ptrtoint ptr %src to i64, !dbg !597
  store i64 %0, ptr %src_usize.dbg.spill, align 8, !dbg !598
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !570, metadata !DIExpression()), !dbg !599
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !582, metadata !DIExpression()), !dbg !600
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !589, metadata !DIExpression()), !dbg !602
  %1 = ptrtoint ptr %dst to i64, !dbg !604
  store i64 %1, ptr %dst_usize.dbg.spill, align 8, !dbg !605
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !572, metadata !DIExpression()), !dbg !606
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h61f2a1803e6b4dbdE"(i64 8, i64 %count) #10, !dbg !607
  %_7.0 = extractvalue { i64, i64 } %2, 0, !dbg !607
  %_7.1 = extractvalue { i64, i64 } %2, 1, !dbg !607
; call core::option::Option<T>::expect
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h256471b5283470d7E"(i64 %_7.0, i64 %_7.1, ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i64 61, ptr align 8 @alloc_b6214d9bb9cff44098ff81c6a07fb622) #10, !dbg !607
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !607
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !574, metadata !DIExpression()), !dbg !608
  %_11 = icmp ugt i64 %0, %1, !dbg !609
  br i1 %_11, label %bb6, label %bb8, !dbg !609

bb8:                                              ; preds = %start
  %_19.0 = sub i64 %1, %0, !dbg !610
  %_19.1 = icmp ult i64 %1, %0, !dbg !610
  %3 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !610
  br i1 %3, label %panic1, label %bb9, !dbg !610

bb6:                                              ; preds = %start
  %_16.0 = sub i64 %0, %1, !dbg !611
  %_16.1 = icmp ult i64 %0, %1, !dbg !611
  %4 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !611
  br i1 %4, label %panic, label %bb7, !dbg !611

bb7:                                              ; preds = %bb6
  store i64 %_16.0, ptr %diff, align 8, !dbg !611
  br label %bb10, !dbg !612

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4842962e9224c86809a6b0a39b458d1b) #11, !dbg !611
  unreachable, !dbg !611

bb10:                                             ; preds = %bb9, %bb7
  %_20 = load i64, ptr %diff, align 8, !dbg !613, !noundef !24
  %5 = icmp uge i64 %_20, %size, !dbg !613
  ret i1 %5, !dbg !614

bb9:                                              ; preds = %bb8
  store i64 %_19.0, ptr %diff, align 8, !dbg !610
  br label %bb10, !dbg !612

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_09047e47d7cb1d17d8eebe3155edff11) #11, !dbg !610
  unreachable, !dbg !610
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17h2081497d2c04d51aE(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !615 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !620, metadata !DIExpression()), !dbg !623
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !621, metadata !DIExpression()), !dbg !624
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !622, metadata !DIExpression()), !dbg !625
  br i1 true, label %bb1, label %bb2, !dbg !626

bb2:                                              ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h33b106e842f35ab0E.exit, %start
  %0 = mul i64 %count, 8, !dbg !627
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !627
  ret void, !dbg !628

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !626
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !626
  store ptr %dst, ptr %1, align 8, !dbg !626
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !626
  store i64 %count, ptr %2, align 8, !dbg !626
  %3 = load ptr, ptr %_6, align 8, !dbg !626, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !626
  %5 = load ptr, ptr %4, align 8, !dbg !626, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !626
  %7 = load i64, ptr %6, align 8, !dbg !626, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !629, metadata !DIExpression()), !dbg !635
  store ptr %5, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !633, metadata !DIExpression()), !dbg !635
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !634, metadata !DIExpression()), !dbg !635
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha237a7dc52462221E(ptr %3) #10, !dbg !637
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !637

bb4.i:                                            ; preds = %bb1
  store i8 0, ptr %_6.i, align 1, !dbg !637
  br label %bb6.i, !dbg !637

bb5.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha237a7dc52462221E(ptr %5) #10, !dbg !638
  %8 = zext i1 %_8.i to i8, !dbg !637
  store i8 %8, ptr %_6.i, align 1, !dbg !637
  br label %bb6.i, !dbg !637

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !637, !range !231, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !637
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !637

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !637
  br label %bb3.i, !dbg !637

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hc662ec1828ef557bE(ptr %3, ptr %5, i64 %7) #10, !dbg !639
  %11 = zext i1 %_10.i to i8, !dbg !637
  store i8 %11, ptr %_5.i, align 1, !dbg !637
  br label %bb3.i, !dbg !637

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !640, !range !231, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !640
  %_4.i = xor i1 %13, true, !dbg !640
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h33b106e842f35ab0E.exit, !dbg !640

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !641
  unreachable, !dbg !641

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h33b106e842f35ab0E.exit: ; preds = %bb3.i
  br label %bb2, !dbg !626
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !642 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !646, metadata !DIExpression()), !dbg !649
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !647, metadata !DIExpression()), !dbg !650
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !648, metadata !DIExpression()), !dbg !651
  br i1 true, label %bb1, label %bb2, !dbg !652

bb2:                                              ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h81a8d3ccbdd85a33E.exit, %start
  %0 = mul i64 %count, 24, !dbg !653
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !653
  ret void, !dbg !654

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !652
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !652
  store ptr %dst, ptr %1, align 8, !dbg !652
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !652
  store i64 %count, ptr %2, align 8, !dbg !652
  %3 = load ptr, ptr %_6, align 8, !dbg !652, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !652
  %5 = load ptr, ptr %4, align 8, !dbg !652, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !652
  %7 = load i64, ptr %6, align 8, !dbg !652, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !655, metadata !DIExpression()), !dbg !660
  store ptr %5, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !658, metadata !DIExpression()), !dbg !660
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !659, metadata !DIExpression()), !dbg !660
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %3) #10, !dbg !662
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !662

bb4.i:                                            ; preds = %bb1
  store i8 0, ptr %_6.i, align 1, !dbg !662
  br label %bb6.i, !dbg !662

bb5.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %5) #10, !dbg !663
  %8 = zext i1 %_8.i to i8, !dbg !662
  store i8 %8, ptr %_6.i, align 1, !dbg !662
  br label %bb6.i, !dbg !662

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !662, !range !231, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !662
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !662

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !662
  br label %bb3.i, !dbg !662

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h02b9546723696483E(ptr %3, ptr %5, i64 %7) #10, !dbg !664
  %11 = zext i1 %_10.i to i8, !dbg !662
  store i8 %11, ptr %_5.i, align 1, !dbg !662
  br label %bb3.i, !dbg !662

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !665, !range !231, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !665
  %_4.i = xor i1 %13, true, !dbg !665
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h81a8d3ccbdd85a33E.exit, !dbg !665

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !666
  unreachable, !dbg !666

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h81a8d3ccbdd85a33E.exit: ; preds = %bb3.i
  br label %bb2, !dbg !652
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h149af2a9f28e4a2cE(ptr %ptr) unnamed_addr #1 !dbg !667 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !682, metadata !DIExpression()), !dbg !685
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha4ea9b471af7cd24E"(ptr %ptr) #10, !dbg !686
  %_2 = xor i1 %_3, true, !dbg !687
  br i1 %_2, label %bb2, label %bb1, !dbg !687

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !687
  br label %bb3, !dbg !687

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17ha7f55de5a75b7c43E"(ptr %ptr) #10, !dbg !688
  %1 = zext i1 %_4 to i8, !dbg !687
  store i8 %1, ptr %0, align 1, !dbg !687
  br label %bb3, !dbg !687

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !689, !range !231, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !689
  ret i1 %3, !dbg !689
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %ptr) unnamed_addr #1 !dbg !690 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !694, metadata !DIExpression()), !dbg !695
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h71ed3c45e962a382E"(ptr %ptr) #10, !dbg !696
  %_2 = xor i1 %_3, true, !dbg !697
  br i1 %_2, label %bb2, label %bb1, !dbg !697

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !697
  br label %bb3, !dbg !697

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h8b57dfd4eaa3b392E"(ptr %ptr) #10, !dbg !698
  %1 = zext i1 %_4 to i8, !dbg !697
  store i8 %1, ptr %0, align 1, !dbg !697
  br label %bb3, !dbg !697

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !699, !range !231, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !699
  ret i1 %3, !dbg !699
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5e3db6c043bf442bE(ptr %ptr) unnamed_addr #1 !dbg !700 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !712, metadata !DIExpression()), !dbg !715
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9b76b1365caf576bE"(ptr %ptr) #10, !dbg !716
  %_2 = xor i1 %_3, true, !dbg !717
  br i1 %_2, label %bb2, label %bb1, !dbg !717

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !717
  br label %bb3, !dbg !717

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h7d5ca15aba9d339fE"(ptr %ptr) #10, !dbg !718
  %1 = zext i1 %_4 to i8, !dbg !717
  store i8 %1, ptr %0, align 1, !dbg !717
  br label %bb3, !dbg !717

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !719, !range !231, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !719
  ret i1 %3, !dbg !719
}

; core::intrinsics::is_valid_allocation_size
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hc0b066e775af0993E(i64 %len) unnamed_addr #1 !dbg !720 {
start:
  %len.dbg.spill = alloca i64, align 8
  %max_len.dbg.spill = alloca i64, align 8
  store i64 384307168202282325, ptr %max_len.dbg.spill, align 8, !dbg !727
  call void @llvm.dbg.declare(metadata ptr %max_len.dbg.spill, metadata !725, metadata !DIExpression()), !dbg !727
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !727
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !724, metadata !DIExpression()), !dbg !728
  %0 = icmp ule i64 %len, 384307168202282325, !dbg !729
  ret i1 %0, !dbg !730
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17h3e8e1c65f736c496E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !731 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !733, metadata !DIExpression()), !dbg !736
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !734, metadata !DIExpression()), !dbg !737
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !735, metadata !DIExpression()), !dbg !738
  br i1 true, label %bb1, label %bb2, !dbg !739

bb2:                                              ; preds = %_ZN4core10intrinsics4copy7runtime17h655fbc99ebdf040dE.exit, %start
  %0 = mul i64 8, %count, !dbg !740
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !740
  ret void, !dbg !741

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !739
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !739
  store ptr %dst, ptr %1, align 8, !dbg !739
  %2 = load ptr, ptr %_6, align 8, !dbg !739, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !739
  %4 = load ptr, ptr %3, align 8, !dbg !739, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !742, metadata !DIExpression()), !dbg !749
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !748, metadata !DIExpression()), !dbg !749
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha237a7dc52462221E(ptr %2) #10, !dbg !751
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !751

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !751
  br label %bb3.i, !dbg !751

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha237a7dc52462221E(ptr %4) #10, !dbg !752
  %5 = zext i1 %_6.i to i8, !dbg !751
  store i8 %5, ptr %_4.i, align 1, !dbg !751
  br label %bb3.i, !dbg !751

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %6 = load i8, ptr %_4.i, align 1, !dbg !753, !range !231, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !753
  %_3.i = xor i1 %7, true, !dbg !753
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17h655fbc99ebdf040dE.exit, !dbg !753

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_2f5fae7ca9908dec8d13988b47dc9dc4, i64 104) #11, !dbg !754
  unreachable, !dbg !754

_ZN4core10intrinsics4copy7runtime17h655fbc99ebdf040dE.exit: ; preds = %bb3.i
  br label %bb2, !dbg !739
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17h6077bdcf76790159E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !755 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !757, metadata !DIExpression()), !dbg !760
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !758, metadata !DIExpression()), !dbg !761
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !759, metadata !DIExpression()), !dbg !762
  br i1 true, label %bb1, label %bb2, !dbg !763

bb2:                                              ; preds = %_ZN4core10intrinsics4copy7runtime17h7396b1ace4cfa01bE.exit, %start
  %0 = mul i64 24, %count, !dbg !764
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !764
  ret void, !dbg !765

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !763
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !763
  store ptr %dst, ptr %1, align 8, !dbg !763
  %2 = load ptr, ptr %_6, align 8, !dbg !763, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !763
  %4 = load ptr, ptr %3, align 8, !dbg !763, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !766, metadata !DIExpression()), !dbg !772
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !771, metadata !DIExpression()), !dbg !772
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %2) #10, !dbg !774
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !774

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !774
  br label %bb3.i, !dbg !774

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %4) #10, !dbg !775
  %5 = zext i1 %_6.i to i8, !dbg !774
  store i8 %5, ptr %_4.i, align 1, !dbg !774
  br label %bb3.i, !dbg !774

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %6 = load i8, ptr %_4.i, align 1, !dbg !776, !range !231, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !776
  %_3.i = xor i1 %7, true, !dbg !776
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17h7396b1ace4cfa01bE.exit, !dbg !776

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_2f5fae7ca9908dec8d13988b47dc9dc4, i64 104) #11, !dbg !777
  unreachable, !dbg !777

_ZN4core10intrinsics4copy7runtime17h7396b1ace4cfa01bE.exit: ; preds = %bb3.i
  br label %bb2, !dbg !763
}

; core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc5dbf38d3fae6ffaE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !778 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !785, metadata !DIExpression()), !dbg !787
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !786, metadata !DIExpression()), !dbg !788
  %_4 = load i64, ptr %self, align 8, !dbg !789, !noundef !24
  %_5 = load i64, ptr %other, align 8, !dbg !790, !noundef !24
  %_3 = icmp ult i64 %_4, %_5, !dbg !789
  br i1 %_3, label %bb1, label %bb2, !dbg !789

bb2:                                              ; preds = %start
  %_7 = load i64, ptr %self, align 8, !dbg !791, !noundef !24
  %_8 = load i64, ptr %other, align 8, !dbg !792, !noundef !24
  %_6 = icmp eq i64 %_7, %_8, !dbg !791
  br i1 %_6, label %bb3, label %bb4, !dbg !791

bb1:                                              ; preds = %start
  store i8 -1, ptr %0, align 1, !dbg !793
  br label %bb5, !dbg !794

bb5:                                              ; preds = %bb4, %bb3, %bb1
  %1 = load i8, ptr %0, align 1, !dbg !795, !range !796, !noundef !24
  ret i8 %1, !dbg !795

bb4:                                              ; preds = %bb2
  store i8 1, ptr %0, align 1, !dbg !797
  br label %bb5, !dbg !798

bb3:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !799
  br label %bb5, !dbg !798
}

; core::fmt::num::<impl core::fmt::Debug for u32>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17ha641c5a6c48c5a08E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #0 !dbg !800 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !807, metadata !DIExpression()), !dbg !809
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !808, metadata !DIExpression()), !dbg !810
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h53369918fec5ec93E(ptr align 8 %f) #10, !dbg !811
  br i1 %_3, label %bb2, label %bb3, !dbg !811

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h13f9b58d1d513253E(ptr align 8 %f) #10, !dbg !812
  br i1 %_5, label %bb5, label %bb6, !dbg !812

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17hb81d13d043ef51c9E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !813
  %2 = zext i1 %1 to i8, !dbg !813
  store i8 %2, ptr %0, align 1, !dbg !813
  br label %bb7, !dbg !813

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !814, !range !231, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !814
  ret i1 %4, !dbg !814

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h7135f90cf42e8d03E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !815
  %6 = zext i1 %5 to i8, !dbg !815
  store i8 %6, ptr %0, align 1, !dbg !815
  br label %bb7, !dbg !815

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h5c2128be05ede0f4E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !816
  %8 = zext i1 %7 to i8, !dbg !816
  store i8 %8, ptr %0, align 1, !dbg !816
  br label %bb7, !dbg !816
}

; core::fmt::num::<impl core::fmt::Debug for u64>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h4f92344c1f7e8a62E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !817 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !822, metadata !DIExpression()), !dbg !824
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !823, metadata !DIExpression()), !dbg !825
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h53369918fec5ec93E(ptr align 8 %f) #10, !dbg !826
  br i1 %_3, label %bb2, label %bb3, !dbg !826

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h13f9b58d1d513253E(ptr align 8 %f) #10, !dbg !827
  br i1 %_5, label %bb5, label %bb6, !dbg !827

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17he220ad367d7178a1E"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !828
  %2 = zext i1 %1 to i8, !dbg !828
  store i8 %2, ptr %0, align 1, !dbg !828
  br label %bb7, !dbg !828

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !829, !range !231, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !829
  ret i1 %4, !dbg !829

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hf7f02d87d7b2883bE"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !830
  %6 = zext i1 %5 to i8, !dbg !830
  store i8 %6, ptr %0, align 1, !dbg !830
  br label %bb7, !dbg !830

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h7a51490cd6e4a166E"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !831
  %8 = zext i1 %7 to i8, !dbg !831
  store i8 %8, ptr %0, align 1, !dbg !831
  br label %bb7, !dbg !831
}

; core::fmt::builders::DebugList::entries
; Function Attrs: noredzone nounwind
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h6e0b94c7d1d04dadE(ptr align 8 %self, ptr %entries.0, ptr %entries.1) unnamed_addr #1 !dbg !832 {
start:
  %entries.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %entry = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !865, metadata !DIExpression()), !dbg !871
  %0 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 0
  store ptr %entries.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 1
  store ptr %entries.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %entries.dbg.spill, metadata !866, metadata !DIExpression()), !dbg !872
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !867, metadata !DIExpression()), !dbg !873
  call void @llvm.dbg.declare(metadata ptr %entry, metadata !869, metadata !DIExpression()), !dbg !874
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h36364877f8c396d4E"(ptr %entries.0, ptr %entries.1) #10, !dbg !875
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !875
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !875
  %3 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 0, !dbg !875
  store ptr %_3.0, ptr %3, align 8, !dbg !875
  %4 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 1, !dbg !875
  store ptr %_3.1, ptr %4, align 8, !dbg !875
  br label %bb2, !dbg !876

bb2:                                              ; preds = %bb4, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9da836cc48c1beebE"(ptr align 8 %iter) #10, !dbg !873
  store ptr %5, ptr %_5, align 8, !dbg !873
  %6 = load ptr, ptr %_5, align 8, !dbg !873, !noundef !24
  %7 = ptrtoint ptr %6 to i64, !dbg !873
  %8 = icmp eq i64 %7, 0, !dbg !873
  %_7 = select i1 %8, i64 0, i64 1, !dbg !873
  %9 = icmp eq i64 %_7, 0, !dbg !873
  br i1 %9, label %bb6, label %bb4, !dbg !873

bb6:                                              ; preds = %bb2
  ret ptr %self, !dbg !877

bb4:                                              ; preds = %bb2
  %10 = load ptr, ptr %_5, align 8, !dbg !878, !nonnull !24, !align !490, !noundef !24
  store ptr %10, ptr %entry, align 8, !dbg !878
; call core::fmt::builders::DebugList::entry
  %_9 = call align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h7cd86476249c3b94E(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.1) #10, !dbg !879
  br label %bb2, !dbg !880

bb5:                                              ; No predecessors!
  unreachable, !dbg !873
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17ha7dc9f46a2c1bbf8E(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1, ptr align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 !dbg !881 {
start:
  %_4.dbg.spill = alloca %"core::fmt::rt::UnsafeArg", align 1
  %fmt.dbg.spill = alloca { ptr, i64 }, align 8
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_5 = alloca { ptr, i64 }, align 8
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::rt::UnsafeArg", align 1
  call void @llvm.dbg.declare(metadata ptr %_unsafe_arg.dbg.spill, metadata !958, metadata !DIExpression()), !dbg !960
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0, !dbg !960
  store ptr %pieces.0, ptr %1, align 8, !dbg !960
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1, !dbg !960
  store i64 %pieces.1, ptr %2, align 8, !dbg !960
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !955, metadata !DIExpression()), !dbg !961
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0, !dbg !960
  store ptr %args.0, ptr %3, align 8, !dbg !960
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1, !dbg !960
  store i64 %args.1, ptr %4, align 8, !dbg !960
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !956, metadata !DIExpression()), !dbg !962
  %5 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 0, !dbg !960
  store ptr %fmt.0, ptr %5, align 8, !dbg !960
  %6 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 1, !dbg !960
  store i64 %fmt.1, ptr %6, align 8, !dbg !960
  call void @llvm.dbg.declare(metadata ptr %fmt.dbg.spill, metadata !957, metadata !DIExpression()), !dbg !963
  call void @llvm.dbg.declare(metadata ptr %_4.dbg.spill, metadata !959, metadata !DIExpression()), !dbg !960
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !964
  store ptr %fmt.0, ptr %7, align 8, !dbg !964
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !964
  store i64 %fmt.1, ptr %8, align 8, !dbg !964
  %9 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !965
  store ptr %pieces.0, ptr %9, align 8, !dbg !965
  %10 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !965
  store i64 %pieces.1, ptr %10, align 8, !dbg !965
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !965
  %12 = load ptr, ptr %11, align 8, !dbg !965, !align !490, !noundef !24
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !965
  %14 = load i64, ptr %13, align 8, !dbg !965
  %15 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !965
  %16 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 0, !dbg !965
  store ptr %12, ptr %16, align 8, !dbg !965
  %17 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 1, !dbg !965
  store i64 %14, ptr %17, align 8, !dbg !965
  %18 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !965
  %19 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 0, !dbg !965
  store ptr %args.0, ptr %19, align 8, !dbg !965
  %20 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 1, !dbg !965
  store i64 %args.1, ptr %20, align 8, !dbg !965
  ret void, !dbg !966
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments6new_v117hd805826023b59a70E(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !967 {
start:
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_15 = alloca { ptr, i64 }, align 8
  %_13 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !972, metadata !DIExpression()), !dbg !974
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !973, metadata !DIExpression()), !dbg !975
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !976
  br i1 %_4, label %bb1, label %bb2, !dbg !976

bb2:                                              ; preds = %start
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %args.1, i64 1), !dbg !977
  %_11.0 = extractvalue { i64, i1 } %5, 0, !dbg !977
  %_11.1 = extractvalue { i64, i1 } %5, 1, !dbg !977
  %6 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !977
  br i1 %6, label %panic, label %bb4, !dbg !977

bb1:                                              ; preds = %start
  store i8 1, ptr %_3, align 1, !dbg !976
  br label %bb3, !dbg !976

bb3:                                              ; preds = %bb4, %bb1
  %7 = load i8, ptr %_3, align 1, !dbg !976, !range !231, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !976
  br i1 %8, label %bb5, label %bb7, !dbg !976

bb4:                                              ; preds = %bb2
  %_7 = icmp ugt i64 %pieces.1, %_11.0, !dbg !978
  %9 = zext i1 %_7 to i8, !dbg !976
  store i8 %9, ptr %_3, align 1, !dbg !976
  br label %bb3, !dbg !976

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_6efc4ec71950c88bb18b2dcebbe56926) #11, !dbg !977
  unreachable, !dbg !977

bb7:                                              ; preds = %bb3
  store ptr null, ptr %_15, align 8, !dbg !979
  %10 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !980
  store ptr %pieces.0, ptr %10, align 8, !dbg !980
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !980
  store i64 %pieces.1, ptr %11, align 8, !dbg !980
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_15, i32 0, i32 0, !dbg !980
  %13 = load ptr, ptr %12, align 8, !dbg !980, !align !490, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_15, i32 0, i32 1, !dbg !980
  %15 = load i64, ptr %14, align 8, !dbg !980
  %16 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !980
  %17 = getelementptr inbounds { ptr, i64 }, ptr %16, i32 0, i32 0, !dbg !980
  store ptr %13, ptr %17, align 8, !dbg !980
  %18 = getelementptr inbounds { ptr, i64 }, ptr %16, i32 0, i32 1, !dbg !980
  store i64 %15, ptr %18, align 8, !dbg !980
  %19 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !980
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !980
  store ptr %args.0, ptr %20, align 8, !dbg !980
  %21 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !980
  store i64 %args.1, ptr %21, align 8, !dbg !980
  ret void, !dbg !981

bb5:                                              ; preds = %bb3
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h3df1cca92c3d59d6E(ptr sret(%"core::fmt::Arguments<'_>") %_13, ptr align 8 @alloc_560206a49c61adca6f3f0639a12632eb, i64 1) #10, !dbg !982
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h2c59f66d276f88adE(ptr %_13, ptr align 8 @alloc_d3149a254d0e3dec02e2738403904da6) #11, !dbg !982
  unreachable, !dbg !982
}

; core::fmt::Arguments::new_const
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments9new_const17h3df1cca92c3d59d6E(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1) unnamed_addr #0 !dbg !983 {
start:
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !988, metadata !DIExpression()), !dbg !989
  %_2 = icmp ugt i64 %pieces.1, 1, !dbg !990
  br i1 %_2, label %bb1, label %bb3, !dbg !990

bb3:                                              ; preds = %start
  store ptr null, ptr %_7, align 8, !dbg !991
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !992
  store ptr %pieces.0, ptr %3, align 8, !dbg !992
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !992
  store i64 %pieces.1, ptr %4, align 8, !dbg !992
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !992
  %6 = load ptr, ptr %5, align 8, !dbg !992, !align !490, !noundef !24
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !992
  %8 = load i64, ptr %7, align 8, !dbg !992
  %9 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !992
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !992
  store ptr %6, ptr %10, align 8, !dbg !992
  %11 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !992
  store i64 %8, ptr %11, align 8, !dbg !992
  %12 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !992
  %13 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 0, !dbg !992
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %13, align 8, !dbg !992
  %14 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 1, !dbg !992
  store i64 0, ptr %14, align 8, !dbg !992
  ret void, !dbg !993

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h3df1cca92c3d59d6E(ptr sret(%"core::fmt::Arguments<'_>") %_5, ptr align 8 @alloc_560206a49c61adca6f3f0639a12632eb, i64 1) #10, !dbg !994
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h2c59f66d276f88adE(ptr %_5, ptr align 8 @alloc_5eca5fde541bf3444e5a23d5419b88a4) #11, !dbg !994
  unreachable, !dbg !994
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h2040f8deaa3606bbE(ptr align 1 %x, ptr align 1 %y) unnamed_addr #0 !dbg !995 {
start:
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i8, align 1
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1010, metadata !DIExpression()), !dbg !1018
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1011, metadata !DIExpression()), !dbg !1019
; call core::ptr::read
  %a = call i8 @_ZN4core3ptr4read17h4392261126658b84E(ptr %x) #10, !dbg !1020
  store i8 %a, ptr %a.dbg.spill, align 1, !dbg !1020
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !1012, metadata !DIExpression()), !dbg !1021
; call core::ptr::read
  %b = call i8 @_ZN4core3ptr4read17h4392261126658b84E(ptr %y) #10, !dbg !1022
  store i8 %b, ptr %b.dbg.spill, align 1, !dbg !1022
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1014, metadata !DIExpression()), !dbg !1023
; call core::ptr::write
  call void @_ZN4core3ptr5write17hffac2092019b1350E(ptr %x, i8 %b) #10, !dbg !1024
; call core::ptr::write
  call void @_ZN4core3ptr5write17hffac2092019b1350E(ptr %y, i8 %a) #10, !dbg !1025
  ret void, !dbg !1026
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h25eaebc9d9b1d20dE(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !1027 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_9 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %b = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %a = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1032, metadata !DIExpression()), !dbg !1038
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1033, metadata !DIExpression()), !dbg !1039
  call void @llvm.dbg.declare(metadata ptr %a, metadata !1034, metadata !DIExpression()), !dbg !1040
  call void @llvm.dbg.declare(metadata ptr %b, metadata !1036, metadata !DIExpression()), !dbg !1041
; call core::ptr::read
  call void @_ZN4core3ptr4read17h927c413b34ea08c4E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %a, ptr %x) #10, !dbg !1042
; call core::ptr::read
  call void @_ZN4core3ptr4read17h927c413b34ea08c4E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %b, ptr %y) #10, !dbg !1043
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !1044
; call core::ptr::write
  call void @_ZN4core3ptr5write17h720351d6fe90aa68E(ptr %x, ptr %_9) #10, !dbg !1045
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !1046
; call core::ptr::write
  call void @_ZN4core3ptr5write17h720351d6fe90aa68E(ptr %y, ptr %_12) #10, !dbg !1047
  ret void, !dbg !1048
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h9214e2f4aabb90b2E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !1049 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %_9 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %b = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %a = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1054, metadata !DIExpression()), !dbg !1060
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1055, metadata !DIExpression()), !dbg !1061
  call void @llvm.dbg.declare(metadata ptr %a, metadata !1056, metadata !DIExpression()), !dbg !1062
  call void @llvm.dbg.declare(metadata ptr %b, metadata !1058, metadata !DIExpression()), !dbg !1063
; call core::ptr::read
  call void @_ZN4core3ptr4read17h7be6a65340524512E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %a, ptr %x) #10, !dbg !1064
; call core::ptr::read
  call void @_ZN4core3ptr4read17h7be6a65340524512E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %b, ptr %y) #10, !dbg !1065
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !1066
; call core::ptr::write
  call void @_ZN4core3ptr5write17hae0b416515095691E(ptr %x, ptr %_9) #10, !dbg !1067
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !1068
; call core::ptr::write
  call void @_ZN4core3ptr5write17hae0b416515095691E(ptr %y, ptr %_12) #10, !dbg !1069
  ret void, !dbg !1070
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17hfeda14ea61450d02E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !1071 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1076, metadata !DIExpression()), !dbg !1082
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1077, metadata !DIExpression()), !dbg !1083
; call core::ptr::read
  %a = call i64 @_ZN4core3ptr4read17h9a8e84d1c355cdbbE(ptr %x) #10, !dbg !1084
  store i64 %a, ptr %a.dbg.spill, align 8, !dbg !1084
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !1078, metadata !DIExpression()), !dbg !1085
; call core::ptr::read
  %b = call i64 @_ZN4core3ptr4read17h9a8e84d1c355cdbbE(ptr %y) #10, !dbg !1086
  store i64 %b, ptr %b.dbg.spill, align 8, !dbg !1086
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1080, metadata !DIExpression()), !dbg !1087
; call core::ptr::write
  call void @_ZN4core3ptr5write17hd1eece99efa8bef5E(ptr %x, i64 %b) #10, !dbg !1088
; call core::ptr::write
  call void @_ZN4core3ptr5write17hd1eece99efa8bef5E(ptr %y, i64 %a) #10, !dbg !1089
  ret void, !dbg !1090
}

; core::mem::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem4swap17hc8c42478b0aa4ab0E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !1091 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1093, metadata !DIExpression()), !dbg !1095
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1094, metadata !DIExpression()), !dbg !1096
  %_7 = icmp eq i64 8, 0, !dbg !1097
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !1097
  br i1 %0, label %panic, label %bb3, !dbg !1097

bb3:                                              ; preds = %start
  %_4 = udiv i64 24, 8, !dbg !1097
  %_3 = icmp ugt i64 %_4, 4, !dbg !1097
  br i1 %_3, label %bb4, label %bb5, !dbg !1097

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_f5758da710ba897165288b0f4da8acb3) #11, !dbg !1097
  unreachable, !dbg !1097

bb5:                                              ; preds = %bb3
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h25eaebc9d9b1d20dE(ptr align 8 %x, ptr align 8 %y) #10, !dbg !1098
  br label %bb6, !dbg !1098

bb4:                                              ; preds = %bb3
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h6ff66115d4295869E(ptr %x, ptr %y, i64 1) #10, !dbg !1099
  br label %bb6, !dbg !1099

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !1100
}

; core::mem::forget
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem6forget17hb08bf7ff8de50cc7E(ptr %t) unnamed_addr #0 !dbg !1101 {
start:
  %_2 = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  call void @llvm.dbg.declare(metadata ptr %t, metadata !1105, metadata !DIExpression()), !dbg !1106
  call void @llvm.dbg.declare(metadata ptr %t, metadata !1107, metadata !DIExpression()), !dbg !1114
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %t, i64 24, i1 false), !dbg !1116
  ret void, !dbg !1117
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h61f2a1803e6b4dbdE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1118 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1125, metadata !DIExpression()), !dbg !1130
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !1126, metadata !DIExpression()), !dbg !1131
  store i64 %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1132, metadata !DIExpression()), !dbg !1145
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1141, metadata !DIExpression()), !dbg !1147
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1148
  %_5.0.i = extractvalue { i64, i1 } %3, 0, !dbg !1148
  %_5.1.i = extractvalue { i64, i1 } %3, 1, !dbg !1148
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !1149
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill.i, metadata !1142, metadata !DIExpression()), !dbg !1150
  %4 = zext i1 %_5.1.i to i8, !dbg !1151
  store i8 %4, ptr %b.dbg.spill.i, align 1, !dbg !1151
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill.i, metadata !1144, metadata !DIExpression()), !dbg !1152
  store i64 %_5.0.i, ptr %0, align 8, !dbg !1153
  %5 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1153
  %6 = zext i1 %_5.1.i to i8, !dbg !1153
  store i8 %6, ptr %5, align 8, !dbg !1153
  %7 = load i64, ptr %0, align 8, !dbg !1154, !noundef !24
  %8 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1154
  %9 = load i8, ptr %8, align 8, !dbg !1154, !range !231, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1154
  %11 = zext i1 %10 to i8, !dbg !1154
  %12 = insertvalue { i64, i8 } poison, i64 %7, 0, !dbg !1154
  %13 = insertvalue { i64, i8 } %12, i8 %11, 1, !dbg !1154
  %_5.0 = extractvalue { i64, i8 } %13, 0, !dbg !1155
  %14 = extractvalue { i64, i8 } %13, 1, !dbg !1155
  %_5.1 = trunc i8 %14 to i1, !dbg !1155
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !1156
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !1127, metadata !DIExpression()), !dbg !1157
  %15 = zext i1 %_5.1 to i8, !dbg !1158
  store i8 %15, ptr %b.dbg.spill, align 1, !dbg !1158
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1129, metadata !DIExpression()), !dbg !1159
  %16 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1160
  %17 = zext i1 %16 to i8, !dbg !1160
  store i8 %17, ptr %1, align 1, !dbg !1160
  %18 = load i8, ptr %1, align 1, !dbg !1160, !range !231, !noundef !24
  %_6 = trunc i8 %18 to i1, !dbg !1160
  br i1 %_6, label %bb3, label %bb4, !dbg !1160

bb4:                                              ; preds = %start
  %19 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1161
  store i64 %_5.0, ptr %19, align 8, !dbg !1161
  store i64 1, ptr %2, align 8, !dbg !1161
  br label %bb5, !dbg !1162

bb3:                                              ; preds = %start
  store i64 0, ptr %2, align 8, !dbg !1163
  br label %bb5, !dbg !1162

bb5:                                              ; preds = %bb4, %bb3
  %20 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !1164
  %21 = load i64, ptr %20, align 8, !dbg !1164, !range !1165, !noundef !24
  %22 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1164
  %23 = load i64, ptr %22, align 8, !dbg !1164
  %24 = insertvalue { i64, i64 } poison, i64 %21, 0, !dbg !1164
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1, !dbg !1164
  ret { i64, i64 } %25, !dbg !1164
}

; core::num::<impl usize>::next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h83aa73e12cb434f0E"(i64 %self) unnamed_addr #0 !dbg !1166 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1170, metadata !DIExpression()), !dbg !1171
; call core::num::<impl usize>::one_less_than_next_power_of_two
  %_2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h26110568130db274E"(i64 %self) #10, !dbg !1172
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_2, i64 1), !dbg !1172
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !1172
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !1172
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !1172
  br i1 %1, label %panic, label %bb2, !dbg !1172

bb2:                                              ; preds = %start
  ret i64 %_3.0, !dbg !1173

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_6d1d504c0e89254185551a8585bdfbfb) #11, !dbg !1172
  unreachable, !dbg !1172
}

; core::num::<impl usize>::one_less_than_next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h26110568130db274E"(i64 %self) unnamed_addr #0 !dbg !1174 {
start:
  %z.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %p.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1176, metadata !DIExpression()), !dbg !1181
  %_2 = icmp ule i64 %self, 1, !dbg !1182
  br i1 %_2, label %bb1, label %bb2, !dbg !1182

bb2:                                              ; preds = %start
  %_4.0 = sub i64 %self, 1, !dbg !1183
  %_4.1 = icmp ult i64 %self, 1, !dbg !1183
  %2 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1183
  br i1 %2, label %panic, label %bb3, !dbg !1183

bb1:                                              ; preds = %start
  store i64 0, ptr %1, align 8, !dbg !1184
  br label %bb6, !dbg !1185

bb6:                                              ; preds = %bb5, %bb1
  %3 = load i64, ptr %1, align 8, !dbg !1185, !noundef !24
  ret i64 %3, !dbg !1185

bb3:                                              ; preds = %bb2
  store i64 %_4.0, ptr %p.dbg.spill, align 8, !dbg !1183
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !1177, metadata !DIExpression()), !dbg !1186
  %4 = call i64 @llvm.ctlz.i64(i64 %_4.0, i1 true), !dbg !1187
  store i64 %4, ptr %0, align 8, !dbg !1187
  %z = load i64, ptr %0, align 8, !dbg !1187, !noundef !24
  store i64 %z, ptr %z.dbg.spill, align 8, !dbg !1187
  call void @llvm.dbg.declare(metadata ptr %z.dbg.spill, metadata !1179, metadata !DIExpression()), !dbg !1188
  %_7 = icmp ult i64 %z, 64, !dbg !1189
  %5 = call i1 @llvm.expect.i1(i1 %_7, i1 true), !dbg !1189
  br i1 %5, label %bb5, label %panic1, !dbg !1189

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6d1d504c0e89254185551a8585bdfbfb) #11, !dbg !1183
  unreachable, !dbg !1183

bb5:                                              ; preds = %bb3
  %6 = and i64 %z, 63, !dbg !1189
  %7 = lshr i64 -1, %6, !dbg !1189
  store i64 %7, ptr %1, align 8, !dbg !1189
  br label %bb6, !dbg !1185

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.4, i64 36, ptr align 8 @alloc_6d1d504c0e89254185551a8585bdfbfb) #11, !dbg !1189
  unreachable, !dbg !1189
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4d86d14667fde954E"(ptr %self) unnamed_addr #0 !dbg !1190 {
start:
  %exclusive_end.dbg.spill = alloca i64, align 8
  %start1 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1196, metadata !DIExpression()), !dbg !1201
  call void @llvm.dbg.declare(metadata ptr %start1, metadata !1199, metadata !DIExpression()), !dbg !1202
  %1 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 1, !dbg !1203
  %_3 = load i64, ptr %1, align 8, !dbg !1203, !noundef !24
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_3, i64 1), !dbg !1203
  %_4.0 = extractvalue { i64, i1 } %2, 0, !dbg !1203
  %_4.1 = extractvalue { i64, i1 } %2, 1, !dbg !1203
  %3 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1203
  br i1 %3, label %panic, label %bb1, !dbg !1203

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %exclusive_end.dbg.spill, align 8, !dbg !1203
  call void @llvm.dbg.declare(metadata ptr %exclusive_end.dbg.spill, metadata !1197, metadata !DIExpression()), !dbg !1204
  %4 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 2, !dbg !1205
  %5 = load i8, ptr %4, align 8, !dbg !1205, !range !231, !noundef !24
  %_6 = trunc i8 %5 to i1, !dbg !1205
  br i1 %_6, label %bb2, label %bb3, !dbg !1205

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0e90a8d2edaf8520d1b6cc44dc6ee0c4) #11, !dbg !1203
  unreachable, !dbg !1203

bb3:                                              ; preds = %bb1
  %6 = load i64, ptr %self, align 8, !dbg !1206, !noundef !24
  store i64 %6, ptr %start1, align 8, !dbg !1206
  br label %bb4, !dbg !1207

bb2:                                              ; preds = %bb1
  store i64 %_4.0, ptr %start1, align 8, !dbg !1208
  br label %bb4, !dbg !1207

bb4:                                              ; preds = %bb3, %bb2
  %_7 = load i64, ptr %start1, align 8, !dbg !1209, !noundef !24
  store i64 %_7, ptr %0, align 8, !dbg !1209
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1209
  store i64 %_4.0, ptr %7, align 8, !dbg !1209
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !1210
  %9 = load i64, ptr %8, align 8, !dbg !1210, !noundef !24
  %10 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1210
  %11 = load i64, ptr %10, align 8, !dbg !1210, !noundef !24
  %12 = insertvalue { i64, i64 } poison, i64 %9, 0, !dbg !1210
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1, !dbg !1210
  ret { i64, i64 } %13, !dbg !1210
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h68c478d88bc94cb5E"(ptr align 8 %self, ptr align 8 %0, ptr align 8 %1) unnamed_addr #1 !dbg !1211 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %args = alloca { ptr, ptr }, align 8
  store ptr %0, ptr %args, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1
  store ptr %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1230, metadata !DIExpression()), !dbg !1239
  call void @llvm.dbg.declare(metadata ptr %args, metadata !1231, metadata !DIExpression()), !dbg !1240
  %_3 = load ptr, ptr %self, align 8, !dbg !1241, !nonnull !24, !align !490, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 0, !dbg !1241
  %4 = load ptr, ptr %3, align 8, !dbg !1241, !nonnull !24, !align !490, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1, !dbg !1241
  %6 = load ptr, ptr %5, align 8, !dbg !1241, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %7 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %_3, ptr align 8 %4, ptr align 8 %6) #10, !dbg !1241
  ret i1 %7, !dbg !1242
}

; core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h9eb74c98e442b3e6E"(ptr align 8 %_1) unnamed_addr #1 !dbg !1243 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1254, metadata !DIExpression()), !dbg !1257
; call <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2871d52ba83f2309E"(ptr align 8 %_1) #10, !dbg !1257
  ret void, !dbg !1257
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr19swap_nonoverlapping17h6ff66115d4295869E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1258 {
start:
  %self.dbg.spill.i20 = alloca ptr, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %y.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill16 = alloca i64, align 8
  %y.dbg.spill13 = alloca ptr, align 8
  %x.dbg.spill11 = alloca ptr, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %y.dbg.spill5 = alloca ptr, align 8
  %x.dbg.spill3 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_39 = alloca i8, align 1
  %_20 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1262, metadata !DIExpression()), !dbg !1278
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1263, metadata !DIExpression()), !dbg !1279
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1264, metadata !DIExpression()), !dbg !1280
  br i1 true, label %bb1, label %bb2, !dbg !1281

bb2:                                              ; preds = %_ZN4core3ptr19swap_nonoverlapping7runtime17h8247aa2f2b5a38afE.exit, %start
  %_8 = icmp ule i64 8, 8, !dbg !1282
  br i1 %_8, label %bb4, label %bb3, !dbg !1282

bb1:                                              ; preds = %start
  store ptr %x, ptr %_6, align 8, !dbg !1281
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1281
  store ptr %y, ptr %1, align 8, !dbg !1281
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1281
  store i64 %count, ptr %2, align 8, !dbg !1281
  %3 = load ptr, ptr %_6, align 8, !dbg !1281, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1281
  %5 = load ptr, ptr %4, align 8, !dbg !1281, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1281
  %7 = load i64, ptr %6, align 8, !dbg !1281, !noundef !24
  store ptr %3, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !1283, metadata !DIExpression()), !dbg !1289
  store ptr %5, ptr %y.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill.i, metadata !1287, metadata !DIExpression()), !dbg !1289
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1288, metadata !DIExpression()), !dbg !1289
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %3) #10, !dbg !1291
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !1291

bb4.i:                                            ; preds = %bb1
  store i8 0, ptr %_6.i, align 1, !dbg !1291
  br label %bb6.i, !dbg !1291

bb5.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_9.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %5) #10, !dbg !1293
  %8 = zext i1 %_9.i to i8, !dbg !1291
  store i8 %8, ptr %_6.i, align 1, !dbg !1291
  br label %bb6.i, !dbg !1291

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !1291, !range !231, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1291
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !1291

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !1291
  br label %bb3.i, !dbg !1291

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_11.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h02b9546723696483E(ptr %3, ptr %5, i64 %7) #10, !dbg !1294
  %11 = zext i1 %_11.i to i8, !dbg !1291
  store i8 %11, ptr %_5.i, align 1, !dbg !1291
  br label %bb3.i, !dbg !1291

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !1295, !range !231, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !1295
  %_4.i = xor i1 %13, true, !dbg !1295
  br i1 %_4.i, label %bb10.i, label %_ZN4core3ptr19swap_nonoverlapping7runtime17h8247aa2f2b5a38afE.exit, !dbg !1295

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_546a48d82dbbd37bfd409d4513b73f46, i64 166) #11, !dbg !1296
  unreachable, !dbg !1296

_ZN4core3ptr19swap_nonoverlapping7runtime17h8247aa2f2b5a38afE.exit: ; preds = %bb3.i
  br label %bb2, !dbg !1281

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_7, align 1, !dbg !1282
  br label %bb5, !dbg !1282

bb4:                                              ; preds = %bb2
  store i64 24, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1297, metadata !DIExpression()), !dbg !1300
  store i64 24, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1302, metadata !DIExpression()), !dbg !1307
  store i64 2, ptr %0, align 8, !dbg !1309
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1309, !noundef !24
  %14 = trunc i64 %_2.i.i to i32, !dbg !1309
  %15 = icmp eq i32 %14, 1, !dbg !1310
  %_12 = xor i1 %15, true, !dbg !1311
  br i1 %_12, label %bb8, label %bb9, !dbg !1312

bb9:                                              ; preds = %bb4
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 8, i64 2), !dbg !1313
  %_19.0 = extractvalue { i64, i1 } %16, 0, !dbg !1313
  %_19.1 = extractvalue { i64, i1 } %16, 1, !dbg !1313
  %17 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !1313
  br i1 %17, label %panic, label %bb15, !dbg !1313

bb8:                                              ; preds = %bb4
  store i8 1, ptr %_11, align 1, !dbg !1312
  br label %bb10, !dbg !1312

bb10:                                             ; preds = %bb15, %bb8
  %18 = load i8, ptr %_11, align 1, !dbg !1282, !range !231, !noundef !24
  %19 = trunc i8 %18 to i1, !dbg !1282
  %20 = zext i1 %19 to i8, !dbg !1282
  store i8 %20, ptr %_7, align 1, !dbg !1282
  br label %bb5, !dbg !1282

bb15:                                             ; preds = %bb9
  %_15 = icmp ugt i64 24, %_19.0, !dbg !1314
  %21 = zext i1 %_15 to i8, !dbg !1312
  store i8 %21, ptr %_11, align 1, !dbg !1312
  br label %bb10, !dbg !1312

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_311e6cf6eff9ab7fd9cc3e4fdf63206f) #11, !dbg !1313
  unreachable, !dbg !1313

bb5:                                              ; preds = %bb3, %bb10
  %22 = load i8, ptr %_7, align 1, !dbg !1282, !range !231, !noundef !24
  %23 = trunc i8 %22 to i1, !dbg !1282
  br i1 %23, label %bb16, label %bb48, !dbg !1282

bb48:                                             ; preds = %bb35, %bb5
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h2e47c7636d864572E(ptr %x, ptr %y, i64 %count) #10, !dbg !1315
  br label %bb49, !dbg !1315

bb16:                                             ; preds = %bb5
  %_21 = icmp uge i64 8, 8, !dbg !1316
  br i1 %_21, label %bb18, label %bb17, !dbg !1316

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_20, align 1, !dbg !1316
  br label %bb19, !dbg !1316

bb18:                                             ; preds = %bb16
  %_28 = icmp eq i64 8, 0, !dbg !1316
  %24 = call i1 @llvm.expect.i1(i1 %_28, i1 false), !dbg !1316
  br i1 %24, label %panic1, label %bb24, !dbg !1316

bb24:                                             ; preds = %bb18
  %_25 = urem i64 24, 8, !dbg !1316
  %_24 = icmp eq i64 %_25, 0, !dbg !1316
  %25 = zext i1 %_24 to i8, !dbg !1316
  store i8 %25, ptr %_20, align 1, !dbg !1316
  br label %bb19, !dbg !1316

panic1:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.6, i64 57, ptr align 8 @alloc_6ba8dfd3581ac766ea33e02991091220) #11, !dbg !1316
  unreachable, !dbg !1316

bb19:                                             ; preds = %bb17, %bb24
  %26 = load i8, ptr %_20, align 1, !dbg !1316, !range !231, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !1316
  br i1 %27, label %bb25, label %bb32, !dbg !1316

bb32:                                             ; preds = %bb19
  %_40 = icmp uge i64 8, 1, !dbg !1317
  br i1 %_40, label %bb34, label %bb33, !dbg !1317

bb25:                                             ; preds = %bb19
  store ptr %x, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !1318, metadata !DIExpression()), !dbg !1325
  store ptr %x, ptr %x.dbg.spill3, align 8, !dbg !1316
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill3, metadata !1265, metadata !DIExpression()), !dbg !1327
  store ptr %y, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !1318, metadata !DIExpression()), !dbg !1328
  store ptr %y, ptr %y.dbg.spill5, align 8, !dbg !1327
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill5, metadata !1267, metadata !DIExpression()), !dbg !1330
  %_35 = icmp eq i64 8, 0, !dbg !1330
  %28 = call i1 @llvm.expect.i1(i1 %_35, i1 false), !dbg !1330
  br i1 %28, label %panic6, label %bb30, !dbg !1330

bb30:                                             ; preds = %bb25
  %_32 = udiv i64 24, 8, !dbg !1330
  %29 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_32), !dbg !1330
  %_36.0 = extractvalue { i64, i1 } %29, 0, !dbg !1330
  %_36.1 = extractvalue { i64, i1 } %29, 1, !dbg !1330
  %30 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !1330
  br i1 %30, label %panic7, label %bb31, !dbg !1330

panic6:                                           ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_6ba8dfd3581ac766ea33e02991091220) #11, !dbg !1330
  unreachable, !dbg !1330

bb31:                                             ; preds = %bb30
  store i64 %_36.0, ptr %count.dbg.spill8, align 8, !dbg !1330
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill8, metadata !1269, metadata !DIExpression()), !dbg !1331
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h8145a2749910b37cE(ptr %x, ptr %y, i64 %_36.0) #10, !dbg !1331
  br label %bb49, !dbg !1331

panic7:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_6ba8dfd3581ac766ea33e02991091220) #11, !dbg !1330
  unreachable, !dbg !1330

bb49:                                             ; preds = %bb48, %bb47, %bb31
  ret void, !dbg !1332

bb33:                                             ; preds = %bb32
  store i8 0, ptr %_39, align 1, !dbg !1317
  br label %bb35, !dbg !1317

bb34:                                             ; preds = %bb32
  %_47 = icmp eq i64 1, 0, !dbg !1317
  %31 = call i1 @llvm.expect.i1(i1 %_47, i1 false), !dbg !1317
  br i1 %31, label %panic9, label %bb40, !dbg !1317

bb40:                                             ; preds = %bb34
  %_44 = urem i64 24, 1, !dbg !1317
  %_43 = icmp eq i64 %_44, 0, !dbg !1317
  %32 = zext i1 %_43 to i8, !dbg !1317
  store i8 %32, ptr %_39, align 1, !dbg !1317
  br label %bb35, !dbg !1317

panic9:                                           ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.6, i64 57, ptr align 8 @alloc_23de3dfb299cac40c463cc01d279ed0d) #11, !dbg !1317
  unreachable, !dbg !1317

bb35:                                             ; preds = %bb33, %bb40
  %33 = load i8, ptr %_39, align 1, !dbg !1317, !range !231, !noundef !24
  %34 = trunc i8 %33 to i1, !dbg !1317
  br i1 %34, label %bb41, label %bb48, !dbg !1317

bb41:                                             ; preds = %bb35
  store ptr %x, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !1333, metadata !DIExpression()), !dbg !1340
  store ptr %x, ptr %x.dbg.spill11, align 8, !dbg !1317
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill11, metadata !1271, metadata !DIExpression()), !dbg !1342
  store ptr %y, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !1333, metadata !DIExpression()), !dbg !1343
  store ptr %y, ptr %y.dbg.spill13, align 8, !dbg !1342
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill13, metadata !1274, metadata !DIExpression()), !dbg !1345
  %_54 = icmp eq i64 1, 0, !dbg !1345
  %35 = call i1 @llvm.expect.i1(i1 %_54, i1 false), !dbg !1345
  br i1 %35, label %panic14, label %bb46, !dbg !1345

bb46:                                             ; preds = %bb41
  %_51 = udiv i64 24, 1, !dbg !1345
  %36 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_51), !dbg !1345
  %_55.0 = extractvalue { i64, i1 } %36, 0, !dbg !1345
  %_55.1 = extractvalue { i64, i1 } %36, 1, !dbg !1345
  %37 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !1345
  br i1 %37, label %panic15, label %bb47, !dbg !1345

panic14:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_23de3dfb299cac40c463cc01d279ed0d) #11, !dbg !1345
  unreachable, !dbg !1345

bb47:                                             ; preds = %bb46
  store i64 %_55.0, ptr %count.dbg.spill16, align 8, !dbg !1345
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill16, metadata !1276, metadata !DIExpression()), !dbg !1346
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17he2cd4ec494793151E(ptr %x, ptr %y, i64 %_55.0) #10, !dbg !1346
  br label %bb49, !dbg !1346

panic15:                                          ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_23de3dfb299cac40c463cc01d279ed0d) #11, !dbg !1345
  unreachable, !dbg !1345
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hacf245b3e0dc6ec3E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1347 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1351, metadata !DIExpression()), !dbg !1353
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1352, metadata !DIExpression()), !dbg !1354
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !535, metadata !DIExpression()), !dbg !1355
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hef5214f5a83e4208E(ptr %data, i64 %len) #10, !dbg !1357
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1357
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1357
  %3 = insertvalue { ptr, i64 } poison, ptr %1, 0, !dbg !1358
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1358
  ret { ptr, i64 } %4, !dbg !1358
}

; core::ptr::drop_in_place<u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17hfe6a7d81b2093c11E"(ptr align 4 %_1) unnamed_addr #0 !dbg !1359 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1364, metadata !DIExpression()), !dbg !1367
  ret void, !dbg !1367
}

; core::ptr::drop_in_place<u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17h05ec73a08d81ae4fE"(ptr align 8 %_1) unnamed_addr #0 !dbg !1368 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1373, metadata !DIExpression()), !dbg !1376
  ret void, !dbg !1376
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h505fa47346920890E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1377 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1381, metadata !DIExpression()), !dbg !1383
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1382, metadata !DIExpression()), !dbg !1384
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1385, metadata !DIExpression()), !dbg !1391
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h8beb1f8ed4be3183E(ptr %data, i64 %len) #10, !dbg !1393
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1393
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1393
  %3 = insertvalue { ptr, i64 } poison, ptr %1, 0, !dbg !1394
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1394
  ret { ptr, i64 } %4, !dbg !1394
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h2b611129a6be70b4E"(ptr align 8 %_1) unnamed_addr #0 !dbg !1395 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1400, metadata !DIExpression()), !dbg !1403
  ret void, !dbg !1403
}

; core::ptr::drop_in_place<&u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17hd4ef7394b8ffe338E"(ptr align 8 %_1) unnamed_addr #0 !dbg !1404 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1409, metadata !DIExpression()), !dbg !1412
  ret void, !dbg !1412
}

; core::ptr::drop_in_place<&u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h3531b96220751359E"(ptr align 8 %_1) unnamed_addr #0 !dbg !1413 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1418, metadata !DIExpression()), !dbg !1421
  ret void, !dbg !1421
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h2e47c7636d864572E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1422 {
start:
  %self.dbg.spill.i10 = alloca ptr, align 8
  %self.dbg.spill.i9 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1424, metadata !DIExpression()), !dbg !1438
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1425, metadata !DIExpression()), !dbg !1439
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1426, metadata !DIExpression()), !dbg !1440
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1432, metadata !DIExpression()), !dbg !1441
  store ptr %x, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1442, metadata !DIExpression()), !dbg !1449
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1451
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1427, metadata !DIExpression()), !dbg !1452
  store ptr %y, ptr %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !1442, metadata !DIExpression()), !dbg !1453
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1455
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1430, metadata !DIExpression()), !dbg !1456
  store i64 0, ptr %i, align 8, !dbg !1457
  br label %bb3, !dbg !1458

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1459, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1459
  br i1 %_7, label %bb4, label %bb9, !dbg !1459

bb9:                                              ; preds = %bb3
  ret void, !dbg !1460

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !1461, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1462, metadata !DIExpression()), !dbg !1468
  store i64 %_12, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1467, metadata !DIExpression()), !dbg !1470
  %0 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %x, i64 %_12, !dbg !1471
  store ptr %0, ptr %x.dbg.spill5, align 8, !dbg !1472
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1434, metadata !DIExpression()), !dbg !1473
  %_16 = load i64, ptr %i, align 8, !dbg !1474, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1462, metadata !DIExpression()), !dbg !1475
  store i64 %_16, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1467, metadata !DIExpression()), !dbg !1477
  %1 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %y, i64 %_16, !dbg !1478
  store ptr %1, ptr %y.dbg.spill6, align 8, !dbg !1479
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1436, metadata !DIExpression()), !dbg !1480
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h9214e2f4aabb90b2E(ptr align 8 %0, ptr align 8 %1) #10, !dbg !1481
  %2 = load i64, ptr %i, align 8, !dbg !1482, !noundef !24
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %2, i64 1), !dbg !1482
  %_18.0 = extractvalue { i64, i1 } %3, 0, !dbg !1482
  %_18.1 = extractvalue { i64, i1 } %3, 1, !dbg !1482
  %4 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1482
  br i1 %4, label %panic, label %bb8, !dbg !1482

bb8:                                              ; preds = %bb4
  store i64 %_18.0, ptr %i, align 8, !dbg !1482
  br label %bb3, !dbg !1458

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_bab6ead7b4bfe41433022b5c9b228cf8) #11, !dbg !1482
  unreachable, !dbg !1482
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h8145a2749910b37cE(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1483 {
start:
  %self.dbg.spill.i10 = alloca ptr, align 8
  %self.dbg.spill.i9 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1487, metadata !DIExpression()), !dbg !1501
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1488, metadata !DIExpression()), !dbg !1502
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1489, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1495, metadata !DIExpression()), !dbg !1504
  store ptr %x, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1505, metadata !DIExpression()), !dbg !1512
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1514
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1490, metadata !DIExpression()), !dbg !1515
  store ptr %y, ptr %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !1505, metadata !DIExpression()), !dbg !1516
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1518
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1493, metadata !DIExpression()), !dbg !1519
  store i64 0, ptr %i, align 8, !dbg !1520
  br label %bb3, !dbg !1521

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1522, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1522
  br i1 %_7, label %bb4, label %bb9, !dbg !1522

bb9:                                              ; preds = %bb3
  ret void, !dbg !1523

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !1524, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1525, metadata !DIExpression()), !dbg !1531
  store i64 %_12, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1530, metadata !DIExpression()), !dbg !1533
  %0 = getelementptr inbounds i64, ptr %x, i64 %_12, !dbg !1534
  store ptr %0, ptr %x.dbg.spill5, align 8, !dbg !1535
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1497, metadata !DIExpression()), !dbg !1536
  %_16 = load i64, ptr %i, align 8, !dbg !1537, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1525, metadata !DIExpression()), !dbg !1538
  store i64 %_16, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1530, metadata !DIExpression()), !dbg !1540
  %1 = getelementptr inbounds i64, ptr %y, i64 %_16, !dbg !1541
  store ptr %1, ptr %y.dbg.spill6, align 8, !dbg !1542
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1499, metadata !DIExpression()), !dbg !1543
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17hfeda14ea61450d02E(ptr align 8 %0, ptr align 8 %1) #10, !dbg !1544
  %2 = load i64, ptr %i, align 8, !dbg !1545, !noundef !24
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %2, i64 1), !dbg !1545
  %_18.0 = extractvalue { i64, i1 } %3, 0, !dbg !1545
  %_18.1 = extractvalue { i64, i1 } %3, 1, !dbg !1545
  %4 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1545
  br i1 %4, label %panic, label %bb8, !dbg !1545

bb8:                                              ; preds = %bb4
  store i64 %_18.0, ptr %i, align 8, !dbg !1545
  br label %bb3, !dbg !1521

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_bab6ead7b4bfe41433022b5c9b228cf8) #11, !dbg !1545
  unreachable, !dbg !1545
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17he2cd4ec494793151E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1546 {
start:
  %self.dbg.spill.i10 = alloca ptr, align 8
  %self.dbg.spill.i9 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1550, metadata !DIExpression()), !dbg !1564
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1551, metadata !DIExpression()), !dbg !1565
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1552, metadata !DIExpression()), !dbg !1566
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1558, metadata !DIExpression()), !dbg !1567
  store ptr %x, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1568, metadata !DIExpression()), !dbg !1575
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1577
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1553, metadata !DIExpression()), !dbg !1578
  store ptr %y, ptr %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !1568, metadata !DIExpression()), !dbg !1579
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1581
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1556, metadata !DIExpression()), !dbg !1582
  store i64 0, ptr %i, align 8, !dbg !1583
  br label %bb3, !dbg !1584

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1585, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1585
  br i1 %_7, label %bb4, label %bb9, !dbg !1585

bb9:                                              ; preds = %bb3
  ret void, !dbg !1586

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !1587, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1588, metadata !DIExpression()), !dbg !1594
  store i64 %_12, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1593, metadata !DIExpression()), !dbg !1596
  %0 = getelementptr inbounds i8, ptr %x, i64 %_12, !dbg !1597
  store ptr %0, ptr %x.dbg.spill5, align 8, !dbg !1598
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1560, metadata !DIExpression()), !dbg !1599
  %_16 = load i64, ptr %i, align 8, !dbg !1600, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1588, metadata !DIExpression()), !dbg !1601
  store i64 %_16, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1593, metadata !DIExpression()), !dbg !1603
  %1 = getelementptr inbounds i8, ptr %y, i64 %_16, !dbg !1604
  store ptr %1, ptr %y.dbg.spill6, align 8, !dbg !1605
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1562, metadata !DIExpression()), !dbg !1606
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h2040f8deaa3606bbE(ptr align 1 %0, ptr align 1 %1) #10, !dbg !1607
  %2 = load i64, ptr %i, align 8, !dbg !1608, !noundef !24
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %2, i64 1), !dbg !1608
  %_18.0 = extractvalue { i64, i1 } %3, 0, !dbg !1608
  %_18.1 = extractvalue { i64, i1 } %3, 1, !dbg !1608
  %4 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1608
  br i1 %4, label %panic, label %bb8, !dbg !1608

bb8:                                              ; preds = %bb4
  store i64 %_18.0, ptr %i, align 8, !dbg !1608
  br label %bb3, !dbg !1584

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_bab6ead7b4bfe41433022b5c9b228cf8) #11, !dbg !1608
  unreachable, !dbg !1608
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define i8 @_ZN4core3ptr4read17h4392261126658b84E(ptr %src) unnamed_addr #0 !dbg !1609 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1614, metadata !DIExpression()), !dbg !1615
  br i1 true, label %bb1, label %bb2, !dbg !1616

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h9135e3c3453af71eE.exit, %start
  %0 = load i8, ptr %src, align 1, !dbg !1617
  ret i8 %0, !dbg !1618

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1616
  %1 = load ptr, ptr %_4, align 8, !dbg !1616, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1619, metadata !DIExpression()), !dbg !1625
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha77942feabfa5a64E(ptr %1) #10, !dbg !1627
  %_2.i = xor i1 %_3.i, true, !dbg !1629
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h9135e3c3453af71eE.exit, !dbg !1629

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1630
  unreachable, !dbg !1630

_ZN4core3ptr4read7runtime17h9135e3c3453af71eE.exit: ; preds = %bb1
  br label %bb2, !dbg !1616
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h7be6a65340524512E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %0, ptr %src) unnamed_addr #0 !dbg !1631 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1635, metadata !DIExpression()), !dbg !1636
  br i1 true, label %bb1, label %bb2, !dbg !1637

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h692c3a18d7e2fd21E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %src, i64 24, i1 false), !dbg !1638
  ret void, !dbg !1639

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1637
  %1 = load ptr, ptr %_4, align 8, !dbg !1637, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1640, metadata !DIExpression()), !dbg !1645
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h149af2a9f28e4a2cE(ptr %1) #10, !dbg !1647
  %_2.i = xor i1 %_3.i, true, !dbg !1649
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h692c3a18d7e2fd21E.exit, !dbg !1649

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1650
  unreachable, !dbg !1650

_ZN4core3ptr4read7runtime17h692c3a18d7e2fd21E.exit: ; preds = %bb1
  br label %bb2, !dbg !1637
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h927c413b34ea08c4E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %src) unnamed_addr #0 !dbg !1651 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1655, metadata !DIExpression()), !dbg !1656
  br i1 true, label %bb1, label %bb2, !dbg !1657

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17hf1ea5984b1a41bcdE.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %src, i64 24, i1 false), !dbg !1658
  ret void, !dbg !1659

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1657
  %1 = load ptr, ptr %_4, align 8, !dbg !1657, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1660, metadata !DIExpression()), !dbg !1665
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %1) #10, !dbg !1667
  %_2.i = xor i1 %_3.i, true, !dbg !1669
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17hf1ea5984b1a41bcdE.exit, !dbg !1669

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1670
  unreachable, !dbg !1670

_ZN4core3ptr4read7runtime17hf1ea5984b1a41bcdE.exit: ; preds = %bb1
  br label %bb2, !dbg !1657
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr4read17h9a8e84d1c355cdbbE(ptr %src) unnamed_addr #0 !dbg !1671 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1675, metadata !DIExpression()), !dbg !1676
  br i1 true, label %bb1, label %bb2, !dbg !1677

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h87e8dc7334532d7eE.exit, %start
  %0 = load i64, ptr %src, align 8, !dbg !1678
  ret i64 %0, !dbg !1679

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1677
  %1 = load ptr, ptr %_4, align 8, !dbg !1677, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1680, metadata !DIExpression()), !dbg !1685
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5e3db6c043bf442bE(ptr %1) #10, !dbg !1687
  %_2.i = xor i1 %_3.i, true, !dbg !1689
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h87e8dc7334532d7eE.exit, !dbg !1689

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1690
  unreachable, !dbg !1690

_ZN4core3ptr4read7runtime17h87e8dc7334532d7eE.exit: ; preds = %bb1
  br label %bb2, !dbg !1677
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h4250091187d10ec1E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1691 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1695, metadata !DIExpression()), !dbg !1699
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1696, metadata !DIExpression()), !dbg !1700
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1697, metadata !DIExpression()), !dbg !1701
  %1 = load i64, ptr %0, align 8, !dbg !1702
  store i64 %1, ptr %tmp, align 8, !dbg !1709
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1710, metadata !DIExpression()), !dbg !1716
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2081497d2c04d51aE(ptr %x, ptr %tmp, i64 1) #10, !dbg !1718
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h3e8e1c65f736c496E(ptr %y, ptr %x, i64 1) #10, !dbg !1719
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1720, metadata !DIExpression()), !dbg !1727
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h2081497d2c04d51aE(ptr %tmp, ptr %y, i64 1) #10, !dbg !1729
  ret void, !dbg !1730
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h9fb425901b32d437E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1731 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1735, metadata !DIExpression()), !dbg !1739
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1736, metadata !DIExpression()), !dbg !1740
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1737, metadata !DIExpression()), !dbg !1741
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1742, metadata !DIExpression()), !dbg !1748
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %x, ptr %tmp, i64 1) #10, !dbg !1750
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h6077bdcf76790159E(ptr %y, ptr %x, i64 1) #10, !dbg !1751
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1752, metadata !DIExpression()), !dbg !1759
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %tmp, ptr %y, i64 1) #10, !dbg !1761
  ret void, !dbg !1762
}

; core::ptr::drop_in_place<bootloader::bootinfo::TlsTemplate>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17he2b7a0c5667c2dbdE"(ptr align 8 %_1) unnamed_addr #0 !dbg !1763 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1768, metadata !DIExpression()), !dbg !1771
  ret void, !dbg !1771
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h720351d6fe90aa68E(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1772 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1776, metadata !DIExpression()), !dbg !1778
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1777, metadata !DIExpression()), !dbg !1779
  br i1 true, label %bb1, label %bb2, !dbg !1780

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h852b144cb0f86757E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1781
  ret void, !dbg !1782

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1780
  %0 = load ptr, ptr %_5, align 8, !dbg !1780, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1783, metadata !DIExpression()), !dbg !1789
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %0) #10, !dbg !1791
  %_2.i = xor i1 %_3.i, true, !dbg !1793
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17h852b144cb0f86757E.exit, !dbg !1793

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1794
  unreachable, !dbg !1794

_ZN4core3ptr5write7runtime17h852b144cb0f86757E.exit: ; preds = %bb1
  br label %bb2, !dbg !1780
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hae0b416515095691E(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1795 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1799, metadata !DIExpression()), !dbg !1801
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1800, metadata !DIExpression()), !dbg !1802
  br i1 true, label %bb1, label %bb2, !dbg !1803

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h19a07e8144c08614E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1804
  ret void, !dbg !1805

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1803
  %0 = load ptr, ptr %_5, align 8, !dbg !1803, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1806, metadata !DIExpression()), !dbg !1811
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h149af2a9f28e4a2cE(ptr %0) #10, !dbg !1813
  %_2.i = xor i1 %_3.i, true, !dbg !1815
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17h19a07e8144c08614E.exit, !dbg !1815

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1816
  unreachable, !dbg !1816

_ZN4core3ptr5write7runtime17h19a07e8144c08614E.exit: ; preds = %bb1
  br label %bb2, !dbg !1803
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hd1eece99efa8bef5E(ptr %dst, i64 %src) unnamed_addr #0 !dbg !1817 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1821, metadata !DIExpression()), !dbg !1823
  store i64 %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1822, metadata !DIExpression()), !dbg !1824
  br i1 true, label %bb1, label %bb2, !dbg !1825

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17hbeba2be1098a18d3E.exit, %start
  store i64 %src, ptr %dst, align 8, !dbg !1826
  ret void, !dbg !1827

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1825
  %0 = load ptr, ptr %_5, align 8, !dbg !1825, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1828, metadata !DIExpression()), !dbg !1833
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5e3db6c043bf442bE(ptr %0) #10, !dbg !1835
  %_2.i = xor i1 %_3.i, true, !dbg !1837
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17hbeba2be1098a18d3E.exit, !dbg !1837

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1838
  unreachable, !dbg !1838

_ZN4core3ptr5write7runtime17hbeba2be1098a18d3E.exit: ; preds = %bb1
  br label %bb2, !dbg !1825
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hffac2092019b1350E(ptr %dst, i8 %src) unnamed_addr #0 !dbg !1839 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca i8, align 1
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1843, metadata !DIExpression()), !dbg !1845
  store i8 %src, ptr %src.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1844, metadata !DIExpression()), !dbg !1846
  br i1 true, label %bb1, label %bb2, !dbg !1847

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h155514b1aa14d0aeE.exit, %start
  store i8 %src, ptr %dst, align 1, !dbg !1848
  ret void, !dbg !1849

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1847
  %0 = load ptr, ptr %_5, align 8, !dbg !1847, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1850, metadata !DIExpression()), !dbg !1855
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha77942feabfa5a64E(ptr %0) #10, !dbg !1857
  %_2.i = xor i1 %_3.i, true, !dbg !1859
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17h155514b1aa14d0aeE.exit, !dbg !1859

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1860
  unreachable, !dbg !1860

_ZN4core3ptr5write7runtime17h155514b1aa14d0aeE.exit: ; preds = %bb1
  br label %bb2, !dbg !1847
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17h55bd954b516d523eE"(ptr align 8 %_1) unnamed_addr #0 !dbg !1861 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1866, metadata !DIExpression()), !dbg !1869
  ret void, !dbg !1869
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::FrameRange>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17hdd02efeef56b47dfE"(ptr align 8 %_1) unnamed_addr #0 !dbg !1870 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1875, metadata !DIExpression()), !dbg !1878
  ret void, !dbg !1878
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h3bb54a08777f807bE"(ptr align 8 %_1) unnamed_addr #0 !dbg !1879 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1884, metadata !DIExpression()), !dbg !1885
  ret void, !dbg !1885
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h1d57c384ea79fe8eE"(ptr align 8 %_1) unnamed_addr #0 !dbg !1886 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1891, metadata !DIExpression()), !dbg !1894
  ret void, !dbg !1894
}

; core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hefba6c028e624c4cE"(ptr %ptr) unnamed_addr #0 !dbg !1895 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1900, metadata !DIExpression()), !dbg !1901
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1902, metadata !DIExpression()), !dbg !1907
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1909, metadata !DIExpression()), !dbg !1915
  %0 = ptrtoint ptr %ptr to i64, !dbg !1917
  %1 = icmp eq i64 %0, 0, !dbg !1918
  ret i1 %1, !dbg !1919
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h87d19d52ba57462cE"(ptr %self) unnamed_addr #0 !dbg !1920 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1924, metadata !DIExpression()), !dbg !1925
  store ptr %self, ptr %_2, align 8, !dbg !1926
  %0 = load ptr, ptr %_2, align 8, !dbg !1927, !noundef !24
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hefba6c028e624c4cE"(ptr %0) #10, !dbg !1927
  ret i1 %1, !dbg !1928
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hef5214f5a83e4208E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1929 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1935, metadata !DIExpression()), !dbg !1937
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1936, metadata !DIExpression()), !dbg !1938
  store ptr %data_address, ptr %_4, align 8, !dbg !1939
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1939
  store i64 %metadata, ptr %0, align 8, !dbg !1939
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1940
  %2 = load ptr, ptr %1, align 8, !dbg !1940, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1940
  %4 = load i64, ptr %3, align 8, !dbg !1940, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1940
  store ptr %2, ptr %5, align 8, !dbg !1940
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1940
  store i64 %4, ptr %6, align 8, !dbg !1940
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1940
  %8 = load ptr, ptr %7, align 8, !dbg !1940, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1940
  %10 = load i64, ptr %9, align 8, !dbg !1940, !noundef !24
  %11 = insertvalue { ptr, i64 } poison, ptr %8, 0, !dbg !1941
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1941
  ret { ptr, i64 } %12, !dbg !1941
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h2c91ee76589b7207E(ptr %data_address) unnamed_addr #0 !dbg !1942 {
start:
  %metadata.dbg.spill = alloca {}, align 1
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1946, metadata !DIExpression()), !dbg !1948
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1947, metadata !DIExpression()), !dbg !1949
  store ptr %data_address, ptr %_4, align 8, !dbg !1950
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 8, i1 false), !dbg !1951
  %0 = load ptr, ptr %_3, align 8, !dbg !1951, !noundef !24
  ret ptr %0, !dbg !1952
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h8beb1f8ed4be3183E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1953 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1957, metadata !DIExpression()), !dbg !1959
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1958, metadata !DIExpression()), !dbg !1960
  store ptr %data_address, ptr %_4, align 8, !dbg !1961
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1961
  store i64 %metadata, ptr %0, align 8, !dbg !1961
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1962
  %2 = load ptr, ptr %1, align 8, !dbg !1962, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1962
  %4 = load i64, ptr %3, align 8, !dbg !1962, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1962
  store ptr %2, ptr %5, align 8, !dbg !1962
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1962
  store i64 %4, ptr %6, align 8, !dbg !1962
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1962
  %8 = load ptr, ptr %7, align 8, !dbg !1962, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1962
  %10 = load i64, ptr %9, align 8, !dbg !1962, !noundef !24
  %11 = insertvalue { ptr, i64 } poison, ptr %8, 0, !dbg !1963
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1963
  ret { ptr, i64 } %12, !dbg !1963
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr8metadata8metadata17hc96cb271582175c8E(ptr %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1964 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1968, metadata !DIExpression()), !dbg !1969
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 0, !dbg !1970
  store ptr %ptr.0, ptr %2, align 8, !dbg !1970
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1970
  store i64 %ptr.1, ptr %3, align 8, !dbg !1970
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1970
  %5 = load i64, ptr %4, align 8, !dbg !1970, !noundef !24
  ret i64 %5, !dbg !1971
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h15f07cbe073e8ff7E"(ptr %ptr) unnamed_addr #0 !dbg !1972 {
start:
  %ptr.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1978, metadata !DIExpression()), !dbg !1979
  br i1 true, label %bb1, label %bb2, !dbg !1980

bb2:                                              ; preds = %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h5e5d02aa77f42c8fE.exit", %start
  store ptr %ptr, ptr %0, align 8, !dbg !1981
  %1 = load ptr, ptr %0, align 8, !dbg !1982, !nonnull !24, !noundef !24
  ret ptr %1, !dbg !1982

bb1:                                              ; preds = %start
  store ptr %ptr, ptr %_4, align 8, !dbg !1980
  %2 = load ptr, ptr %_4, align 8, !dbg !1980, !noundef !24
  store ptr %2, ptr %ptr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !1983, metadata !DIExpression()), !dbg !1988
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h87d19d52ba57462cE"(ptr %2) #10, !dbg !1990
  %_3.i = xor i1 %_4.i, true, !dbg !1992
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h5e5d02aa77f42c8fE.exit", !dbg !1993

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_20b3d155afd5c58c42e598b7e6d186ef, i64 93) #11, !dbg !1994
  unreachable, !dbg !1994

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h5e5d02aa77f42c8fE.exit": ; preds = %bb1
  br label %bb2, !dbg !1980
}

; core::ptr::non_null::NonNull<T>::add
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h57df786903043ccaE"(ptr %self, i64 %delta) unnamed_addr #0 !dbg !1995 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %delta.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2000, metadata !DIExpression()), !dbg !2002
  store i64 %delta, ptr %delta.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %delta.dbg.spill, metadata !2001, metadata !DIExpression()), !dbg !2003
  store ptr %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !2004
  store i64 %delta, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !209, metadata !DIExpression()), !dbg !2006
  %1 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self, i64 %delta, !dbg !2007
  store ptr %1, ptr %0, align 8, !dbg !2008
  %2 = load ptr, ptr %0, align 8, !dbg !2009, !nonnull !24, !noundef !24
  ret ptr %2, !dbg !2009
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h7d5ca15aba9d339fE"(ptr %self) unnamed_addr #0 !dbg !2010 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2012, metadata !DIExpression()), !dbg !2013
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hc9654f4a08968195E"(ptr %self, i64 8) #10, !dbg !2014
  ret i1 %0, !dbg !2015
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h8b57dfd4eaa3b392E"(ptr %self) unnamed_addr #0 !dbg !2016 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2018, metadata !DIExpression()), !dbg !2019
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h809a744eb5174577E"(ptr %self, i64 8) #10, !dbg !2020
  ret i1 %0, !dbg !2021
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17ha7f55de5a75b7c43E"(ptr %self) unnamed_addr #0 !dbg !2022 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2024, metadata !DIExpression()), !dbg !2025
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h04222429852736adE"(ptr %self, i64 8) #10, !dbg !2026
  ret i1 %0, !dbg !2027
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h99e521d3ddd081a8E"(ptr %ptr, i64 %align) unnamed_addr #0 !dbg !2028 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %align.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2033, metadata !DIExpression()), !dbg !2035
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !2034, metadata !DIExpression()), !dbg !2036
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2037, metadata !DIExpression()), !dbg !2043
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2045, metadata !DIExpression()), !dbg !2051
  %0 = ptrtoint ptr %ptr to i64, !dbg !2053
  %_6.0 = sub i64 %align, 1, !dbg !2054
  %_6.1 = icmp ult i64 %align, 1, !dbg !2054
  %1 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !2054
  br i1 %1, label %panic, label %bb2, !dbg !2054

bb2:                                              ; preds = %start
  %_3 = and i64 %0, %_6.0, !dbg !2055
  %2 = icmp eq i64 %_3, 0, !dbg !2055
  ret i1 %2, !dbg !2056

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_bcdcc30e858a48da2606f80aa0163c31) #11, !dbg !2054
  unreachable, !dbg !2054
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h04222429852736adE"(ptr %self, i64 %align) unnamed_addr #0 !dbg !2057 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2061, metadata !DIExpression()), !dbg !2063
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !2062, metadata !DIExpression()), !dbg !2064
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1297, metadata !DIExpression()), !dbg !2065
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1302, metadata !DIExpression()), !dbg !2067
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !2069
  store i64 %1, ptr %0, align 8, !dbg !2069
  %_2.i.i = load i64, ptr %0, align 8, !dbg !2069, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !2069
  %3 = icmp eq i32 %2, 1, !dbg !2070
  %_3 = xor i1 %3, true, !dbg !2071
  br i1 %_3, label %bb2, label %bb4, !dbg !2071

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2072, metadata !DIExpression()), !dbg !2078
  store ptr %self, ptr %_8, align 8, !dbg !2080
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !2080
  store i64 %align, ptr %4, align 8, !dbg !2080
  %5 = load ptr, ptr %_8, align 8, !dbg !2081, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !2081
  %7 = load i64, ptr %6, align 8, !dbg !2081, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h99e521d3ddd081a8E"(ptr %5, i64 %7) #10, !dbg !2081
  ret i1 %8, !dbg !2082

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h3df1cca92c3d59d6E(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !2083
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h2c59f66d276f88adE(ptr %_6, ptr align 8 @alloc_38eb3fe2a71bea9ddc57ce847c7c3987) #11, !dbg !2083
  unreachable, !dbg !2083
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h809a744eb5174577E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !2084 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2088, metadata !DIExpression()), !dbg !2090
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !2089, metadata !DIExpression()), !dbg !2091
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1297, metadata !DIExpression()), !dbg !2092
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1302, metadata !DIExpression()), !dbg !2094
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !2096
  store i64 %1, ptr %0, align 8, !dbg !2096
  %_2.i.i = load i64, ptr %0, align 8, !dbg !2096, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !2096
  %3 = icmp eq i32 %2, 1, !dbg !2097
  %_3 = xor i1 %3, true, !dbg !2098
  br i1 %_3, label %bb2, label %bb4, !dbg !2098

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !535, metadata !DIExpression()), !dbg !2099
  store ptr %self, ptr %_8, align 8, !dbg !2101
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !2101
  store i64 %align, ptr %4, align 8, !dbg !2101
  %5 = load ptr, ptr %_8, align 8, !dbg !2102, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !2102
  %7 = load i64, ptr %6, align 8, !dbg !2102, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h99e521d3ddd081a8E"(ptr %5, i64 %7) #10, !dbg !2102
  ret i1 %8, !dbg !2103

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h3df1cca92c3d59d6E(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !2104
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h2c59f66d276f88adE(ptr %_6, ptr align 8 @alloc_38eb3fe2a71bea9ddc57ce847c7c3987) #11, !dbg !2104
  unreachable, !dbg !2104
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hc9654f4a08968195E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !2105 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2109, metadata !DIExpression()), !dbg !2111
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !2110, metadata !DIExpression()), !dbg !2112
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1297, metadata !DIExpression()), !dbg !2113
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1302, metadata !DIExpression()), !dbg !2115
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !2117
  store i64 %1, ptr %0, align 8, !dbg !2117
  %_2.i.i = load i64, ptr %0, align 8, !dbg !2117, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !2117
  %3 = icmp eq i32 %2, 1, !dbg !2118
  %_3 = xor i1 %3, true, !dbg !2119
  br i1 %_3, label %bb2, label %bb4, !dbg !2119

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2120, metadata !DIExpression()), !dbg !2126
  store ptr %self, ptr %_8, align 8, !dbg !2128
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !2128
  store i64 %align, ptr %4, align 8, !dbg !2128
  %5 = load ptr, ptr %_8, align 8, !dbg !2129, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !2129
  %7 = load i64, ptr %6, align 8, !dbg !2129, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h99e521d3ddd081a8E"(ptr %5, i64 %7) #10, !dbg !2129
  ret i1 %8, !dbg !2130

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h3df1cca92c3d59d6E(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !2131
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h2c59f66d276f88adE(ptr %_6, ptr align 8 @alloc_38eb3fe2a71bea9ddc57ce847c7c3987) #11, !dbg !2131
  unreachable, !dbg !2131
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h7dca158e81d910edE"(ptr %ptr) unnamed_addr #0 !dbg !2132 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2138, metadata !DIExpression()), !dbg !2139
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2140, metadata !DIExpression()), !dbg !2145
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2147, metadata !DIExpression()), !dbg !2152
  %0 = ptrtoint ptr %ptr to i64, !dbg !2154
  %1 = icmp eq i64 %0, 0, !dbg !2155
  ret i1 %1, !dbg !2156
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h71ed3c45e962a382E"(ptr %self) unnamed_addr #0 !dbg !2157 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2159, metadata !DIExpression()), !dbg !2160
  store ptr %self, ptr %_2, align 8, !dbg !2161
  %0 = load ptr, ptr %_2, align 8, !dbg !2162, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h7dca158e81d910edE"(ptr %0) #10, !dbg !2162
  ret i1 %1, !dbg !2163
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9b76b1365caf576bE"(ptr %self) unnamed_addr #0 !dbg !2164 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2166, metadata !DIExpression()), !dbg !2167
  store ptr %self, ptr %_2, align 8, !dbg !2168
  %0 = load ptr, ptr %_2, align 8, !dbg !2169, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h7dca158e81d910edE"(ptr %0) #10, !dbg !2169
  ret i1 %1, !dbg !2170
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha4ea9b471af7cd24E"(ptr %self) unnamed_addr #0 !dbg !2171 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2173, metadata !DIExpression()), !dbg !2174
  store ptr %self, ptr %_2, align 8, !dbg !2175
  %0 = load ptr, ptr %_2, align 8, !dbg !2176, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h7dca158e81d910edE"(ptr %0) #10, !dbg !2176
  ret i1 %1, !dbg !2177
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h796146e2dce2f6ebE"(ptr %self, ptr %origin) unnamed_addr #0 !dbg !2178 {
start:
  %origin.dbg.spill.i = alloca ptr, align 8
  %this.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %pointee_size.dbg.spill = alloca i64, align 8
  %origin.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca i8, align 1
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2182, metadata !DIExpression()), !dbg !2188
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2184, metadata !DIExpression()), !dbg !2189
  store ptr %origin, ptr %origin.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill, metadata !2183, metadata !DIExpression()), !dbg !2190
  br i1 true, label %bb1, label %bb2, !dbg !2191

bb2:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hc9ea3ae1e8ebcc1dE.exit", %start
  store i64 24, ptr %pointee_size.dbg.spill, align 8, !dbg !2192
  call void @llvm.dbg.declare(metadata ptr %pointee_size.dbg.spill, metadata !2186, metadata !DIExpression()), !dbg !2193
  %_9 = icmp ult i64 0, 24, !dbg !2194
  br i1 %_9, label %bb5, label %bb4, !dbg !2194

bb1:                                              ; preds = %start
  store ptr %self, ptr %_5, align 8, !dbg !2191
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2191
  store ptr %origin, ptr %1, align 8, !dbg !2191
  %2 = load ptr, ptr %_5, align 8, !dbg !2191, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2191
  %4 = load ptr, ptr %3, align 8, !dbg !2191, !noundef !24
  store ptr %2, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !2195, metadata !DIExpression()), !dbg !2202
  store ptr %4, ptr %origin.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill.i, metadata !2201, metadata !DIExpression()), !dbg !2202
  %_4.i = icmp uge ptr %2, %4, !dbg !2204
  %_3.i = xor i1 %_4.i, true, !dbg !2206
  br i1 %_3.i, label %bb1.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hc9ea3ae1e8ebcc1dE.exit", !dbg !2206

bb1.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_cb50775363ffdd1238910b6e9573721d, i64 71) #11, !dbg !2207
  unreachable, !dbg !2207

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hc9ea3ae1e8ebcc1dE.exit": ; preds = %bb1
  br label %bb2, !dbg !2191

bb4:                                              ; preds = %bb2
  store i8 0, ptr %_8, align 1, !dbg !2194
  br label %bb6, !dbg !2194

bb5:                                              ; preds = %bb2
  %_11 = icmp ule i64 24, 9223372036854775807, !dbg !2208
  %5 = zext i1 %_11 to i8, !dbg !2194
  store i8 %5, ptr %_8, align 1, !dbg !2194
  br label %bb6, !dbg !2194

bb6:                                              ; preds = %bb4, %bb5
  %6 = load i8, ptr %_8, align 1, !dbg !2209, !range !231, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !2209
  %_7 = xor i1 %7, true, !dbg !2209
  br i1 %_7, label %bb7, label %bb8, !dbg !2209

bb8:                                              ; preds = %bb6
  %8 = ptrtoint ptr %self to i64, !dbg !2210
  %9 = ptrtoint ptr %origin to i64, !dbg !2210
  %10 = sub nuw i64 %8, %9, !dbg !2210
  %11 = udiv exact i64 %10, 24, !dbg !2210
  store i64 %11, ptr %0, align 8, !dbg !2210
  %12 = load i64, ptr %0, align 8, !dbg !2210, !noundef !24
  ret i64 %12, !dbg !2211

bb7:                                              ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_054967ab02808043e6941783e8d3de80) #11, !dbg !2209
  unreachable, !dbg !2209
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h6bad6bbc24fe61bbE"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !2212 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2215, metadata !DIExpression()), !dbg !2216
; call core::ptr::metadata::metadata
  %2 = call i64 @_ZN4core3ptr8metadata8metadata17hc96cb271582175c8E(ptr %self.0, i64 %self.1) #10, !dbg !2217
  ret i64 %2, !dbg !2218
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h70db485c1eecd795E"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !2219 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2223, metadata !DIExpression()), !dbg !2224
  ret ptr %self.0, !dbg !2225
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hfa19a2d92a920175E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !2226 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2234, metadata !DIExpression()), !dbg !2238
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !2235, metadata !DIExpression()), !dbg !2239
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hdac2a1d252190012E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !2240
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2240
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2240
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !2241
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !2241
  ret { ptr, i64 } %5, !dbg !2241
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h8954eb019ae799dcE"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !2242 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2248, metadata !DIExpression()), !dbg !2250
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !2249, metadata !DIExpression()), !dbg !2251
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfdf60844773cb214E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !2252
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2252
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2252
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !2253
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !2253
  ret { ptr, i64 } %5, !dbg !2253
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hef9d0510e779d42aE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid, ptr align 8 %1) unnamed_addr #0 !dbg !2254 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2263, metadata !DIExpression()), !dbg !2265
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !2264, metadata !DIExpression()), !dbg !2266
  %_4 = icmp ule i64 %mid, %self.1, !dbg !2267
  %_3 = xor i1 %_4, true, !dbg !2268
  br i1 %_3, label %bb1, label %bb2, !dbg !2268

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h9ac16248217030b9E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) #10, !dbg !2269
  ret void, !dbg !2270

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_fddaeef1fe1a23c45402ef8f58614acb, i64 35, ptr align 8 %1) #11, !dbg !2268
  unreachable, !dbg !2268
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !2271 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2275, metadata !DIExpression()), !dbg !2279
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !2276, metadata !DIExpression()), !dbg !2280
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h53daa7a0e955cc87E"(i64 %index, ptr %self.0, i64 %self.1) #10, !dbg !2281
  ret ptr %_3, !dbg !2282
}

; core::slice::<impl [T]>::as_mut_ptr_range
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17hb851a5c6e4698284E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2283 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2293, metadata !DIExpression()), !dbg !2298
  store ptr %self.0, ptr %self.dbg.spill.i2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !2299, metadata !DIExpression()), !dbg !2304
  store ptr %self.0, ptr %start.dbg.spill, align 8, !dbg !2306
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2294, metadata !DIExpression()), !dbg !2307
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !2308
  store i64 %self.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !2310
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %self.1, !dbg !2311
  store ptr %4, ptr %end.dbg.spill, align 8, !dbg !2312
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2296, metadata !DIExpression()), !dbg !2313
  store ptr %self.0, ptr %0, align 8, !dbg !2314
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !2314
  store ptr %4, ptr %5, align 8, !dbg !2314
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !2315
  %7 = load ptr, ptr %6, align 8, !dbg !2315, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !2315
  %9 = load ptr, ptr %8, align 8, !dbg !2315, !noundef !24
  %10 = insertvalue { ptr, ptr } poison, ptr %7, 0, !dbg !2315
  %11 = insertvalue { ptr, ptr } %10, ptr %9, 1, !dbg !2315
  ret { ptr, ptr } %11, !dbg !2315
}

; core::slice::<impl [T]>::sort_unstable_by
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h87ba477b7fb4a9caE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2316 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_4 = alloca ptr, align 8
  %compare = alloca %"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]", align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2320, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.declare(metadata ptr %compare, metadata !2321, metadata !DIExpression()), !dbg !2325
  store ptr %compare, ptr %_4, align 8, !dbg !2326
  %2 = load ptr, ptr %_4, align 8, !dbg !2327, !nonnull !24, !align !2328, !noundef !24
; call core::slice::sort::quicksort
  call void @_ZN4core5slice4sort9quicksort17h92db49e919f32533E(ptr align 8 %self.0, i64 %self.1, ptr align 1 %2) #10, !dbg !2327
  ret void, !dbg !2329
}

; core::slice::<impl [T]>::sort_unstable_by::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2330 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  %_5 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2336, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2337
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2334, metadata !DIExpression()), !dbg !2338
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2335, metadata !DIExpression()), !dbg !2339
  %_8 = load ptr, ptr %_1, align 8, !dbg !2340, !nonnull !24, !align !2328, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2340
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2340
  store ptr %b, ptr %0, align 8, !dbg !2340
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2340
  %2 = load ptr, ptr %1, align 8, !dbg !2340, !nonnull !24, !align !490, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2340
  %4 = load ptr, ptr %3, align 8, !dbg !2340, !nonnull !24, !align !490, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %5 = call i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h9aab6d72e771da3cE"(ptr align 1 %_8, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2340, !range !796
  store i8 %5, ptr %_5, align 1, !dbg !2340
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %6 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hb57cb3a551f4a96cE"(ptr align 1 %_5, ptr align 1 @alloc_9a72dc1c87ddefcce62e4b5ab68e5150) #10, !dbg !2340
  ret i1 %6, !dbg !2341
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h9ac16248217030b9E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 !dbg !2342 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %mid.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2346, metadata !DIExpression()), !dbg !2352
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !2347, metadata !DIExpression()), !dbg !2353
  store i64 %self.1, ptr %len.dbg.spill, align 8, !dbg !2354
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2348, metadata !DIExpression()), !dbg !2355
  store ptr %self.0, ptr %self.dbg.spill.i1, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2299, metadata !DIExpression()), !dbg !2356
  store ptr %self.0, ptr %ptr.dbg.spill, align 8, !dbg !2358
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2350, metadata !DIExpression()), !dbg !2359
  br i1 true, label %bb2, label %bb3, !dbg !2360

bb3:                                              ; preds = %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h75c9baf82917db98E.exit", %start
; call core::slice::raw::from_raw_parts_mut
  %4 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hf5c8da6568a0016cE(ptr %self.0, i64 %mid) #10, !dbg !2361
  %_10.0 = extractvalue { ptr, i64 } %4, 0, !dbg !2361
  %_10.1 = extractvalue { ptr, i64 } %4, 1, !dbg !2361
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !2362
  store i64 %mid, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !2364
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %mid, !dbg !2365
  %_17.0 = sub i64 %self.1, %mid, !dbg !2366
  %_17.1 = icmp ult i64 %self.1, %mid, !dbg !2366
  %6 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !2366
  br i1 %6, label %panic, label %bb6, !dbg !2366

bb2:                                              ; preds = %start
  store i64 %mid, ptr %_8, align 8, !dbg !2360
  %7 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !2360
  store i64 %self.1, ptr %7, align 8, !dbg !2360
  %8 = load i64, ptr %_8, align 8, !dbg !2360, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !2360
  %10 = load i64, ptr %9, align 8, !dbg !2360, !noundef !24
  store i64 %8, ptr %mid.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill.i, metadata !2367, metadata !DIExpression()), !dbg !2374
  store i64 %10, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2373, metadata !DIExpression()), !dbg !2374
  %_4.i = icmp ule i64 %8, %10, !dbg !2376
  %_3.i = xor i1 %_4.i, true, !dbg !2378
  br i1 %_3.i, label %bb1.i, label %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h75c9baf82917db98E.exit", !dbg !2378

bb1.i:                                            ; preds = %bb2
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_3dc073651148de734d2593768efc16e9, i64 104) #11, !dbg !2379
  unreachable, !dbg !2379

"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h75c9baf82917db98E.exit": ; preds = %bb2
  br label %bb3, !dbg !2360

bb6:                                              ; preds = %bb3
; call core::slice::raw::from_raw_parts_mut
  %11 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hf5c8da6568a0016cE(ptr %5, i64 %_17.0) #10, !dbg !2380
  %_13.0 = extractvalue { ptr, i64 } %11, 0, !dbg !2380
  %_13.1 = extractvalue { ptr, i64 } %11, 1, !dbg !2380
  %12 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2381
  store ptr %_10.0, ptr %12, align 8, !dbg !2381
  %13 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2381
  store i64 %_10.1, ptr %13, align 8, !dbg !2381
  %14 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %0, i32 0, i32 1, !dbg !2381
  %15 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 0, !dbg !2381
  store ptr %_13.0, ptr %15, align 8, !dbg !2381
  %16 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 1, !dbg !2381
  store i64 %_13.1, ptr %16, align 8, !dbg !2381
  ret void, !dbg !2382

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4a6cc2814e9c70d90675aafc22034495) #11, !dbg !2366
  unreachable, !dbg !2366
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hfb83fb3f5a152370E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2383 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2387, metadata !DIExpression()), !dbg !2388
; call core::slice::iter::Iter<T>::new
  %2 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h337f6f0301448630E"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2389
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !2389
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !2389
  %5 = insertvalue { ptr, ptr } poison, ptr %3, 0, !dbg !2390
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !2390
  ret { ptr, ptr } %6, !dbg !2390
}

; core::slice::<impl [T]>::swap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hd756dd12c8c540cfE"(ptr align 8 %self.0, i64 %self.1, i64 %a, i64 %b, ptr align 8 %0) unnamed_addr #0 !dbg !2391 {
start:
  %pb.dbg.spill = alloca ptr, align 8
  %pa.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2395, metadata !DIExpression()), !dbg !2402
  store i64 %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2396, metadata !DIExpression()), !dbg !2403
  store i64 %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2397, metadata !DIExpression()), !dbg !2404
  %_6 = icmp ult i64 %a, %self.1, !dbg !2405
  %3 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !2405
  br i1 %3, label %bb1, label %panic, !dbg !2405

bb1:                                              ; preds = %start
  %pa = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %a, !dbg !2406
  store ptr %pa, ptr %pa.dbg.spill, align 8, !dbg !2406
  call void @llvm.dbg.declare(metadata ptr %pa.dbg.spill, metadata !2398, metadata !DIExpression()), !dbg !2407
  %_9 = icmp ult i64 %b, %self.1, !dbg !2408
  %4 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !2408
  br i1 %4, label %bb2, label %panic1, !dbg !2408

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %a, i64 %self.1, ptr align 8 %0) #11, !dbg !2405
  unreachable, !dbg !2405

bb2:                                              ; preds = %bb1
  %pb = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %b, !dbg !2409
  store ptr %pb, ptr %pb.dbg.spill, align 8, !dbg !2409
  call void @llvm.dbg.declare(metadata ptr %pb.dbg.spill, metadata !2400, metadata !DIExpression()), !dbg !2410
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h9fb425901b32d437E(ptr %pa, ptr %pb) #10, !dbg !2411
  ret void, !dbg !2412

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %b, i64 %self.1, ptr align 8 %0) #11, !dbg !2408
  unreachable, !dbg !2408
}

; core::slice::<impl [T]>::reverse
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h4bbd3e8cc91a15fbE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2413 {
start:
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %back_half.dbg.spill = alloca { ptr, i64 }, align 8
  %front_half.dbg.spill = alloca { ptr, i64 }, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %half_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2417, metadata !DIExpression()), !dbg !2426
  %half_len = udiv i64 %self.1, 2, !dbg !2427
  store i64 %half_len, ptr %half_len.dbg.spill, align 8, !dbg !2427
  call void @llvm.dbg.declare(metadata ptr %half_len.dbg.spill, metadata !2418, metadata !DIExpression()), !dbg !2428
; call core::slice::<impl [T]>::as_mut_ptr_range
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17hb851a5c6e4698284E"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2429
  %_8.0 = extractvalue { ptr, ptr } %2, 0, !dbg !2429
  %_8.1 = extractvalue { ptr, ptr } %2, 1, !dbg !2429
  store ptr %_8.0, ptr %start.dbg.spill, align 8, !dbg !2430
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2420, metadata !DIExpression()), !dbg !2431
  store ptr %_8.1, ptr %end.dbg.spill, align 8, !dbg !2432
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2422, metadata !DIExpression()), !dbg !2433
; call core::slice::raw::from_raw_parts_mut
  %3 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hf5c8da6568a0016cE(ptr %_8.0, i64 %half_len) #10, !dbg !2434
  %_12.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2434
  %_12.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2434
  store ptr %_8.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2435, metadata !DIExpression()), !dbg !2439
  store i64 %half_len, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2438, metadata !DIExpression()), !dbg !2441
  store i64 %half_len, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2442, metadata !DIExpression()), !dbg !2450
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2452, metadata !DIExpression()), !dbg !2458
  store i64 %half_len, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2457, metadata !DIExpression()), !dbg !2460
  %4 = sub i64 0, %half_len, !dbg !2461
  store ptr %_8.1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !2462, metadata !DIExpression()), !dbg !2468
  store i64 %4, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !2467, metadata !DIExpression()), !dbg !2470
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_8.1, i64 %4, !dbg !2471
; call core::slice::raw::from_raw_parts_mut
  %6 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hf5c8da6568a0016cE(ptr %5, i64 %half_len) #10, !dbg !2472
  %_13.0 = extractvalue { ptr, i64 } %6, 0, !dbg !2472
  %_13.1 = extractvalue { ptr, i64 } %6, 1, !dbg !2472
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2473
  store ptr %_12.0, ptr %7, align 8, !dbg !2473
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2473
  store i64 %_12.1, ptr %8, align 8, !dbg !2473
  %9 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2473
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !2473
  store ptr %_13.0, ptr %10, align 8, !dbg !2473
  %11 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !2473
  store i64 %_13.1, ptr %11, align 8, !dbg !2473
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2474
  %front_half.0 = load ptr, ptr %12, align 8, !dbg !2474, !nonnull !24, !align !490, !noundef !24
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2474
  %front_half.1 = load i64, ptr %13, align 8, !dbg !2474, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 0, !dbg !2474
  store ptr %front_half.0, ptr %14, align 8, !dbg !2474
  %15 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 1, !dbg !2474
  store i64 %front_half.1, ptr %15, align 8, !dbg !2474
  call void @llvm.dbg.declare(metadata ptr %front_half.dbg.spill, metadata !2423, metadata !DIExpression()), !dbg !2475
  %16 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2476
  %17 = getelementptr inbounds { ptr, i64 }, ptr %16, i32 0, i32 0, !dbg !2476
  %back_half.0 = load ptr, ptr %17, align 8, !dbg !2476, !nonnull !24, !align !490, !noundef !24
  %18 = getelementptr inbounds { ptr, i64 }, ptr %16, i32 0, i32 1, !dbg !2476
  %back_half.1 = load i64, ptr %18, align 8, !dbg !2476, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 0, !dbg !2476
  store ptr %back_half.0, ptr %19, align 8, !dbg !2476
  %20 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 1, !dbg !2476
  store i64 %back_half.1, ptr %20, align 8, !dbg !2476
  call void @llvm.dbg.declare(metadata ptr %back_half.dbg.spill, metadata !2425, metadata !DIExpression()), !dbg !2477
; call core::slice::<impl [T]>::reverse::revswap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17he7247178a486b111E"(ptr align 8 %front_half.0, i64 %front_half.1, ptr align 8 %back_half.0, i64 %back_half.1, i64 %half_len) #10, !dbg !2478
  ret void, !dbg !2479
}

; core::slice::<impl [T]>::reverse::revswap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17he7247178a486b111E"(ptr align 8 %a.0, i64 %a.1, ptr align 8 %b.0, i64 %b.1, i64 %n) unnamed_addr #0 !dbg !2480 {
start:
  %b.dbg.spill6 = alloca { ptr, i64 }, align 8
  %a.dbg.spill3 = alloca { ptr, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %a.dbg.spill = alloca { ptr, i64 }, align 8
  %i = alloca i64, align 8
  %_24 = alloca i64, align 8
  %_21 = alloca i64, align 8
  %_18 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 0
  store ptr %a.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 1
  store i64 %a.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2485, metadata !DIExpression()), !dbg !2493
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2486, metadata !DIExpression()), !dbg !2494
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !2487, metadata !DIExpression()), !dbg !2495
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2491, metadata !DIExpression()), !dbg !2496
  br i1 true, label %bb1, label %bb3, !dbg !2497

bb3:                                              ; preds = %bb1, %start
  br i1 true, label %bb4, label %bb6, !dbg !2498

bb1:                                              ; preds = %start
  %_6 = icmp eq i64 %a.1, %n, !dbg !2499
  %_5 = xor i1 %_6, true, !dbg !2497
  br i1 %_5, label %bb2, label %bb3, !dbg !2497

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_dd0dc542054f5a3bd5e0287046a20794, i64 30, ptr align 8 @alloc_56d87f2c66d76c3f9f16853a2ec5e179) #11, !dbg !2497
  unreachable, !dbg !2497

bb6:                                              ; preds = %bb4, %bb3
  store i64 %n, ptr %_21, align 8, !dbg !2500
  %4 = load i64, ptr %_21, align 8, !dbg !2501, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc5c5f59ec5e342dbE"(ptr align 8 %a.0, i64 %a.1, i64 %4, ptr align 8 @alloc_3802366fa986a65287f2fa3ffe444552) #10, !dbg !2501
  %_20.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2501
  %_20.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2501
  store i64 %n, ptr %_24, align 8, !dbg !2502
  %6 = load i64, ptr %_24, align 8, !dbg !2503, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %7 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc5c5f59ec5e342dbE"(ptr align 8 %b.0, i64 %b.1, i64 %6, ptr align 8 @alloc_932be07abcf6e404c637b3e479c1e7c9) #10, !dbg !2503
  %_23.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2503
  %_23.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2503
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !2504
  store ptr %_20.0, ptr %8, align 8, !dbg !2504
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !2504
  store i64 %_20.1, ptr %9, align 8, !dbg !2504
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_18, i32 0, i32 1, !dbg !2504
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2504
  store ptr %_23.0, ptr %11, align 8, !dbg !2504
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2504
  store i64 %_23.1, ptr %12, align 8, !dbg !2504
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !2505
  %a.01 = load ptr, ptr %13, align 8, !dbg !2505, !nonnull !24, !align !490, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !2505
  %a.12 = load i64, ptr %14, align 8, !dbg !2505, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 0, !dbg !2505
  store ptr %a.01, ptr %15, align 8, !dbg !2505
  %16 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 1, !dbg !2505
  store i64 %a.12, ptr %16, align 8, !dbg !2505
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill3, metadata !2488, metadata !DIExpression()), !dbg !2506
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_18, i32 0, i32 1, !dbg !2507
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2507
  %b.04 = load ptr, ptr %18, align 8, !dbg !2507, !nonnull !24, !align !490, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2507
  %b.15 = load i64, ptr %19, align 8, !dbg !2507, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 0, !dbg !2507
  store ptr %b.04, ptr %20, align 8, !dbg !2507
  %21 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 1, !dbg !2507
  store i64 %b.15, ptr %21, align 8, !dbg !2507
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill6, metadata !2490, metadata !DIExpression()), !dbg !2508
  store i64 0, ptr %i, align 8, !dbg !2509
  br label %bb9, !dbg !2510

bb4:                                              ; preds = %bb3
  %_12 = icmp eq i64 %b.1, %n, !dbg !2511
  %_11 = xor i1 %_12, true, !dbg !2498
  br i1 %_11, label %bb5, label %bb6, !dbg !2498

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_deedf7aeab1a7c66b5420b58a4093bcc, i64 30, ptr align 8 @alloc_9bc869464e7f5dcda873bc5fba3167ae) #11, !dbg !2498
  unreachable, !dbg !2498

bb9:                                              ; preds = %bb16, %bb6
  %_27 = load i64, ptr %i, align 8, !dbg !2512, !noundef !24
  %_26 = icmp ult i64 %_27, %n, !dbg !2512
  br i1 %_26, label %bb10, label %bb17, !dbg !2512

bb17:                                             ; preds = %bb9
  ret void, !dbg !2513

bb10:                                             ; preds = %bb9
  %_30 = load i64, ptr %i, align 8, !dbg !2514, !noundef !24
  %_32 = icmp ult i64 %_30, %a.12, !dbg !2515
  %22 = call i1 @llvm.expect.i1(i1 %_32, i1 true), !dbg !2515
  br i1 %22, label %bb11, label %panic, !dbg !2515

bb11:                                             ; preds = %bb10
  %_29 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %a.01, i64 0, i64 %_30, !dbg !2516
  %_36.0 = sub i64 %n, 1, !dbg !2517
  %_36.1 = icmp ult i64 %n, 1, !dbg !2517
  %23 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !2517
  br i1 %23, label %panic7, label %bb12, !dbg !2517

panic:                                            ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %_30, i64 %a.12, ptr align 8 @alloc_4885065212b954fcf5498feb1a1b310e) #11, !dbg !2515
  unreachable, !dbg !2515

bb12:                                             ; preds = %bb11
  %_37 = load i64, ptr %i, align 8, !dbg !2518, !noundef !24
  %_38.0 = sub i64 %_36.0, %_37, !dbg !2517
  %_38.1 = icmp ult i64 %_36.0, %_37, !dbg !2517
  %24 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !2517
  br i1 %24, label %panic8, label %bb13, !dbg !2517

panic7:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_ac4c1a7cd73cf22de14f2687be3e8fcc) #11, !dbg !2517
  unreachable, !dbg !2517

bb13:                                             ; preds = %bb12
  %_40 = icmp ult i64 %_38.0, %b.15, !dbg !2519
  %25 = call i1 @llvm.expect.i1(i1 %_40, i1 true), !dbg !2519
  br i1 %25, label %bb14, label %panic9, !dbg !2519

panic8:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_ac4c1a7cd73cf22de14f2687be3e8fcc) #11, !dbg !2517
  unreachable, !dbg !2517

bb14:                                             ; preds = %bb13
  %_33 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %b.04, i64 0, i64 %_38.0, !dbg !2520
; call core::mem::swap
  call void @_ZN4core3mem4swap17hc8c42478b0aa4ab0E(ptr align 8 %_29, ptr align 8 %_33) #10, !dbg !2521
  %26 = load i64, ptr %i, align 8, !dbg !2522, !noundef !24
  %27 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %26, i64 1), !dbg !2522
  %_41.0 = extractvalue { i64, i1 } %27, 0, !dbg !2522
  %_41.1 = extractvalue { i64, i1 } %27, 1, !dbg !2522
  %28 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !2522
  br i1 %28, label %panic10, label %bb16, !dbg !2522

panic9:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %_38.0, i64 %b.15, ptr align 8 @alloc_2732a97934d3b057ad0dd41fcc13fd03) #11, !dbg !2519
  unreachable, !dbg !2519

bb16:                                             ; preds = %bb14
  store i64 %_41.0, ptr %i, align 8, !dbg !2522
  br label %bb9, !dbg !2510

panic10:                                          ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_9fb3574fe8b1524af3e60fcd315c8079) #11, !dbg !2522
  unreachable, !dbg !2522
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hf5c8da6568a0016cE(ptr %data, i64 %len) unnamed_addr #0 !dbg !2523 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !2529, metadata !DIExpression()), !dbg !2531
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2530, metadata !DIExpression()), !dbg !2532
  br i1 true, label %bb1, label %bb2, !dbg !2533

bb2:                                              ; preds = %_ZN4core5slice3raw18from_raw_parts_mut7runtime17h5176cfe8c7db6de4E.exit, %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h505fa47346920890E(ptr %data, i64 %len) #10, !dbg !2534
  %_6.0 = extractvalue { ptr, i64 } %0, 0, !dbg !2534
  %_6.1 = extractvalue { ptr, i64 } %0, 1, !dbg !2534
  %1 = insertvalue { ptr, i64 } poison, ptr %_6.0, 0, !dbg !2535
  %2 = insertvalue { ptr, i64 } %1, i64 %_6.1, 1, !dbg !2535
  ret { ptr, i64 } %2, !dbg !2535

bb1:                                              ; preds = %start
  store ptr %data, ptr %_5, align 8, !dbg !2533
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2533
  store i64 %len, ptr %3, align 8, !dbg !2533
  %4 = load ptr, ptr %_5, align 8, !dbg !2533, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2533
  %6 = load i64, ptr %5, align 8, !dbg !2533, !noundef !24
  store ptr %4, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !2536, metadata !DIExpression()), !dbg !2543
  store i64 %6, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2542, metadata !DIExpression()), !dbg !2543
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE(ptr %4) #10, !dbg !2545
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !2545

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !2545
  br label %bb3.i, !dbg !2545

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_valid_allocation_size
  %_7.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hc0b066e775af0993E(i64 %6) #10, !dbg !2547
  %7 = zext i1 %_7.i to i8, !dbg !2545
  store i8 %7, ptr %_4.i, align 1, !dbg !2545
  br label %bb3.i, !dbg !2545

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %8 = load i8, ptr %_4.i, align 1, !dbg !2548, !range !231, !noundef !24
  %9 = trunc i8 %8 to i1, !dbg !2548
  %_3.i = xor i1 %9, true, !dbg !2548
  br i1 %_3.i, label %bb6.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17h5176cfe8c7db6de4E.exit, !dbg !2548

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a, i64 166) #11, !dbg !2549
  unreachable, !dbg !2549

_ZN4core5slice3raw18from_raw_parts_mut7runtime17h5176cfe8c7db6de4E.exit: ; preds = %bb3.i
  br label %bb2, !dbg !2533
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h337f6f0301448630E"(ptr align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2550 {
start:
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %addr.dbg.spill.i = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %end = alloca ptr, align 8
  %0 = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !2554, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.declare(metadata ptr %end, metadata !2557, metadata !DIExpression()), !dbg !2560
  store ptr %slice.0, ptr %self.dbg.spill.i1, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %slice.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2561, metadata !DIExpression()), !dbg !2566
  store ptr %slice.0, ptr %ptr.dbg.spill, align 8, !dbg !2568
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2555, metadata !DIExpression()), !dbg !2569
  br i1 false, label %bb2, label %bb3, !dbg !2570

bb3:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !2571
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !209, metadata !DIExpression()), !dbg !2573
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %slice.1, !dbg !2574
  store ptr %4, ptr %end, align 8, !dbg !2575
  br label %bb4, !dbg !2575

bb2:                                              ; preds = %start
  store i64 %slice.1, ptr %addr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i, metadata !2576, metadata !DIExpression()), !dbg !2581
  %5 = inttoptr i64 %slice.1 to ptr, !dbg !2583
  store ptr %5, ptr %end, align 8, !dbg !2584
  br label %bb4, !dbg !2584

bb4:                                              ; preds = %bb3, %bb2
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_8 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h15f07cbe073e8ff7E"(ptr %slice.0) #10, !dbg !2585
  %_11 = load ptr, ptr %end, align 8, !dbg !2586, !noundef !24
  store ptr %_8, ptr %0, align 8, !dbg !2587
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !2587
  store ptr %_11, ptr %6, align 8, !dbg !2587
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !2588
  %8 = load ptr, ptr %7, align 8, !dbg !2588, !nonnull !24, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !2588
  %10 = load ptr, ptr %9, align 8, !dbg !2588, !noundef !24
  %11 = insertvalue { ptr, ptr } poison, ptr %8, 0, !dbg !2588
  %12 = insertvalue { ptr, ptr } %11, ptr %10, 1, !dbg !2588
  ret { ptr, ptr } %12, !dbg !2588
}

; core::slice::sort::insert_head
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_head17hc56b2cb743b6eb6cE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2589 {
start:
  %self.dbg.spill.i13 = alloca ptr, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i11 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %count.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_48 = alloca ptr, align 8
  %_46 = alloca { ptr, ptr }, align 8
  %_40 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_36 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_19 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2594, metadata !DIExpression()), !dbg !2607
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2595, metadata !DIExpression()), !dbg !2608
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2600, metadata !DIExpression()), !dbg !2610
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2602, metadata !DIExpression()), !dbg !2611
  br i1 true, label %bb1, label %bb3, !dbg !2612

bb3:                                              ; preds = %bb1, %start
; call core::slice::<impl [T]>::get_unchecked
  %_12 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %v.0, i64 %v.1, i64 1) #10, !dbg !2613
; call core::slice::<impl [T]>::get_unchecked
  %_15 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %v.0, i64 %v.1, i64 0) #10, !dbg !2614
  store ptr %_12, ptr %_10, align 8, !dbg !2615
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2615
  store ptr %_15, ptr %2, align 8, !dbg !2615
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2615
  %4 = load ptr, ptr %3, align 8, !dbg !2615, !nonnull !24, !align !490, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2615
  %6 = load ptr, ptr %5, align 8, !dbg !2615, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %4, ptr align 8 %6) #10, !dbg !2615
  br i1 %_9, label %bb7, label %bb31, !dbg !2615

bb1:                                              ; preds = %start
  %_5 = icmp uge i64 %v.1, 2, !dbg !2616
  %_4 = xor i1 %_5, true, !dbg !2612
  br i1 %_4, label %bb2, label %bb3, !dbg !2612

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_6932146a2b5945f5118e7e865cb7ff4c) #11, !dbg !2612
  unreachable, !dbg !2612

bb31:                                             ; preds = %bb30, %bb3
  ret void, !dbg !2617

bb7:                                              ; preds = %bb3
  store ptr %v.0, ptr %self.dbg.spill.i11, align 8
  %7 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i11, i32 0, i32 1
  store i64 %v.1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !2299, metadata !DIExpression()), !dbg !2618
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2620
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2596, metadata !DIExpression()), !dbg !2621
; call core::ptr::read
  call void @_ZN4core3ptr4read17h927c413b34ea08c4E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_19, ptr %v.0) #10, !dbg !2622
  call void @llvm.dbg.declare(metadata ptr %_19, metadata !1107, metadata !DIExpression()), !dbg !2623
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_19, i64 24, i1 false), !dbg !2625
  store ptr %tmp, ptr %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i13, metadata !2626, metadata !DIExpression()), !dbg !2633
  store ptr %v.0, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !265, metadata !DIExpression()), !dbg !2635
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !271, metadata !DIExpression()), !dbg !2637
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2638
  store ptr %tmp, ptr %hole, align 8, !dbg !2639
  %9 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2639
  store ptr %8, ptr %9, align 8, !dbg !2639
  store ptr %v.0, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !265, metadata !DIExpression()), !dbg !2640
  store i64 1, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !271, metadata !DIExpression()), !dbg !2642
  %10 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2643
  store ptr %v.0, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !265, metadata !DIExpression()), !dbg !2644
  store i64 0, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !271, metadata !DIExpression()), !dbg !2646
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %10, ptr %v.0, i64 1) #10, !dbg !2647
  store i64 2, ptr %_36, align 8, !dbg !2648
  %11 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 1, !dbg !2648
  store i64 %v.1, ptr %11, align 8, !dbg !2648
  %12 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 0, !dbg !2648
  %13 = load i64, ptr %12, align 8, !dbg !2648, !noundef !24
  %14 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 1, !dbg !2648
  %15 = load i64, ptr %14, align 8, !dbg !2648, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %16 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2035deb76a1d3e4fE"(i64 %13, i64 %15) #10, !dbg !2648
  %_35.0 = extractvalue { i64, i64 } %16, 0, !dbg !2648
  %_35.1 = extractvalue { i64, i64 } %16, 1, !dbg !2648
  %17 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2648
  store i64 %_35.0, ptr %17, align 8, !dbg !2648
  %18 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2648
  store i64 %_35.1, ptr %18, align 8, !dbg !2648
  br label %bb17, !dbg !2649

bb17:                                             ; preds = %bb26, %bb7
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %19 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3ed0813fa7c9be69E"(ptr align 8 %iter) #10, !dbg !2611
  store { i64, i64 } %19, ptr %_40, align 8, !dbg !2611
  %_42 = load i64, ptr %_40, align 8, !dbg !2611, !range !1165, !noundef !24
  %20 = icmp eq i64 %_42, 0, !dbg !2611
  br i1 %20, label %bb30, label %bb19, !dbg !2611

bb30:                                             ; preds = %bb19, %bb17
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h9eb74c98e442b3e6E"(ptr align 8 %hole) #10, !dbg !2650
  br label %bb31, !dbg !2650

bb19:                                             ; preds = %bb17
  %21 = getelementptr inbounds { i64, i64 }, ptr %_40, i32 0, i32 1, !dbg !2651
  %i = load i64, ptr %21, align 8, !dbg !2651, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2651
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2604, metadata !DIExpression()), !dbg !2652
; call core::slice::<impl [T]>::get_unchecked
  %22 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %v.0, i64 %v.1, i64 %i) #10, !dbg !2653
  store ptr %22, ptr %_48, align 8, !dbg !2653
  %_63 = load ptr, ptr %_48, align 8, !dbg !2654, !nonnull !24, !align !490, !noundef !24
  store ptr %tmp, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2626, metadata !DIExpression()), !dbg !2655
  store ptr %_63, ptr %_46, align 8, !dbg !2657
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_46, i32 0, i32 1, !dbg !2657
  store ptr %tmp, ptr %23, align 8, !dbg !2657
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_46, i32 0, i32 0, !dbg !2657
  %25 = load ptr, ptr %24, align 8, !dbg !2657, !nonnull !24, !align !490, !noundef !24
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_46, i32 0, i32 1, !dbg !2657
  %27 = load ptr, ptr %26, align 8, !dbg !2657, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_45 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %25, ptr align 8 %27) #10, !dbg !2657
  %_44 = xor i1 %_45, true, !dbg !2658
  br i1 %_44, label %bb30, label %bb24, !dbg !2658

bb20:                                             ; No predecessors!
  unreachable, !dbg !2611

bb24:                                             ; preds = %bb19
  store ptr %v.0, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !265, metadata !DIExpression()), !dbg !2659
  store i64 %i, ptr %count.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i3, metadata !271, metadata !DIExpression()), !dbg !2661
  %28 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2662
  %_60.0 = sub i64 %i, 1, !dbg !2663
  %_60.1 = icmp ult i64 %i, 1, !dbg !2663
  %29 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false), !dbg !2663
  br i1 %29, label %panic, label %bb26, !dbg !2663

bb26:                                             ; preds = %bb24
  store ptr %v.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !265, metadata !DIExpression()), !dbg !2664
  store i64 %_60.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !271, metadata !DIExpression()), !dbg !2666
  %30 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_60.0, !dbg !2667
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %28, ptr %30, i64 1) #10, !dbg !2668
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !2669
  store i64 %i, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !2671
  %31 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2672
  %32 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2673
  store ptr %31, ptr %32, align 8, !dbg !2673
  br label %bb17, !dbg !2649

panic:                                            ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2b18b37ae84d61762f070ebc082ffd36) #11, !dbg !2663
  unreachable, !dbg !2663
}

; core::slice::sort::insert_tail
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_tail17hd4f3d2e06272ff2eE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2674 {
start:
  %self.dbg.spill.i17 = alloca ptr, align 8
  %self.dbg.spill.i16 = alloca ptr, align 8
  %self.dbg.spill.i15 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %rhs.dbg.spill.i.i6 = alloca i64, align 8
  %self.dbg.spill.i1.i7 = alloca i64, align 8
  %self.dbg.spill.i.i8 = alloca i64, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %j_ptr.dbg.spill = alloca ptr, align 8
  %j.dbg.spill = alloca i64, align 8
  %i_ptr.dbg.spill = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_51 = alloca { ptr, ptr }, align 8
  %_43 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_39 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_23 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_17 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2676, metadata !DIExpression()), !dbg !2702
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2677, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2684, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2686, metadata !DIExpression()), !dbg !2705
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2688, metadata !DIExpression()), !dbg !2706
  br i1 true, label %bb1, label %bb3, !dbg !2707

bb3:                                              ; preds = %bb1, %start
  store ptr %v.0, ptr %self.dbg.spill.i15, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i15, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i15, metadata !2299, metadata !DIExpression()), !dbg !2708
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2710
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2678, metadata !DIExpression()), !dbg !2711
  %_13.0 = sub i64 %v.1, 1, !dbg !2712
  %_13.1 = icmp ult i64 %v.1, 1, !dbg !2712
  %3 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !2712
  br i1 %3, label %panic, label %bb5, !dbg !2712

bb1:                                              ; preds = %start
  %_5 = icmp uge i64 %v.1, 2, !dbg !2713
  %_4 = xor i1 %_5, true, !dbg !2707
  br i1 %_4, label %bb2, label %bb3, !dbg !2707

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_141337dbddbbf875f1e651a897c1c26f) #11, !dbg !2707
  unreachable, !dbg !2707

bb5:                                              ; preds = %bb3
  store i64 %_13.0, ptr %i.dbg.spill, align 8, !dbg !2712
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2680, metadata !DIExpression()), !dbg !2714
  store ptr %v.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !265, metadata !DIExpression()), !dbg !2715
  store i64 %_13.0, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !271, metadata !DIExpression()), !dbg !2717
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_13.0, !dbg !2718
  store ptr %4, ptr %i_ptr.dbg.spill, align 8, !dbg !2719
  call void @llvm.dbg.declare(metadata ptr %i_ptr.dbg.spill, metadata !2682, metadata !DIExpression()), !dbg !2720
  store ptr %4, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !2435, metadata !DIExpression()), !dbg !2721
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !2438, metadata !DIExpression()), !dbg !2723
  store i64 1, ptr %self.dbg.spill.i.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i8, metadata !2442, metadata !DIExpression()), !dbg !2724
  store i64 0, ptr %self.dbg.spill.i1.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i7, metadata !2452, metadata !DIExpression()), !dbg !2726
  store i64 1, ptr %rhs.dbg.spill.i.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i6, metadata !2457, metadata !DIExpression()), !dbg !2728
  store ptr %4, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2462, metadata !DIExpression()), !dbg !2729
  store i64 -1, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !2467, metadata !DIExpression()), !dbg !2731
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %4, i64 -1, !dbg !2732
  store ptr %4, ptr %_17, align 8, !dbg !2733
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !2733
  store ptr %5, ptr %6, align 8, !dbg !2733
  %7 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 0, !dbg !2733
  %8 = load ptr, ptr %7, align 8, !dbg !2733, !nonnull !24, !align !490, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !2733
  %10 = load ptr, ptr %9, align 8, !dbg !2733, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_16 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %8, ptr align 8 %10) #10, !dbg !2733
  br i1 %_16, label %bb9, label %bb28, !dbg !2733

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_90f4b6dda14e5cb7081926ef9c658315) #11, !dbg !2712
  unreachable, !dbg !2712

bb28:                                             ; preds = %bb27, %bb5
  ret void, !dbg !2734

bb9:                                              ; preds = %bb5
; call core::ptr::read
  call void @_ZN4core3ptr4read17h927c413b34ea08c4E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_23, ptr %4) #10, !dbg !2735
  call void @llvm.dbg.declare(metadata ptr %_23, metadata !1107, metadata !DIExpression()), !dbg !2736
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_23, i64 24, i1 false), !dbg !2738
  store ptr %tmp, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !2626, metadata !DIExpression()), !dbg !2739
  store ptr %4, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !2435, metadata !DIExpression()), !dbg !2741
  store i64 1, ptr %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i4, metadata !2438, metadata !DIExpression()), !dbg !2743
  store i64 1, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2442, metadata !DIExpression()), !dbg !2744
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2452, metadata !DIExpression()), !dbg !2746
  store i64 1, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2457, metadata !DIExpression()), !dbg !2748
  store ptr %4, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !2462, metadata !DIExpression()), !dbg !2749
  store i64 -1, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !2467, metadata !DIExpression()), !dbg !2751
  %11 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %4, i64 -1, !dbg !2752
  store ptr %tmp, ptr %hole, align 8, !dbg !2753
  %12 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2753
  store ptr %11, ptr %12, align 8, !dbg !2753
  %13 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2754
  %_35 = load ptr, ptr %13, align 8, !dbg !2754, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %_35, ptr %4, i64 1) #10, !dbg !2755
  %_41.0 = sub i64 %_13.0, 1, !dbg !2756
  %_41.1 = icmp ult i64 %_13.0, 1, !dbg !2756
  %14 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !2756
  br i1 %14, label %panic1, label %bb15, !dbg !2756

bb15:                                             ; preds = %bb9
  store i64 0, ptr %_39, align 8, !dbg !2757
  %15 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 1, !dbg !2757
  store i64 %_41.0, ptr %15, align 8, !dbg !2757
  %16 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 0, !dbg !2757
  %17 = load i64, ptr %16, align 8, !dbg !2757, !noundef !24
  %18 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 1, !dbg !2757
  %19 = load i64, ptr %18, align 8, !dbg !2757, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %20 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h4de59405b16b1113E(i64 %17, i64 %19) #10, !dbg !2757
  %_38.0 = extractvalue { i64, i64 } %20, 0, !dbg !2757
  %_38.1 = extractvalue { i64, i64 } %20, 1, !dbg !2757
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %21 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd993dff03141e9f4E"(i64 %_38.0, i64 %_38.1) #10, !dbg !2757
  %_37.0 = extractvalue { i64, i64 } %21, 0, !dbg !2757
  %_37.1 = extractvalue { i64, i64 } %21, 1, !dbg !2757
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2757
  store i64 %_37.0, ptr %22, align 8, !dbg !2757
  %23 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2757
  store i64 %_37.1, ptr %23, align 8, !dbg !2757
  br label %bb18, !dbg !2758

panic1:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_e41efc6332efd19972427a8ca6f9ac9d) #11, !dbg !2756
  unreachable, !dbg !2756

bb18:                                             ; preds = %bb25, %bb15
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %24 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfa84b6e6f4b1a521E"(ptr align 8 %iter) #10, !dbg !2706
  store { i64, i64 } %24, ptr %_43, align 8, !dbg !2706
  %_45 = load i64, ptr %_43, align 8, !dbg !2706, !range !1165, !noundef !24
  %25 = icmp eq i64 %_45, 0, !dbg !2706
  br i1 %25, label %bb27, label %bb20, !dbg !2706

bb27:                                             ; preds = %bb20, %bb18
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h9eb74c98e442b3e6E"(ptr align 8 %hole) #10, !dbg !2759
  br label %bb28, !dbg !2759

bb20:                                             ; preds = %bb18
  %26 = getelementptr inbounds { i64, i64 }, ptr %_43, i32 0, i32 1, !dbg !2760
  %j = load i64, ptr %26, align 8, !dbg !2760, !noundef !24
  store i64 %j, ptr %j.dbg.spill, align 8, !dbg !2760
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !2698, metadata !DIExpression()), !dbg !2761
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !2762
  store i64 %j, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !2764
  %27 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %j, !dbg !2765
  store ptr %27, ptr %j_ptr.dbg.spill, align 8, !dbg !2766
  call void @llvm.dbg.declare(metadata ptr %j_ptr.dbg.spill, metadata !2700, metadata !DIExpression()), !dbg !2767
  store ptr %tmp, ptr %self.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i16, metadata !2626, metadata !DIExpression()), !dbg !2768
  store ptr %tmp, ptr %_51, align 8, !dbg !2770
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_51, i32 0, i32 1, !dbg !2770
  store ptr %27, ptr %28, align 8, !dbg !2770
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_51, i32 0, i32 0, !dbg !2770
  %30 = load ptr, ptr %29, align 8, !dbg !2770, !nonnull !24, !align !490, !noundef !24
  %31 = getelementptr inbounds { ptr, ptr }, ptr %_51, i32 0, i32 1, !dbg !2770
  %32 = load ptr, ptr %31, align 8, !dbg !2770, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_50 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %30, ptr align 8 %32) #10, !dbg !2770
  %_49 = xor i1 %_50, true, !dbg !2771
  br i1 %_49, label %bb27, label %bb25, !dbg !2771

bb21:                                             ; No predecessors!
  unreachable, !dbg !2706

bb25:                                             ; preds = %bb20
  %33 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2772
  %_59 = load ptr, ptr %33, align 8, !dbg !2772, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %27, ptr %_59, i64 1) #10, !dbg !2773
  %34 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2774
  store ptr %27, ptr %34, align 8, !dbg !2774
  br label %bb18, !dbg !2758
}

; core::slice::sort::choose_pivot
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort12choose_pivot17h70023412db7e1b5bE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2775 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_41 = alloca { ptr, ptr, ptr }, align 8
  %_37 = alloca ptr, align 8
  %_33 = alloca ptr, align 8
  %_29 = alloca ptr, align 8
  %sort_adjacent = alloca ptr, align 8
  %sort3 = alloca ptr, align 8
  %sort2 = alloca %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", align 8
  %swaps = alloca i64, align 8
  %c = alloca i64, align 8
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2779, metadata !DIExpression()), !dbg !2812
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2780, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.declare(metadata ptr %a, metadata !2783, metadata !DIExpression()), !dbg !2814
  call void @llvm.dbg.declare(metadata ptr %b, metadata !2785, metadata !DIExpression()), !dbg !2815
  call void @llvm.dbg.declare(metadata ptr %c, metadata !2787, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.declare(metadata ptr %swaps, metadata !2789, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.declare(metadata ptr %sort2, metadata !2791, metadata !DIExpression()), !dbg !2818
  call void @llvm.dbg.declare(metadata ptr %sort3, metadata !2800, metadata !DIExpression()), !dbg !2819
  call void @llvm.dbg.declare(metadata ptr %sort_adjacent, metadata !2806, metadata !DIExpression()), !dbg !2820
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2821
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2781, metadata !DIExpression()), !dbg !2822
  %_6 = udiv i64 %v.1, 4, !dbg !2823
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_6, i64 1), !dbg !2823
  %_8.0 = extractvalue { i64, i1 } %3, 0, !dbg !2823
  %_8.1 = extractvalue { i64, i1 } %3, 1, !dbg !2823
  %4 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2823
  br i1 %4, label %panic, label %bb2, !dbg !2823

bb2:                                              ; preds = %start
  store i64 %_8.0, ptr %a, align 8, !dbg !2823
  %_10 = udiv i64 %v.1, 4, !dbg !2824
  %5 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2824
  %_12.0 = extractvalue { i64, i1 } %5, 0, !dbg !2824
  %_12.1 = extractvalue { i64, i1 } %5, 1, !dbg !2824
  %6 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2824
  br i1 %6, label %panic1, label %bb4, !dbg !2824

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_912dd1c737b966744c5b309cc20a3d47) #11, !dbg !2823
  unreachable, !dbg !2823

bb4:                                              ; preds = %bb2
  store i64 %_12.0, ptr %b, align 8, !dbg !2824
  %_14 = udiv i64 %v.1, 4, !dbg !2825
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_14, i64 3), !dbg !2825
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !2825
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !2825
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !2825
  br i1 %8, label %panic2, label %bb6, !dbg !2825

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_7aff2c5e0ce2b115fc6c1e2cef0aaf8b) #11, !dbg !2824
  unreachable, !dbg !2824

bb6:                                              ; preds = %bb4
  store i64 %_16.0, ptr %c, align 8, !dbg !2825
  store i64 0, ptr %swaps, align 8, !dbg !2826
  %_18 = icmp uge i64 %v.1, 8, !dbg !2827
  br i1 %_18, label %bb7, label %bb12, !dbg !2827

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_51fd6fd3cd9ef520ddfe39086f06b289) #11, !dbg !2825
  unreachable, !dbg !2825

bb12:                                             ; preds = %bb11, %bb6
  %_46 = load i64, ptr %swaps, align 8, !dbg !2828, !noundef !24
  %_45 = icmp ult i64 %_46, 12, !dbg !2828
  br i1 %_45, label %bb13, label %bb14, !dbg !2828

bb7:                                              ; preds = %bb6
  store ptr %is_less, ptr %sort2, align 8, !dbg !2829
  %9 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 1, !dbg !2829
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !2829
  store ptr %v.0, ptr %10, align 8, !dbg !2829
  %11 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !2829
  store i64 %v.1, ptr %11, align 8, !dbg !2829
  %12 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 2, !dbg !2829
  store ptr %swaps, ptr %12, align 8, !dbg !2829
  store ptr %sort2, ptr %sort3, align 8, !dbg !2830
  %_24 = icmp uge i64 %v.1, 50, !dbg !2831
  br i1 %_24, label %bb8, label %bb11, !dbg !2831

bb11:                                             ; preds = %bb8, %bb7
  store ptr %a, ptr %_41, align 8, !dbg !2832
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2832
  store ptr %b, ptr %13, align 8, !dbg !2832
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2832
  store ptr %c, ptr %14, align 8, !dbg !2832
  %15 = load ptr, ptr %_41, align 8, !dbg !2832, !nonnull !24, !align !490, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2832
  %17 = load ptr, ptr %16, align 8, !dbg !2832, !nonnull !24, !align !490, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2832
  %19 = load ptr, ptr %18, align 8, !dbg !2832, !nonnull !24, !align !490, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h7af38418f855a001E"(ptr align 8 %sort3, ptr align 8 %15, ptr align 8 %17, ptr align 8 %19) #10, !dbg !2832
  br label %bb12, !dbg !2832

bb8:                                              ; preds = %bb7
  store ptr %sort3, ptr %sort_adjacent, align 8, !dbg !2833
  store ptr %a, ptr %_29, align 8, !dbg !2834
  %20 = load ptr, ptr %_29, align 8, !dbg !2834, !nonnull !24, !align !490, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h110ab19cf4b52e7aE"(ptr align 8 %sort_adjacent, ptr align 8 %20) #10, !dbg !2834
  store ptr %b, ptr %_33, align 8, !dbg !2835
  %21 = load ptr, ptr %_33, align 8, !dbg !2835, !nonnull !24, !align !490, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h110ab19cf4b52e7aE"(ptr align 8 %sort_adjacent, ptr align 8 %21) #10, !dbg !2835
  store ptr %c, ptr %_37, align 8, !dbg !2836
  %22 = load ptr, ptr %_37, align 8, !dbg !2836, !nonnull !24, !align !490, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h110ab19cf4b52e7aE"(ptr align 8 %sort_adjacent, ptr align 8 %22) #10, !dbg !2836
  br label %bb11, !dbg !2836

bb14:                                             ; preds = %bb12
; call core::slice::<impl [T]>::reverse
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h4bbd3e8cc91a15fbE"(ptr align 8 %v.0, i64 %v.1) #10, !dbg !2837
  %_53.0 = sub i64 %v.1, 1, !dbg !2838
  %_53.1 = icmp ult i64 %v.1, 1, !dbg !2838
  %23 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !2838
  br i1 %23, label %panic3, label %bb16, !dbg !2838

bb13:                                             ; preds = %bb12
  %_47 = load i64, ptr %b, align 8, !dbg !2839, !noundef !24
  %_49 = load i64, ptr %swaps, align 8, !dbg !2840, !noundef !24
  %_48 = icmp eq i64 %_49, 0, !dbg !2840
  store i64 %_47, ptr %0, align 8, !dbg !2841
  %24 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2841
  %25 = zext i1 %_48 to i8, !dbg !2841
  store i8 %25, ptr %24, align 8, !dbg !2841
  br label %bb18, !dbg !2842

bb18:                                             ; preds = %bb17, %bb13
  %26 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !2843
  %27 = load i64, ptr %26, align 8, !dbg !2843, !noundef !24
  %28 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2843
  %29 = load i8, ptr %28, align 8, !dbg !2843, !range !231, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !2843
  %31 = zext i1 %30 to i8, !dbg !2843
  %32 = insertvalue { i64, i8 } poison, i64 %27, 0, !dbg !2843
  %33 = insertvalue { i64, i8 } %32, i8 %31, 1, !dbg !2843
  ret { i64, i8 } %33, !dbg !2843

bb16:                                             ; preds = %bb14
  %_54 = load i64, ptr %b, align 8, !dbg !2844, !noundef !24
  %_55.0 = sub i64 %_53.0, %_54, !dbg !2838
  %_55.1 = icmp ult i64 %_53.0, %_54, !dbg !2838
  %34 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2838
  br i1 %34, label %panic4, label %bb17, !dbg !2838

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6a8eb4c18787545063c119f92681aeff) #11, !dbg !2838
  unreachable, !dbg !2838

bb17:                                             ; preds = %bb16
  store i64 %_55.0, ptr %0, align 8, !dbg !2845
  %35 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2845
  store i8 1, ptr %35, align 8, !dbg !2845
  br label %bb18, !dbg !2842

panic4:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6a8eb4c18787545063c119f92681aeff) #11, !dbg !2838
  unreachable, !dbg !2838
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h110ab19cf4b52e7aE"(ptr align 8 %_1, ptr align 8 %a) unnamed_addr #0 !dbg !2846 {
start:
  %tmp.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca i64, align 8
  %_5 = alloca { ptr, ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2852, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2855
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2851, metadata !DIExpression()), !dbg !2856
  %tmp = load i64, ptr %a, align 8, !dbg !2857, !noundef !24
  store i64 %tmp, ptr %tmp.dbg.spill, align 8, !dbg !2857
  call void @llvm.dbg.declare(metadata ptr %tmp.dbg.spill, metadata !2853, metadata !DIExpression()), !dbg !2858
  %_12 = load ptr, ptr %_1, align 8, !dbg !2859, !nonnull !24, !align !490, !noundef !24
  %_8.0 = sub i64 %tmp, 1, !dbg !2860
  %_8.1 = icmp ult i64 %tmp, 1, !dbg !2860
  %0 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2860
  br i1 %0, label %panic, label %bb1, !dbg !2860

bb1:                                              ; preds = %start
  store i64 %_8.0, ptr %_7, align 8, !dbg !2860
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %tmp, i64 1), !dbg !2861
  %_11.0 = extractvalue { i64, i1 } %1, 0, !dbg !2861
  %_11.1 = extractvalue { i64, i1 } %1, 1, !dbg !2861
  %2 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !2861
  br i1 %2, label %panic1, label %bb2, !dbg !2861

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4e8855159810091534f04a19bbe30782) #11, !dbg !2860
  unreachable, !dbg !2860

bb2:                                              ; preds = %bb1
  store i64 %_11.0, ptr %_10, align 8, !dbg !2861
  store ptr %_7, ptr %_5, align 8, !dbg !2859
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2859
  store ptr %a, ptr %3, align 8, !dbg !2859
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2859
  store ptr %_10, ptr %4, align 8, !dbg !2859
  %5 = load ptr, ptr %_5, align 8, !dbg !2859, !nonnull !24, !align !490, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2859
  %7 = load ptr, ptr %6, align 8, !dbg !2859, !nonnull !24, !align !490, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2859
  %9 = load ptr, ptr %8, align 8, !dbg !2859, !nonnull !24, !align !490, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h7af38418f855a001E"(ptr align 8 %_12, ptr align 8 %5, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2859
  ret void, !dbg !2862

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_787d88f30b9a4c9abd6abb658d261d97) #11, !dbg !2861
  unreachable, !dbg !2861
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h2adb57bf460d3f8cE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2863 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2869, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2872
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2870, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8, DW_OP_deref)), !dbg !2873
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2871, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 24, DW_OP_deref)), !dbg !2874
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2867, metadata !DIExpression()), !dbg !2875
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2868, metadata !DIExpression()), !dbg !2876
  %_16 = load ptr, ptr %_1, align 8, !dbg !2877, !nonnull !24, !align !490, !noundef !24
  %0 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 1, !dbg !2878
  %1 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2878
  %_17.0 = load ptr, ptr %1, align 8, !dbg !2878, !nonnull !24, !align !490, !noundef !24
  %2 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2878
  %_17.1 = load i64, ptr %2, align 8, !dbg !2878, !noundef !24
  %_8 = load i64, ptr %b, align 8, !dbg !2879, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_7 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %_17.0, i64 %_17.1, i64 %_8) #10, !dbg !2878
  %3 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 1, !dbg !2880
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !2880
  %_18.0 = load ptr, ptr %4, align 8, !dbg !2880, !nonnull !24, !align !490, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !2880
  %_18.1 = load i64, ptr %5, align 8, !dbg !2880, !noundef !24
  %_11 = load i64, ptr %a, align 8, !dbg !2881, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_10 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %_18.0, i64 %_18.1, i64 %_11) #10, !dbg !2880
  store ptr %_7, ptr %_5, align 8, !dbg !2877
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2877
  store ptr %_10, ptr %6, align 8, !dbg !2877
  %7 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 0, !dbg !2877
  %8 = load ptr, ptr %7, align 8, !dbg !2877, !nonnull !24, !align !490, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2877
  %10 = load ptr, ptr %9, align 8, !dbg !2877, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %_16, ptr align 8 %8, ptr align 8 %10) #10, !dbg !2877
  br i1 %_4, label %bb4, label %bb7, !dbg !2877

bb7:                                              ; preds = %bb6, %start
  ret void, !dbg !2882

bb4:                                              ; preds = %start
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h4250091187d10ec1E(ptr %a, ptr %b) #10, !dbg !2883
  %11 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2884
  %_19 = load ptr, ptr %11, align 8, !dbg !2884, !nonnull !24, !align !490, !noundef !24
  %12 = load i64, ptr %_19, align 8, !dbg !2884, !noundef !24
  %13 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %12, i64 1), !dbg !2884
  %_15.0 = extractvalue { i64, i1 } %13, 0, !dbg !2884
  %_15.1 = extractvalue { i64, i1 } %13, 1, !dbg !2884
  %14 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2884
  %_20 = load ptr, ptr %14, align 8, !dbg !2884, !nonnull !24, !align !490, !noundef !24
  %15 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !2884
  br i1 %15, label %panic, label %bb6, !dbg !2884

bb6:                                              ; preds = %bb4
  %16 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2884
  %_21 = load ptr, ptr %16, align 8, !dbg !2884, !nonnull !24, !align !490, !noundef !24
  store i64 %_15.0, ptr %_21, align 8, !dbg !2884
  br label %bb7, !dbg !2885

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_8b1cf5b76b10a43810ba75cdb94336e8) #11, !dbg !2884
  unreachable, !dbg !2884
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h7af38418f855a001E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b, ptr align 8 %c) unnamed_addr #0 !dbg !2886 {
start:
  %c.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca { ptr, ptr }, align 8
  %_8 = alloca { ptr, ptr }, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2893, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2894
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2890, metadata !DIExpression()), !dbg !2895
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2891, metadata !DIExpression()), !dbg !2896
  store ptr %c, ptr %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !2892, metadata !DIExpression()), !dbg !2897
  %_11 = load ptr, ptr %_1, align 8, !dbg !2898, !nonnull !24, !align !490, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2898
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2898
  store ptr %b, ptr %0, align 8, !dbg !2898
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2898
  %2 = load ptr, ptr %1, align 8, !dbg !2898, !nonnull !24, !align !490, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2898
  %4 = load ptr, ptr %3, align 8, !dbg !2898, !nonnull !24, !align !490, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h2adb57bf460d3f8cE"(ptr align 8 %_11, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2898
  %_12 = load ptr, ptr %_1, align 8, !dbg !2899, !nonnull !24, !align !490, !noundef !24
  store ptr %b, ptr %_8, align 8, !dbg !2899
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2899
  store ptr %c, ptr %5, align 8, !dbg !2899
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 0, !dbg !2899
  %7 = load ptr, ptr %6, align 8, !dbg !2899, !nonnull !24, !align !490, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2899
  %9 = load ptr, ptr %8, align 8, !dbg !2899, !nonnull !24, !align !490, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h2adb57bf460d3f8cE"(ptr align 8 %_12, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2899
  %_13 = load ptr, ptr %_1, align 8, !dbg !2900, !nonnull !24, !align !490, !noundef !24
  store ptr %a, ptr %_10, align 8, !dbg !2900
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2900
  store ptr %b, ptr %10, align 8, !dbg !2900
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2900
  %12 = load ptr, ptr %11, align 8, !dbg !2900, !nonnull !24, !align !490, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2900
  %14 = load ptr, ptr %13, align 8, !dbg !2900, !nonnull !24, !align !490, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h2adb57bf460d3f8cE"(ptr align 8 %_13, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2900
  ret void, !dbg !2901
}

; core::slice::sort::break_patterns
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort14break_patterns17hd96ac420a4838c41E(ptr align 8 %v.0, i64 %v.1) unnamed_addr #2 !dbg !2902 {
start:
  %i.dbg.spill = alloca i64, align 8
  %pos.dbg.spill = alloca i64, align 8
  %modulus.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %other = alloca i64, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %gen_usize = alloca ptr, align 8
  %seed = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2904, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.declare(metadata ptr %seed, metadata !2907, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.declare(metadata ptr %gen_usize, metadata !2909, metadata !DIExpression()), !dbg !2927
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2919, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.declare(metadata ptr %other, metadata !2923, metadata !DIExpression()), !dbg !2929
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2930
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2905, metadata !DIExpression()), !dbg !2931
  %_4 = icmp uge i64 %v.1, 8, !dbg !2932
  br i1 %_4, label %bb1, label %bb17, !dbg !2932

bb17:                                             ; preds = %bb6, %start
  ret void, !dbg !2933

bb1:                                              ; preds = %start
  store i64 %v.1, ptr %seed, align 8, !dbg !2934
  store ptr %seed, ptr %gen_usize, align 8, !dbg !2935
; call core::num::<impl usize>::next_power_of_two
  %modulus = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h83aa73e12cb434f0E"(i64 %v.1) #10, !dbg !2936
  store i64 %modulus, ptr %modulus.dbg.spill, align 8, !dbg !2936
  call void @llvm.dbg.declare(metadata ptr %modulus.dbg.spill, metadata !2915, metadata !DIExpression()), !dbg !2937
  %_10 = udiv i64 %v.1, 4, !dbg !2938
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2938
  %_12.0 = extractvalue { i64, i1 } %2, 0, !dbg !2938
  %_12.1 = extractvalue { i64, i1 } %2, 1, !dbg !2938
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2938
  br i1 %3, label %panic, label %bb4, !dbg !2938

bb4:                                              ; preds = %bb1
  store i64 %_12.0, ptr %pos.dbg.spill, align 8, !dbg !2938
  call void @llvm.dbg.declare(metadata ptr %pos.dbg.spill, metadata !2917, metadata !DIExpression()), !dbg !2939
  store i64 0, ptr %_14, align 8, !dbg !2940
  %4 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2940
  store i64 3, ptr %4, align 8, !dbg !2940
  %5 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !2940
  %6 = load i64, ptr %5, align 8, !dbg !2940, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2940
  %8 = load i64, ptr %7, align 8, !dbg !2940, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2035deb76a1d3e4fE"(i64 %6, i64 %8) #10, !dbg !2940
  %_13.0 = extractvalue { i64, i64 } %9, 0, !dbg !2940
  %_13.1 = extractvalue { i64, i64 } %9, 1, !dbg !2940
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2940
  store i64 %_13.0, ptr %10, align 8, !dbg !2940
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2940
  store i64 %_13.1, ptr %11, align 8, !dbg !2940
  br label %bb6, !dbg !2941

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_2745df5dada1022057bbf8b1e08b9408) #11, !dbg !2938
  unreachable, !dbg !2938

bb6:                                              ; preds = %bb16, %bb4
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %12 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3ed0813fa7c9be69E"(ptr align 8 %iter) #10, !dbg !2928
  store { i64, i64 } %12, ptr %_16, align 8, !dbg !2928
  %_18 = load i64, ptr %_16, align 8, !dbg !2928, !range !1165, !noundef !24
  %13 = icmp eq i64 %_18, 0, !dbg !2928
  br i1 %13, label %bb17, label %bb8, !dbg !2928

bb8:                                              ; preds = %bb6
  %14 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !2942
  %i = load i64, ptr %14, align 8, !dbg !2942, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2942
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2921, metadata !DIExpression()), !dbg !2943
; call core::slice::sort::break_patterns::{{closure}}
  %_21 = call i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h45338f39b36bc1d2E"(ptr align 8 %gen_usize) #10, !dbg !2944
  %_25.0 = sub i64 %modulus, 1, !dbg !2945
  %_25.1 = icmp ult i64 %modulus, 1, !dbg !2945
  %15 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false), !dbg !2945
  br i1 %15, label %panic1, label %bb11, !dbg !2945

bb9:                                              ; No predecessors!
  unreachable, !dbg !2928

bb11:                                             ; preds = %bb8
  %16 = and i64 %_21, %_25.0, !dbg !2944
  store i64 %16, ptr %other, align 8, !dbg !2944
  %_27 = load i64, ptr %other, align 8, !dbg !2946, !noundef !24
  %_26 = icmp uge i64 %_27, %v.1, !dbg !2946
  br i1 %_26, label %bb12, label %bb14, !dbg !2946

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c3165b226cb3c0c182e30d6993318b09) #11, !dbg !2945
  unreachable, !dbg !2945

bb14:                                             ; preds = %bb13, %bb11
  %_32.0 = sub i64 %_12.0, 1, !dbg !2947
  %_32.1 = icmp ult i64 %_12.0, 1, !dbg !2947
  %17 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !2947
  br i1 %17, label %panic3, label %bb15, !dbg !2947

bb12:                                             ; preds = %bb11
  %18 = load i64, ptr %other, align 8, !dbg !2948, !noundef !24
  %_28.0 = sub i64 %18, %v.1, !dbg !2948
  %_28.1 = icmp ult i64 %18, %v.1, !dbg !2948
  %19 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !2948
  br i1 %19, label %panic2, label %bb13, !dbg !2948

bb13:                                             ; preds = %bb12
  store i64 %_28.0, ptr %other, align 8, !dbg !2948
  br label %bb14, !dbg !2949

panic2:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c938216ce784d5d7b6bb0e8f59c85beb) #11, !dbg !2948
  unreachable, !dbg !2948

bb15:                                             ; preds = %bb14
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_32.0, i64 %i), !dbg !2947
  %_33.0 = extractvalue { i64, i1 } %20, 0, !dbg !2947
  %_33.1 = extractvalue { i64, i1 } %20, 1, !dbg !2947
  %21 = call i1 @llvm.expect.i1(i1 %_33.1, i1 false), !dbg !2947
  br i1 %21, label %panic4, label %bb16, !dbg !2947

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_55987e570b17d50f773e204af1733715) #11, !dbg !2947
  unreachable, !dbg !2947

bb16:                                             ; preds = %bb15
  %_34 = load i64, ptr %other, align 8, !dbg !2950, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hd756dd12c8c540cfE"(ptr align 8 %v.0, i64 %v.1, i64 %_33.0, i64 %_34, ptr align 8 @alloc_dd29033771d55fdf04aba4a1982901e8) #10, !dbg !2951
  br label %bb6, !dbg !2951

panic4:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_55987e570b17d50f773e204af1733715) #11, !dbg !2947
  unreachable, !dbg !2947
}

; core::slice::sort::break_patterns::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h45338f39b36bc1d2E"(ptr align 8 %_1) unnamed_addr #0 !dbg !2952 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  %r1 = alloca i64, align 8
  %r = alloca i32, align 4
  %0 = alloca i64, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2957, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2962
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2958, metadata !DIExpression()), !dbg !2963
  call void @llvm.dbg.declare(metadata ptr %r1, metadata !2960, metadata !DIExpression()), !dbg !2964
  br i1 false, label %bb1, label %bb5, !dbg !2965

bb5:                                              ; preds = %start
  %_36 = load ptr, ptr %_1, align 8, !dbg !2966, !nonnull !24, !align !490, !noundef !24
  %_19 = load i64, ptr %_36, align 8, !dbg !2966, !noundef !24
  store i64 %_19, ptr %r1, align 8, !dbg !2966
  %_21 = load i64, ptr %r1, align 8, !dbg !2967, !noundef !24
  %_20 = shl i64 %_21, 13, !dbg !2967
  %1 = load i64, ptr %r1, align 8, !dbg !2968, !noundef !24
  %2 = xor i64 %1, %_20, !dbg !2968
  store i64 %2, ptr %r1, align 8, !dbg !2968
  %_25 = load i64, ptr %r1, align 8, !dbg !2969, !noundef !24
  %_24 = lshr i64 %_25, 7, !dbg !2969
  %3 = load i64, ptr %r1, align 8, !dbg !2970, !noundef !24
  %4 = xor i64 %3, %_24, !dbg !2970
  store i64 %4, ptr %r1, align 8, !dbg !2970
  %_29 = load i64, ptr %r1, align 8, !dbg !2971, !noundef !24
  %_28 = shl i64 %_29, 17, !dbg !2971
  %5 = load i64, ptr %r1, align 8, !dbg !2972, !noundef !24
  %6 = xor i64 %5, %_28, !dbg !2972
  store i64 %6, ptr %r1, align 8, !dbg !2972
  %_32 = load i64, ptr %r1, align 8, !dbg !2973, !noundef !24
  %_37 = load ptr, ptr %_1, align 8, !dbg !2974, !nonnull !24, !align !490, !noundef !24
  store i64 %_32, ptr %_37, align 8, !dbg !2974
  %_38 = load ptr, ptr %_1, align 8, !dbg !2975, !nonnull !24, !align !490, !noundef !24
  %7 = load i64, ptr %_38, align 8, !dbg !2975, !noundef !24
  store i64 %7, ptr %0, align 8, !dbg !2975
  br label %bb9, !dbg !2976

bb1:                                              ; preds = %start
  %_33 = load ptr, ptr %_1, align 8, !dbg !2977, !nonnull !24, !align !490, !noundef !24
  %_4 = load i64, ptr %_33, align 8, !dbg !2977, !noundef !24
  %8 = trunc i64 %_4 to i32, !dbg !2977
  store i32 %8, ptr %r, align 4, !dbg !2977
  %_6 = load i32, ptr %r, align 4, !dbg !2978, !noundef !24
  %_5 = shl i32 %_6, 13, !dbg !2978
  %9 = load i32, ptr %r, align 4, !dbg !2979, !noundef !24
  %10 = xor i32 %9, %_5, !dbg !2979
  store i32 %10, ptr %r, align 4, !dbg !2979
  %_10 = load i32, ptr %r, align 4, !dbg !2980, !noundef !24
  %_9 = lshr i32 %_10, 17, !dbg !2980
  %11 = load i32, ptr %r, align 4, !dbg !2981, !noundef !24
  %12 = xor i32 %11, %_9, !dbg !2981
  store i32 %12, ptr %r, align 4, !dbg !2981
  %_14 = load i32, ptr %r, align 4, !dbg !2982, !noundef !24
  %_13 = shl i32 %_14, 5, !dbg !2982
  %13 = load i32, ptr %r, align 4, !dbg !2983, !noundef !24
  %14 = xor i32 %13, %_13, !dbg !2983
  store i32 %14, ptr %r, align 4, !dbg !2983
  %_17 = load i32, ptr %r, align 4, !dbg !2984, !noundef !24
  %_34 = load ptr, ptr %_1, align 8, !dbg !2985, !nonnull !24, !align !490, !noundef !24
  %15 = zext i32 %_17 to i64, !dbg !2985
  store i64 %15, ptr %_34, align 8, !dbg !2985
  %_35 = load ptr, ptr %_1, align 8, !dbg !2986, !nonnull !24, !align !490, !noundef !24
  %16 = load i64, ptr %_35, align 8, !dbg !2986, !noundef !24
  store i64 %16, ptr %0, align 8, !dbg !2986
  br label %bb9, !dbg !2976

bb9:                                              ; preds = %bb5, %bb1
  %17 = load i64, ptr %0, align 8, !dbg !2987, !noundef !24
  ret i64 %17, !dbg !2987
}

; core::slice::sort::partition_equal
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort15partition_equal17habf8a516bec176fdE(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2988 {
start:
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %self.dbg.spill.i16 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i14 = alloca i64, align 8
  %self.dbg.spill.i15 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_44 = alloca { ptr, ptr }, align 8
  %_39 = alloca i8, align 1
  %_33 = alloca { ptr, ptr }, align 8
  %_27 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_13 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_7 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2992, metadata !DIExpression()), !dbg !3012
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2993, metadata !DIExpression()), !dbg !3013
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2994, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3000, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !3002, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.declare(metadata ptr %l, metadata !3006, metadata !DIExpression()), !dbg !3017
  call void @llvm.dbg.declare(metadata ptr %r, metadata !3008, metadata !DIExpression()), !dbg !3018
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hd756dd12c8c540cfE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_f8322b69080b1e19bc4df073038a414d) #10, !dbg !3019
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hef9d0510e779d42aE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_7, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_23975e137ecce848c3167e283c742672) #10, !dbg !3020
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !3021
  %pivot.0 = load ptr, ptr %2, align 8, !dbg !3021, !nonnull !24, !align !490, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !3021
  %pivot.1 = load i64, ptr %3, align 8, !dbg !3021, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !3021
  store ptr %pivot.0, ptr %4, align 8, !dbg !3021
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !3021
  store i64 %pivot.1, ptr %5, align 8, !dbg !3021
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !2995, metadata !DIExpression()), !dbg !3022
  %6 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !3023
  %7 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 0, !dbg !3023
  %v.02 = load ptr, ptr %7, align 8, !dbg !3023, !nonnull !24, !align !490, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 1, !dbg !3023
  %v.13 = load i64, ptr %8, align 8, !dbg !3023, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !3023
  store ptr %v.02, ptr %9, align 8, !dbg !3023
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !3023
  store i64 %v.13, ptr %10, align 8, !dbg !3023
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !2997, metadata !DIExpression()), !dbg !3024
  %_11 = icmp ult i64 0, %pivot.1, !dbg !3025
  %11 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !3025
  br i1 %11, label %bb3, label %panic, !dbg !3025

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3026
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !3026
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !2998, metadata !DIExpression()), !dbg !3027
; call core::ptr::read
  call void @_ZN4core3ptr4read17h927c413b34ea08c4E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_13, ptr %pivot5) #10, !dbg !3028
  call void @llvm.dbg.declare(metadata ptr %_13, metadata !1107, metadata !DIExpression()), !dbg !3029
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_13, i64 24, i1 false), !dbg !3031
  store ptr %tmp, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !2626, metadata !DIExpression()), !dbg !3032
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !3034
  %12 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !3034
  store ptr %pivot5, ptr %12, align 8, !dbg !3034
  store ptr %tmp, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !2626, metadata !DIExpression()), !dbg !3035
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !3037
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !3004, metadata !DIExpression()), !dbg !3038
  store i64 0, ptr %l, align 8, !dbg !3039
  store i64 %v.13, ptr %r, align 8, !dbg !3040
  br label %bb8, !dbg !3041

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 0, i64 %pivot.1, ptr align 8 @alloc_3ea9d353dbaea466ca156be00652f893) #11, !dbg !3025
  unreachable, !dbg !3025

bb8:                                              ; preds = %bb33, %bb15, %bb3
  %_29 = load i64, ptr %l, align 8, !dbg !3042, !noundef !24
  %_30 = load i64, ptr %r, align 8, !dbg !3043, !noundef !24
  %_28 = icmp ult i64 %_29, %_30, !dbg !3042
  br i1 %_28, label %bb10, label %bb9, !dbg !3042

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_27, align 1, !dbg !3042
  br label %bb11, !dbg !3042

bb10:                                             ; preds = %bb8
  %_37 = load i64, ptr %l, align 8, !dbg !3044, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_35 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %v.02, i64 %v.13, i64 %_37) #10, !dbg !3045
  store ptr %tmp, ptr %_33, align 8, !dbg !3046
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !3046
  store ptr %_35, ptr %13, align 8, !dbg !3046
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 0, !dbg !3046
  %15 = load ptr, ptr %14, align 8, !dbg !3046, !nonnull !24, !align !490, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !3046
  %17 = load ptr, ptr %16, align 8, !dbg !3046, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_32 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %15, ptr align 8 %17) #10, !dbg !3046
  %_31 = xor i1 %_32, true, !dbg !3047
  %18 = zext i1 %_31 to i8, !dbg !3042
  store i8 %18, ptr %_27, align 1, !dbg !3042
  br label %bb11, !dbg !3042

bb11:                                             ; preds = %bb9, %bb10
  %19 = load i8, ptr %_27, align 1, !dbg !3042, !range !231, !noundef !24
  %20 = trunc i8 %19 to i1, !dbg !3042
  br i1 %20, label %bb14, label %bb16, !dbg !3042

bb16:                                             ; preds = %bb24, %bb11
  %_41 = load i64, ptr %l, align 8, !dbg !3048, !noundef !24
  %_42 = load i64, ptr %r, align 8, !dbg !3049, !noundef !24
  %_40 = icmp ult i64 %_41, %_42, !dbg !3048
  br i1 %_40, label %bb18, label %bb17, !dbg !3048

bb14:                                             ; preds = %bb11
  %21 = load i64, ptr %l, align 8, !dbg !3050, !noundef !24
  %22 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 1), !dbg !3050
  %_38.0 = extractvalue { i64, i1 } %22, 0, !dbg !3050
  %_38.1 = extractvalue { i64, i1 } %22, 1, !dbg !3050
  %23 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !3050
  br i1 %23, label %panic8, label %bb15, !dbg !3050

bb15:                                             ; preds = %bb14
  store i64 %_38.0, ptr %l, align 8, !dbg !3050
  br label %bb8, !dbg !3051

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_a23b538f7d9197acefade9a7784184c2) #11, !dbg !3050
  unreachable, !dbg !3050

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_39, align 1, !dbg !3048
  br label %bb19, !dbg !3048

bb18:                                             ; preds = %bb16
  %_49 = load i64, ptr %r, align 8, !dbg !3052, !noundef !24
  %_50.0 = sub i64 %_49, 1, !dbg !3052
  %_50.1 = icmp ult i64 %_49, 1, !dbg !3052
  %24 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false), !dbg !3052
  br i1 %24, label %panic9, label %bb20, !dbg !3052

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_46 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %v.02, i64 %v.13, i64 %_50.0) #10, !dbg !3053
  store ptr %tmp, ptr %_44, align 8, !dbg !3054
  %25 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !3054
  store ptr %_46, ptr %25, align 8, !dbg !3054
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 0, !dbg !3054
  %27 = load ptr, ptr %26, align 8, !dbg !3054, !nonnull !24, !align !490, !noundef !24
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !3054
  %29 = load ptr, ptr %28, align 8, !dbg !3054, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_43 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %27, ptr align 8 %29) #10, !dbg !3054
  %30 = zext i1 %_43 to i8, !dbg !3048
  store i8 %30, ptr %_39, align 1, !dbg !3048
  br label %bb19, !dbg !3048

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_3aa499bef66e3a89497706d0904ac653) #11, !dbg !3052
  unreachable, !dbg !3052

bb19:                                             ; preds = %bb17, %bb20
  %31 = load i8, ptr %_39, align 1, !dbg !3048, !range !231, !noundef !24
  %32 = trunc i8 %31 to i1, !dbg !3048
  br i1 %32, label %bb23, label %bb25, !dbg !3048

bb25:                                             ; preds = %bb19
  %_53 = load i64, ptr %l, align 8, !dbg !3055, !noundef !24
  %_54 = load i64, ptr %r, align 8, !dbg !3056, !noundef !24
  %_52 = icmp uge i64 %_53, %_54, !dbg !3055
  br i1 %_52, label %bb26, label %bb27, !dbg !3055

bb23:                                             ; preds = %bb19
  %33 = load i64, ptr %r, align 8, !dbg !3057, !noundef !24
  %_51.0 = sub i64 %33, 1, !dbg !3057
  %_51.1 = icmp ult i64 %33, 1, !dbg !3057
  %34 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false), !dbg !3057
  br i1 %34, label %panic10, label %bb24, !dbg !3057

bb24:                                             ; preds = %bb23
  store i64 %_51.0, ptr %r, align 8, !dbg !3057
  br label %bb16, !dbg !3058

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6b88286adc8b79b2ce0db9f94ea83bc3) #11, !dbg !3057
  unreachable, !dbg !3057

bb27:                                             ; preds = %bb25
  %35 = load i64, ptr %r, align 8, !dbg !3059, !noundef !24
  %_55.0 = sub i64 %35, 1, !dbg !3059
  %_55.1 = icmp ult i64 %35, 1, !dbg !3059
  %36 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !3059
  br i1 %36, label %panic12, label %bb28, !dbg !3059

bb26:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !3060, !noundef !24
  %37 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_65, i64 1), !dbg !3060
  %_66.0 = extractvalue { i64, i1 } %37, 0, !dbg !3060
  %_66.1 = extractvalue { i64, i1 } %37, 1, !dbg !3060
  %38 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !3060
  br i1 %38, label %panic11, label %bb34, !dbg !3060

bb34:                                             ; preds = %bb26
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h9eb74c98e442b3e6E"(ptr align 8 %_pivot_guard) #10, !dbg !3061
  ret i64 %_66.0, !dbg !3062

panic11:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_10d6a7449345760a13244dcd4f3e8edd) #11, !dbg !3060
  unreachable, !dbg !3060

bb28:                                             ; preds = %bb27
  store i64 %_55.0, ptr %r, align 8, !dbg !3059
  store ptr %v.02, ptr %self.dbg.spill.i16, align 8
  %39 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i16, i32 0, i32 1
  store i64 %v.13, ptr %39, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i16, metadata !2299, metadata !DIExpression()), !dbg !3063
  store ptr %v.02, ptr %ptr.dbg.spill, align 8, !dbg !3065
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !3010, metadata !DIExpression()), !dbg !3066
  %_60 = load i64, ptr %l, align 8, !dbg !3067, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i15, metadata !265, metadata !DIExpression()), !dbg !3068
  store i64 %_60, ptr %count.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i14, metadata !271, metadata !DIExpression()), !dbg !3070
  %40 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_60, !dbg !3071
  %_63 = load i64, ptr %r, align 8, !dbg !3072, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !265, metadata !DIExpression()), !dbg !3073
  store i64 %_63, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !271, metadata !DIExpression()), !dbg !3075
  %41 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_63, !dbg !3076
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h9fb425901b32d437E(ptr %40, ptr %41) #10, !dbg !3077
  %42 = load i64, ptr %l, align 8, !dbg !3078, !noundef !24
  %43 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %42, i64 1), !dbg !3078
  %_64.0 = extractvalue { i64, i1 } %43, 0, !dbg !3078
  %_64.1 = extractvalue { i64, i1 } %43, 1, !dbg !3078
  %44 = call i1 @llvm.expect.i1(i1 %_64.1, i1 false), !dbg !3078
  br i1 %44, label %panic13, label %bb33, !dbg !3078

panic12:                                          ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_894987bd31137d43dbfbf66922648de6) #11, !dbg !3059
  unreachable, !dbg !3059

bb33:                                             ; preds = %bb28
  store i64 %_64.0, ptr %l, align 8, !dbg !3078
  br label %bb8, !dbg !3041

panic13:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_bae318ebda80fadd5948c94c31acdbd2) #11, !dbg !3078
  unreachable, !dbg !3078
}

; core::slice::sort::partition_in_blocks
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks17h9169f7560d6148a6E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !3079 {
start:
  %small.dbg.spill.i140 = alloca i8, align 1
  %small.dbg.spill.i139 = alloca i8, align 1
  %small.dbg.spill.i138 = alloca i8, align 1
  %small.dbg.spill.i137 = alloca i8, align 1
  %small.dbg.spill.i136 = alloca i8, align 1
  %small.dbg.spill.i135 = alloca i8, align 1
  %small.dbg.spill.i134 = alloca i8, align 1
  %small.dbg.spill.i133 = alloca i8, align 1
  %small.dbg.spill.i132 = alloca i8, align 1
  %small.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i131 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i130 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i129 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i128 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i127 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i126 = alloca { ptr, i64 }, align 8
  %addr.dbg.spill.i.i125 = alloca i64, align 8
  %addr.dbg.spill.i.i124 = alloca i64, align 8
  %addr.dbg.spill.i.i123 = alloca i64, align 8
  %addr.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i121 = alloca i64, align 8
  %self.dbg.spill.i122 = alloca ptr, align 8
  %count.dbg.spill.i119 = alloca i64, align 8
  %self.dbg.spill.i120 = alloca ptr, align 8
  %count.dbg.spill.i117 = alloca i64, align 8
  %self.dbg.spill.i118 = alloca ptr, align 8
  %count.dbg.spill.i115 = alloca i64, align 8
  %self.dbg.spill.i116 = alloca ptr, align 8
  %count.dbg.spill.i113 = alloca i64, align 8
  %self.dbg.spill.i114 = alloca ptr, align 8
  %count.dbg.spill.i111 = alloca i64, align 8
  %self.dbg.spill.i112 = alloca ptr, align 8
  %count.dbg.spill.i109 = alloca i64, align 8
  %self.dbg.spill.i110 = alloca ptr, align 8
  %count.dbg.spill.i107 = alloca i64, align 8
  %self.dbg.spill.i108 = alloca ptr, align 8
  %count.dbg.spill.i105 = alloca i64, align 8
  %self.dbg.spill.i106 = alloca ptr, align 8
  %count.dbg.spill.i103 = alloca i64, align 8
  %self.dbg.spill.i104 = alloca ptr, align 8
  %count.dbg.spill.i101 = alloca i64, align 8
  %self.dbg.spill.i102 = alloca ptr, align 8
  %rhs.dbg.spill.i.i96 = alloca i64, align 8
  %self.dbg.spill.i1.i97 = alloca i64, align 8
  %self.dbg.spill.i.i98 = alloca i64, align 8
  %count.dbg.spill.i99 = alloca i64, align 8
  %self.dbg.spill.i100 = alloca ptr, align 8
  %rhs.dbg.spill.i.i91 = alloca i64, align 8
  %self.dbg.spill.i1.i92 = alloca i64, align 8
  %self.dbg.spill.i.i93 = alloca i64, align 8
  %count.dbg.spill.i94 = alloca i64, align 8
  %self.dbg.spill.i95 = alloca ptr, align 8
  %rhs.dbg.spill.i.i86 = alloca i64, align 8
  %self.dbg.spill.i1.i87 = alloca i64, align 8
  %self.dbg.spill.i.i88 = alloca i64, align 8
  %count.dbg.spill.i89 = alloca i64, align 8
  %self.dbg.spill.i90 = alloca ptr, align 8
  %rhs.dbg.spill.i.i81 = alloca i64, align 8
  %self.dbg.spill.i1.i82 = alloca i64, align 8
  %self.dbg.spill.i.i83 = alloca i64, align 8
  %count.dbg.spill.i84 = alloca i64, align 8
  %self.dbg.spill.i85 = alloca ptr, align 8
  %rhs.dbg.spill.i.i76 = alloca i64, align 8
  %self.dbg.spill.i1.i77 = alloca i64, align 8
  %self.dbg.spill.i.i78 = alloca i64, align 8
  %count.dbg.spill.i79 = alloca i64, align 8
  %self.dbg.spill.i80 = alloca ptr, align 8
  %rhs.dbg.spill.i.i71 = alloca i64, align 8
  %self.dbg.spill.i1.i72 = alloca i64, align 8
  %self.dbg.spill.i.i73 = alloca i64, align 8
  %count.dbg.spill.i74 = alloca i64, align 8
  %self.dbg.spill.i75 = alloca ptr, align 8
  %rhs.dbg.spill.i.i66 = alloca i64, align 8
  %self.dbg.spill.i1.i67 = alloca i64, align 8
  %self.dbg.spill.i.i68 = alloca i64, align 8
  %count.dbg.spill.i69 = alloca i64, align 8
  %self.dbg.spill.i70 = alloca ptr, align 8
  %rhs.dbg.spill.i.i61 = alloca i64, align 8
  %self.dbg.spill.i1.i62 = alloca i64, align 8
  %self.dbg.spill.i.i63 = alloca i64, align 8
  %count.dbg.spill.i64 = alloca i64, align 8
  %self.dbg.spill.i65 = alloca ptr, align 8
  %rhs.dbg.spill.i.i56 = alloca i64, align 8
  %self.dbg.spill.i1.i57 = alloca i64, align 8
  %self.dbg.spill.i.i58 = alloca i64, align 8
  %count.dbg.spill.i59 = alloca i64, align 8
  %self.dbg.spill.i60 = alloca ptr, align 8
  %rhs.dbg.spill.i.i51 = alloca i64, align 8
  %self.dbg.spill.i1.i52 = alloca i64, align 8
  %self.dbg.spill.i.i53 = alloca i64, align 8
  %count.dbg.spill.i54 = alloca i64, align 8
  %self.dbg.spill.i55 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i49 = alloca i64, align 8
  %self.dbg.spill.i50 = alloca ptr, align 8
  %count.dbg.spill.i47 = alloca i64, align 8
  %self.dbg.spill.i48 = alloca ptr, align 8
  %count.dbg.spill.i45 = alloca i64, align 8
  %self.dbg.spill.i46 = alloca ptr, align 8
  %count.dbg.spill.i43 = alloca i64, align 8
  %self.dbg.spill.i44 = alloca ptr, align 8
  %count.dbg.spill.i41 = alloca i64, align 8
  %self.dbg.spill.i42 = alloca ptr, align 8
  %count.dbg.spill.i39 = alloca i64, align 8
  %self.dbg.spill.i40 = alloca ptr, align 8
  %count.dbg.spill.i37 = alloca i64, align 8
  %self.dbg.spill.i38 = alloca ptr, align 8
  %count.dbg.spill.i35 = alloca i64, align 8
  %self.dbg.spill.i36 = alloca ptr, align 8
  %count.dbg.spill.i33 = alloca i64, align 8
  %self.dbg.spill.i34 = alloca ptr, align 8
  %count.dbg.spill.i31 = alloca i64, align 8
  %self.dbg.spill.i32 = alloca ptr, align 8
  %count.dbg.spill.i29 = alloca i64, align 8
  %self.dbg.spill.i30 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca ptr, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca ptr, align 8
  %count.dbg.spill.i21 = alloca i64, align 8
  %self.dbg.spill.i22 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i8, align 1
  %1 = alloca i8, align 1
  %this.dbg.spill.i19 = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { ptr, i64 }, align 8
  %right_val.dbg.spill17 = alloca ptr, align 8
  %left_val.dbg.spill15 = alloca ptr, align 8
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %i.dbg.spill9 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %is_done.dbg.spill = alloca i8, align 1
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_259 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind4 = alloca i8, align 1
  %_247 = alloca i64, align 8
  %_245 = alloca { ptr, ptr }, align 8
  %_224 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind = alloca i8, align 1
  %_212 = alloca i64, align 8
  %_210 = alloca { ptr, ptr }, align 8
  %_189 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_148 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_145 = alloca { i64, i64 }, align 8
  %tmp = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_115 = alloca { ptr, ptr }, align 8
  %_105 = alloca { i64, i64 }, align 8
  %iter2 = alloca { i64, i64 }, align 8
  %_102 = alloca { i64, i64 }, align 8
  %elem1 = alloca ptr, align 8
  %_89 = alloca { ptr, ptr }, align 8
  %_80 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_77 = alloca { i64, i64 }, align 8
  %elem = alloca ptr, align 8
  %_51 = alloca i8, align 1
  %_28 = alloca i8, align 1
  %rem = alloca i64, align 8
  %offsets_r = alloca [128 x i8], align 1
  %end_r = alloca ptr, align 8
  %start_r = alloca ptr, align 8
  %block_r = alloca i64, align 8
  %r = alloca ptr, align 8
  %offsets_l = alloca [128 x i8], align 1
  %end_l = alloca ptr, align 8
  %start_l = alloca ptr, align 8
  %block_l = alloca i64, align 8
  %l = alloca ptr, align 8
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3083, metadata !DIExpression()), !dbg !3147
  store ptr %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3084, metadata !DIExpression()), !dbg !3148
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3085, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.declare(metadata ptr %l, metadata !3086, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.declare(metadata ptr %block_l, metadata !3088, metadata !DIExpression()), !dbg !3151
  call void @llvm.dbg.declare(metadata ptr %start_l, metadata !3090, metadata !DIExpression()), !dbg !3152
  call void @llvm.dbg.declare(metadata ptr %end_l, metadata !3092, metadata !DIExpression()), !dbg !3153
  call void @llvm.dbg.declare(metadata ptr %offsets_l, metadata !3094, metadata !DIExpression()), !dbg !3154
  call void @llvm.dbg.declare(metadata ptr %r, metadata !3099, metadata !DIExpression()), !dbg !3155
  call void @llvm.dbg.declare(metadata ptr %block_r, metadata !3101, metadata !DIExpression()), !dbg !3156
  call void @llvm.dbg.declare(metadata ptr %start_r, metadata !3103, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.declare(metadata ptr %end_r, metadata !3105, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata ptr %offsets_r, metadata !3107, metadata !DIExpression()), !dbg !3159
  call void @llvm.dbg.declare(metadata ptr %rem, metadata !3111, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.declare(metadata ptr %elem, metadata !3113, metadata !DIExpression()), !dbg !3161
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3115, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.declare(metadata ptr %elem1, metadata !3119, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.declare(metadata ptr %iter2, metadata !3121, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3127, metadata !DIExpression()), !dbg !3165
  call void @llvm.dbg.declare(metadata ptr %iter3, metadata !3129, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.declare(metadata ptr %kind, metadata !3137, metadata !DIExpression()), !dbg !3167
  call void @llvm.dbg.declare(metadata ptr %kind4, metadata !3144, metadata !DIExpression()), !dbg !3168
  store ptr %v.0, ptr %self.dbg.spill.i131, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i131, i32 0, i32 1
  store i64 %v.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i131, metadata !2299, metadata !DIExpression()), !dbg !3169
  store ptr %v.0, ptr %l, align 8, !dbg !3171
  store i64 128, ptr %block_l, align 8, !dbg !3172
  store i64 0, ptr %addr.dbg.spill.i.i125, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i125, metadata !3173, metadata !DIExpression()), !dbg !3178
; call core::ptr::metadata::from_raw_parts_mut
  %6 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h2c91ee76589b7207E(ptr null) #10, !dbg !3184
  store ptr %6, ptr %start_l, align 8, !dbg !3185
  store i64 0, ptr %addr.dbg.spill.i.i124, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i124, metadata !3173, metadata !DIExpression()), !dbg !3186
; call core::ptr::metadata::from_raw_parts_mut
  %7 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h2c91ee76589b7207E(ptr null) #10, !dbg !3189
  store ptr %7, ptr %end_l, align 8, !dbg !3190
  %8 = load i8, ptr %0, align 1, !dbg !3191
  %9 = getelementptr inbounds [128 x i8], ptr %offsets_l, i64 0, i64 0, !dbg !3197
  call void @llvm.memset.p0.i64(ptr align 1 %9, i8 %8, i64 128, i1 false), !dbg !3197
  %_11 = load ptr, ptr %l, align 8, !dbg !3198, !noundef !24
  store ptr %_11, ptr %self.dbg.spill.i48, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i48, metadata !265, metadata !DIExpression()), !dbg !3199
  store i64 %v.1, ptr %count.dbg.spill.i47, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i47, metadata !271, metadata !DIExpression()), !dbg !3201
  %10 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %v.1, !dbg !3202
  store ptr %10, ptr %r, align 8, !dbg !3198
  store i64 128, ptr %block_r, align 8, !dbg !3203
  store i64 0, ptr %addr.dbg.spill.i.i123, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i123, metadata !3173, metadata !DIExpression()), !dbg !3204
; call core::ptr::metadata::from_raw_parts_mut
  %11 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h2c91ee76589b7207E(ptr null) #10, !dbg !3207
  store ptr %11, ptr %start_r, align 8, !dbg !3208
  store i64 0, ptr %addr.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i, metadata !3173, metadata !DIExpression()), !dbg !3209
; call core::ptr::metadata::from_raw_parts_mut
  %12 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h2c91ee76589b7207E(ptr null) #10, !dbg !3212
  store ptr %12, ptr %end_r, align 8, !dbg !3213
  %13 = load i8, ptr %1, align 1, !dbg !3214
  %14 = getelementptr inbounds [128 x i8], ptr %offsets_r, i64 0, i64 0, !dbg !3216
  call void @llvm.memset.p0.i64(ptr align 1 %14, i8 %13, i64 128, i1 false), !dbg !3216
  br label %bb9, !dbg !3217

bb9:                                              ; preds = %bb103, %start
  %_21 = load ptr, ptr %l, align 8, !dbg !3218, !noundef !24
  %_22 = load ptr, ptr %r, align 8, !dbg !3219, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_20 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE(ptr %_21, ptr %_22) #10, !dbg !3220
  %15 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 128), !dbg !3221
  %_24.0 = extractvalue { i64, i1 } %15, 0, !dbg !3221
  %_24.1 = extractvalue { i64, i1 } %15, 1, !dbg !3221
  %16 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !3221
  br i1 %16, label %panic, label %bb11, !dbg !3221

bb11:                                             ; preds = %bb9
  %is_done = icmp ule i64 %_20, %_24.0, !dbg !3220
  %17 = zext i1 %is_done to i8, !dbg !3220
  store i8 %17, ptr %is_done.dbg.spill, align 1, !dbg !3220
  call void @llvm.dbg.declare(metadata ptr %is_done.dbg.spill, metadata !3109, metadata !DIExpression()), !dbg !3222
  br i1 %is_done, label %bb12, label %bb37, !dbg !3223

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_fe4e881dfa6c70f91499a9b97cada070) #11, !dbg !3221
  unreachable, !dbg !3221

bb37:                                             ; preds = %bb35, %bb32, %bb11
  %_69 = load ptr, ptr %start_l, align 8, !dbg !3224, !noundef !24
  %_70 = load ptr, ptr %end_l, align 8, !dbg !3225, !noundef !24
  %_68 = icmp eq ptr %_69, %_70, !dbg !3224
  br i1 %_68, label %bb38, label %bb48, !dbg !3224

bb12:                                             ; preds = %bb11
  %_26 = load ptr, ptr %l, align 8, !dbg !3226, !noundef !24
  %_27 = load ptr, ptr %r, align 8, !dbg !3227, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %18 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE(ptr %_26, ptr %_27) #10, !dbg !3228
  store i64 %18, ptr %rem, align 8, !dbg !3228
  %_30 = load ptr, ptr %start_l, align 8, !dbg !3229, !noundef !24
  %_31 = load ptr, ptr %end_l, align 8, !dbg !3230, !noundef !24
  %_29 = icmp ult ptr %_30, %_31, !dbg !3229
  br i1 %_29, label %bb14, label %bb15, !dbg !3229

bb15:                                             ; preds = %bb12
  %_33 = load ptr, ptr %start_r, align 8, !dbg !3231, !noundef !24
  %_34 = load ptr, ptr %end_r, align 8, !dbg !3232, !noundef !24
  %_32 = icmp ult ptr %_33, %_34, !dbg !3231
  %19 = zext i1 %_32 to i8, !dbg !3229
  store i8 %19, ptr %_28, align 1, !dbg !3229
  br label %bb16, !dbg !3229

bb14:                                             ; preds = %bb12
  store i8 1, ptr %_28, align 1, !dbg !3229
  br label %bb16, !dbg !3229

bb16:                                             ; preds = %bb15, %bb14
  %20 = load i8, ptr %_28, align 1, !dbg !3229, !range !231, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3229
  br i1 %21, label %bb17, label %bb19, !dbg !3229

bb19:                                             ; preds = %bb18, %bb16
  %_37 = load ptr, ptr %start_l, align 8, !dbg !3233, !noundef !24
  %_38 = load ptr, ptr %end_l, align 8, !dbg !3234, !noundef !24
  %_36 = icmp ult ptr %_37, %_38, !dbg !3233
  br i1 %_36, label %bb20, label %bb21, !dbg !3233

bb17:                                             ; preds = %bb16
  %22 = load i64, ptr %rem, align 8, !dbg !3235, !noundef !24
  %_35.0 = sub i64 %22, 128, !dbg !3235
  %_35.1 = icmp ult i64 %22, 128, !dbg !3235
  %23 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !3235
  br i1 %23, label %panic5, label %bb18, !dbg !3235

bb18:                                             ; preds = %bb17
  store i64 %_35.0, ptr %rem, align 8, !dbg !3235
  br label %bb19, !dbg !3236

panic5:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2417cbaa5b767dc07fcb426311fbedcd) #11, !dbg !3235
  unreachable, !dbg !3235

bb21:                                             ; preds = %bb19
  %_41 = load ptr, ptr %start_r, align 8, !dbg !3237, !noundef !24
  %_42 = load ptr, ptr %end_r, align 8, !dbg !3238, !noundef !24
  %_40 = icmp ult ptr %_41, %_42, !dbg !3237
  br i1 %_40, label %bb22, label %bb23, !dbg !3237

bb20:                                             ; preds = %bb19
  %_39 = load i64, ptr %rem, align 8, !dbg !3239, !noundef !24
  store i64 %_39, ptr %block_r, align 8, !dbg !3240
  br label %bb26, !dbg !3241

bb26:                                             ; preds = %bb25, %bb22, %bb20
  br i1 true, label %bb27, label %bb32, !dbg !3242

bb23:                                             ; preds = %bb21
  %_44 = load i64, ptr %rem, align 8, !dbg !3243, !noundef !24
  %24 = udiv i64 %_44, 2, !dbg !3244
  store i64 %24, ptr %block_l, align 8, !dbg !3244
  %_46 = load i64, ptr %rem, align 8, !dbg !3245, !noundef !24
  %_47 = load i64, ptr %block_l, align 8, !dbg !3246, !noundef !24
  %_48.0 = sub i64 %_46, %_47, !dbg !3245
  %_48.1 = icmp ult i64 %_46, %_47, !dbg !3245
  %25 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false), !dbg !3245
  br i1 %25, label %panic6, label %bb25, !dbg !3245

bb22:                                             ; preds = %bb21
  %_43 = load i64, ptr %rem, align 8, !dbg !3247, !noundef !24
  store i64 %_43, ptr %block_l, align 8, !dbg !3248
  br label %bb26, !dbg !3249

bb25:                                             ; preds = %bb23
  store i64 %_48.0, ptr %block_r, align 8, !dbg !3250
  br label %bb26, !dbg !3249

panic6:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_7d4914bfaafcfa4692cc10dc5496d4e2) #11, !dbg !3245
  unreachable, !dbg !3245

bb32:                                             ; preds = %bb30, %bb26
  br i1 true, label %bb33, label %bb37, !dbg !3251

bb27:                                             ; preds = %bb26
  %_53 = load i64, ptr %block_l, align 8, !dbg !3252, !noundef !24
  %_52 = icmp ule i64 %_53, 128, !dbg !3252
  br i1 %_52, label %bb29, label %bb28, !dbg !3252

bb28:                                             ; preds = %bb27
  store i8 0, ptr %_51, align 1, !dbg !3252
  br label %bb30, !dbg !3252

bb29:                                             ; preds = %bb27
  %_55 = load i64, ptr %block_r, align 8, !dbg !3253, !noundef !24
  %_54 = icmp ule i64 %_55, 128, !dbg !3253
  %26 = zext i1 %_54 to i8, !dbg !3252
  store i8 %26, ptr %_51, align 1, !dbg !3252
  br label %bb30, !dbg !3252

bb30:                                             ; preds = %bb28, %bb29
  %27 = load i8, ptr %_51, align 1, !dbg !3242, !range !231, !noundef !24
  %28 = trunc i8 %27 to i1, !dbg !3242
  %_50 = xor i1 %28, true, !dbg !3242
  br i1 %_50, label %bb31, label %bb32, !dbg !3242

bb31:                                             ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_8221bdf38a3766feb9723f333c95dc9e, i64 54, ptr align 8 @alloc_d98b9ce84085f5d91faa526ef2b40520) #11, !dbg !3242
  unreachable, !dbg !3242

bb33:                                             ; preds = %bb32
  %_61 = load ptr, ptr %l, align 8, !dbg !3254, !noundef !24
  %_62 = load ptr, ptr %r, align 8, !dbg !3255, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_60 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE(ptr %_61, ptr %_62) #10, !dbg !3256
  %_64 = load i64, ptr %block_l, align 8, !dbg !3257, !noundef !24
  %_65 = load i64, ptr %block_r, align 8, !dbg !3258, !noundef !24
  %29 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_64, i64 %_65), !dbg !3257
  %_66.0 = extractvalue { i64, i1 } %29, 0, !dbg !3257
  %_66.1 = extractvalue { i64, i1 } %29, 1, !dbg !3257
  %30 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !3257
  br i1 %30, label %panic7, label %bb35, !dbg !3257

bb35:                                             ; preds = %bb33
  %_59 = icmp eq i64 %_60, %_66.0, !dbg !3256
  %_58 = xor i1 %_59, true, !dbg !3251
  br i1 %_58, label %bb36, label %bb37, !dbg !3251

panic7:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_5d32d2daaec9cf0d402f2dc37af0ea6f) #11, !dbg !3257
  unreachable, !dbg !3257

bb36:                                             ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_a3f9d5911d83d2dfd6ee66814bbe6049, i64 50, ptr align 8 @alloc_ea197cb372011b0fee90d7558b246bfb) #11, !dbg !3251
  unreachable, !dbg !3251

bb48:                                             ; preds = %bb41, %bb37
  %_94 = load ptr, ptr %start_r, align 8, !dbg !3259, !noundef !24
  %_95 = load ptr, ptr %end_r, align 8, !dbg !3260, !noundef !24
  %_93 = icmp eq ptr %_94, %_95, !dbg !3259
  br i1 %_93, label %bb49, label %bb58, !dbg !3259

bb38:                                             ; preds = %bb37
  store ptr %offsets_l, ptr %this.dbg.spill.i19, align 8
  %31 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i19, i32 0, i32 1
  store i64 128, ptr %31, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i19, metadata !3261, metadata !DIExpression()), !dbg !3272
  store ptr %offsets_l, ptr %self.dbg.spill.i126, align 8
  %32 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i126, i32 0, i32 1
  store i64 128, ptr %32, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i126, metadata !3274, metadata !DIExpression()), !dbg !3279
  store ptr %offsets_l, ptr %start_l, align 8, !dbg !3281
  %_74 = load ptr, ptr %start_l, align 8, !dbg !3282, !noundef !24
  store ptr %_74, ptr %end_l, align 8, !dbg !3283
  %33 = load ptr, ptr %l, align 8, !dbg !3284, !noundef !24
  store ptr %33, ptr %elem, align 8, !dbg !3284
  %_78 = load i64, ptr %block_l, align 8, !dbg !3285, !noundef !24
  store i64 0, ptr %_77, align 8, !dbg !3286
  %34 = getelementptr inbounds { i64, i64 }, ptr %_77, i32 0, i32 1, !dbg !3286
  store i64 %_78, ptr %34, align 8, !dbg !3286
  %35 = getelementptr inbounds { i64, i64 }, ptr %_77, i32 0, i32 0, !dbg !3286
  %36 = load i64, ptr %35, align 8, !dbg !3286, !noundef !24
  %37 = getelementptr inbounds { i64, i64 }, ptr %_77, i32 0, i32 1, !dbg !3286
  %38 = load i64, ptr %37, align 8, !dbg !3286, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %39 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2035deb76a1d3e4fE"(i64 %36, i64 %38) #10, !dbg !3286
  %_76.0 = extractvalue { i64, i64 } %39, 0, !dbg !3286
  %_76.1 = extractvalue { i64, i64 } %39, 1, !dbg !3286
  %40 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3286
  store i64 %_76.0, ptr %40, align 8, !dbg !3286
  %41 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3286
  store i64 %_76.1, ptr %41, align 8, !dbg !3286
  br label %bb41, !dbg !3287

bb41:                                             ; preds = %bb43, %bb38
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %42 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3ed0813fa7c9be69E"(ptr align 8 %iter) #10, !dbg !3162
  store { i64, i64 } %42, ptr %_80, align 8, !dbg !3162
  %_82 = load i64, ptr %_80, align 8, !dbg !3162, !range !1165, !noundef !24
  %43 = icmp eq i64 %_82, 0, !dbg !3162
  br i1 %43, label %bb48, label %bb43, !dbg !3162

bb43:                                             ; preds = %bb41
  %44 = getelementptr inbounds { i64, i64 }, ptr %_80, i32 0, i32 1, !dbg !3288
  %i = load i64, ptr %44, align 8, !dbg !3288, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3288
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3117, metadata !DIExpression()), !dbg !3289
  %45 = load ptr, ptr %end_l, align 8, !dbg !3290, !noundef !24
  %46 = trunc i64 %i to i8, !dbg !3290
  store i8 %46, ptr %45, align 1, !dbg !3290
  %_85 = load ptr, ptr %end_l, align 8, !dbg !3291, !noundef !24
  %_90 = load ptr, ptr %elem, align 8, !dbg !3292, !noundef !24
  store ptr %_90, ptr %_89, align 8, !dbg !3293
  %47 = getelementptr inbounds { ptr, ptr }, ptr %_89, i32 0, i32 1, !dbg !3293
  store ptr %pivot, ptr %47, align 8, !dbg !3293
  %48 = getelementptr inbounds { ptr, ptr }, ptr %_89, i32 0, i32 0, !dbg !3293
  %49 = load ptr, ptr %48, align 8, !dbg !3293, !nonnull !24, !align !490, !noundef !24
  %50 = getelementptr inbounds { ptr, ptr }, ptr %_89, i32 0, i32 1, !dbg !3293
  %51 = load ptr, ptr %50, align 8, !dbg !3293, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_88 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %49, ptr align 8 %51) #10, !dbg !3293
  %_87 = xor i1 %_88, true, !dbg !3294
  %_86 = zext i1 %_87 to i64, !dbg !3294
  store ptr %_85, ptr %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i30, metadata !3295, metadata !DIExpression()), !dbg !3301
  store i64 %_86, ptr %count.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i29, metadata !3300, metadata !DIExpression()), !dbg !3303
  %52 = getelementptr inbounds i8, ptr %_85, i64 %_86, !dbg !3304
  store ptr %52, ptr %end_l, align 8, !dbg !3305
  %_92 = load ptr, ptr %elem, align 8, !dbg !3306, !noundef !24
  store ptr %_92, ptr %self.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i46, metadata !265, metadata !DIExpression()), !dbg !3307
  store i64 1, ptr %count.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i45, metadata !271, metadata !DIExpression()), !dbg !3309
  %53 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_92, i64 1, !dbg !3310
  store ptr %53, ptr %elem, align 8, !dbg !3311
  br label %bb41, !dbg !3287

bb58:                                             ; preds = %bb52, %bb48
  %_119 = load ptr, ptr %start_l, align 8, !dbg !3312, !noundef !24
  %_120 = load ptr, ptr %end_l, align 8, !dbg !3313, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_118 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h8ad578e50d808492E(ptr %_119, ptr %_120) #10, !dbg !3314
  %_122 = load ptr, ptr %start_r, align 8, !dbg !3315, !noundef !24
  %_123 = load ptr, ptr %end_r, align 8, !dbg !3316, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_121 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h8ad578e50d808492E(ptr %_122, ptr %_123) #10, !dbg !3317
; call core::cmp::min
  %count = call i64 @_ZN4core3cmp3min17h49e6e73f5f098d4cE(i64 %_118, i64 %_121) #10, !dbg !3318
  store i64 %count, ptr %count.dbg.spill, align 8, !dbg !3318
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !3125, metadata !DIExpression()), !dbg !3319
  %_124 = icmp ugt i64 %count, 0, !dbg !3320
  br i1 %_124, label %bb62, label %bb97, !dbg !3320

bb49:                                             ; preds = %bb48
  store ptr %offsets_r, ptr %this.dbg.spill.i, align 8
  %54 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 128, ptr %54, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !3261, metadata !DIExpression()), !dbg !3321
  store ptr %offsets_r, ptr %self.dbg.spill.i127, align 8
  %55 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i127, i32 0, i32 1
  store i64 128, ptr %55, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i127, metadata !3274, metadata !DIExpression()), !dbg !3323
  store ptr %offsets_r, ptr %start_r, align 8, !dbg !3325
  %_99 = load ptr, ptr %start_r, align 8, !dbg !3326, !noundef !24
  store ptr %_99, ptr %end_r, align 8, !dbg !3327
  %56 = load ptr, ptr %r, align 8, !dbg !3328, !noundef !24
  store ptr %56, ptr %elem1, align 8, !dbg !3328
  %_103 = load i64, ptr %block_r, align 8, !dbg !3329, !noundef !24
  store i64 0, ptr %_102, align 8, !dbg !3330
  %57 = getelementptr inbounds { i64, i64 }, ptr %_102, i32 0, i32 1, !dbg !3330
  store i64 %_103, ptr %57, align 8, !dbg !3330
  %58 = getelementptr inbounds { i64, i64 }, ptr %_102, i32 0, i32 0, !dbg !3330
  %59 = load i64, ptr %58, align 8, !dbg !3330, !noundef !24
  %60 = getelementptr inbounds { i64, i64 }, ptr %_102, i32 0, i32 1, !dbg !3330
  %61 = load i64, ptr %60, align 8, !dbg !3330, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %62 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2035deb76a1d3e4fE"(i64 %59, i64 %61) #10, !dbg !3330
  %_101.0 = extractvalue { i64, i64 } %62, 0, !dbg !3330
  %_101.1 = extractvalue { i64, i64 } %62, 1, !dbg !3330
  %63 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 0, !dbg !3330
  store i64 %_101.0, ptr %63, align 8, !dbg !3330
  %64 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 1, !dbg !3330
  store i64 %_101.1, ptr %64, align 8, !dbg !3330
  br label %bb52, !dbg !3331

bb52:                                             ; preds = %bb54, %bb49
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %65 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3ed0813fa7c9be69E"(ptr align 8 %iter2) #10, !dbg !3164
  store { i64, i64 } %65, ptr %_105, align 8, !dbg !3164
  %_107 = load i64, ptr %_105, align 8, !dbg !3164, !range !1165, !noundef !24
  %66 = icmp eq i64 %_107, 0, !dbg !3164
  br i1 %66, label %bb58, label %bb54, !dbg !3164

bb54:                                             ; preds = %bb52
  %67 = getelementptr inbounds { i64, i64 }, ptr %_105, i32 0, i32 1, !dbg !3332
  %i8 = load i64, ptr %67, align 8, !dbg !3332, !noundef !24
  store i64 %i8, ptr %i.dbg.spill9, align 8, !dbg !3332
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill9, metadata !3123, metadata !DIExpression()), !dbg !3333
  %_110 = load ptr, ptr %elem1, align 8, !dbg !3334, !noundef !24
  store ptr %_110, ptr %self.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i100, metadata !2435, metadata !DIExpression()), !dbg !3335
  store i64 1, ptr %count.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i99, metadata !2438, metadata !DIExpression()), !dbg !3337
  store i64 1, ptr %self.dbg.spill.i.i98, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i98, metadata !2442, metadata !DIExpression()), !dbg !3338
  store i64 0, ptr %self.dbg.spill.i1.i97, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i97, metadata !2452, metadata !DIExpression()), !dbg !3340
  store i64 1, ptr %rhs.dbg.spill.i.i96, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i96, metadata !2457, metadata !DIExpression()), !dbg !3342
  store ptr %_110, ptr %self.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i102, metadata !2462, metadata !DIExpression()), !dbg !3343
  store i64 -1, ptr %count.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i101, metadata !2467, metadata !DIExpression()), !dbg !3345
  %68 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_110, i64 -1, !dbg !3346
  store ptr %68, ptr %elem1, align 8, !dbg !3347
  %69 = load ptr, ptr %end_r, align 8, !dbg !3348, !noundef !24
  %70 = trunc i64 %i8 to i8, !dbg !3348
  store i8 %70, ptr %69, align 1, !dbg !3348
  %_112 = load ptr, ptr %end_r, align 8, !dbg !3349, !noundef !24
  %_116 = load ptr, ptr %elem1, align 8, !dbg !3350, !noundef !24
  store ptr %_116, ptr %_115, align 8, !dbg !3351
  %71 = getelementptr inbounds { ptr, ptr }, ptr %_115, i32 0, i32 1, !dbg !3351
  store ptr %pivot, ptr %71, align 8, !dbg !3351
  %72 = getelementptr inbounds { ptr, ptr }, ptr %_115, i32 0, i32 0, !dbg !3351
  %73 = load ptr, ptr %72, align 8, !dbg !3351, !nonnull !24, !align !490, !noundef !24
  %74 = getelementptr inbounds { ptr, ptr }, ptr %_115, i32 0, i32 1, !dbg !3351
  %75 = load ptr, ptr %74, align 8, !dbg !3351, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_114 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %73, ptr align 8 %75) #10, !dbg !3351
  %_113 = zext i1 %_114 to i64, !dbg !3351
  store ptr %_112, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !3295, metadata !DIExpression()), !dbg !3352
  store i64 %_113, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !3300, metadata !DIExpression()), !dbg !3354
  %76 = getelementptr inbounds i8, ptr %_112, i64 %_113, !dbg !3355
  store ptr %76, ptr %end_r, align 8, !dbg !3356
  br label %bb52, !dbg !3331

bb97:                                             ; preds = %bb91, %bb58
  %_195 = load ptr, ptr %start_l, align 8, !dbg !3357, !noundef !24
  %_196 = load ptr, ptr %end_l, align 8, !dbg !3358, !noundef !24
  %_194 = icmp eq ptr %_195, %_196, !dbg !3357
  br i1 %_194, label %bb98, label %bb100, !dbg !3357

bb62:                                             ; preds = %bb58
  %_129 = load ptr, ptr %l, align 8, !dbg !3359, !noundef !24
  %77 = load ptr, ptr %start_l, align 8, !dbg !3359, !noundef !24
  %_131 = load i8, ptr %77, align 1, !dbg !3359, !noundef !24
  store i8 %_131, ptr %small.dbg.spill.i140, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i140, metadata !3360, metadata !DIExpression()), !dbg !3369
  %78 = zext i8 %_131 to i64, !dbg !3371
  store ptr %_129, ptr %self.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i44, metadata !265, metadata !DIExpression()), !dbg !3372
  store i64 %78, ptr %count.dbg.spill.i43, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i43, metadata !271, metadata !DIExpression()), !dbg !3374
  %79 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_129, i64 %78, !dbg !3375
; call core::ptr::read
  call void @_ZN4core3ptr4read17h927c413b34ea08c4E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %tmp, ptr %79) #10, !dbg !3376
  %_135 = load ptr, ptr %r, align 8, !dbg !3377, !noundef !24
  %80 = load ptr, ptr %start_r, align 8, !dbg !3377, !noundef !24
  %_138 = load i8, ptr %80, align 1, !dbg !3377, !noundef !24
  store i8 %_138, ptr %small.dbg.spill.i139, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i139, metadata !3360, metadata !DIExpression()), !dbg !3378
  %81 = zext i8 %_138 to i64, !dbg !3380
  %82 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %81, i64 1), !dbg !3377
  %_139.0 = extractvalue { i64, i1 } %82, 0, !dbg !3377
  %_139.1 = extractvalue { i64, i1 } %82, 1, !dbg !3377
  %83 = call i1 @llvm.expect.i1(i1 %_139.1, i1 false), !dbg !3377
  br i1 %83, label %panic10, label %bb67, !dbg !3377

bb67:                                             ; preds = %bb62
  store ptr %_135, ptr %self.dbg.spill.i95, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i95, metadata !2435, metadata !DIExpression()), !dbg !3381
  store i64 %_139.0, ptr %count.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i94, metadata !2438, metadata !DIExpression()), !dbg !3383
  store i64 %_139.0, ptr %self.dbg.spill.i.i93, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i93, metadata !2442, metadata !DIExpression()), !dbg !3384
  store i64 0, ptr %self.dbg.spill.i1.i92, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i92, metadata !2452, metadata !DIExpression()), !dbg !3386
  store i64 %_139.0, ptr %rhs.dbg.spill.i.i91, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i91, metadata !2457, metadata !DIExpression()), !dbg !3388
  %84 = sub i64 0, %_139.0, !dbg !3389
  store ptr %_135, ptr %self.dbg.spill.i104, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i104, metadata !2462, metadata !DIExpression()), !dbg !3390
  store i64 %84, ptr %count.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i103, metadata !2467, metadata !DIExpression()), !dbg !3392
  %85 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_135, i64 %84, !dbg !3393
  %_141 = load ptr, ptr %l, align 8, !dbg !3394, !noundef !24
  %86 = load ptr, ptr %start_l, align 8, !dbg !3394, !noundef !24
  %_143 = load i8, ptr %86, align 1, !dbg !3394, !noundef !24
  store i8 %_143, ptr %small.dbg.spill.i138, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i138, metadata !3360, metadata !DIExpression()), !dbg !3395
  %87 = zext i8 %_143 to i64, !dbg !3397
  store ptr %_141, ptr %self.dbg.spill.i42, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i42, metadata !265, metadata !DIExpression()), !dbg !3398
  store i64 %87, ptr %count.dbg.spill.i41, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i41, metadata !271, metadata !DIExpression()), !dbg !3400
  %88 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_141, i64 %87, !dbg !3401
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %85, ptr %88, i64 1) #10, !dbg !3402
  store i64 1, ptr %_145, align 8, !dbg !3403
  %89 = getelementptr inbounds { i64, i64 }, ptr %_145, i32 0, i32 1, !dbg !3403
  store i64 %count, ptr %89, align 8, !dbg !3403
  %90 = getelementptr inbounds { i64, i64 }, ptr %_145, i32 0, i32 0, !dbg !3403
  %91 = load i64, ptr %90, align 8, !dbg !3403, !noundef !24
  %92 = getelementptr inbounds { i64, i64 }, ptr %_145, i32 0, i32 1, !dbg !3403
  %93 = load i64, ptr %92, align 8, !dbg !3403, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %94 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2035deb76a1d3e4fE"(i64 %91, i64 %93) #10, !dbg !3403
  %_144.0 = extractvalue { i64, i64 } %94, 0, !dbg !3403
  %_144.1 = extractvalue { i64, i64 } %94, 1, !dbg !3403
  %95 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 0, !dbg !3403
  store i64 %_144.0, ptr %95, align 8, !dbg !3403
  %96 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 1, !dbg !3403
  store i64 %_144.1, ptr %96, align 8, !dbg !3403
  br label %bb73, !dbg !3404

panic10:                                          ; preds = %bb62
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0a48b3a7e93a3fb66a7841c604466c03) #11, !dbg !3377
  unreachable, !dbg !3377

bb73:                                             ; preds = %bb86, %bb67
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %97 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3ed0813fa7c9be69E"(ptr align 8 %iter3) #10, !dbg !3166
  store { i64, i64 } %97, ptr %_148, align 8, !dbg !3166
  %_150 = load i64, ptr %_148, align 8, !dbg !3166, !range !1165, !noundef !24
  %98 = icmp eq i64 %_150, 0, !dbg !3166
  br i1 %98, label %bb76, label %bb75, !dbg !3166

bb76:                                             ; preds = %bb73
  %_183 = load ptr, ptr %r, align 8, !dbg !3405, !noundef !24
  %99 = load ptr, ptr %start_r, align 8, !dbg !3405, !noundef !24
  %_186 = load i8, ptr %99, align 1, !dbg !3405, !noundef !24
  store i8 %_186, ptr %small.dbg.spill.i133, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i133, metadata !3360, metadata !DIExpression()), !dbg !3406
  %100 = zext i8 %_186 to i64, !dbg !3408
  %101 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %100, i64 1), !dbg !3405
  %_187.0 = extractvalue { i64, i1 } %101, 0, !dbg !3405
  %_187.1 = extractvalue { i64, i1 } %101, 1, !dbg !3405
  %102 = call i1 @llvm.expect.i1(i1 %_187.1, i1 false), !dbg !3405
  br i1 %102, label %panic13, label %bb91, !dbg !3405

bb75:                                             ; preds = %bb73
  %_152 = load ptr, ptr %start_l, align 8, !dbg !3409, !noundef !24
  store ptr %_152, ptr %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i26, metadata !3295, metadata !DIExpression()), !dbg !3410
  store i64 1, ptr %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i25, metadata !3300, metadata !DIExpression()), !dbg !3412
  %103 = getelementptr inbounds i8, ptr %_152, i64 1, !dbg !3413
  store ptr %103, ptr %start_l, align 8, !dbg !3414
  %_156 = load ptr, ptr %l, align 8, !dbg !3415, !noundef !24
  %104 = load ptr, ptr %start_l, align 8, !dbg !3415, !noundef !24
  %_158 = load i8, ptr %104, align 1, !dbg !3415, !noundef !24
  store i8 %_158, ptr %small.dbg.spill.i137, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i137, metadata !3360, metadata !DIExpression()), !dbg !3416
  %105 = zext i8 %_158 to i64, !dbg !3418
  store ptr %_156, ptr %self.dbg.spill.i40, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i40, metadata !265, metadata !DIExpression()), !dbg !3419
  store i64 %105, ptr %count.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i39, metadata !271, metadata !DIExpression()), !dbg !3421
  %106 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_156, i64 %105, !dbg !3422
  %_160 = load ptr, ptr %r, align 8, !dbg !3423, !noundef !24
  %107 = load ptr, ptr %start_r, align 8, !dbg !3423, !noundef !24
  %_163 = load i8, ptr %107, align 1, !dbg !3423, !noundef !24
  store i8 %_163, ptr %small.dbg.spill.i136, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i136, metadata !3360, metadata !DIExpression()), !dbg !3424
  %108 = zext i8 %_163 to i64, !dbg !3426
  %109 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %108, i64 1), !dbg !3423
  %_164.0 = extractvalue { i64, i1 } %109, 0, !dbg !3423
  %_164.1 = extractvalue { i64, i1 } %109, 1, !dbg !3423
  %110 = call i1 @llvm.expect.i1(i1 %_164.1, i1 false), !dbg !3423
  br i1 %110, label %panic11, label %bb81, !dbg !3423

bb44:                                             ; No predecessors!
  unreachable, !dbg !3162

bb81:                                             ; preds = %bb75
  store ptr %_160, ptr %self.dbg.spill.i90, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i90, metadata !2435, metadata !DIExpression()), !dbg !3427
  store i64 %_164.0, ptr %count.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i89, metadata !2438, metadata !DIExpression()), !dbg !3429
  store i64 %_164.0, ptr %self.dbg.spill.i.i88, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i88, metadata !2442, metadata !DIExpression()), !dbg !3430
  store i64 0, ptr %self.dbg.spill.i1.i87, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i87, metadata !2452, metadata !DIExpression()), !dbg !3432
  store i64 %_164.0, ptr %rhs.dbg.spill.i.i86, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i86, metadata !2457, metadata !DIExpression()), !dbg !3434
  %111 = sub i64 0, %_164.0, !dbg !3435
  store ptr %_160, ptr %self.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i106, metadata !2462, metadata !DIExpression()), !dbg !3436
  store i64 %111, ptr %count.dbg.spill.i105, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i105, metadata !2467, metadata !DIExpression()), !dbg !3438
  %112 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_160, i64 %111, !dbg !3439
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %106, ptr %112, i64 1) #10, !dbg !3440
  %_166 = load ptr, ptr %start_r, align 8, !dbg !3441, !noundef !24
  store ptr %_166, ptr %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i24, metadata !3295, metadata !DIExpression()), !dbg !3442
  store i64 1, ptr %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i23, metadata !3300, metadata !DIExpression()), !dbg !3444
  %113 = getelementptr inbounds i8, ptr %_166, i64 1, !dbg !3445
  store ptr %113, ptr %start_r, align 8, !dbg !3446
  %_170 = load ptr, ptr %r, align 8, !dbg !3447, !noundef !24
  %114 = load ptr, ptr %start_r, align 8, !dbg !3447, !noundef !24
  %_173 = load i8, ptr %114, align 1, !dbg !3447, !noundef !24
  store i8 %_173, ptr %small.dbg.spill.i135, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i135, metadata !3360, metadata !DIExpression()), !dbg !3448
  %115 = zext i8 %_173 to i64, !dbg !3450
  %116 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %115, i64 1), !dbg !3447
  %_174.0 = extractvalue { i64, i1 } %116, 0, !dbg !3447
  %_174.1 = extractvalue { i64, i1 } %116, 1, !dbg !3447
  %117 = call i1 @llvm.expect.i1(i1 %_174.1, i1 false), !dbg !3447
  br i1 %117, label %panic12, label %bb86, !dbg !3447

panic11:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_255f6db4d0c02746fb4a9b785ea6e516) #11, !dbg !3423
  unreachable, !dbg !3423

bb86:                                             ; preds = %bb81
  store ptr %_170, ptr %self.dbg.spill.i85, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i85, metadata !2435, metadata !DIExpression()), !dbg !3451
  store i64 %_174.0, ptr %count.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i84, metadata !2438, metadata !DIExpression()), !dbg !3453
  store i64 %_174.0, ptr %self.dbg.spill.i.i83, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i83, metadata !2442, metadata !DIExpression()), !dbg !3454
  store i64 0, ptr %self.dbg.spill.i1.i82, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i82, metadata !2452, metadata !DIExpression()), !dbg !3456
  store i64 %_174.0, ptr %rhs.dbg.spill.i.i81, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i81, metadata !2457, metadata !DIExpression()), !dbg !3458
  %118 = sub i64 0, %_174.0, !dbg !3459
  store ptr %_170, ptr %self.dbg.spill.i108, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i108, metadata !2462, metadata !DIExpression()), !dbg !3460
  store i64 %118, ptr %count.dbg.spill.i107, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i107, metadata !2467, metadata !DIExpression()), !dbg !3462
  %119 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_170, i64 %118, !dbg !3463
  %_176 = load ptr, ptr %l, align 8, !dbg !3464, !noundef !24
  %120 = load ptr, ptr %start_l, align 8, !dbg !3464, !noundef !24
  %_178 = load i8, ptr %120, align 1, !dbg !3464, !noundef !24
  store i8 %_178, ptr %small.dbg.spill.i134, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i134, metadata !3360, metadata !DIExpression()), !dbg !3465
  %121 = zext i8 %_178 to i64, !dbg !3467
  store ptr %_176, ptr %self.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i38, metadata !265, metadata !DIExpression()), !dbg !3468
  store i64 %121, ptr %count.dbg.spill.i37, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i37, metadata !271, metadata !DIExpression()), !dbg !3470
  %122 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_176, i64 %121, !dbg !3471
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %119, ptr %122, i64 1) #10, !dbg !3472
  br label %bb73, !dbg !3472

panic12:                                          ; preds = %bb81
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_3fa281490ed5627b0d5acda868d81af0) #11, !dbg !3447
  unreachable, !dbg !3447

bb91:                                             ; preds = %bb76
  store ptr %_183, ptr %self.dbg.spill.i80, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i80, metadata !2435, metadata !DIExpression()), !dbg !3473
  store i64 %_187.0, ptr %count.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i79, metadata !2438, metadata !DIExpression()), !dbg !3475
  store i64 %_187.0, ptr %self.dbg.spill.i.i78, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i78, metadata !2442, metadata !DIExpression()), !dbg !3476
  store i64 0, ptr %self.dbg.spill.i1.i77, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i77, metadata !2452, metadata !DIExpression()), !dbg !3478
  store i64 %_187.0, ptr %rhs.dbg.spill.i.i76, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i76, metadata !2457, metadata !DIExpression()), !dbg !3480
  %123 = sub i64 0, %_187.0, !dbg !3481
  store ptr %_183, ptr %self.dbg.spill.i110, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i110, metadata !2462, metadata !DIExpression()), !dbg !3482
  store i64 %123, ptr %count.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i109, metadata !2467, metadata !DIExpression()), !dbg !3484
  %124 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_183, i64 %123, !dbg !3485
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %tmp, ptr %124, i64 1) #10, !dbg !3486
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_189, ptr align 8 %tmp, i64 24, i1 false), !dbg !3487
; call core::mem::forget
  call void @_ZN4core3mem6forget17hb08bf7ff8de50cc7E(ptr %_189) #10, !dbg !3488
  %_191 = load ptr, ptr %start_l, align 8, !dbg !3489, !noundef !24
  store ptr %_191, ptr %self.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !3295, metadata !DIExpression()), !dbg !3490
  store i64 1, ptr %count.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i21, metadata !3300, metadata !DIExpression()), !dbg !3492
  %125 = getelementptr inbounds i8, ptr %_191, i64 1, !dbg !3493
  store ptr %125, ptr %start_l, align 8, !dbg !3494
  %_193 = load ptr, ptr %start_r, align 8, !dbg !3495, !noundef !24
  store ptr %_193, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3295, metadata !DIExpression()), !dbg !3496
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !3300, metadata !DIExpression()), !dbg !3498
  %126 = getelementptr inbounds i8, ptr %_193, i64 1, !dbg !3499
  store ptr %126, ptr %start_r, align 8, !dbg !3500
  br label %bb97, !dbg !3501

panic13:                                          ; preds = %bb76
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_2107e90e8c7dda0adfd21e59e3b7e9ee) #11, !dbg !3405
  unreachable, !dbg !3405

bb100:                                            ; preds = %bb98, %bb97
  %_201 = load ptr, ptr %start_r, align 8, !dbg !3502, !noundef !24
  %_202 = load ptr, ptr %end_r, align 8, !dbg !3503, !noundef !24
  %_200 = icmp eq ptr %_201, %_202, !dbg !3502
  br i1 %_200, label %bb101, label %bb103, !dbg !3502

bb98:                                             ; preds = %bb97
  %_198 = load ptr, ptr %l, align 8, !dbg !3504, !noundef !24
  %_199 = load i64, ptr %block_l, align 8, !dbg !3505, !noundef !24
  store ptr %_198, ptr %self.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i36, metadata !265, metadata !DIExpression()), !dbg !3506
  store i64 %_199, ptr %count.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i35, metadata !271, metadata !DIExpression()), !dbg !3508
  %127 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_198, i64 %_199, !dbg !3509
  store ptr %127, ptr %l, align 8, !dbg !3510
  br label %bb100, !dbg !3511

bb103:                                            ; preds = %bb101, %bb100
  br i1 %is_done, label %bb104, label %bb9, !dbg !3512

bb101:                                            ; preds = %bb100
  %_204 = load ptr, ptr %r, align 8, !dbg !3513, !noundef !24
  %_205 = load i64, ptr %block_r, align 8, !dbg !3514, !noundef !24
  store ptr %_204, ptr %self.dbg.spill.i75, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i75, metadata !2435, metadata !DIExpression()), !dbg !3515
  store i64 %_205, ptr %count.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i74, metadata !2438, metadata !DIExpression()), !dbg !3517
  store i64 %_205, ptr %self.dbg.spill.i.i73, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i73, metadata !2442, metadata !DIExpression()), !dbg !3518
  store i64 0, ptr %self.dbg.spill.i1.i72, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i72, metadata !2452, metadata !DIExpression()), !dbg !3520
  store i64 %_205, ptr %rhs.dbg.spill.i.i71, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i71, metadata !2457, metadata !DIExpression()), !dbg !3522
  %128 = sub i64 0, %_205, !dbg !3523
  store ptr %_204, ptr %self.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i112, metadata !2462, metadata !DIExpression()), !dbg !3524
  store i64 %128, ptr %count.dbg.spill.i111, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i111, metadata !2467, metadata !DIExpression()), !dbg !3526
  %129 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_204, i64 %128, !dbg !3527
  store ptr %129, ptr %r, align 8, !dbg !3528
  br label %bb103, !dbg !3529

bb104:                                            ; preds = %bb103
  %_207 = load ptr, ptr %start_l, align 8, !dbg !3530, !noundef !24
  %_208 = load ptr, ptr %end_l, align 8, !dbg !3531, !noundef !24
  %_206 = icmp ult ptr %_207, %_208, !dbg !3530
  br i1 %_206, label %bb105, label %bb106, !dbg !3530

bb106:                                            ; preds = %bb104
  %_242 = load ptr, ptr %start_r, align 8, !dbg !3532, !noundef !24
  %_243 = load ptr, ptr %end_r, align 8, !dbg !3533, !noundef !24
  %_241 = icmp ult ptr %_242, %_243, !dbg !3532
  br i1 %_241, label %bb120, label %bb121, !dbg !3532

bb105:                                            ; preds = %bb104
  br i1 true, label %bb107, label %bb110, !dbg !3534

bb110:                                            ; preds = %bb111, %bb107, %bb105
  %_226 = load ptr, ptr %start_l, align 8, !dbg !3535, !noundef !24
  %_227 = load ptr, ptr %end_l, align 8, !dbg !3536, !noundef !24
  %_225 = icmp ult ptr %_226, %_227, !dbg !3535
  br i1 %_225, label %bb111, label %bb118, !dbg !3535

bb107:                                            ; preds = %bb105
  %_213 = load ptr, ptr %l, align 8, !dbg !3537, !noundef !24
  %_214 = load ptr, ptr %r, align 8, !dbg !3538, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %130 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE(ptr %_213, ptr %_214) #10, !dbg !3539
  store i64 %130, ptr %_212, align 8, !dbg !3539
  store ptr %_212, ptr %_210, align 8, !dbg !3534
  %131 = getelementptr inbounds { ptr, ptr }, ptr %_210, i32 0, i32 1, !dbg !3534
  store ptr %block_l, ptr %131, align 8, !dbg !3534
  %left_val = load ptr, ptr %_210, align 8, !dbg !3534, !nonnull !24, !align !490, !noundef !24
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !3534
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !3131, metadata !DIExpression()), !dbg !3540
  %132 = getelementptr inbounds { ptr, ptr }, ptr %_210, i32 0, i32 1, !dbg !3534
  %right_val = load ptr, ptr %132, align 8, !dbg !3534, !nonnull !24, !align !490, !noundef !24
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !3534
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !3136, metadata !DIExpression()), !dbg !3540
  %_220 = load i64, ptr %left_val, align 8, !dbg !3540, !noundef !24
  %_221 = load i64, ptr %right_val, align 8, !dbg !3540, !noundef !24
  %_219 = icmp eq i64 %_220, %_221, !dbg !3540
  %_218 = xor i1 %_219, true, !dbg !3540
  br i1 %_218, label %bb109, label %bb110, !dbg !3540

bb109:                                            ; preds = %bb107
  store i8 0, ptr %kind, align 1, !dbg !3540
  store ptr null, ptr %_224, align 8, !dbg !3167
  %133 = load i8, ptr %kind, align 1, !dbg !3167, !range !3541, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h11d0847d25470d35E(i8 %133, ptr align 8 %left_val, ptr align 8 %right_val, ptr %_224, ptr align 8 @alloc_23d83fb97dc5ddd699c8f80f695d1b3b) #11, !dbg !3167
  unreachable, !dbg !3167

bb118:                                            ; preds = %bb110
  store ptr %v.0, ptr %self.dbg.spill.i130, align 8
  %134 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i130, i32 0, i32 1
  store i64 %v.1, ptr %134, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i130, metadata !2299, metadata !DIExpression()), !dbg !3542
  %_240 = load ptr, ptr %r, align 8, !dbg !3544, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %135 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE(ptr %v.0, ptr %_240) #10, !dbg !3545
  store i64 %135, ptr %2, align 8, !dbg !3545
  br label %bb136, !dbg !3545

bb111:                                            ; preds = %bb110
  %_229 = load ptr, ptr %end_l, align 8, !dbg !3546, !noundef !24
  store ptr %_229, ptr %self.dbg.spill.i55, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i55, metadata !3547, metadata !DIExpression()), !dbg !3551
  store i64 1, ptr %count.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i54, metadata !3550, metadata !DIExpression()), !dbg !3553
  store i64 1, ptr %self.dbg.spill.i.i53, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i53, metadata !2442, metadata !DIExpression()), !dbg !3554
  store i64 0, ptr %self.dbg.spill.i1.i52, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i52, metadata !2452, metadata !DIExpression()), !dbg !3556
  store i64 1, ptr %rhs.dbg.spill.i.i51, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i51, metadata !2457, metadata !DIExpression()), !dbg !3558
  store ptr %_229, ptr %self.dbg.spill.i120, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i120, metadata !3559, metadata !DIExpression()), !dbg !3565
  store i64 -1, ptr %count.dbg.spill.i119, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i119, metadata !3564, metadata !DIExpression()), !dbg !3567
  %136 = getelementptr inbounds i8, ptr %_229, i64 -1, !dbg !3568
  store ptr %136, ptr %end_l, align 8, !dbg !3569
  %_232 = load ptr, ptr %l, align 8, !dbg !3570, !noundef !24
  %137 = load ptr, ptr %end_l, align 8, !dbg !3571, !noundef !24
  %_234 = load i8, ptr %137, align 1, !dbg !3571, !noundef !24
  store i8 %_234, ptr %small.dbg.spill.i132, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i132, metadata !3360, metadata !DIExpression()), !dbg !3572
  %138 = zext i8 %_234 to i64, !dbg !3574
  store ptr %_232, ptr %self.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i34, metadata !265, metadata !DIExpression()), !dbg !3575
  store i64 %138, ptr %count.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i33, metadata !271, metadata !DIExpression()), !dbg !3577
  %139 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_232, i64 %138, !dbg !3578
  %_236 = load ptr, ptr %r, align 8, !dbg !3579, !noundef !24
  store ptr %_236, ptr %self.dbg.spill.i70, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i70, metadata !2435, metadata !DIExpression()), !dbg !3580
  store i64 1, ptr %count.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i69, metadata !2438, metadata !DIExpression()), !dbg !3582
  store i64 1, ptr %self.dbg.spill.i.i68, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i68, metadata !2442, metadata !DIExpression()), !dbg !3583
  store i64 0, ptr %self.dbg.spill.i1.i67, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i67, metadata !2452, metadata !DIExpression()), !dbg !3585
  store i64 1, ptr %rhs.dbg.spill.i.i66, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i66, metadata !2457, metadata !DIExpression()), !dbg !3587
  store ptr %_236, ptr %self.dbg.spill.i114, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i114, metadata !2462, metadata !DIExpression()), !dbg !3588
  store i64 -1, ptr %count.dbg.spill.i113, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i113, metadata !2467, metadata !DIExpression()), !dbg !3590
  %140 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_236, i64 -1, !dbg !3591
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h9fb425901b32d437E(ptr %139, ptr %140) #10, !dbg !3592
  %_238 = load ptr, ptr %r, align 8, !dbg !3593, !noundef !24
  store ptr %_238, ptr %self.dbg.spill.i65, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i65, metadata !2435, metadata !DIExpression()), !dbg !3594
  store i64 1, ptr %count.dbg.spill.i64, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i64, metadata !2438, metadata !DIExpression()), !dbg !3596
  store i64 1, ptr %self.dbg.spill.i.i63, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i63, metadata !2442, metadata !DIExpression()), !dbg !3597
  store i64 0, ptr %self.dbg.spill.i1.i62, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i62, metadata !2452, metadata !DIExpression()), !dbg !3599
  store i64 1, ptr %rhs.dbg.spill.i.i61, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i61, metadata !2457, metadata !DIExpression()), !dbg !3601
  store ptr %_238, ptr %self.dbg.spill.i116, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i116, metadata !2462, metadata !DIExpression()), !dbg !3602
  store i64 -1, ptr %count.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i115, metadata !2467, metadata !DIExpression()), !dbg !3604
  %141 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_238, i64 -1, !dbg !3605
  store ptr %141, ptr %r, align 8, !dbg !3606
  br label %bb110, !dbg !3607

bb136:                                            ; preds = %bb121, %bb133, %bb118
  %142 = load i64, ptr %2, align 8, !dbg !3608, !noundef !24
  ret i64 %142, !dbg !3608

bb121:                                            ; preds = %bb106
  store ptr %v.0, ptr %self.dbg.spill.i128, align 8
  %143 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i128, i32 0, i32 1
  store i64 %v.1, ptr %143, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i128, metadata !2299, metadata !DIExpression()), !dbg !3609
  %_278 = load ptr, ptr %l, align 8, !dbg !3611, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %144 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE(ptr %v.0, ptr %_278) #10, !dbg !3612
  store i64 %144, ptr %2, align 8, !dbg !3612
  br label %bb136, !dbg !3612

bb120:                                            ; preds = %bb106
  br i1 true, label %bb122, label %bb125, !dbg !3613

bb125:                                            ; preds = %bb129, %bb122, %bb120
  %_261 = load ptr, ptr %start_r, align 8, !dbg !3614, !noundef !24
  %_262 = load ptr, ptr %end_r, align 8, !dbg !3615, !noundef !24
  %_260 = icmp ult ptr %_261, %_262, !dbg !3614
  br i1 %_260, label %bb126, label %bb133, !dbg !3614

bb122:                                            ; preds = %bb120
  %_248 = load ptr, ptr %l, align 8, !dbg !3616, !noundef !24
  %_249 = load ptr, ptr %r, align 8, !dbg !3617, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %145 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE(ptr %_248, ptr %_249) #10, !dbg !3618
  store i64 %145, ptr %_247, align 8, !dbg !3618
  store ptr %_247, ptr %_245, align 8, !dbg !3613
  %146 = getelementptr inbounds { ptr, ptr }, ptr %_245, i32 0, i32 1, !dbg !3613
  store ptr %block_r, ptr %146, align 8, !dbg !3613
  %left_val14 = load ptr, ptr %_245, align 8, !dbg !3613, !nonnull !24, !align !490, !noundef !24
  store ptr %left_val14, ptr %left_val.dbg.spill15, align 8, !dbg !3613
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill15, metadata !3140, metadata !DIExpression()), !dbg !3619
  %147 = getelementptr inbounds { ptr, ptr }, ptr %_245, i32 0, i32 1, !dbg !3613
  %right_val16 = load ptr, ptr %147, align 8, !dbg !3613, !nonnull !24, !align !490, !noundef !24
  store ptr %right_val16, ptr %right_val.dbg.spill17, align 8, !dbg !3613
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill17, metadata !3143, metadata !DIExpression()), !dbg !3619
  %_255 = load i64, ptr %left_val14, align 8, !dbg !3619, !noundef !24
  %_256 = load i64, ptr %right_val16, align 8, !dbg !3619, !noundef !24
  %_254 = icmp eq i64 %_255, %_256, !dbg !3619
  %_253 = xor i1 %_254, true, !dbg !3619
  br i1 %_253, label %bb124, label %bb125, !dbg !3619

bb124:                                            ; preds = %bb122
  store i8 0, ptr %kind4, align 1, !dbg !3619
  store ptr null, ptr %_259, align 8, !dbg !3168
  %148 = load i8, ptr %kind4, align 1, !dbg !3168, !range !3541, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h11d0847d25470d35E(i8 %148, ptr align 8 %left_val14, ptr align 8 %right_val16, ptr %_259, ptr align 8 @alloc_fbd29d12e7b221b5790588e8407e814c) #11, !dbg !3168
  unreachable, !dbg !3168

bb133:                                            ; preds = %bb125
  store ptr %v.0, ptr %self.dbg.spill.i129, align 8
  %149 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i129, i32 0, i32 1
  store i64 %v.1, ptr %149, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i129, metadata !2299, metadata !DIExpression()), !dbg !3620
  %_276 = load ptr, ptr %l, align 8, !dbg !3622, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %150 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE(ptr %v.0, ptr %_276) #10, !dbg !3623
  store i64 %150, ptr %2, align 8, !dbg !3623
  br label %bb136, !dbg !3623

bb126:                                            ; preds = %bb125
  %_264 = load ptr, ptr %end_r, align 8, !dbg !3624, !noundef !24
  store ptr %_264, ptr %self.dbg.spill.i50, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i50, metadata !3547, metadata !DIExpression()), !dbg !3625
  store i64 1, ptr %count.dbg.spill.i49, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i49, metadata !3550, metadata !DIExpression()), !dbg !3627
  store i64 1, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2442, metadata !DIExpression()), !dbg !3628
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2452, metadata !DIExpression()), !dbg !3630
  store i64 1, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2457, metadata !DIExpression()), !dbg !3632
  store ptr %_264, ptr %self.dbg.spill.i122, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i122, metadata !3559, metadata !DIExpression()), !dbg !3633
  store i64 -1, ptr %count.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i121, metadata !3564, metadata !DIExpression()), !dbg !3635
  %151 = getelementptr inbounds i8, ptr %_264, i64 -1, !dbg !3636
  store ptr %151, ptr %end_r, align 8, !dbg !3637
  %_266 = load ptr, ptr %l, align 8, !dbg !3638, !noundef !24
  %_268 = load ptr, ptr %r, align 8, !dbg !3639, !noundef !24
  %152 = load ptr, ptr %end_r, align 8, !dbg !3640, !noundef !24
  %_271 = load i8, ptr %152, align 1, !dbg !3640, !noundef !24
  store i8 %_271, ptr %small.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i, metadata !3360, metadata !DIExpression()), !dbg !3641
  %153 = zext i8 %_271 to i64, !dbg !3643
  %154 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %153, i64 1), !dbg !3644
  %_272.0 = extractvalue { i64, i1 } %154, 0, !dbg !3644
  %_272.1 = extractvalue { i64, i1 } %154, 1, !dbg !3644
  %155 = call i1 @llvm.expect.i1(i1 %_272.1, i1 false), !dbg !3644
  br i1 %155, label %panic18, label %bb129, !dbg !3644

bb129:                                            ; preds = %bb126
  store ptr %_268, ptr %self.dbg.spill.i60, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i60, metadata !2435, metadata !DIExpression()), !dbg !3645
  store i64 %_272.0, ptr %count.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i59, metadata !2438, metadata !DIExpression()), !dbg !3647
  store i64 %_272.0, ptr %self.dbg.spill.i.i58, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i58, metadata !2442, metadata !DIExpression()), !dbg !3648
  store i64 0, ptr %self.dbg.spill.i1.i57, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i57, metadata !2452, metadata !DIExpression()), !dbg !3650
  store i64 %_272.0, ptr %rhs.dbg.spill.i.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i56, metadata !2457, metadata !DIExpression()), !dbg !3652
  %156 = sub i64 0, %_272.0, !dbg !3653
  store ptr %_268, ptr %self.dbg.spill.i118, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i118, metadata !2462, metadata !DIExpression()), !dbg !3654
  store i64 %156, ptr %count.dbg.spill.i117, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i117, metadata !2467, metadata !DIExpression()), !dbg !3656
  %157 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_268, i64 %156, !dbg !3657
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h9fb425901b32d437E(ptr %_266, ptr %157) #10, !dbg !3658
  %_274 = load ptr, ptr %l, align 8, !dbg !3659, !noundef !24
  store ptr %_274, ptr %self.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i32, metadata !265, metadata !DIExpression()), !dbg !3660
  store i64 1, ptr %count.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i31, metadata !271, metadata !DIExpression()), !dbg !3662
  %158 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_274, i64 1, !dbg !3663
  store ptr %158, ptr %l, align 8, !dbg !3664
  br label %bb125, !dbg !3665

panic18:                                          ; preds = %bb126
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0ba58876d11be66a75ed3c6ebb0e6bf5) #11, !dbg !3644
  unreachable, !dbg !3644
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h8ad578e50d808492E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3666 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3671, metadata !DIExpression()), !dbg !3673
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3672, metadata !DIExpression()), !dbg !3674
  %_4 = icmp ugt i64 1, 0, !dbg !3675
  %_3 = xor i1 %_4, true, !dbg !3676
  br i1 %_3, label %bb2, label %bb3, !dbg !3676

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !1902, metadata !DIExpression()), !dbg !3677
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1909, metadata !DIExpression()), !dbg !3679
  %0 = ptrtoint ptr %r to i64, !dbg !3681
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1902, metadata !DIExpression()), !dbg !3682
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1909, metadata !DIExpression()), !dbg !3684
  %1 = ptrtoint ptr %l to i64, !dbg !3686
  %_10.0 = sub i64 %0, %1, !dbg !3687
  %_10.1 = icmp ult i64 %0, %1, !dbg !3687
  %2 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3687
  br i1 %2, label %panic, label %bb6, !dbg !3687

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_9dd923649e31f13c3223b59f17507a2e) #11, !dbg !3676
  unreachable, !dbg !3676

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 1, 0, !dbg !3687
  %3 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3687
  br i1 %3, label %panic1, label %bb8, !dbg !3687

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3687
  unreachable, !dbg !3687

bb8:                                              ; preds = %bb6
  %4 = udiv i64 %_10.0, 1, !dbg !3687
  ret i64 %4, !dbg !3688

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3687
  unreachable, !dbg !3687
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE(ptr %l, ptr %r) unnamed_addr #1 !dbg !3689 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3693, metadata !DIExpression()), !dbg !3695
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3694, metadata !DIExpression()), !dbg !3696
  %_4 = icmp ugt i64 24, 0, !dbg !3697
  %_3 = xor i1 %_4, true, !dbg !3698
  br i1 %_3, label %bb2, label %bb3, !dbg !3698

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3699, metadata !DIExpression()), !dbg !3704
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1385, metadata !DIExpression()), !dbg !3706
  %0 = ptrtoint ptr %r to i64, !dbg !3708
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3699, metadata !DIExpression()), !dbg !3709
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1385, metadata !DIExpression()), !dbg !3711
  %1 = ptrtoint ptr %l to i64, !dbg !3713
  %_10.0 = sub i64 %0, %1, !dbg !3714
  %_10.1 = icmp ult i64 %0, %1, !dbg !3714
  %2 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3714
  br i1 %2, label %panic, label %bb6, !dbg !3714

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_9dd923649e31f13c3223b59f17507a2e) #11, !dbg !3698
  unreachable, !dbg !3698

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 24, 0, !dbg !3714
  %3 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3714
  br i1 %3, label %panic1, label %bb8, !dbg !3714

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3714
  unreachable, !dbg !3714

bb8:                                              ; preds = %bb6
  %4 = udiv i64 %_10.0, 24, !dbg !3714
  ret i64 %4, !dbg !3715

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3714
  unreachable, !dbg !3714
}

; core::slice::sort::partial_insertion_sort
; Function Attrs: cold noredzone nounwind
define zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17heb776a738f5e4d38E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #2 !dbg !3716 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_50 = alloca i64, align 8
  %_42 = alloca i64, align 8
  %_17 = alloca { ptr, ptr }, align 8
  %_12 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %i = alloca i64, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3720, metadata !DIExpression()), !dbg !3728
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3721, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.declare(metadata ptr %i, metadata !3724, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3726, metadata !DIExpression()), !dbg !3731
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3732
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3722, metadata !DIExpression()), !dbg !3733
  store i64 1, ptr %i, align 8, !dbg !3734
  store i64 0, ptr %_7, align 8, !dbg !3735
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3735
  store i64 5, ptr %3, align 8, !dbg !3735
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3735
  %5 = load i64, ptr %4, align 8, !dbg !3735, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3735
  %7 = load i64, ptr %6, align 8, !dbg !3735, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2035deb76a1d3e4fE"(i64 %5, i64 %7) #10, !dbg !3735
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3735
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3735
  %9 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3735
  store i64 %_6.0, ptr %9, align 8, !dbg !3735
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3735
  store i64 %_6.1, ptr %10, align 8, !dbg !3735
  br label %bb2, !dbg !3736

bb2:                                              ; preds = %bb25, %bb21, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %11 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3ed0813fa7c9be69E"(ptr align 8 %iter) #10, !dbg !3731
  store { i64, i64 } %11, ptr %_9, align 8, !dbg !3731
  %_11 = load i64, ptr %_9, align 8, !dbg !3731, !range !1165, !noundef !24
  %12 = icmp eq i64 %_11, 0, !dbg !3731
  br i1 %12, label %bb5, label %bb6, !dbg !3731

bb5:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !3737
  br label %bb28, !dbg !3738

bb6:                                              ; preds = %bb15, %bb2
  %_14 = load i64, ptr %i, align 8, !dbg !3739, !noundef !24
  %_13 = icmp ult i64 %_14, %v.1, !dbg !3739
  br i1 %_13, label %bb8, label %bb7, !dbg !3739

bb4:                                              ; No predecessors!
  unreachable, !dbg !3731

bb7:                                              ; preds = %bb6
  store i8 0, ptr %_12, align 1, !dbg !3739
  br label %bb9, !dbg !3739

bb8:                                              ; preds = %bb6
  %_21 = load i64, ptr %i, align 8, !dbg !3740, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_19 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %v.0, i64 %v.1, i64 %_21) #10, !dbg !3741
  %_26 = load i64, ptr %i, align 8, !dbg !3742, !noundef !24
  %_27.0 = sub i64 %_26, 1, !dbg !3742
  %_27.1 = icmp ult i64 %_26, 1, !dbg !3742
  %13 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !3742
  br i1 %13, label %panic, label %bb11, !dbg !3742

bb11:                                             ; preds = %bb8
; call core::slice::<impl [T]>::get_unchecked
  %_23 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %v.0, i64 %v.1, i64 %_27.0) #10, !dbg !3743
  store ptr %_19, ptr %_17, align 8, !dbg !3744
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3744
  store ptr %_23, ptr %14, align 8, !dbg !3744
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 0, !dbg !3744
  %16 = load ptr, ptr %15, align 8, !dbg !3744, !nonnull !24, !align !490, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3744
  %18 = load ptr, ptr %17, align 8, !dbg !3744, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_16 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3744
  %_15 = xor i1 %_16, true, !dbg !3745
  %19 = zext i1 %_15 to i8, !dbg !3739
  store i8 %19, ptr %_12, align 1, !dbg !3739
  br label %bb9, !dbg !3739

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_bd81c17235b1444753a1935a813b485f) #11, !dbg !3742
  unreachable, !dbg !3742

bb9:                                              ; preds = %bb7, %bb11
  %20 = load i8, ptr %_12, align 1, !dbg !3739, !range !231, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3739
  br i1 %21, label %bb14, label %bb16, !dbg !3739

bb16:                                             ; preds = %bb9
  %_30 = load i64, ptr %i, align 8, !dbg !3746, !noundef !24
  %_29 = icmp eq i64 %_30, %v.1, !dbg !3746
  br i1 %_29, label %bb17, label %bb18, !dbg !3746

bb14:                                             ; preds = %bb9
  %22 = load i64, ptr %i, align 8, !dbg !3747, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !3747
  %_28.0 = extractvalue { i64, i1 } %23, 0, !dbg !3747
  %_28.1 = extractvalue { i64, i1 } %23, 1, !dbg !3747
  %24 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !3747
  br i1 %24, label %panic1, label %bb15, !dbg !3747

bb15:                                             ; preds = %bb14
  store i64 %_28.0, ptr %i, align 8, !dbg !3747
  br label %bb6, !dbg !3748

panic1:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_e743259f65f79dce5fdf7e439c96cb01) #11, !dbg !3747
  unreachable, !dbg !3747

bb18:                                             ; preds = %bb16
  %_31 = icmp ult i64 %v.1, 50, !dbg !3749
  br i1 %_31, label %bb19, label %bb20, !dbg !3749

bb17:                                             ; preds = %bb16
  store i8 1, ptr %0, align 1, !dbg !3750
  br label %bb28, !dbg !3751

bb28:                                             ; preds = %bb5, %bb19, %bb17
  %25 = load i8, ptr %0, align 1, !dbg !3738, !range !231, !noundef !24
  %26 = trunc i8 %25 to i1, !dbg !3738
  ret i1 %26, !dbg !3738

bb20:                                             ; preds = %bb18
  %_34 = load i64, ptr %i, align 8, !dbg !3754, !noundef !24
  %_35.0 = sub i64 %_34, 1, !dbg !3754
  %_35.1 = icmp ult i64 %_34, 1, !dbg !3754
  %27 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !3754
  br i1 %27, label %panic2, label %bb21, !dbg !3754

bb19:                                             ; preds = %bb18
  store i8 0, ptr %0, align 1, !dbg !3755
  br label %bb28, !dbg !3751

bb21:                                             ; preds = %bb20
  %_36 = load i64, ptr %i, align 8, !dbg !3756, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hd756dd12c8c540cfE"(ptr align 8 %v.0, i64 %v.1, i64 %_35.0, i64 %_36, ptr align 8 @alloc_0cd04c6390f55d83a74a72e18ad99930) #10, !dbg !3757
  %_38 = load i64, ptr %i, align 8, !dbg !3758, !noundef !24
  %_37 = icmp uge i64 %_38, 2, !dbg !3758
  br i1 %_37, label %bb23, label %bb2, !dbg !3758

panic2:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2300fc4e056106188d3f21c349fb8e76) #11, !dbg !3754
  unreachable, !dbg !3754

bb23:                                             ; preds = %bb21
  %_43 = load i64, ptr %i, align 8, !dbg !3759, !noundef !24
  store i64 %_43, ptr %_42, align 8, !dbg !3760
  %28 = load i64, ptr %_42, align 8, !dbg !3761, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %29 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc5c5f59ec5e342dbE"(ptr align 8 %v.0, i64 %v.1, i64 %28, ptr align 8 @alloc_5f37f9a166db798315b708b1541f42a2) #10, !dbg !3761
  %_41.0 = extractvalue { ptr, i64 } %29, 0, !dbg !3761
  %_41.1 = extractvalue { ptr, i64 } %29, 1, !dbg !3761
  %_45 = load i64, ptr %i, align 8, !dbg !3762, !noundef !24
  %_46.0 = sub i64 %_45, 1, !dbg !3762
  %_46.1 = icmp ult i64 %_45, 1, !dbg !3762
  %30 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3762
  br i1 %30, label %panic3, label %bb25, !dbg !3762

bb25:                                             ; preds = %bb23
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17hc2a5efa718f29594E(ptr align 8 %_41.0, i64 %_41.1, i64 %_46.0, ptr align 8 %is_less) #10, !dbg !3763
  %_51 = load i64, ptr %i, align 8, !dbg !3764, !noundef !24
  store i64 %_51, ptr %_50, align 8, !dbg !3765
  %31 = load i64, ptr %_50, align 8, !dbg !3766, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %32 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc5c5f59ec5e342dbE"(ptr align 8 %v.0, i64 %v.1, i64 %31, ptr align 8 @alloc_59f135123cded1fb506d3f148328939a) #10, !dbg !3766
  %_49.0 = extractvalue { ptr, i64 } %32, 0, !dbg !3766
  %_49.1 = extractvalue { ptr, i64 } %32, 1, !dbg !3766
; call core::slice::sort::insertion_sort_shift_right
  call void @_ZN4core5slice4sort26insertion_sort_shift_right17h2812a4148d3529ccE(ptr align 8 %_49.0, i64 %_49.1, i64 1, ptr align 8 %is_less) #10, !dbg !3767
  br label %bb2, !dbg !3767

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_51848abd31708fd9bd4e978ad4e2fdf6) #11, !dbg !3762
  unreachable, !dbg !3762
}

; core::slice::sort::insertion_sort_shift_left
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort25insertion_sort_shift_left17hc2a5efa718f29594E(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3768 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_20 = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3772, metadata !DIExpression()), !dbg !3781
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3773, metadata !DIExpression()), !dbg !3782
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3774, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3777, metadata !DIExpression()), !dbg !3784
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3785
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3775, metadata !DIExpression()), !dbg !3786
  %2 = icmp eq i64 %offset, 0, !dbg !3787
  br i1 %2, label %bb1, label %bb2, !dbg !3787

bb1:                                              ; preds = %start
  store i8 0, ptr %_7, align 1, !dbg !3787
  br label %bb3, !dbg !3787

bb2:                                              ; preds = %start
  %_8 = icmp ule i64 %offset, %v.1, !dbg !3788
  %3 = zext i1 %_8 to i8, !dbg !3787
  store i8 %3, ptr %_7, align 1, !dbg !3787
  br label %bb3, !dbg !3787

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, ptr %_7, align 1, !dbg !3789, !range !231, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3789
  %_6 = xor i1 %5, true, !dbg !3789
  br i1 %_6, label %bb4, label %bb5, !dbg !3789

bb5:                                              ; preds = %bb3
  store i64 %offset, ptr %_11, align 8, !dbg !3790
  %6 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3790
  store i64 %v.1, ptr %6, align 8, !dbg !3790
  %7 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 0, !dbg !3790
  %8 = load i64, ptr %7, align 8, !dbg !3790, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3790
  %10 = load i64, ptr %9, align 8, !dbg !3790, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %11 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2035deb76a1d3e4fE"(i64 %8, i64 %10) #10, !dbg !3790
  %_10.0 = extractvalue { i64, i64 } %11, 0, !dbg !3790
  %_10.1 = extractvalue { i64, i64 } %11, 1, !dbg !3790
  %12 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3790
  store i64 %_10.0, ptr %12, align 8, !dbg !3790
  %13 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3790
  store i64 %_10.1, ptr %13, align 8, !dbg !3790
  br label %bb7, !dbg !3791

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_5429279aa16fa0cdfc25e6fc8726a06a, i64 46, ptr align 8 @alloc_99bb945c879f5888798b28005543a365) #11, !dbg !3789
  unreachable, !dbg !3789

bb7:                                              ; preds = %bb9, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %14 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3ed0813fa7c9be69E"(ptr align 8 %iter) #10, !dbg !3784
  store { i64, i64 } %14, ptr %_13, align 8, !dbg !3784
  %_15 = load i64, ptr %_13, align 8, !dbg !3784, !range !1165, !noundef !24
  %15 = icmp eq i64 %_15, 0, !dbg !3784
  br i1 %15, label %bb11, label %bb9, !dbg !3784

bb11:                                             ; preds = %bb7
  ret void, !dbg !3792

bb9:                                              ; preds = %bb7
  %16 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3793
  %i = load i64, ptr %16, align 8, !dbg !3793, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3793
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3779, metadata !DIExpression()), !dbg !3794
  store i64 %i, ptr %_20, align 8, !dbg !3795
  %17 = load i64, ptr %_20, align 8, !dbg !3796, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %18 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1d09ac9c11f46a4eE"(ptr align 8 %v.0, i64 %v.1, i64 %17, ptr align 8 @alloc_73eebdc85b9e117e5d0f01368c59f59c) #10, !dbg !3796
  %_19.0 = extractvalue { ptr, i64 } %18, 0, !dbg !3796
  %_19.1 = extractvalue { ptr, i64 } %18, 1, !dbg !3796
; call core::slice::sort::insert_tail
  call void @_ZN4core5slice4sort11insert_tail17hd4f3d2e06272ff2eE(ptr align 8 %_19.0, i64 %_19.1, ptr align 8 %is_less) #10, !dbg !3797
  br label %bb7, !dbg !3797

bb10:                                             ; No predecessors!
  unreachable, !dbg !3784
}

; core::slice::sort::insertion_sort_shift_right
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort26insertion_sort_shift_right17h2812a4148d3529ccE(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3798 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3800, metadata !DIExpression()), !dbg !3809
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3801, metadata !DIExpression()), !dbg !3810
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3802, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3805, metadata !DIExpression()), !dbg !3812
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3813
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3803, metadata !DIExpression()), !dbg !3814
  %2 = icmp eq i64 %offset, 0, !dbg !3815
  br i1 %2, label %bb4, label %bb5, !dbg !3815

bb4:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !3815
  br label %bb6, !dbg !3815

bb5:                                              ; preds = %start
  %_9 = icmp ule i64 %offset, %v.1, !dbg !3816
  %3 = zext i1 %_9 to i8, !dbg !3815
  store i8 %3, ptr %_8, align 1, !dbg !3815
  br label %bb6, !dbg !3815

bb6:                                              ; preds = %bb4, %bb5
  %4 = load i8, ptr %_8, align 1, !dbg !3815, !range !231, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3815
  br i1 %5, label %bb2, label %bb1, !dbg !3815

bb1:                                              ; preds = %bb6
  store i8 0, ptr %_7, align 1, !dbg !3815
  br label %bb3, !dbg !3815

bb2:                                              ; preds = %bb6
  %_10 = icmp uge i64 %v.1, 2, !dbg !3817
  %6 = zext i1 %_10 to i8, !dbg !3815
  store i8 %6, ptr %_7, align 1, !dbg !3815
  br label %bb3, !dbg !3815

bb3:                                              ; preds = %bb1, %bb2
  %7 = load i8, ptr %_7, align 1, !dbg !3818, !range !231, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !3818
  %_6 = xor i1 %8, true, !dbg !3818
  br i1 %_6, label %bb7, label %bb8, !dbg !3818

bb8:                                              ; preds = %bb3
  store i64 0, ptr %_14, align 8, !dbg !3819
  %9 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3819
  store i64 %offset, ptr %9, align 8, !dbg !3819
  %10 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !3819
  %11 = load i64, ptr %10, align 8, !dbg !3819, !noundef !24
  %12 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3819
  %13 = load i64, ptr %12, align 8, !dbg !3819, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %14 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h4de59405b16b1113E(i64 %11, i64 %13) #10, !dbg !3819
  %_13.0 = extractvalue { i64, i64 } %14, 0, !dbg !3819
  %_13.1 = extractvalue { i64, i64 } %14, 1, !dbg !3819
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %15 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd993dff03141e9f4E"(i64 %_13.0, i64 %_13.1) #10, !dbg !3819
  %_12.0 = extractvalue { i64, i64 } %15, 0, !dbg !3819
  %_12.1 = extractvalue { i64, i64 } %15, 1, !dbg !3819
  %16 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3819
  store i64 %_12.0, ptr %16, align 8, !dbg !3819
  %17 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3819
  store i64 %_12.1, ptr %17, align 8, !dbg !3819
  br label %bb11, !dbg !3820

bb7:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_6973cb22fd5a814eff7046b5b9169c77, i64 58, ptr align 8 @alloc_15caf4948137b9f7be8cedfe4929bfd3) #11, !dbg !3818
  unreachable, !dbg !3818

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %18 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfa84b6e6f4b1a521E"(ptr align 8 %iter) #10, !dbg !3812
  store { i64, i64 } %18, ptr %_16, align 8, !dbg !3812
  %_18 = load i64, ptr %_16, align 8, !dbg !3812, !range !1165, !noundef !24
  %19 = icmp eq i64 %_18, 0, !dbg !3812
  br i1 %19, label %bb15, label %bb13, !dbg !3812

bb15:                                             ; preds = %bb11
  ret void, !dbg !3821

bb13:                                             ; preds = %bb11
  %20 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !3822
  %i = load i64, ptr %20, align 8, !dbg !3822, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3822
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3807, metadata !DIExpression()), !dbg !3823
  store i64 %i, ptr %_23, align 8, !dbg !3824
  %21 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3824
  store i64 %v.1, ptr %21, align 8, !dbg !3824
  %22 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !3825
  %23 = load i64, ptr %22, align 8, !dbg !3825, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3825
  %25 = load i64, ptr %24, align 8, !dbg !3825, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %26 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfdf60844773cb214E"(ptr align 8 %v.0, i64 %v.1, i64 %23, i64 %25, ptr align 8 @alloc_9da74b8166775a21c862af0758b35f3d) #10, !dbg !3825
  %_22.0 = extractvalue { ptr, i64 } %26, 0, !dbg !3825
  %_22.1 = extractvalue { ptr, i64 } %26, 1, !dbg !3825
; call core::slice::sort::insert_head
  call void @_ZN4core5slice4sort11insert_head17hc56b2cb743b6eb6cE(ptr align 8 %_22.0, i64 %_22.1, ptr align 8 %is_less) #10, !dbg !3826
  br label %bb11, !dbg !3826

bb14:                                             ; No predecessors!
  unreachable, !dbg !3812
}

; core::slice::sort::recurse
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort7recurse17h40cd95a44a5352cbE(ptr align 8 %0, i64 %1, ptr align 8 %is_less, ptr align 8 %2, i32 %3) unnamed_addr #1 !dbg !3827 {
start:
  %pivot.dbg.spill9 = alloca ptr, align 8
  %right.dbg.spill7 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill4 = alloca { ptr, i64 }, align 8
  %right.dbg.spill = alloca { ptr, i64 }, align 8
  %left.dbg.spill = alloca { ptr, i64 }, align 8
  %was_p.dbg.spill = alloca i8, align 1
  %mid.dbg.spill2 = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %p.dbg.spill = alloca ptr, align 8
  %likely_sorted.dbg.spill = alloca i8, align 1
  %pivot.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %_76 = alloca ptr, align 8
  %_74 = alloca ptr, align 8
  %_61 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_57 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_44 = alloca i64, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_26 = alloca i8, align 1
  %_25 = alloca i8, align 1
  %was_partitioned = alloca i8, align 1
  %was_balanced = alloca i8, align 1
  %limit = alloca i32, align 4
  %pred = alloca ptr, align 8
  %v = alloca { ptr, i64 }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %pred, align 8
  store i32 %3, ptr %limit, align 4
  call void @llvm.dbg.declare(metadata ptr %v, metadata !3842, metadata !DIExpression()), !dbg !3870
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3843, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.declare(metadata ptr %pred, metadata !3844, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.declare(metadata ptr %limit, metadata !3845, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.declare(metadata ptr %was_balanced, metadata !3846, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.declare(metadata ptr %was_partitioned, metadata !3848, metadata !DIExpression()), !dbg !3875
  store i8 1, ptr %was_balanced, align 1, !dbg !3876
  store i8 1, ptr %was_partitioned, align 1, !dbg !3877
  br label %bb1, !dbg !3878

bb1:                                              ; preds = %bb37, %bb35, %bb24, %start
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3879
  %_8.0 = load ptr, ptr %6, align 8, !dbg !3879, !nonnull !24, !align !490, !noundef !24
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3879
  %_8.1 = load i64, ptr %7, align 8, !dbg !3879, !noundef !24
  store i64 %_8.1, ptr %len.dbg.spill, align 8, !dbg !3879
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3850, metadata !DIExpression()), !dbg !3880
  %_9 = icmp ule i64 %_8.1, 20, !dbg !3881
  br i1 %_9, label %bb2, label %bb4, !dbg !3881

bb4:                                              ; preds = %bb1
  %_13 = load i32, ptr %limit, align 4, !dbg !3882, !noundef !24
  %8 = icmp eq i32 %_13, 0, !dbg !3882
  br i1 %8, label %bb5, label %bb6, !dbg !3882

bb2:                                              ; preds = %bb1
  %_10 = icmp uge i64 %_8.1, 2, !dbg !3883
  br i1 %_10, label %bb3, label %bb39, !dbg !3883

bb39:                                             ; preds = %bb5, %bb18, %bb3, %bb2
  ret void, !dbg !3884

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3885
  %_12.0 = load ptr, ptr %9, align 8, !dbg !3885, !nonnull !24, !align !490, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3885
  %_12.1 = load i64, ptr %10, align 8, !dbg !3885, !noundef !24
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17hc2a5efa718f29594E(ptr align 8 %_12.0, i64 %_12.1, i64 1, ptr align 8 %is_less) #10, !dbg !3886
  br label %bb39, !dbg !3886

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3887
  %_15.0 = load ptr, ptr %11, align 8, !dbg !3887, !nonnull !24, !align !490, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3887
  %_15.1 = load i64, ptr %12, align 8, !dbg !3887, !noundef !24
; call core::slice::sort::heapsort
  call void @_ZN4core5slice4sort8heapsort17haf3e25da792a91abE(ptr align 8 %_15.0, i64 %_15.1, ptr align 8 %is_less) #10, !dbg !3888
  br label %bb39, !dbg !3888

bb6:                                              ; preds = %bb4
  %13 = load i8, ptr %was_balanced, align 1, !dbg !3889, !range !231, !noundef !24
  %_17 = trunc i8 %13 to i1, !dbg !3889
  %_16 = xor i1 %_17, true, !dbg !3890
  br i1 %_16, label %bb7, label %bb10, !dbg !3890

bb10:                                             ; preds = %bb9, %bb6
  %14 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3891
  %_24.0 = load ptr, ptr %14, align 8, !dbg !3891, !nonnull !24, !align !490, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3891
  %_24.1 = load i64, ptr %15, align 8, !dbg !3891, !noundef !24
; call core::slice::sort::choose_pivot
  %16 = call { i64, i8 } @_ZN4core5slice4sort12choose_pivot17h70023412db7e1b5bE(ptr align 8 %_24.0, i64 %_24.1, ptr align 8 %is_less) #10, !dbg !3892
  %_23.0 = extractvalue { i64, i8 } %16, 0, !dbg !3892
  %17 = extractvalue { i64, i8 } %16, 1, !dbg !3892
  %_23.1 = trunc i8 %17 to i1, !dbg !3892
  store i64 %_23.0, ptr %pivot.dbg.spill, align 8, !dbg !3893
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3852, metadata !DIExpression()), !dbg !3894
  %18 = zext i1 %_23.1 to i8, !dbg !3895
  store i8 %18, ptr %likely_sorted.dbg.spill, align 1, !dbg !3895
  call void @llvm.dbg.declare(metadata ptr %likely_sorted.dbg.spill, metadata !3854, metadata !DIExpression()), !dbg !3896
  %19 = load i8, ptr %was_balanced, align 1, !dbg !3897, !range !231, !noundef !24
  %_27 = trunc i8 %19 to i1, !dbg !3897
  br i1 %_27, label %bb16, label %bb15, !dbg !3897

bb7:                                              ; preds = %bb6
  %20 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3898
  %_19.0 = load ptr, ptr %20, align 8, !dbg !3898, !nonnull !24, !align !490, !noundef !24
  %21 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3898
  %_19.1 = load i64, ptr %21, align 8, !dbg !3898, !noundef !24
; call core::slice::sort::break_patterns
  call void @_ZN4core5slice4sort14break_patterns17hd96ac420a4838c41E(ptr align 8 %_19.0, i64 %_19.1) #10, !dbg !3899
  %22 = load i32, ptr %limit, align 4, !dbg !3900, !noundef !24
  %_20.0 = sub i32 %22, 1, !dbg !3900
  %_20.1 = icmp ult i32 %22, 1, !dbg !3900
  %23 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !3900
  br i1 %23, label %panic, label %bb9, !dbg !3900

bb9:                                              ; preds = %bb7
  store i32 %_20.0, ptr %limit, align 4, !dbg !3900
  br label %bb10, !dbg !3901

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_afed1504fcd128c4005dc410e4c81be0) #11, !dbg !3900
  unreachable, !dbg !3900

bb15:                                             ; preds = %bb10
  store i8 0, ptr %_26, align 1, !dbg !3897
  br label %bb17, !dbg !3897

bb16:                                             ; preds = %bb10
  %24 = load i8, ptr %was_partitioned, align 1, !dbg !3902, !range !231, !noundef !24
  %_28 = trunc i8 %24 to i1, !dbg !3902
  %25 = zext i1 %_28 to i8, !dbg !3897
  store i8 %25, ptr %_26, align 1, !dbg !3897
  br label %bb17, !dbg !3897

bb17:                                             ; preds = %bb15, %bb16
  %26 = load i8, ptr %_26, align 1, !dbg !3897, !range !231, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !3897
  br i1 %27, label %bb13, label %bb12, !dbg !3897

bb12:                                             ; preds = %bb17
  store i8 0, ptr %_25, align 1, !dbg !3897
  br label %bb14, !dbg !3897

bb13:                                             ; preds = %bb17
  %28 = zext i1 %_23.1 to i8, !dbg !3897
  store i8 %28, ptr %_25, align 1, !dbg !3897
  br label %bb14, !dbg !3897

bb14:                                             ; preds = %bb12, %bb13
  %29 = load i8, ptr %_25, align 1, !dbg !3897, !range !231, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !3897
  br i1 %30, label %bb18, label %bb20, !dbg !3897

bb20:                                             ; preds = %bb18, %bb14
  %31 = load ptr, ptr %pred, align 8, !dbg !3903, !noundef !24
  %32 = ptrtoint ptr %31 to i64, !dbg !3903
  %33 = icmp eq i64 %32, 0, !dbg !3903
  %_31 = select i1 %33, i64 0, i64 1, !dbg !3903
  %34 = icmp eq i64 %_31, 1, !dbg !3903
  br i1 %34, label %bb21, label %bb27, !dbg !3903

bb18:                                             ; preds = %bb14
  %35 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3904
  %_30.0 = load ptr, ptr %35, align 8, !dbg !3904, !nonnull !24, !align !490, !noundef !24
  %36 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3904
  %_30.1 = load i64, ptr %36, align 8, !dbg !3904, !noundef !24
; call core::slice::sort::partial_insertion_sort
  %_29 = call zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17heb776a738f5e4d38E(ptr align 8 %_30.0, i64 %_30.1, ptr align 8 %is_less) #10, !dbg !3905
  br i1 %_29, label %bb39, label %bb20, !dbg !3905

bb21:                                             ; preds = %bb20
  %p = load ptr, ptr %pred, align 8, !dbg !3906, !nonnull !24, !align !490, !noundef !24
  store ptr %p, ptr %p.dbg.spill, align 8, !dbg !3906
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !3855, metadata !DIExpression()), !dbg !3906
  %37 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3907
  %38 = load ptr, ptr %37, align 8, !dbg !3907, !nonnull !24, !align !490, !noundef !24
  %39 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3907
  %_37 = load i64, ptr %39, align 8, !dbg !3907, !noundef !24
  %_38 = icmp ult i64 %_23.0, %_37, !dbg !3907
  %40 = call i1 @llvm.expect.i1(i1 %_38, i1 true), !dbg !3907
  br i1 %40, label %bb22, label %panic1, !dbg !3907

bb27:                                             ; preds = %bb22, %bb20
  %41 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3908
  %_49.0 = load ptr, ptr %41, align 8, !dbg !3908, !nonnull !24, !align !490, !noundef !24
  %42 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3908
  %_49.1 = load i64, ptr %42, align 8, !dbg !3908, !noundef !24
; call core::slice::sort::partition
  %43 = call { i64, i8 } @_ZN4core5slice4sort9partition17h3d7c712718e94f9fE(ptr align 8 %_49.0, i64 %_49.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3909
  %_48.0 = extractvalue { i64, i8 } %43, 0, !dbg !3909
  %44 = extractvalue { i64, i8 } %43, 1, !dbg !3909
  %_48.1 = trunc i8 %44 to i1, !dbg !3909
  store i64 %_48.0, ptr %mid.dbg.spill2, align 8, !dbg !3910
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill2, metadata !3859, metadata !DIExpression()), !dbg !3911
  %45 = zext i1 %_48.1 to i8, !dbg !3912
  store i8 %45, ptr %was_p.dbg.spill, align 1, !dbg !3912
  call void @llvm.dbg.declare(metadata ptr %was_p.dbg.spill, metadata !3861, metadata !DIExpression()), !dbg !3913
  %_52.0 = sub i64 %_8.1, %_48.0, !dbg !3914
  %_52.1 = icmp ult i64 %_8.1, %_48.0, !dbg !3914
  %46 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !3914
  br i1 %46, label %panic3, label %bb29, !dbg !3914

bb22:                                             ; preds = %bb21
  %47 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3915
  %48 = load ptr, ptr %47, align 8, !dbg !3915, !nonnull !24, !align !490, !noundef !24
  %49 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3915
  %50 = load i64, ptr %49, align 8, !dbg !3915, !noundef !24
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %48, i64 0, i64 %_23.0, !dbg !3915
  store ptr %p, ptr %_35, align 8, !dbg !3916
  %51 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3916
  store ptr %_36, ptr %51, align 8, !dbg !3916
  %52 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3916
  %53 = load ptr, ptr %52, align 8, !dbg !3916, !nonnull !24, !align !490, !noundef !24
  %54 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3916
  %55 = load ptr, ptr %54, align 8, !dbg !3916, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %53, ptr align 8 %55) #10, !dbg !3916
  %_33 = xor i1 %_34, true, !dbg !3917
  br i1 %_33, label %bb24, label %bb27, !dbg !3917

panic1:                                           ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %_23.0, i64 %_37, ptr align 8 @alloc_587605405deda51184d8e058ecd3dd79) #11, !dbg !3907
  unreachable, !dbg !3907

bb24:                                             ; preds = %bb22
  %56 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3918
  %_40.0 = load ptr, ptr %56, align 8, !dbg !3918, !nonnull !24, !align !490, !noundef !24
  %57 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3918
  %_40.1 = load i64, ptr %57, align 8, !dbg !3918, !noundef !24
; call core::slice::sort::partition_equal
  %mid = call i64 @_ZN4core5slice4sort15partition_equal17habf8a516bec176fdE(ptr align 8 %_40.0, i64 %_40.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3919
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3919
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3857, metadata !DIExpression()), !dbg !3920
  %58 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3921
  %_43.0 = load ptr, ptr %58, align 8, !dbg !3921, !nonnull !24, !align !490, !noundef !24
  %59 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3921
  %_43.1 = load i64, ptr %59, align 8, !dbg !3921, !noundef !24
  store i64 %mid, ptr %_44, align 8, !dbg !3922
  %60 = load i64, ptr %_44, align 8, !dbg !3921, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %61 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1af95eab22b4c3f6E"(ptr align 8 %_43.0, i64 %_43.1, i64 %60, ptr align 8 @alloc_696cf6b9c96fa15d1a2bc76997b92dc8) #10, !dbg !3921
  %_42.0 = extractvalue { ptr, i64 } %61, 0, !dbg !3921
  %_42.1 = extractvalue { ptr, i64 } %61, 1, !dbg !3921
  %62 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3923
  store ptr %_42.0, ptr %62, align 8, !dbg !3923
  %63 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3923
  store i64 %_42.1, ptr %63, align 8, !dbg !3923
  br label %bb1, !dbg !3924

bb29:                                             ; preds = %bb27
; call core::cmp::min
  %_50 = call i64 @_ZN4core3cmp3min17h49e6e73f5f098d4cE(i64 %_48.0, i64 %_52.0) #10, !dbg !3926
  %_53 = udiv i64 %_8.1, 8, !dbg !3927
  %64 = icmp uge i64 %_50, %_53, !dbg !3928
  %65 = zext i1 %64 to i8, !dbg !3928
  store i8 %65, ptr %was_balanced, align 1, !dbg !3928
  %66 = zext i1 %_48.1 to i8, !dbg !3929
  store i8 %66, ptr %was_partitioned, align 1, !dbg !3929
  %67 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3930
  %_58.0 = load ptr, ptr %67, align 8, !dbg !3930, !nonnull !24, !align !490, !noundef !24
  %68 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3930
  %_58.1 = load i64, ptr %68, align 8, !dbg !3930, !noundef !24
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hef9d0510e779d42aE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_57, ptr align 8 %_58.0, i64 %_58.1, i64 %_48.0, ptr align 8 @alloc_971270e5ffee50b341d575bd26c9235e) #10, !dbg !3930
  %69 = getelementptr inbounds { ptr, i64 }, ptr %_57, i32 0, i32 0, !dbg !3931
  %left.0 = load ptr, ptr %69, align 8, !dbg !3931, !nonnull !24, !align !490, !noundef !24
  %70 = getelementptr inbounds { ptr, i64 }, ptr %_57, i32 0, i32 1, !dbg !3931
  %left.1 = load i64, ptr %70, align 8, !dbg !3931, !noundef !24
  %71 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 0, !dbg !3931
  store ptr %left.0, ptr %71, align 8, !dbg !3931
  %72 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 1, !dbg !3931
  store i64 %left.1, ptr %72, align 8, !dbg !3931
  call void @llvm.dbg.declare(metadata ptr %left.dbg.spill, metadata !3862, metadata !DIExpression()), !dbg !3932
  %73 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_57, i32 0, i32 1, !dbg !3933
  %74 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 0, !dbg !3933
  %right.0 = load ptr, ptr %74, align 8, !dbg !3933, !nonnull !24, !align !490, !noundef !24
  %75 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 1, !dbg !3933
  %right.1 = load i64, ptr %75, align 8, !dbg !3933, !noundef !24
  %76 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 0, !dbg !3933
  store ptr %right.0, ptr %76, align 8, !dbg !3933
  %77 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 1, !dbg !3933
  store i64 %right.1, ptr %77, align 8, !dbg !3933
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill, metadata !3864, metadata !DIExpression()), !dbg !3934
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hef9d0510e779d42aE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_61, ptr align 8 %right.0, i64 %right.1, i64 1, ptr align 8 @alloc_06bcb3e9440cff471acdc9917714413b) #10, !dbg !3935
  %78 = getelementptr inbounds { ptr, i64 }, ptr %_61, i32 0, i32 0, !dbg !3936
  %pivot.0 = load ptr, ptr %78, align 8, !dbg !3936, !nonnull !24, !align !490, !noundef !24
  %79 = getelementptr inbounds { ptr, i64 }, ptr %_61, i32 0, i32 1, !dbg !3936
  %pivot.1 = load i64, ptr %79, align 8, !dbg !3936, !noundef !24
  %80 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 0, !dbg !3936
  store ptr %pivot.0, ptr %80, align 8, !dbg !3936
  %81 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 1, !dbg !3936
  store i64 %pivot.1, ptr %81, align 8, !dbg !3936
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill4, metadata !3865, metadata !DIExpression()), !dbg !3937
  %82 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_61, i32 0, i32 1, !dbg !3938
  %83 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 0, !dbg !3938
  %right.05 = load ptr, ptr %83, align 8, !dbg !3938, !nonnull !24, !align !490, !noundef !24
  %84 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 1, !dbg !3938
  %right.16 = load i64, ptr %84, align 8, !dbg !3938, !noundef !24
  %85 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 0, !dbg !3938
  store ptr %right.05, ptr %85, align 8, !dbg !3938
  %86 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 1, !dbg !3938
  store i64 %right.16, ptr %86, align 8, !dbg !3938
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill7, metadata !3867, metadata !DIExpression()), !dbg !3939
  %_65 = icmp ult i64 0, %pivot.1, !dbg !3940
  %87 = call i1 @llvm.expect.i1(i1 %_65, i1 true), !dbg !3940
  br i1 %87, label %bb34, label %panic8, !dbg !3940

panic3:                                           ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6a2abb486c72767951ddbfabb5cef306) #11, !dbg !3914
  unreachable, !dbg !3914

bb34:                                             ; preds = %bb29
  %pivot = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3941
  store ptr %pivot, ptr %pivot.dbg.spill9, align 8, !dbg !3941
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill9, metadata !3868, metadata !DIExpression()), !dbg !3942
  %_66 = icmp ult i64 %left.1, %right.16, !dbg !3943
  br i1 %_66, label %bb35, label %bb37, !dbg !3943

panic8:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 0, i64 %pivot.1, ptr align 8 @alloc_f8fe30ccfa6c382fc0c6802f54db9165) #11, !dbg !3940
  unreachable, !dbg !3940

bb37:                                             ; preds = %bb34
  store ptr %pivot, ptr %_76, align 8, !dbg !3944
  %_77 = load i32, ptr %limit, align 4, !dbg !3945, !noundef !24
  %88 = load ptr, ptr %_76, align 8, !dbg !3946, !align !490, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h40cd95a44a5352cbE(ptr align 8 %right.05, i64 %right.16, ptr align 8 %is_less, ptr align 8 %88, i32 %_77) #10, !dbg !3946
  %89 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3947
  store ptr %left.0, ptr %89, align 8, !dbg !3947
  %90 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3947
  store i64 %left.1, ptr %90, align 8, !dbg !3947
  br label %bb1, !dbg !3948

bb35:                                             ; preds = %bb34
  %_72 = load ptr, ptr %pred, align 8, !dbg !3949, !align !490, !noundef !24
  %_73 = load i32, ptr %limit, align 4, !dbg !3950, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h40cd95a44a5352cbE(ptr align 8 %left.0, i64 %left.1, ptr align 8 %is_less, ptr align 8 %_72, i32 %_73) #10, !dbg !3951
  %91 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3952
  store ptr %right.05, ptr %91, align 8, !dbg !3952
  %92 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3952
  store i64 %right.16, ptr %92, align 8, !dbg !3952
  store ptr %pivot, ptr %_74, align 8, !dbg !3953
  %93 = load ptr, ptr %_74, align 8, !dbg !3954, !align !490, !noundef !24
  store ptr %93, ptr %pred, align 8, !dbg !3954
  br label %bb1, !dbg !3948
}

; core::slice::sort::heapsort
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort8heapsort17haf3e25da792a91abE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %0) unnamed_addr #2 !dbg !3955 {
start:
  %i.dbg.spill3 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_36 = alloca i64, align 8
  %_33 = alloca { { ptr, i64 }, i64 }, align 8
  %_26 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_22 = alloca { i64, i64 }, align 8
  %_19 = alloca { { ptr, i64 }, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %sift_down = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3957, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3958, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.declare(metadata ptr %sift_down, metadata !3959, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3965, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !3969, metadata !DIExpression()), !dbg !3979
  store ptr %is_less, ptr %sift_down, align 8, !dbg !3980
  %_8 = udiv i64 %v.1, 2, !dbg !3981
  store i64 0, ptr %_7, align 8, !dbg !3982
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3982
  store i64 %_8, ptr %3, align 8, !dbg !3982
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3982
  %5 = load i64, ptr %4, align 8, !dbg !3982, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3982
  %7 = load i64, ptr %6, align 8, !dbg !3982, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %8 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h4de59405b16b1113E(i64 %5, i64 %7) #10, !dbg !3982
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3982
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3982
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd993dff03141e9f4E"(i64 %_6.0, i64 %_6.1) #10, !dbg !3982
  %_5.0 = extractvalue { i64, i64 } %9, 0, !dbg !3982
  %_5.1 = extractvalue { i64, i64 } %9, 1, !dbg !3982
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3982
  store i64 %_5.0, ptr %10, align 8, !dbg !3982
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3982
  store i64 %_5.1, ptr %11, align 8, !dbg !3982
  br label %bb4, !dbg !3983

bb4:                                              ; preds = %bb6, %start
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfa84b6e6f4b1a521E"(ptr align 8 %iter) #10, !dbg !3978
  store { i64, i64 } %12, ptr %_13, align 8, !dbg !3978
  %_15 = load i64, ptr %_13, align 8, !dbg !3978, !range !1165, !noundef !24
  %13 = icmp eq i64 %_15, 0, !dbg !3978
  br i1 %13, label %bb8, label %bb6, !dbg !3978

bb8:                                              ; preds = %bb4
  store i64 1, ptr %_22, align 8, !dbg !3984
  %14 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3984
  store i64 %v.1, ptr %14, align 8, !dbg !3984
  %15 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 0, !dbg !3984
  %16 = load i64, ptr %15, align 8, !dbg !3984, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3984
  %18 = load i64, ptr %17, align 8, !dbg !3984, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %19 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h4de59405b16b1113E(i64 %16, i64 %18) #10, !dbg !3984
  %_21.0 = extractvalue { i64, i64 } %19, 0, !dbg !3984
  %_21.1 = extractvalue { i64, i64 } %19, 1, !dbg !3984
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd993dff03141e9f4E"(i64 %_21.0, i64 %_21.1) #10, !dbg !3984
  %_20.0 = extractvalue { i64, i64 } %20, 0, !dbg !3984
  %_20.1 = extractvalue { i64, i64 } %20, 1, !dbg !3984
  %21 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 0, !dbg !3984
  store i64 %_20.0, ptr %21, align 8, !dbg !3984
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 1, !dbg !3984
  store i64 %_20.1, ptr %22, align 8, !dbg !3984
  br label %bb11, !dbg !3985

bb6:                                              ; preds = %bb4
  %23 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3986
  %i = load i64, ptr %23, align 8, !dbg !3986, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3986
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3967, metadata !DIExpression()), !dbg !3987
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3988
  store ptr %v.0, ptr %24, align 8, !dbg !3988
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3988
  store i64 %v.1, ptr %25, align 8, !dbg !3988
  %26 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3988
  store i64 %i, ptr %26, align 8, !dbg !3988
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3988
  %28 = load ptr, ptr %27, align 8, !dbg !3988, !nonnull !24, !align !490, !noundef !24
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3988
  %30 = load i64, ptr %29, align 8, !dbg !3988, !noundef !24
  %31 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3988
  %32 = load i64, ptr %31, align 8, !dbg !3988, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h4d7ac2b27fb90229E"(ptr align 8 %sift_down, ptr align 8 %28, i64 %30, i64 %32) #10, !dbg !3988
  br label %bb4, !dbg !3988

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %33 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfa84b6e6f4b1a521E"(ptr align 8 %iter1) #10, !dbg !3979
  store { i64, i64 } %33, ptr %_26, align 8, !dbg !3979
  %_28 = load i64, ptr %_26, align 8, !dbg !3979, !range !1165, !noundef !24
  %34 = icmp eq i64 %_28, 0, !dbg !3979
  br i1 %34, label %bb14, label %bb13, !dbg !3979

bb14:                                             ; preds = %bb11
  ret void, !dbg !3989

bb13:                                             ; preds = %bb11
  %35 = getelementptr inbounds { i64, i64 }, ptr %_26, i32 0, i32 1, !dbg !3990
  %i2 = load i64, ptr %35, align 8, !dbg !3990, !noundef !24
  store i64 %i2, ptr %i.dbg.spill3, align 8, !dbg !3990
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill3, metadata !3971, metadata !DIExpression()), !dbg !3991
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hd756dd12c8c540cfE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %i2, ptr align 8 @alloc_dc7cc06f65f47d89307805f9ed1e1cb4) #10, !dbg !3992
  store i64 %i2, ptr %_36, align 8, !dbg !3993
  %36 = load i64, ptr %_36, align 8, !dbg !3994, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %37 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc5c5f59ec5e342dbE"(ptr align 8 %v.0, i64 %v.1, i64 %36, ptr align 8 @alloc_218d542ba7d42d9731521fd943356c38) #10, !dbg !3994
  %_35.0 = extractvalue { ptr, i64 } %37, 0, !dbg !3994
  %_35.1 = extractvalue { ptr, i64 } %37, 1, !dbg !3994
  %38 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3995
  store ptr %_35.0, ptr %38, align 8, !dbg !3995
  %39 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3995
  store i64 %_35.1, ptr %39, align 8, !dbg !3995
  %40 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3995
  store i64 0, ptr %40, align 8, !dbg !3995
  %41 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3995
  %42 = load ptr, ptr %41, align 8, !dbg !3995, !nonnull !24, !align !490, !noundef !24
  %43 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3995
  %44 = load i64, ptr %43, align 8, !dbg !3995, !noundef !24
  %45 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3995
  %46 = load i64, ptr %45, align 8, !dbg !3995, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h4d7ac2b27fb90229E"(ptr align 8 %sift_down, ptr align 8 %42, i64 %44, i64 %46) #10, !dbg !3995
  br label %bb11, !dbg !3995

bb7:                                              ; No predecessors!
  unreachable, !dbg !3978
}

; core::slice::sort::heapsort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h4d7ac2b27fb90229E"(ptr align 8 %_1, ptr align 8 %v.0, i64 %v.1, i64 %0) unnamed_addr #0 !dbg !3996 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_21 = alloca { ptr, ptr }, align 8
  %child = alloca i64, align 8
  %node = alloca i64, align 8
  store i64 %0, ptr %node, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4003, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !4006
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !4001, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.declare(metadata ptr %node, metadata !4002, metadata !DIExpression()), !dbg !4008
  call void @llvm.dbg.declare(metadata ptr %child, metadata !4004, metadata !DIExpression()), !dbg !4009
  br label %bb1, !dbg !4010

bb1:                                              ; preds = %bb16, %start
  %_6 = load i64, ptr %node, align 8, !dbg !4011, !noundef !24
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 %_6), !dbg !4012
  %_7.0 = extractvalue { i64, i1 } %3, 0, !dbg !4012
  %_7.1 = extractvalue { i64, i1 } %3, 1, !dbg !4012
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !4012
  br i1 %4, label %panic, label %bb2, !dbg !4012

bb2:                                              ; preds = %bb1
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7.0, i64 1), !dbg !4012
  %_8.0 = extractvalue { i64, i1 } %5, 0, !dbg !4012
  %_8.1 = extractvalue { i64, i1 } %5, 1, !dbg !4012
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4012
  br i1 %6, label %panic1, label %bb3, !dbg !4012

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_8c633453631874cfb45135c562495182) #11, !dbg !4012
  unreachable, !dbg !4012

bb3:                                              ; preds = %bb2
  store i64 %_8.0, ptr %child, align 8, !dbg !4012
  %_10 = load i64, ptr %child, align 8, !dbg !4013, !noundef !24
  %_9 = icmp uge i64 %_10, %v.1, !dbg !4013
  br i1 %_9, label %bb18, label %bb4, !dbg !4013

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_8c633453631874cfb45135c562495182) #11, !dbg !4012
  unreachable, !dbg !4012

bb4:                                              ; preds = %bb3
  %_15 = load i64, ptr %child, align 8, !dbg !4014, !noundef !24
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 1), !dbg !4014
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !4014
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !4014
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !4014
  br i1 %8, label %panic2, label %bb5, !dbg !4014

bb18:                                             ; preds = %bb14, %bb3
  ret void, !dbg !4015

bb5:                                              ; preds = %bb4
  %_13 = icmp ult i64 %_16.0, %v.1, !dbg !4014
  br i1 %_13, label %bb6, label %bb12, !dbg !4014

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_cced75eb33ad0d231589a125c7f2c71e) #11, !dbg !4014
  unreachable, !dbg !4014

bb12:                                             ; preds = %bb11, %bb5
  %_49 = load ptr, ptr %_1, align 8, !dbg !4016, !nonnull !24, !align !490, !noundef !24
  %_37 = load i64, ptr %node, align 8, !dbg !4017, !noundef !24
  %_39 = icmp ult i64 %_37, %v.1, !dbg !4018
  %9 = call i1 @llvm.expect.i1(i1 %_39, i1 true), !dbg !4018
  br i1 %9, label %bb13, label %panic7, !dbg !4018

bb6:                                              ; preds = %bb5
  %_48 = load ptr, ptr %_1, align 8, !dbg !4019, !nonnull !24, !align !490, !noundef !24
  %_23 = load i64, ptr %child, align 8, !dbg !4020, !noundef !24
  %_25 = icmp ult i64 %_23, %v.1, !dbg !4021
  %10 = call i1 @llvm.expect.i1(i1 %_25, i1 true), !dbg !4021
  br i1 %10, label %bb7, label %panic3, !dbg !4021

bb7:                                              ; preds = %bb6
  %_22 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_23, !dbg !4022
  %_28 = load i64, ptr %child, align 8, !dbg !4023, !noundef !24
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_28, i64 1), !dbg !4023
  %_29.0 = extractvalue { i64, i1 } %11, 0, !dbg !4023
  %_29.1 = extractvalue { i64, i1 } %11, 1, !dbg !4023
  %12 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !4023
  br i1 %12, label %panic4, label %bb8, !dbg !4023

panic3:                                           ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %_23, i64 %v.1, ptr align 8 @alloc_02d41e7169598a3cfcfd3f0d1c833ec2) #11, !dbg !4021
  unreachable, !dbg !4021

bb8:                                              ; preds = %bb7
  %_31 = icmp ult i64 %_29.0, %v.1, !dbg !4024
  %13 = call i1 @llvm.expect.i1(i1 %_31, i1 true), !dbg !4024
  br i1 %13, label %bb9, label %panic5, !dbg !4024

panic4:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_794be56d42be9995e3a84c84d26159ed) #11, !dbg !4023
  unreachable, !dbg !4023

bb9:                                              ; preds = %bb8
  %_26 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_29.0, !dbg !4025
  store ptr %_22, ptr %_21, align 8, !dbg !4019
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !4019
  store ptr %_26, ptr %14, align 8, !dbg !4019
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 0, !dbg !4019
  %16 = load ptr, ptr %15, align 8, !dbg !4019, !nonnull !24, !align !490, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !4019
  %18 = load ptr, ptr %17, align 8, !dbg !4019, !nonnull !24, !align !490, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_20 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h68c478d88bc94cb5E"(ptr align 8 %_48, ptr align 8 %16, ptr align 8 %18) #10, !dbg !4019
  %_19 = zext i1 %_20 to i64, !dbg !4019
  %19 = load i64, ptr %child, align 8, !dbg !4026, !noundef !24
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 %_19), !dbg !4026
  %_32.0 = extractvalue { i64, i1 } %20, 0, !dbg !4026
  %_32.1 = extractvalue { i64, i1 } %20, 1, !dbg !4026
  %21 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !4026
  br i1 %21, label %panic6, label %bb11, !dbg !4026

panic5:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %_29.0, i64 %v.1, ptr align 8 @alloc_d32b57d7e285e3b164a125d44291af3f) #11, !dbg !4024
  unreachable, !dbg !4024

bb11:                                             ; preds = %bb9
  store i64 %_32.0, ptr %child, align 8, !dbg !4026
  br label %bb12, !dbg !4027

panic6:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_3f7ac4164e6f54924783af0ed6bc3c8d) #11, !dbg !4026
  unreachable, !dbg !4026

bb13:                                             ; preds = %bb12
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_37, !dbg !4028
  %_41 = load i64, ptr %child, align 8, !dbg !4029, !noundef !24
  %_43 = icmp ult i64 %_41, %v.1, !dbg !4030
  %22 = call i1 @llvm.expect.i1(i1 %_43, i1 true), !dbg !4030
  br i1 %22, label %bb14, label %panic8, !dbg !4030

panic7:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %_37, i64 %v.1, ptr align 8 @alloc_5714221f35142e87516e8a17190398c5) #11, !dbg !4018
  unreachable, !dbg !4018

bb14:                                             ; preds = %bb13
  %_40 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_41, !dbg !4031
  store ptr %_36, ptr %_35, align 8, !dbg !4016
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !4016
  store ptr %_40, ptr %23, align 8, !dbg !4016
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !4016
  %25 = load ptr, ptr %24, align 8, !dbg !4016, !nonnull !24, !align !490, !noundef !24
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !4016
  %27 = load ptr, ptr %26, align 8, !dbg !4016, !nonnull !24, !align !490, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_34 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h68c478d88bc94cb5E"(ptr align 8 %_49, ptr align 8 %25, ptr align 8 %27) #10, !dbg !4016
  %_33 = xor i1 %_34, true, !dbg !4032
  br i1 %_33, label %bb18, label %bb16, !dbg !4032

panic8:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %_41, i64 %v.1, ptr align 8 @alloc_8b3b0b984669970c12a2c2d899b23d16) #11, !dbg !4030
  unreachable, !dbg !4030

bb16:                                             ; preds = %bb14
  %_45 = load i64, ptr %node, align 8, !dbg !4033, !noundef !24
  %_46 = load i64, ptr %child, align 8, !dbg !4034, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hd756dd12c8c540cfE"(ptr align 8 %v.0, i64 %v.1, i64 %_45, i64 %_46, ptr align 8 @alloc_4685547f2c3cd5dc1819afd3ce6280d4) #10, !dbg !4035
  %_47 = load i64, ptr %child, align 8, !dbg !4036, !noundef !24
  store i64 %_47, ptr %node, align 8, !dbg !4037
  br label %bb1, !dbg !4010
}

; core::slice::sort::partition
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort9partition17h3d7c712718e94f9fE(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !4038 {
start:
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %was_partitioned.dbg.spill = alloca i8, align 1
  %mid.dbg.spill = alloca i64, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_60 = alloca { i64, i64 }, align 8
  %_47 = alloca { ptr, ptr }, align 8
  %_41 = alloca i8, align 1
  %_35 = alloca { ptr, ptr }, align 8
  %_30 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_16 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_6 = alloca { i64, i8 }, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !4042, metadata !DIExpression()), !dbg !4063
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !4043, metadata !DIExpression()), !dbg !4064
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !4044, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !4053, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !4055, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.declare(metadata ptr %l, metadata !4059, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.declare(metadata ptr %r, metadata !4061, metadata !DIExpression()), !dbg !4069
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hd756dd12c8c540cfE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_a32d8ca4e4d506b0d34a470e4dcb5cd1) #10, !dbg !4070
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hef9d0510e779d42aE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_10, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_e52ab9305e2b15d74c4e9ac02c87db27) #10, !dbg !4071
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !4072
  %pivot.0 = load ptr, ptr %3, align 8, !dbg !4072, !nonnull !24, !align !490, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !4072
  %pivot.1 = load i64, ptr %4, align 8, !dbg !4072, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !4072
  store ptr %pivot.0, ptr %5, align 8, !dbg !4072
  %6 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !4072
  store i64 %pivot.1, ptr %6, align 8, !dbg !4072
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !4048, metadata !DIExpression()), !dbg !4073
  %7 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !4074
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !4074
  %v.02 = load ptr, ptr %8, align 8, !dbg !4074, !nonnull !24, !align !490, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !4074
  %v.13 = load i64, ptr %9, align 8, !dbg !4074, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !4074
  store ptr %v.02, ptr %10, align 8, !dbg !4074
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !4074
  store i64 %v.13, ptr %11, align 8, !dbg !4074
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !4050, metadata !DIExpression()), !dbg !4075
  %_14 = icmp ult i64 0, %pivot.1, !dbg !4076
  %12 = call i1 @llvm.expect.i1(i1 %_14, i1 true), !dbg !4076
  br i1 %12, label %bb3, label %panic, !dbg !4076

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !4077
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !4077
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !4051, metadata !DIExpression()), !dbg !4078
; call core::ptr::read
  call void @_ZN4core3ptr4read17h927c413b34ea08c4E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_16, ptr %pivot5) #10, !dbg !4079
  call void @llvm.dbg.declare(metadata ptr %_16, metadata !1107, metadata !DIExpression()), !dbg !4080
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_16, i64 24, i1 false), !dbg !4082
  store ptr %tmp, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2626, metadata !DIExpression()), !dbg !4083
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !4085
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !4085
  store ptr %pivot5, ptr %13, align 8, !dbg !4085
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2626, metadata !DIExpression()), !dbg !4086
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !4088
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !4057, metadata !DIExpression()), !dbg !4089
  store i64 0, ptr %l, align 8, !dbg !4090
  store i64 %v.13, ptr %r, align 8, !dbg !4091
  br label %bb8, !dbg !4092

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 0, i64 %pivot.1, ptr align 8 @alloc_0b2a738361d208826a072b92b3acda46) #11, !dbg !4076
  unreachable, !dbg !4076

bb8:                                              ; preds = %bb15, %bb3
  %_32 = load i64, ptr %l, align 8, !dbg !4093, !noundef !24
  %_33 = load i64, ptr %r, align 8, !dbg !4094, !noundef !24
  %_31 = icmp ult i64 %_32, %_33, !dbg !4093
  br i1 %_31, label %bb10, label %bb9, !dbg !4093

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_30, align 1, !dbg !4093
  br label %bb11, !dbg !4093

bb10:                                             ; preds = %bb8
  %_39 = load i64, ptr %l, align 8, !dbg !4095, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_37 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %v.02, i64 %v.13, i64 %_39) #10, !dbg !4096
  store ptr %_37, ptr %_35, align 8, !dbg !4097
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !4097
  store ptr %tmp, ptr %14, align 8, !dbg !4097
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !4097
  %16 = load ptr, ptr %15, align 8, !dbg !4097, !nonnull !24, !align !490, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !4097
  %18 = load ptr, ptr %17, align 8, !dbg !4097, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !4097
  %19 = zext i1 %_34 to i8, !dbg !4093
  store i8 %19, ptr %_30, align 1, !dbg !4093
  br label %bb11, !dbg !4093

bb11:                                             ; preds = %bb9, %bb10
  %20 = load i8, ptr %_30, align 1, !dbg !4093, !range !231, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !4093
  br i1 %21, label %bb14, label %bb16, !dbg !4093

bb16:                                             ; preds = %bb24, %bb11
  %_43 = load i64, ptr %l, align 8, !dbg !4098, !noundef !24
  %_44 = load i64, ptr %r, align 8, !dbg !4099, !noundef !24
  %_42 = icmp ult i64 %_43, %_44, !dbg !4098
  br i1 %_42, label %bb18, label %bb17, !dbg !4098

bb14:                                             ; preds = %bb11
  %22 = load i64, ptr %l, align 8, !dbg !4100, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !4100
  %_40.0 = extractvalue { i64, i1 } %23, 0, !dbg !4100
  %_40.1 = extractvalue { i64, i1 } %23, 1, !dbg !4100
  %24 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false), !dbg !4100
  br i1 %24, label %panic8, label %bb15, !dbg !4100

bb15:                                             ; preds = %bb14
  store i64 %_40.0, ptr %l, align 8, !dbg !4100
  br label %bb8, !dbg !4092

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_96c6545aa6432add279027414fe61766) #11, !dbg !4100
  unreachable, !dbg !4100

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_41, align 1, !dbg !4098
  br label %bb19, !dbg !4098

bb18:                                             ; preds = %bb16
  %_52 = load i64, ptr %r, align 8, !dbg !4101, !noundef !24
  %_53.0 = sub i64 %_52, 1, !dbg !4101
  %_53.1 = icmp ult i64 %_52, 1, !dbg !4101
  %25 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !4101
  br i1 %25, label %panic9, label %bb20, !dbg !4101

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_49 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E"(ptr align 8 %v.02, i64 %v.13, i64 %_53.0) #10, !dbg !4102
  store ptr %_49, ptr %_47, align 8, !dbg !4103
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !4103
  store ptr %tmp, ptr %26, align 8, !dbg !4103
  %27 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 0, !dbg !4103
  %28 = load ptr, ptr %27, align 8, !dbg !4103, !nonnull !24, !align !490, !noundef !24
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !4103
  %30 = load ptr, ptr %29, align 8, !dbg !4103, !nonnull !24, !align !490, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_46 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE"(ptr align 8 %is_less, ptr align 8 %28, ptr align 8 %30) #10, !dbg !4103
  %_45 = xor i1 %_46, true, !dbg !4104
  %31 = zext i1 %_45 to i8, !dbg !4098
  store i8 %31, ptr %_41, align 1, !dbg !4098
  br label %bb19, !dbg !4098

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_0b6e8a57da681e1fb7c4d0e2204e6a73) #11, !dbg !4101
  unreachable, !dbg !4101

bb19:                                             ; preds = %bb17, %bb20
  %32 = load i8, ptr %_41, align 1, !dbg !4098, !range !231, !noundef !24
  %33 = trunc i8 %32 to i1, !dbg !4098
  br i1 %33, label %bb23, label %bb25, !dbg !4098

bb25:                                             ; preds = %bb19
  %_56 = load i64, ptr %l, align 8, !dbg !4105, !noundef !24
  %_61 = load i64, ptr %l, align 8, !dbg !4106, !noundef !24
  %_62 = load i64, ptr %r, align 8, !dbg !4107, !noundef !24
  store i64 %_61, ptr %_60, align 8, !dbg !4106
  %34 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !4106
  store i64 %_62, ptr %34, align 8, !dbg !4106
  %35 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 0, !dbg !4108
  %36 = load i64, ptr %35, align 8, !dbg !4108, !noundef !24
  %37 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !4108
  %38 = load i64, ptr %37, align 8, !dbg !4108, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %39 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfdf60844773cb214E"(ptr align 8 %v.02, i64 %v.13, i64 %36, i64 %38, ptr align 8 @alloc_b0c68aa41aa72af376e4904f7447f27d) #10, !dbg !4108
  %_59.0 = extractvalue { ptr, i64 } %39, 0, !dbg !4108
  %_59.1 = extractvalue { ptr, i64 } %39, 1, !dbg !4108
; call core::slice::sort::partition_in_blocks
  %_57 = call i64 @_ZN4core5slice4sort19partition_in_blocks17h9169f7560d6148a6E(ptr align 8 %_59.0, i64 %_59.1, ptr align 8 %tmp, ptr align 8 %is_less) #10, !dbg !4109
  %40 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_56, i64 %_57), !dbg !4105
  %_63.0 = extractvalue { i64, i1 } %40, 0, !dbg !4105
  %_63.1 = extractvalue { i64, i1 } %40, 1, !dbg !4105
  %41 = call i1 @llvm.expect.i1(i1 %_63.1, i1 false), !dbg !4105
  br i1 %41, label %panic11, label %bb28, !dbg !4105

bb23:                                             ; preds = %bb19
  %42 = load i64, ptr %r, align 8, !dbg !4110, !noundef !24
  %_54.0 = sub i64 %42, 1, !dbg !4110
  %_54.1 = icmp ult i64 %42, 1, !dbg !4110
  %43 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !4110
  br i1 %43, label %panic10, label %bb24, !dbg !4110

bb24:                                             ; preds = %bb23
  store i64 %_54.0, ptr %r, align 8, !dbg !4110
  br label %bb16, !dbg !4111

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_a38e39bd8e066eb11cb79be2a1a30355) #11, !dbg !4110
  unreachable, !dbg !4110

bb28:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !4112, !noundef !24
  %_66 = load i64, ptr %r, align 8, !dbg !4113, !noundef !24
  %_64 = icmp uge i64 %_65, %_66, !dbg !4112
  store i64 %_63.0, ptr %_6, align 8, !dbg !4114
  %44 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !4114
  %45 = zext i1 %_64 to i8, !dbg !4114
  store i8 %45, ptr %44, align 8, !dbg !4114
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h9eb74c98e442b3e6E"(ptr align 8 %_pivot_guard) #10, !dbg !4115
  %mid = load i64, ptr %_6, align 8, !dbg !4116, !noundef !24
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !4116
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !4045, metadata !DIExpression()), !dbg !4117
  %46 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !4118
  %47 = load i8, ptr %46, align 8, !dbg !4118, !range !231, !noundef !24
  %was_partitioned = trunc i8 %47 to i1, !dbg !4118
  %48 = zext i1 %was_partitioned to i8, !dbg !4118
  store i8 %48, ptr %was_partitioned.dbg.spill, align 1, !dbg !4118
  call void @llvm.dbg.declare(metadata ptr %was_partitioned.dbg.spill, metadata !4047, metadata !DIExpression()), !dbg !4119
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hd756dd12c8c540cfE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %mid, ptr align 8 @alloc_62f31cc339340f8d2589d3fbbff1b89f) #10, !dbg !4120
  store i64 %mid, ptr %0, align 8, !dbg !4121
  %49 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !4121
  %50 = zext i1 %was_partitioned to i8, !dbg !4121
  store i8 %50, ptr %49, align 8, !dbg !4121
  %51 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !4122
  %52 = load i64, ptr %51, align 8, !dbg !4122, !noundef !24
  %53 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !4122
  %54 = load i8, ptr %53, align 8, !dbg !4122, !range !231, !noundef !24
  %55 = trunc i8 %54 to i1, !dbg !4122
  %56 = zext i1 %55 to i8, !dbg !4122
  %57 = insertvalue { i64, i8 } poison, i64 %52, 0, !dbg !4122
  %58 = insertvalue { i64, i8 } %57, i8 %56, 1, !dbg !4122
  ret { i64, i8 } %58, !dbg !4122

panic11:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_b173b94e8487e85973e5816a197e44e8) #11, !dbg !4105
  unreachable, !dbg !4105
}

; core::slice::sort::quicksort
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort9quicksort17h92db49e919f32533E(ptr align 8 %v.0, i64 %v.1, ptr align 1 %0) unnamed_addr #1 !dbg !4123 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %limit.dbg.spill = alloca i32, align 4
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !4127, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !4128, metadata !DIExpression()), !dbg !4132
  br i1 false, label %bb1, label %bb2, !dbg !4133

bb2:                                              ; preds = %start
  store i64 %v.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4134, metadata !DIExpression()), !dbg !4137
  %4 = call i64 @llvm.ctlz.i64(i64 %v.1, i1 false), !dbg !4139
  store i64 %4, ptr %1, align 8, !dbg !4139
  %_2.i = load i64, ptr %1, align 8, !dbg !4139, !noundef !24
  %5 = trunc i64 %_2.i to i32, !dbg !4139
  %_8.0 = sub i32 64, %5, !dbg !4140
  %_8.1 = icmp ult i32 64, %5, !dbg !4140
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4140
  br i1 %6, label %panic, label %bb4, !dbg !4140

bb1:                                              ; preds = %start
  br label %bb6, !dbg !4141

bb6:                                              ; preds = %bb4, %bb1
  ret void, !dbg !4142

bb4:                                              ; preds = %bb2
  store i32 %_8.0, ptr %limit.dbg.spill, align 4, !dbg !4140
  call void @llvm.dbg.declare(metadata ptr %limit.dbg.spill, metadata !4129, metadata !DIExpression()), !dbg !4143
  store ptr null, ptr %_11, align 8, !dbg !4144
  %7 = load ptr, ptr %_11, align 8, !dbg !4145, !align !490, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h40cd95a44a5352cbE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less, ptr align 8 %7, i32 %_8.0) #10, !dbg !4145
  br label %bb6, !dbg !4141

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_da17763e772b00039467b49b69f200eb) #11, !dbg !4140
  unreachable, !dbg !4140
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hdac2a1d252190012E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !4146 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4151, metadata !DIExpression()), !dbg !4153
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4152, metadata !DIExpression()), !dbg !4154
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h67b1c80919143750E"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4155
  %_3.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4155
  %_3.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4155
  %6 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !4156
  %7 = insertvalue { ptr, i64 } %6, i64 %_3.1, 1, !dbg !4156
  ret { ptr, i64 } %7, !dbg !4156
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1af95eab22b4c3f6E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4157 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4162, metadata !DIExpression()), !dbg !4166
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4163, metadata !DIExpression()), !dbg !4167
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h269e9f2975c5869eE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4168
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4168
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4168
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !4169
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !4169
  ret { ptr, i64 } %5, !dbg !4169
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1d09ac9c11f46a4eE"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4170 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4174, metadata !DIExpression()), !dbg !4178
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4175, metadata !DIExpression()), !dbg !4179
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h8e26a6a69cc33cafE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4180
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4180
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4180
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !4181
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !4181
  ret { ptr, i64 } %5, !dbg !4181
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc5c5f59ec5e342dbE"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4182 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4186, metadata !DIExpression()), !dbg !4190
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4187, metadata !DIExpression()), !dbg !4191
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hbf77088feacd268fE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4192
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4192
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4192
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !4193
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !4193
  ret { ptr, i64 } %5, !dbg !4193
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfdf60844773cb214E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !4194 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4198, metadata !DIExpression()), !dbg !4200
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4199, metadata !DIExpression()), !dbg !4201
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha10120fffeb1e562E"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4202
  %_3.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4202
  %_3.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4202
  %6 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !4203
  %7 = insertvalue { ptr, i64 } %6, i64 %_3.1, 1, !dbg !4203
  ret { ptr, i64 } %7, !dbg !4203
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hb7f51dd5acc03708E"(ptr sret(%"bootinfo::TlsTemplate") %0, ptr %self, ptr %default) unnamed_addr #0 !dbg !4204 {
start:
  %_5 = alloca i8, align 1
  %x = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4221, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.declare(metadata ptr %default, metadata !4222, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.declare(metadata ptr %x, metadata !4223, metadata !DIExpression()), !dbg !4227
  store i8 0, ptr %_5, align 1, !dbg !4228
  store i8 1, ptr %_5, align 1, !dbg !4228
  %_3 = load i64, ptr %self, align 8, !dbg !4228, !range !1165, !noundef !24
  %1 = icmp eq i64 %_3, 0, !dbg !4229
  br i1 %1, label %bb1, label %bb3, !dbg !4229

bb1:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !4230
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %default, i64 24, i1 false), !dbg !4230
  br label %bb6, !dbg !4230

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %self, i32 0, i32 1, !dbg !4231
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %2, i64 24, i1 false), !dbg !4231
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %x, i64 24, i1 false), !dbg !4232
  br label %bb6, !dbg !4233

bb2:                                              ; No predecessors!
  unreachable, !dbg !4228

bb6:                                              ; preds = %bb1, %bb3
  %3 = load i8, ptr %_5, align 1, !dbg !4234, !range !231, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !4234
  br i1 %4, label %bb5, label %bb4, !dbg !4234

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !4235

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !4234
}

; <core::cmp::Ordering as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hb57cb3a551f4a96cE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !4236 {
start:
  %__arg1_tag.dbg.spill = alloca i8, align 1
  %__self_tag.dbg.spill = alloca i8, align 1
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4242, metadata !DIExpression()), !dbg !4248
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !4243, metadata !DIExpression()), !dbg !4248
  %__self_tag = load i8, ptr %self, align 1, !dbg !4248, !range !796, !noundef !24
  store i8 %__self_tag, ptr %__self_tag.dbg.spill, align 1, !dbg !4248
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill, metadata !4244, metadata !DIExpression()), !dbg !4249
  %__arg1_tag = load i8, ptr %other, align 1, !dbg !4249, !range !796, !noundef !24
  store i8 %__arg1_tag, ptr %__arg1_tag.dbg.spill, align 1, !dbg !4249
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill, metadata !4246, metadata !DIExpression()), !dbg !4250
  %0 = icmp eq i8 %__self_tag, %__arg1_tag, !dbg !4250
  ret i1 %0, !dbg !4251
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h36364877f8c396d4E"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !4252 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4260, metadata !DIExpression()), !dbg !4262
  %2 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !4263
  %3 = insertvalue { ptr, ptr } %2, ptr %self.1, 1, !dbg !4263
  ret { ptr, ptr } %3, !dbg !4263
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h53daa7a0e955cc87E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !4264 {
start:
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, { ptr, i64 } }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4269, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4271, metadata !DIExpression()), !dbg !4274
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !4270, metadata !DIExpression()), !dbg !4275
  br i1 true, label %bb1, label %bb2, !dbg !4276

bb2:                                              ; preds = %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hb4a55e8add239afbE.exit", %start
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h70db485c1eecd795E"(ptr %slice.0, i64 %slice.1) #10, !dbg !4277
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !4278
  store i64 %self, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !209, metadata !DIExpression()), !dbg !4280
  %2 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_6, i64 %self, !dbg !4281
  ret ptr %2, !dbg !4282

bb1:                                              ; preds = %start
  store i64 %self, ptr %_5, align 8, !dbg !4276
  %3 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !4276
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !4276
  store ptr %slice.0, ptr %4, align 8, !dbg !4276
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !4276
  store i64 %slice.1, ptr %5, align 8, !dbg !4276
  %6 = load i64, ptr %_5, align 8, !dbg !4276, !noundef !24
  %7 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !4276
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !4276
  %9 = load ptr, ptr %8, align 8, !dbg !4276, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !4276
  %11 = load i64, ptr %10, align 8, !dbg !4276, !noundef !24
  store i64 %6, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !4283, metadata !DIExpression()), !dbg !4290
  store ptr %9, ptr %slice.dbg.spill.i, align 8
  %12 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %11, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !4289, metadata !DIExpression()), !dbg !4290
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h6bad6bbc24fe61bbE"(ptr %9, i64 %11) #10, !dbg !4292
  %_4.i = icmp ult i64 %6, %_5.i, !dbg !4294
  %_3.i = xor i1 %_4.i, true, !dbg !4295
  br i1 %_3.i, label %bb2.i, label %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hb4a55e8add239afbE.exit", !dbg !4295

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1 @alloc_b3b3c2a7efcea294ef431b7ed1abebea, i64 97) #11, !dbg !4296
  unreachable, !dbg !4296

"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hb4a55e8add239afbE.exit": ; preds = %bb1
  br label %bb2, !dbg !4276
}

; <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2871d52ba83f2309E"(ptr align 8 %self) unnamed_addr #1 !dbg !4297 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4303, metadata !DIExpression()), !dbg !4304
  %_3 = load ptr, ptr %self, align 8, !dbg !4305, !noundef !24
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4306
  %_4 = load ptr, ptr %0, align 8, !dbg !4306, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E(ptr %_3, ptr %_4, i64 1) #10, !dbg !4307
  ret void, !dbg !4308
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9da836cc48c1beebE"(ptr align 8 %self) unnamed_addr #0 !dbg !4309 {
start:
  %self.dbg.spill.i.i = alloca ptr, align 8
  %old.dbg.spill.i = alloca ptr, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca i8, align 1
  %0 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4316, metadata !DIExpression()), !dbg !4317
  br i1 true, label %bb1, label %bb3, !dbg !4318

bb3:                                              ; preds = %bb1, %start
  br i1 false, label %bb4, label %bb6, !dbg !4319

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4320
  %_5 = load ptr, ptr %1, align 8, !dbg !4320, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h71ed3c45e962a382E"(ptr %_5) #10, !dbg !4320
  %_3 = xor i1 %_4, true, !dbg !4321
  call void @llvm.assume(i1 %_3), !dbg !4322
  br label %bb3, !dbg !4323

bb6:                                              ; preds = %bb3
  %_12 = load ptr, ptr %self, align 8, !dbg !4319, !nonnull !24, !noundef !24
  store ptr %_12, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4324, metadata !DIExpression()), !dbg !4330
  %2 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4319
  %_13 = load ptr, ptr %2, align 8, !dbg !4319, !noundef !24
  %3 = icmp eq ptr %_12, %_13, !dbg !4319
  %4 = zext i1 %3 to i8, !dbg !4319
  store i8 %4, ptr %_6, align 1, !dbg !4319
  br label %bb8, !dbg !4319

bb4:                                              ; preds = %bb3
  %5 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4319
  %_9 = load ptr, ptr %5, align 8, !dbg !4319, !noundef !24
  store ptr %_9, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !528, metadata !DIExpression()), !dbg !4332
  store ptr %_9, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !535, metadata !DIExpression()), !dbg !4334
  %6 = ptrtoint ptr %_9 to i64, !dbg !4336
  %7 = icmp eq i64 %6, 0, !dbg !4319
  %8 = zext i1 %7 to i8, !dbg !4319
  store i8 %8, ptr %_6, align 1, !dbg !4319
  br label %bb8, !dbg !4319

bb8:                                              ; preds = %bb6, %bb4
  %9 = load i8, ptr %_6, align 1, !dbg !4319, !range !231, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !4319
  br i1 %10, label %bb9, label %bb10, !dbg !4319

bb10:                                             ; preds = %bb8
  store ptr %self, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !4337, metadata !DIExpression()), !dbg !4348
  store i64 1, ptr %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill.i, metadata !4343, metadata !DIExpression()), !dbg !4350
  %old.i = load ptr, ptr %self, align 8, !dbg !4351, !nonnull !24, !noundef !24
  store ptr %old.i, ptr %old.dbg.spill.i, align 8, !dbg !4351
  call void @llvm.dbg.declare(metadata ptr %old.dbg.spill.i, metadata !4344, metadata !DIExpression()), !dbg !4352
  %_11.i = load ptr, ptr %self, align 8, !dbg !4353, !nonnull !24, !noundef !24
; call core::ptr::non_null::NonNull<T>::add
  %_10.i = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h57df786903043ccaE"(ptr %_11.i, i64 1) #10, !dbg !4353
  store ptr %_10.i, ptr %self, align 8, !dbg !4354
  store ptr %old.i, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !4324, metadata !DIExpression()), !dbg !4355
  store ptr %old.i, ptr %0, align 8, !dbg !4357
  br label %bb12, !dbg !4358

bb9:                                              ; preds = %bb8
  store ptr null, ptr %0, align 8, !dbg !4359
  br label %bb12, !dbg !4358

bb12:                                             ; preds = %bb10, %bb9
  %11 = load ptr, ptr %0, align 8, !dbg !4360, !align !490, !noundef !24
  ret ptr %11, !dbg !4360
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17heae48cffa68b8c7aE"(ptr align 8 %self) unnamed_addr #0 !dbg !4361 {
start:
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_16 = alloca ptr, align 8
  %_11 = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  %predicate = alloca %"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]", align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4366, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.declare(metadata ptr %predicate, metadata !4367, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4368, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.declare(metadata ptr %i, metadata !4370, metadata !DIExpression()), !dbg !4379
  br i1 false, label %bb1, label %bb2, !dbg !4380

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4380
  %_6 = load ptr, ptr %1, align 8, !dbg !4380, !noundef !24
  %_9 = load ptr, ptr %self, align 8, !dbg !4380, !nonnull !24, !noundef !24
  store ptr %_9, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4324, metadata !DIExpression()), !dbg !4381
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %2 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h796146e2dce2f6ebE"(ptr %_6, ptr %_9) #10, !dbg !4380
  store i64 %2, ptr %n, align 8, !dbg !4380
  br label %bb4, !dbg !4380

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4380
  %_5 = load ptr, ptr %3, align 8, !dbg !4380, !noundef !24
  store ptr %_5, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !528, metadata !DIExpression()), !dbg !4383
  store ptr %_5, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !535, metadata !DIExpression()), !dbg !4385
  %4 = ptrtoint ptr %_5 to i64, !dbg !4387
  store i64 %4, ptr %n, align 8, !dbg !4380
  br label %bb4, !dbg !4380

bb4:                                              ; preds = %bb2, %bb1
  store i64 0, ptr %i, align 8, !dbg !4388
  br label %bb5, !dbg !4389

bb5:                                              ; preds = %bb11, %bb4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9da836cc48c1beebE"(ptr align 8 %self) #10, !dbg !4390
  store ptr %5, ptr %_11, align 8, !dbg !4390
  %6 = load ptr, ptr %_11, align 8, !dbg !4391, !noundef !24
  %7 = ptrtoint ptr %6 to i64, !dbg !4391
  %8 = icmp eq i64 %7, 0, !dbg !4391
  %_12 = select i1 %8, i64 0, i64 1, !dbg !4391
  %9 = icmp eq i64 %_12, 1, !dbg !4391
  br i1 %9, label %bb7, label %bb12, !dbg !4391

bb7:                                              ; preds = %bb5
  %x = load ptr, ptr %_11, align 8, !dbg !4392, !nonnull !24, !align !490, !noundef !24
  store ptr %x, ptr %x.dbg.spill, align 8, !dbg !4392
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4372, metadata !DIExpression()), !dbg !4392
  store ptr %x, ptr %_16, align 8, !dbg !4393
  %10 = load ptr, ptr %_16, align 8, !dbg !4393, !nonnull !24, !align !490, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %_14 = call zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h6d19e11f903ddd26E"(ptr align 1 %predicate, ptr align 8 %10) #10, !dbg !4393
  br i1 %_14, label %bb9, label %bb10, !dbg !4393

bb12:                                             ; preds = %bb5
  store i64 0, ptr %0, align 8, !dbg !4394
  br label %bb13, !dbg !4395

bb13:                                             ; preds = %bb9, %bb12
  %11 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4396
  %12 = load i64, ptr %11, align 8, !dbg !4396, !range !1165, !noundef !24
  %13 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4396
  %14 = load i64, ptr %13, align 8, !dbg !4396
  %15 = insertvalue { i64, i64 } poison, i64 %12, 0, !dbg !4396
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !4396
  ret { i64, i64 } %16, !dbg !4396

bb10:                                             ; preds = %bb7
  %17 = load i64, ptr %i, align 8, !dbg !4397, !noundef !24
  %18 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %17, i64 1), !dbg !4397
  %_21.0 = extractvalue { i64, i1 } %18, 0, !dbg !4397
  %_21.1 = extractvalue { i64, i1 } %18, 1, !dbg !4397
  %19 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !4397
  br i1 %19, label %panic, label %bb11, !dbg !4397

bb9:                                              ; preds = %bb7
  %_18 = load i64, ptr %i, align 8, !dbg !4398, !noundef !24
  %_19 = load i64, ptr %n, align 8, !dbg !4399, !noundef !24
  %_17 = icmp ult i64 %_18, %_19, !dbg !4398
  call void @llvm.assume(i1 %_17), !dbg !4400
  %_20 = load i64, ptr %i, align 8, !dbg !4401, !noundef !24
  %20 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4402
  store i64 %_20, ptr %20, align 8, !dbg !4402
  store i64 1, ptr %0, align 8, !dbg !4402
  br label %bb13, !dbg !4395

bb11:                                             ; preds = %bb10
  store i64 %_21.0, ptr %i, align 8, !dbg !4397
  br label %bb5, !dbg !4389

panic:                                            ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_21940fc9f46b7e1887065fc60f1724b0) #11, !dbg !4397
  unreachable, !dbg !4397
}

; bootloader::bootinfo::memory_map::MemoryMap::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h070f8d3ed63b8f35E(ptr sret(%"bootinfo::memory_map::MemoryMap") %0) unnamed_addr #1 !dbg !4403 {
start:
  %_2 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_1 = alloca [64 x %"bootinfo::memory_map::MemoryRegion"], align 8
; call bootloader::bootinfo::memory_map::MemoryRegion::empty
  call void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17hbdcec5494b0034e3E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_2) #10, !dbg !4408
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 0, !dbg !4409
  %2 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 64, !dbg !4409
  br label %repeat_loop_header, !dbg !4409

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %3 = phi ptr [ %1, %start ], [ %5, %repeat_loop_body ]
  %4 = icmp ne ptr %3, %2
  br i1 %4, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_2, i64 24, i1 false)
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %3, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_1, i64 1536, i1 false), !dbg !4410
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %0, i32 0, i32 1, !dbg !4410
  store i64 0, ptr %6, align 8, !dbg !4410
  ret void, !dbg !4411
}

; bootloader::bootinfo::memory_map::MemoryMap::add_region
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17hcadd27ccff8691e7E(ptr align 8 %self, ptr %region) unnamed_addr #1 !dbg !4412 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4418, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4419, metadata !DIExpression()), !dbg !4421
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf61fbd789bf80f18E(ptr align 8 %self) #10, !dbg !4422
  %_4 = icmp ult i64 %_5, 64, !dbg !4422
  %_3 = xor i1 %_4, true, !dbg !4423
  br i1 %_3, label %bb2, label %bb3, !dbg !4423

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_8 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf61fbd789bf80f18E(ptr align 8 %self) #10, !dbg !4424
  %_11 = icmp ult i64 %_8, 64, !dbg !4425
  %0 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !4425
  br i1 %0, label %bb5, label %panic, !dbg !4425

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @alloc_377fe4797e3690987ab15f0122f4880b, i64 37, ptr align 8 @alloc_7196c88dea27a90737fe52164bfa6d4b) #11, !dbg !4423
  unreachable, !dbg !4423

bb5:                                              ; preds = %bb3
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %self, i64 0, i64 %_8, !dbg !4425
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %region, i64 24, i1 false), !dbg !4425
  %2 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4426
  %3 = load i64, ptr %2, align 8, !dbg !4426, !noundef !24
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %3, i64 1), !dbg !4426
  %_12.0 = extractvalue { i64, i1 } %4, 0, !dbg !4426
  %_12.1 = extractvalue { i64, i1 } %4, 1, !dbg !4426
  %5 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !4426
  br i1 %5, label %panic1, label %bb6, !dbg !4426

panic:                                            ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64 %_8, i64 64, ptr align 8 @alloc_e65e0ba17a4d9de8b42e16f5ae86b726) #11, !dbg !4425
  unreachable, !dbg !4425

bb6:                                              ; preds = %bb5
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4426
  store i64 %_12.0, ptr %6, align 8, !dbg !4426
; call bootloader::bootinfo::memory_map::MemoryMap::sort
  call void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17hbc12f840583cc680E(ptr align 8 %self) #10, !dbg !4427
  ret void, !dbg !4428

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_6248fd711ab5313acabe549160484394) #11, !dbg !4426
  unreachable, !dbg !4426
}

; bootloader::bootinfo::memory_map::MemoryMap::sort
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17hbc12f840583cc680E(ptr align 8 %self) unnamed_addr #1 !dbg !4429 {
start:
  %first_zero_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, ptr }, align 8
  %_5 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4434, metadata !DIExpression()), !dbg !4437
; call core::slice::<impl [T]>::sort_unstable_by
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h87ba477b7fb4a9caE"(ptr align 8 %self, i64 64) #10, !dbg !4438
; call core::slice::<impl [T]>::iter
  %0 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hfb83fb3f5a152370E"(ptr align 8 %self, i64 64) #10, !dbg !4439
  store { ptr, ptr } %0, ptr %_7, align 8, !dbg !4439
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %1 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17heae48cffa68b8c7aE"(ptr align 8 %_7) #10, !dbg !4439
  store { i64, i64 } %1, ptr %_5, align 8, !dbg !4439
  %_10 = load i64, ptr %_5, align 8, !dbg !4440, !range !1165, !noundef !24
  %2 = icmp eq i64 %_10, 1, !dbg !4440
  br i1 %2, label %bb4, label %bb5, !dbg !4440

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4441
  %first_zero_index = load i64, ptr %3, align 8, !dbg !4441, !noundef !24
  store i64 %first_zero_index, ptr %first_zero_index.dbg.spill, align 8, !dbg !4441
  call void @llvm.dbg.declare(metadata ptr %first_zero_index.dbg.spill, metadata !4435, metadata !DIExpression()), !dbg !4441
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4442
  store i64 %first_zero_index, ptr %4, align 8, !dbg !4442
  br label %bb5, !dbg !4443

bb5:                                              ; preds = %bb4, %start
  ret void, !dbg !4444
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h9aab6d72e771da3cE"(ptr align 1 %_1, ptr align 8 %r1, ptr align 8 %r2) unnamed_addr #0 !dbg !4445 {
start:
  %r2.dbg.spill = alloca ptr, align 8
  %r1.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %ordering = alloca i8, align 1
  %0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4453, metadata !DIExpression()), !dbg !4454
  store ptr %r1, ptr %r1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r1.dbg.spill, metadata !4449, metadata !DIExpression()), !dbg !4455
  store ptr %r2, ptr %r2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r2.dbg.spill, metadata !4450, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.declare(metadata ptr %ordering, metadata !4451, metadata !DIExpression()), !dbg !4457
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_4 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hda6d95610bd9e367E(ptr align 8 %r1) #10, !dbg !4458
  br i1 %_4, label %bb2, label %bb3, !dbg !4458

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_6 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hda6d95610bd9e367E(ptr align 8 %r2) #10, !dbg !4459
  br i1 %_6, label %bb5, label %bb6, !dbg !4459

bb2:                                              ; preds = %start
  store i8 1, ptr %0, align 1, !dbg !4460
  br label %bb11, !dbg !4461

bb11:                                             ; preds = %bb10, %bb9, %bb5, %bb2
  %1 = load i8, ptr %0, align 1, !dbg !4462, !range !796, !noundef !24
  ret i8 %1, !dbg !4462

bb6:                                              ; preds = %bb3
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %2 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc5dbf38d3fae6ffaE"(ptr align 8 %r1, ptr align 8 %r2) #10, !dbg !4463, !range !796
  store i8 %2, ptr %ordering, align 1, !dbg !4463
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %_11 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hb57cb3a551f4a96cE"(ptr align 1 %ordering, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #10, !dbg !4464
  br i1 %_11, label %bb9, label %bb10, !dbg !4464

bb5:                                              ; preds = %bb3
  store i8 -1, ptr %0, align 1, !dbg !4465
  br label %bb11, !dbg !4466

bb10:                                             ; preds = %bb6
  %3 = load i8, ptr %ordering, align 1, !dbg !4467, !range !796, !noundef !24
  store i8 %3, ptr %0, align 1, !dbg !4467
  br label %bb11, !dbg !4468

bb9:                                              ; preds = %bb6
  %_13 = getelementptr inbounds { i64, i64 }, ptr %r1, i32 0, i32 1, !dbg !4469
  %_14 = getelementptr inbounds { i64, i64 }, ptr %r2, i32 0, i32 1, !dbg !4470
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %4 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc5dbf38d3fae6ffaE"(ptr align 8 %_13, ptr align 8 %_14) #10, !dbg !4469, !range !796
  store i8 %4, ptr %0, align 1, !dbg !4469
  br label %bb11, !dbg !4469
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h6d19e11f903ddd26E"(ptr align 1 %_1, ptr align 8 %r) unnamed_addr #0 !dbg !4471 {
start:
  %r.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4477, metadata !DIExpression()), !dbg !4478
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !4476, metadata !DIExpression()), !dbg !4479
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %0 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hda6d95610bd9e367E(ptr align 8 %r) #10, !dbg !4480
  ret i1 %0, !dbg !4481
}

; bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
; Function Attrs: noredzone nounwind
define internal i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf61fbd789bf80f18E(ptr align 8 %self) unnamed_addr #1 !dbg !4482 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4488, metadata !DIExpression()), !dbg !4489
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4490
  %_2 = load i64, ptr %0, align 8, !dbg !4490, !noundef !24
  ret i64 %_2, !dbg !4491
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17h82ce1d6964150791E"(ptr align 8 %self) unnamed_addr #1 !dbg !4492 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4497, metadata !DIExpression()), !dbg !4498
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf61fbd789bf80f18E(ptr align 8 %self) #10, !dbg !4499
  store i64 0, ptr %_4, align 8, !dbg !4500
  %0 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4500
  store i64 %_5, ptr %0, align 8, !dbg !4500
  %1 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !4501
  %2 = load i64, ptr %1, align 8, !dbg !4501, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4501
  %4 = load i64, ptr %3, align 8, !dbg !4501, !noundef !24
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %5 = call { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hfa19a2d92a920175E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_bc412f3c128804cf7932bd162091bc4c) #10, !dbg !4501
  %_2.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4501
  %_2.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4501
  %6 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0, !dbg !4502
  %7 = insertvalue { ptr, i64 } %6, i64 %_2.1, 1, !dbg !4502
  ret { ptr, i64 } %7, !dbg !4502
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hda92aad7bc4ff9b5E"(ptr align 8 %self) unnamed_addr #1 !dbg !4503 {
start:
  %next_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4508, metadata !DIExpression()), !dbg !4511
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %next_index = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf61fbd789bf80f18E(ptr align 8 %self) #10, !dbg !4512
  store i64 %next_index, ptr %next_index.dbg.spill, align 8, !dbg !4512
  call void @llvm.dbg.declare(metadata ptr %next_index.dbg.spill, metadata !4509, metadata !DIExpression()), !dbg !4513
  store i64 0, ptr %_6, align 8, !dbg !4514
  %0 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4514
  store i64 %next_index, ptr %0, align 8, !dbg !4514
  %1 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !4515
  %2 = load i64, ptr %1, align 8, !dbg !4515, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4515
  %4 = load i64, ptr %3, align 8, !dbg !4515, !noundef !24
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h8954eb019ae799dcE"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_db57840325994cb1e9e58dfeb27e1cf2) #10, !dbg !4515
  %_4.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4515
  %_4.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4515
  %6 = insertvalue { ptr, i64 } poison, ptr %_4.0, 0, !dbg !4516
  %7 = insertvalue { ptr, i64 } %6, i64 %_4.1, 1, !dbg !4516
  ret { ptr, i64 } %7, !dbg !4516
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h5eae1787705802a9E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4517 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca %"core::fmt::builders::DebugList<'_, '_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4522, metadata !DIExpression()), !dbg !4524
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4523, metadata !DIExpression()), !dbg !4525
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17he5d07e01f1d5d034E(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") %_6, ptr align 8 %f) #10, !dbg !4526
; call <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17h82ce1d6964150791E"(ptr align 8 %self) #10, !dbg !4527
  %_9.0 = extractvalue { ptr, i64 } %0, 0, !dbg !4527
  %_9.1 = extractvalue { ptr, i64 } %0, 1, !dbg !4527
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hfb83fb3f5a152370E"(ptr align 8 %_9.0, i64 %_9.1) #10, !dbg !4527
  %_7.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4527
  %_7.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4527
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h6e0b94c7d1d04dadE(ptr align 8 %_6, ptr %_7.0, ptr %_7.1) #10, !dbg !4526
; call core::fmt::builders::DebugList::finish
  %2 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hf52ba88e24d132f6E(ptr align 8 %_4) #10, !dbg !4526
  ret i1 %2, !dbg !4528
}

; bootloader::bootinfo::memory_map::MemoryRegion::empty
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17hbdcec5494b0034e3E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0) unnamed_addr #1 !dbg !4529 {
start:
  %_2 = alloca i32, align 4
  %_1 = alloca { i64, i64 }, align 8
  store i64 0, ptr %_1, align 8, !dbg !4533
  %1 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4533
  store i64 0, ptr %1, align 8, !dbg !4533
  store i32 11, ptr %_2, align 4, !dbg !4534
  %2 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 0, !dbg !4535
  %3 = load i64, ptr %2, align 8, !dbg !4535, !noundef !24
  %4 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4535
  %5 = load i64, ptr %4, align 8, !dbg !4535, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4535
  store i64 %3, ptr %6, align 8, !dbg !4535
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4535
  store i64 %5, ptr %7, align 8, !dbg !4535
  %8 = load i32, ptr %_2, align 4, !dbg !4535, !range !4536, !noundef !24
  %9 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4535
  store i32 %8, ptr %9, align 8, !dbg !4535
  ret void, !dbg !4537
}

; bootloader::bootinfo::memory_map::FrameRange::new
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17hb55906efac1efc89E(i64 %start_addr, i64 %end_addr) unnamed_addr #1 !dbg !4538 {
start:
  %last_byte.dbg.spill = alloca i64, align 8
  %end_addr.dbg.spill = alloca i64, align 8
  %start_addr.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %start_addr, ptr %start_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %start_addr.dbg.spill, metadata !4543, metadata !DIExpression()), !dbg !4547
  store i64 %end_addr, ptr %end_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %end_addr.dbg.spill, metadata !4544, metadata !DIExpression()), !dbg !4548
  %_4.0 = sub i64 %end_addr, 1, !dbg !4549
  %_4.1 = icmp ult i64 %end_addr, 1, !dbg !4549
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !4549
  br i1 %1, label %panic, label %bb1, !dbg !4549

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %last_byte.dbg.spill, align 8, !dbg !4549
  call void @llvm.dbg.declare(metadata ptr %last_byte.dbg.spill, metadata !4545, metadata !DIExpression()), !dbg !4550
  %_5 = udiv i64 %start_addr, 4096, !dbg !4551
  %_8 = udiv i64 %_4.0, 4096, !dbg !4552
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_8, i64 1), !dbg !4552
  %_10.0 = extractvalue { i64, i1 } %2, 0, !dbg !4552
  %_10.1 = extractvalue { i64, i1 } %2, 1, !dbg !4552
  %3 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !4552
  br i1 %3, label %panic1, label %bb4, !dbg !4552

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_cad8f68633be23a5a8047bc131d14ec3) #11, !dbg !4549
  unreachable, !dbg !4549

bb4:                                              ; preds = %bb1
  store i64 %_5, ptr %0, align 8, !dbg !4553
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4553
  store i64 %_10.0, ptr %4, align 8, !dbg !4553
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4554
  %6 = load i64, ptr %5, align 8, !dbg !4554, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4554
  %8 = load i64, ptr %7, align 8, !dbg !4554, !noundef !24
  %9 = insertvalue { i64, i64 } poison, i64 %6, 0, !dbg !4554
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !4554
  ret { i64, i64 } %10, !dbg !4554

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_9e0090e7731cd791b1d2228aa613acc1) #11, !dbg !4552
  unreachable, !dbg !4552
}

; bootloader::bootinfo::memory_map::FrameRange::is_empty
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hda6d95610bd9e367E(ptr align 8 %self) unnamed_addr #1 !dbg !4555 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4561, metadata !DIExpression()), !dbg !4562
  %_2 = load i64, ptr %self, align 8, !dbg !4563, !noundef !24
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4564
  %_3 = load i64, ptr %0, align 8, !dbg !4564, !noundef !24
  %1 = icmp eq i64 %_2, %_3, !dbg !4563
  ret i1 %1, !dbg !4565
}

; bootloader::bootinfo::memory_map::FrameRange::start_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h170a38779cf27241E(ptr align 8 %self) unnamed_addr #1 !dbg !4566 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4571, metadata !DIExpression()), !dbg !4572
  %_2 = load i64, ptr %self, align 8, !dbg !4573, !noundef !24
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4573
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !4573
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !4573
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4573
  br i1 %1, label %panic, label %bb1, !dbg !4573

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4574

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_57ce308cfbee0eeaa37d0e2ac37f242e) #11, !dbg !4573
  unreachable, !dbg !4573
}

; bootloader::bootinfo::memory_map::FrameRange::end_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hf96ff403a0c8d664E(ptr align 8 %self) unnamed_addr #1 !dbg !4575 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4578, metadata !DIExpression()), !dbg !4579
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4580
  %_2 = load i64, ptr %0, align 8, !dbg !4580, !noundef !24
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4580
  %_3.0 = extractvalue { i64, i1 } %1, 0, !dbg !4580
  %_3.1 = extractvalue { i64, i1 } %1, 1, !dbg !4580
  %2 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4580
  br i1 %2, label %panic, label %bb1, !dbg !4580

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4581

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_4848cdfc410b3d9eebbe30a8648bbf6f) #11, !dbg !4580
  unreachable, !dbg !4580
}

; <bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h83d8468df17985c2E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4582 {
start:
  %f.dbg.spill.i9 = alloca ptr, align 8
  %x.dbg.spill.i10 = alloca ptr, align 8
  %0 = alloca { ptr, ptr }, align 8
  %f.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i8 = alloca ptr, align 8
  %1 = alloca { ptr, ptr }, align 8
  %x.dbg.spill.i7 = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %width.dbg.spill.i1 = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i2 = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i3 = alloca i32, align 4
  %align.dbg.spill.i4 = alloca i8, align 1
  %fill.dbg.spill.i5 = alloca i32, align 4
  %position.dbg.spill.i6 = alloca i64, align 8
  %width.dbg.spill.i = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i = alloca i32, align 4
  %align.dbg.spill.i = alloca i8, align 1
  %fill.dbg.spill.i = alloca i32, align 4
  %position.dbg.spill.i = alloca i64, align 8
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_24 = alloca { i64, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_22 = alloca i8, align 1
  %_21 = alloca %"core::fmt::rt::Placeholder", align 8
  %_20 = alloca { i64, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_18 = alloca i8, align 1
  %_17 = alloca %"core::fmt::rt::Placeholder", align 8
  %_16 = alloca [2 x %"core::fmt::rt::Placeholder"], align 8
  %_13 = alloca i64, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca [2 x { ptr, ptr }], align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4587, metadata !DIExpression()), !dbg !4589
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4588, metadata !DIExpression()), !dbg !4590
; call bootloader::bootinfo::memory_map::FrameRange::start_addr
  %2 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h170a38779cf27241E(ptr align 8 %self) #10, !dbg !4591
  store i64 %2, ptr %_10, align 8, !dbg !4591
  store ptr %_10, ptr %x.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i7, metadata !4592, metadata !DIExpression()), !dbg !4599
  store ptr %_10, ptr %x.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i8, metadata !4601, metadata !DIExpression()), !dbg !4609
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17he220ad367d7178a1E", ptr %f.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i, metadata !4608, metadata !DIExpression()), !dbg !4611
  store ptr %_10, ptr %1, align 8, !dbg !4612
  %3 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !4612
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17he220ad367d7178a1E", ptr %3, align 8, !dbg !4612
  %4 = load ptr, ptr %1, align 8, !dbg !4613, !nonnull !24, !align !2328, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !4613
  %6 = load ptr, ptr %5, align 8, !dbg !4613, !nonnull !24, !noundef !24
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0, !dbg !4613
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1, !dbg !4613
  %9 = extractvalue { ptr, ptr } %8, 0, !dbg !4614
  %10 = extractvalue { ptr, ptr } %8, 1, !dbg !4614
  %_8.0 = extractvalue { ptr, ptr } %8, 0, !dbg !4615
  %_8.1 = extractvalue { ptr, ptr } %8, 1, !dbg !4615
; call bootloader::bootinfo::memory_map::FrameRange::end_addr
  %11 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hf96ff403a0c8d664E(ptr align 8 %self) #10, !dbg !4616
  store i64 %11, ptr %_13, align 8, !dbg !4616
  store ptr %_13, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !4592, metadata !DIExpression()), !dbg !4617
  store ptr %_13, ptr %x.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i10, metadata !4601, metadata !DIExpression()), !dbg !4619
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17he220ad367d7178a1E", ptr %f.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i9, metadata !4608, metadata !DIExpression()), !dbg !4621
  store ptr %_13, ptr %0, align 8, !dbg !4622
  %12 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4622
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17he220ad367d7178a1E", ptr %12, align 8, !dbg !4622
  %13 = load ptr, ptr %0, align 8, !dbg !4623, !nonnull !24, !align !2328, !noundef !24
  %14 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4623
  %15 = load ptr, ptr %14, align 8, !dbg !4623, !nonnull !24, !noundef !24
  %16 = insertvalue { ptr, ptr } poison, ptr %13, 0, !dbg !4623
  %17 = insertvalue { ptr, ptr } %16, ptr %15, 1, !dbg !4623
  %18 = extractvalue { ptr, ptr } %17, 0, !dbg !4624
  %19 = extractvalue { ptr, ptr } %17, 1, !dbg !4624
  %_11.0 = extractvalue { ptr, ptr } %17, 0, !dbg !4615
  %_11.1 = extractvalue { ptr, ptr } %17, 1, !dbg !4615
  %20 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 0, !dbg !4615
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0, !dbg !4615
  store ptr %_8.0, ptr %21, align 8, !dbg !4615
  %22 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1, !dbg !4615
  store ptr %_8.1, ptr %22, align 8, !dbg !4615
  %23 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 1, !dbg !4615
  %24 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 0, !dbg !4615
  store ptr %_11.0, ptr %24, align 8, !dbg !4615
  %25 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 1, !dbg !4615
  store ptr %_11.1, ptr %25, align 8, !dbg !4615
  store i8 3, ptr %_18, align 1, !dbg !4615
  store i64 2, ptr %_19, align 8, !dbg !4615
  store i64 2, ptr %_20, align 8, !dbg !4615
  %26 = load i8, ptr %_18, align 1, !dbg !4615, !range !4625, !noundef !24
  %27 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !4615
  %28 = load i64, ptr %27, align 8, !dbg !4615, !range !4626, !noundef !24
  %29 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !4615
  %30 = load i64, ptr %29, align 8, !dbg !4615
  %31 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 0, !dbg !4615
  %32 = load i64, ptr %31, align 8, !dbg !4615, !range !4626, !noundef !24
  %33 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !4615
  %34 = load i64, ptr %33, align 8, !dbg !4615
  store i64 0, ptr %position.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i6, metadata !4627, metadata !DIExpression()), !dbg !4638
  store i32 32, ptr %fill.dbg.spill.i5, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i5, metadata !4633, metadata !DIExpression()), !dbg !4640
  store i8 %26, ptr %align.dbg.spill.i4, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i4, metadata !4634, metadata !DIExpression()), !dbg !4641
  store i32 4, ptr %flags.dbg.spill.i3, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i3, metadata !4635, metadata !DIExpression()), !dbg !4642
  store i64 %28, ptr %precision.dbg.spill.i2, align 8
  %35 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i2, i32 0, i32 1
  store i64 %30, ptr %35, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i2, metadata !4636, metadata !DIExpression()), !dbg !4643
  store i64 %32, ptr %width.dbg.spill.i1, align 8
  %36 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i1, i32 0, i32 1
  store i64 %34, ptr %36, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i1, metadata !4637, metadata !DIExpression()), !dbg !4644
  %37 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 2, !dbg !4645
  store i64 0, ptr %37, align 8, !dbg !4645
  %38 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 3, !dbg !4645
  store i32 32, ptr %38, align 8, !dbg !4645
  %39 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 5, !dbg !4645
  store i8 %26, ptr %39, align 8, !dbg !4645
  %40 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 4, !dbg !4645
  store i32 4, ptr %40, align 4, !dbg !4645
  store i64 %28, ptr %_17, align 8, !dbg !4645
  %41 = getelementptr inbounds { i64, i64 }, ptr %_17, i32 0, i32 1, !dbg !4645
  store i64 %30, ptr %41, align 8, !dbg !4645
  %42 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 1, !dbg !4645
  store i64 %32, ptr %42, align 8, !dbg !4645
  %43 = getelementptr inbounds { i64, i64 }, ptr %42, i32 0, i32 1, !dbg !4645
  store i64 %34, ptr %43, align 8, !dbg !4645
  store i8 3, ptr %_22, align 1, !dbg !4615
  store i64 2, ptr %_23, align 8, !dbg !4615
  store i64 2, ptr %_24, align 8, !dbg !4615
  %44 = load i8, ptr %_22, align 1, !dbg !4615, !range !4625, !noundef !24
  %45 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !4615
  %46 = load i64, ptr %45, align 8, !dbg !4615, !range !4626, !noundef !24
  %47 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !4615
  %48 = load i64, ptr %47, align 8, !dbg !4615
  %49 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 0, !dbg !4615
  %50 = load i64, ptr %49, align 8, !dbg !4615, !range !4626, !noundef !24
  %51 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 1, !dbg !4615
  %52 = load i64, ptr %51, align 8, !dbg !4615
  store i64 1, ptr %position.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i, metadata !4627, metadata !DIExpression()), !dbg !4646
  store i32 32, ptr %fill.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i, metadata !4633, metadata !DIExpression()), !dbg !4648
  store i8 %44, ptr %align.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !4634, metadata !DIExpression()), !dbg !4649
  store i32 4, ptr %flags.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i, metadata !4635, metadata !DIExpression()), !dbg !4650
  store i64 %46, ptr %precision.dbg.spill.i, align 8
  %53 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i, i32 0, i32 1
  store i64 %48, ptr %53, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i, metadata !4636, metadata !DIExpression()), !dbg !4651
  store i64 %50, ptr %width.dbg.spill.i, align 8
  %54 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i, i32 0, i32 1
  store i64 %52, ptr %54, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i, metadata !4637, metadata !DIExpression()), !dbg !4652
  %55 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 2, !dbg !4653
  store i64 1, ptr %55, align 8, !dbg !4653
  %56 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 3, !dbg !4653
  store i32 32, ptr %56, align 8, !dbg !4653
  %57 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 5, !dbg !4653
  store i8 %44, ptr %57, align 8, !dbg !4653
  %58 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 4, !dbg !4653
  store i32 4, ptr %58, align 4, !dbg !4653
  store i64 %46, ptr %_21, align 8, !dbg !4653
  %59 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 1, !dbg !4653
  store i64 %48, ptr %59, align 8, !dbg !4653
  %60 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 1, !dbg !4653
  store i64 %50, ptr %60, align 8, !dbg !4653
  %61 = getelementptr inbounds { i64, i64 }, ptr %60, i32 0, i32 1, !dbg !4653
  store i64 %52, ptr %61, align 8, !dbg !4653
  %62 = getelementptr inbounds [2 x %"core::fmt::rt::Placeholder"], ptr %_16, i64 0, i64 0, !dbg !4615
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %62, ptr align 8 %_17, i64 56, i1 false), !dbg !4615
  %63 = getelementptr inbounds [2 x %"core::fmt::rt::Placeholder"], ptr %_16, i64 0, i64 1, !dbg !4615
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %63, ptr align 8 %_21, i64 56, i1 false), !dbg !4615
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17ha7dc9f46a2c1bbf8E(ptr sret(%"core::fmt::Arguments<'_>") %_3, ptr align 8 @alloc_b835a9d6c252fc7d7d9309678c4406b9, i64 3, ptr align 8 %_7, i64 2, ptr align 8 %_16, i64 2) #10, !dbg !4615
; call core::fmt::Formatter::write_fmt
  %64 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hcb7318ac88edab2bE(ptr align 8 %f, ptr %_3) #10, !dbg !4615
  ret i1 %64, !dbg !4654
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::convert::From<bootloader::bootinfo::memory_map::E820MemoryRegion>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17h2548eb176786aa14E"(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %region) unnamed_addr #1 !dbg !4655 {
start:
  %f.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i1 = alloca ptr, align 8
  %1 = alloca { ptr, ptr }, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %_9 = alloca [1 x { ptr, ptr }], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %t = alloca i32, align 4
  %region_type = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4666, metadata !DIExpression()), !dbg !4671
  call void @llvm.dbg.declare(metadata ptr %region_type, metadata !4667, metadata !DIExpression()), !dbg !4672
  call void @llvm.dbg.declare(metadata ptr %t, metadata !4669, metadata !DIExpression()), !dbg !4673
  %2 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4674
  %3 = load i32, ptr %2, align 8, !dbg !4674, !noundef !24
  switch i32 %3, label %bb1 [
    i32 1, label %bb2
    i32 2, label %bb3
    i32 3, label %bb4
    i32 4, label %bb5
    i32 5, label %bb6
  ], !dbg !4674

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4675
  %5 = load i32, ptr %4, align 8, !dbg !4675, !noundef !24
  store i32 %5, ptr %t, align 4, !dbg !4675
  store ptr %t, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !4676, metadata !DIExpression()), !dbg !4682
  store ptr %t, ptr %x.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i1, metadata !4684, metadata !DIExpression()), !dbg !4692
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h7135f90cf42e8d03E", ptr %f.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i, metadata !4691, metadata !DIExpression()), !dbg !4694
  store ptr %t, ptr %1, align 8, !dbg !4695
  %6 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !4695
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h7135f90cf42e8d03E", ptr %6, align 8, !dbg !4695
  %7 = load ptr, ptr %1, align 8, !dbg !4696, !nonnull !24, !align !2328, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !4696
  %9 = load ptr, ptr %8, align 8, !dbg !4696, !nonnull !24, !noundef !24
  %10 = insertvalue { ptr, ptr } poison, ptr %7, 0, !dbg !4696
  %11 = insertvalue { ptr, ptr } %10, ptr %9, 1, !dbg !4696
  %12 = extractvalue { ptr, ptr } %11, 0, !dbg !4697
  %13 = extractvalue { ptr, ptr } %11, 1, !dbg !4697
  %_10.0 = extractvalue { ptr, ptr } %11, 0, !dbg !4698
  %_10.1 = extractvalue { ptr, ptr } %11, 1, !dbg !4698
  %14 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_9, i64 0, i64 0, !dbg !4698
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0, !dbg !4698
  store ptr %_10.0, ptr %15, align 8, !dbg !4698
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1, !dbg !4698
  store ptr %_10.1, ptr %16, align 8, !dbg !4698
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hd805826023b59a70E(ptr sret(%"core::fmt::Arguments<'_>") %_5, ptr align 8 @alloc_0a0c8f921f96ace4b9d73a9fb1f3a7e8, i64 1, ptr align 8 %_9, i64 1) #10, !dbg !4698
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h2c59f66d276f88adE(ptr %_5, ptr align 8 @alloc_7aa2ce3965daa798a811db4359705d8b) #11, !dbg !4698
  unreachable, !dbg !4698

bb2:                                              ; preds = %start
  store i32 0, ptr %region_type, align 4, !dbg !4699
  br label %bb9, !dbg !4699

bb3:                                              ; preds = %start
  store i32 2, ptr %region_type, align 4, !dbg !4700
  br label %bb9, !dbg !4700

bb4:                                              ; preds = %start
  store i32 3, ptr %region_type, align 4, !dbg !4701
  br label %bb9, !dbg !4701

bb5:                                              ; preds = %start
  store i32 4, ptr %region_type, align 4, !dbg !4702
  br label %bb9, !dbg !4702

bb6:                                              ; preds = %start
  store i32 5, ptr %region_type, align 4, !dbg !4703
  br label %bb9, !dbg !4703

bb9:                                              ; preds = %bb2, %bb3, %bb4, %bb5, %bb6
  %_13 = load i64, ptr %region, align 8, !dbg !4704, !noundef !24
  %_15 = load i64, ptr %region, align 8, !dbg !4705, !noundef !24
  %17 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 1, !dbg !4706
  %_16 = load i64, ptr %17, align 8, !dbg !4706, !noundef !24
  %18 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 %_16), !dbg !4705
  %_17.0 = extractvalue { i64, i1 } %18, 0, !dbg !4705
  %_17.1 = extractvalue { i64, i1 } %18, 1, !dbg !4705
  %19 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !4705
  br i1 %19, label %panic, label %bb10, !dbg !4705

bb10:                                             ; preds = %bb9
; call bootloader::bootinfo::memory_map::FrameRange::new
  %20 = call { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17hb55906efac1efc89E(i64 %_13, i64 %_17.0) #10, !dbg !4707
  %_12.0 = extractvalue { i64, i64 } %20, 0, !dbg !4707
  %_12.1 = extractvalue { i64, i64 } %20, 1, !dbg !4707
  %_18 = load i32, ptr %region_type, align 4, !dbg !4708, !range !4536, !noundef !24
  %21 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4709
  store i64 %_12.0, ptr %21, align 8, !dbg !4709
  %22 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4709
  store i64 %_12.1, ptr %22, align 8, !dbg !4709
  %23 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4709
  store i32 %_18, ptr %23, align 8, !dbg !4709
  ret void, !dbg !4710

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_82eaa0d65834937aa85ffd9cf79e73a5) #11, !dbg !4705
  unreachable, !dbg !4705
}

; bootloader::bootinfo::BootInfo::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo3new17h65a57936dc8f0d53E(ptr sret(%"bootinfo::BootInfo") %0, ptr %memory_map, ptr %tls_template, i64 %recursive_page_table_addr, i64 %physical_memory_offset) unnamed_addr #1 !dbg !4711 {
start:
  %1 = alloca %"core::option::Option<bootinfo::TlsTemplate>", align 8
  %physical_memory_offset.dbg.spill = alloca i64, align 8
  %recursive_page_table_addr.dbg.spill = alloca i64, align 8
  %_7 = alloca %"bootinfo::TlsTemplate", align 8
  %_6 = alloca %"bootinfo::TlsTemplate", align 8
  %tls_template1 = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %memory_map, metadata !4722, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.declare(metadata ptr %tls_template, metadata !4723, metadata !DIExpression()), !dbg !4729
  store i64 %recursive_page_table_addr, ptr %recursive_page_table_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %recursive_page_table_addr.dbg.spill, metadata !4724, metadata !DIExpression()), !dbg !4730
  store i64 %physical_memory_offset, ptr %physical_memory_offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %physical_memory_offset.dbg.spill, metadata !4725, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.declare(metadata ptr %tls_template1, metadata !4726, metadata !DIExpression()), !dbg !4732
  store i64 0, ptr %_6, align 8, !dbg !4733
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 1, !dbg !4733
  store i64 0, ptr %2, align 8, !dbg !4733
  %3 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 2, !dbg !4733
  store i64 0, ptr %3, align 8, !dbg !4733
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %tls_template, i64 32, i1 false), !dbg !4734
; call core::option::Option<T>::unwrap_or
  call void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hb7f51dd5acc03708E"(ptr sret(%"bootinfo::TlsTemplate") %tls_template1, ptr %1, ptr %_6) #10, !dbg !4734
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tls_template1, i64 24, i1 false), !dbg !4735
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %memory_map, i64 1544, i1 false), !dbg !4736
  %4 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 1, !dbg !4736
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_7, i64 24, i1 false), !dbg !4736
  %5 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 2, !dbg !4736
  store i8 0, ptr %5, align 8, !dbg !4736
  ret void, !dbg !4737
}

; bootloader::bootinfo::BootInfo::tls_template
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo12tls_template17h2c1f2a1e21522fd6E(ptr sret(%"core::option::Option<bootinfo::TlsTemplate>") %0, ptr align 8 %self) unnamed_addr #1 !dbg !4738 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"bootinfo::TlsTemplate", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4744, metadata !DIExpression()), !dbg !4745
  %1 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4746
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %1, i32 0, i32 2, !dbg !4746
  %_3 = load i64, ptr %2, align 8, !dbg !4746, !noundef !24
  %_2 = icmp ugt i64 %_3, 0, !dbg !4746
  br i1 %_2, label %bb1, label %bb2, !dbg !4746

bb2:                                              ; preds = %start
  store i64 0, ptr %0, align 8, !dbg !4747
  br label %bb3, !dbg !4748

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4749
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %3, i64 24, i1 false), !dbg !4749
  %4 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %0, i32 0, i32 1, !dbg !4750
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_4, i64 24, i1 false), !dbg !4750
  store i64 1, ptr %0, align 8, !dbg !4750
  br label %bb3, !dbg !4748

bb3:                                              ; preds = %bb2, %bb1
  ret void, !dbg !4751
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17hffa72bdc7f4aaa40E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4752 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4757, metadata !DIExpression()), !dbg !4759
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4758, metadata !DIExpression()), !dbg !4759
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4760
  store ptr %0, ptr %_10, align 8, !dbg !4760
; call core::fmt::Formatter::debug_struct_field2_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hbd5899068aa8e699E(ptr align 8 %f, ptr align 1 @alloc_2fa382d66c8b05cee83d1e636a456d83, i64 12, ptr align 1 @alloc_c6d312f4fb2564cdde1868738b40e953, i64 5, ptr align 1 %self, ptr align 8 @vtable.7, ptr align 1 @alloc_24a09d864e93eaea8a967d85ad5fb14b, i64 11, ptr align 1 %_10, ptr align 8 @vtable.8) #10, !dbg !4759
  ret i1 %1, !dbg !4761
}

; <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17hd446ef1bbee7b292E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4762 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_3 = alloca { ptr, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4767, metadata !DIExpression()), !dbg !4769
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4768, metadata !DIExpression()), !dbg !4769
  %0 = load i32, ptr %self, align 4, !dbg !4769, !range !4536, !noundef !24
  %_4 = zext i32 %0 to i64, !dbg !4769
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
    i64 10, label %bb13
    i64 11, label %bb14
    i64 12, label %bb15
    i64 13, label %bb16
    i64 14, label %bb1
  ], !dbg !4769

bb2:                                              ; preds = %start
  unreachable, !dbg !4769

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_3c5b86a9b7fa1d302afea08936e483c5, ptr %1, align 8, !dbg !4769
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 6, ptr %2, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_3e93a37ed61282b1c76f7355bd470201, ptr %3, align 8, !dbg !4769
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 5, ptr %4, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb5:                                              ; preds = %start
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_f09f4d0dabebc98449d61db8d60067bb, ptr %5, align 8, !dbg !4769
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 8, ptr %6, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb6:                                              ; preds = %start
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_405580fa38aa12693d369698203e043e, ptr %7, align 8, !dbg !4769
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 15, ptr %8, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb7:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_497f8f871d9b9bd5767a37917b988618, ptr %9, align 8, !dbg !4769
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 7, ptr %10, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb8:                                              ; preds = %start
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_2db2f360d33be2fea5593ededc5fb904, ptr %11, align 8, !dbg !4769
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 9, ptr %12, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb9:                                              ; preds = %start
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_bfff067230aa23bc581d3ad54a803735, ptr %13, align 8, !dbg !4769
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 6, ptr %14, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb10:                                             ; preds = %start
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_272cabb5c5fb66cc8e055c6a08dd5a38, ptr %15, align 8, !dbg !4769
  %16 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 11, ptr %16, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb11:                                             ; preds = %start
  %17 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_84113867da1e74b2269b5cf897cae626, ptr %17, align 8, !dbg !4769
  %18 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 9, ptr %18, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb12:                                             ; preds = %start
  %19 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_88f77a4216025d9c2616c4e0631b580d, ptr %19, align 8, !dbg !4769
  %20 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 10, ptr %20, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb13:                                             ; preds = %start
  %21 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_296c708f84ba4aacbf601faaf01ee90e, ptr %21, align 8, !dbg !4769
  %22 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 9, ptr %22, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb14:                                             ; preds = %start
  %23 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_59ba7b9f7211443cd55a366616eef46a, ptr %23, align 8, !dbg !4769
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 5, ptr %24, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb15:                                             ; preds = %start
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_1f9c4cc73f4140a97f2cf1f721646a68, ptr %25, align 8, !dbg !4769
  %26 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 8, ptr %26, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb16:                                             ; preds = %start
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_3faf0b3374c02c8ecbb0aba47045e793, ptr %27, align 8, !dbg !4769
  %28 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 7, ptr %28, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb1:                                              ; preds = %start
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  store ptr @alloc_4f458a5ac3a6382b3750f993ab870080, ptr %29, align 8, !dbg !4769
  %30 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  store i64 13, ptr %30, align 8, !dbg !4769
  br label %bb17, !dbg !4770

bb17:                                             ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb14, %bb15, %bb16, %bb1
  %31 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4769
  %32 = load ptr, ptr %31, align 8, !dbg !4769, !nonnull !24, !align !2328, !noundef !24
  %33 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4769
  %34 = load i64, ptr %33, align 8, !dbg !4769, !noundef !24
; call core::fmt::Formatter::write_str
  %35 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h342b4906ee22c656E(ptr align 8 %f, ptr align 1 %32, i64 %34) #10, !dbg !4769
  ret i1 %35, !dbg !4771
}

; <bootloader::bootinfo::memory_map::E820MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h60556f8b5704cfd9E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4772 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_16 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4778, metadata !DIExpression()), !dbg !4780
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4779, metadata !DIExpression()), !dbg !4780
  %_9 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4781
  %_12 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 2, !dbg !4782
  %0 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 3, !dbg !4783
  store ptr %0, ptr %_16, align 8, !dbg !4783
; call core::fmt::Formatter::debug_struct_field4_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17h1f4cf05c6704d5b0E(ptr align 8 %f, ptr align 1 @alloc_bee533f45c59e636f24e3b92e9dcf8a1, i64 16, ptr align 1 @alloc_e896abd190c076ac3d64221d9ae37a51, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc_f92b1a49cd2fef011d7606f6333298f2, i64 3, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc_24a09d864e93eaea8a967d85ad5fb14b, i64 11, ptr align 1 %_12, ptr align 8 @vtable.a, ptr align 1 @alloc_3453f215b747c0edd0eebf0fbcea5172, i64 24, ptr align 1 %_16, ptr align 8 @vtable.b) #10, !dbg !4780
  ret i1 %1, !dbg !4784
}

; <bootloader::bootinfo::BootInfo as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0b168d1c2f1ce0eE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4785 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4790, metadata !DIExpression()), !dbg !4792
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4791, metadata !DIExpression()), !dbg !4792
  %_9 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4793
  %0 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 2, !dbg !4794
  store ptr %0, ptr %_13, align 8, !dbg !4794
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h10c3000328824c80E(ptr align 8 %f, ptr align 1 @alloc_1f9c4cc73f4140a97f2cf1f721646a68, i64 8, ptr align 1 @alloc_9edc7a92f8d25561ab6dc7613f63189d, i64 10, ptr align 1 %self, ptr align 8 @vtable.c, ptr align 1 @alloc_1cbcc15d14c439465e35578ac36229c9, i64 12, ptr align 1 %_9, ptr align 8 @vtable.d, ptr align 1 @alloc_b0bb0c7a0f8be091d3fc1c11116fce9b, i64 15, ptr align 1 %_13, ptr align 8 @vtable.e) #10, !dbg !4792
  ret i1 %1, !dbg !4795
}

; <bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h3b4e7e8c05b9f9a9E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4796 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4802, metadata !DIExpression()), !dbg !4804
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4803, metadata !DIExpression()), !dbg !4804
  %_9 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 1, !dbg !4805
  %0 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 2, !dbg !4806
  store ptr %0, ptr %_13, align 8, !dbg !4806
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h10c3000328824c80E(ptr align 8 %f, ptr align 1 @alloc_db9f6246386b35b655b2a4a0bfe4b5d7, i64 11, ptr align 1 @alloc_e896abd190c076ac3d64221d9ae37a51, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc_586126a6b84f2dd36fa1e3b3e4c38ef1, i64 9, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc_6a7e1d6cb9743b05f95a08c478d87c6e, i64 8, ptr align 1 %_13, ptr align 8 @vtable.f) #10, !dbg !4804
  ret i1 %1, !dbg !4807
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking14panic_nounwind17h91025db35e83f9c9E(ptr align 1, i64) unnamed_addr #5

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17h61be5a26ab624234E(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h8ccbdf9bc164ace1E(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h6ac11069eb8eb4c2E(i64, i64, ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint noredzone nounwind
declare align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17hf67062cccc0218c7E"(ptr align 8) unnamed_addr #0

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17h4900bd12740a8a2aE(ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #6

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint noredzone nounwind
declare void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h1362291682ec083eE"(ptr sret(%"core::ops::range::RangeInclusive<usize>"), i64, i64) unnamed_addr #0

; core::option::Option<T>::expect
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h256471b5283470d7E"(i64, i64, ptr align 1, i64, ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #7

; core::panicking::panic
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking5panic17h38d135543837e8b5E(ptr align 1, i64, ptr align 8) unnamed_addr #5

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha237a7dc52462221E(ptr) unnamed_addr #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #6

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h7135f90cf42e8d03E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17he220ad367d7178a1E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h53369918fec5ec93E(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17hb81d13d043ef51c9E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h13f9b58d1d513253E(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h5c2128be05ede0f4E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h7a51490cd6e4a166E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hf7f02d87d7b2883bE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: noredzone nounwind
declare align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h7cd86476249c3b94E(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; core::panicking::panic_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking9panic_fmt17h2c59f66d276f88adE(ptr, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha77942feabfa5a64E(ptr) unnamed_addr #1

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17h19f02e7819179f59E(i64, i64, ptr align 8) unnamed_addr #5

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2035deb76a1d3e4fE"(i64, i64) unnamed_addr #0

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3ed0813fa7c9be69E"(ptr align 8) unnamed_addr #0

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h4de59405b16b1113E(i64, i64) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd993dff03141e9f4E"(i64, i64) unnamed_addr #0

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfa84b6e6f4b1a521E"(ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #8

; core::cmp::min
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3cmp3min17h49e6e73f5f098d4cE(i64, i64) unnamed_addr #0

; core::panicking::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking13assert_failed17h11d0847d25470d35E(i8, ptr align 8, ptr align 8, ptr, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #9

; core::fmt::Formatter::debug_list
; Function Attrs: noredzone nounwind
declare void @_ZN4core3fmt9Formatter10debug_list17he5d07e01f1d5d034E(ptr sret(%"core::fmt::builders::DebugList<'_, '_>"), ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hf52ba88e24d132f6E(ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hcb7318ac88edab2bE(ptr align 8, ptr) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hbd5899068aa8e699E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h342b4906ee22c656E(ptr align 8, ptr align 1, i64) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hdf56e56678bf286eE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field4_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17h1f4cf05c6704d5b0E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc9495f431ff21ccbE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field3_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h10c3000328824c80E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h31f4e2fb6db0b7ffE"(ptr align 8, ptr align 8) unnamed_addr #1

attributes #0 = { inlinehint noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #1 = { noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #2 = { cold noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #3 = { noinline noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { cold noinline noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #9 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!133, !134, !135}
!llvm.dbg.cu = !{!136}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !24, identifier: "d338a3c456565b9f94bd9ae2bcc38dfe")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !17, templateParams: !24, identifier: "f0528f709a6ad67947690eb30dd02688")
!14 = !DINamespace(name: "memory_map", scope: !15)
!15 = !DINamespace(name: "bootinfo", scope: !16)
!16 = !DINamespace(name: "bootloader", scope: null)
!17 = !{!18, !25}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !13, file: !2, baseType: !19, size: 128, align: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "FrameRange", scope: !14, file: !2, size: 128, align: 64, elements: !20, templateParams: !24, identifier: "a1dc4b4abf9583d027336f6bfa7a291e")
!20 = !{!21, !23}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64)
!22 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!24 = !{}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !13, file: !2, baseType: !26, size: 32, align: 32, offset: 128)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MemoryRegionType", scope: !14, file: !2, baseType: !27, size: 32, align: 32, flags: DIFlagEnumClass, elements: !28)
!27 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43}
!29 = !DIEnumerator(name: "Usable", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "InUse", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "Reserved", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "AcpiReclaimable", value: 3, isUnsigned: true)
!33 = !DIEnumerator(name: "AcpiNvs", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "BadMemory", value: 5, isUnsigned: true)
!35 = !DIEnumerator(name: "Kernel", value: 6, isUnsigned: true)
!36 = !DIEnumerator(name: "KernelStack", value: 7, isUnsigned: true)
!37 = !DIEnumerator(name: "PageTable", value: 8, isUnsigned: true)
!38 = !DIEnumerator(name: "Bootloader", value: 9, isUnsigned: true)
!39 = !DIEnumerator(name: "FrameZero", value: 10, isUnsigned: true)
!40 = !DIEnumerator(name: "Empty", value: 11, isUnsigned: true)
!41 = !DIEnumerator(name: "BootInfo", value: 12, isUnsigned: true)
!42 = !DIEnumerator(name: "Package", value: 13, isUnsigned: true)
!43 = !DIEnumerator(name: "NonExhaustive", value: 14, isUnsigned: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !46, isLocal: true, isDefinition: true)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !47, vtableHolder: !19, templateParams: !24, identifier: "39f07cf84e498bbefa75f9081bef9b98")
!47 = !{!48, !49, !50, !51}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !46, file: !2, baseType: !6, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !46, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !54, isLocal: true, isDefinition: true)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !55, vtableHolder: !60, templateParams: !24, identifier: "d6faa0dd6a491d661a24d71375576beb")
!55 = !{!56, !57, !58, !59}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !54, file: !2, baseType: !6, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !54, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !26, size: 64, align: 64, dwarfAddressSpace: 0)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "<u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !63, isLocal: true, isDefinition: true)
!63 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !64, vtableHolder: !22, templateParams: !24, identifier: "43ac3c47b15bc2bea988afcce061857a")
!64 = !{!65, !66, !67, !68}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !63, file: !2, baseType: !6, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !63, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!69 = !DIGlobalVariableExpression(var: !70, expr: !DIExpression())
!70 = distinct !DIGlobalVariable(name: "<u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !71, isLocal: true, isDefinition: true)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !72, vtableHolder: !27, templateParams: !24, identifier: "628fbe63c6e26fc61e4c1617fd00d1c")
!72 = !{!73, !74, !75, !76}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !71, file: !2, baseType: !6, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !71, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!77 = !DIGlobalVariableExpression(var: !78, expr: !DIExpression())
!78 = distinct !DIGlobalVariable(name: "<&u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !79, isLocal: true, isDefinition: true)
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !80, vtableHolder: !85, templateParams: !24, identifier: "3203d7256f2bb169fa787e8debf6a410")
!80 = !{!81, !82, !83, !84}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !79, file: !2, baseType: !6, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !79, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !88, isLocal: true, isDefinition: true)
!88 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !89, vtableHolder: !94, templateParams: !24, identifier: "77f2d477e5d708c8638932eadf3683d0")
!89 = !{!90, !91, !92, !93}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !88, file: !2, baseType: !6, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !88, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!94 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryMap", scope: !14, file: !2, size: 12352, align: 64, elements: !95, templateParams: !24, identifier: "5c67e83b94cfbfae793b30b5cd61017d")
!95 = !{!96, !100}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !94, file: !2, baseType: !97, size: 12288, align: 64)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 12288, align: 64, elements: !98)
!98 = !{!99}
!99 = !DISubrange(count: 64, lowerBound: 0)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "next_entry_index", scope: !94, file: !2, baseType: !22, size: 64, align: 64, offset: 12288)
!101 = !DIGlobalVariableExpression(var: !102, expr: !DIExpression())
!102 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !103, isLocal: true, isDefinition: true)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !104, vtableHolder: !109, templateParams: !24, identifier: "7faa38b0edbee9a6366305feab823b65")
!104 = !{!105, !106, !107, !108}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !103, file: !2, baseType: !6, size: 64, align: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !103, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!109 = !DICompositeType(tag: DW_TAG_structure_type, name: "TlsTemplate", scope: !15, file: !2, size: 192, align: 64, elements: !110, templateParams: !24, identifier: "ead8a49ffd209c5edded7b9b6264030")
!110 = !{!111, !112, !113}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !109, file: !2, baseType: !22, size: 64, align: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "file_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "mem_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 128)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "<&u8 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !116, isLocal: true, isDefinition: true)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u8 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !117, vtableHolder: !122, templateParams: !24, identifier: "d69a1af1af19a66bd483394c940e3e1a")
!117 = !{!118, !119, !120, !121}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !116, file: !2, baseType: !6, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !116, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!123 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "<&u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !126, isLocal: true, isDefinition: true)
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !127, vtableHolder: !132, templateParams: !24, identifier: "382f3634b96fdc3281a0e72c9b4e4b43")
!127 = !{!128, !129, !130, !131}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !126, file: !2, baseType: !6, size: 64, align: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !126, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!133 = !{i32 8, !"PIC Level", i32 2}
!134 = !{i32 2, !"Dwarf Version", i32 4}
!135 = !{i32 2, !"Debug Info Version", i32 3}
!136 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !137, producer: "clang LLVM (rustc version 1.71.0-nightly (5ea3f0ae0 2023-05-23))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !138, globals: !161, splitDebugInlining: false)
!137 = !DIFile(filename: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/lib.rs/@/bootloader.dd1f7e83ceca872c-cgu.0", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23")
!138 = !{!26, !139, !148, !155}
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !140, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !143)
!140 = !DINamespace(name: "rt", scope: !141)
!141 = !DINamespace(name: "fmt", scope: !142)
!142 = !DINamespace(name: "core", scope: null)
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !149, file: !2, baseType: !150, size: 8, align: 8, flags: DIFlagEnumClass, elements: !151)
!149 = !DINamespace(name: "cmp", scope: !142)
!150 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!151 = !{!152, !153, !154}
!152 = !DIEnumerator(name: "Less", value: -1)
!153 = !DIEnumerator(name: "Equal", value: 0)
!154 = !DIEnumerator(name: "Greater", value: 1)
!155 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !156, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !157)
!156 = !DINamespace(name: "panicking", scope: !142)
!157 = !{!158, !159, !160}
!158 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!159 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!161 = !{!0, !44, !52, !61, !69, !77, !86, !101, !114, !124}
!162 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h7e7668d57ecf7c1cE", scope: !164, file: !163, line: 371, type: !167, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !182)
!163 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "d107e626d2145c8c7d098a7b217e6306")
!164 = !DINamespace(name: "{impl#4}", scope: !165)
!165 = !DINamespace(name: "index", scope: !166)
!166 = !DINamespace(name: "slice", scope: !142)
!167 = !DISubroutineType(types: !168)
!168 = !{!169, !174, !169}
!169 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !170, templateParams: !24, identifier: "ed9f34e5f5a827d7e4f8933d51b1607d")
!170 = !{!171, !173}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !169, file: !2, baseType: !172, size: 64, align: 64)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !169, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!174 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !175, file: !2, size: 128, align: 64, elements: !177, templateParams: !180, identifier: "1f8bc2272e64a96da1c0d704b5981322")
!175 = !DINamespace(name: "range", scope: !176)
!176 = !DINamespace(name: "ops", scope: !142)
!177 = !{!178, !179}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !174, file: !2, baseType: !9, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !174, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!180 = !{!181}
!181 = !DITemplateTypeParameter(name: "Idx", type: !9)
!182 = !{!183, !184, !185, !187}
!183 = !DILocalVariable(name: "self", arg: 1, scope: !162, file: !163, line: 371, type: !174)
!184 = !DILocalVariable(name: "slice", arg: 2, scope: !162, file: !163, line: 371, type: !169)
!185 = !DILocalVariable(name: "this", scope: !186, file: !163, line: 372, type: !174, align: 8)
!186 = distinct !DILexicalBlock(scope: !162, file: !163, line: 372, column: 9)
!187 = !DILocalVariable(name: "new_len", scope: !188, file: !163, line: 383, type: !9, align: 8)
!188 = distinct !DILexicalBlock(scope: !186, file: !163, line: 383, column: 13)
!189 = !{!190}
!190 = !DITemplateTypeParameter(name: "T", type: !13)
!191 = !DILocation(line: 371, column: 29, scope: !162)
!192 = !DILocation(line: 371, column: 35, scope: !162)
!193 = !DILocation(line: 372, column: 13, scope: !186)
!194 = !DILocation(line: 372, column: 20, scope: !162)
!195 = !DILocation(line: 378, column: 13, scope: !186)
!196 = !DILocation(line: 383, column: 27, scope: !186)
!197 = !DILocation(line: 383, column: 17, scope: !188)
!198 = !DILocation(line: 384, column: 39, scope: !188)
!199 = !DILocalVariable(name: "self", arg: 1, scope: !200, file: !201, line: 915, type: !207)
!200 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h0ddf10eff83ee4e5E", scope: !202, file: !201, line: 915, type: !205, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !208)
!201 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "9d2fad04a90e20289542de49bd178aec")
!202 = !DINamespace(name: "{impl#0}", scope: !203)
!203 = !DINamespace(name: "const_ptr", scope: !204)
!204 = !DINamespace(name: "ptr", scope: !142)
!205 = !DISubroutineType(types: !206)
!206 = !{!207, !207, !9}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!208 = !{!199, !209}
!209 = !DILocalVariable(name: "count", arg: 2, scope: !200, file: !201, line: 915, type: !9)
!210 = !DILocation(line: 915, column: 29, scope: !200, inlinedAt: !211)
!211 = distinct !DILocation(line: 384, column: 39, scope: !188)
!212 = !DILocation(line: 915, column: 35, scope: !200, inlinedAt: !211)
!213 = !DILocation(line: 927, column: 13, scope: !200, inlinedAt: !211)
!214 = !DILocation(line: 384, column: 13, scope: !188)
!215 = !DILocation(line: 386, column: 6, scope: !162)
!216 = !DILocalVariable(name: "this", arg: 1, scope: !217, file: !218, line: 2517, type: !174)
!217 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h1119e31b604a5b7dE", scope: !219, file: !218, line: 2517, type: !220, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !222)
!218 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "056d7d4c1b797c272c70fdc2c35793d9")
!219 = !DINamespace(name: "get_unchecked", scope: !164)
!220 = !DISubroutineType(types: !221)
!221 = !{null, !174, !169}
!222 = !{!216, !223}
!223 = !DILocalVariable(name: "slice", arg: 2, scope: !217, file: !218, line: 2517, type: !169)
!224 = !DILocation(line: 2517, column: 39, scope: !217, inlinedAt: !225)
!225 = distinct !DILocation(line: 378, column: 13, scope: !186)
!226 = !DILocation(line: 381, column: 17, scope: !227, inlinedAt: !225)
!227 = !DILexicalBlockFile(scope: !217, file: !163, discriminator: 0)
!228 = !DILocation(line: 381, column: 55, scope: !227, inlinedAt: !225)
!229 = !DILocation(line: 381, column: 43, scope: !227, inlinedAt: !225)
!230 = !DILocation(line: 2518, column: 20, scope: !217, inlinedAt: !225)
!231 = !{i8 0, i8 2}
!232 = !DILocation(line: 2520, column: 21, scope: !217, inlinedAt: !225)
!233 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc050f2c8a207f4a1E", scope: !164, file: !163, line: 389, type: !234, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !240)
!234 = !DISubroutineType(types: !235)
!235 = !{!236, !174, !236}
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !237, templateParams: !24, identifier: "fcba9ba56e590367da4706e9f89ee07c")
!237 = !{!238, !239}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !236, file: !2, baseType: !172, size: 64, align: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !236, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!240 = !{!241, !242, !243, !245}
!241 = !DILocalVariable(name: "self", arg: 1, scope: !233, file: !163, line: 389, type: !174)
!242 = !DILocalVariable(name: "slice", arg: 2, scope: !233, file: !163, line: 389, type: !236)
!243 = !DILocalVariable(name: "this", scope: !244, file: !163, line: 390, type: !174, align: 8)
!244 = distinct !DILexicalBlock(scope: !233, file: !163, line: 390, column: 9)
!245 = !DILocalVariable(name: "new_len", scope: !246, file: !163, line: 398, type: !9, align: 8)
!246 = distinct !DILexicalBlock(scope: !244, file: !163, line: 398, column: 13)
!247 = !DILocation(line: 389, column: 33, scope: !233)
!248 = !DILocation(line: 389, column: 39, scope: !233)
!249 = !DILocation(line: 390, column: 13, scope: !244)
!250 = !DILocation(line: 390, column: 20, scope: !233)
!251 = !DILocation(line: 393, column: 13, scope: !244)
!252 = !DILocation(line: 398, column: 27, scope: !244)
!253 = !DILocation(line: 398, column: 17, scope: !246)
!254 = !DILocalVariable(name: "self", arg: 1, scope: !255, file: !256, line: 2032, type: !236)
!255 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h3f6cc3e4800437cdE", scope: !257, file: !256, line: 2032, type: !259, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !262)
!256 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "e30cd97e1a51e29e3c486707e67aff9a")
!257 = !DINamespace(name: "{impl#1}", scope: !258)
!258 = !DINamespace(name: "mut_ptr", scope: !204)
!259 = !DISubroutineType(types: !260)
!260 = !{!261, !236}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!262 = !{!254}
!263 = !DILocation(line: 2032, column: 29, scope: !255, inlinedAt: !264)
!264 = distinct !DILocation(line: 399, column: 43, scope: !246)
!265 = !DILocalVariable(name: "self", arg: 1, scope: !266, file: !256, line: 1025, type: !261)
!266 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf9ffa31e3f9e6673E", scope: !267, file: !256, line: 1025, type: !268, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !270)
!267 = !DINamespace(name: "{impl#0}", scope: !258)
!268 = !DISubroutineType(types: !269)
!269 = !{!261, !261, !9}
!270 = !{!265, !271}
!271 = !DILocalVariable(name: "count", arg: 2, scope: !266, file: !256, line: 1025, type: !9)
!272 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !273)
!273 = distinct !DILocation(line: 399, column: 43, scope: !246)
!274 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !273)
!275 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !273)
!276 = !DILocation(line: 399, column: 13, scope: !246)
!277 = !DILocation(line: 401, column: 6, scope: !233)
!278 = !DILocalVariable(name: "this", arg: 1, scope: !279, file: !218, line: 2517, type: !174)
!279 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17hca9f376a8cd4e937E", scope: !280, file: !218, line: 2517, type: !281, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !283)
!280 = !DINamespace(name: "get_unchecked_mut", scope: !164)
!281 = !DISubroutineType(types: !282)
!282 = !{null, !174, !236}
!283 = !{!278, !284}
!284 = !DILocalVariable(name: "slice", arg: 2, scope: !279, file: !218, line: 2517, type: !236)
!285 = !DILocation(line: 2517, column: 39, scope: !279, inlinedAt: !286)
!286 = distinct !DILocation(line: 393, column: 13, scope: !244)
!287 = !DILocation(line: 396, column: 17, scope: !288, inlinedAt: !286)
!288 = !DILexicalBlockFile(scope: !279, file: !163, discriminator: 0)
!289 = !DILocalVariable(name: "self", arg: 1, scope: !290, file: !256, line: 1896, type: !236)
!290 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h726a9b87ea12e028E", scope: !257, file: !256, line: 1896, type: !291, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{!9, !236}
!293 = !{!289}
!294 = !DILocation(line: 1896, column: 22, scope: !290, inlinedAt: !295)
!295 = distinct !DILocation(line: 396, column: 55, scope: !288, inlinedAt: !286)
!296 = !DILocation(line: 1897, column: 9, scope: !290, inlinedAt: !295)
!297 = !DILocation(line: 396, column: 43, scope: !288, inlinedAt: !286)
!298 = !DILocation(line: 2518, column: 20, scope: !279, inlinedAt: !286)
!299 = !DILocation(line: 2520, column: 21, scope: !279, inlinedAt: !286)
!300 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h67b1c80919143750E", scope: !164, file: !163, line: 404, type: !301, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !320)
!301 = !DISubroutineType(types: !302)
!302 = !{!303, !174, !303, !307}
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !304, templateParams: !24, identifier: "58be6fa269f20a39d2112c35cb80771")
!304 = !{!305, !306}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !303, file: !2, baseType: !172, size: 64, align: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !303, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !308, size: 64, align: 64, dwarfAddressSpace: 0)
!308 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !309, file: !2, size: 192, align: 64, elements: !311, templateParams: !24, identifier: "20ef1a484ea0863fc9e4151fe212b612")
!309 = !DINamespace(name: "location", scope: !310)
!310 = !DINamespace(name: "panic", scope: !142)
!311 = !{!312, !318, !319}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !308, file: !2, baseType: !313, size: 128, align: 64)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !314, templateParams: !24, identifier: "857c99401054bcaa39f98e6e0c6d74b")
!314 = !{!315, !317}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !313, file: !2, baseType: !316, size: 64, align: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !313, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !308, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !308, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!320 = !{!321, !322}
!321 = !DILocalVariable(name: "self", arg: 1, scope: !300, file: !163, line: 404, type: !174)
!322 = !DILocalVariable(name: "slice", arg: 2, scope: !300, file: !163, line: 404, type: !303)
!323 = !DILocation(line: 404, column: 14, scope: !300)
!324 = !DILocation(line: 404, column: 20, scope: !300)
!325 = !DILocation(line: 405, column: 12, scope: !300)
!326 = !DILocation(line: 407, column: 19, scope: !300)
!327 = !DILocation(line: 406, column: 13, scope: !300)
!328 = !DILocation(line: 411, column: 20, scope: !300)
!329 = !DILocation(line: 412, column: 6, scope: !300)
!330 = !DILocation(line: 408, column: 13, scope: !300)
!331 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha10120fffeb1e562E", scope: !164, file: !163, line: 415, type: !332, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !338)
!332 = !DISubroutineType(types: !333)
!333 = !{!334, !174, !334, !307}
!334 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !335, templateParams: !24, identifier: "9580a2b2ed58752e7a9e0764a361e463")
!335 = !{!336, !337}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !334, file: !2, baseType: !172, size: 64, align: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !334, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!338 = !{!339, !340}
!339 = !DILocalVariable(name: "self", arg: 1, scope: !331, file: !163, line: 415, type: !174)
!340 = !DILocalVariable(name: "slice", arg: 2, scope: !331, file: !163, line: 415, type: !334)
!341 = !DILocation(line: 415, column: 18, scope: !331)
!342 = !DILocation(line: 415, column: 24, scope: !331)
!343 = !DILocation(line: 416, column: 12, scope: !331)
!344 = !DILocation(line: 418, column: 19, scope: !331)
!345 = !DILocation(line: 417, column: 13, scope: !331)
!346 = !DILocation(line: 422, column: 24, scope: !331)
!347 = !DILocation(line: 423, column: 6, scope: !331)
!348 = !DILocation(line: 419, column: 13, scope: !331)
!349 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hbf77088feacd268fE", scope: !350, file: !163, line: 459, type: !351, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !356)
!350 = !DINamespace(name: "{impl#5}", scope: !165)
!351 = !DISubroutineType(types: !352)
!352 = !{!334, !353, !334, !307}
!353 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !175, file: !2, size: 64, align: 64, elements: !354, templateParams: !180, identifier: "d2d2efee66a1da732fca0ce30ce5af17")
!354 = !{!355}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !353, file: !2, baseType: !9, size: 64, align: 64)
!356 = !{!357, !358}
!357 = !DILocalVariable(name: "self", arg: 1, scope: !349, file: !163, line: 459, type: !353)
!358 = !DILocalVariable(name: "slice", arg: 2, scope: !349, file: !163, line: 459, type: !334)
!359 = !DILocation(line: 459, column: 18, scope: !349)
!360 = !DILocation(line: 459, column: 24, scope: !349)
!361 = !DILocation(line: 460, column: 9, scope: !349)
!362 = !DILocation(line: 461, column: 6, scope: !349)
!363 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hf70100c103a4d15fE", scope: !364, file: !163, line: 486, type: !365, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !370)
!364 = !DINamespace(name: "{impl#6}", scope: !165)
!365 = !DISubroutineType(types: !366)
!366 = !{!236, !367, !236}
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !175, file: !2, size: 64, align: 64, elements: !368, templateParams: !180, identifier: "5a2a83acfc798cb3412d13212fa7637d")
!368 = !{!369}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !367, file: !2, baseType: !9, size: 64, align: 64)
!370 = !{!371, !372}
!371 = !DILocalVariable(name: "self", arg: 1, scope: !363, file: !163, line: 486, type: !367)
!372 = !DILocalVariable(name: "slice", arg: 2, scope: !363, file: !163, line: 486, type: !236)
!373 = !DILocation(line: 486, column: 33, scope: !363)
!374 = !DILocation(line: 486, column: 39, scope: !363)
!375 = !DILocation(line: 1896, column: 22, scope: !290, inlinedAt: !376)
!376 = distinct !DILocation(line: 488, column: 31, scope: !363)
!377 = !DILocation(line: 1897, column: 9, scope: !290, inlinedAt: !376)
!378 = !DILocation(line: 488, column: 18, scope: !363)
!379 = !DILocation(line: 489, column: 6, scope: !363)
!380 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h269e9f2975c5869eE", scope: !364, file: !163, line: 501, type: !381, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !383)
!381 = !DISubroutineType(types: !382)
!382 = !{!334, !367, !334, !307}
!383 = !{!384, !385}
!384 = !DILocalVariable(name: "self", arg: 1, scope: !380, file: !163, line: 501, type: !367)
!385 = !DILocalVariable(name: "slice", arg: 2, scope: !380, file: !163, line: 501, type: !334)
!386 = !DILocation(line: 501, column: 18, scope: !380)
!387 = !DILocation(line: 501, column: 24, scope: !380)
!388 = !DILocation(line: 502, column: 12, scope: !380)
!389 = !DILocation(line: 506, column: 24, scope: !380)
!390 = !DILocation(line: 507, column: 6, scope: !380)
!391 = !DILocation(line: 503, column: 13, scope: !380)
!392 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4c1974e2bc7c8e54E", scope: !393, file: !163, line: 582, type: !394, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !402)
!393 = !DINamespace(name: "{impl#8}", scope: !165)
!394 = !DISubroutineType(types: !395)
!395 = !{!334, !396, !334, !307}
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !175, file: !2, size: 192, align: 64, elements: !397, templateParams: !180, identifier: "9b9ea0a06138ca3c8e73c7e7c6639237")
!397 = !{!398, !399, !400}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !396, file: !2, baseType: !9, size: 64, align: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !396, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !396, file: !2, baseType: !401, size: 8, align: 8, offset: 128)
!401 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!402 = !{!403, !404}
!403 = !DILocalVariable(name: "self", arg: 1, scope: !392, file: !163, line: 582, type: !396)
!404 = !DILocalVariable(name: "slice", arg: 2, scope: !392, file: !163, line: 582, type: !334)
!405 = !DILocation(line: 582, column: 18, scope: !392)
!406 = !DILocation(line: 582, column: 24, scope: !392)
!407 = !DILocation(line: 583, column: 13, scope: !392)
!408 = !DILocation(line: 583, column: 12, scope: !392)
!409 = !DILocation(line: 586, column: 9, scope: !392)
!410 = !DILocation(line: 587, column: 6, scope: !392)
!411 = !DILocation(line: 584, column: 13, scope: !392)
!412 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h8e26a6a69cc33cafE", scope: !413, file: !163, line: 623, type: !414, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !419)
!413 = !DINamespace(name: "{impl#9}", scope: !165)
!414 = !DISubroutineType(types: !415)
!415 = !{!334, !416, !334, !307}
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeToInclusive<usize>", scope: !175, file: !2, size: 64, align: 64, elements: !417, templateParams: !180, identifier: "39b15bafee014b512d194feea4d4371")
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !2, baseType: !9, size: 64, align: 64)
!419 = !{!420, !421}
!420 = !DILocalVariable(name: "self", arg: 1, scope: !412, file: !163, line: 623, type: !416)
!421 = !DILocalVariable(name: "slice", arg: 2, scope: !412, file: !163, line: 623, type: !334)
!422 = !DILocation(line: 623, column: 18, scope: !412)
!423 = !DILocation(line: 623, column: 24, scope: !412)
!424 = !DILocation(line: 624, column: 9, scope: !412)
!425 = !DILocation(line: 625, column: 6, scope: !412)
!426 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0403dbc38cd8bbbdE", scope: !428, file: !427, line: 2268, type: !429, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !484)
!427 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "1a732c99c57cb2d76a548fb6f43c5e00")
!428 = !DINamespace(name: "{impl#53}", scope: !141)
!429 = !DISubroutineType(types: !430)
!430 = !{!431, !449, !450}
!431 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !432, file: !2, size: 8, align: 8, elements: !433, templateParams: !24, identifier: "22c75a34514fa785fe8d5e5737b404a")
!432 = !DINamespace(name: "result", scope: !142)
!433 = !{!434}
!434 = !DICompositeType(tag: DW_TAG_variant_part, scope: !431, file: !2, size: 8, align: 8, elements: !435, templateParams: !24, identifier: "318b8b14c370a5a4f50890e5a30a4497", discriminator: !448)
!435 = !{!436, !444}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !434, file: !2, baseType: !437, size: 8, align: 8, extraData: i64 0)
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !431, file: !2, size: 8, align: 8, elements: !438, templateParams: !440, identifier: "5b323728d71ad8b54f91e8647fb6c225")
!438 = !{!439}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !437, file: !2, baseType: !7, align: 8, offset: 8)
!440 = !{!441, !442}
!441 = !DITemplateTypeParameter(name: "T", type: !7)
!442 = !DITemplateTypeParameter(name: "E", type: !443)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !141, file: !2, align: 8, elements: !24, identifier: "fc30e04e843f09017d3a1f431d2f6e0c")
!444 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !434, file: !2, baseType: !445, size: 8, align: 8, extraData: i64 1)
!445 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !431, file: !2, size: 8, align: 8, elements: !446, templateParams: !440, identifier: "a4826728ee7be77ec8568eb24e01c72")
!446 = !{!447}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !445, file: !2, baseType: !443, align: 8, offset: 8)
!448 = !DIDerivedType(tag: DW_TAG_member, scope: !431, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagArtificial)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !451, size: 64, align: 64, dwarfAddressSpace: 0)
!451 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !141, file: !2, size: 512, align: 64, elements: !452, templateParams: !24, identifier: "a84a5bdbf0499ca1d68196c4b862c039")
!452 = !{!453, !454, !456, !457, !472, !473}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !451, file: !2, baseType: !27, size: 32, align: 32, offset: 416)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !451, file: !2, baseType: !455, size: 32, align: 32, offset: 384)
!455 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !451, file: !2, baseType: !139, size: 8, align: 8, offset: 448)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !451, file: !2, baseType: !458, size: 128, align: 64)
!458 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !459, file: !2, size: 128, align: 64, elements: !460, templateParams: !24, identifier: "9ff7c8d78ada7de0ac9d763d1c46855f")
!459 = !DINamespace(name: "option", scope: !142)
!460 = !{!461}
!461 = !DICompositeType(tag: DW_TAG_variant_part, scope: !458, file: !2, size: 128, align: 64, elements: !462, templateParams: !24, identifier: "4121c4c375fd14965cbbd4a52ee80751", discriminator: !471)
!462 = !{!463, !467}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !461, file: !2, baseType: !464, size: 128, align: 64, extraData: i64 0)
!464 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !458, file: !2, size: 128, align: 64, elements: !24, templateParams: !465, identifier: "2820df4bdcb3911085cbffae781ae71")
!465 = !{!466}
!466 = !DITemplateTypeParameter(name: "T", type: !9)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !461, file: !2, baseType: !468, size: 128, align: 64, extraData: i64 1)
!468 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !458, file: !2, size: 128, align: 64, elements: !469, templateParams: !465, identifier: "3de76324e4613a017cfb22686952e8ce")
!469 = !{!470}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !468, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, scope: !458, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !451, file: !2, baseType: !458, size: 128, align: 64, offset: 128)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !451, file: !2, baseType: !474, size: 128, align: 64, offset: 256)
!474 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !475, templateParams: !24, identifier: "841e47680ccca04665b2034bf5815694")
!475 = !{!476, !479}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !474, file: !2, baseType: !477, size: 64, align: 64)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64, align: 64, dwarfAddressSpace: 0)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !24, identifier: "d63695003f7c60186849daf2e0ab45a2")
!479 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !474, file: !2, baseType: !480, size: 64, align: 64, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !481, size: 64, align: 64, dwarfAddressSpace: 0)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !482)
!482 = !{!483}
!483 = !DISubrange(count: 3, lowerBound: 0)
!484 = !{!485, !486}
!485 = !DILocalVariable(name: "self", arg: 1, scope: !426, file: !427, line: 2268, type: !449)
!486 = !DILocalVariable(name: "f", arg: 2, scope: !426, file: !427, line: 2268, type: !450)
!487 = !DILocation(line: 2268, column: 20, scope: !426)
!488 = !DILocation(line: 2268, column: 27, scope: !426)
!489 = !DILocation(line: 2268, column: 71, scope: !426)
!490 = !{i64 8}
!491 = !DILocation(line: 2268, column: 62, scope: !426)
!492 = !DILocation(line: 2268, column: 84, scope: !426)
!493 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8bd86ba65fe73e59E", scope: !428, file: !427, line: 2268, type: !494, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !500, retainedNodes: !497)
!494 = !DISubroutineType(types: !495)
!495 = !{!431, !496, !450}
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!497 = !{!498, !499}
!498 = !DILocalVariable(name: "self", arg: 1, scope: !493, file: !427, line: 2268, type: !496)
!499 = !DILocalVariable(name: "f", arg: 2, scope: !493, file: !427, line: 2268, type: !450)
!500 = !{!501}
!501 = !DITemplateTypeParameter(name: "T", type: !26)
!502 = !DILocation(line: 2268, column: 20, scope: !493)
!503 = !DILocation(line: 2268, column: 27, scope: !493)
!504 = !DILocation(line: 2268, column: 71, scope: !493)
!505 = !{i64 4}
!506 = !DILocation(line: 2268, column: 62, scope: !493)
!507 = !DILocation(line: 2268, column: 84, scope: !493)
!508 = distinct !DISubprogram(name: "is_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17h02b9546723696483E", scope: !509, file: !218, line: 2553, type: !510, scopeLine: 2553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !512)
!509 = !DINamespace(name: "intrinsics", scope: !142)
!510 = !DISubroutineType(types: !511)
!511 = !{!401, !207, !207, !9}
!512 = !{!513, !514, !515, !516, !518, !520, !522}
!513 = !DILocalVariable(name: "src", arg: 1, scope: !508, file: !218, line: 2553, type: !207)
!514 = !DILocalVariable(name: "dst", arg: 2, scope: !508, file: !218, line: 2553, type: !207)
!515 = !DILocalVariable(name: "count", arg: 3, scope: !508, file: !218, line: 2553, type: !9)
!516 = !DILocalVariable(name: "src_usize", scope: !517, file: !218, line: 2554, type: !9, align: 8)
!517 = distinct !DILexicalBlock(scope: !508, file: !218, line: 2554, column: 5)
!518 = !DILocalVariable(name: "dst_usize", scope: !519, file: !218, line: 2555, type: !9, align: 8)
!519 = distinct !DILexicalBlock(scope: !517, file: !218, line: 2555, column: 5)
!520 = !DILocalVariable(name: "size", scope: !521, file: !218, line: 2556, type: !9, align: 8)
!521 = distinct !DILexicalBlock(scope: !519, file: !218, line: 2556, column: 5)
!522 = !DILocalVariable(name: "diff", scope: !523, file: !218, line: 2559, type: !9, align: 8)
!523 = distinct !DILexicalBlock(scope: !521, file: !218, line: 2559, column: 5)
!524 = !DILocation(line: 2553, column: 36, scope: !508)
!525 = !DILocation(line: 2553, column: 51, scope: !508)
!526 = !DILocation(line: 2553, column: 66, scope: !508)
!527 = !DILocation(line: 2559, column: 9, scope: !523)
!528 = !DILocalVariable(name: "self", arg: 1, scope: !529, file: !201, line: 203, type: !207)
!529 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h39ebaf879cf22705E", scope: !202, file: !201, line: 203, type: !530, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !532)
!530 = !DISubroutineType(types: !531)
!531 = !{!9, !207}
!532 = !{!528}
!533 = !DILocation(line: 203, column: 17, scope: !529, inlinedAt: !534)
!534 = distinct !DILocation(line: 2554, column: 21, scope: !508)
!535 = !DILocalVariable(name: "self", arg: 1, scope: !536, file: !201, line: 58, type: !207)
!536 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hfbb44db8d160aefbE", scope: !202, file: !201, line: 58, type: !537, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !540, retainedNodes: !539)
!537 = !DISubroutineType(types: !538)
!538 = !{!6, !207}
!539 = !{!535}
!540 = !{!190, !541}
!541 = !DITemplateTypeParameter(name: "U", type: !7)
!542 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !543)
!543 = distinct !DILocation(line: 207, column: 33, scope: !529, inlinedAt: !534)
!544 = !DILocation(line: 207, column: 18, scope: !529, inlinedAt: !534)
!545 = !DILocation(line: 2554, column: 21, scope: !508)
!546 = !DILocation(line: 2554, column: 9, scope: !517)
!547 = !DILocation(line: 203, column: 17, scope: !529, inlinedAt: !548)
!548 = distinct !DILocation(line: 2555, column: 21, scope: !517)
!549 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !550)
!550 = distinct !DILocation(line: 207, column: 33, scope: !529, inlinedAt: !548)
!551 = !DILocation(line: 207, column: 18, scope: !529, inlinedAt: !548)
!552 = !DILocation(line: 2555, column: 21, scope: !517)
!553 = !DILocation(line: 2555, column: 9, scope: !519)
!554 = !DILocation(line: 2556, column: 16, scope: !519)
!555 = !DILocation(line: 2556, column: 9, scope: !521)
!556 = !DILocation(line: 2559, column: 19, scope: !521)
!557 = !DILocation(line: 2559, column: 74, scope: !521)
!558 = !DILocation(line: 2559, column: 43, scope: !521)
!559 = !DILocation(line: 2559, column: 16, scope: !521)
!560 = !DILocation(line: 2562, column: 5, scope: !523)
!561 = !DILocation(line: 2563, column: 2, scope: !508)
!562 = distinct !DISubprogram(name: "is_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17hc662ec1828ef557bE", scope: !509, file: !218, line: 2553, type: !563, scopeLine: 2553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !566)
!563 = !DISubroutineType(types: !564)
!564 = !{!401, !565, !565, !9}
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!566 = !{!567, !568, !569, !570, !572, !574, !576}
!567 = !DILocalVariable(name: "src", arg: 1, scope: !562, file: !218, line: 2553, type: !565)
!568 = !DILocalVariable(name: "dst", arg: 2, scope: !562, file: !218, line: 2553, type: !565)
!569 = !DILocalVariable(name: "count", arg: 3, scope: !562, file: !218, line: 2553, type: !9)
!570 = !DILocalVariable(name: "src_usize", scope: !571, file: !218, line: 2554, type: !9, align: 8)
!571 = distinct !DILexicalBlock(scope: !562, file: !218, line: 2554, column: 5)
!572 = !DILocalVariable(name: "dst_usize", scope: !573, file: !218, line: 2555, type: !9, align: 8)
!573 = distinct !DILexicalBlock(scope: !571, file: !218, line: 2555, column: 5)
!574 = !DILocalVariable(name: "size", scope: !575, file: !218, line: 2556, type: !9, align: 8)
!575 = distinct !DILexicalBlock(scope: !573, file: !218, line: 2556, column: 5)
!576 = !DILocalVariable(name: "diff", scope: !577, file: !218, line: 2559, type: !9, align: 8)
!577 = distinct !DILexicalBlock(scope: !575, file: !218, line: 2559, column: 5)
!578 = !DILocation(line: 2553, column: 36, scope: !562)
!579 = !DILocation(line: 2553, column: 51, scope: !562)
!580 = !DILocation(line: 2553, column: 66, scope: !562)
!581 = !DILocation(line: 2559, column: 9, scope: !577)
!582 = !DILocalVariable(name: "self", arg: 1, scope: !583, file: !201, line: 203, type: !565)
!583 = distinct !DISubprogram(name: "addr<usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h86ade0aa1f8cb97dE", scope: !202, file: !201, line: 203, type: !584, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !586)
!584 = !DISubroutineType(types: !585)
!585 = !{!9, !565}
!586 = !{!582}
!587 = !DILocation(line: 203, column: 17, scope: !583, inlinedAt: !588)
!588 = distinct !DILocation(line: 2554, column: 21, scope: !562)
!589 = !DILocalVariable(name: "self", arg: 1, scope: !590, file: !201, line: 58, type: !565)
!590 = distinct !DISubprogram(name: "cast<usize, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h23eab34a458b6b3aE", scope: !202, file: !201, line: 58, type: !591, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !594, retainedNodes: !593)
!591 = !DISubroutineType(types: !592)
!592 = !{!6, !565}
!593 = !{!589}
!594 = !{!466, !541}
!595 = !DILocation(line: 58, column: 26, scope: !590, inlinedAt: !596)
!596 = distinct !DILocation(line: 207, column: 33, scope: !583, inlinedAt: !588)
!597 = !DILocation(line: 207, column: 18, scope: !583, inlinedAt: !588)
!598 = !DILocation(line: 2554, column: 21, scope: !562)
!599 = !DILocation(line: 2554, column: 9, scope: !571)
!600 = !DILocation(line: 203, column: 17, scope: !583, inlinedAt: !601)
!601 = distinct !DILocation(line: 2555, column: 21, scope: !571)
!602 = !DILocation(line: 58, column: 26, scope: !590, inlinedAt: !603)
!603 = distinct !DILocation(line: 207, column: 33, scope: !583, inlinedAt: !601)
!604 = !DILocation(line: 207, column: 18, scope: !583, inlinedAt: !601)
!605 = !DILocation(line: 2555, column: 21, scope: !571)
!606 = !DILocation(line: 2555, column: 9, scope: !573)
!607 = !DILocation(line: 2556, column: 16, scope: !573)
!608 = !DILocation(line: 2556, column: 9, scope: !575)
!609 = !DILocation(line: 2559, column: 19, scope: !575)
!610 = !DILocation(line: 2559, column: 74, scope: !575)
!611 = !DILocation(line: 2559, column: 43, scope: !575)
!612 = !DILocation(line: 2559, column: 16, scope: !575)
!613 = !DILocation(line: 2562, column: 5, scope: !577)
!614 = !DILocation(line: 2563, column: 2, scope: !562)
!615 = distinct !DISubprogram(name: "copy_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h2081497d2c04d51aE", scope: !509, file: !218, line: 2655, type: !616, scopeLine: 2655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !619)
!616 = !DISubroutineType(types: !617)
!617 = !{null, !565, !618, !9}
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!619 = !{!620, !621, !622}
!620 = !DILocalVariable(name: "src", arg: 1, scope: !615, file: !218, line: 2655, type: !565)
!621 = !DILocalVariable(name: "dst", arg: 2, scope: !615, file: !218, line: 2655, type: !618)
!622 = !DILocalVariable(name: "count", arg: 3, scope: !615, file: !218, line: 2655, type: !9)
!623 = !DILocation(line: 2655, column: 44, scope: !615)
!624 = !DILocation(line: 2655, column: 59, scope: !615)
!625 = !DILocation(line: 2655, column: 72, scope: !615)
!626 = !DILocation(line: 2665, column: 9, scope: !615)
!627 = !DILocation(line: 2673, column: 9, scope: !615)
!628 = !DILocation(line: 2675, column: 2, scope: !615)
!629 = !DILocalVariable(name: "src", arg: 1, scope: !630, file: !218, line: 2517, type: !565)
!630 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h33b106e842f35ab0E", scope: !631, file: !218, line: 2517, type: !616, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !632)
!631 = !DINamespace(name: "copy_nonoverlapping", scope: !509)
!632 = !{!629, !633, !634}
!633 = !DILocalVariable(name: "dst", arg: 2, scope: !630, file: !218, line: 2517, type: !618)
!634 = !DILocalVariable(name: "count", arg: 3, scope: !630, file: !218, line: 2517, type: !9)
!635 = !DILocation(line: 2517, column: 39, scope: !630, inlinedAt: !636)
!636 = distinct !DILocation(line: 2665, column: 9, scope: !615)
!637 = !DILocation(line: 2669, column: 13, scope: !630, inlinedAt: !636)
!638 = !DILocation(line: 2670, column: 20, scope: !630, inlinedAt: !636)
!639 = !DILocation(line: 2671, column: 20, scope: !630, inlinedAt: !636)
!640 = !DILocation(line: 2518, column: 20, scope: !630, inlinedAt: !636)
!641 = !DILocation(line: 2520, column: 21, scope: !630, inlinedAt: !636)
!642 = distinct !DISubprogram(name: "copy_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hc7d2853d5e64f201E", scope: !509, file: !218, line: 2655, type: !643, scopeLine: 2655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !645)
!643 = !DISubroutineType(types: !644)
!644 = !{null, !207, !261, !9}
!645 = !{!646, !647, !648}
!646 = !DILocalVariable(name: "src", arg: 1, scope: !642, file: !218, line: 2655, type: !207)
!647 = !DILocalVariable(name: "dst", arg: 2, scope: !642, file: !218, line: 2655, type: !261)
!648 = !DILocalVariable(name: "count", arg: 3, scope: !642, file: !218, line: 2655, type: !9)
!649 = !DILocation(line: 2655, column: 44, scope: !642)
!650 = !DILocation(line: 2655, column: 59, scope: !642)
!651 = !DILocation(line: 2655, column: 72, scope: !642)
!652 = !DILocation(line: 2665, column: 9, scope: !642)
!653 = !DILocation(line: 2673, column: 9, scope: !642)
!654 = !DILocation(line: 2675, column: 2, scope: !642)
!655 = !DILocalVariable(name: "src", arg: 1, scope: !656, file: !218, line: 2517, type: !207)
!656 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h81a8d3ccbdd85a33E", scope: !631, file: !218, line: 2517, type: !643, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !657)
!657 = !{!655, !658, !659}
!658 = !DILocalVariable(name: "dst", arg: 2, scope: !656, file: !218, line: 2517, type: !261)
!659 = !DILocalVariable(name: "count", arg: 3, scope: !656, file: !218, line: 2517, type: !9)
!660 = !DILocation(line: 2517, column: 39, scope: !656, inlinedAt: !661)
!661 = distinct !DILocation(line: 2665, column: 9, scope: !642)
!662 = !DILocation(line: 2669, column: 13, scope: !656, inlinedAt: !661)
!663 = !DILocation(line: 2670, column: 20, scope: !656, inlinedAt: !661)
!664 = !DILocation(line: 2671, column: 20, scope: !656, inlinedAt: !661)
!665 = !DILocation(line: 2518, column: 20, scope: !656, inlinedAt: !661)
!666 = !DILocation(line: 2520, column: 21, scope: !656, inlinedAt: !661)
!667 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h149af2a9f28e4a2cE", scope: !509, file: !218, line: 2537, type: !668, scopeLine: 2537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !681)
!668 = !DISubroutineType(types: !669)
!669 = !{!401, !670}
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !671, size: 64, align: 64, dwarfAddressSpace: 0)
!671 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !672, file: !2, size: 192, align: 64, elements: !674, templateParams: !189, identifier: "195d5ae69f942891d5dcbbfbd431416")
!672 = !DINamespace(name: "maybe_uninit", scope: !673)
!673 = !DINamespace(name: "mem", scope: !142)
!674 = !{!675, !676}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !671, file: !2, baseType: !7, align: 8)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !671, file: !2, baseType: !677, size: 192, align: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !678, file: !2, size: 192, align: 64, elements: !679, templateParams: !189, identifier: "67eeb6c8bcb3d28d9ddc6aca5510653c")
!678 = !DINamespace(name: "manually_drop", scope: !673)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !677, file: !2, baseType: !13, size: 192, align: 64)
!681 = !{!682}
!682 = !DILocalVariable(name: "ptr", arg: 1, scope: !667, file: !218, line: 2537, type: !670)
!683 = !{!684}
!684 = !DITemplateTypeParameter(name: "T", type: !671)
!685 = !DILocation(line: 2537, column: 42, scope: !667)
!686 = !DILocation(line: 2538, column: 6, scope: !667)
!687 = !DILocation(line: 2538, column: 5, scope: !667)
!688 = !DILocation(line: 2538, column: 23, scope: !667)
!689 = !DILocation(line: 2539, column: 2, scope: !667)
!690 = distinct !DISubprogram(name: "is_aligned_and_not_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h4fdca66fb3f70d2cE", scope: !509, file: !218, line: 2537, type: !691, scopeLine: 2537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !693)
!691 = !DISubroutineType(types: !692)
!692 = !{!401, !207}
!693 = !{!694}
!694 = !DILocalVariable(name: "ptr", arg: 1, scope: !690, file: !218, line: 2537, type: !207)
!695 = !DILocation(line: 2537, column: 42, scope: !690)
!696 = !DILocation(line: 2538, column: 6, scope: !690)
!697 = !DILocation(line: 2538, column: 5, scope: !690)
!698 = !DILocation(line: 2538, column: 23, scope: !690)
!699 = !DILocation(line: 2539, column: 2, scope: !690)
!700 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h5e3db6c043bf442bE", scope: !509, file: !218, line: 2537, type: !701, scopeLine: 2537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !711)
!701 = !DISubroutineType(types: !702)
!702 = !{!401, !703}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !704, size: 64, align: 64, dwarfAddressSpace: 0)
!704 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !672, file: !2, size: 64, align: 64, elements: !705, templateParams: !465, identifier: "54dcae7fc0518a2bf29368821dc292c")
!705 = !{!706, !707}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !704, file: !2, baseType: !7, align: 8)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !704, file: !2, baseType: !708, size: 64, align: 64)
!708 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !678, file: !2, size: 64, align: 64, elements: !709, templateParams: !465, identifier: "1112dc114285b1b0ff7e96da14858771")
!709 = !{!710}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !708, file: !2, baseType: !9, size: 64, align: 64)
!711 = !{!712}
!712 = !DILocalVariable(name: "ptr", arg: 1, scope: !700, file: !218, line: 2537, type: !703)
!713 = !{!714}
!714 = !DITemplateTypeParameter(name: "T", type: !704)
!715 = !DILocation(line: 2537, column: 42, scope: !700)
!716 = !DILocation(line: 2538, column: 6, scope: !700)
!717 = !DILocation(line: 2538, column: 5, scope: !700)
!718 = !DILocation(line: 2538, column: 23, scope: !700)
!719 = !DILocation(line: 2539, column: 2, scope: !700)
!720 = distinct !DISubprogram(name: "is_valid_allocation_size<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics24is_valid_allocation_size17hc0b066e775af0993E", scope: !509, file: !218, line: 2543, type: !721, scopeLine: 2543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !723)
!721 = !DISubroutineType(types: !722)
!722 = !{!401, !9}
!723 = !{!724, !725}
!724 = !DILocalVariable(name: "len", arg: 1, scope: !720, file: !218, line: 2543, type: !9)
!725 = !DILocalVariable(name: "max_len", scope: !726, file: !218, line: 2544, type: !9, align: 8)
!726 = distinct !DILexicalBlock(scope: !720, file: !218, line: 2544, column: 5)
!727 = !DILocation(line: 2544, column: 9, scope: !726)
!728 = !DILocation(line: 2543, column: 43, scope: !720)
!729 = !DILocation(line: 2548, column: 5, scope: !726)
!730 = !DILocation(line: 2549, column: 2, scope: !720)
!731 = distinct !DISubprogram(name: "copy<usize>", linkageName: "_ZN4core10intrinsics4copy17h3e8e1c65f736c496E", scope: !509, file: !218, line: 2746, type: !616, scopeLine: 2746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !732)
!732 = !{!733, !734, !735}
!733 = !DILocalVariable(name: "src", arg: 1, scope: !731, file: !218, line: 2746, type: !565)
!734 = !DILocalVariable(name: "dst", arg: 2, scope: !731, file: !218, line: 2746, type: !618)
!735 = !DILocalVariable(name: "count", arg: 3, scope: !731, file: !218, line: 2746, type: !9)
!736 = !DILocation(line: 2746, column: 29, scope: !731)
!737 = !DILocation(line: 2746, column: 44, scope: !731)
!738 = !DILocation(line: 2746, column: 57, scope: !731)
!739 = !DILocation(line: 2755, column: 9, scope: !731)
!740 = !DILocation(line: 2760, column: 9, scope: !731)
!741 = !DILocation(line: 2762, column: 2, scope: !731)
!742 = !DILocalVariable(name: "src", arg: 1, scope: !743, file: !218, line: 2517, type: !565)
!743 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics4copy7runtime17h655fbc99ebdf040dE", scope: !744, file: !218, line: 2517, type: !745, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !747)
!744 = !DINamespace(name: "copy", scope: !509)
!745 = !DISubroutineType(types: !746)
!746 = !{null, !565, !618}
!747 = !{!742, !748}
!748 = !DILocalVariable(name: "dst", arg: 2, scope: !743, file: !218, line: 2517, type: !618)
!749 = !DILocation(line: 2517, column: 39, scope: !743, inlinedAt: !750)
!750 = distinct !DILocation(line: 2755, column: 9, scope: !731)
!751 = !DILocation(line: 2758, column: 13, scope: !743, inlinedAt: !750)
!752 = !DILocation(line: 2758, column: 45, scope: !743, inlinedAt: !750)
!753 = !DILocation(line: 2518, column: 20, scope: !743, inlinedAt: !750)
!754 = !DILocation(line: 2520, column: 21, scope: !743, inlinedAt: !750)
!755 = distinct !DISubprogram(name: "copy<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy17h6077bdcf76790159E", scope: !509, file: !218, line: 2746, type: !643, scopeLine: 2746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !756)
!756 = !{!757, !758, !759}
!757 = !DILocalVariable(name: "src", arg: 1, scope: !755, file: !218, line: 2746, type: !207)
!758 = !DILocalVariable(name: "dst", arg: 2, scope: !755, file: !218, line: 2746, type: !261)
!759 = !DILocalVariable(name: "count", arg: 3, scope: !755, file: !218, line: 2746, type: !9)
!760 = !DILocation(line: 2746, column: 29, scope: !755)
!761 = !DILocation(line: 2746, column: 44, scope: !755)
!762 = !DILocation(line: 2746, column: 57, scope: !755)
!763 = !DILocation(line: 2755, column: 9, scope: !755)
!764 = !DILocation(line: 2760, column: 9, scope: !755)
!765 = !DILocation(line: 2762, column: 2, scope: !755)
!766 = !DILocalVariable(name: "src", arg: 1, scope: !767, file: !218, line: 2517, type: !207)
!767 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy7runtime17h7396b1ace4cfa01bE", scope: !744, file: !218, line: 2517, type: !768, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !770)
!768 = !DISubroutineType(types: !769)
!769 = !{null, !207, !261}
!770 = !{!766, !771}
!771 = !DILocalVariable(name: "dst", arg: 2, scope: !767, file: !218, line: 2517, type: !261)
!772 = !DILocation(line: 2517, column: 39, scope: !767, inlinedAt: !773)
!773 = distinct !DILocation(line: 2755, column: 9, scope: !755)
!774 = !DILocation(line: 2758, column: 13, scope: !767, inlinedAt: !773)
!775 = !DILocation(line: 2758, column: 45, scope: !767, inlinedAt: !773)
!776 = !DILocation(line: 2518, column: 20, scope: !767, inlinedAt: !773)
!777 = !DILocation(line: 2520, column: 21, scope: !767, inlinedAt: !773)
!778 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc5dbf38d3fae6ffaE", scope: !780, file: !779, line: 1375, type: !782, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !784)
!779 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "e53eeb584156365c2c500b4010ad6081")
!780 = !DINamespace(name: "{impl#63}", scope: !781)
!781 = !DINamespace(name: "impls", scope: !149)
!782 = !DISubroutineType(types: !783)
!783 = !{!148, !132, !132}
!784 = !{!785, !786}
!785 = !DILocalVariable(name: "self", arg: 1, scope: !778, file: !779, line: 1375, type: !132)
!786 = !DILocalVariable(name: "other", arg: 2, scope: !778, file: !779, line: 1375, type: !132)
!787 = !DILocation(line: 1375, column: 24, scope: !778)
!788 = !DILocation(line: 1375, column: 31, scope: !778)
!789 = !DILocation(line: 1378, column: 24, scope: !778)
!790 = !DILocation(line: 1378, column: 32, scope: !778)
!791 = !DILocation(line: 1379, column: 29, scope: !778)
!792 = !DILocation(line: 1379, column: 38, scope: !778)
!793 = !DILocation(line: 1378, column: 41, scope: !778)
!794 = !DILocation(line: 1378, column: 21, scope: !778)
!795 = !DILocation(line: 1381, column: 18, scope: !778)
!796 = !{i8 -1, i8 2}
!797 = !DILocation(line: 1380, column: 28, scope: !778)
!798 = !DILocation(line: 1379, column: 26, scope: !778)
!799 = !DILocation(line: 1379, column: 47, scope: !778)
!800 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17ha641c5a6c48c5a08E", scope: !802, file: !801, line: 189, type: !804, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !806)
!801 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "3143de71d5ad70ee2e53269932cc8053")
!802 = !DINamespace(name: "{impl#86}", scope: !803)
!803 = !DINamespace(name: "num", scope: !141)
!804 = !DISubroutineType(types: !805)
!805 = !{!431, !85, !450}
!806 = !{!807, !808}
!807 = !DILocalVariable(name: "self", arg: 1, scope: !800, file: !801, line: 189, type: !85)
!808 = !DILocalVariable(name: "f", arg: 2, scope: !800, file: !801, line: 189, type: !450)
!809 = !DILocation(line: 189, column: 20, scope: !800)
!810 = !DILocation(line: 189, column: 27, scope: !800)
!811 = !DILocation(line: 190, column: 20, scope: !800)
!812 = !DILocation(line: 192, column: 27, scope: !800)
!813 = !DILocation(line: 191, column: 21, scope: !800)
!814 = !DILocation(line: 197, column: 14, scope: !800)
!815 = !DILocation(line: 195, column: 21, scope: !800)
!816 = !DILocation(line: 193, column: 21, scope: !800)
!817 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h4f92344c1f7e8a62E", scope: !818, file: !801, line: 189, type: !819, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !821)
!818 = !DINamespace(name: "{impl#87}", scope: !803)
!819 = !DISubroutineType(types: !820)
!820 = !{!431, !132, !450}
!821 = !{!822, !823}
!822 = !DILocalVariable(name: "self", arg: 1, scope: !817, file: !801, line: 189, type: !132)
!823 = !DILocalVariable(name: "f", arg: 2, scope: !817, file: !801, line: 189, type: !450)
!824 = !DILocation(line: 189, column: 20, scope: !817)
!825 = !DILocation(line: 189, column: 27, scope: !817)
!826 = !DILocation(line: 190, column: 20, scope: !817)
!827 = !DILocation(line: 192, column: 27, scope: !817)
!828 = !DILocation(line: 191, column: 21, scope: !817)
!829 = !DILocation(line: 197, column: 14, scope: !817)
!830 = !DILocation(line: 195, column: 21, scope: !817)
!831 = !DILocation(line: 193, column: 21, scope: !817)
!832 = distinct !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17h6e0b94c7d1d04dadE", scope: !834, file: !833, line: 627, type: !843, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !861, declaration: !860, retainedNodes: !864)
!833 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "01cd6fe38fc23dc71fabb47473394cb8")
!834 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !835, file: !2, size: 128, align: 64, elements: !836, templateParams: !24, identifier: "d55b5ab40978336d510405748b0b49f9")
!835 = !DINamespace(name: "builders", scope: !141)
!836 = !{!837}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !834, file: !2, baseType: !838, size: 128, align: 64)
!838 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !835, file: !2, size: 128, align: 64, elements: !839, templateParams: !24, identifier: "18b5404db7960e388a86b59ea9760fa")
!839 = !{!840, !841, !842}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !838, file: !2, baseType: !450, size: 64, align: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !838, file: !2, baseType: !431, size: 8, align: 8, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !838, file: !2, baseType: !401, size: 8, align: 8, offset: 72)
!843 = !DISubroutineType(types: !844)
!844 = !{!845, !845, !846}
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !834, size: 64, align: 64, dwarfAddressSpace: 0)
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !847, file: !2, size: 128, align: 64, elements: !848, templateParams: !189, identifier: "cd3b660072f450e39a2e847ea94a5107")
!847 = !DINamespace(name: "iter", scope: !166)
!848 = !{!849, !854, !855}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !846, file: !2, baseType: !850, size: 64, align: 64)
!850 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !851, file: !2, size: 64, align: 64, elements: !852, templateParams: !189, identifier: "2335480a42d4284e8e2982305f44126d")
!851 = !DINamespace(name: "non_null", scope: !204)
!852 = !{!853}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !850, file: !2, baseType: !207, size: 64, align: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !846, file: !2, baseType: !207, size: 64, align: 64, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !846, file: !2, baseType: !856, align: 8)
!856 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !857, file: !2, align: 8, elements: !24, templateParams: !858, identifier: "d4137ba2763d08b68bdc9f0924969d53")
!857 = !DINamespace(name: "marker", scope: !142)
!858 = !{!859}
!859 = !DITemplateTypeParameter(name: "T", type: !12)
!860 = !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17h6e0b94c7d1d04dadE", scope: !834, file: !833, line: 627, type: !843, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !861)
!861 = !{!862, !863}
!862 = !DITemplateTypeParameter(name: "D", type: !12)
!863 = !DITemplateTypeParameter(name: "I", type: !846)
!864 = !{!865, !866, !867, !869}
!865 = !DILocalVariable(name: "self", arg: 1, scope: !832, file: !833, line: 627, type: !845)
!866 = !DILocalVariable(name: "entries", arg: 2, scope: !832, file: !833, line: 627, type: !846)
!867 = !DILocalVariable(name: "iter", scope: !868, file: !833, line: 632, type: !846, align: 8)
!868 = distinct !DILexicalBlock(scope: !832, file: !833, line: 632, column: 9)
!869 = !DILocalVariable(name: "entry", scope: !870, file: !833, line: 632, type: !12, align: 8)
!870 = distinct !DILexicalBlock(scope: !868, file: !833, line: 632, column: 30)
!871 = !DILocation(line: 627, column: 26, scope: !832)
!872 = !DILocation(line: 627, column: 37, scope: !832)
!873 = !DILocation(line: 632, column: 22, scope: !868)
!874 = !DILocation(line: 632, column: 13, scope: !870)
!875 = !DILocation(line: 632, column: 22, scope: !832)
!876 = !DILocation(line: 632, column: 9, scope: !868)
!877 = !DILocation(line: 636, column: 6, scope: !832)
!878 = !DILocation(line: 632, column: 13, scope: !868)
!879 = !DILocation(line: 633, column: 13, scope: !870)
!880 = !DILocation(line: 634, column: 9, scope: !868)
!881 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17ha7dc9f46a2c1bbf8E", scope: !882, file: !427, line: 322, type: !948, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !953, retainedNodes: !954)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !141, file: !2, size: 384, align: 64, elements: !883, templateParams: !24, identifier: "dec2eb544c6d114a1729e13a7474f40")
!883 = !{!884, !890, !932}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !882, file: !2, baseType: !885, size: 128, align: 64)
!885 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !886, templateParams: !24, identifier: "d76b83877ddcb5cca61caf6bdca727ac")
!886 = !{!887, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !885, file: !2, baseType: !888, size: 64, align: 64)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64, dwarfAddressSpace: 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !885, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !882, file: !2, baseType: !891, size: 128, align: 64, offset: 256)
!891 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::Placeholder]>", scope: !459, file: !2, size: 128, align: 64, elements: !892, templateParams: !24, identifier: "e23d17d3304655e6750a0ab2d9edac39")
!892 = !{!893}
!893 = !DICompositeType(tag: DW_TAG_variant_part, scope: !891, file: !2, size: 128, align: 64, elements: !894, templateParams: !24, identifier: "bfd27e88b87b0ba5cd311f4e2a12036c", discriminator: !931)
!894 = !{!895, !927}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !893, file: !2, baseType: !896, size: 128, align: 64, extraData: i64 0)
!896 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !891, file: !2, size: 128, align: 64, elements: !24, templateParams: !897, identifier: "5aee93d5724874e8d5fc1e09008d60ef")
!897 = !{!898}
!898 = !DITemplateTypeParameter(name: "T", type: !899)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Placeholder]", file: !2, size: 128, align: 64, elements: !900, templateParams: !24, identifier: "5c2bff1ce87945dcf46beabe124a8ecc")
!900 = !{!901, !926}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !899, file: !2, baseType: !902, size: 64, align: 64)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64, align: 64, dwarfAddressSpace: 0)
!903 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !140, file: !2, size: 448, align: 64, elements: !904, templateParams: !24, identifier: "131f69b9dc640c7b405d0c75880ec09c")
!904 = !{!905, !906, !907, !908, !909, !925}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !903, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !903, file: !2, baseType: !455, size: 32, align: 32, offset: 320)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !903, file: !2, baseType: !139, size: 8, align: 8, offset: 384)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !903, file: !2, baseType: !27, size: 32, align: 32, offset: 352)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !903, file: !2, baseType: !910, size: 128, align: 64)
!910 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !140, file: !2, size: 128, align: 64, elements: !911, templateParams: !24, identifier: "de49f2e711729c26a3183f82a67e820b")
!911 = !{!912}
!912 = !DICompositeType(tag: DW_TAG_variant_part, scope: !910, file: !2, size: 128, align: 64, elements: !913, templateParams: !24, identifier: "f8aee855d501562836c2bde1eded98b", discriminator: !924)
!913 = !{!914, !918, !922}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !912, file: !2, baseType: !915, size: 128, align: 64, extraData: i64 0)
!915 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !910, file: !2, size: 128, align: 64, elements: !916, templateParams: !24, identifier: "ddb8199c8dc12775d50d3067915f0ee1")
!916 = !{!917}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !915, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !912, file: !2, baseType: !919, size: 128, align: 64, extraData: i64 1)
!919 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !910, file: !2, size: 128, align: 64, elements: !920, templateParams: !24, identifier: "a474205d0b1ebc8668aca1dd185e6dd8")
!920 = !{!921}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !919, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !912, file: !2, baseType: !923, size: 128, align: 64, extraData: i64 2)
!923 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !910, file: !2, size: 128, align: 64, elements: !24, identifier: "78259875ca0457d6d843b6907f3ee2cd")
!924 = !DIDerivedType(tag: DW_TAG_member, scope: !910, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !903, file: !2, baseType: !910, size: 128, align: 64, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !899, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !893, file: !2, baseType: !928, size: 128, align: 64)
!928 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !891, file: !2, size: 128, align: 64, elements: !929, templateParams: !897, identifier: "651380f2d7c231ae75361478798df683")
!929 = !{!930}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !928, file: !2, baseType: !899, size: 128, align: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, scope: !891, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !882, file: !2, baseType: !933, size: 128, align: 64, offset: 128)
!933 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Argument]", file: !2, size: 128, align: 64, elements: !934, templateParams: !24, identifier: "7aaa4600b8b1bb5ceecb4befe265d8a8")
!934 = !{!935, !947}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !933, file: !2, baseType: !936, size: 64, align: 64)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64, align: 64, dwarfAddressSpace: 0)
!937 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !140, file: !2, size: 128, align: 64, elements: !938, templateParams: !24, identifier: "1715f8ca39c24c1465154510b099d5db")
!938 = !{!939, !943}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !937, file: !2, baseType: !940, size: 64, align: 64)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::rt::{extern#0}::Opaque", baseType: !941, size: 64, align: 64, dwarfAddressSpace: 0)
!941 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !942, file: !2, align: 8, elements: !24, identifier: "b53b9c37284ad14843698905c0a781ef")
!942 = !DINamespace(name: "{extern#0}", scope: !140)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !937, file: !2, baseType: !944, size: 64, align: 64, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::rt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !945, size: 64, align: 64, dwarfAddressSpace: 0)
!945 = !DISubroutineType(types: !946)
!946 = !{!431, !940, !450}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !933, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!948 = !DISubroutineType(types: !949)
!949 = !{!882, !885, !933, !899, !950}
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !140, file: !2, align: 8, elements: !951, templateParams: !24, identifier: "351ac13b590d5d24af48663f31ffb4eb")
!951 = !{!952}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !950, file: !2, baseType: !7, align: 8)
!953 = !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17ha7dc9f46a2c1bbf8E", scope: !882, file: !427, line: 322, type: !948, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!954 = !{!955, !956, !957, !958, !959}
!955 = !DILocalVariable(name: "pieces", arg: 1, scope: !881, file: !427, line: 323, type: !885)
!956 = !DILocalVariable(name: "args", arg: 2, scope: !881, file: !427, line: 324, type: !933)
!957 = !DILocalVariable(name: "fmt", arg: 3, scope: !881, file: !427, line: 325, type: !899)
!958 = !DILocalVariable(name: "_unsafe_arg", scope: !881, file: !427, line: 326, type: !950, align: 1)
!959 = !DILocalVariable(arg: 4, scope: !881, file: !427, line: 326, type: !950)
!960 = !DILocation(line: 326, column: 9, scope: !881)
!961 = !DILocation(line: 323, column: 9, scope: !881)
!962 = !DILocation(line: 324, column: 9, scope: !881)
!963 = !DILocation(line: 325, column: 9, scope: !881)
!964 = !DILocation(line: 328, column: 34, scope: !881)
!965 = !DILocation(line: 328, column: 9, scope: !881)
!966 = !DILocation(line: 329, column: 6, scope: !881)
!967 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117hd805826023b59a70E", scope: !882, file: !427, line: 307, type: !968, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !970, retainedNodes: !971)
!968 = !DISubroutineType(types: !969)
!969 = !{!882, !885, !933}
!970 = !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117hd805826023b59a70E", scope: !882, file: !427, line: 307, type: !968, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!971 = !{!972, !973}
!972 = !DILocalVariable(name: "pieces", arg: 1, scope: !967, file: !427, line: 307, type: !885)
!973 = !DILocalVariable(name: "args", arg: 2, scope: !967, file: !427, line: 307, type: !933)
!974 = !DILocation(line: 307, column: 19, scope: !967)
!975 = !DILocation(line: 307, column: 47, scope: !967)
!976 = !DILocation(line: 308, column: 12, scope: !967)
!977 = !DILocation(line: 308, column: 56, scope: !967)
!978 = !DILocation(line: 308, column: 41, scope: !967)
!979 = !DILocation(line: 311, column: 34, scope: !967)
!980 = !DILocation(line: 311, column: 9, scope: !967)
!981 = !DILocation(line: 312, column: 6, scope: !967)
!982 = !DILocation(line: 309, column: 13, scope: !967)
!983 = distinct !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17h3df1cca92c3d59d6E", scope: !882, file: !427, line: 297, type: !984, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !986, retainedNodes: !987)
!984 = !DISubroutineType(types: !985)
!985 = !{!882, !885}
!986 = !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17h3df1cca92c3d59d6E", scope: !882, file: !427, line: 297, type: !984, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!987 = !{!988}
!988 = !DILocalVariable(name: "pieces", arg: 1, scope: !983, file: !427, line: 297, type: !885)
!989 = !DILocation(line: 297, column: 28, scope: !983)
!990 = !DILocation(line: 298, column: 12, scope: !983)
!991 = !DILocation(line: 301, column: 34, scope: !983)
!992 = !DILocation(line: 301, column: 9, scope: !983)
!993 = !DILocation(line: 302, column: 6, scope: !983)
!994 = !DILocation(line: 299, column: 13, scope: !983)
!995 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3mem11swap_simple17h2040f8deaa3606bbE", scope: !673, file: !996, line: 763, type: !997, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1016, retainedNodes: !1009)
!996 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "5e64a1abf54d04a4d014caa1e380bedd")
!997 = !DISubroutineType(types: !998)
!998 = !{null, !999, !999}
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !1000, size: 64, align: 64, dwarfAddressSpace: 0)
!1000 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !672, file: !2, size: 8, align: 8, elements: !1001, templateParams: !1007, identifier: "f77eabb37c58fb3b469f2a91053cb4ab")
!1001 = !{!1002, !1003}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1000, file: !2, baseType: !7, align: 8)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1000, file: !2, baseType: !1004, size: 8, align: 8)
!1004 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !678, file: !2, size: 8, align: 8, elements: !1005, templateParams: !1007, identifier: "6e6c6cd2c57dffd59a79a6cd1cbea258")
!1005 = !{!1006}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1004, file: !2, baseType: !123, size: 8, align: 8)
!1007 = !{!1008}
!1008 = !DITemplateTypeParameter(name: "T", type: !123)
!1009 = !{!1010, !1011, !1012, !1014}
!1010 = !DILocalVariable(name: "x", arg: 1, scope: !995, file: !996, line: 763, type: !999)
!1011 = !DILocalVariable(name: "y", arg: 2, scope: !995, file: !996, line: 763, type: !999)
!1012 = !DILocalVariable(name: "a", scope: !1013, file: !996, line: 780, type: !1000, align: 1)
!1013 = distinct !DILexicalBlock(scope: !995, file: !996, line: 780, column: 9)
!1014 = !DILocalVariable(name: "b", scope: !1015, file: !996, line: 781, type: !1000, align: 1)
!1015 = distinct !DILexicalBlock(scope: !1013, file: !996, line: 781, column: 9)
!1016 = !{!1017}
!1017 = !DITemplateTypeParameter(name: "T", type: !1000)
!1018 = !DILocation(line: 763, column: 36, scope: !995)
!1019 = !DILocation(line: 763, column: 47, scope: !995)
!1020 = !DILocation(line: 780, column: 17, scope: !995)
!1021 = !DILocation(line: 780, column: 13, scope: !1013)
!1022 = !DILocation(line: 781, column: 17, scope: !1013)
!1023 = !DILocation(line: 781, column: 13, scope: !1015)
!1024 = !DILocation(line: 782, column: 9, scope: !1015)
!1025 = !DILocation(line: 783, column: 9, scope: !1015)
!1026 = !DILocation(line: 785, column: 2, scope: !995)
!1027 = distinct !DISubprogram(name: "swap_simple<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem11swap_simple17h25eaebc9d9b1d20dE", scope: !673, file: !996, line: 763, type: !1028, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1031)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{null, !1030, !1030}
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!1031 = !{!1032, !1033, !1034, !1036}
!1032 = !DILocalVariable(name: "x", arg: 1, scope: !1027, file: !996, line: 763, type: !1030)
!1033 = !DILocalVariable(name: "y", arg: 2, scope: !1027, file: !996, line: 763, type: !1030)
!1034 = !DILocalVariable(name: "a", scope: !1035, file: !996, line: 780, type: !13, align: 8)
!1035 = distinct !DILexicalBlock(scope: !1027, file: !996, line: 780, column: 9)
!1036 = !DILocalVariable(name: "b", scope: !1037, file: !996, line: 781, type: !13, align: 8)
!1037 = distinct !DILexicalBlock(scope: !1035, file: !996, line: 781, column: 9)
!1038 = !DILocation(line: 763, column: 36, scope: !1027)
!1039 = !DILocation(line: 763, column: 47, scope: !1027)
!1040 = !DILocation(line: 780, column: 13, scope: !1035)
!1041 = !DILocation(line: 781, column: 13, scope: !1037)
!1042 = !DILocation(line: 780, column: 17, scope: !1027)
!1043 = !DILocation(line: 781, column: 17, scope: !1035)
!1044 = !DILocation(line: 782, column: 23, scope: !1037)
!1045 = !DILocation(line: 782, column: 9, scope: !1037)
!1046 = !DILocation(line: 783, column: 23, scope: !1037)
!1047 = !DILocation(line: 783, column: 9, scope: !1037)
!1048 = !DILocation(line: 785, column: 2, scope: !1027)
!1049 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem11swap_simple17h9214e2f4aabb90b2E", scope: !673, file: !996, line: 763, type: !1050, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !1053)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{null, !1052, !1052}
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !671, size: 64, align: 64, dwarfAddressSpace: 0)
!1053 = !{!1054, !1055, !1056, !1058}
!1054 = !DILocalVariable(name: "x", arg: 1, scope: !1049, file: !996, line: 763, type: !1052)
!1055 = !DILocalVariable(name: "y", arg: 2, scope: !1049, file: !996, line: 763, type: !1052)
!1056 = !DILocalVariable(name: "a", scope: !1057, file: !996, line: 780, type: !671, align: 8)
!1057 = distinct !DILexicalBlock(scope: !1049, file: !996, line: 780, column: 9)
!1058 = !DILocalVariable(name: "b", scope: !1059, file: !996, line: 781, type: !671, align: 8)
!1059 = distinct !DILexicalBlock(scope: !1057, file: !996, line: 781, column: 9)
!1060 = !DILocation(line: 763, column: 36, scope: !1049)
!1061 = !DILocation(line: 763, column: 47, scope: !1049)
!1062 = !DILocation(line: 780, column: 13, scope: !1057)
!1063 = !DILocation(line: 781, column: 13, scope: !1059)
!1064 = !DILocation(line: 780, column: 17, scope: !1049)
!1065 = !DILocation(line: 781, column: 17, scope: !1057)
!1066 = !DILocation(line: 782, column: 23, scope: !1059)
!1067 = !DILocation(line: 782, column: 9, scope: !1059)
!1068 = !DILocation(line: 783, column: 23, scope: !1059)
!1069 = !DILocation(line: 783, column: 9, scope: !1059)
!1070 = !DILocation(line: 785, column: 2, scope: !1049)
!1071 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3mem11swap_simple17hfeda14ea61450d02E", scope: !673, file: !996, line: 763, type: !1072, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !1075)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{null, !1074, !1074}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !704, size: 64, align: 64, dwarfAddressSpace: 0)
!1075 = !{!1076, !1077, !1078, !1080}
!1076 = !DILocalVariable(name: "x", arg: 1, scope: !1071, file: !996, line: 763, type: !1074)
!1077 = !DILocalVariable(name: "y", arg: 2, scope: !1071, file: !996, line: 763, type: !1074)
!1078 = !DILocalVariable(name: "a", scope: !1079, file: !996, line: 780, type: !704, align: 8)
!1079 = distinct !DILexicalBlock(scope: !1071, file: !996, line: 780, column: 9)
!1080 = !DILocalVariable(name: "b", scope: !1081, file: !996, line: 781, type: !704, align: 8)
!1081 = distinct !DILexicalBlock(scope: !1079, file: !996, line: 781, column: 9)
!1082 = !DILocation(line: 763, column: 36, scope: !1071)
!1083 = !DILocation(line: 763, column: 47, scope: !1071)
!1084 = !DILocation(line: 780, column: 17, scope: !1071)
!1085 = !DILocation(line: 780, column: 13, scope: !1079)
!1086 = !DILocation(line: 781, column: 17, scope: !1079)
!1087 = !DILocation(line: 781, column: 13, scope: !1081)
!1088 = !DILocation(line: 782, column: 9, scope: !1081)
!1089 = !DILocation(line: 783, column: 9, scope: !1081)
!1090 = !DILocation(line: 785, column: 2, scope: !1071)
!1091 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem4swap17hc8c42478b0aa4ab0E", scope: !673, file: !996, line: 726, type: !1028, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1092)
!1092 = !{!1093, !1094}
!1093 = !DILocalVariable(name: "x", arg: 1, scope: !1091, file: !996, line: 726, type: !1030)
!1094 = !DILocalVariable(name: "y", arg: 2, scope: !1091, file: !996, line: 726, type: !1030)
!1095 = !DILocation(line: 726, column: 22, scope: !1091)
!1096 = !DILocation(line: 726, column: 33, scope: !1091)
!1097 = !DILocation(line: 741, column: 12, scope: !1091)
!1098 = !DILocation(line: 755, column: 5, scope: !1091)
!1099 = !DILocation(line: 744, column: 29, scope: !1091)
!1100 = !DILocation(line: 756, column: 2, scope: !1091)
!1101 = distinct !DISubprogram(name: "forget<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem6forget17hb08bf7ff8de50cc7E", scope: !673, file: !996, line: 148, type: !1102, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1104)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{null, !13}
!1104 = !{!1105}
!1105 = !DILocalVariable(name: "t", arg: 1, scope: !1101, file: !996, line: 148, type: !13)
!1106 = !DILocation(line: 148, column: 24, scope: !1101)
!1107 = !DILocalVariable(name: "value", arg: 1, scope: !1108, file: !1109, line: 70, type: !13)
!1108 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h5cb861eb3e613edbE", scope: !677, file: !1109, line: 70, type: !1110, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, declaration: !1112, retainedNodes: !1113)
!1109 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "757172e61d55c773a9468e6d26f74706")
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!677, !13}
!1112 = !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h5cb861eb3e613edbE", scope: !677, file: !1109, line: 70, type: !1110, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !189)
!1113 = !{!1107}
!1114 = !DILocation(line: 70, column: 22, scope: !1108, inlinedAt: !1115)
!1115 = distinct !DILocation(line: 149, column: 13, scope: !1101)
!1116 = !DILocation(line: 71, column: 9, scope: !1108, inlinedAt: !1115)
!1117 = !DILocation(line: 150, column: 2, scope: !1101)
!1118 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h61f2a1803e6b4dbdE", scope: !1120, file: !1119, line: 576, type: !1122, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1124)
!1119 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "9f9a8c2611080e433b531f707b01187e")
!1120 = !DINamespace(name: "{impl#11}", scope: !1121)
!1121 = !DINamespace(name: "num", scope: !142)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!458, !9, !9}
!1124 = !{!1125, !1126, !1127, !1129}
!1125 = !DILocalVariable(name: "self", arg: 1, scope: !1118, file: !1119, line: 576, type: !9)
!1126 = !DILocalVariable(name: "rhs", arg: 2, scope: !1118, file: !1119, line: 576, type: !9)
!1127 = !DILocalVariable(name: "a", scope: !1128, file: !1119, line: 577, type: !9, align: 8)
!1128 = distinct !DILexicalBlock(scope: !1118, file: !1119, line: 577, column: 13)
!1129 = !DILocalVariable(name: "b", scope: !1128, file: !1119, line: 577, type: !401, align: 1)
!1130 = !DILocation(line: 576, column: 34, scope: !1118)
!1131 = !DILocation(line: 576, column: 40, scope: !1118)
!1132 = !DILocalVariable(name: "self", arg: 1, scope: !1133, file: !1119, line: 1702, type: !9)
!1133 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hde54975a88b7524cE", scope: !1120, file: !1119, line: 1702, type: !1134, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1140)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!1136, !9, !9}
!1136 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1137, templateParams: !24, identifier: "4030f8452435be378048c6d8b59c8539")
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1136, file: !2, baseType: !9, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1136, file: !2, baseType: !401, size: 8, align: 8, offset: 64)
!1140 = !{!1132, !1141, !1142, !1144}
!1141 = !DILocalVariable(name: "rhs", arg: 2, scope: !1133, file: !1119, line: 1702, type: !9)
!1142 = !DILocalVariable(name: "a", scope: !1143, file: !1119, line: 1703, type: !22, align: 8)
!1143 = distinct !DILexicalBlock(scope: !1133, file: !1119, line: 1703, column: 13)
!1144 = !DILocalVariable(name: "b", scope: !1143, file: !1119, line: 1703, type: !401, align: 1)
!1145 = !DILocation(line: 1702, column: 38, scope: !1133, inlinedAt: !1146)
!1146 = distinct !DILocation(line: 577, column: 26, scope: !1118)
!1147 = !DILocation(line: 1702, column: 44, scope: !1133, inlinedAt: !1146)
!1148 = !DILocation(line: 1703, column: 26, scope: !1133, inlinedAt: !1146)
!1149 = !DILocation(line: 1703, column: 18, scope: !1133, inlinedAt: !1146)
!1150 = !DILocation(line: 1703, column: 18, scope: !1143, inlinedAt: !1146)
!1151 = !DILocation(line: 1703, column: 21, scope: !1133, inlinedAt: !1146)
!1152 = !DILocation(line: 1703, column: 21, scope: !1143, inlinedAt: !1146)
!1153 = !DILocation(line: 1704, column: 13, scope: !1143, inlinedAt: !1146)
!1154 = !DILocation(line: 1705, column: 10, scope: !1133, inlinedAt: !1146)
!1155 = !DILocation(line: 577, column: 26, scope: !1118)
!1156 = !DILocation(line: 577, column: 18, scope: !1118)
!1157 = !DILocation(line: 577, column: 18, scope: !1128)
!1158 = !DILocation(line: 577, column: 21, scope: !1118)
!1159 = !DILocation(line: 577, column: 21, scope: !1128)
!1160 = !DILocation(line: 578, column: 16, scope: !1128)
!1161 = !DILocation(line: 578, column: 42, scope: !1128)
!1162 = !DILocation(line: 578, column: 13, scope: !1128)
!1163 = !DILocation(line: 578, column: 30, scope: !1128)
!1164 = !DILocation(line: 579, column: 10, scope: !1118)
!1165 = !{i64 0, i64 2}
!1166 = distinct !DISubprogram(name: "next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h83aa73e12cb434f0E", scope: !1120, file: !1119, line: 2216, type: !1167, scopeLine: 2216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1169)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!9, !9}
!1169 = !{!1170}
!1170 = !DILocalVariable(name: "self", arg: 1, scope: !1166, file: !1119, line: 2216, type: !9)
!1171 = !DILocation(line: 2216, column: 40, scope: !1166)
!1172 = !DILocation(line: 2217, column: 13, scope: !1166)
!1173 = !DILocation(line: 2218, column: 10, scope: !1166)
!1174 = distinct !DISubprogram(name: "one_less_than_next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h26110568130db274E", scope: !1120, file: !1119, line: 2184, type: !1167, scopeLine: 2184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1175)
!1175 = !{!1176, !1177, !1179}
!1176 = !DILocalVariable(name: "self", arg: 1, scope: !1174, file: !1119, line: 2184, type: !9)
!1177 = !DILocalVariable(name: "p", scope: !1178, file: !1119, line: 2187, type: !9, align: 8)
!1178 = distinct !DILexicalBlock(scope: !1174, file: !1119, line: 2187, column: 13)
!1179 = !DILocalVariable(name: "z", scope: !1180, file: !1119, line: 2192, type: !9, align: 8)
!1180 = distinct !DILexicalBlock(scope: !1178, file: !1119, line: 2192, column: 13)
!1181 = !DILocation(line: 2184, column: 50, scope: !1174)
!1182 = !DILocation(line: 2185, column: 16, scope: !1174)
!1183 = !DILocation(line: 2187, column: 21, scope: !1174)
!1184 = !DILocation(line: 2185, column: 35, scope: !1174)
!1185 = !DILocation(line: 2194, column: 10, scope: !1174)
!1186 = !DILocation(line: 2187, column: 17, scope: !1178)
!1187 = !DILocation(line: 2192, column: 30, scope: !1178)
!1188 = !DILocation(line: 2192, column: 17, scope: !1180)
!1189 = !DILocation(line: 2193, column: 13, scope: !1180)
!1190 = distinct !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4d86d14667fde954E", scope: !396, file: !1191, line: 450, type: !1192, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !1194, retainedNodes: !1195)
!1191 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "9d2b5da18cc97d04b655a6220a6da08d")
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!174, !396}
!1194 = !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4d86d14667fde954E", scope: !396, file: !1191, line: 450, type: !1192, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!1195 = !{!1196, !1197, !1199}
!1196 = !DILocalVariable(name: "self", arg: 1, scope: !1190, file: !1191, line: 450, type: !396)
!1197 = !DILocalVariable(name: "exclusive_end", scope: !1198, file: !1191, line: 454, type: !9, align: 8)
!1198 = distinct !DILexicalBlock(scope: !1190, file: !1191, line: 454, column: 9)
!1199 = !DILocalVariable(name: "start", scope: !1200, file: !1191, line: 455, type: !9, align: 8)
!1200 = distinct !DILexicalBlock(scope: !1198, file: !1191, line: 455, column: 9)
!1201 = !DILocation(line: 450, column: 42, scope: !1190)
!1202 = !DILocation(line: 455, column: 13, scope: !1200)
!1203 = !DILocation(line: 454, column: 29, scope: !1190)
!1204 = !DILocation(line: 454, column: 13, scope: !1198)
!1205 = !DILocation(line: 455, column: 24, scope: !1198)
!1206 = !DILocation(line: 455, column: 64, scope: !1198)
!1207 = !DILocation(line: 455, column: 21, scope: !1198)
!1208 = !DILocation(line: 455, column: 41, scope: !1198)
!1209 = !DILocation(line: 456, column: 9, scope: !1200)
!1210 = !DILocation(line: 457, column: 6, scope: !1190)
!1211 = distinct !DISubprogram(name: "call_mut<(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion), core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h68c478d88bc94cb5E", scope: !1213, file: !1212, line: 293, type: !1216, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1236, retainedNodes: !1229)
!1212 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "cfb73adf0f4bb6df3856d6eaf613e707")
!1213 = !DINamespace(name: "{impl#3}", scope: !1214)
!1214 = !DINamespace(name: "impls", scope: !1215)
!1215 = !DINamespace(name: "function", scope: !176)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!401, !1218, !12, !12}
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1219, size: 64, align: 64, dwarfAddressSpace: 0)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1220, size: 64, align: 64, dwarfAddressSpace: 0)
!1220 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", scope: !1221, file: !2, size: 64, align: 64, elements: !1223, templateParams: !24, identifier: "ce7f29d872740acf42a9978cd51cfca3")
!1221 = !DINamespace(name: "sort_unstable_by", scope: !1222)
!1222 = !DINamespace(name: "{impl#0}", scope: !166)
!1223 = !{!1224}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__compare", scope: !1220, file: !2, baseType: !1225, size: 64, align: 64)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}", baseType: !1226, size: 64, align: 64, dwarfAddressSpace: 0)
!1226 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1227, file: !2, align: 8, elements: !24, identifier: "48115d2a656eb2a5b2a58aa9b5f2d359")
!1227 = !DINamespace(name: "sort", scope: !1228)
!1228 = !DINamespace(name: "{impl#0}", scope: !14)
!1229 = !{!1230, !1231}
!1230 = !DILocalVariable(name: "self", arg: 1, scope: !1211, file: !1212, line: 293, type: !1218)
!1231 = !DILocalVariable(name: "args", arg: 2, scope: !1211, file: !1212, line: 293, type: !1232)
!1232 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion)", file: !2, size: 128, align: 64, elements: !1233, templateParams: !24, identifier: "8b9ada79a3b99dd02faffbd0cfd14659")
!1233 = !{!1234, !1235}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1232, file: !2, baseType: !12, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1232, file: !2, baseType: !12, size: 64, align: 64, offset: 64)
!1236 = !{!1237, !1238}
!1237 = !DITemplateTypeParameter(name: "A", type: !1232)
!1238 = !DITemplateTypeParameter(name: "F", type: !1220)
!1239 = !DILocation(line: 293, column: 40, scope: !1211)
!1240 = !DILocation(line: 293, column: 51, scope: !1211)
!1241 = !DILocation(line: 294, column: 13, scope: !1211)
!1242 = !DILocation(line: 295, column: 10, scope: !1211)
!1243 = distinct !DISubprogram(name: "drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h9eb74c98e442b3e6E", scope: !204, file: !1244, line: 497, type: !1245, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1255, retainedNodes: !1253)
!1244 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "2a4cb7b22a4db908cc4f5cfdc074e9b2")
!1245 = !DISubroutineType(types: !1246)
!1246 = !{null, !1247}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1248, size: 64, align: 64, dwarfAddressSpace: 0)
!1248 = !DICompositeType(tag: DW_TAG_structure_type, name: "InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !1249, file: !2, size: 128, align: 64, elements: !1250, templateParams: !189, identifier: "888e09b92b03bdf427eefa11fa80dce8")
!1249 = !DINamespace(name: "sort", scope: !166)
!1250 = !{!1251, !1252}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1248, file: !2, baseType: !207, size: 64, align: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1248, file: !2, baseType: !261, size: 64, align: 64, offset: 64)
!1253 = !{!1254}
!1254 = !DILocalVariable(arg: 1, scope: !1243, file: !1244, line: 497, type: !1247)
!1255 = !{!1256}
!1256 = !DITemplateTypeParameter(name: "T", type: !1248)
!1257 = !DILocation(line: 497, column: 1, scope: !1243)
!1258 = distinct !DISubprogram(name: "swap_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping17h6ff66115d4295869E", scope: !204, file: !1244, line: 909, type: !1259, scopeLine: 909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1261)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{null, !261, !261, !9}
!1261 = !{!1262, !1263, !1264, !1265, !1267, !1269, !1271, !1274, !1276}
!1262 = !DILocalVariable(name: "x", arg: 1, scope: !1258, file: !1244, line: 909, type: !261)
!1263 = !DILocalVariable(name: "y", arg: 2, scope: !1258, file: !1244, line: 909, type: !261)
!1264 = !DILocalVariable(name: "count", arg: 3, scope: !1258, file: !1244, line: 909, type: !9)
!1265 = !DILocalVariable(name: "x", scope: !1266, file: !1244, line: 949, type: !618, align: 8)
!1266 = distinct !DILexicalBlock(scope: !1258, file: !1244, line: 916, column: 17)
!1267 = !DILocalVariable(name: "y", scope: !1268, file: !1244, line: 949, type: !618, align: 8)
!1268 = distinct !DILexicalBlock(scope: !1266, file: !1244, line: 917, column: 17)
!1269 = !DILocalVariable(name: "count", scope: !1270, file: !1244, line: 949, type: !9, align: 8)
!1270 = distinct !DILexicalBlock(scope: !1268, file: !1244, line: 918, column: 17)
!1271 = !DILocalVariable(name: "x", scope: !1272, file: !1244, line: 950, type: !1273, align: 8)
!1272 = distinct !DILexicalBlock(scope: !1258, file: !1244, line: 916, column: 17)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!1274 = !DILocalVariable(name: "y", scope: !1275, file: !1244, line: 950, type: !1273, align: 8)
!1275 = distinct !DILexicalBlock(scope: !1272, file: !1244, line: 917, column: 17)
!1276 = !DILocalVariable(name: "count", scope: !1277, file: !1244, line: 950, type: !9, align: 8)
!1277 = distinct !DILexicalBlock(scope: !1275, file: !1244, line: 918, column: 17)
!1278 = !DILocation(line: 909, column: 44, scope: !1258)
!1279 = !DILocation(line: 909, column: 55, scope: !1258)
!1280 = !DILocation(line: 909, column: 66, scope: !1258)
!1281 = !DILocation(line: 932, column: 9, scope: !1258)
!1282 = !DILocation(line: 945, column: 8, scope: !1258)
!1283 = !DILocalVariable(name: "x", arg: 1, scope: !1284, file: !218, line: 2517, type: !261)
!1284 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping7runtime17h8247aa2f2b5a38afE", scope: !1285, file: !218, line: 2517, type: !1259, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1286)
!1285 = !DINamespace(name: "swap_nonoverlapping", scope: !204)
!1286 = !{!1283, !1287, !1288}
!1287 = !DILocalVariable(name: "y", arg: 2, scope: !1284, file: !218, line: 2517, type: !261)
!1288 = !DILocalVariable(name: "count", arg: 3, scope: !1284, file: !218, line: 2517, type: !9)
!1289 = !DILocation(line: 2517, column: 39, scope: !1284, inlinedAt: !1290)
!1290 = distinct !DILocation(line: 932, column: 9, scope: !1258)
!1291 = !DILocation(line: 936, column: 13, scope: !1292, inlinedAt: !1290)
!1292 = !DILexicalBlockFile(scope: !1284, file: !1244, discriminator: 0)
!1293 = !DILocation(line: 937, column: 20, scope: !1292, inlinedAt: !1290)
!1294 = !DILocation(line: 938, column: 20, scope: !1292, inlinedAt: !1290)
!1295 = !DILocation(line: 2518, column: 20, scope: !1284, inlinedAt: !1290)
!1296 = !DILocation(line: 2520, column: 21, scope: !1284, inlinedAt: !1290)
!1297 = !DILocalVariable(name: "self", arg: 1, scope: !1298, file: !1119, line: 2169, type: !9)
!1298 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h8dc5a08c7a16ff10E", scope: !1120, file: !1119, line: 2169, type: !721, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1299)
!1299 = !{!1297}
!1300 = !DILocation(line: 2169, column: 38, scope: !1298, inlinedAt: !1301)
!1301 = distinct !DILocation(line: 946, column: 14, scope: !1258)
!1302 = !DILocalVariable(name: "self", arg: 1, scope: !1303, file: !1119, line: 106, type: !9)
!1303 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h1161cadf2487f324E", scope: !1120, file: !1119, line: 106, type: !1304, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1306)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!27, !9}
!1306 = !{!1302}
!1307 = !DILocation(line: 106, column: 33, scope: !1303, inlinedAt: !1308)
!1308 = distinct !DILocation(line: 2170, column: 13, scope: !1298, inlinedAt: !1301)
!1309 = !DILocation(line: 107, column: 13, scope: !1303, inlinedAt: !1308)
!1310 = !DILocation(line: 2170, column: 13, scope: !1298, inlinedAt: !1301)
!1311 = !DILocation(line: 946, column: 13, scope: !1258)
!1312 = !DILocation(line: 946, column: 12, scope: !1258)
!1313 = !DILocation(line: 947, column: 38, scope: !1258)
!1314 = !DILocation(line: 947, column: 16, scope: !1258)
!1315 = !DILocation(line: 954, column: 14, scope: !1258)
!1316 = !DILocation(line: 949, column: 9, scope: !1258)
!1317 = !DILocation(line: 950, column: 9, scope: !1258)
!1318 = !DILocalVariable(name: "self", arg: 1, scope: !1319, file: !256, line: 57, type: !261)
!1319 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h56b4d9deba205251E", scope: !267, file: !256, line: 57, type: !1320, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1323, retainedNodes: !1322)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!618, !261}
!1322 = !{!1318}
!1323 = !{!190, !1324}
!1324 = !DITemplateTypeParameter(name: "U", type: !9)
!1325 = !DILocation(line: 57, column: 26, scope: !1319, inlinedAt: !1326)
!1326 = distinct !DILocation(line: 949, column: 9, scope: !1258)
!1327 = !DILocation(line: 949, column: 9, scope: !1266)
!1328 = !DILocation(line: 57, column: 26, scope: !1319, inlinedAt: !1329)
!1329 = distinct !DILocation(line: 949, column: 9, scope: !1266)
!1330 = !DILocation(line: 949, column: 9, scope: !1268)
!1331 = !DILocation(line: 949, column: 9, scope: !1270)
!1332 = !DILocation(line: 955, column: 2, scope: !1258)
!1333 = !DILocalVariable(name: "self", arg: 1, scope: !1334, file: !256, line: 57, type: !261)
!1334 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h09971b36fff1b7c2E", scope: !267, file: !256, line: 57, type: !1335, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1338, retainedNodes: !1337)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!1273, !261}
!1337 = !{!1333}
!1338 = !{!190, !1339}
!1339 = !DITemplateTypeParameter(name: "U", type: !123)
!1340 = !DILocation(line: 57, column: 26, scope: !1334, inlinedAt: !1341)
!1341 = distinct !DILocation(line: 950, column: 9, scope: !1258)
!1342 = !DILocation(line: 950, column: 9, scope: !1272)
!1343 = !DILocation(line: 57, column: 26, scope: !1334, inlinedAt: !1344)
!1344 = distinct !DILocation(line: 950, column: 9, scope: !1272)
!1345 = !DILocation(line: 950, column: 9, scope: !1275)
!1346 = !DILocation(line: 950, column: 9, scope: !1277)
!1347 = distinct !DISubprogram(name: "slice_from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hacf245b3e0dc6ec3E", scope: !204, file: !1244, line: 740, type: !1348, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1350)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!169, !207, !9}
!1350 = !{!1351, !1352}
!1351 = !DILocalVariable(name: "data", arg: 1, scope: !1347, file: !1244, line: 740, type: !207)
!1352 = !DILocalVariable(name: "len", arg: 2, scope: !1347, file: !1244, line: 740, type: !9)
!1353 = !DILocation(line: 740, column: 38, scope: !1347)
!1354 = !DILocation(line: 740, column: 54, scope: !1347)
!1355 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !1356)
!1356 = distinct !DILocation(line: 741, column: 20, scope: !1347)
!1357 = !DILocation(line: 741, column: 5, scope: !1347)
!1358 = !DILocation(line: 742, column: 2, scope: !1347)
!1359 = distinct !DISubprogram(name: "drop_in_place<u32>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u32$GT$17hfe6a7d81b2093c11E", scope: !204, file: !1244, line: 497, type: !1360, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1365, retainedNodes: !1363)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{null, !1362}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!1363 = !{!1364}
!1364 = !DILocalVariable(arg: 1, scope: !1359, file: !1244, line: 497, type: !1362)
!1365 = !{!1366}
!1366 = !DITemplateTypeParameter(name: "T", type: !27)
!1367 = !DILocation(line: 497, column: 1, scope: !1359)
!1368 = distinct !DISubprogram(name: "drop_in_place<u64>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u64$GT$17h05ec73a08d81ae4fE", scope: !204, file: !1244, line: 497, type: !1369, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1374, retainedNodes: !1372)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{null, !1371}
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!1372 = !{!1373}
!1373 = !DILocalVariable(arg: 1, scope: !1368, file: !1244, line: 497, type: !1371)
!1374 = !{!1375}
!1375 = !DITemplateTypeParameter(name: "T", type: !22)
!1376 = !DILocation(line: 497, column: 1, scope: !1368)
!1377 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h505fa47346920890E", scope: !204, file: !1244, line: 772, type: !1378, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1380)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!236, !261, !9}
!1380 = !{!1381, !1382}
!1381 = !DILocalVariable(name: "data", arg: 1, scope: !1377, file: !1244, line: 772, type: !261)
!1382 = !DILocalVariable(name: "len", arg: 2, scope: !1377, file: !1244, line: 772, type: !9)
!1383 = !DILocation(line: 772, column: 42, scope: !1377)
!1384 = !DILocation(line: 772, column: 56, scope: !1377)
!1385 = !DILocalVariable(name: "self", arg: 1, scope: !1386, file: !256, line: 57, type: !261)
!1386 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hf9da6f0597baf9efE", scope: !267, file: !256, line: 57, type: !1387, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !540, retainedNodes: !1390)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!1389, !261}
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1390 = !{!1385}
!1391 = !DILocation(line: 57, column: 26, scope: !1386, inlinedAt: !1392)
!1392 = distinct !DILocation(line: 773, column: 24, scope: !1377)
!1393 = !DILocation(line: 773, column: 5, scope: !1377)
!1394 = !DILocation(line: 774, column: 2, scope: !1377)
!1395 = distinct !DISubprogram(name: "drop_in_place<&u8>", linkageName: "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h2b611129a6be70b4E", scope: !204, file: !1244, line: 497, type: !1396, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1401, retainedNodes: !1399)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{null, !1398}
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u8", baseType: !122, size: 64, align: 64, dwarfAddressSpace: 0)
!1399 = !{!1400}
!1400 = !DILocalVariable(arg: 1, scope: !1395, file: !1244, line: 497, type: !1398)
!1401 = !{!1402}
!1402 = !DITemplateTypeParameter(name: "T", type: !122)
!1403 = !DILocation(line: 497, column: 1, scope: !1395)
!1404 = distinct !DISubprogram(name: "drop_in_place<&u32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17hd4ef7394b8ffe338E", scope: !204, file: !1244, line: 497, type: !1405, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1410, retainedNodes: !1408)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{null, !1407}
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u32", baseType: !85, size: 64, align: 64, dwarfAddressSpace: 0)
!1408 = !{!1409}
!1409 = !DILocalVariable(arg: 1, scope: !1404, file: !1244, line: 497, type: !1407)
!1410 = !{!1411}
!1411 = !DITemplateTypeParameter(name: "T", type: !85)
!1412 = !DILocation(line: 497, column: 1, scope: !1404)
!1413 = distinct !DISubprogram(name: "drop_in_place<&u64>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h3531b96220751359E", scope: !204, file: !1244, line: 497, type: !1414, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1419, retainedNodes: !1417)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{null, !1416}
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u64", baseType: !132, size: 64, align: 64, dwarfAddressSpace: 0)
!1417 = !{!1418}
!1418 = !DILocalVariable(arg: 1, scope: !1413, file: !1244, line: 497, type: !1416)
!1419 = !{!1420}
!1420 = !DITemplateTypeParameter(name: "T", type: !132)
!1421 = !DILocation(line: 497, column: 1, scope: !1413)
!1422 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h2e47c7636d864572E", scope: !204, file: !1244, line: 963, type: !1259, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1430, !1432, !1434, !1436}
!1424 = !DILocalVariable(name: "x", arg: 1, scope: !1422, file: !1244, line: 963, type: !261)
!1425 = !DILocalVariable(name: "y", arg: 2, scope: !1422, file: !1244, line: 963, type: !261)
!1426 = !DILocalVariable(name: "count", arg: 3, scope: !1422, file: !1244, line: 963, type: !9)
!1427 = !DILocalVariable(name: "x", scope: !1428, file: !1244, line: 964, type: !1429, align: 8)
!1428 = distinct !DILexicalBlock(scope: !1422, file: !1244, line: 964, column: 5)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !671, size: 64, align: 64, dwarfAddressSpace: 0)
!1430 = !DILocalVariable(name: "y", scope: !1431, file: !1244, line: 965, type: !1429, align: 8)
!1431 = distinct !DILexicalBlock(scope: !1428, file: !1244, line: 965, column: 5)
!1432 = !DILocalVariable(name: "i", scope: !1433, file: !1244, line: 966, type: !9, align: 8)
!1433 = distinct !DILexicalBlock(scope: !1431, file: !1244, line: 966, column: 5)
!1434 = !DILocalVariable(name: "x", scope: !1435, file: !1244, line: 969, type: !1052, align: 8)
!1435 = distinct !DILexicalBlock(scope: !1433, file: !1244, line: 969, column: 9)
!1436 = !DILocalVariable(name: "y", scope: !1437, file: !1244, line: 972, type: !1052, align: 8)
!1437 = distinct !DILexicalBlock(scope: !1435, file: !1244, line: 972, column: 9)
!1438 = !DILocation(line: 963, column: 55, scope: !1422)
!1439 = !DILocation(line: 963, column: 66, scope: !1422)
!1440 = !DILocation(line: 963, column: 77, scope: !1422)
!1441 = !DILocation(line: 966, column: 9, scope: !1433)
!1442 = !DILocalVariable(name: "self", arg: 1, scope: !1443, file: !256, line: 57, type: !261)
!1443 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h9936800470dc9df8E", scope: !267, file: !256, line: 57, type: !1444, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1447, retainedNodes: !1446)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!1429, !261}
!1446 = !{!1442}
!1447 = !{!190, !1448}
!1448 = !DITemplateTypeParameter(name: "U", type: !671)
!1449 = !DILocation(line: 57, column: 26, scope: !1443, inlinedAt: !1450)
!1450 = distinct !DILocation(line: 964, column: 13, scope: !1422)
!1451 = !DILocation(line: 964, column: 13, scope: !1422)
!1452 = !DILocation(line: 964, column: 9, scope: !1428)
!1453 = !DILocation(line: 57, column: 26, scope: !1443, inlinedAt: !1454)
!1454 = distinct !DILocation(line: 965, column: 13, scope: !1428)
!1455 = !DILocation(line: 965, column: 13, scope: !1428)
!1456 = !DILocation(line: 965, column: 9, scope: !1431)
!1457 = !DILocation(line: 966, column: 17, scope: !1431)
!1458 = !DILocation(line: 967, column: 5, scope: !1433)
!1459 = !DILocation(line: 967, column: 11, scope: !1433)
!1460 = !DILocation(line: 977, column: 2, scope: !1422)
!1461 = !DILocation(line: 969, column: 38, scope: !1433)
!1462 = !DILocalVariable(name: "self", arg: 1, scope: !1463, file: !256, line: 1025, type: !1429)
!1463 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf7986d9040cd5e64E", scope: !267, file: !256, line: 1025, type: !1464, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !1466)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!1429, !1429, !9}
!1466 = !{!1462, !1467}
!1467 = !DILocalVariable(name: "count", arg: 2, scope: !1463, file: !256, line: 1025, type: !9)
!1468 = !DILocation(line: 1025, column: 29, scope: !1463, inlinedAt: !1469)
!1469 = distinct !DILocation(line: 969, column: 32, scope: !1433)
!1470 = !DILocation(line: 1025, column: 35, scope: !1463, inlinedAt: !1469)
!1471 = !DILocation(line: 1037, column: 13, scope: !1463, inlinedAt: !1469)
!1472 = !DILocation(line: 969, column: 26, scope: !1433)
!1473 = !DILocation(line: 969, column: 13, scope: !1435)
!1474 = !DILocation(line: 972, column: 38, scope: !1435)
!1475 = !DILocation(line: 1025, column: 29, scope: !1463, inlinedAt: !1476)
!1476 = distinct !DILocation(line: 972, column: 32, scope: !1435)
!1477 = !DILocation(line: 1025, column: 35, scope: !1463, inlinedAt: !1476)
!1478 = !DILocation(line: 1037, column: 13, scope: !1463, inlinedAt: !1476)
!1479 = !DILocation(line: 972, column: 26, scope: !1435)
!1480 = !DILocation(line: 972, column: 13, scope: !1437)
!1481 = !DILocation(line: 973, column: 9, scope: !1437)
!1482 = !DILocation(line: 975, column: 9, scope: !1437)
!1483 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<usize>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h8145a2749910b37cE", scope: !204, file: !1244, line: 963, type: !1484, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !1486)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{null, !618, !618, !9}
!1486 = !{!1487, !1488, !1489, !1490, !1493, !1495, !1497, !1499}
!1487 = !DILocalVariable(name: "x", arg: 1, scope: !1483, file: !1244, line: 963, type: !618)
!1488 = !DILocalVariable(name: "y", arg: 2, scope: !1483, file: !1244, line: 963, type: !618)
!1489 = !DILocalVariable(name: "count", arg: 3, scope: !1483, file: !1244, line: 963, type: !9)
!1490 = !DILocalVariable(name: "x", scope: !1491, file: !1244, line: 964, type: !1492, align: 8)
!1491 = distinct !DILexicalBlock(scope: !1483, file: !1244, line: 964, column: 5)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !704, size: 64, align: 64, dwarfAddressSpace: 0)
!1493 = !DILocalVariable(name: "y", scope: !1494, file: !1244, line: 965, type: !1492, align: 8)
!1494 = distinct !DILexicalBlock(scope: !1491, file: !1244, line: 965, column: 5)
!1495 = !DILocalVariable(name: "i", scope: !1496, file: !1244, line: 966, type: !9, align: 8)
!1496 = distinct !DILexicalBlock(scope: !1494, file: !1244, line: 966, column: 5)
!1497 = !DILocalVariable(name: "x", scope: !1498, file: !1244, line: 969, type: !1074, align: 8)
!1498 = distinct !DILexicalBlock(scope: !1496, file: !1244, line: 969, column: 9)
!1499 = !DILocalVariable(name: "y", scope: !1500, file: !1244, line: 972, type: !1074, align: 8)
!1500 = distinct !DILexicalBlock(scope: !1498, file: !1244, line: 972, column: 9)
!1501 = !DILocation(line: 963, column: 55, scope: !1483)
!1502 = !DILocation(line: 963, column: 66, scope: !1483)
!1503 = !DILocation(line: 963, column: 77, scope: !1483)
!1504 = !DILocation(line: 966, column: 9, scope: !1496)
!1505 = !DILocalVariable(name: "self", arg: 1, scope: !1506, file: !256, line: 57, type: !618)
!1506 = distinct !DISubprogram(name: "cast<usize, core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hff2eff6b20c78034E", scope: !267, file: !256, line: 57, type: !1507, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1510, retainedNodes: !1509)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!1492, !618}
!1509 = !{!1505}
!1510 = !{!466, !1511}
!1511 = !DITemplateTypeParameter(name: "U", type: !704)
!1512 = !DILocation(line: 57, column: 26, scope: !1506, inlinedAt: !1513)
!1513 = distinct !DILocation(line: 964, column: 13, scope: !1483)
!1514 = !DILocation(line: 964, column: 13, scope: !1483)
!1515 = !DILocation(line: 964, column: 9, scope: !1491)
!1516 = !DILocation(line: 57, column: 26, scope: !1506, inlinedAt: !1517)
!1517 = distinct !DILocation(line: 965, column: 13, scope: !1491)
!1518 = !DILocation(line: 965, column: 13, scope: !1491)
!1519 = !DILocation(line: 965, column: 9, scope: !1494)
!1520 = !DILocation(line: 966, column: 17, scope: !1494)
!1521 = !DILocation(line: 967, column: 5, scope: !1496)
!1522 = !DILocation(line: 967, column: 11, scope: !1496)
!1523 = !DILocation(line: 977, column: 2, scope: !1483)
!1524 = !DILocation(line: 969, column: 38, scope: !1496)
!1525 = !DILocalVariable(name: "self", arg: 1, scope: !1526, file: !256, line: 1025, type: !1492)
!1526 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h378ef4be66c8e041E", scope: !267, file: !256, line: 1025, type: !1527, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !1529)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!1492, !1492, !9}
!1529 = !{!1525, !1530}
!1530 = !DILocalVariable(name: "count", arg: 2, scope: !1526, file: !256, line: 1025, type: !9)
!1531 = !DILocation(line: 1025, column: 29, scope: !1526, inlinedAt: !1532)
!1532 = distinct !DILocation(line: 969, column: 32, scope: !1496)
!1533 = !DILocation(line: 1025, column: 35, scope: !1526, inlinedAt: !1532)
!1534 = !DILocation(line: 1037, column: 13, scope: !1526, inlinedAt: !1532)
!1535 = !DILocation(line: 969, column: 26, scope: !1496)
!1536 = !DILocation(line: 969, column: 13, scope: !1498)
!1537 = !DILocation(line: 972, column: 38, scope: !1498)
!1538 = !DILocation(line: 1025, column: 29, scope: !1526, inlinedAt: !1539)
!1539 = distinct !DILocation(line: 972, column: 32, scope: !1498)
!1540 = !DILocation(line: 1025, column: 35, scope: !1526, inlinedAt: !1539)
!1541 = !DILocation(line: 1037, column: 13, scope: !1526, inlinedAt: !1539)
!1542 = !DILocation(line: 972, column: 26, scope: !1498)
!1543 = !DILocation(line: 972, column: 13, scope: !1500)
!1544 = !DILocation(line: 973, column: 9, scope: !1500)
!1545 = !DILocation(line: 975, column: 9, scope: !1500)
!1546 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<u8>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17he2cd4ec494793151E", scope: !204, file: !1244, line: 963, type: !1547, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, retainedNodes: !1549)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{null, !1273, !1273, !9}
!1549 = !{!1550, !1551, !1552, !1553, !1556, !1558, !1560, !1562}
!1550 = !DILocalVariable(name: "x", arg: 1, scope: !1546, file: !1244, line: 963, type: !1273)
!1551 = !DILocalVariable(name: "y", arg: 2, scope: !1546, file: !1244, line: 963, type: !1273)
!1552 = !DILocalVariable(name: "count", arg: 3, scope: !1546, file: !1244, line: 963, type: !9)
!1553 = !DILocalVariable(name: "x", scope: !1554, file: !1244, line: 964, type: !1555, align: 8)
!1554 = distinct !DILexicalBlock(scope: !1546, file: !1244, line: 964, column: 5)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !1000, size: 64, align: 64, dwarfAddressSpace: 0)
!1556 = !DILocalVariable(name: "y", scope: !1557, file: !1244, line: 965, type: !1555, align: 8)
!1557 = distinct !DILexicalBlock(scope: !1554, file: !1244, line: 965, column: 5)
!1558 = !DILocalVariable(name: "i", scope: !1559, file: !1244, line: 966, type: !9, align: 8)
!1559 = distinct !DILexicalBlock(scope: !1557, file: !1244, line: 966, column: 5)
!1560 = !DILocalVariable(name: "x", scope: !1561, file: !1244, line: 969, type: !999, align: 8)
!1561 = distinct !DILexicalBlock(scope: !1559, file: !1244, line: 969, column: 9)
!1562 = !DILocalVariable(name: "y", scope: !1563, file: !1244, line: 972, type: !999, align: 8)
!1563 = distinct !DILexicalBlock(scope: !1561, file: !1244, line: 972, column: 9)
!1564 = !DILocation(line: 963, column: 55, scope: !1546)
!1565 = !DILocation(line: 963, column: 66, scope: !1546)
!1566 = !DILocation(line: 963, column: 77, scope: !1546)
!1567 = !DILocation(line: 966, column: 9, scope: !1559)
!1568 = !DILocalVariable(name: "self", arg: 1, scope: !1569, file: !256, line: 57, type: !1273)
!1569 = distinct !DISubprogram(name: "cast<u8, core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h7a3c570e9212eb8cE", scope: !267, file: !256, line: 57, type: !1570, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1573, retainedNodes: !1572)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!1555, !1273}
!1572 = !{!1568}
!1573 = !{!1008, !1574}
!1574 = !DITemplateTypeParameter(name: "U", type: !1000)
!1575 = !DILocation(line: 57, column: 26, scope: !1569, inlinedAt: !1576)
!1576 = distinct !DILocation(line: 964, column: 13, scope: !1546)
!1577 = !DILocation(line: 964, column: 13, scope: !1546)
!1578 = !DILocation(line: 964, column: 9, scope: !1554)
!1579 = !DILocation(line: 57, column: 26, scope: !1569, inlinedAt: !1580)
!1580 = distinct !DILocation(line: 965, column: 13, scope: !1554)
!1581 = !DILocation(line: 965, column: 13, scope: !1554)
!1582 = !DILocation(line: 965, column: 9, scope: !1557)
!1583 = !DILocation(line: 966, column: 17, scope: !1557)
!1584 = !DILocation(line: 967, column: 5, scope: !1559)
!1585 = !DILocation(line: 967, column: 11, scope: !1559)
!1586 = !DILocation(line: 977, column: 2, scope: !1546)
!1587 = !DILocation(line: 969, column: 38, scope: !1559)
!1588 = !DILocalVariable(name: "self", arg: 1, scope: !1589, file: !256, line: 1025, type: !1555)
!1589 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h6ca35c1c77373d43E", scope: !267, file: !256, line: 1025, type: !1590, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1016, retainedNodes: !1592)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!1555, !1555, !9}
!1592 = !{!1588, !1593}
!1593 = !DILocalVariable(name: "count", arg: 2, scope: !1589, file: !256, line: 1025, type: !9)
!1594 = !DILocation(line: 1025, column: 29, scope: !1589, inlinedAt: !1595)
!1595 = distinct !DILocation(line: 969, column: 32, scope: !1559)
!1596 = !DILocation(line: 1025, column: 35, scope: !1589, inlinedAt: !1595)
!1597 = !DILocation(line: 1037, column: 13, scope: !1589, inlinedAt: !1595)
!1598 = !DILocation(line: 969, column: 26, scope: !1559)
!1599 = !DILocation(line: 969, column: 13, scope: !1561)
!1600 = !DILocation(line: 972, column: 38, scope: !1561)
!1601 = !DILocation(line: 1025, column: 29, scope: !1589, inlinedAt: !1602)
!1602 = distinct !DILocation(line: 972, column: 32, scope: !1561)
!1603 = !DILocation(line: 1025, column: 35, scope: !1589, inlinedAt: !1602)
!1604 = !DILocation(line: 1037, column: 13, scope: !1589, inlinedAt: !1602)
!1605 = !DILocation(line: 972, column: 26, scope: !1561)
!1606 = !DILocation(line: 972, column: 13, scope: !1563)
!1607 = !DILocation(line: 973, column: 9, scope: !1563)
!1608 = !DILocation(line: 975, column: 9, scope: !1563)
!1609 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr4read17h4392261126658b84E", scope: !204, file: !1244, line: 1145, type: !1610, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1016, retainedNodes: !1613)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!1000, !1612}
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !1000, size: 64, align: 64, dwarfAddressSpace: 0)
!1613 = !{!1614}
!1614 = !DILocalVariable(name: "src", arg: 1, scope: !1609, file: !1244, line: 1145, type: !1612)
!1615 = !DILocation(line: 1145, column: 29, scope: !1609)
!1616 = !DILocation(line: 1174, column: 9, scope: !1609)
!1617 = !DILocation(line: 1178, column: 9, scope: !1609)
!1618 = !DILocation(line: 1180, column: 2, scope: !1609)
!1619 = !DILocalVariable(name: "src", arg: 1, scope: !1620, file: !218, line: 2517, type: !1612)
!1620 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr4read7runtime17h9135e3c3453af71eE", scope: !1621, file: !218, line: 2517, type: !1622, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1016, retainedNodes: !1624)
!1621 = !DINamespace(name: "read", scope: !204)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{null, !1612}
!1624 = !{!1619}
!1625 = !DILocation(line: 2517, column: 39, scope: !1620, inlinedAt: !1626)
!1626 = distinct !DILocation(line: 1174, column: 9, scope: !1609)
!1627 = !DILocation(line: 1176, column: 35, scope: !1628, inlinedAt: !1626)
!1628 = !DILexicalBlockFile(scope: !1620, file: !1244, discriminator: 0)
!1629 = !DILocation(line: 2518, column: 20, scope: !1620, inlinedAt: !1626)
!1630 = !DILocation(line: 2520, column: 21, scope: !1620, inlinedAt: !1626)
!1631 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read17h7be6a65340524512E", scope: !204, file: !1244, line: 1145, type: !1632, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !1634)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!671, !670}
!1634 = !{!1635}
!1635 = !DILocalVariable(name: "src", arg: 1, scope: !1631, file: !1244, line: 1145, type: !670)
!1636 = !DILocation(line: 1145, column: 29, scope: !1631)
!1637 = !DILocation(line: 1174, column: 9, scope: !1631)
!1638 = !DILocation(line: 1178, column: 9, scope: !1631)
!1639 = !DILocation(line: 1180, column: 2, scope: !1631)
!1640 = !DILocalVariable(name: "src", arg: 1, scope: !1641, file: !218, line: 2517, type: !670)
!1641 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read7runtime17h692c3a18d7e2fd21E", scope: !1621, file: !218, line: 2517, type: !1642, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !1644)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{null, !670}
!1644 = !{!1640}
!1645 = !DILocation(line: 2517, column: 39, scope: !1641, inlinedAt: !1646)
!1646 = distinct !DILocation(line: 1174, column: 9, scope: !1631)
!1647 = !DILocation(line: 1176, column: 35, scope: !1648, inlinedAt: !1646)
!1648 = !DILexicalBlockFile(scope: !1641, file: !1244, discriminator: 0)
!1649 = !DILocation(line: 2518, column: 20, scope: !1641, inlinedAt: !1646)
!1650 = !DILocation(line: 2520, column: 21, scope: !1641, inlinedAt: !1646)
!1651 = distinct !DISubprogram(name: "read<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read17h927c413b34ea08c4E", scope: !204, file: !1244, line: 1145, type: !1652, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1654)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!13, !207}
!1654 = !{!1655}
!1655 = !DILocalVariable(name: "src", arg: 1, scope: !1651, file: !1244, line: 1145, type: !207)
!1656 = !DILocation(line: 1145, column: 29, scope: !1651)
!1657 = !DILocation(line: 1174, column: 9, scope: !1651)
!1658 = !DILocation(line: 1178, column: 9, scope: !1651)
!1659 = !DILocation(line: 1180, column: 2, scope: !1651)
!1660 = !DILocalVariable(name: "src", arg: 1, scope: !1661, file: !218, line: 2517, type: !207)
!1661 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read7runtime17hf1ea5984b1a41bcdE", scope: !1621, file: !218, line: 2517, type: !1662, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1664)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{null, !207}
!1664 = !{!1660}
!1665 = !DILocation(line: 2517, column: 39, scope: !1661, inlinedAt: !1666)
!1666 = distinct !DILocation(line: 1174, column: 9, scope: !1651)
!1667 = !DILocation(line: 1176, column: 35, scope: !1668, inlinedAt: !1666)
!1668 = !DILexicalBlockFile(scope: !1661, file: !1244, discriminator: 0)
!1669 = !DILocation(line: 2518, column: 20, scope: !1661, inlinedAt: !1666)
!1670 = !DILocation(line: 2520, column: 21, scope: !1661, inlinedAt: !1666)
!1671 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr4read17h9a8e84d1c355cdbbE", scope: !204, file: !1244, line: 1145, type: !1672, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !1674)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!704, !703}
!1674 = !{!1675}
!1675 = !DILocalVariable(name: "src", arg: 1, scope: !1671, file: !1244, line: 1145, type: !703)
!1676 = !DILocation(line: 1145, column: 29, scope: !1671)
!1677 = !DILocation(line: 1174, column: 9, scope: !1671)
!1678 = !DILocation(line: 1178, column: 9, scope: !1671)
!1679 = !DILocation(line: 1180, column: 2, scope: !1671)
!1680 = !DILocalVariable(name: "src", arg: 1, scope: !1681, file: !218, line: 2517, type: !703)
!1681 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr4read7runtime17h87e8dc7334532d7eE", scope: !1621, file: !218, line: 2517, type: !1682, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !1684)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{null, !703}
!1684 = !{!1680}
!1685 = !DILocation(line: 2517, column: 39, scope: !1681, inlinedAt: !1686)
!1686 = distinct !DILocation(line: 1174, column: 9, scope: !1671)
!1687 = !DILocation(line: 1176, column: 35, scope: !1688, inlinedAt: !1686)
!1688 = !DILexicalBlockFile(scope: !1681, file: !1244, discriminator: 0)
!1689 = !DILocation(line: 2518, column: 20, scope: !1681, inlinedAt: !1686)
!1690 = !DILocation(line: 2520, column: 21, scope: !1681, inlinedAt: !1686)
!1691 = distinct !DISubprogram(name: "swap<usize>", linkageName: "_ZN4core3ptr4swap17h4250091187d10ec1E", scope: !204, file: !1244, line: 848, type: !1692, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, retainedNodes: !1694)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{null, !618, !618}
!1694 = !{!1695, !1696, !1697}
!1695 = !DILocalVariable(name: "x", arg: 1, scope: !1691, file: !1244, line: 848, type: !618)
!1696 = !DILocalVariable(name: "y", arg: 2, scope: !1691, file: !1244, line: 848, type: !618)
!1697 = !DILocalVariable(name: "tmp", scope: !1698, file: !1244, line: 851, type: !704, align: 8)
!1698 = distinct !DILexicalBlock(scope: !1691, file: !1244, line: 851, column: 5)
!1699 = !DILocation(line: 848, column: 29, scope: !1691)
!1700 = !DILocation(line: 848, column: 40, scope: !1691)
!1701 = !DILocation(line: 851, column: 9, scope: !1698)
!1702 = !DILocation(line: 315, column: 6, scope: !1703, inlinedAt: !1708)
!1703 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h0bf6789237001abaE", scope: !704, file: !1704, line: 313, type: !1705, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, declaration: !1707, retainedNodes: !24)
!1704 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "f833720bbc89e0a2811008220e0a188a")
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!704}
!1707 = !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h0bf6789237001abaE", scope: !704, file: !1704, line: 313, type: !1705, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !465)
!1708 = distinct !DILocation(line: 851, column: 19, scope: !1691)
!1709 = !DILocation(line: 851, column: 19, scope: !1691)
!1710 = !DILocalVariable(name: "self", arg: 1, scope: !1711, file: !1704, line: 567, type: !1074)
!1711 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h3ccceda7d1df47f6E", scope: !704, file: !1704, line: 567, type: !1712, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, declaration: !1714, retainedNodes: !1715)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!618, !1074}
!1714 = !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h3ccceda7d1df47f6E", scope: !704, file: !1704, line: 567, type: !1712, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !465)
!1715 = !{!1710}
!1716 = !DILocation(line: 567, column: 29, scope: !1711, inlinedAt: !1717)
!1717 = distinct !DILocation(line: 859, column: 32, scope: !1698)
!1718 = !DILocation(line: 859, column: 9, scope: !1698)
!1719 = !DILocation(line: 860, column: 9, scope: !1698)
!1720 = !DILocalVariable(name: "self", arg: 1, scope: !1721, file: !1704, line: 528, type: !1724)
!1721 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h38700ebd9bd823a4E", scope: !704, file: !1704, line: 528, type: !1722, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !465, declaration: !1725, retainedNodes: !1726)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!565, !1724}
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !704, size: 64, align: 64, dwarfAddressSpace: 0)
!1725 = !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h38700ebd9bd823a4E", scope: !704, file: !1704, line: 528, type: !1722, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !465)
!1726 = !{!1720}
!1727 = !DILocation(line: 528, column: 25, scope: !1721, inlinedAt: !1728)
!1728 = distinct !DILocation(line: 861, column: 29, scope: !1698)
!1729 = !DILocation(line: 861, column: 9, scope: !1698)
!1730 = !DILocation(line: 863, column: 2, scope: !1691)
!1731 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4swap17h9fb425901b32d437E", scope: !204, file: !1244, line: 848, type: !1732, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1734)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{null, !261, !261}
!1734 = !{!1735, !1736, !1737}
!1735 = !DILocalVariable(name: "x", arg: 1, scope: !1731, file: !1244, line: 848, type: !261)
!1736 = !DILocalVariable(name: "y", arg: 2, scope: !1731, file: !1244, line: 848, type: !261)
!1737 = !DILocalVariable(name: "tmp", scope: !1738, file: !1244, line: 851, type: !671, align: 8)
!1738 = distinct !DILexicalBlock(scope: !1731, file: !1244, line: 851, column: 5)
!1739 = !DILocation(line: 848, column: 29, scope: !1731)
!1740 = !DILocation(line: 848, column: 40, scope: !1731)
!1741 = !DILocation(line: 851, column: 9, scope: !1738)
!1742 = !DILocalVariable(name: "self", arg: 1, scope: !1743, file: !1704, line: 567, type: !1052)
!1743 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h43b16c1115a231ffE", scope: !671, file: !1704, line: 567, type: !1744, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, declaration: !1746, retainedNodes: !1747)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!261, !1052}
!1746 = !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h43b16c1115a231ffE", scope: !671, file: !1704, line: 567, type: !1744, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !189)
!1747 = !{!1742}
!1748 = !DILocation(line: 567, column: 29, scope: !1743, inlinedAt: !1749)
!1749 = distinct !DILocation(line: 859, column: 32, scope: !1738)
!1750 = !DILocation(line: 859, column: 9, scope: !1738)
!1751 = !DILocation(line: 860, column: 9, scope: !1738)
!1752 = !DILocalVariable(name: "self", arg: 1, scope: !1753, file: !1704, line: 528, type: !1756)
!1753 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h45dec50326f9a283E", scope: !671, file: !1704, line: 528, type: !1754, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, declaration: !1757, retainedNodes: !1758)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{!207, !1756}
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !671, size: 64, align: 64, dwarfAddressSpace: 0)
!1757 = !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h45dec50326f9a283E", scope: !671, file: !1704, line: 528, type: !1754, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !189)
!1758 = !{!1752}
!1759 = !DILocation(line: 528, column: 25, scope: !1753, inlinedAt: !1760)
!1760 = distinct !DILocation(line: 861, column: 29, scope: !1738)
!1761 = !DILocation(line: 861, column: 9, scope: !1738)
!1762 = !DILocation(line: 863, column: 2, scope: !1731)
!1763 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17he2b7a0c5667c2dbdE", scope: !204, file: !1244, line: 497, type: !1764, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1769, retainedNodes: !1767)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{null, !1766}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!1767 = !{!1768}
!1768 = !DILocalVariable(arg: 1, scope: !1763, file: !1244, line: 497, type: !1766)
!1769 = !{!1770}
!1770 = !DITemplateTypeParameter(name: "T", type: !109)
!1771 = !DILocation(line: 497, column: 1, scope: !1763)
!1772 = distinct !DISubprogram(name: "write<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write17h720351d6fe90aa68E", scope: !204, file: !1244, line: 1359, type: !1773, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1775)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{null, !261, !13}
!1775 = !{!1776, !1777}
!1776 = !DILocalVariable(name: "dst", arg: 1, scope: !1772, file: !1244, line: 1359, type: !261)
!1777 = !DILocalVariable(name: "src", arg: 2, scope: !1772, file: !1244, line: 1359, type: !13)
!1778 = !DILocation(line: 1359, column: 30, scope: !1772)
!1779 = !DILocation(line: 1359, column: 43, scope: !1772)
!1780 = !DILocation(line: 1372, column: 9, scope: !1772)
!1781 = !DILocation(line: 1376, column: 9, scope: !1772)
!1782 = !DILocation(line: 1378, column: 2, scope: !1772)
!1783 = !DILocalVariable(name: "dst", arg: 1, scope: !1784, file: !218, line: 2517, type: !261)
!1784 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write7runtime17h852b144cb0f86757E", scope: !1785, file: !218, line: 2517, type: !1786, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1788)
!1785 = !DINamespace(name: "write", scope: !204)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{null, !261}
!1788 = !{!1783}
!1789 = !DILocation(line: 2517, column: 39, scope: !1784, inlinedAt: !1790)
!1790 = distinct !DILocation(line: 1372, column: 9, scope: !1772)
!1791 = !DILocation(line: 1374, column: 33, scope: !1792, inlinedAt: !1790)
!1792 = !DILexicalBlockFile(scope: !1784, file: !1244, discriminator: 0)
!1793 = !DILocation(line: 2518, column: 20, scope: !1784, inlinedAt: !1790)
!1794 = !DILocation(line: 2520, column: 21, scope: !1784, inlinedAt: !1790)
!1795 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write17hae0b416515095691E", scope: !204, file: !1244, line: 1359, type: !1796, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !1798)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{null, !1429, !671}
!1798 = !{!1799, !1800}
!1799 = !DILocalVariable(name: "dst", arg: 1, scope: !1795, file: !1244, line: 1359, type: !1429)
!1800 = !DILocalVariable(name: "src", arg: 2, scope: !1795, file: !1244, line: 1359, type: !671)
!1801 = !DILocation(line: 1359, column: 30, scope: !1795)
!1802 = !DILocation(line: 1359, column: 43, scope: !1795)
!1803 = !DILocation(line: 1372, column: 9, scope: !1795)
!1804 = !DILocation(line: 1376, column: 9, scope: !1795)
!1805 = !DILocation(line: 1378, column: 2, scope: !1795)
!1806 = !DILocalVariable(name: "dst", arg: 1, scope: !1807, file: !218, line: 2517, type: !1429)
!1807 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write7runtime17h19a07e8144c08614E", scope: !1785, file: !218, line: 2517, type: !1808, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !1810)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{null, !1429}
!1810 = !{!1806}
!1811 = !DILocation(line: 2517, column: 39, scope: !1807, inlinedAt: !1812)
!1812 = distinct !DILocation(line: 1372, column: 9, scope: !1795)
!1813 = !DILocation(line: 1374, column: 33, scope: !1814, inlinedAt: !1812)
!1814 = !DILexicalBlockFile(scope: !1807, file: !1244, discriminator: 0)
!1815 = !DILocation(line: 2518, column: 20, scope: !1807, inlinedAt: !1812)
!1816 = !DILocation(line: 2520, column: 21, scope: !1807, inlinedAt: !1812)
!1817 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr5write17hd1eece99efa8bef5E", scope: !204, file: !1244, line: 1359, type: !1818, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !1820)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{null, !1492, !704}
!1820 = !{!1821, !1822}
!1821 = !DILocalVariable(name: "dst", arg: 1, scope: !1817, file: !1244, line: 1359, type: !1492)
!1822 = !DILocalVariable(name: "src", arg: 2, scope: !1817, file: !1244, line: 1359, type: !704)
!1823 = !DILocation(line: 1359, column: 30, scope: !1817)
!1824 = !DILocation(line: 1359, column: 43, scope: !1817)
!1825 = !DILocation(line: 1372, column: 9, scope: !1817)
!1826 = !DILocation(line: 1376, column: 9, scope: !1817)
!1827 = !DILocation(line: 1378, column: 2, scope: !1817)
!1828 = !DILocalVariable(name: "dst", arg: 1, scope: !1829, file: !218, line: 2517, type: !1492)
!1829 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr5write7runtime17hbeba2be1098a18d3E", scope: !1785, file: !218, line: 2517, type: !1830, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !1832)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{null, !1492}
!1832 = !{!1828}
!1833 = !DILocation(line: 2517, column: 39, scope: !1829, inlinedAt: !1834)
!1834 = distinct !DILocation(line: 1372, column: 9, scope: !1817)
!1835 = !DILocation(line: 1374, column: 33, scope: !1836, inlinedAt: !1834)
!1836 = !DILexicalBlockFile(scope: !1829, file: !1244, discriminator: 0)
!1837 = !DILocation(line: 2518, column: 20, scope: !1829, inlinedAt: !1834)
!1838 = !DILocation(line: 2520, column: 21, scope: !1829, inlinedAt: !1834)
!1839 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr5write17hffac2092019b1350E", scope: !204, file: !1244, line: 1359, type: !1840, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1016, retainedNodes: !1842)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{null, !1555, !1000}
!1842 = !{!1843, !1844}
!1843 = !DILocalVariable(name: "dst", arg: 1, scope: !1839, file: !1244, line: 1359, type: !1555)
!1844 = !DILocalVariable(name: "src", arg: 2, scope: !1839, file: !1244, line: 1359, type: !1000)
!1845 = !DILocation(line: 1359, column: 30, scope: !1839)
!1846 = !DILocation(line: 1359, column: 43, scope: !1839)
!1847 = !DILocation(line: 1372, column: 9, scope: !1839)
!1848 = !DILocation(line: 1376, column: 9, scope: !1839)
!1849 = !DILocation(line: 1378, column: 2, scope: !1839)
!1850 = !DILocalVariable(name: "dst", arg: 1, scope: !1851, file: !218, line: 2517, type: !1555)
!1851 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr5write7runtime17h155514b1aa14d0aeE", scope: !1785, file: !218, line: 2517, type: !1852, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1016, retainedNodes: !1854)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{null, !1555}
!1854 = !{!1850}
!1855 = !DILocation(line: 2517, column: 39, scope: !1851, inlinedAt: !1856)
!1856 = distinct !DILocation(line: 1372, column: 9, scope: !1839)
!1857 = !DILocation(line: 1374, column: 33, scope: !1858, inlinedAt: !1856)
!1858 = !DILexicalBlockFile(scope: !1851, file: !1244, discriminator: 0)
!1859 = !DILocation(line: 2518, column: 20, scope: !1851, inlinedAt: !1856)
!1860 = !DILocation(line: 2520, column: 21, scope: !1851, inlinedAt: !1856)
!1861 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>", linkageName: "_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17h55bd954b516d523eE", scope: !204, file: !1244, line: 497, type: !1862, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1867, retainedNodes: !1865)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{null, !1864}
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!1865 = !{!1866}
!1866 = !DILocalVariable(arg: 1, scope: !1861, file: !1244, line: 497, type: !1864)
!1867 = !{!1868}
!1868 = !DITemplateTypeParameter(name: "T", type: !94)
!1869 = !DILocation(line: 497, column: 1, scope: !1861)
!1870 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::FrameRange>", linkageName: "_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17hdd02efeef56b47dfE", scope: !204, file: !1244, line: 497, type: !1871, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1876, retainedNodes: !1874)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{null, !1873}
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!1874 = !{!1875}
!1875 = !DILocalVariable(arg: 1, scope: !1870, file: !1244, line: 497, type: !1873)
!1876 = !{!1877}
!1877 = !DITemplateTypeParameter(name: "T", type: !19)
!1878 = !DILocation(line: 497, column: 1, scope: !1870)
!1879 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h3bb54a08777f807bE", scope: !204, file: !1244, line: 497, type: !1880, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !858, retainedNodes: !1883)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1882}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!1883 = !{!1884}
!1884 = !DILocalVariable(arg: 1, scope: !1879, file: !1244, line: 497, type: !1882)
!1885 = !DILocation(line: 497, column: 1, scope: !1879)
!1886 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h1d57c384ea79fe8eE", scope: !204, file: !1244, line: 497, type: !1887, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1892, retainedNodes: !1890)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{null, !1889}
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!1890 = !{!1891}
!1891 = !DILocalVariable(arg: 1, scope: !1886, file: !1244, line: 497, type: !1889)
!1892 = !{!1893}
!1893 = !DITemplateTypeParameter(name: "T", type: !60)
!1894 = !DILocation(line: 497, column: 1, scope: !1886)
!1895 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hefba6c028e624c4cE", scope: !1896, file: !256, line: 35, type: !1897, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1899)
!1896 = !DINamespace(name: "is_null", scope: !267)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!401, !1273}
!1899 = !{!1900}
!1900 = !DILocalVariable(name: "ptr", arg: 1, scope: !1895, file: !256, line: 35, type: !1273)
!1901 = !DILocation(line: 35, column: 25, scope: !1895)
!1902 = !DILocalVariable(name: "self", arg: 1, scope: !1903, file: !256, line: 209, type: !1273)
!1903 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8f5cd49216b4e0a1E", scope: !267, file: !256, line: 209, type: !1904, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, retainedNodes: !1906)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{!9, !1273}
!1906 = !{!1902}
!1907 = !DILocation(line: 209, column: 17, scope: !1903, inlinedAt: !1908)
!1908 = distinct !DILocation(line: 36, column: 13, scope: !1895)
!1909 = !DILocalVariable(name: "self", arg: 1, scope: !1910, file: !256, line: 57, type: !1273)
!1910 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h0cc4f34d3a61e9d7E", scope: !267, file: !256, line: 57, type: !1911, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1914, retainedNodes: !1913)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!1389, !1273}
!1913 = !{!1909}
!1914 = !{!1008, !541}
!1915 = !DILocation(line: 57, column: 26, scope: !1910, inlinedAt: !1916)
!1916 = distinct !DILocation(line: 213, column: 33, scope: !1903, inlinedAt: !1908)
!1917 = !DILocation(line: 213, column: 18, scope: !1903, inlinedAt: !1908)
!1918 = !DILocation(line: 36, column: 13, scope: !1895)
!1919 = !DILocation(line: 37, column: 10, scope: !1895)
!1920 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h87d19d52ba57462cE", scope: !267, file: !256, line: 33, type: !1921, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1923)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{!401, !261}
!1923 = !{!1924}
!1924 = !DILocalVariable(name: "self", arg: 1, scope: !1920, file: !256, line: 33, type: !261)
!1925 = !DILocation(line: 33, column: 26, scope: !1920)
!1926 = !DILocation(line: 50, column: 36, scope: !1920)
!1927 = !DILocation(line: 50, column: 18, scope: !1920)
!1928 = !DILocation(line: 51, column: 6, scope: !1920)
!1929 = distinct !DISubprogram(name: "from_raw_parts<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hef5214f5a83e4208E", scope: !1931, file: !1930, line: 111, type: !1932, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1934)
!1930 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1e1a461bde75de7a93357ca7e628f393")
!1931 = !DINamespace(name: "metadata", scope: !204)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!169, !6, !9}
!1934 = !{!1935, !1936}
!1935 = !DILocalVariable(name: "data_address", arg: 1, scope: !1929, file: !1930, line: 112, type: !6)
!1936 = !DILocalVariable(name: "metadata", arg: 2, scope: !1929, file: !1930, line: 113, type: !9)
!1937 = !DILocation(line: 112, column: 5, scope: !1929)
!1938 = !DILocation(line: 113, column: 5, scope: !1929)
!1939 = !DILocation(line: 118, column: 36, scope: !1929)
!1940 = !DILocation(line: 118, column: 14, scope: !1929)
!1941 = !DILocation(line: 119, column: 2, scope: !1929)
!1942 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h2c91ee76589b7207E", scope: !1931, file: !1930, line: 128, type: !1943, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, retainedNodes: !1945)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!1273, !1389, !7}
!1945 = !{!1946, !1947}
!1946 = !DILocalVariable(name: "data_address", arg: 1, scope: !1942, file: !1930, line: 129, type: !1389)
!1947 = !DILocalVariable(name: "metadata", arg: 2, scope: !1942, file: !1930, line: 130, type: !7)
!1948 = !DILocation(line: 129, column: 5, scope: !1942)
!1949 = !DILocation(line: 130, column: 5, scope: !1942)
!1950 = !DILocation(line: 135, column: 36, scope: !1942)
!1951 = !DILocation(line: 135, column: 14, scope: !1942)
!1952 = !DILocation(line: 136, column: 2, scope: !1942)
!1953 = distinct !DISubprogram(name: "from_raw_parts_mut<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h8beb1f8ed4be3183E", scope: !1931, file: !1930, line: 128, type: !1954, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1956)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!236, !1389, !9}
!1956 = !{!1957, !1958}
!1957 = !DILocalVariable(name: "data_address", arg: 1, scope: !1953, file: !1930, line: 129, type: !1389)
!1958 = !DILocalVariable(name: "metadata", arg: 2, scope: !1953, file: !1930, line: 130, type: !9)
!1959 = !DILocation(line: 129, column: 5, scope: !1953)
!1960 = !DILocation(line: 130, column: 5, scope: !1953)
!1961 = !DILocation(line: 135, column: 36, scope: !1953)
!1962 = !DILocation(line: 135, column: 14, scope: !1953)
!1963 = !DILocation(line: 136, column: 2, scope: !1953)
!1964 = distinct !DISubprogram(name: "metadata<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata8metadata17hc96cb271582175c8E", scope: !1931, file: !1930, line: 94, type: !1965, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1967)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!9, !169}
!1967 = !{!1968}
!1968 = !DILocalVariable(name: "ptr", arg: 1, scope: !1964, file: !1930, line: 94, type: !169)
!1969 = !DILocation(line: 94, column: 34, scope: !1964)
!1970 = !DILocation(line: 98, column: 14, scope: !1964)
!1971 = !DILocation(line: 99, column: 2, scope: !1964)
!1972 = distinct !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h15f07cbe073e8ff7E", scope: !850, file: !1973, line: 197, type: !1974, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, declaration: !1976, retainedNodes: !1977)
!1973 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "128e2cbb488f050de51de9659afa4a5c")
!1974 = !DISubroutineType(types: !1975)
!1975 = !{!850, !261}
!1976 = !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h15f07cbe073e8ff7E", scope: !850, file: !1973, line: 197, type: !1974, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !189)
!1977 = !{!1978}
!1978 = !DILocalVariable(name: "ptr", arg: 1, scope: !1972, file: !1973, line: 197, type: !261)
!1979 = !DILocation(line: 197, column: 39, scope: !1972)
!1980 = !DILocation(line: 200, column: 13, scope: !1972)
!1981 = !DILocation(line: 201, column: 13, scope: !1972)
!1982 = !DILocation(line: 203, column: 6, scope: !1972)
!1983 = !DILocalVariable(name: "ptr", arg: 1, scope: !1984, file: !218, line: 2517, type: !261)
!1984 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h5e5d02aa77f42c8fE", scope: !1985, file: !218, line: 2517, type: !1786, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !1987)
!1985 = !DINamespace(name: "new_unchecked", scope: !1986)
!1986 = !DINamespace(name: "{impl#3}", scope: !851)
!1987 = !{!1983}
!1988 = !DILocation(line: 2517, column: 39, scope: !1984, inlinedAt: !1989)
!1989 = distinct !DILocation(line: 200, column: 13, scope: !1972)
!1990 = !DILocation(line: 200, column: 134, scope: !1991, inlinedAt: !1989)
!1991 = !DILexicalBlockFile(scope: !1984, file: !1973, discriminator: 0)
!1992 = !DILocation(line: 200, column: 133, scope: !1991, inlinedAt: !1989)
!1993 = !DILocation(line: 2518, column: 20, scope: !1984, inlinedAt: !1989)
!1994 = !DILocation(line: 2520, column: 21, scope: !1984, inlinedAt: !1989)
!1995 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h57df786903043ccaE", scope: !850, file: !1973, line: 455, type: !1996, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, declaration: !1998, retainedNodes: !1999)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{!850, !850, !9}
!1998 = !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h57df786903043ccaE", scope: !850, file: !1973, line: 455, type: !1996, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !189)
!1999 = !{!2000, !2001}
!2000 = !DILocalVariable(name: "self", arg: 1, scope: !1995, file: !1973, line: 455, type: !850)
!2001 = !DILocalVariable(name: "delta", arg: 2, scope: !1995, file: !1973, line: 455, type: !9)
!2002 = !DILocation(line: 455, column: 36, scope: !1995)
!2003 = !DILocation(line: 455, column: 42, scope: !1995)
!2004 = !DILocation(line: 915, column: 29, scope: !200, inlinedAt: !2005)
!2005 = distinct !DILocation(line: 463, column: 37, scope: !1995)
!2006 = !DILocation(line: 915, column: 35, scope: !200, inlinedAt: !2005)
!2007 = !DILocation(line: 927, column: 13, scope: !200, inlinedAt: !2005)
!2008 = !DILocation(line: 463, column: 18, scope: !1995)
!2009 = !DILocation(line: 464, column: 6, scope: !1995)
!2010 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h7d5ca15aba9d339fE", scope: !202, file: !201, line: 1456, type: !701, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !2011)
!2011 = !{!2012}
!2012 = !DILocalVariable(name: "self", arg: 1, scope: !2010, file: !201, line: 1456, type: !703)
!2013 = !DILocation(line: 1456, column: 29, scope: !2010)
!2014 = !DILocation(line: 1460, column: 9, scope: !2010)
!2015 = !DILocation(line: 1461, column: 6, scope: !2010)
!2016 = distinct !DISubprogram(name: "is_aligned<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h8b57dfd4eaa3b392E", scope: !202, file: !201, line: 1456, type: !691, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2017)
!2017 = !{!2018}
!2018 = !DILocalVariable(name: "self", arg: 1, scope: !2016, file: !201, line: 1456, type: !207)
!2019 = !DILocation(line: 1456, column: 29, scope: !2016)
!2020 = !DILocation(line: 1460, column: 9, scope: !2016)
!2021 = !DILocation(line: 1461, column: 6, scope: !2016)
!2022 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17ha7f55de5a75b7c43E", scope: !202, file: !201, line: 1456, type: !668, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !2023)
!2023 = !{!2024}
!2024 = !DILocalVariable(name: "self", arg: 1, scope: !2022, file: !201, line: 1456, type: !670)
!2025 = !DILocation(line: 1456, column: 29, scope: !2022)
!2026 = !DILocation(line: 1460, column: 9, scope: !2022)
!2027 = !DILocation(line: 1461, column: 6, scope: !2022)
!2028 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h99e521d3ddd081a8E", scope: !2029, file: !201, line: 1578, type: !2030, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2032)
!2029 = !DINamespace(name: "is_aligned_to", scope: !202)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!401, !6, !9}
!2032 = !{!2033, !2034}
!2033 = !DILocalVariable(name: "ptr", arg: 1, scope: !2028, file: !201, line: 1578, type: !6)
!2034 = !DILocalVariable(name: "align", arg: 2, scope: !2028, file: !201, line: 1578, type: !9)
!2035 = !DILocation(line: 1578, column: 25, scope: !2028)
!2036 = !DILocation(line: 1578, column: 41, scope: !2028)
!2037 = !DILocalVariable(name: "self", arg: 1, scope: !2038, file: !201, line: 203, type: !6)
!2038 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hfb407f7e8b05eb3dE", scope: !202, file: !201, line: 203, type: !2039, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2042, retainedNodes: !2041)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{!9, !6}
!2041 = !{!2037}
!2042 = !{!441}
!2043 = !DILocation(line: 203, column: 17, scope: !2038, inlinedAt: !2044)
!2044 = distinct !DILocation(line: 1579, column: 13, scope: !2028)
!2045 = !DILocalVariable(name: "self", arg: 1, scope: !2046, file: !201, line: 58, type: !6)
!2046 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h1f3ac544963c2870E", scope: !202, file: !201, line: 58, type: !2047, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2050, retainedNodes: !2049)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!6, !6}
!2049 = !{!2045}
!2050 = !{!441, !541}
!2051 = !DILocation(line: 58, column: 26, scope: !2046, inlinedAt: !2052)
!2052 = distinct !DILocation(line: 207, column: 33, scope: !2038, inlinedAt: !2044)
!2053 = !DILocation(line: 207, column: 18, scope: !2038, inlinedAt: !2044)
!2054 = !DILocation(line: 1579, column: 26, scope: !2028)
!2055 = !DILocation(line: 1579, column: 13, scope: !2028)
!2056 = !DILocation(line: 1580, column: 10, scope: !2028)
!2057 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h04222429852736adE", scope: !202, file: !201, line: 1572, type: !2058, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !2060)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{!401, !670, !9}
!2060 = !{!2061, !2062}
!2061 = !DILocalVariable(name: "self", arg: 1, scope: !2057, file: !201, line: 1572, type: !670)
!2062 = !DILocalVariable(name: "align", arg: 2, scope: !2057, file: !201, line: 1572, type: !9)
!2063 = !DILocation(line: 1572, column: 32, scope: !2057)
!2064 = !DILocation(line: 1572, column: 38, scope: !2057)
!2065 = !DILocation(line: 2169, column: 38, scope: !1298, inlinedAt: !2066)
!2066 = distinct !DILocation(line: 1573, column: 13, scope: !2057)
!2067 = !DILocation(line: 106, column: 33, scope: !1303, inlinedAt: !2068)
!2068 = distinct !DILocation(line: 2170, column: 13, scope: !1298, inlinedAt: !2066)
!2069 = !DILocation(line: 107, column: 13, scope: !1303, inlinedAt: !2068)
!2070 = !DILocation(line: 2170, column: 13, scope: !1298, inlinedAt: !2066)
!2071 = !DILocation(line: 1573, column: 12, scope: !2057)
!2072 = !DILocalVariable(name: "self", arg: 1, scope: !2073, file: !201, line: 58, type: !670)
!2073 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hf97f85bef44cdb7cE", scope: !202, file: !201, line: 58, type: !2074, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2077, retainedNodes: !2076)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!6, !670}
!2076 = !{!2072}
!2077 = !{!684, !541}
!2078 = !DILocation(line: 58, column: 26, scope: !2073, inlinedAt: !2079)
!2079 = distinct !DILocation(line: 1592, column: 37, scope: !2057)
!2080 = !DILocation(line: 1592, column: 36, scope: !2057)
!2081 = !DILocation(line: 1592, column: 18, scope: !2057)
!2082 = !DILocation(line: 1593, column: 6, scope: !2057)
!2083 = !DILocation(line: 1574, column: 13, scope: !2057)
!2084 = distinct !DISubprogram(name: "is_aligned_to<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h809a744eb5174577E", scope: !202, file: !201, line: 1572, type: !2085, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2087)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!401, !207, !9}
!2087 = !{!2088, !2089}
!2088 = !DILocalVariable(name: "self", arg: 1, scope: !2084, file: !201, line: 1572, type: !207)
!2089 = !DILocalVariable(name: "align", arg: 2, scope: !2084, file: !201, line: 1572, type: !9)
!2090 = !DILocation(line: 1572, column: 32, scope: !2084)
!2091 = !DILocation(line: 1572, column: 38, scope: !2084)
!2092 = !DILocation(line: 2169, column: 38, scope: !1298, inlinedAt: !2093)
!2093 = distinct !DILocation(line: 1573, column: 13, scope: !2084)
!2094 = !DILocation(line: 106, column: 33, scope: !1303, inlinedAt: !2095)
!2095 = distinct !DILocation(line: 2170, column: 13, scope: !1298, inlinedAt: !2093)
!2096 = !DILocation(line: 107, column: 13, scope: !1303, inlinedAt: !2095)
!2097 = !DILocation(line: 2170, column: 13, scope: !1298, inlinedAt: !2093)
!2098 = !DILocation(line: 1573, column: 12, scope: !2084)
!2099 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !2100)
!2100 = distinct !DILocation(line: 1592, column: 37, scope: !2084)
!2101 = !DILocation(line: 1592, column: 36, scope: !2084)
!2102 = !DILocation(line: 1592, column: 18, scope: !2084)
!2103 = !DILocation(line: 1593, column: 6, scope: !2084)
!2104 = !DILocation(line: 1574, column: 13, scope: !2084)
!2105 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hc9654f4a08968195E", scope: !202, file: !201, line: 1572, type: !2106, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !2108)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!401, !703, !9}
!2108 = !{!2109, !2110}
!2109 = !DILocalVariable(name: "self", arg: 1, scope: !2105, file: !201, line: 1572, type: !703)
!2110 = !DILocalVariable(name: "align", arg: 2, scope: !2105, file: !201, line: 1572, type: !9)
!2111 = !DILocation(line: 1572, column: 32, scope: !2105)
!2112 = !DILocation(line: 1572, column: 38, scope: !2105)
!2113 = !DILocation(line: 2169, column: 38, scope: !1298, inlinedAt: !2114)
!2114 = distinct !DILocation(line: 1573, column: 13, scope: !2105)
!2115 = !DILocation(line: 106, column: 33, scope: !1303, inlinedAt: !2116)
!2116 = distinct !DILocation(line: 2170, column: 13, scope: !1298, inlinedAt: !2114)
!2117 = !DILocation(line: 107, column: 13, scope: !1303, inlinedAt: !2116)
!2118 = !DILocation(line: 2170, column: 13, scope: !1298, inlinedAt: !2114)
!2119 = !DILocation(line: 1573, column: 12, scope: !2105)
!2120 = !DILocalVariable(name: "self", arg: 1, scope: !2121, file: !201, line: 58, type: !703)
!2121 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<usize>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h1a8e10d898cc6657E", scope: !202, file: !201, line: 58, type: !2122, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2125, retainedNodes: !2124)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{!6, !703}
!2124 = !{!2120}
!2125 = !{!714, !541}
!2126 = !DILocation(line: 58, column: 26, scope: !2121, inlinedAt: !2127)
!2127 = distinct !DILocation(line: 1592, column: 37, scope: !2105)
!2128 = !DILocation(line: 1592, column: 36, scope: !2105)
!2129 = !DILocation(line: 1592, column: 18, scope: !2105)
!2130 = !DILocation(line: 1593, column: 6, scope: !2105)
!2131 = !DILocation(line: 1574, column: 13, scope: !2105)
!2132 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h7dca158e81d910edE", scope: !2133, file: !201, line: 36, type: !2134, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2137)
!2133 = !DINamespace(name: "is_null", scope: !202)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!401, !2136}
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!2137 = !{!2138}
!2138 = !DILocalVariable(name: "ptr", arg: 1, scope: !2132, file: !201, line: 36, type: !2136)
!2139 = !DILocation(line: 36, column: 25, scope: !2132)
!2140 = !DILocalVariable(name: "self", arg: 1, scope: !2141, file: !201, line: 203, type: !2136)
!2141 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h6c9c4e30c748898fE", scope: !202, file: !201, line: 203, type: !2142, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, retainedNodes: !2144)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!9, !2136}
!2144 = !{!2140}
!2145 = !DILocation(line: 203, column: 17, scope: !2141, inlinedAt: !2146)
!2146 = distinct !DILocation(line: 37, column: 13, scope: !2132)
!2147 = !DILocalVariable(name: "self", arg: 1, scope: !2148, file: !201, line: 58, type: !2136)
!2148 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb6014f60ce79833cE", scope: !202, file: !201, line: 58, type: !2149, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1914, retainedNodes: !2151)
!2149 = !DISubroutineType(types: !2150)
!2150 = !{!6, !2136}
!2151 = !{!2147}
!2152 = !DILocation(line: 58, column: 26, scope: !2148, inlinedAt: !2153)
!2153 = distinct !DILocation(line: 207, column: 33, scope: !2141, inlinedAt: !2146)
!2154 = !DILocation(line: 207, column: 18, scope: !2141, inlinedAt: !2146)
!2155 = !DILocation(line: 37, column: 13, scope: !2132)
!2156 = !DILocation(line: 38, column: 10, scope: !2132)
!2157 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h71ed3c45e962a382E", scope: !202, file: !201, line: 34, type: !691, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2158)
!2158 = !{!2159}
!2159 = !DILocalVariable(name: "self", arg: 1, scope: !2157, file: !201, line: 34, type: !207)
!2160 = !DILocation(line: 34, column: 26, scope: !2157)
!2161 = !DILocation(line: 51, column: 36, scope: !2157)
!2162 = !DILocation(line: 51, column: 18, scope: !2157)
!2163 = !DILocation(line: 52, column: 6, scope: !2157)
!2164 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9b76b1365caf576bE", scope: !202, file: !201, line: 34, type: !701, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !713, retainedNodes: !2165)
!2165 = !{!2166}
!2166 = !DILocalVariable(name: "self", arg: 1, scope: !2164, file: !201, line: 34, type: !703)
!2167 = !DILocation(line: 34, column: 26, scope: !2164)
!2168 = !DILocation(line: 51, column: 36, scope: !2164)
!2169 = !DILocation(line: 51, column: 18, scope: !2164)
!2170 = !DILocation(line: 52, column: 6, scope: !2164)
!2171 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha4ea9b471af7cd24E", scope: !202, file: !201, line: 34, type: !668, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !683, retainedNodes: !2172)
!2172 = !{!2173}
!2173 = !DILocalVariable(name: "self", arg: 1, scope: !2171, file: !201, line: 34, type: !670)
!2174 = !DILocation(line: 34, column: 26, scope: !2171)
!2175 = !DILocation(line: 51, column: 36, scope: !2171)
!2176 = !DILocation(line: 51, column: 18, scope: !2171)
!2177 = !DILocation(line: 52, column: 6, scope: !2171)
!2178 = distinct !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h796146e2dce2f6ebE", scope: !202, file: !201, line: 781, type: !2179, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2181)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!9, !207, !207}
!2181 = !{!2182, !2183, !2184, !2186}
!2182 = !DILocalVariable(name: "self", arg: 1, scope: !2178, file: !201, line: 781, type: !207)
!2183 = !DILocalVariable(name: "origin", arg: 2, scope: !2178, file: !201, line: 781, type: !207)
!2184 = !DILocalVariable(name: "this", scope: !2185, file: !201, line: 785, type: !207, align: 8)
!2185 = distinct !DILexicalBlock(scope: !2178, file: !201, line: 785, column: 9)
!2186 = !DILocalVariable(name: "pointee_size", scope: !2187, file: !201, line: 795, type: !9, align: 8)
!2187 = distinct !DILexicalBlock(scope: !2185, file: !201, line: 795, column: 9)
!2188 = !DILocation(line: 781, column: 33, scope: !2178)
!2189 = !DILocation(line: 785, column: 13, scope: !2185)
!2190 = !DILocation(line: 781, column: 39, scope: !2178)
!2191 = !DILocation(line: 789, column: 13, scope: !2185)
!2192 = !DILocation(line: 795, column: 28, scope: !2185)
!2193 = !DILocation(line: 795, column: 13, scope: !2187)
!2194 = !DILocation(line: 796, column: 17, scope: !2187)
!2195 = !DILocalVariable(name: "this", arg: 1, scope: !2196, file: !218, line: 2517, type: !207)
!2196 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hc9ea3ae1e8ebcc1dE", scope: !2197, file: !218, line: 2517, type: !2198, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2200)
!2197 = !DINamespace(name: "sub_ptr", scope: !202)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{null, !207, !207}
!2200 = !{!2195, !2201}
!2201 = !DILocalVariable(name: "origin", arg: 2, scope: !2196, file: !218, line: 2517, type: !207)
!2202 = !DILocation(line: 2517, column: 39, scope: !2196, inlinedAt: !2203)
!2203 = distinct !DILocation(line: 789, column: 13, scope: !2185)
!2204 = !DILocation(line: 791, column: 58, scope: !2205, inlinedAt: !2203)
!2205 = !DILexicalBlockFile(scope: !2196, file: !201, discriminator: 0)
!2206 = !DILocation(line: 2518, column: 20, scope: !2196, inlinedAt: !2203)
!2207 = !DILocation(line: 2520, column: 21, scope: !2196, inlinedAt: !2203)
!2208 = !DILocation(line: 796, column: 37, scope: !2187)
!2209 = !DILocation(line: 796, column: 9, scope: !2187)
!2210 = !DILocation(line: 798, column: 18, scope: !2187)
!2211 = !DILocation(line: 799, column: 6, scope: !2178)
!2212 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h6bad6bbc24fe61bbE", scope: !2213, file: !201, line: 1617, type: !1965, scopeLine: 1617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2214)
!2213 = !DINamespace(name: "{impl#1}", scope: !203)
!2214 = !{!2215}
!2215 = !DILocalVariable(name: "self", arg: 1, scope: !2212, file: !201, line: 1617, type: !169)
!2216 = !DILocation(line: 1617, column: 22, scope: !2212)
!2217 = !DILocation(line: 1618, column: 9, scope: !2212)
!2218 = !DILocation(line: 1619, column: 6, scope: !2212)
!2219 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h70db485c1eecd795E", scope: !2213, file: !201, line: 1637, type: !2220, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2222)
!2220 = !DISubroutineType(types: !2221)
!2221 = !{!207, !169}
!2222 = !{!2223}
!2223 = !DILocalVariable(name: "self", arg: 1, scope: !2219, file: !201, line: 1637, type: !169)
!2224 = !DILocation(line: 1637, column: 25, scope: !2219)
!2225 = !DILocation(line: 1639, column: 6, scope: !2219)
!2226 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hfa19a2d92a920175E", scope: !2228, file: !2227, line: 344, type: !2230, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2236, retainedNodes: !2233)
!2227 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e5d123c113412819f78d9747608a66c8")
!2228 = !DINamespace(name: "{impl#15}", scope: !2229)
!2229 = !DINamespace(name: "array", scope: !142)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{!303, !2232, !174, !307}
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!2233 = !{!2234, !2235}
!2234 = !DILocalVariable(name: "self", arg: 1, scope: !2226, file: !2227, line: 344, type: !2232)
!2235 = !DILocalVariable(name: "index", arg: 2, scope: !2226, file: !2227, line: 344, type: !174)
!2236 = !{!190, !2237}
!2237 = !DITemplateTypeParameter(name: "I", type: !174)
!2238 = !DILocation(line: 344, column: 14, scope: !2226)
!2239 = !DILocation(line: 344, column: 21, scope: !2226)
!2240 = !DILocation(line: 345, column: 9, scope: !2226)
!2241 = !DILocation(line: 346, column: 6, scope: !2226)
!2242 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h8954eb019ae799dcE", scope: !2243, file: !2227, line: 355, type: !2244, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2236, retainedNodes: !2247)
!2243 = !DINamespace(name: "{impl#16}", scope: !2229)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{!334, !2246, !174, !307}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!2247 = !{!2248, !2249}
!2248 = !DILocalVariable(name: "self", arg: 1, scope: !2242, file: !2227, line: 355, type: !2246)
!2249 = !DILocalVariable(name: "index", arg: 2, scope: !2242, file: !2227, line: 355, type: !174)
!2250 = !DILocation(line: 355, column: 18, scope: !2242)
!2251 = !DILocation(line: 355, column: 29, scope: !2242)
!2252 = !DILocation(line: 356, column: 9, scope: !2242)
!2253 = !DILocation(line: 357, column: 6, scope: !2242)
!2254 = distinct !DISubprogram(name: "split_at_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17hef9d0510e779d42aE", scope: !1222, file: !2255, line: 1636, type: !2256, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2262)
!2255 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "c0b63b2f0740f82e7d46118d9abcca49")
!2256 = !DISubroutineType(types: !2257)
!2257 = !{!2258, !334, !9, !307}
!2258 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut [bootloader::bootinfo::memory_map::MemoryRegion], &mut [bootloader::bootinfo::memory_map::MemoryRegion])", file: !2, size: 256, align: 64, elements: !2259, templateParams: !24, identifier: "54b55429daa65f5034184445f997037")
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2258, file: !2, baseType: !334, size: 128, align: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2258, file: !2, baseType: !334, size: 128, align: 64, offset: 128)
!2262 = !{!2263, !2264}
!2263 = !DILocalVariable(name: "self", arg: 1, scope: !2254, file: !2255, line: 1636, type: !334)
!2264 = !DILocalVariable(name: "mid", arg: 2, scope: !2254, file: !2255, line: 1636, type: !9)
!2265 = !DILocation(line: 1636, column: 31, scope: !2254)
!2266 = !DILocation(line: 1636, column: 42, scope: !2254)
!2267 = !DILocation(line: 1637, column: 17, scope: !2254)
!2268 = !DILocation(line: 1637, column: 9, scope: !2254)
!2269 = !DILocation(line: 1640, column: 18, scope: !2254)
!2270 = !DILocation(line: 1641, column: 6, scope: !2254)
!2271 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hade35548186d2d80E", scope: !1222, file: !2255, line: 399, type: !2272, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2277, retainedNodes: !2274)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!12, !303, !9}
!2274 = !{!2275, !2276}
!2275 = !DILocalVariable(name: "self", arg: 1, scope: !2271, file: !2255, line: 399, type: !303)
!2276 = !DILocalVariable(name: "index", arg: 2, scope: !2271, file: !2255, line: 399, type: !9)
!2277 = !{!190, !2278}
!2278 = !DITemplateTypeParameter(name: "I", type: !9)
!2279 = !DILocation(line: 399, column: 36, scope: !2271)
!2280 = !DILocation(line: 399, column: 43, scope: !2271)
!2281 = !DILocation(line: 406, column: 20, scope: !2271)
!2282 = !DILocation(line: 407, column: 6, scope: !2271)
!2283 = distinct !DISubprogram(name: "as_mut_ptr_range<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17hb851a5c6e4698284E", scope: !1222, file: !2255, line: 586, type: !2284, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2292)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{!2286, !334}
!2286 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<*mut bootloader::bootinfo::memory_map::MemoryRegion>", scope: !175, file: !2, size: 128, align: 64, elements: !2287, templateParams: !2290, identifier: "4126ca43bd4e33cd7558b9cba8c18a61")
!2287 = !{!2288, !2289}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2286, file: !2, baseType: !261, size: 64, align: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2286, file: !2, baseType: !261, size: 64, align: 64, offset: 64)
!2290 = !{!2291}
!2291 = !DITemplateTypeParameter(name: "Idx", type: !261)
!2292 = !{!2293, !2294, !2296}
!2293 = !DILocalVariable(name: "self", arg: 1, scope: !2283, file: !2255, line: 586, type: !334)
!2294 = !DILocalVariable(name: "start", scope: !2295, file: !2255, line: 587, type: !261, align: 8)
!2295 = distinct !DILexicalBlock(scope: !2283, file: !2255, line: 587, column: 9)
!2296 = !DILocalVariable(name: "end", scope: !2297, file: !2255, line: 589, type: !261, align: 8)
!2297 = distinct !DILexicalBlock(scope: !2295, file: !2255, line: 589, column: 9)
!2298 = !DILocation(line: 586, column: 35, scope: !2283)
!2299 = !DILocalVariable(name: "self", arg: 1, scope: !2300, file: !2255, line: 506, type: !334)
!2300 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hb63bf4b3363b50ffE", scope: !1222, file: !2255, line: 506, type: !2301, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2303)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!261, !334}
!2303 = !{!2299}
!2304 = !DILocation(line: 506, column: 29, scope: !2300, inlinedAt: !2305)
!2305 = distinct !DILocation(line: 587, column: 21, scope: !2283)
!2306 = !DILocation(line: 587, column: 21, scope: !2283)
!2307 = !DILocation(line: 587, column: 13, scope: !2295)
!2308 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2309)
!2309 = distinct !DILocation(line: 589, column: 28, scope: !2295)
!2310 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2309)
!2311 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2309)
!2312 = !DILocation(line: 589, column: 28, scope: !2295)
!2313 = !DILocation(line: 589, column: 13, scope: !2297)
!2314 = !DILocation(line: 590, column: 9, scope: !2297)
!2315 = !DILocation(line: 591, column: 6, scope: !2283)
!2316 = distinct !DISubprogram(name: "sort_unstable_by<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h87ba477b7fb4a9caE", scope: !1222, file: !2255, line: 2688, type: !2317, scopeLine: 2688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2322, retainedNodes: !2319)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{null, !334, !1226}
!2319 = !{!2320, !2321}
!2320 = !DILocalVariable(name: "self", arg: 1, scope: !2316, file: !2255, line: 2688, type: !334)
!2321 = !DILocalVariable(name: "compare", arg: 2, scope: !2316, file: !2255, line: 2688, type: !1226)
!2322 = !{!190, !2323}
!2323 = !DITemplateTypeParameter(name: "F", type: !1226)
!2324 = !DILocation(line: 2688, column: 32, scope: !2316)
!2325 = !DILocation(line: 2688, column: 43, scope: !2316)
!2326 = !DILocation(line: 2692, column: 31, scope: !2316)
!2327 = !DILocation(line: 2692, column: 9, scope: !2316)
!2328 = !{i64 1}
!2329 = !DILocation(line: 2693, column: 6, scope: !2316)
!2330 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17haa715ff9e84f2f7dE", scope: !1221, file: !2255, line: 2692, type: !2331, scopeLine: 2692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2322, retainedNodes: !2333)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{!401, !1219, !12, !12}
!2333 = !{!2334, !2335, !2336}
!2334 = !DILocalVariable(name: "a", arg: 2, scope: !2330, file: !2255, line: 2692, type: !12)
!2335 = !DILocalVariable(name: "b", arg: 3, scope: !2330, file: !2255, line: 2692, type: !12)
!2336 = !DILocalVariable(name: "compare", scope: !2330, file: !2255, line: 2688, type: !1226, align: 1)
!2337 = !DILocation(line: 2688, column: 47, scope: !2330)
!2338 = !DILocation(line: 2692, column: 32, scope: !2330)
!2339 = !DILocation(line: 2692, column: 35, scope: !2330)
!2340 = !DILocation(line: 2692, column: 38, scope: !2330)
!2341 = !DILocation(line: 2692, column: 69, scope: !2330)
!2342 = distinct !DISubprogram(name: "split_at_mut_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h9ac16248217030b9E", scope: !1222, file: !2255, line: 1744, type: !2343, scopeLine: 1744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2345)
!2343 = !DISubroutineType(types: !2344)
!2344 = !{!2258, !334, !9}
!2345 = !{!2346, !2347, !2348, !2350}
!2346 = !DILocalVariable(name: "self", arg: 1, scope: !2342, file: !2255, line: 1744, type: !334)
!2347 = !DILocalVariable(name: "mid", arg: 2, scope: !2342, file: !2255, line: 1744, type: !9)
!2348 = !DILocalVariable(name: "len", scope: !2349, file: !2255, line: 1745, type: !9, align: 8)
!2349 = distinct !DILexicalBlock(scope: !2342, file: !2255, line: 1745, column: 9)
!2350 = !DILocalVariable(name: "ptr", scope: !2351, file: !2255, line: 1746, type: !261, align: 8)
!2351 = distinct !DILexicalBlock(scope: !2349, file: !2255, line: 1746, column: 9)
!2352 = !DILocation(line: 1744, column: 48, scope: !2342)
!2353 = !DILocation(line: 1744, column: 59, scope: !2342)
!2354 = !DILocation(line: 1745, column: 19, scope: !2342)
!2355 = !DILocation(line: 1745, column: 13, scope: !2349)
!2356 = !DILocation(line: 506, column: 29, scope: !2300, inlinedAt: !2357)
!2357 = distinct !DILocation(line: 1746, column: 19, scope: !2349)
!2358 = !DILocation(line: 1746, column: 19, scope: !2349)
!2359 = !DILocation(line: 1746, column: 13, scope: !2351)
!2360 = !DILocation(line: 1753, column: 13, scope: !2351)
!2361 = !DILocation(line: 1757, column: 14, scope: !2351)
!2362 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2363)
!2363 = distinct !DILocation(line: 1757, column: 63, scope: !2351)
!2364 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2363)
!2365 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2363)
!2366 = !DILocation(line: 1757, column: 77, scope: !2351)
!2367 = !DILocalVariable(name: "mid", arg: 1, scope: !2368, file: !218, line: 2517, type: !9)
!2368 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h75c9baf82917db98E", scope: !2369, file: !218, line: 2517, type: !2370, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2372)
!2369 = !DINamespace(name: "split_at_mut_unchecked", scope: !1222)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{null, !9, !9}
!2372 = !{!2367, !2373}
!2373 = !DILocalVariable(name: "len", arg: 2, scope: !2368, file: !218, line: 2517, type: !9)
!2374 = !DILocation(line: 2517, column: 39, scope: !2368, inlinedAt: !2375)
!2375 = distinct !DILocation(line: 1753, column: 13, scope: !2351)
!2376 = !DILocation(line: 1755, column: 45, scope: !2377, inlinedAt: !2375)
!2377 = !DILexicalBlockFile(scope: !2368, file: !2255, discriminator: 0)
!2378 = !DILocation(line: 2518, column: 20, scope: !2368, inlinedAt: !2375)
!2379 = !DILocation(line: 2520, column: 21, scope: !2368, inlinedAt: !2375)
!2380 = !DILocation(line: 1757, column: 44, scope: !2351)
!2381 = !DILocation(line: 1757, column: 13, scope: !2351)
!2382 = !DILocation(line: 1759, column: 6, scope: !2342)
!2383 = distinct !DISubprogram(name: "iter<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hfb83fb3f5a152370E", scope: !1222, file: !2255, line: 740, type: !2384, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2386)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{!846, !303}
!2386 = !{!2387}
!2387 = !DILocalVariable(name: "self", arg: 1, scope: !2383, file: !2255, line: 740, type: !303)
!2388 = !DILocation(line: 740, column: 17, scope: !2383)
!2389 = !DILocation(line: 741, column: 9, scope: !2383)
!2390 = !DILocation(line: 742, column: 6, scope: !2383)
!2391 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17hd756dd12c8c540cfE", scope: !1222, file: !2255, line: 615, type: !2392, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2394)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{null, !334, !9, !9, !307}
!2394 = !{!2395, !2396, !2397, !2398, !2400}
!2395 = !DILocalVariable(name: "self", arg: 1, scope: !2391, file: !2255, line: 615, type: !334)
!2396 = !DILocalVariable(name: "a", arg: 2, scope: !2391, file: !2255, line: 615, type: !9)
!2397 = !DILocalVariable(name: "b", arg: 3, scope: !2391, file: !2255, line: 615, type: !9)
!2398 = !DILocalVariable(name: "pa", scope: !2399, file: !2255, line: 618, type: !261, align: 8)
!2399 = distinct !DILexicalBlock(scope: !2391, file: !2255, line: 618, column: 9)
!2400 = !DILocalVariable(name: "pb", scope: !2401, file: !2255, line: 619, type: !261, align: 8)
!2401 = distinct !DILexicalBlock(scope: !2399, file: !2255, line: 619, column: 9)
!2402 = !DILocation(line: 615, column: 23, scope: !2391)
!2403 = !DILocation(line: 615, column: 34, scope: !2391)
!2404 = !DILocation(line: 615, column: 44, scope: !2391)
!2405 = !DILocation(line: 618, column: 36, scope: !2391)
!2406 = !DILocation(line: 618, column: 18, scope: !2391)
!2407 = !DILocation(line: 618, column: 13, scope: !2399)
!2408 = !DILocation(line: 619, column: 36, scope: !2399)
!2409 = !DILocation(line: 619, column: 18, scope: !2399)
!2410 = !DILocation(line: 619, column: 13, scope: !2401)
!2411 = !DILocation(line: 625, column: 13, scope: !2401)
!2412 = !DILocation(line: 627, column: 6, scope: !2391)
!2413 = distinct !DISubprogram(name: "reverse<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h4bbd3e8cc91a15fbE", scope: !1222, file: !2255, line: 682, type: !2414, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2416)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{null, !334}
!2416 = !{!2417, !2418, !2420, !2422, !2423, !2425}
!2417 = !DILocalVariable(name: "self", arg: 1, scope: !2413, file: !2255, line: 682, type: !334)
!2418 = !DILocalVariable(name: "half_len", scope: !2419, file: !2255, line: 683, type: !9, align: 8)
!2419 = distinct !DILexicalBlock(scope: !2413, file: !2255, line: 683, column: 9)
!2420 = !DILocalVariable(name: "start", scope: !2421, file: !2255, line: 684, type: !261, align: 8)
!2421 = distinct !DILexicalBlock(scope: !2419, file: !2255, line: 684, column: 9)
!2422 = !DILocalVariable(name: "end", scope: !2421, file: !2255, line: 684, type: !261, align: 8)
!2423 = !DILocalVariable(name: "front_half", scope: !2424, file: !2255, line: 688, type: !334, align: 8)
!2424 = distinct !DILexicalBlock(scope: !2421, file: !2255, line: 688, column: 9)
!2425 = !DILocalVariable(name: "back_half", scope: !2424, file: !2255, line: 688, type: !334, align: 8)
!2426 = !DILocation(line: 682, column: 20, scope: !2413)
!2427 = !DILocation(line: 683, column: 24, scope: !2413)
!2428 = !DILocation(line: 683, column: 13, scope: !2419)
!2429 = !DILocation(line: 684, column: 36, scope: !2419)
!2430 = !DILocation(line: 684, column: 21, scope: !2419)
!2431 = !DILocation(line: 684, column: 21, scope: !2421)
!2432 = !DILocation(line: 684, column: 28, scope: !2419)
!2433 = !DILocation(line: 684, column: 28, scope: !2421)
!2434 = !DILocation(line: 694, column: 21, scope: !2421)
!2435 = !DILocalVariable(name: "self", arg: 1, scope: !2436, file: !256, line: 1116, type: !261)
!2436 = distinct !DISubprogram(name: "sub<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h55bf0e1e34588e90E", scope: !267, file: !256, line: 1116, type: !268, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2437)
!2437 = !{!2435, !2438}
!2438 = !DILocalVariable(name: "count", arg: 2, scope: !2436, file: !256, line: 1116, type: !9)
!2439 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !2440)
!2440 = distinct !DILocation(line: 695, column: 47, scope: !2421)
!2441 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !2440)
!2442 = !DILocalVariable(name: "self", arg: 1, scope: !2443, file: !2444, line: 1358, type: !2448)
!2443 = distinct !DISubprogram(name: "wrapping_neg", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17h7820380440e4d10dE", scope: !2445, file: !2444, line: 1358, type: !2446, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2449)
!2444 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "23ceb05c6800027a4fae0d744182cf22")
!2445 = !DINamespace(name: "{impl#5}", scope: !1121)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{!2448, !2448}
!2448 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!2449 = !{!2442}
!2450 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !2451)
!2451 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !2440)
!2452 = !DILocalVariable(name: "self", arg: 1, scope: !2453, file: !2444, line: 1183, type: !2448)
!2453 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_sub17h4905df8551b23c0fE", scope: !2445, file: !2444, line: 1183, type: !2454, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2456)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{!2448, !2448, !2448}
!2456 = !{!2452, !2457}
!2457 = !DILocalVariable(name: "rhs", arg: 2, scope: !2453, file: !2444, line: 1183, type: !2448)
!2458 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !2459)
!2459 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !2451)
!2460 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !2459)
!2461 = !DILocation(line: 1184, column: 13, scope: !2453, inlinedAt: !2459)
!2462 = !DILocalVariable(name: "self", arg: 1, scope: !2463, file: !256, line: 472, type: !261)
!2463 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3da907b43312a215E", scope: !267, file: !256, line: 472, type: !2464, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2466)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!261, !261, !2448}
!2466 = !{!2462, !2467}
!2467 = !DILocalVariable(name: "count", arg: 2, scope: !2463, file: !256, line: 472, type: !2448)
!2468 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !2469)
!2469 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !2440)
!2470 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !2469)
!2471 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !2469)
!2472 = !DILocation(line: 695, column: 21, scope: !2421)
!2473 = !DILocation(line: 693, column: 17, scope: !2421)
!2474 = !DILocation(line: 688, column: 14, scope: !2421)
!2475 = !DILocation(line: 688, column: 14, scope: !2424)
!2476 = !DILocation(line: 688, column: 26, scope: !2421)
!2477 = !DILocation(line: 688, column: 26, scope: !2424)
!2478 = !DILocation(line: 702, column: 9, scope: !2424)
!2479 = !DILocation(line: 721, column: 6, scope: !2413)
!2480 = distinct !DISubprogram(name: "revswap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17he7247178a486b111E", scope: !2481, file: !2255, line: 705, type: !2482, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2484)
!2481 = !DINamespace(name: "reverse", scope: !1222)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !334, !334, !9}
!2484 = !{!2485, !2486, !2487, !2488, !2490, !2491}
!2485 = !DILocalVariable(name: "a", arg: 1, scope: !2480, file: !2255, line: 705, type: !334)
!2486 = !DILocalVariable(name: "b", arg: 2, scope: !2480, file: !2255, line: 705, type: !334)
!2487 = !DILocalVariable(name: "n", arg: 3, scope: !2480, file: !2255, line: 705, type: !9)
!2488 = !DILocalVariable(name: "a", scope: !2489, file: !2255, line: 713, type: !334, align: 8)
!2489 = distinct !DILexicalBlock(scope: !2480, file: !2255, line: 713, column: 13)
!2490 = !DILocalVariable(name: "b", scope: !2489, file: !2255, line: 713, type: !334, align: 8)
!2491 = !DILocalVariable(name: "i", scope: !2492, file: !2255, line: 715, type: !9, align: 8)
!2492 = distinct !DILexicalBlock(scope: !2489, file: !2255, line: 715, column: 13)
!2493 = !DILocation(line: 705, column: 23, scope: !2480)
!2494 = !DILocation(line: 705, column: 36, scope: !2480)
!2495 = !DILocation(line: 705, column: 49, scope: !2480)
!2496 = !DILocation(line: 715, column: 17, scope: !2492)
!2497 = !DILocation(line: 706, column: 13, scope: !2480)
!2498 = !DILocation(line: 707, column: 13, scope: !2480)
!2499 = !DILocation(line: 706, column: 27, scope: !2480)
!2500 = !DILocation(line: 713, column: 34, scope: !2480)
!2501 = !DILocation(line: 713, column: 32, scope: !2480)
!2502 = !DILocation(line: 713, column: 47, scope: !2480)
!2503 = !DILocation(line: 713, column: 45, scope: !2480)
!2504 = !DILocation(line: 713, column: 26, scope: !2480)
!2505 = !DILocation(line: 713, column: 18, scope: !2480)
!2506 = !DILocation(line: 713, column: 18, scope: !2489)
!2507 = !DILocation(line: 713, column: 21, scope: !2480)
!2508 = !DILocation(line: 713, column: 21, scope: !2489)
!2509 = !DILocation(line: 715, column: 25, scope: !2489)
!2510 = !DILocation(line: 716, column: 13, scope: !2492)
!2511 = !DILocation(line: 707, column: 27, scope: !2480)
!2512 = !DILocation(line: 716, column: 19, scope: !2492)
!2513 = !DILocation(line: 720, column: 10, scope: !2480)
!2514 = !DILocation(line: 717, column: 34, scope: !2492)
!2515 = !DILocation(line: 717, column: 32, scope: !2492)
!2516 = !DILocation(line: 717, column: 27, scope: !2492)
!2517 = !DILocation(line: 717, column: 45, scope: !2492)
!2518 = !DILocation(line: 717, column: 53, scope: !2492)
!2519 = !DILocation(line: 717, column: 43, scope: !2492)
!2520 = !DILocation(line: 717, column: 38, scope: !2492)
!2521 = !DILocation(line: 717, column: 17, scope: !2492)
!2522 = !DILocation(line: 718, column: 17, scope: !2492)
!2523 = distinct !DISubprogram(name: "from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17hf5c8da6568a0016cE", scope: !2525, file: !2524, line: 137, type: !2526, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2528)
!2524 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "4e9e8b780584cc248c586456197d9cf5")
!2525 = !DINamespace(name: "raw", scope: !166)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{!334, !261, !9}
!2528 = !{!2529, !2530}
!2529 = !DILocalVariable(name: "data", arg: 1, scope: !2523, file: !2524, line: 137, type: !261)
!2530 = !DILocalVariable(name: "len", arg: 2, scope: !2523, file: !2524, line: 137, type: !9)
!2531 = !DILocation(line: 137, column: 47, scope: !2523)
!2532 = !DILocation(line: 137, column: 61, scope: !2523)
!2533 = !DILocation(line: 140, column: 9, scope: !2523)
!2534 = !DILocation(line: 145, column: 15, scope: !2523)
!2535 = !DILocation(line: 147, column: 2, scope: !2523)
!2536 = !DILocalVariable(name: "data", arg: 1, scope: !2537, file: !218, line: 2517, type: !261)
!2537 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17h5176cfe8c7db6de4E", scope: !2538, file: !218, line: 2517, type: !2539, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2541)
!2538 = !DINamespace(name: "from_raw_parts_mut", scope: !2525)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{null, !261, !9}
!2541 = !{!2536, !2542}
!2542 = !DILocalVariable(name: "len", arg: 2, scope: !2537, file: !218, line: 2517, type: !9)
!2543 = !DILocation(line: 2517, column: 39, scope: !2537, inlinedAt: !2544)
!2544 = distinct !DILocation(line: 140, column: 9, scope: !2523)
!2545 = !DILocation(line: 142, column: 46, scope: !2546, inlinedAt: !2544)
!2546 = !DILexicalBlockFile(scope: !2537, file: !2524, discriminator: 0)
!2547 = !DILocation(line: 143, column: 20, scope: !2546, inlinedAt: !2544)
!2548 = !DILocation(line: 2518, column: 20, scope: !2537, inlinedAt: !2544)
!2549 = !DILocation(line: 2520, column: 21, scope: !2537, inlinedAt: !2544)
!2550 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h337f6f0301448630E", scope: !846, file: !2551, line: 89, type: !2384, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, declaration: !2552, retainedNodes: !2553)
!2551 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "a7ee10eddc349f23272d595a2768dd5b")
!2552 = !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h337f6f0301448630E", scope: !846, file: !2551, line: 89, type: !2384, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !189)
!2553 = !{!2554, !2555, !2557}
!2554 = !DILocalVariable(name: "slice", arg: 1, scope: !2550, file: !2551, line: 89, type: !303)
!2555 = !DILocalVariable(name: "ptr", scope: !2556, file: !2551, line: 90, type: !207, align: 8)
!2556 = distinct !DILexicalBlock(scope: !2550, file: !2551, line: 90, column: 9)
!2557 = !DILocalVariable(name: "end", scope: !2558, file: !2551, line: 93, type: !207, align: 8)
!2558 = distinct !DILexicalBlock(scope: !2556, file: !2551, line: 93, column: 13)
!2559 = !DILocation(line: 89, column: 23, scope: !2550)
!2560 = !DILocation(line: 93, column: 17, scope: !2558)
!2561 = !DILocalVariable(name: "self", arg: 1, scope: !2562, file: !2255, line: 476, type: !303)
!2562 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hca915c4dfdcdde43E", scope: !1222, file: !2255, line: 476, type: !2563, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2565)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!207, !303}
!2565 = !{!2561}
!2566 = !DILocation(line: 476, column: 25, scope: !2562, inlinedAt: !2567)
!2567 = distinct !DILocation(line: 90, column: 19, scope: !2550)
!2568 = !DILocation(line: 90, column: 19, scope: !2550)
!2569 = !DILocation(line: 90, column: 13, scope: !2556)
!2570 = !DILocation(line: 93, column: 26, scope: !2556)
!2571 = !DILocation(line: 915, column: 29, scope: !200, inlinedAt: !2572)
!2572 = distinct !DILocation(line: 93, column: 68, scope: !2556)
!2573 = !DILocation(line: 915, column: 35, scope: !200, inlinedAt: !2572)
!2574 = !DILocation(line: 927, column: 13, scope: !200, inlinedAt: !2572)
!2575 = !DILocation(line: 93, column: 68, scope: !2556)
!2576 = !DILocalVariable(name: "addr", arg: 1, scope: !2577, file: !1244, line: 569, type: !9)
!2577 = distinct !DISubprogram(name: "invalid<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7invalid17hbe923498af5da3f6E", scope: !204, file: !1244, line: 569, type: !2578, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2580)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!207, !9}
!2580 = !{!2576}
!2581 = !DILocation(line: 569, column: 25, scope: !2577, inlinedAt: !2582)
!2582 = distinct !DILocation(line: 93, column: 38, scope: !2556)
!2583 = !DILocation(line: 575, column: 14, scope: !2577, inlinedAt: !2582)
!2584 = !DILocation(line: 93, column: 38, scope: !2556)
!2585 = !DILocation(line: 95, column: 25, scope: !2558)
!2586 = !DILocation(line: 95, column: 64, scope: !2558)
!2587 = !DILocation(line: 95, column: 13, scope: !2558)
!2588 = !DILocation(line: 97, column: 6, scope: !2550)
!2589 = distinct !DISubprogram(name: "insert_head<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_head17hc56b2cb743b6eb6cE", scope: !1249, file: !2590, line: 88, type: !2591, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !2593)
!2590 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs", directory: "", checksumkind: CSK_MD5, checksum: "528a6391425ba09f13cc1c6ce731b4c0")
!2591 = !DISubroutineType(types: !2592)
!2592 = !{null, !334, !1219}
!2593 = !{!2594, !2595, !2596, !2598, !2600, !2602, !2604}
!2594 = !DILocalVariable(name: "v", arg: 1, scope: !2589, file: !2590, line: 88, type: !334)
!2595 = !DILocalVariable(name: "is_less", arg: 2, scope: !2589, file: !2590, line: 88, type: !1219)
!2596 = !DILocalVariable(name: "arr_ptr", scope: !2597, file: !2590, line: 97, type: !261, align: 8)
!2597 = distinct !DILexicalBlock(scope: !2589, file: !2590, line: 97, column: 13)
!2598 = !DILocalVariable(name: "tmp", scope: !2599, file: !2590, line: 116, type: !677, align: 8)
!2599 = distinct !DILexicalBlock(scope: !2597, file: !2590, line: 116, column: 13)
!2600 = !DILocalVariable(name: "hole", scope: !2601, file: !2590, line: 128, type: !1248, align: 8)
!2601 = distinct !DILexicalBlock(scope: !2599, file: !2590, line: 128, column: 13)
!2602 = !DILocalVariable(name: "iter", scope: !2603, file: !2590, line: 131, type: !174, align: 8)
!2603 = distinct !DILexicalBlock(scope: !2601, file: !2590, line: 131, column: 13)
!2604 = !DILocalVariable(name: "i", scope: !2605, file: !2590, line: 131, type: !9, align: 8)
!2605 = distinct !DILexicalBlock(scope: !2603, file: !2590, line: 131, column: 33)
!2606 = !{!190, !1238}
!2607 = !DILocation(line: 88, column: 29, scope: !2589)
!2608 = !DILocation(line: 88, column: 42, scope: !2589)
!2609 = !DILocation(line: 116, column: 17, scope: !2599)
!2610 = !DILocation(line: 128, column: 17, scope: !2601)
!2611 = !DILocation(line: 131, column: 22, scope: !2603)
!2612 = !DILocation(line: 92, column: 5, scope: !2589)
!2613 = !DILocation(line: 96, column: 20, scope: !2589)
!2614 = !DILocation(line: 96, column: 40, scope: !2589)
!2615 = !DILocation(line: 96, column: 12, scope: !2589)
!2616 = !DILocation(line: 92, column: 19, scope: !2589)
!2617 = !DILocation(line: 141, column: 2, scope: !2589)
!2618 = !DILocation(line: 506, column: 29, scope: !2300, inlinedAt: !2619)
!2619 = distinct !DILocation(line: 97, column: 27, scope: !2589)
!2620 = !DILocation(line: 97, column: 27, scope: !2589)
!2621 = !DILocation(line: 97, column: 17, scope: !2597)
!2622 = !DILocation(line: 116, column: 46, scope: !2597)
!2623 = !DILocation(line: 70, column: 22, scope: !1108, inlinedAt: !2624)
!2624 = distinct !DILocation(line: 116, column: 23, scope: !2597)
!2625 = !DILocation(line: 71, column: 9, scope: !1108, inlinedAt: !2624)
!2626 = !DILocalVariable(name: "self", arg: 1, scope: !2627, file: !1109, line: 152, type: !2631)
!2627 = distinct !DISubprogram(name: "deref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he9ab7a662bd375e9E", scope: !2628, file: !1109, line: 152, type: !2629, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2632)
!2628 = !DINamespace(name: "{impl#2}", scope: !678)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{!12, !2631}
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !677, size: 64, align: 64, dwarfAddressSpace: 0)
!2632 = !{!2626}
!2633 = !DILocation(line: 152, column: 14, scope: !2627, inlinedAt: !2634)
!2634 = distinct !DILocation(line: 128, column: 50, scope: !2599)
!2635 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2636)
!2636 = distinct !DILocation(line: 128, column: 62, scope: !2599)
!2637 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2636)
!2638 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2636)
!2639 = !DILocation(line: 128, column: 28, scope: !2599)
!2640 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2641)
!2641 = distinct !DILocation(line: 129, column: 38, scope: !2601)
!2642 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2641)
!2643 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2641)
!2644 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2645)
!2645 = distinct !DILocation(line: 129, column: 54, scope: !2601)
!2646 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2645)
!2647 = !DILocation(line: 129, column: 13, scope: !2601)
!2648 = !DILocation(line: 131, column: 22, scope: !2601)
!2649 = !DILocation(line: 131, column: 13, scope: !2603)
!2650 = !DILocation(line: 139, column: 9, scope: !2599)
!2651 = !DILocation(line: 131, column: 17, scope: !2603)
!2652 = !DILocation(line: 131, column: 17, scope: !2605)
!2653 = !DILocation(line: 132, column: 30, scope: !2605)
!2654 = !DILocation(line: 132, column: 29, scope: !2605)
!2655 = !DILocation(line: 152, column: 14, scope: !2627, inlinedAt: !2656)
!2656 = distinct !DILocation(line: 132, column: 51, scope: !2605)
!2657 = !DILocation(line: 132, column: 21, scope: !2605)
!2658 = !DILocation(line: 132, column: 20, scope: !2605)
!2659 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2660)
!2660 = distinct !DILocation(line: 135, column: 42, scope: !2605)
!2661 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2660)
!2662 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2660)
!2663 = !DILocation(line: 135, column: 70, scope: !2605)
!2664 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2665)
!2665 = distinct !DILocation(line: 135, column: 58, scope: !2605)
!2666 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2665)
!2667 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2665)
!2668 = !DILocation(line: 135, column: 17, scope: !2605)
!2669 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2670)
!2670 = distinct !DILocation(line: 136, column: 29, scope: !2605)
!2671 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2670)
!2672 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2670)
!2673 = !DILocation(line: 136, column: 17, scope: !2605)
!2674 = distinct !DISubprogram(name: "insert_tail<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_tail17hd4f3d2e06272ff2eE", scope: !1249, file: !2590, line: 35, type: !2591, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !2675)
!2675 = !{!2676, !2677, !2678, !2680, !2682, !2684, !2686, !2688, !2698, !2700}
!2676 = !DILocalVariable(name: "v", arg: 1, scope: !2674, file: !2590, line: 35, type: !334)
!2677 = !DILocalVariable(name: "is_less", arg: 2, scope: !2674, file: !2590, line: 35, type: !1219)
!2678 = !DILocalVariable(name: "arr_ptr", scope: !2679, file: !2590, line: 41, type: !261, align: 8)
!2679 = distinct !DILexicalBlock(scope: !2674, file: !2590, line: 41, column: 5)
!2680 = !DILocalVariable(name: "i", scope: !2681, file: !2590, line: 42, type: !9, align: 8)
!2681 = distinct !DILexicalBlock(scope: !2679, file: !2590, line: 42, column: 5)
!2682 = !DILocalVariable(name: "i_ptr", scope: !2683, file: !2590, line: 47, type: !261, align: 8)
!2683 = distinct !DILexicalBlock(scope: !2681, file: !2590, line: 47, column: 9)
!2684 = !DILocalVariable(name: "tmp", scope: !2685, file: !2590, line: 56, type: !677, align: 8)
!2685 = distinct !DILexicalBlock(scope: !2683, file: !2590, line: 56, column: 13)
!2686 = !DILocalVariable(name: "hole", scope: !2687, file: !2590, line: 67, type: !1248, align: 8)
!2687 = distinct !DILexicalBlock(scope: !2685, file: !2590, line: 67, column: 13)
!2688 = !DILocalVariable(name: "iter", scope: !2689, file: !2590, line: 71, type: !2690, align: 8)
!2689 = distinct !DILexicalBlock(scope: !2687, file: !2590, line: 71, column: 13)
!2690 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !2691, file: !2, size: 128, align: 64, elements: !2694, templateParams: !2696, identifier: "fdab2f9bdfd77ef9bf15ed3d8636d043")
!2691 = !DINamespace(name: "rev", scope: !2692)
!2692 = !DINamespace(name: "adapters", scope: !2693)
!2693 = !DINamespace(name: "iter", scope: !142)
!2694 = !{!2695}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2690, file: !2, baseType: !174, size: 128, align: 64)
!2696 = !{!2697}
!2697 = !DITemplateTypeParameter(name: "T", type: !174)
!2698 = !DILocalVariable(name: "j", scope: !2699, file: !2590, line: 71, type: !9, align: 8)
!2699 = distinct !DILexicalBlock(scope: !2689, file: !2590, line: 71, column: 41)
!2700 = !DILocalVariable(name: "j_ptr", scope: !2701, file: !2590, line: 72, type: !261, align: 8)
!2701 = distinct !DILexicalBlock(scope: !2699, file: !2590, line: 72, column: 17)
!2702 = !DILocation(line: 35, column: 29, scope: !2674)
!2703 = !DILocation(line: 35, column: 42, scope: !2674)
!2704 = !DILocation(line: 56, column: 17, scope: !2685)
!2705 = !DILocation(line: 67, column: 17, scope: !2687)
!2706 = !DILocation(line: 71, column: 22, scope: !2689)
!2707 = !DILocation(line: 39, column: 5, scope: !2674)
!2708 = !DILocation(line: 506, column: 29, scope: !2300, inlinedAt: !2709)
!2709 = distinct !DILocation(line: 41, column: 19, scope: !2674)
!2710 = !DILocation(line: 41, column: 19, scope: !2674)
!2711 = !DILocation(line: 41, column: 9, scope: !2679)
!2712 = !DILocation(line: 42, column: 13, scope: !2679)
!2713 = !DILocation(line: 39, column: 19, scope: !2674)
!2714 = !DILocation(line: 42, column: 9, scope: !2681)
!2715 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2716)
!2716 = distinct !DILocation(line: 47, column: 21, scope: !2681)
!2717 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2716)
!2718 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2716)
!2719 = !DILocation(line: 47, column: 21, scope: !2681)
!2720 = !DILocation(line: 47, column: 13, scope: !2683)
!2721 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !2722)
!2722 = distinct !DILocation(line: 52, column: 31, scope: !2683)
!2723 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !2722)
!2724 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !2725)
!2725 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !2722)
!2726 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !2727)
!2727 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !2725)
!2728 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !2727)
!2729 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !2730)
!2730 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !2722)
!2731 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !2730)
!2732 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !2730)
!2733 = !DILocation(line: 52, column: 12, scope: !2683)
!2734 = !DILocation(line: 83, column: 2, scope: !2674)
!2735 = !DILocation(line: 56, column: 46, scope: !2683)
!2736 = !DILocation(line: 70, column: 22, scope: !1108, inlinedAt: !2737)
!2737 = distinct !DILocation(line: 56, column: 23, scope: !2683)
!2738 = !DILocation(line: 71, column: 9, scope: !1108, inlinedAt: !2737)
!2739 = !DILocation(line: 152, column: 14, scope: !2627, inlinedAt: !2740)
!2740 = distinct !DILocation(line: 67, column: 50, scope: !2685)
!2741 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !2742)
!2742 = distinct !DILocation(line: 67, column: 62, scope: !2685)
!2743 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !2742)
!2744 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !2745)
!2745 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !2742)
!2746 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !2747)
!2747 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !2745)
!2748 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !2747)
!2749 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !2750)
!2750 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !2742)
!2751 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !2750)
!2752 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !2750)
!2753 = !DILocation(line: 67, column: 28, scope: !2685)
!2754 = !DILocation(line: 68, column: 38, scope: !2687)
!2755 = !DILocation(line: 68, column: 13, scope: !2687)
!2756 = !DILocation(line: 71, column: 26, scope: !2687)
!2757 = !DILocation(line: 71, column: 22, scope: !2687)
!2758 = !DILocation(line: 71, column: 13, scope: !2689)
!2759 = !DILocation(line: 81, column: 9, scope: !2685)
!2760 = !DILocation(line: 71, column: 17, scope: !2689)
!2761 = !DILocation(line: 71, column: 17, scope: !2699)
!2762 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !2763)
!2763 = distinct !DILocation(line: 72, column: 29, scope: !2699)
!2764 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !2763)
!2765 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !2763)
!2766 = !DILocation(line: 72, column: 29, scope: !2699)
!2767 = !DILocation(line: 72, column: 21, scope: !2701)
!2768 = !DILocation(line: 152, column: 14, scope: !2627, inlinedAt: !2769)
!2769 = distinct !DILocation(line: 73, column: 30, scope: !2701)
!2770 = !DILocation(line: 73, column: 21, scope: !2701)
!2771 = !DILocation(line: 73, column: 20, scope: !2701)
!2772 = !DILocation(line: 77, column: 49, scope: !2701)
!2773 = !DILocation(line: 77, column: 17, scope: !2701)
!2774 = !DILocation(line: 78, column: 17, scope: !2701)
!2775 = distinct !DISubprogram(name: "choose_pivot<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot17h70023412db7e1b5bE", scope: !1249, file: !2590, line: 722, type: !2776, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !2778)
!2776 = !DISubroutineType(types: !2777)
!2777 = !{!1136, !334, !1219}
!2778 = !{!2779, !2780, !2781, !2783, !2785, !2787, !2789, !2791, !2800, !2806}
!2779 = !DILocalVariable(name: "v", arg: 1, scope: !2775, file: !2590, line: 722, type: !334)
!2780 = !DILocalVariable(name: "is_less", arg: 2, scope: !2775, file: !2590, line: 722, type: !1219)
!2781 = !DILocalVariable(name: "len", scope: !2782, file: !2590, line: 732, type: !9, align: 8)
!2782 = distinct !DILexicalBlock(scope: !2775, file: !2590, line: 732, column: 5)
!2783 = !DILocalVariable(name: "a", scope: !2784, file: !2590, line: 735, type: !9, align: 8)
!2784 = distinct !DILexicalBlock(scope: !2782, file: !2590, line: 735, column: 5)
!2785 = !DILocalVariable(name: "b", scope: !2786, file: !2590, line: 736, type: !9, align: 8)
!2786 = distinct !DILexicalBlock(scope: !2784, file: !2590, line: 736, column: 5)
!2787 = !DILocalVariable(name: "c", scope: !2788, file: !2590, line: 737, type: !9, align: 8)
!2788 = distinct !DILexicalBlock(scope: !2786, file: !2590, line: 737, column: 5)
!2789 = !DILocalVariable(name: "swaps", scope: !2790, file: !2590, line: 740, type: !9, align: 8)
!2790 = distinct !DILexicalBlock(scope: !2788, file: !2590, line: 740, column: 5)
!2791 = !DILocalVariable(name: "sort2", scope: !2792, file: !2590, line: 750, type: !2793, align: 8)
!2792 = distinct !DILexicalBlock(scope: !2790, file: !2590, line: 750, column: 9)
!2793 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2794, file: !2, size: 256, align: 64, elements: !2795, templateParams: !24, identifier: "a75d5e0e37cf878fbf8a283c1f067a6")
!2794 = !DINamespace(name: "choose_pivot", scope: !1249)
!2795 = !{!2796, !2797, !2798}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !2793, file: !2, baseType: !1219, size: 64, align: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__v", scope: !2793, file: !2, baseType: !303, size: 128, align: 64, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__swaps", scope: !2793, file: !2, baseType: !2799, size: 64, align: 64, offset: 192)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2800 = !DILocalVariable(name: "sort3", scope: !2801, file: !2590, line: 758, type: !2802, align: 8)
!2801 = distinct !DILexicalBlock(scope: !2792, file: !2590, line: 758, column: 9)
!2802 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2794, file: !2, size: 64, align: 64, elements: !2803, templateParams: !24, identifier: "3d9199a26793480e19375dafe1b28f26")
!2803 = !{!2804}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort2", scope: !2802, file: !2, baseType: !2805, size: 64, align: 64)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2793, size: 64, align: 64, dwarfAddressSpace: 0)
!2806 = !DILocalVariable(name: "sort_adjacent", scope: !2807, file: !2590, line: 766, type: !2808, align: 8)
!2807 = distinct !DILexicalBlock(scope: !2801, file: !2590, line: 766, column: 13)
!2808 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2794, file: !2, size: 64, align: 64, elements: !2809, templateParams: !24, identifier: "5ada64c8bbaf5930cfcc9a2f31adb872")
!2809 = !{!2810}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort3", scope: !2808, file: !2, baseType: !2811, size: 64, align: 64)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2802, size: 64, align: 64, dwarfAddressSpace: 0)
!2812 = !DILocation(line: 722, column: 23, scope: !2775)
!2813 = !DILocation(line: 722, column: 36, scope: !2775)
!2814 = !DILocation(line: 735, column: 9, scope: !2784)
!2815 = !DILocation(line: 736, column: 9, scope: !2786)
!2816 = !DILocation(line: 737, column: 9, scope: !2788)
!2817 = !DILocation(line: 740, column: 9, scope: !2790)
!2818 = !DILocation(line: 750, column: 13, scope: !2792)
!2819 = !DILocation(line: 758, column: 13, scope: !2801)
!2820 = !DILocation(line: 766, column: 17, scope: !2807)
!2821 = !DILocation(line: 732, column: 15, scope: !2775)
!2822 = !DILocation(line: 732, column: 9, scope: !2782)
!2823 = !DILocation(line: 735, column: 17, scope: !2782)
!2824 = !DILocation(line: 736, column: 17, scope: !2784)
!2825 = !DILocation(line: 737, column: 17, scope: !2786)
!2826 = !DILocation(line: 740, column: 21, scope: !2788)
!2827 = !DILocation(line: 742, column: 8, scope: !2790)
!2828 = !DILocation(line: 781, column: 8, scope: !2790)
!2829 = !DILocation(line: 750, column: 25, scope: !2790)
!2830 = !DILocation(line: 758, column: 25, scope: !2792)
!2831 = !DILocation(line: 764, column: 12, scope: !2801)
!2832 = !DILocation(line: 778, column: 9, scope: !2801)
!2833 = !DILocation(line: 766, column: 37, scope: !2801)
!2834 = !DILocation(line: 772, column: 13, scope: !2807)
!2835 = !DILocation(line: 773, column: 13, scope: !2807)
!2836 = !DILocation(line: 774, column: 13, scope: !2807)
!2837 = !DILocation(line: 786, column: 9, scope: !2790)
!2838 = !DILocation(line: 787, column: 10, scope: !2790)
!2839 = !DILocation(line: 782, column: 10, scope: !2790)
!2840 = !DILocation(line: 782, column: 13, scope: !2790)
!2841 = !DILocation(line: 782, column: 9, scope: !2790)
!2842 = !DILocation(line: 781, column: 5, scope: !2790)
!2843 = !DILocation(line: 789, column: 2, scope: !2775)
!2844 = !DILocation(line: 787, column: 20, scope: !2790)
!2845 = !DILocation(line: 787, column: 9, scope: !2790)
!2846 = distinct !DISubprogram(name: "{closure#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h110ab19cf4b52e7aE", scope: !2794, file: !2590, line: 766, type: !2847, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !2850)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{null, !2849, !2799}
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2808, size: 64, align: 64, dwarfAddressSpace: 0)
!2850 = !{!2851, !2852, !2853}
!2851 = !DILocalVariable(name: "a", arg: 2, scope: !2846, file: !2590, line: 766, type: !2799)
!2852 = !DILocalVariable(name: "sort3", scope: !2846, file: !2590, line: 758, type: !2802, align: 8)
!2853 = !DILocalVariable(name: "tmp", scope: !2854, file: !2590, line: 767, type: !9, align: 8)
!2854 = distinct !DILexicalBlock(scope: !2846, file: !2590, line: 767, column: 17)
!2855 = !DILocation(line: 758, column: 17, scope: !2846)
!2856 = !DILocation(line: 766, column: 38, scope: !2846)
!2857 = !DILocation(line: 767, column: 27, scope: !2846)
!2858 = !DILocation(line: 767, column: 21, scope: !2854)
!2859 = !DILocation(line: 768, column: 17, scope: !2854)
!2860 = !DILocation(line: 768, column: 28, scope: !2854)
!2861 = !DILocation(line: 768, column: 47, scope: !2854)
!2862 = !DILocation(line: 769, column: 14, scope: !2846)
!2863 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h2adb57bf460d3f8cE", scope: !2794, file: !2590, line: 750, type: !2864, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !2866)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{null, !2805, !2799, !2799}
!2866 = !{!2867, !2868, !2869, !2870, !2871}
!2867 = !DILocalVariable(name: "a", arg: 2, scope: !2863, file: !2590, line: 750, type: !2799)
!2868 = !DILocalVariable(name: "b", arg: 3, scope: !2863, file: !2590, line: 750, type: !2799)
!2869 = !DILocalVariable(name: "is_less", scope: !2863, file: !2590, line: 722, type: !1220, align: 8)
!2870 = !DILocalVariable(name: "v", scope: !2863, file: !2590, line: 722, type: !13, align: 8)
!2871 = !DILocalVariable(name: "swaps", scope: !2863, file: !2590, line: 740, type: !9, align: 8)
!2872 = !DILocation(line: 722, column: 36, scope: !2863)
!2873 = !DILocation(line: 722, column: 23, scope: !2863)
!2874 = !DILocation(line: 740, column: 13, scope: !2863)
!2875 = !DILocation(line: 750, column: 26, scope: !2863)
!2876 = !DILocation(line: 750, column: 41, scope: !2863)
!2877 = !DILocation(line: 751, column: 16, scope: !2863)
!2878 = !DILocation(line: 751, column: 24, scope: !2863)
!2879 = !DILocation(line: 751, column: 40, scope: !2863)
!2880 = !DILocation(line: 751, column: 45, scope: !2863)
!2881 = !DILocation(line: 751, column: 61, scope: !2863)
!2882 = !DILocation(line: 755, column: 10, scope: !2863)
!2883 = !DILocation(line: 752, column: 17, scope: !2863)
!2884 = !DILocation(line: 753, column: 17, scope: !2863)
!2885 = !DILocation(line: 751, column: 13, scope: !2863)
!2886 = distinct !DISubprogram(name: "{closure#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h7af38418f855a001E", scope: !2794, file: !2590, line: 758, type: !2887, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !2889)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{null, !2811, !2799, !2799, !2799}
!2889 = !{!2890, !2891, !2892, !2893}
!2890 = !DILocalVariable(name: "a", arg: 2, scope: !2886, file: !2590, line: 758, type: !2799)
!2891 = !DILocalVariable(name: "b", arg: 3, scope: !2886, file: !2590, line: 758, type: !2799)
!2892 = !DILocalVariable(name: "c", arg: 4, scope: !2886, file: !2590, line: 758, type: !2799)
!2893 = !DILocalVariable(name: "sort2", scope: !2886, file: !2590, line: 750, type: !2793, align: 8)
!2894 = !DILocation(line: 750, column: 17, scope: !2886)
!2895 = !DILocation(line: 758, column: 26, scope: !2886)
!2896 = !DILocation(line: 758, column: 41, scope: !2886)
!2897 = !DILocation(line: 758, column: 56, scope: !2886)
!2898 = !DILocation(line: 759, column: 13, scope: !2886)
!2899 = !DILocation(line: 760, column: 13, scope: !2886)
!2900 = !DILocation(line: 761, column: 13, scope: !2886)
!2901 = !DILocation(line: 762, column: 10, scope: !2886)
!2902 = distinct !DISubprogram(name: "break_patterns<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns17hd96ac420a4838c41E", scope: !1249, file: !2590, line: 673, type: !2414, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2903)
!2903 = !{!2904, !2905, !2907, !2909, !2915, !2917, !2919, !2921, !2923}
!2904 = !DILocalVariable(name: "v", arg: 1, scope: !2902, file: !2590, line: 673, type: !334)
!2905 = !DILocalVariable(name: "len", scope: !2906, file: !2590, line: 674, type: !9, align: 8)
!2906 = distinct !DILexicalBlock(scope: !2902, file: !2590, line: 674, column: 5)
!2907 = !DILocalVariable(name: "seed", scope: !2908, file: !2590, line: 676, type: !9, align: 8)
!2908 = distinct !DILexicalBlock(scope: !2906, file: !2590, line: 676, column: 9)
!2909 = !DILocalVariable(name: "gen_usize", scope: !2910, file: !2590, line: 677, type: !2911, align: 8)
!2910 = distinct !DILexicalBlock(scope: !2908, file: !2590, line: 677, column: 9)
!2911 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !2912, file: !2, size: 64, align: 64, elements: !2913, templateParams: !24, identifier: "3590621bb610afeb1e0efcbf071f77d0")
!2912 = !DINamespace(name: "break_patterns", scope: !1249)
!2913 = !{!2914}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__seed", scope: !2911, file: !2, baseType: !2799, size: 64, align: 64)
!2915 = !DILocalVariable(name: "modulus", scope: !2916, file: !2590, line: 698, type: !9, align: 8)
!2916 = distinct !DILexicalBlock(scope: !2910, file: !2590, line: 698, column: 9)
!2917 = !DILocalVariable(name: "pos", scope: !2918, file: !2590, line: 701, type: !9, align: 8)
!2918 = distinct !DILexicalBlock(scope: !2916, file: !2590, line: 701, column: 9)
!2919 = !DILocalVariable(name: "iter", scope: !2920, file: !2590, line: 703, type: !174, align: 8)
!2920 = distinct !DILexicalBlock(scope: !2918, file: !2590, line: 703, column: 9)
!2921 = !DILocalVariable(name: "i", scope: !2922, file: !2590, line: 703, type: !9, align: 8)
!2922 = distinct !DILexicalBlock(scope: !2920, file: !2590, line: 703, column: 23)
!2923 = !DILocalVariable(name: "other", scope: !2924, file: !2590, line: 707, type: !9, align: 8)
!2924 = distinct !DILexicalBlock(scope: !2922, file: !2590, line: 707, column: 13)
!2925 = !DILocation(line: 673, column: 22, scope: !2902)
!2926 = !DILocation(line: 676, column: 13, scope: !2908)
!2927 = !DILocation(line: 677, column: 13, scope: !2910)
!2928 = !DILocation(line: 703, column: 18, scope: !2920)
!2929 = !DILocation(line: 707, column: 17, scope: !2924)
!2930 = !DILocation(line: 674, column: 15, scope: !2902)
!2931 = !DILocation(line: 674, column: 9, scope: !2906)
!2932 = !DILocation(line: 675, column: 8, scope: !2906)
!2933 = !DILocation(line: 717, column: 2, scope: !2902)
!2934 = !DILocation(line: 676, column: 24, scope: !2906)
!2935 = !DILocation(line: 677, column: 29, scope: !2908)
!2936 = !DILocation(line: 698, column: 23, scope: !2910)
!2937 = !DILocation(line: 698, column: 13, scope: !2916)
!2938 = !DILocation(line: 701, column: 19, scope: !2916)
!2939 = !DILocation(line: 701, column: 13, scope: !2918)
!2940 = !DILocation(line: 703, column: 18, scope: !2918)
!2941 = !DILocation(line: 703, column: 9, scope: !2920)
!2942 = !DILocation(line: 703, column: 13, scope: !2920)
!2943 = !DILocation(line: 703, column: 13, scope: !2922)
!2944 = !DILocation(line: 707, column: 29, scope: !2922)
!2945 = !DILocation(line: 707, column: 43, scope: !2922)
!2946 = !DILocation(line: 710, column: 16, scope: !2924)
!2947 = !DILocation(line: 714, column: 20, scope: !2924)
!2948 = !DILocation(line: 711, column: 17, scope: !2924)
!2949 = !DILocation(line: 710, column: 13, scope: !2924)
!2950 = !DILocation(line: 714, column: 33, scope: !2924)
!2951 = !DILocation(line: 714, column: 13, scope: !2924)
!2952 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h45338f39b36bc1d2E", scope: !2912, file: !2590, line: 677, type: !2953, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !2956)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!9, !2955}
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::break_patterns::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !2911, size: 64, align: 64, dwarfAddressSpace: 0)
!2956 = !{!2957, !2958, !2960}
!2957 = !DILocalVariable(name: "seed", scope: !2952, file: !2590, line: 676, type: !9, align: 8)
!2958 = !DILocalVariable(name: "r", scope: !2959, file: !2590, line: 680, type: !27, align: 4)
!2959 = distinct !DILexicalBlock(scope: !2952, file: !2590, line: 680, column: 17)
!2960 = !DILocalVariable(name: "r", scope: !2961, file: !2590, line: 687, type: !22, align: 8)
!2961 = distinct !DILexicalBlock(scope: !2952, file: !2590, line: 687, column: 17)
!2962 = !DILocation(line: 676, column: 17, scope: !2952)
!2963 = !DILocation(line: 680, column: 21, scope: !2959)
!2964 = !DILocation(line: 687, column: 21, scope: !2961)
!2965 = !DILocation(line: 679, column: 16, scope: !2952)
!2966 = !DILocation(line: 687, column: 29, scope: !2952)
!2967 = !DILocation(line: 688, column: 22, scope: !2961)
!2968 = !DILocation(line: 688, column: 17, scope: !2961)
!2969 = !DILocation(line: 689, column: 22, scope: !2961)
!2970 = !DILocation(line: 689, column: 17, scope: !2961)
!2971 = !DILocation(line: 690, column: 22, scope: !2961)
!2972 = !DILocation(line: 690, column: 17, scope: !2961)
!2973 = !DILocation(line: 691, column: 24, scope: !2961)
!2974 = !DILocation(line: 691, column: 17, scope: !2961)
!2975 = !DILocation(line: 692, column: 17, scope: !2961)
!2976 = !DILocation(line: 679, column: 13, scope: !2952)
!2977 = !DILocation(line: 680, column: 29, scope: !2952)
!2978 = !DILocation(line: 681, column: 22, scope: !2959)
!2979 = !DILocation(line: 681, column: 17, scope: !2959)
!2980 = !DILocation(line: 682, column: 22, scope: !2959)
!2981 = !DILocation(line: 682, column: 17, scope: !2959)
!2982 = !DILocation(line: 683, column: 22, scope: !2959)
!2983 = !DILocation(line: 683, column: 17, scope: !2959)
!2984 = !DILocation(line: 684, column: 24, scope: !2959)
!2985 = !DILocation(line: 684, column: 17, scope: !2959)
!2986 = !DILocation(line: 685, column: 17, scope: !2959)
!2987 = !DILocation(line: 694, column: 10, scope: !2952)
!2988 = distinct !DISubprogram(name: "partition_equal<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort15partition_equal17habf8a516bec176fdE", scope: !1249, file: !2590, line: 615, type: !2989, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !2991)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!9, !334, !9, !1219}
!2991 = !{!2992, !2993, !2994, !2995, !2997, !2998, !3000, !3002, !3004, !3006, !3008, !3010}
!2992 = !DILocalVariable(name: "v", arg: 1, scope: !2988, file: !2590, line: 615, type: !334)
!2993 = !DILocalVariable(name: "pivot", arg: 2, scope: !2988, file: !2590, line: 615, type: !9)
!2994 = !DILocalVariable(name: "is_less", arg: 3, scope: !2988, file: !2590, line: 615, type: !1219)
!2995 = !DILocalVariable(name: "pivot", scope: !2996, file: !2590, line: 621, type: !334, align: 8)
!2996 = distinct !DILexicalBlock(scope: !2988, file: !2590, line: 621, column: 5)
!2997 = !DILocalVariable(name: "v", scope: !2996, file: !2590, line: 621, type: !334, align: 8)
!2998 = !DILocalVariable(name: "pivot", scope: !2999, file: !2590, line: 622, type: !1030, align: 8)
!2999 = distinct !DILexicalBlock(scope: !2996, file: !2590, line: 622, column: 5)
!3000 = !DILocalVariable(name: "tmp", scope: !3001, file: !2590, line: 627, type: !677, align: 8)
!3001 = distinct !DILexicalBlock(scope: !2999, file: !2590, line: 627, column: 5)
!3002 = !DILocalVariable(name: "_pivot_guard", scope: !3003, file: !2590, line: 628, type: !1248, align: 8)
!3003 = distinct !DILexicalBlock(scope: !3001, file: !2590, line: 628, column: 5)
!3004 = !DILocalVariable(name: "pivot", scope: !3005, file: !2590, line: 629, type: !12, align: 8)
!3005 = distinct !DILexicalBlock(scope: !3003, file: !2590, line: 629, column: 5)
!3006 = !DILocalVariable(name: "l", scope: !3007, file: !2590, line: 632, type: !9, align: 8)
!3007 = distinct !DILexicalBlock(scope: !3005, file: !2590, line: 632, column: 5)
!3008 = !DILocalVariable(name: "r", scope: !3009, file: !2590, line: 633, type: !9, align: 8)
!3009 = distinct !DILexicalBlock(scope: !3007, file: !2590, line: 633, column: 5)
!3010 = !DILocalVariable(name: "ptr", scope: !3011, file: !2590, line: 657, type: !261, align: 8)
!3011 = distinct !DILexicalBlock(scope: !3009, file: !2590, line: 657, column: 13)
!3012 = !DILocation(line: 615, column: 26, scope: !2988)
!3013 = !DILocation(line: 615, column: 39, scope: !2988)
!3014 = !DILocation(line: 615, column: 53, scope: !2988)
!3015 = !DILocation(line: 627, column: 9, scope: !3001)
!3016 = !DILocation(line: 628, column: 9, scope: !3003)
!3017 = !DILocation(line: 632, column: 9, scope: !3007)
!3018 = !DILocation(line: 633, column: 9, scope: !3009)
!3019 = !DILocation(line: 620, column: 5, scope: !2988)
!3020 = !DILocation(line: 621, column: 22, scope: !2988)
!3021 = !DILocation(line: 621, column: 10, scope: !2988)
!3022 = !DILocation(line: 621, column: 10, scope: !2996)
!3023 = !DILocation(line: 621, column: 17, scope: !2988)
!3024 = !DILocation(line: 621, column: 17, scope: !2996)
!3025 = !DILocation(line: 622, column: 22, scope: !2996)
!3026 = !DILocation(line: 622, column: 17, scope: !2996)
!3027 = !DILocation(line: 622, column: 9, scope: !2999)
!3028 = !DILocation(line: 627, column: 47, scope: !2999)
!3029 = !DILocation(line: 70, column: 22, scope: !1108, inlinedAt: !3030)
!3030 = distinct !DILocation(line: 627, column: 15, scope: !2999)
!3031 = !DILocation(line: 71, column: 9, scope: !1108, inlinedAt: !3030)
!3032 = !DILocation(line: 152, column: 14, scope: !2627, inlinedAt: !3033)
!3033 = distinct !DILocation(line: 628, column: 46, scope: !3001)
!3034 = !DILocation(line: 628, column: 24, scope: !3001)
!3035 = !DILocation(line: 152, column: 14, scope: !2627, inlinedAt: !3036)
!3036 = distinct !DILocation(line: 629, column: 18, scope: !3003)
!3037 = !DILocation(line: 629, column: 17, scope: !3003)
!3038 = !DILocation(line: 629, column: 9, scope: !3005)
!3039 = !DILocation(line: 632, column: 17, scope: !3005)
!3040 = !DILocation(line: 633, column: 17, scope: !3007)
!3041 = !DILocation(line: 634, column: 5, scope: !3009)
!3042 = !DILocation(line: 641, column: 19, scope: !3009)
!3043 = !DILocation(line: 641, column: 23, scope: !3009)
!3044 = !DILocation(line: 641, column: 60, scope: !3009)
!3045 = !DILocation(line: 641, column: 44, scope: !3009)
!3046 = !DILocation(line: 641, column: 29, scope: !3009)
!3047 = !DILocation(line: 641, column: 28, scope: !3009)
!3048 = !DILocation(line: 646, column: 19, scope: !3009)
!3049 = !DILocation(line: 646, column: 23, scope: !3009)
!3050 = !DILocation(line: 642, column: 17, scope: !3009)
!3051 = !DILocation(line: 641, column: 13, scope: !3009)
!3052 = !DILocation(line: 646, column: 59, scope: !3009)
!3053 = !DILocation(line: 646, column: 43, scope: !3009)
!3054 = !DILocation(line: 646, column: 28, scope: !3009)
!3055 = !DILocation(line: 651, column: 16, scope: !3009)
!3056 = !DILocation(line: 651, column: 21, scope: !3009)
!3057 = !DILocation(line: 647, column: 17, scope: !3009)
!3058 = !DILocation(line: 646, column: 13, scope: !3009)
!3059 = !DILocation(line: 656, column: 13, scope: !3009)
!3060 = !DILocation(line: 664, column: 5, scope: !3009)
!3061 = !DILocation(line: 668, column: 1, scope: !3001)
!3062 = !DILocation(line: 668, column: 2, scope: !2988)
!3063 = !DILocation(line: 506, column: 29, scope: !2300, inlinedAt: !3064)
!3064 = distinct !DILocation(line: 657, column: 23, scope: !3009)
!3065 = !DILocation(line: 657, column: 23, scope: !3009)
!3066 = !DILocation(line: 657, column: 17, scope: !3011)
!3067 = !DILocation(line: 658, column: 31, scope: !3011)
!3068 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3069)
!3069 = distinct !DILocation(line: 658, column: 23, scope: !3011)
!3070 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3069)
!3071 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3069)
!3072 = !DILocation(line: 658, column: 43, scope: !3011)
!3073 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3074)
!3074 = distinct !DILocation(line: 658, column: 35, scope: !3011)
!3075 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3074)
!3076 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3074)
!3077 = !DILocation(line: 658, column: 13, scope: !3011)
!3078 = !DILocation(line: 659, column: 13, scope: !3011)
!3079 = distinct !DISubprogram(name: "partition_in_blocks<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort19partition_in_blocks17h9169f7560d6148a6E", scope: !1249, file: !2590, line: 302, type: !3080, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !3082)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!9, !334, !12, !1219}
!3082 = !{!3083, !3084, !3085, !3086, !3088, !3090, !3092, !3094, !3099, !3101, !3103, !3105, !3107, !3109, !3111, !3113, !3115, !3117, !3119, !3121, !3123, !3125, !3127, !3129, !3131, !3136, !3137, !3140, !3143, !3144}
!3083 = !DILocalVariable(name: "v", arg: 1, scope: !3079, file: !2590, line: 302, type: !334)
!3084 = !DILocalVariable(name: "pivot", arg: 2, scope: !3079, file: !2590, line: 302, type: !12)
!3085 = !DILocalVariable(name: "is_less", arg: 3, scope: !3079, file: !2590, line: 302, type: !1219)
!3086 = !DILocalVariable(name: "l", scope: !3087, file: !2590, line: 323, type: !261, align: 8)
!3087 = distinct !DILexicalBlock(scope: !3079, file: !2590, line: 323, column: 5)
!3088 = !DILocalVariable(name: "block_l", scope: !3089, file: !2590, line: 324, type: !9, align: 8)
!3089 = distinct !DILexicalBlock(scope: !3087, file: !2590, line: 324, column: 5)
!3090 = !DILocalVariable(name: "start_l", scope: !3091, file: !2590, line: 325, type: !1273, align: 8)
!3091 = distinct !DILexicalBlock(scope: !3089, file: !2590, line: 325, column: 5)
!3092 = !DILocalVariable(name: "end_l", scope: !3093, file: !2590, line: 326, type: !1273, align: 8)
!3093 = distinct !DILexicalBlock(scope: !3091, file: !2590, line: 326, column: 5)
!3094 = !DILocalVariable(name: "offsets_l", scope: !3095, file: !2590, line: 327, type: !3096, align: 1)
!3095 = distinct !DILexicalBlock(scope: !3093, file: !2590, line: 327, column: 5)
!3096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1000, size: 1024, align: 8, elements: !3097)
!3097 = !{!3098}
!3098 = !DISubrange(count: 128, lowerBound: 0)
!3099 = !DILocalVariable(name: "r", scope: !3100, file: !2590, line: 331, type: !261, align: 8)
!3100 = distinct !DILexicalBlock(scope: !3095, file: !2590, line: 331, column: 5)
!3101 = !DILocalVariable(name: "block_r", scope: !3102, file: !2590, line: 332, type: !9, align: 8)
!3102 = distinct !DILexicalBlock(scope: !3100, file: !2590, line: 332, column: 5)
!3103 = !DILocalVariable(name: "start_r", scope: !3104, file: !2590, line: 333, type: !1273, align: 8)
!3104 = distinct !DILexicalBlock(scope: !3102, file: !2590, line: 333, column: 5)
!3105 = !DILocalVariable(name: "end_r", scope: !3106, file: !2590, line: 334, type: !1273, align: 8)
!3106 = distinct !DILexicalBlock(scope: !3104, file: !2590, line: 334, column: 5)
!3107 = !DILocalVariable(name: "offsets_r", scope: !3108, file: !2590, line: 335, type: !3096, align: 1)
!3108 = distinct !DILexicalBlock(scope: !3106, file: !2590, line: 335, column: 5)
!3109 = !DILocalVariable(name: "is_done", scope: !3110, file: !2590, line: 351, type: !401, align: 1)
!3110 = distinct !DILexicalBlock(scope: !3108, file: !2590, line: 351, column: 9)
!3111 = !DILocalVariable(name: "rem", scope: !3112, file: !2590, line: 355, type: !9, align: 8)
!3112 = distinct !DILexicalBlock(scope: !3110, file: !2590, line: 355, column: 13)
!3113 = !DILocalVariable(name: "elem", scope: !3114, file: !2590, line: 381, type: !261, align: 8)
!3114 = distinct !DILexicalBlock(scope: !3110, file: !2590, line: 381, column: 13)
!3115 = !DILocalVariable(name: "iter", scope: !3116, file: !2590, line: 383, type: !174, align: 8)
!3116 = distinct !DILexicalBlock(scope: !3114, file: !2590, line: 383, column: 13)
!3117 = !DILocalVariable(name: "i", scope: !3118, file: !2590, line: 383, type: !9, align: 8)
!3118 = distinct !DILexicalBlock(scope: !3116, file: !2590, line: 383, column: 33)
!3119 = !DILocalVariable(name: "elem", scope: !3120, file: !2590, line: 407, type: !261, align: 8)
!3120 = distinct !DILexicalBlock(scope: !3110, file: !2590, line: 407, column: 13)
!3121 = !DILocalVariable(name: "iter", scope: !3122, file: !2590, line: 409, type: !174, align: 8)
!3122 = distinct !DILexicalBlock(scope: !3120, file: !2590, line: 409, column: 13)
!3123 = !DILocalVariable(name: "i", scope: !3124, file: !2590, line: 409, type: !9, align: 8)
!3124 = distinct !DILexicalBlock(scope: !3122, file: !2590, line: 409, column: 33)
!3125 = !DILocalVariable(name: "count", scope: !3126, file: !2590, line: 431, type: !9, align: 8)
!3126 = distinct !DILexicalBlock(scope: !3110, file: !2590, line: 431, column: 9)
!3127 = !DILocalVariable(name: "tmp", scope: !3128, file: !2590, line: 465, type: !13, align: 8)
!3128 = distinct !DILexicalBlock(scope: !3126, file: !2590, line: 465, column: 17)
!3129 = !DILocalVariable(name: "iter", scope: !3130, file: !2590, line: 468, type: !174, align: 8)
!3130 = distinct !DILexicalBlock(scope: !3128, file: !2590, line: 468, column: 17)
!3131 = !DILocalVariable(name: "left_val", scope: !3132, file: !2590, line: 514, type: !3135, align: 8)
!3132 = !DILexicalBlockFile(scope: !3133, file: !2590, discriminator: 0)
!3133 = distinct !DILexicalBlock(scope: !3108, file: !3134, line: 39, column: 13)
!3134 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "c74b9f01d33c793d822fc715fa6c779c")
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3136 = !DILocalVariable(name: "right_val", scope: !3132, file: !2590, line: 514, type: !3135, align: 8)
!3137 = !DILocalVariable(name: "kind", scope: !3138, file: !2590, line: 514, type: !155, align: 1)
!3138 = !DILexicalBlockFile(scope: !3139, file: !2590, discriminator: 0)
!3139 = distinct !DILexicalBlock(scope: !3133, file: !3134, line: 41, column: 21)
!3140 = !DILocalVariable(name: "left_val", scope: !3141, file: !2590, line: 537, type: !3135, align: 8)
!3141 = !DILexicalBlockFile(scope: !3142, file: !2590, discriminator: 0)
!3142 = distinct !DILexicalBlock(scope: !3108, file: !3134, line: 39, column: 13)
!3143 = !DILocalVariable(name: "right_val", scope: !3141, file: !2590, line: 537, type: !3135, align: 8)
!3144 = !DILocalVariable(name: "kind", scope: !3145, file: !2590, line: 537, type: !155, align: 1)
!3145 = !DILexicalBlockFile(scope: !3146, file: !2590, discriminator: 0)
!3146 = distinct !DILexicalBlock(scope: !3142, file: !3134, line: 41, column: 21)
!3147 = !DILocation(line: 302, column: 30, scope: !3079)
!3148 = !DILocation(line: 302, column: 43, scope: !3079)
!3149 = !DILocation(line: 302, column: 54, scope: !3079)
!3150 = !DILocation(line: 323, column: 9, scope: !3087)
!3151 = !DILocation(line: 324, column: 9, scope: !3089)
!3152 = !DILocation(line: 325, column: 9, scope: !3091)
!3153 = !DILocation(line: 326, column: 9, scope: !3093)
!3154 = !DILocation(line: 327, column: 9, scope: !3095)
!3155 = !DILocation(line: 331, column: 9, scope: !3100)
!3156 = !DILocation(line: 332, column: 9, scope: !3102)
!3157 = !DILocation(line: 333, column: 9, scope: !3104)
!3158 = !DILocation(line: 334, column: 9, scope: !3106)
!3159 = !DILocation(line: 335, column: 9, scope: !3108)
!3160 = !DILocation(line: 355, column: 17, scope: !3112)
!3161 = !DILocation(line: 381, column: 17, scope: !3114)
!3162 = !DILocation(line: 383, column: 22, scope: !3116)
!3163 = !DILocation(line: 407, column: 17, scope: !3120)
!3164 = !DILocation(line: 409, column: 22, scope: !3122)
!3165 = !DILocation(line: 465, column: 21, scope: !3128)
!3166 = !DILocation(line: 468, column: 26, scope: !3130)
!3167 = !DILocation(line: 514, column: 9, scope: !3138)
!3168 = !DILocation(line: 537, column: 9, scope: !3145)
!3169 = !DILocation(line: 506, column: 29, scope: !2300, inlinedAt: !3170)
!3170 = distinct !DILocation(line: 323, column: 17, scope: !3079)
!3171 = !DILocation(line: 323, column: 17, scope: !3079)
!3172 = !DILocation(line: 324, column: 23, scope: !3087)
!3173 = !DILocalVariable(name: "addr", arg: 1, scope: !3174, file: !1244, line: 600, type: !9)
!3174 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hce1a0b8b265d0a55E", scope: !204, file: !1244, line: 600, type: !3175, scopeLine: 600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2042, retainedNodes: !3177)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!1389, !9}
!3177 = !{!3173}
!3178 = !DILocation(line: 600, column: 29, scope: !3174, inlinedAt: !3179)
!3179 = distinct !DILocation(line: 544, column: 24, scope: !3180, inlinedAt: !3183)
!3180 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h3713b2850194f92eE", scope: !204, file: !1244, line: 543, type: !3181, scopeLine: 543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, retainedNodes: !24)
!3181 = !DISubroutineType(types: !3182)
!3182 = !{!1273}
!3183 = distinct !DILocation(line: 325, column: 23, scope: !3089)
!3184 = !DILocation(line: 544, column: 5, scope: !3180, inlinedAt: !3183)
!3185 = !DILocation(line: 325, column: 23, scope: !3089)
!3186 = !DILocation(line: 600, column: 29, scope: !3174, inlinedAt: !3187)
!3187 = distinct !DILocation(line: 544, column: 24, scope: !3180, inlinedAt: !3188)
!3188 = distinct !DILocation(line: 326, column: 21, scope: !3091)
!3189 = !DILocation(line: 544, column: 5, scope: !3180, inlinedAt: !3188)
!3190 = !DILocation(line: 326, column: 21, scope: !3091)
!3191 = !DILocation(line: 315, column: 6, scope: !3192, inlinedAt: !3196)
!3192 = distinct !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hb4f35149f9165657E", scope: !1000, file: !1704, line: 313, type: !3193, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, declaration: !3195, retainedNodes: !24)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{!1000}
!3195 = !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hb4f35149f9165657E", scope: !1000, file: !1704, line: 313, type: !3193, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1007)
!3196 = distinct !DILocation(line: 327, column: 26, scope: !3093)
!3197 = !DILocation(line: 327, column: 25, scope: !3093)
!3198 = !DILocation(line: 331, column: 26, scope: !3095)
!3199 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3200)
!3200 = distinct !DILocation(line: 331, column: 26, scope: !3095)
!3201 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3200)
!3202 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3200)
!3203 = !DILocation(line: 332, column: 23, scope: !3100)
!3204 = !DILocation(line: 600, column: 29, scope: !3174, inlinedAt: !3205)
!3205 = distinct !DILocation(line: 544, column: 24, scope: !3180, inlinedAt: !3206)
!3206 = distinct !DILocation(line: 333, column: 23, scope: !3102)
!3207 = !DILocation(line: 544, column: 5, scope: !3180, inlinedAt: !3206)
!3208 = !DILocation(line: 333, column: 23, scope: !3102)
!3209 = !DILocation(line: 600, column: 29, scope: !3174, inlinedAt: !3210)
!3210 = distinct !DILocation(line: 544, column: 24, scope: !3180, inlinedAt: !3211)
!3211 = distinct !DILocation(line: 334, column: 21, scope: !3104)
!3212 = !DILocation(line: 544, column: 5, scope: !3180, inlinedAt: !3211)
!3213 = !DILocation(line: 334, column: 21, scope: !3104)
!3214 = !DILocation(line: 315, column: 6, scope: !3192, inlinedAt: !3215)
!3215 = distinct !DILocation(line: 335, column: 26, scope: !3106)
!3216 = !DILocation(line: 335, column: 25, scope: !3106)
!3217 = !DILocation(line: 348, column: 5, scope: !3108)
!3218 = !DILocation(line: 351, column: 29, scope: !3108)
!3219 = !DILocation(line: 351, column: 32, scope: !3108)
!3220 = !DILocation(line: 351, column: 23, scope: !3108)
!3221 = !DILocation(line: 351, column: 38, scope: !3108)
!3222 = !DILocation(line: 351, column: 13, scope: !3110)
!3223 = !DILocation(line: 353, column: 12, scope: !3110)
!3224 = !DILocation(line: 377, column: 12, scope: !3110)
!3225 = !DILocation(line: 377, column: 23, scope: !3110)
!3226 = !DILocation(line: 355, column: 33, scope: !3110)
!3227 = !DILocation(line: 355, column: 36, scope: !3110)
!3228 = !DILocation(line: 355, column: 27, scope: !3110)
!3229 = !DILocation(line: 356, column: 16, scope: !3112)
!3230 = !DILocation(line: 356, column: 26, scope: !3112)
!3231 = !DILocation(line: 356, column: 35, scope: !3112)
!3232 = !DILocation(line: 356, column: 45, scope: !3112)
!3233 = !DILocation(line: 362, column: 16, scope: !3112)
!3234 = !DILocation(line: 362, column: 26, scope: !3112)
!3235 = !DILocation(line: 357, column: 17, scope: !3112)
!3236 = !DILocation(line: 356, column: 13, scope: !3112)
!3237 = !DILocation(line: 364, column: 23, scope: !3112)
!3238 = !DILocation(line: 364, column: 33, scope: !3112)
!3239 = !DILocation(line: 363, column: 27, scope: !3112)
!3240 = !DILocation(line: 363, column: 17, scope: !3112)
!3241 = !DILocation(line: 362, column: 13, scope: !3112)
!3242 = !DILocation(line: 373, column: 13, scope: !3112)
!3243 = !DILocation(line: 370, column: 27, scope: !3112)
!3244 = !DILocation(line: 370, column: 17, scope: !3112)
!3245 = !DILocation(line: 371, column: 27, scope: !3112)
!3246 = !DILocation(line: 371, column: 33, scope: !3112)
!3247 = !DILocation(line: 365, column: 27, scope: !3112)
!3248 = !DILocation(line: 365, column: 17, scope: !3112)
!3249 = !DILocation(line: 364, column: 20, scope: !3112)
!3250 = !DILocation(line: 371, column: 17, scope: !3112)
!3251 = !DILocation(line: 374, column: 13, scope: !3112)
!3252 = !DILocation(line: 373, column: 27, scope: !3112)
!3253 = !DILocation(line: 373, column: 47, scope: !3112)
!3254 = !DILocation(line: 374, column: 33, scope: !3112)
!3255 = !DILocation(line: 374, column: 36, scope: !3112)
!3256 = !DILocation(line: 374, column: 27, scope: !3112)
!3257 = !DILocation(line: 374, column: 42, scope: !3112)
!3258 = !DILocation(line: 374, column: 52, scope: !3112)
!3259 = !DILocation(line: 403, column: 12, scope: !3110)
!3260 = !DILocation(line: 403, column: 23, scope: !3110)
!3261 = !DILocalVariable(name: "this", arg: 1, scope: !3262, file: !1704, line: 1008, type: !3265)
!3262 = distinct !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17hc7e13dc45437e6f0E", scope: !1000, file: !1704, line: 1008, type: !3263, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, declaration: !3270, retainedNodes: !3271)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!1273, !3265}
!3265 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !3266, templateParams: !24, identifier: "452cf7733592a7803a9cf3aca8ed1fc7")
!3266 = !{!3267, !3269}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3265, file: !2, baseType: !3268, size: 64, align: 64)
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64, dwarfAddressSpace: 0)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3265, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3270 = !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17hc7e13dc45437e6f0E", scope: !1000, file: !1704, line: 1008, type: !3263, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1007)
!3271 = !{!3261}
!3272 = !DILocation(line: 1008, column: 35, scope: !3262, inlinedAt: !3273)
!3273 = distinct !DILocation(line: 379, column: 23, scope: !3110)
!3274 = !DILocalVariable(name: "self", arg: 1, scope: !3275, file: !2255, line: 506, type: !3265)
!3275 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h28ea13611e9808caE", scope: !1222, file: !2255, line: 506, type: !3276, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1016, retainedNodes: !3278)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!1555, !3265}
!3278 = !{!3274}
!3279 = !DILocation(line: 506, column: 29, scope: !3275, inlinedAt: !3280)
!3280 = distinct !DILocation(line: 1009, column: 9, scope: !3262, inlinedAt: !3273)
!3281 = !DILocation(line: 379, column: 13, scope: !3110)
!3282 = !DILocation(line: 380, column: 21, scope: !3110)
!3283 = !DILocation(line: 380, column: 13, scope: !3110)
!3284 = !DILocation(line: 381, column: 28, scope: !3110)
!3285 = !DILocation(line: 383, column: 25, scope: !3114)
!3286 = !DILocation(line: 383, column: 22, scope: !3114)
!3287 = !DILocation(line: 383, column: 13, scope: !3116)
!3288 = !DILocation(line: 383, column: 17, scope: !3116)
!3289 = !DILocation(line: 383, column: 17, scope: !3118)
!3290 = !DILocation(line: 396, column: 21, scope: !3118)
!3291 = !DILocation(line: 397, column: 29, scope: !3118)
!3292 = !DILocation(line: 397, column: 48, scope: !3118)
!3293 = !DILocation(line: 397, column: 40, scope: !3118)
!3294 = !DILocation(line: 397, column: 39, scope: !3118)
!3295 = !DILocalVariable(name: "self", arg: 1, scope: !3296, file: !256, line: 1025, type: !1273)
!3296 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h6596ee552cbccb38E", scope: !267, file: !256, line: 1025, type: !3297, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, retainedNodes: !3299)
!3297 = !DISubroutineType(types: !3298)
!3298 = !{!1273, !1273, !9}
!3299 = !{!3295, !3300}
!3300 = !DILocalVariable(name: "count", arg: 2, scope: !3296, file: !256, line: 1025, type: !9)
!3301 = !DILocation(line: 1025, column: 29, scope: !3296, inlinedAt: !3302)
!3302 = distinct !DILocation(line: 397, column: 29, scope: !3118)
!3303 = !DILocation(line: 1025, column: 35, scope: !3296, inlinedAt: !3302)
!3304 = !DILocation(line: 1037, column: 13, scope: !3296, inlinedAt: !3302)
!3305 = !DILocation(line: 397, column: 21, scope: !3118)
!3306 = !DILocation(line: 398, column: 28, scope: !3118)
!3307 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3308)
!3308 = distinct !DILocation(line: 398, column: 28, scope: !3118)
!3309 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3308)
!3310 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3308)
!3311 = !DILocation(line: 398, column: 21, scope: !3118)
!3312 = !DILocation(line: 431, column: 36, scope: !3110)
!3313 = !DILocation(line: 431, column: 45, scope: !3110)
!3314 = !DILocation(line: 431, column: 30, scope: !3110)
!3315 = !DILocation(line: 431, column: 59, scope: !3110)
!3316 = !DILocation(line: 431, column: 68, scope: !3110)
!3317 = !DILocation(line: 431, column: 53, scope: !3110)
!3318 = !DILocation(line: 431, column: 21, scope: !3110)
!3319 = !DILocation(line: 431, column: 13, scope: !3126)
!3320 = !DILocation(line: 433, column: 12, scope: !3126)
!3321 = !DILocation(line: 1008, column: 35, scope: !3262, inlinedAt: !3322)
!3322 = distinct !DILocation(line: 405, column: 23, scope: !3110)
!3323 = !DILocation(line: 506, column: 29, scope: !3275, inlinedAt: !3324)
!3324 = distinct !DILocation(line: 1009, column: 9, scope: !3262, inlinedAt: !3322)
!3325 = !DILocation(line: 405, column: 13, scope: !3110)
!3326 = !DILocation(line: 406, column: 21, scope: !3110)
!3327 = !DILocation(line: 406, column: 13, scope: !3110)
!3328 = !DILocation(line: 407, column: 28, scope: !3110)
!3329 = !DILocation(line: 409, column: 25, scope: !3120)
!3330 = !DILocation(line: 409, column: 22, scope: !3120)
!3331 = !DILocation(line: 409, column: 13, scope: !3122)
!3332 = !DILocation(line: 409, column: 17, scope: !3122)
!3333 = !DILocation(line: 409, column: 17, scope: !3124)
!3334 = !DILocation(line: 423, column: 28, scope: !3124)
!3335 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !3336)
!3336 = distinct !DILocation(line: 423, column: 28, scope: !3124)
!3337 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !3336)
!3338 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3339)
!3339 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !3336)
!3340 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3341)
!3341 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3339)
!3342 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3341)
!3343 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !3344)
!3344 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !3336)
!3345 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !3344)
!3346 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !3344)
!3347 = !DILocation(line: 423, column: 21, scope: !3124)
!3348 = !DILocation(line: 424, column: 21, scope: !3124)
!3349 = !DILocation(line: 425, column: 29, scope: !3124)
!3350 = !DILocation(line: 425, column: 47, scope: !3124)
!3351 = !DILocation(line: 425, column: 39, scope: !3124)
!3352 = !DILocation(line: 1025, column: 29, scope: !3296, inlinedAt: !3353)
!3353 = distinct !DILocation(line: 425, column: 29, scope: !3124)
!3354 = !DILocation(line: 1025, column: 35, scope: !3296, inlinedAt: !3353)
!3355 = !DILocation(line: 1037, column: 13, scope: !3296, inlinedAt: !3353)
!3356 = !DILocation(line: 425, column: 21, scope: !3124)
!3357 = !DILocation(line: 482, column: 12, scope: !3126)
!3358 = !DILocation(line: 482, column: 23, scope: !3126)
!3359 = !DILocation(line: 465, column: 37, scope: !3126)
!3360 = !DILocalVariable(name: "small", arg: 1, scope: !3361, file: !3362, line: 52, type: !123)
!3361 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h4ff189f36929c587E", scope: !3363, file: !3362, line: 52, type: !3366, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3368)
!3362 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "414fe946a4d28dee13e1a0c8731be3b8")
!3363 = !DINamespace(name: "{impl#44}", scope: !3364)
!3364 = !DINamespace(name: "num", scope: !3365)
!3365 = !DINamespace(name: "convert", scope: !142)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!9, !123}
!3368 = !{!3360}
!3369 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3370)
!3370 = distinct !DILocation(line: 465, column: 37, scope: !3126)
!3371 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3370)
!3372 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3373)
!3373 = distinct !DILocation(line: 465, column: 37, scope: !3126)
!3374 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3373)
!3375 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3373)
!3376 = !DILocation(line: 465, column: 27, scope: !3126)
!3377 = !DILocation(line: 466, column: 42, scope: !3128)
!3378 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3379)
!3379 = distinct !DILocation(line: 466, column: 42, scope: !3128)
!3380 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3379)
!3381 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !3382)
!3382 = distinct !DILocation(line: 466, column: 42, scope: !3128)
!3383 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !3382)
!3384 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3385)
!3385 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !3382)
!3386 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3387)
!3387 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3385)
!3388 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3387)
!3389 = !DILocation(line: 1184, column: 13, scope: !2453, inlinedAt: !3387)
!3390 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !3391)
!3391 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !3382)
!3392 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !3391)
!3393 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !3391)
!3394 = !DILocation(line: 466, column: 52, scope: !3128)
!3395 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3396)
!3396 = distinct !DILocation(line: 466, column: 52, scope: !3128)
!3397 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3396)
!3398 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3399)
!3399 = distinct !DILocation(line: 466, column: 52, scope: !3128)
!3400 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3399)
!3401 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3399)
!3402 = !DILocation(line: 466, column: 17, scope: !3128)
!3403 = !DILocation(line: 468, column: 26, scope: !3128)
!3404 = !DILocation(line: 468, column: 17, scope: !3130)
!3405 = !DILocation(line: 475, column: 48, scope: !3128)
!3406 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3407)
!3407 = distinct !DILocation(line: 475, column: 48, scope: !3128)
!3408 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3407)
!3409 = !DILocation(line: 469, column: 31, scope: !3130)
!3410 = !DILocation(line: 1025, column: 29, scope: !3296, inlinedAt: !3411)
!3411 = distinct !DILocation(line: 469, column: 31, scope: !3130)
!3412 = !DILocation(line: 1025, column: 35, scope: !3296, inlinedAt: !3411)
!3413 = !DILocation(line: 1037, column: 13, scope: !3296, inlinedAt: !3411)
!3414 = !DILocation(line: 469, column: 21, scope: !3130)
!3415 = !DILocation(line: 470, column: 46, scope: !3130)
!3416 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3417)
!3417 = distinct !DILocation(line: 470, column: 46, scope: !3130)
!3418 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3417)
!3419 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3420)
!3420 = distinct !DILocation(line: 470, column: 46, scope: !3130)
!3421 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3420)
!3422 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3420)
!3423 = !DILocation(line: 470, column: 55, scope: !3130)
!3424 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3425)
!3425 = distinct !DILocation(line: 470, column: 55, scope: !3130)
!3426 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3425)
!3427 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !3428)
!3428 = distinct !DILocation(line: 470, column: 55, scope: !3130)
!3429 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !3428)
!3430 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3431)
!3431 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !3428)
!3432 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3433)
!3433 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3431)
!3434 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3433)
!3435 = !DILocation(line: 1184, column: 13, scope: !2453, inlinedAt: !3433)
!3436 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !3437)
!3437 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !3428)
!3438 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !3437)
!3439 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !3437)
!3440 = !DILocation(line: 470, column: 21, scope: !3130)
!3441 = !DILocation(line: 471, column: 31, scope: !3130)
!3442 = !DILocation(line: 1025, column: 29, scope: !3296, inlinedAt: !3443)
!3443 = distinct !DILocation(line: 471, column: 31, scope: !3130)
!3444 = !DILocation(line: 1025, column: 35, scope: !3296, inlinedAt: !3443)
!3445 = !DILocation(line: 1037, column: 13, scope: !3296, inlinedAt: !3443)
!3446 = !DILocation(line: 471, column: 21, scope: !3130)
!3447 = !DILocation(line: 472, column: 46, scope: !3130)
!3448 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3449)
!3449 = distinct !DILocation(line: 472, column: 46, scope: !3130)
!3450 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3449)
!3451 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !3452)
!3452 = distinct !DILocation(line: 472, column: 46, scope: !3130)
!3453 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !3452)
!3454 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3455)
!3455 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !3452)
!3456 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3457)
!3457 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3455)
!3458 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3457)
!3459 = !DILocation(line: 1184, column: 13, scope: !2453, inlinedAt: !3457)
!3460 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !3461)
!3461 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !3452)
!3462 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !3461)
!3463 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !3461)
!3464 = !DILocation(line: 472, column: 56, scope: !3130)
!3465 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3466)
!3466 = distinct !DILocation(line: 472, column: 56, scope: !3130)
!3467 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3466)
!3468 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3469)
!3469 = distinct !DILocation(line: 472, column: 56, scope: !3130)
!3470 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3469)
!3471 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3469)
!3472 = !DILocation(line: 472, column: 21, scope: !3130)
!3473 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !3474)
!3474 = distinct !DILocation(line: 475, column: 48, scope: !3128)
!3475 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !3474)
!3476 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3477)
!3477 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !3474)
!3478 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3479)
!3479 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3477)
!3480 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3479)
!3481 = !DILocation(line: 1184, column: 13, scope: !2453, inlinedAt: !3479)
!3482 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !3483)
!3483 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !3474)
!3484 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !3483)
!3485 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !3483)
!3486 = !DILocation(line: 475, column: 17, scope: !3128)
!3487 = !DILocation(line: 476, column: 29, scope: !3128)
!3488 = !DILocation(line: 476, column: 17, scope: !3128)
!3489 = !DILocation(line: 477, column: 27, scope: !3128)
!3490 = !DILocation(line: 1025, column: 29, scope: !3296, inlinedAt: !3491)
!3491 = distinct !DILocation(line: 477, column: 27, scope: !3128)
!3492 = !DILocation(line: 1025, column: 35, scope: !3296, inlinedAt: !3491)
!3493 = !DILocation(line: 1037, column: 13, scope: !3296, inlinedAt: !3491)
!3494 = !DILocation(line: 477, column: 17, scope: !3128)
!3495 = !DILocation(line: 478, column: 27, scope: !3128)
!3496 = !DILocation(line: 1025, column: 29, scope: !3296, inlinedAt: !3497)
!3497 = distinct !DILocation(line: 478, column: 27, scope: !3128)
!3498 = !DILocation(line: 1025, column: 35, scope: !3296, inlinedAt: !3497)
!3499 = !DILocation(line: 1037, column: 13, scope: !3296, inlinedAt: !3497)
!3500 = !DILocation(line: 478, column: 17, scope: !3128)
!3501 = !DILocation(line: 433, column: 9, scope: !3126)
!3502 = !DILocation(line: 494, column: 12, scope: !3126)
!3503 = !DILocation(line: 494, column: 23, scope: !3126)
!3504 = !DILocation(line: 491, column: 26, scope: !3126)
!3505 = !DILocation(line: 491, column: 32, scope: !3126)
!3506 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3507)
!3507 = distinct !DILocation(line: 491, column: 26, scope: !3126)
!3508 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3507)
!3509 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3507)
!3510 = !DILocation(line: 491, column: 13, scope: !3126)
!3511 = !DILocation(line: 482, column: 9, scope: !3126)
!3512 = !DILocation(line: 502, column: 12, scope: !3126)
!3513 = !DILocation(line: 499, column: 26, scope: !3126)
!3514 = !DILocation(line: 499, column: 32, scope: !3126)
!3515 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !3516)
!3516 = distinct !DILocation(line: 499, column: 26, scope: !3126)
!3517 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !3516)
!3518 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3519)
!3519 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !3516)
!3520 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3521)
!3521 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3519)
!3522 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3521)
!3523 = !DILocation(line: 1184, column: 13, scope: !2453, inlinedAt: !3521)
!3524 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !3525)
!3525 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !3516)
!3526 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !3525)
!3527 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !3525)
!3528 = !DILocation(line: 499, column: 13, scope: !3126)
!3529 = !DILocation(line: 494, column: 9, scope: !3126)
!3530 = !DILocation(line: 511, column: 8, scope: !3108)
!3531 = !DILocation(line: 511, column: 18, scope: !3108)
!3532 = !DILocation(line: 534, column: 15, scope: !3108)
!3533 = !DILocation(line: 534, column: 25, scope: !3108)
!3534 = !DILocation(line: 514, column: 9, scope: !3108)
!3535 = !DILocation(line: 515, column: 15, scope: !3108)
!3536 = !DILocation(line: 515, column: 25, scope: !3108)
!3537 = !DILocation(line: 514, column: 32, scope: !3108)
!3538 = !DILocation(line: 514, column: 35, scope: !3108)
!3539 = !DILocation(line: 514, column: 26, scope: !3108)
!3540 = !DILocation(line: 514, column: 9, scope: !3132)
!3541 = !{i8 0, i8 3}
!3542 = !DILocation(line: 506, column: 29, scope: !2300, inlinedAt: !3543)
!3543 = distinct !DILocation(line: 533, column: 15, scope: !3108)
!3544 = !DILocation(line: 533, column: 31, scope: !3108)
!3545 = !DILocation(line: 533, column: 9, scope: !3108)
!3546 = !DILocation(line: 528, column: 25, scope: !3108)
!3547 = !DILocalVariable(name: "self", arg: 1, scope: !3548, file: !256, line: 1116, type: !1273)
!3548 = distinct !DISubprogram(name: "sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h3860be0bf955dbc0E", scope: !267, file: !256, line: 1116, type: !3297, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, retainedNodes: !3549)
!3549 = !{!3547, !3550}
!3550 = !DILocalVariable(name: "count", arg: 2, scope: !3548, file: !256, line: 1116, type: !9)
!3551 = !DILocation(line: 1116, column: 29, scope: !3548, inlinedAt: !3552)
!3552 = distinct !DILocation(line: 528, column: 25, scope: !3108)
!3553 = !DILocation(line: 1116, column: 35, scope: !3548, inlinedAt: !3552)
!3554 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3555)
!3555 = distinct !DILocation(line: 1121, column: 30, scope: !3548, inlinedAt: !3552)
!3556 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3557)
!3557 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3555)
!3558 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3557)
!3559 = !DILocalVariable(name: "self", arg: 1, scope: !3560, file: !256, line: 472, type: !1273)
!3560 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hc1e76eac0d515e4fE", scope: !267, file: !256, line: 472, type: !3561, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, retainedNodes: !3563)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!1273, !1273, !2448}
!3563 = !{!3559, !3564}
!3564 = !DILocalVariable(name: "count", arg: 2, scope: !3560, file: !256, line: 472, type: !2448)
!3565 = !DILocation(line: 472, column: 32, scope: !3560, inlinedAt: !3566)
!3566 = distinct !DILocation(line: 1121, column: 18, scope: !3548, inlinedAt: !3552)
!3567 = !DILocation(line: 472, column: 38, scope: !3560, inlinedAt: !3566)
!3568 = !DILocation(line: 488, column: 13, scope: !3560, inlinedAt: !3566)
!3569 = !DILocation(line: 528, column: 17, scope: !3108)
!3570 = !DILocation(line: 529, column: 27, scope: !3108)
!3571 = !DILocation(line: 529, column: 45, scope: !3108)
!3572 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3573)
!3573 = distinct !DILocation(line: 529, column: 33, scope: !3108)
!3574 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3573)
!3575 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3576)
!3576 = distinct !DILocation(line: 529, column: 27, scope: !3108)
!3577 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3576)
!3578 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3576)
!3579 = !DILocation(line: 529, column: 55, scope: !3108)
!3580 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !3581)
!3581 = distinct !DILocation(line: 529, column: 55, scope: !3108)
!3582 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !3581)
!3583 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3584)
!3584 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !3581)
!3585 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3586)
!3586 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3584)
!3587 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3586)
!3588 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !3589)
!3589 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !3581)
!3590 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !3589)
!3591 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !3589)
!3592 = !DILocation(line: 529, column: 17, scope: !3108)
!3593 = !DILocation(line: 530, column: 21, scope: !3108)
!3594 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !3595)
!3595 = distinct !DILocation(line: 530, column: 21, scope: !3108)
!3596 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !3595)
!3597 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3598)
!3598 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !3595)
!3599 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3600)
!3600 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3598)
!3601 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3600)
!3602 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !3603)
!3603 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !3595)
!3604 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !3603)
!3605 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !3603)
!3606 = !DILocation(line: 530, column: 17, scope: !3108)
!3607 = !DILocation(line: 515, column: 9, scope: !3108)
!3608 = !DILocation(line: 551, column: 2, scope: !3079)
!3609 = !DILocation(line: 506, column: 29, scope: !2300, inlinedAt: !3610)
!3610 = distinct !DILocation(line: 549, column: 15, scope: !3108)
!3611 = !DILocation(line: 549, column: 31, scope: !3108)
!3612 = !DILocation(line: 549, column: 9, scope: !3108)
!3613 = !DILocation(line: 537, column: 9, scope: !3108)
!3614 = !DILocation(line: 538, column: 15, scope: !3108)
!3615 = !DILocation(line: 538, column: 25, scope: !3108)
!3616 = !DILocation(line: 537, column: 32, scope: !3108)
!3617 = !DILocation(line: 537, column: 35, scope: !3108)
!3618 = !DILocation(line: 537, column: 26, scope: !3108)
!3619 = !DILocation(line: 537, column: 9, scope: !3141)
!3620 = !DILocation(line: 506, column: 29, scope: !2300, inlinedAt: !3621)
!3621 = distinct !DILocation(line: 546, column: 15, scope: !3108)
!3622 = !DILocation(line: 546, column: 31, scope: !3108)
!3623 = !DILocation(line: 546, column: 9, scope: !3108)
!3624 = !DILocation(line: 541, column: 25, scope: !3108)
!3625 = !DILocation(line: 1116, column: 29, scope: !3548, inlinedAt: !3626)
!3626 = distinct !DILocation(line: 541, column: 25, scope: !3108)
!3627 = !DILocation(line: 1116, column: 35, scope: !3548, inlinedAt: !3626)
!3628 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3629)
!3629 = distinct !DILocation(line: 1121, column: 30, scope: !3548, inlinedAt: !3626)
!3630 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3631)
!3631 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3629)
!3632 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3631)
!3633 = !DILocation(line: 472, column: 32, scope: !3560, inlinedAt: !3634)
!3634 = distinct !DILocation(line: 1121, column: 18, scope: !3548, inlinedAt: !3626)
!3635 = !DILocation(line: 472, column: 38, scope: !3560, inlinedAt: !3634)
!3636 = !DILocation(line: 488, column: 13, scope: !3560, inlinedAt: !3634)
!3637 = !DILocation(line: 541, column: 17, scope: !3108)
!3638 = !DILocation(line: 542, column: 27, scope: !3108)
!3639 = !DILocation(line: 542, column: 30, scope: !3108)
!3640 = !DILocation(line: 542, column: 48, scope: !3108)
!3641 = !DILocation(line: 52, column: 21, scope: !3361, inlinedAt: !3642)
!3642 = distinct !DILocation(line: 542, column: 36, scope: !3108)
!3643 = !DILocation(line: 53, column: 17, scope: !3361, inlinedAt: !3642)
!3644 = !DILocation(line: 542, column: 36, scope: !3108)
!3645 = !DILocation(line: 1116, column: 29, scope: !2436, inlinedAt: !3646)
!3646 = distinct !DILocation(line: 542, column: 30, scope: !3108)
!3647 = !DILocation(line: 1116, column: 35, scope: !2436, inlinedAt: !3646)
!3648 = !DILocation(line: 1358, column: 35, scope: !2443, inlinedAt: !3649)
!3649 = distinct !DILocation(line: 1121, column: 30, scope: !2436, inlinedAt: !3646)
!3650 = !DILocation(line: 1183, column: 35, scope: !2453, inlinedAt: !3651)
!3651 = distinct !DILocation(line: 1359, column: 13, scope: !2443, inlinedAt: !3649)
!3652 = !DILocation(line: 1183, column: 41, scope: !2453, inlinedAt: !3651)
!3653 = !DILocation(line: 1184, column: 13, scope: !2453, inlinedAt: !3651)
!3654 = !DILocation(line: 472, column: 32, scope: !2463, inlinedAt: !3655)
!3655 = distinct !DILocation(line: 1121, column: 18, scope: !2436, inlinedAt: !3646)
!3656 = !DILocation(line: 472, column: 38, scope: !2463, inlinedAt: !3655)
!3657 = !DILocation(line: 488, column: 13, scope: !2463, inlinedAt: !3655)
!3658 = !DILocation(line: 542, column: 17, scope: !3108)
!3659 = !DILocation(line: 543, column: 21, scope: !3108)
!3660 = !DILocation(line: 1025, column: 29, scope: !266, inlinedAt: !3661)
!3661 = distinct !DILocation(line: 543, column: 21, scope: !3108)
!3662 = !DILocation(line: 1025, column: 35, scope: !266, inlinedAt: !3661)
!3663 = !DILocation(line: 1037, column: 13, scope: !266, inlinedAt: !3661)
!3664 = !DILocation(line: 543, column: 17, scope: !3108)
!3665 = !DILocation(line: 538, column: 9, scope: !3108)
!3666 = distinct !DISubprogram(name: "width<u8>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h8ad578e50d808492E", scope: !3667, file: !2590, line: 341, type: !3668, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1007, retainedNodes: !3670)
!3667 = !DINamespace(name: "partition_in_blocks", scope: !1249)
!3668 = !DISubroutineType(types: !3669)
!3669 = !{!9, !1273, !1273}
!3670 = !{!3671, !3672}
!3671 = !DILocalVariable(name: "l", arg: 1, scope: !3666, file: !2590, line: 341, type: !1273)
!3672 = !DILocalVariable(name: "r", arg: 2, scope: !3666, file: !2590, line: 341, type: !1273)
!3673 = !DILocation(line: 341, column: 17, scope: !3666)
!3674 = !DILocation(line: 341, column: 28, scope: !3666)
!3675 = !DILocation(line: 342, column: 17, scope: !3666)
!3676 = !DILocation(line: 342, column: 9, scope: !3666)
!3677 = !DILocation(line: 209, column: 17, scope: !1903, inlinedAt: !3678)
!3678 = distinct !DILocation(line: 345, column: 10, scope: !3666)
!3679 = !DILocation(line: 57, column: 26, scope: !1910, inlinedAt: !3680)
!3680 = distinct !DILocation(line: 213, column: 33, scope: !1903, inlinedAt: !3678)
!3681 = !DILocation(line: 213, column: 18, scope: !1903, inlinedAt: !3678)
!3682 = !DILocation(line: 209, column: 17, scope: !1903, inlinedAt: !3683)
!3683 = distinct !DILocation(line: 345, column: 21, scope: !3666)
!3684 = !DILocation(line: 57, column: 26, scope: !1910, inlinedAt: !3685)
!3685 = distinct !DILocation(line: 213, column: 33, scope: !1903, inlinedAt: !3683)
!3686 = !DILocation(line: 213, column: 18, scope: !1903, inlinedAt: !3683)
!3687 = !DILocation(line: 345, column: 9, scope: !3666)
!3688 = !DILocation(line: 346, column: 6, scope: !3666)
!3689 = distinct !DISubprogram(name: "width<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17hf3c5c4273b8ed9bdE", scope: !3667, file: !2590, line: 341, type: !3690, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !3692)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!9, !261, !261}
!3692 = !{!3693, !3694}
!3693 = !DILocalVariable(name: "l", arg: 1, scope: !3689, file: !2590, line: 341, type: !261)
!3694 = !DILocalVariable(name: "r", arg: 2, scope: !3689, file: !2590, line: 341, type: !261)
!3695 = !DILocation(line: 341, column: 17, scope: !3689)
!3696 = !DILocation(line: 341, column: 28, scope: !3689)
!3697 = !DILocation(line: 342, column: 17, scope: !3689)
!3698 = !DILocation(line: 342, column: 9, scope: !3689)
!3699 = !DILocalVariable(name: "self", arg: 1, scope: !3700, file: !256, line: 209, type: !261)
!3700 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h0f3c522f8000908dE", scope: !267, file: !256, line: 209, type: !3701, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !3703)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{!9, !261}
!3703 = !{!3699}
!3704 = !DILocation(line: 209, column: 17, scope: !3700, inlinedAt: !3705)
!3705 = distinct !DILocation(line: 345, column: 10, scope: !3689)
!3706 = !DILocation(line: 57, column: 26, scope: !1386, inlinedAt: !3707)
!3707 = distinct !DILocation(line: 213, column: 33, scope: !3700, inlinedAt: !3705)
!3708 = !DILocation(line: 213, column: 18, scope: !3700, inlinedAt: !3705)
!3709 = !DILocation(line: 209, column: 17, scope: !3700, inlinedAt: !3710)
!3710 = distinct !DILocation(line: 345, column: 21, scope: !3689)
!3711 = !DILocation(line: 57, column: 26, scope: !1386, inlinedAt: !3712)
!3712 = distinct !DILocation(line: 213, column: 33, scope: !3700, inlinedAt: !3710)
!3713 = !DILocation(line: 213, column: 18, scope: !3700, inlinedAt: !3710)
!3714 = !DILocation(line: 345, column: 9, scope: !3689)
!3715 = !DILocation(line: 346, column: 6, scope: !3689)
!3716 = distinct !DISubprogram(name: "partial_insertion_sort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort22partial_insertion_sort17heb776a738f5e4d38E", scope: !1249, file: !2590, line: 198, type: !3717, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !3719)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!401, !334, !1219}
!3719 = !{!3720, !3721, !3722, !3724, !3726}
!3720 = !DILocalVariable(name: "v", arg: 1, scope: !3716, file: !2590, line: 198, type: !334)
!3721 = !DILocalVariable(name: "is_less", arg: 2, scope: !3716, file: !2590, line: 198, type: !1219)
!3722 = !DILocalVariable(name: "len", scope: !3723, file: !2590, line: 207, type: !9, align: 8)
!3723 = distinct !DILexicalBlock(scope: !3716, file: !2590, line: 207, column: 5)
!3724 = !DILocalVariable(name: "i", scope: !3725, file: !2590, line: 208, type: !9, align: 8)
!3725 = distinct !DILexicalBlock(scope: !3723, file: !2590, line: 208, column: 5)
!3726 = !DILocalVariable(name: "iter", scope: !3727, file: !2590, line: 210, type: !174, align: 8)
!3727 = distinct !DILexicalBlock(scope: !3725, file: !2590, line: 210, column: 5)
!3728 = !DILocation(line: 198, column: 33, scope: !3716)
!3729 = !DILocation(line: 198, column: 46, scope: !3716)
!3730 = !DILocation(line: 208, column: 9, scope: !3725)
!3731 = !DILocation(line: 210, column: 14, scope: !3727)
!3732 = !DILocation(line: 207, column: 15, scope: !3716)
!3733 = !DILocation(line: 207, column: 9, scope: !3723)
!3734 = !DILocation(line: 208, column: 17, scope: !3723)
!3735 = !DILocation(line: 210, column: 14, scope: !3725)
!3736 = !DILocation(line: 210, column: 5, scope: !3727)
!3737 = !DILocation(line: 243, column: 5, scope: !3725)
!3738 = !DILocation(line: 244, column: 2, scope: !3716)
!3739 = !DILocation(line: 215, column: 19, scope: !3727)
!3740 = !DILocation(line: 215, column: 55, scope: !3727)
!3741 = !DILocation(line: 215, column: 39, scope: !3727)
!3742 = !DILocation(line: 215, column: 75, scope: !3727)
!3743 = !DILocation(line: 215, column: 59, scope: !3727)
!3744 = !DILocation(line: 215, column: 31, scope: !3727)
!3745 = !DILocation(line: 215, column: 30, scope: !3727)
!3746 = !DILocation(line: 221, column: 12, scope: !3727)
!3747 = !DILocation(line: 216, column: 17, scope: !3727)
!3748 = !DILocation(line: 215, column: 13, scope: !3727)
!3749 = !DILocation(line: 226, column: 12, scope: !3727)
!3750 = !DILocation(line: 222, column: 20, scope: !3727)
!3751 = !DILocation(line: 1, column: 1, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !3727, file: !3753, discriminator: 0)
!3753 = !DIFile(filename: "src/lib.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "ef3e180ca1e13bae3e0904cdd600c8e7")
!3754 = !DILocation(line: 231, column: 16, scope: !3727)
!3755 = !DILocation(line: 227, column: 20, scope: !3727)
!3756 = !DILocation(line: 231, column: 23, scope: !3727)
!3757 = !DILocation(line: 231, column: 9, scope: !3727)
!3758 = !DILocation(line: 233, column: 12, scope: !3727)
!3759 = !DILocation(line: 235, column: 48, scope: !3727)
!3760 = !DILocation(line: 235, column: 46, scope: !3727)
!3761 = !DILocation(line: 235, column: 44, scope: !3727)
!3762 = !DILocation(line: 235, column: 52, scope: !3727)
!3763 = !DILocation(line: 235, column: 13, scope: !3727)
!3764 = !DILocation(line: 238, column: 49, scope: !3727)
!3765 = !DILocation(line: 238, column: 47, scope: !3727)
!3766 = !DILocation(line: 238, column: 45, scope: !3727)
!3767 = !DILocation(line: 238, column: 13, scope: !3727)
!3768 = distinct !DISubprogram(name: "insertion_sort_shift_left<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort25insertion_sort_shift_left17hc2a5efa718f29594E", scope: !1249, file: !2590, line: 148, type: !3769, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !3771)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{null, !334, !9, !1219}
!3771 = !{!3772, !3773, !3774, !3775, !3777, !3779}
!3772 = !DILocalVariable(name: "v", arg: 1, scope: !3768, file: !2590, line: 148, type: !334)
!3773 = !DILocalVariable(name: "offset", arg: 2, scope: !3768, file: !2590, line: 148, type: !9)
!3774 = !DILocalVariable(name: "is_less", arg: 3, scope: !3768, file: !2590, line: 148, type: !1219)
!3775 = !DILocalVariable(name: "len", scope: !3776, file: !2590, line: 152, type: !9, align: 8)
!3776 = distinct !DILexicalBlock(scope: !3768, file: !2590, line: 152, column: 5)
!3777 = !DILocalVariable(name: "iter", scope: !3778, file: !2590, line: 158, type: !174, align: 8)
!3778 = distinct !DILexicalBlock(scope: !3776, file: !2590, line: 158, column: 5)
!3779 = !DILocalVariable(name: "i", scope: !3780, file: !2590, line: 158, type: !9, align: 8)
!3780 = distinct !DILexicalBlock(scope: !3778, file: !2590, line: 158, column: 26)
!3781 = !DILocation(line: 148, column: 36, scope: !3768)
!3782 = !DILocation(line: 148, column: 49, scope: !3768)
!3783 = !DILocation(line: 148, column: 64, scope: !3768)
!3784 = !DILocation(line: 158, column: 14, scope: !3778)
!3785 = !DILocation(line: 152, column: 15, scope: !3768)
!3786 = !DILocation(line: 152, column: 9, scope: !3776)
!3787 = !DILocation(line: 155, column: 13, scope: !3776)
!3788 = !DILocation(line: 155, column: 28, scope: !3776)
!3789 = !DILocation(line: 155, column: 5, scope: !3776)
!3790 = !DILocation(line: 158, column: 14, scope: !3776)
!3791 = !DILocation(line: 158, column: 5, scope: !3778)
!3792 = !DILocation(line: 166, column: 2, scope: !3768)
!3793 = !DILocation(line: 158, column: 9, scope: !3778)
!3794 = !DILocation(line: 158, column: 9, scope: !3780)
!3795 = !DILocation(line: 163, column: 32, scope: !3780)
!3796 = !DILocation(line: 163, column: 30, scope: !3780)
!3797 = !DILocation(line: 163, column: 13, scope: !3780)
!3798 = distinct !DISubprogram(name: "insertion_sort_shift_right<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort26insertion_sort_shift_right17h2812a4148d3529ccE", scope: !1249, file: !2590, line: 173, type: !3769, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !3799)
!3799 = !{!3800, !3801, !3802, !3803, !3805, !3807}
!3800 = !DILocalVariable(name: "v", arg: 1, scope: !3798, file: !2590, line: 173, type: !334)
!3801 = !DILocalVariable(name: "offset", arg: 2, scope: !3798, file: !2590, line: 173, type: !9)
!3802 = !DILocalVariable(name: "is_less", arg: 3, scope: !3798, file: !2590, line: 173, type: !1219)
!3803 = !DILocalVariable(name: "len", scope: !3804, file: !2590, line: 177, type: !9, align: 8)
!3804 = distinct !DILexicalBlock(scope: !3798, file: !2590, line: 177, column: 5)
!3805 = !DILocalVariable(name: "iter", scope: !3806, file: !2590, line: 183, type: !2690, align: 8)
!3806 = distinct !DILexicalBlock(scope: !3804, file: !2590, line: 183, column: 5)
!3807 = !DILocalVariable(name: "i", scope: !3808, file: !2590, line: 183, type: !9, align: 8)
!3808 = distinct !DILexicalBlock(scope: !3806, file: !2590, line: 183, column: 32)
!3809 = !DILocation(line: 173, column: 37, scope: !3798)
!3810 = !DILocation(line: 173, column: 50, scope: !3798)
!3811 = !DILocation(line: 173, column: 65, scope: !3798)
!3812 = !DILocation(line: 183, column: 14, scope: !3806)
!3813 = !DILocation(line: 177, column: 15, scope: !3798)
!3814 = !DILocation(line: 177, column: 9, scope: !3804)
!3815 = !DILocation(line: 180, column: 13, scope: !3804)
!3816 = !DILocation(line: 180, column: 28, scope: !3804)
!3817 = !DILocation(line: 180, column: 45, scope: !3804)
!3818 = !DILocation(line: 180, column: 5, scope: !3804)
!3819 = !DILocation(line: 183, column: 14, scope: !3804)
!3820 = !DILocation(line: 183, column: 5, scope: !3806)
!3821 = !DILocation(line: 192, column: 2, scope: !3798)
!3822 = !DILocation(line: 183, column: 9, scope: !3806)
!3823 = !DILocation(line: 183, column: 9, scope: !3808)
!3824 = !DILocation(line: 189, column: 32, scope: !3808)
!3825 = !DILocation(line: 189, column: 30, scope: !3808)
!3826 = !DILocation(line: 189, column: 13, scope: !3808)
!3827 = distinct !DISubprogram(name: "recurse<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort7recurse17h40cd95a44a5352cbE", scope: !1249, file: !2590, line: 797, type: !3828, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !3841)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{null, !334, !1219, !3830, !27}
!3830 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !459, file: !2, size: 64, align: 64, elements: !3831, templateParams: !24, identifier: "c66b0438519af31f125793527bf64965")
!3831 = !{!3832}
!3832 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3830, file: !2, size: 64, align: 64, elements: !3833, templateParams: !24, identifier: "26019e660c1da9bbb31c6d77d364b12c", discriminator: !3840)
!3833 = !{!3834, !3836}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3832, file: !2, baseType: !3835, size: 64, align: 64, extraData: i64 0)
!3835 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3830, file: !2, size: 64, align: 64, elements: !24, templateParams: !858, identifier: "8b41f21ddedf2eddd26bd71150fb7533")
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3832, file: !2, baseType: !3837, size: 64, align: 64)
!3837 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3830, file: !2, size: 64, align: 64, elements: !3838, templateParams: !858, identifier: "8769468a17304d72d23241c1e4dc3886")
!3838 = !{!3839}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3837, file: !2, baseType: !12, size: 64, align: 64)
!3840 = !DIDerivedType(tag: DW_TAG_member, scope: !3830, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!3841 = !{!3842, !3843, !3844, !3845, !3846, !3848, !3850, !3852, !3854, !3855, !3857, !3859, !3861, !3862, !3864, !3865, !3867, !3868}
!3842 = !DILocalVariable(name: "v", arg: 1, scope: !3827, file: !2590, line: 797, type: !334)
!3843 = !DILocalVariable(name: "is_less", arg: 2, scope: !3827, file: !2590, line: 797, type: !1219)
!3844 = !DILocalVariable(name: "pred", arg: 3, scope: !3827, file: !2590, line: 797, type: !3830)
!3845 = !DILocalVariable(name: "limit", arg: 4, scope: !3827, file: !2590, line: 797, type: !27)
!3846 = !DILocalVariable(name: "was_balanced", scope: !3847, file: !2590, line: 805, type: !401, align: 1)
!3847 = distinct !DILexicalBlock(scope: !3827, file: !2590, line: 805, column: 5)
!3848 = !DILocalVariable(name: "was_partitioned", scope: !3849, file: !2590, line: 807, type: !401, align: 1)
!3849 = distinct !DILexicalBlock(scope: !3847, file: !2590, line: 807, column: 5)
!3850 = !DILocalVariable(name: "len", scope: !3851, file: !2590, line: 810, type: !9, align: 8)
!3851 = distinct !DILexicalBlock(scope: !3849, file: !2590, line: 810, column: 9)
!3852 = !DILocalVariable(name: "pivot", scope: !3853, file: !2590, line: 835, type: !9, align: 8)
!3853 = distinct !DILexicalBlock(scope: !3851, file: !2590, line: 835, column: 9)
!3854 = !DILocalVariable(name: "likely_sorted", scope: !3853, file: !2590, line: 835, type: !401, align: 1)
!3855 = !DILocalVariable(name: "p", scope: !3856, file: !2590, line: 850, type: !12, align: 8)
!3856 = distinct !DILexicalBlock(scope: !3853, file: !2590, line: 850, column: 31)
!3857 = !DILocalVariable(name: "mid", scope: !3858, file: !2590, line: 852, type: !9, align: 8)
!3858 = distinct !DILexicalBlock(scope: !3856, file: !2590, line: 852, column: 17)
!3859 = !DILocalVariable(name: "mid", scope: !3860, file: !2590, line: 861, type: !9, align: 8)
!3860 = distinct !DILexicalBlock(scope: !3853, file: !2590, line: 861, column: 9)
!3861 = !DILocalVariable(name: "was_p", scope: !3860, file: !2590, line: 861, type: !401, align: 1)
!3862 = !DILocalVariable(name: "left", scope: !3863, file: !2590, line: 866, type: !334, align: 8)
!3863 = distinct !DILexicalBlock(scope: !3860, file: !2590, line: 866, column: 9)
!3864 = !DILocalVariable(name: "right", scope: !3863, file: !2590, line: 866, type: !334, align: 8)
!3865 = !DILocalVariable(name: "pivot", scope: !3866, file: !2590, line: 867, type: !334, align: 8)
!3866 = distinct !DILexicalBlock(scope: !3863, file: !2590, line: 867, column: 9)
!3867 = !DILocalVariable(name: "right", scope: !3866, file: !2590, line: 867, type: !334, align: 8)
!3868 = !DILocalVariable(name: "pivot", scope: !3869, file: !2590, line: 868, type: !12, align: 8)
!3869 = distinct !DILexicalBlock(scope: !3866, file: !2590, line: 868, column: 9)
!3870 = !DILocation(line: 797, column: 22, scope: !3827)
!3871 = !DILocation(line: 797, column: 42, scope: !3827)
!3872 = !DILocation(line: 797, column: 59, scope: !3827)
!3873 = !DILocation(line: 797, column: 84, scope: !3827)
!3874 = !DILocation(line: 805, column: 9, scope: !3847)
!3875 = !DILocation(line: 807, column: 9, scope: !3849)
!3876 = !DILocation(line: 805, column: 28, scope: !3827)
!3877 = !DILocation(line: 807, column: 31, scope: !3847)
!3878 = !DILocation(line: 809, column: 5, scope: !3849)
!3879 = !DILocation(line: 810, column: 19, scope: !3849)
!3880 = !DILocation(line: 810, column: 13, scope: !3851)
!3881 = !DILocation(line: 813, column: 12, scope: !3851)
!3882 = !DILocation(line: 822, column: 12, scope: !3851)
!3883 = !DILocation(line: 814, column: 16, scope: !3851)
!3884 = !DILocation(line: 882, column: 2, scope: !3827)
!3885 = !DILocation(line: 815, column: 43, scope: !3851)
!3886 = !DILocation(line: 815, column: 17, scope: !3851)
!3887 = !DILocation(line: 823, column: 22, scope: !3851)
!3888 = !DILocation(line: 823, column: 13, scope: !3851)
!3889 = !DILocation(line: 829, column: 13, scope: !3851)
!3890 = !DILocation(line: 829, column: 12, scope: !3851)
!3891 = !DILocation(line: 835, column: 51, scope: !3851)
!3892 = !DILocation(line: 835, column: 38, scope: !3851)
!3893 = !DILocation(line: 835, column: 14, scope: !3851)
!3894 = !DILocation(line: 835, column: 14, scope: !3853)
!3895 = !DILocation(line: 835, column: 21, scope: !3851)
!3896 = !DILocation(line: 835, column: 21, scope: !3853)
!3897 = !DILocation(line: 839, column: 12, scope: !3853)
!3898 = !DILocation(line: 830, column: 28, scope: !3851)
!3899 = !DILocation(line: 830, column: 13, scope: !3851)
!3900 = !DILocation(line: 831, column: 13, scope: !3851)
!3901 = !DILocation(line: 829, column: 9, scope: !3851)
!3902 = !DILocation(line: 839, column: 28, scope: !3853)
!3903 = !DILocation(line: 850, column: 16, scope: !3856)
!3904 = !DILocation(line: 842, column: 39, scope: !3853)
!3905 = !DILocation(line: 842, column: 16, scope: !3853)
!3906 = !DILocation(line: 850, column: 21, scope: !3856)
!3907 = !DILocation(line: 851, column: 29, scope: !3856)
!3908 = !DILocation(line: 861, column: 38, scope: !3853)
!3909 = !DILocation(line: 861, column: 28, scope: !3853)
!3910 = !DILocation(line: 861, column: 14, scope: !3853)
!3911 = !DILocation(line: 861, column: 14, scope: !3860)
!3912 = !DILocation(line: 861, column: 19, scope: !3853)
!3913 = !DILocation(line: 861, column: 19, scope: !3860)
!3914 = !DILocation(line: 862, column: 38, scope: !3860)
!3915 = !DILocation(line: 851, column: 28, scope: !3856)
!3916 = !DILocation(line: 851, column: 17, scope: !3856)
!3917 = !DILocation(line: 851, column: 16, scope: !3856)
!3918 = !DILocation(line: 852, column: 43, scope: !3856)
!3919 = !DILocation(line: 852, column: 27, scope: !3856)
!3920 = !DILocation(line: 852, column: 21, scope: !3858)
!3921 = !DILocation(line: 855, column: 26, scope: !3858)
!3922 = !DILocation(line: 855, column: 28, scope: !3858)
!3923 = !DILocation(line: 855, column: 17, scope: !3858)
!3924 = !DILocation(line: 1, column: 1, scope: !3925)
!3925 = !DILexicalBlockFile(scope: !3849, file: !3753, discriminator: 0)
!3926 = !DILocation(line: 862, column: 24, scope: !3860)
!3927 = !DILocation(line: 862, column: 52, scope: !3860)
!3928 = !DILocation(line: 862, column: 9, scope: !3860)
!3929 = !DILocation(line: 863, column: 9, scope: !3860)
!3930 = !DILocation(line: 866, column: 29, scope: !3860)
!3931 = !DILocation(line: 866, column: 14, scope: !3860)
!3932 = !DILocation(line: 866, column: 14, scope: !3863)
!3933 = !DILocation(line: 866, column: 20, scope: !3860)
!3934 = !DILocation(line: 866, column: 20, scope: !3863)
!3935 = !DILocation(line: 867, column: 30, scope: !3863)
!3936 = !DILocation(line: 867, column: 14, scope: !3863)
!3937 = !DILocation(line: 867, column: 14, scope: !3866)
!3938 = !DILocation(line: 867, column: 21, scope: !3863)
!3939 = !DILocation(line: 867, column: 21, scope: !3866)
!3940 = !DILocation(line: 868, column: 22, scope: !3866)
!3941 = !DILocation(line: 868, column: 21, scope: !3866)
!3942 = !DILocation(line: 868, column: 13, scope: !3869)
!3943 = !DILocation(line: 873, column: 12, scope: !3869)
!3944 = !DILocation(line: 878, column: 37, scope: !3869)
!3945 = !DILocation(line: 878, column: 50, scope: !3869)
!3946 = !DILocation(line: 878, column: 13, scope: !3869)
!3947 = !DILocation(line: 879, column: 13, scope: !3869)
!3948 = !DILocation(line: 873, column: 9, scope: !3869)
!3949 = !DILocation(line: 874, column: 36, scope: !3869)
!3950 = !DILocation(line: 874, column: 42, scope: !3869)
!3951 = !DILocation(line: 874, column: 13, scope: !3869)
!3952 = !DILocation(line: 875, column: 13, scope: !3869)
!3953 = !DILocation(line: 876, column: 20, scope: !3869)
!3954 = !DILocation(line: 876, column: 13, scope: !3869)
!3955 = distinct !DISubprogram(name: "heapsort<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort17haf3e25da792a91abE", scope: !1249, file: !2590, line: 249, type: !2591, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3973, retainedNodes: !3956)
!3956 = !{!3957, !3958, !3959, !3965, !3967, !3969, !3971}
!3957 = !DILocalVariable(name: "v", arg: 1, scope: !3955, file: !2590, line: 249, type: !334)
!3958 = !DILocalVariable(name: "is_less", arg: 2, scope: !3955, file: !2590, line: 249, type: !1219)
!3959 = !DILocalVariable(name: "sift_down", scope: !3960, file: !2590, line: 254, type: !3961, align: 8)
!3960 = distinct !DILexicalBlock(scope: !3955, file: !2590, line: 254, column: 5)
!3961 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !3962, file: !2, size: 64, align: 64, elements: !3963, templateParams: !24, identifier: "be5d6b7cdd93f7528d2ac34477b13e59")
!3962 = !DINamespace(name: "heapsort", scope: !1249)
!3963 = !{!3964}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !3961, file: !2, baseType: !1218, size: 64, align: 64)
!3965 = !DILocalVariable(name: "iter", scope: !3966, file: !2590, line: 282, type: !2690, align: 8)
!3966 = distinct !DILexicalBlock(scope: !3960, file: !2590, line: 282, column: 5)
!3967 = !DILocalVariable(name: "i", scope: !3968, file: !2590, line: 282, type: !9, align: 8)
!3968 = distinct !DILexicalBlock(scope: !3966, file: !2590, line: 282, column: 37)
!3969 = !DILocalVariable(name: "iter", scope: !3970, file: !2590, line: 287, type: !2690, align: 8)
!3970 = distinct !DILexicalBlock(scope: !3960, file: !2590, line: 287, column: 5)
!3971 = !DILocalVariable(name: "i", scope: !3972, file: !2590, line: 287, type: !9, align: 8)
!3972 = distinct !DILexicalBlock(scope: !3970, file: !2590, line: 287, column: 33)
!3973 = !{!190, !3974}
!3974 = !DITemplateTypeParameter(name: "F", type: !1219)
!3975 = !DILocation(line: 249, column: 23, scope: !3955)
!3976 = !DILocation(line: 249, column: 36, scope: !3955)
!3977 = !DILocation(line: 254, column: 9, scope: !3960)
!3978 = !DILocation(line: 282, column: 14, scope: !3966)
!3979 = !DILocation(line: 287, column: 14, scope: !3970)
!3980 = !DILocation(line: 254, column: 25, scope: !3955)
!3981 = !DILocation(line: 282, column: 18, scope: !3960)
!3982 = !DILocation(line: 282, column: 14, scope: !3960)
!3983 = !DILocation(line: 282, column: 5, scope: !3966)
!3984 = !DILocation(line: 287, column: 14, scope: !3960)
!3985 = !DILocation(line: 287, column: 5, scope: !3970)
!3986 = !DILocation(line: 282, column: 9, scope: !3966)
!3987 = !DILocation(line: 282, column: 9, scope: !3968)
!3988 = !DILocation(line: 283, column: 9, scope: !3968)
!3989 = !DILocation(line: 291, column: 2, scope: !3955)
!3990 = !DILocation(line: 287, column: 9, scope: !3970)
!3991 = !DILocation(line: 287, column: 9, scope: !3972)
!3992 = !DILocation(line: 288, column: 9, scope: !3972)
!3993 = !DILocation(line: 289, column: 26, scope: !3972)
!3994 = !DILocation(line: 289, column: 24, scope: !3972)
!3995 = !DILocation(line: 289, column: 9, scope: !3972)
!3996 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h4d7ac2b27fb90229E", scope: !3962, file: !2590, line: 254, type: !3997, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3973, retainedNodes: !4000)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{null, !3999, !334, !9}
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::heapsort::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !3961, size: 64, align: 64, dwarfAddressSpace: 0)
!4000 = !{!4001, !4002, !4003, !4004}
!4001 = !DILocalVariable(name: "v", arg: 2, scope: !3996, file: !2590, line: 254, type: !334)
!4002 = !DILocalVariable(name: "node", arg: 3, scope: !3996, file: !2590, line: 254, type: !9)
!4003 = !DILocalVariable(name: "is_less", scope: !3996, file: !2590, line: 249, type: !1219, align: 8)
!4004 = !DILocalVariable(name: "child", scope: !4005, file: !2590, line: 257, type: !9, align: 8)
!4005 = distinct !DILexicalBlock(scope: !3996, file: !2590, line: 257, column: 13)
!4006 = !DILocation(line: 249, column: 40, scope: !3996)
!4007 = !DILocation(line: 254, column: 26, scope: !3996)
!4008 = !DILocation(line: 254, column: 39, scope: !3996)
!4009 = !DILocation(line: 257, column: 17, scope: !4005)
!4010 = !DILocation(line: 255, column: 9, scope: !3996)
!4011 = !DILocation(line: 257, column: 33, scope: !3996)
!4012 = !DILocation(line: 257, column: 29, scope: !3996)
!4013 = !DILocation(line: 258, column: 16, scope: !4005)
!4014 = !DILocation(line: 263, column: 16, scope: !4005)
!4015 = !DILocation(line: 279, column: 6, scope: !3996)
!4016 = !DILocation(line: 271, column: 17, scope: !4005)
!4017 = !DILocation(line: 271, column: 28, scope: !4005)
!4018 = !DILocation(line: 271, column: 26, scope: !4005)
!4019 = !DILocation(line: 267, column: 26, scope: !4005)
!4020 = !DILocation(line: 267, column: 37, scope: !4005)
!4021 = !DILocation(line: 267, column: 35, scope: !4005)
!4022 = !DILocation(line: 267, column: 34, scope: !4005)
!4023 = !DILocation(line: 267, column: 48, scope: !4005)
!4024 = !DILocation(line: 267, column: 46, scope: !4005)
!4025 = !DILocation(line: 267, column: 45, scope: !4005)
!4026 = !DILocation(line: 267, column: 17, scope: !4005)
!4027 = !DILocation(line: 263, column: 13, scope: !4005)
!4028 = !DILocation(line: 271, column: 25, scope: !4005)
!4029 = !DILocation(line: 271, column: 38, scope: !4005)
!4030 = !DILocation(line: 271, column: 36, scope: !4005)
!4031 = !DILocation(line: 271, column: 35, scope: !4005)
!4032 = !DILocation(line: 271, column: 16, scope: !4005)
!4033 = !DILocation(line: 276, column: 20, scope: !4005)
!4034 = !DILocation(line: 276, column: 26, scope: !4005)
!4035 = !DILocation(line: 276, column: 13, scope: !4005)
!4036 = !DILocation(line: 277, column: 20, scope: !4005)
!4037 = !DILocation(line: 277, column: 13, scope: !4005)
!4038 = distinct !DISubprogram(name: "partition<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9partition17h3d7c712718e94f9fE", scope: !1249, file: !2590, line: 560, type: !4039, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !4041)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!1136, !334, !9, !1219}
!4041 = !{!4042, !4043, !4044, !4045, !4047, !4048, !4050, !4051, !4053, !4055, !4057, !4059, !4061}
!4042 = !DILocalVariable(name: "v", arg: 1, scope: !4038, file: !2590, line: 560, type: !334)
!4043 = !DILocalVariable(name: "pivot", arg: 2, scope: !4038, file: !2590, line: 560, type: !9)
!4044 = !DILocalVariable(name: "is_less", arg: 3, scope: !4038, file: !2590, line: 560, type: !1219)
!4045 = !DILocalVariable(name: "mid", scope: !4046, file: !2590, line: 564, type: !9, align: 8)
!4046 = distinct !DILexicalBlock(scope: !4038, file: !2590, line: 564, column: 5)
!4047 = !DILocalVariable(name: "was_partitioned", scope: !4046, file: !2590, line: 564, type: !401, align: 1)
!4048 = !DILocalVariable(name: "pivot", scope: !4049, file: !2590, line: 567, type: !334, align: 8)
!4049 = distinct !DILexicalBlock(scope: !4038, file: !2590, line: 567, column: 9)
!4050 = !DILocalVariable(name: "v", scope: !4049, file: !2590, line: 567, type: !334, align: 8)
!4051 = !DILocalVariable(name: "pivot", scope: !4052, file: !2590, line: 568, type: !1030, align: 8)
!4052 = distinct !DILexicalBlock(scope: !4049, file: !2590, line: 568, column: 9)
!4053 = !DILocalVariable(name: "tmp", scope: !4054, file: !2590, line: 574, type: !677, align: 8)
!4054 = distinct !DILexicalBlock(scope: !4052, file: !2590, line: 574, column: 9)
!4055 = !DILocalVariable(name: "_pivot_guard", scope: !4056, file: !2590, line: 575, type: !1248, align: 8)
!4056 = distinct !DILexicalBlock(scope: !4054, file: !2590, line: 575, column: 9)
!4057 = !DILocalVariable(name: "pivot", scope: !4058, file: !2590, line: 576, type: !12, align: 8)
!4058 = distinct !DILexicalBlock(scope: !4056, file: !2590, line: 576, column: 9)
!4059 = !DILocalVariable(name: "l", scope: !4060, file: !2590, line: 579, type: !9, align: 8)
!4060 = distinct !DILexicalBlock(scope: !4058, file: !2590, line: 579, column: 9)
!4061 = !DILocalVariable(name: "r", scope: !4062, file: !2590, line: 580, type: !9, align: 8)
!4062 = distinct !DILexicalBlock(scope: !4060, file: !2590, line: 580, column: 9)
!4063 = !DILocation(line: 560, column: 20, scope: !4038)
!4064 = !DILocation(line: 560, column: 33, scope: !4038)
!4065 = !DILocation(line: 560, column: 47, scope: !4038)
!4066 = !DILocation(line: 574, column: 13, scope: !4054)
!4067 = !DILocation(line: 575, column: 13, scope: !4056)
!4068 = !DILocation(line: 579, column: 13, scope: !4060)
!4069 = !DILocation(line: 580, column: 13, scope: !4062)
!4070 = !DILocation(line: 566, column: 9, scope: !4038)
!4071 = !DILocation(line: 567, column: 26, scope: !4038)
!4072 = !DILocation(line: 567, column: 14, scope: !4038)
!4073 = !DILocation(line: 567, column: 14, scope: !4049)
!4074 = !DILocation(line: 567, column: 21, scope: !4038)
!4075 = !DILocation(line: 567, column: 21, scope: !4049)
!4076 = !DILocation(line: 568, column: 26, scope: !4049)
!4077 = !DILocation(line: 568, column: 21, scope: !4049)
!4078 = !DILocation(line: 568, column: 13, scope: !4052)
!4079 = !DILocation(line: 574, column: 51, scope: !4052)
!4080 = !DILocation(line: 70, column: 22, scope: !1108, inlinedAt: !4081)
!4081 = distinct !DILocation(line: 574, column: 19, scope: !4052)
!4082 = !DILocation(line: 71, column: 9, scope: !1108, inlinedAt: !4081)
!4083 = !DILocation(line: 152, column: 14, scope: !2627, inlinedAt: !4084)
!4084 = distinct !DILocation(line: 575, column: 50, scope: !4054)
!4085 = !DILocation(line: 575, column: 28, scope: !4054)
!4086 = !DILocation(line: 152, column: 14, scope: !2627, inlinedAt: !4087)
!4087 = distinct !DILocation(line: 576, column: 22, scope: !4056)
!4088 = !DILocation(line: 576, column: 21, scope: !4056)
!4089 = !DILocation(line: 576, column: 13, scope: !4058)
!4090 = !DILocation(line: 579, column: 21, scope: !4058)
!4091 = !DILocation(line: 580, column: 21, scope: !4060)
!4092 = !DILocation(line: 588, column: 13, scope: !4062)
!4093 = !DILocation(line: 588, column: 19, scope: !4062)
!4094 = !DILocation(line: 588, column: 23, scope: !4062)
!4095 = !DILocation(line: 588, column: 52, scope: !4062)
!4096 = !DILocation(line: 588, column: 36, scope: !4062)
!4097 = !DILocation(line: 588, column: 28, scope: !4062)
!4098 = !DILocation(line: 593, column: 19, scope: !4062)
!4099 = !DILocation(line: 593, column: 23, scope: !4062)
!4100 = !DILocation(line: 589, column: 17, scope: !4062)
!4101 = !DILocation(line: 593, column: 53, scope: !4062)
!4102 = !DILocation(line: 593, column: 37, scope: !4062)
!4103 = !DILocation(line: 593, column: 29, scope: !4062)
!4104 = !DILocation(line: 593, column: 28, scope: !4062)
!4105 = !DILocation(line: 598, column: 10, scope: !4062)
!4106 = !DILocation(line: 598, column: 41, scope: !4062)
!4107 = !DILocation(line: 598, column: 44, scope: !4062)
!4108 = !DILocation(line: 598, column: 39, scope: !4062)
!4109 = !DILocation(line: 598, column: 14, scope: !4062)
!4110 = !DILocation(line: 594, column: 17, scope: !4062)
!4111 = !DILocation(line: 593, column: 13, scope: !4062)
!4112 = !DILocation(line: 598, column: 65, scope: !4062)
!4113 = !DILocation(line: 598, column: 70, scope: !4062)
!4114 = !DILocation(line: 598, column: 9, scope: !4062)
!4115 = !DILocation(line: 603, column: 5, scope: !4054)
!4116 = !DILocation(line: 564, column: 10, scope: !4038)
!4117 = !DILocation(line: 564, column: 10, scope: !4046)
!4118 = !DILocation(line: 564, column: 15, scope: !4038)
!4119 = !DILocation(line: 564, column: 15, scope: !4046)
!4120 = !DILocation(line: 606, column: 5, scope: !4046)
!4121 = !DILocation(line: 608, column: 5, scope: !4046)
!4122 = !DILocation(line: 609, column: 2, scope: !4038)
!4123 = distinct !DISubprogram(name: "quicksort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9quicksort17h92db49e919f32533E", scope: !1249, file: !2590, line: 885, type: !4124, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2606, retainedNodes: !4126)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{null, !334, !1220}
!4126 = !{!4127, !4128, !4129}
!4127 = !DILocalVariable(name: "v", arg: 1, scope: !4123, file: !2590, line: 885, type: !334)
!4128 = !DILocalVariable(name: "is_less", arg: 2, scope: !4123, file: !2590, line: 885, type: !1220)
!4129 = !DILocalVariable(name: "limit", scope: !4130, file: !2590, line: 895, type: !27, align: 4)
!4130 = distinct !DILexicalBlock(scope: !4123, file: !2590, line: 895, column: 5)
!4131 = !DILocation(line: 885, column: 24, scope: !4123)
!4132 = !DILocation(line: 885, column: 37, scope: !4123)
!4133 = !DILocation(line: 890, column: 8, scope: !4123)
!4134 = !DILocalVariable(name: "self", arg: 1, scope: !4135, file: !1119, line: 148, type: !9)
!4135 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13leading_zeros17h73ae41151cc5b682E", scope: !1120, file: !1119, line: 148, type: !1304, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4136)
!4136 = !{!4134}
!4137 = !DILocation(line: 148, column: 36, scope: !4135, inlinedAt: !4138)
!4138 = distinct !DILocation(line: 895, column: 31, scope: !4123)
!4139 = !DILocation(line: 149, column: 13, scope: !4135, inlinedAt: !4138)
!4140 = !DILocation(line: 895, column: 17, scope: !4123)
!4141 = !DILocation(line: 898, column: 1, scope: !4123)
!4142 = !DILocation(line: 898, column: 2, scope: !4123)
!4143 = !DILocation(line: 895, column: 9, scope: !4130)
!4144 = !DILocation(line: 897, column: 30, scope: !4130)
!4145 = !DILocation(line: 897, column: 5, scope: !4130)
!4146 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hdac2a1d252190012E", scope: !4147, file: !163, line: 17, type: !4148, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2236, retainedNodes: !4150)
!4147 = !DINamespace(name: "{impl#0}", scope: !165)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{!303, !303, !174, !307}
!4150 = !{!4151, !4152}
!4151 = !DILocalVariable(name: "self", arg: 1, scope: !4146, file: !163, line: 17, type: !303)
!4152 = !DILocalVariable(name: "index", arg: 2, scope: !4146, file: !163, line: 17, type: !174)
!4153 = !DILocation(line: 17, column: 14, scope: !4146)
!4154 = !DILocation(line: 17, column: 21, scope: !4146)
!4155 = !DILocation(line: 18, column: 9, scope: !4146)
!4156 = !DILocation(line: 19, column: 6, scope: !4146)
!4157 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1af95eab22b4c3f6E", scope: !4158, file: !163, line: 28, type: !4159, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4164, retainedNodes: !4161)
!4158 = !DINamespace(name: "{impl#1}", scope: !165)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!334, !334, !367, !307}
!4161 = !{!4162, !4163}
!4162 = !DILocalVariable(name: "self", arg: 1, scope: !4157, file: !163, line: 28, type: !334)
!4163 = !DILocalVariable(name: "index", arg: 2, scope: !4157, file: !163, line: 28, type: !367)
!4164 = !{!190, !4165}
!4165 = !DITemplateTypeParameter(name: "I", type: !367)
!4166 = !DILocation(line: 28, column: 18, scope: !4157)
!4167 = !DILocation(line: 28, column: 29, scope: !4157)
!4168 = !DILocation(line: 29, column: 9, scope: !4157)
!4169 = !DILocation(line: 30, column: 6, scope: !4157)
!4170 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeToInclusive<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1d09ac9c11f46a4eE", scope: !4158, file: !163, line: 28, type: !4171, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4176, retainedNodes: !4173)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{!334, !334, !416, !307}
!4173 = !{!4174, !4175}
!4174 = !DILocalVariable(name: "self", arg: 1, scope: !4170, file: !163, line: 28, type: !334)
!4175 = !DILocalVariable(name: "index", arg: 2, scope: !4170, file: !163, line: 28, type: !416)
!4176 = !{!190, !4177}
!4177 = !DITemplateTypeParameter(name: "I", type: !416)
!4178 = !DILocation(line: 28, column: 18, scope: !4170)
!4179 = !DILocation(line: 28, column: 29, scope: !4170)
!4180 = !DILocation(line: 29, column: 9, scope: !4170)
!4181 = !DILocation(line: 30, column: 6, scope: !4170)
!4182 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc5c5f59ec5e342dbE", scope: !4158, file: !163, line: 28, type: !4183, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4188, retainedNodes: !4185)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!334, !334, !353, !307}
!4185 = !{!4186, !4187}
!4186 = !DILocalVariable(name: "self", arg: 1, scope: !4182, file: !163, line: 28, type: !334)
!4187 = !DILocalVariable(name: "index", arg: 2, scope: !4182, file: !163, line: 28, type: !353)
!4188 = !{!190, !4189}
!4189 = !DITemplateTypeParameter(name: "I", type: !353)
!4190 = !DILocation(line: 28, column: 18, scope: !4182)
!4191 = !DILocation(line: 28, column: 29, scope: !4182)
!4192 = !DILocation(line: 29, column: 9, scope: !4182)
!4193 = !DILocation(line: 30, column: 6, scope: !4182)
!4194 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfdf60844773cb214E", scope: !4158, file: !163, line: 28, type: !4195, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2236, retainedNodes: !4197)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!334, !334, !174, !307}
!4197 = !{!4198, !4199}
!4198 = !DILocalVariable(name: "self", arg: 1, scope: !4194, file: !163, line: 28, type: !334)
!4199 = !DILocalVariable(name: "index", arg: 2, scope: !4194, file: !163, line: 28, type: !174)
!4200 = !DILocation(line: 28, column: 18, scope: !4194)
!4201 = !DILocation(line: 28, column: 29, scope: !4194)
!4202 = !DILocation(line: 29, column: 9, scope: !4194)
!4203 = !DILocation(line: 30, column: 6, scope: !4194)
!4204 = distinct !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17hb7f51dd5acc03708E", scope: !4206, file: !4205, line: 955, type: !4217, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1769, declaration: !4219, retainedNodes: !4220)
!4205 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "d98c126e37d22a85a618c79c56fc88fa")
!4206 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<bootloader::bootinfo::TlsTemplate>", scope: !459, file: !2, size: 256, align: 64, elements: !4207, templateParams: !24, identifier: "1bc9aeb7e2de37244e10eff965de224e")
!4207 = !{!4208}
!4208 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4206, file: !2, size: 256, align: 64, elements: !4209, templateParams: !24, identifier: "afb7d989375b7a4319e230551cbefda2", discriminator: !4216)
!4209 = !{!4210, !4212}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4208, file: !2, baseType: !4211, size: 256, align: 64, extraData: i64 0)
!4211 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4206, file: !2, size: 256, align: 64, elements: !24, templateParams: !1769, identifier: "76722ec9d9631aa7eb983321f1f2aaca")
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4208, file: !2, baseType: !4213, size: 256, align: 64, extraData: i64 1)
!4213 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4206, file: !2, size: 256, align: 64, elements: !4214, templateParams: !1769, identifier: "48e9ffa4fce29249a9734f624d969de2")
!4214 = !{!4215}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4213, file: !2, baseType: !109, size: 192, align: 64, offset: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, scope: !4206, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{!109, !4206, !109}
!4219 = !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17hb7f51dd5acc03708E", scope: !4206, file: !4205, line: 955, type: !4217, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1769)
!4220 = !{!4221, !4222, !4223}
!4221 = !DILocalVariable(name: "self", arg: 1, scope: !4204, file: !4205, line: 955, type: !4206)
!4222 = !DILocalVariable(name: "default", arg: 2, scope: !4204, file: !4205, line: 955, type: !109)
!4223 = !DILocalVariable(name: "x", scope: !4224, file: !4205, line: 957, type: !109, align: 8)
!4224 = distinct !DILexicalBlock(scope: !4204, file: !4205, line: 957, column: 13)
!4225 = !DILocation(line: 955, column: 22, scope: !4204)
!4226 = !DILocation(line: 955, column: 28, scope: !4204)
!4227 = !DILocation(line: 957, column: 18, scope: !4224)
!4228 = !DILocation(line: 956, column: 15, scope: !4204)
!4229 = !DILocation(line: 956, column: 9, scope: !4204)
!4230 = !DILocation(line: 958, column: 21, scope: !4204)
!4231 = !DILocation(line: 957, column: 18, scope: !4204)
!4232 = !DILocation(line: 957, column: 24, scope: !4224)
!4233 = !DILocation(line: 957, column: 24, scope: !4204)
!4234 = !DILocation(line: 960, column: 5, scope: !4204)
!4235 = !DILocation(line: 960, column: 6, scope: !4204)
!4236 = distinct !DISubprogram(name: "eq", linkageName: "_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17hb57cb3a551f4a96cE", scope: !4237, file: !779, line: 330, type: !4238, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4241)
!4237 = !DINamespace(name: "{impl#7}", scope: !149)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!401, !4240, !4240}
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cmp::Ordering", baseType: !148, size: 64, align: 64, dwarfAddressSpace: 0)
!4241 = !{!4242, !4243, !4244, !4246}
!4242 = !DILocalVariable(name: "self", arg: 1, scope: !4236, file: !779, line: 330, type: !4240)
!4243 = !DILocalVariable(name: "other", arg: 2, scope: !4236, file: !779, line: 330, type: !4240)
!4244 = !DILocalVariable(name: "__self_tag", scope: !4245, file: !779, line: 330, type: !150, align: 1)
!4245 = distinct !DILexicalBlock(scope: !4236, file: !779, line: 330, column: 23)
!4246 = !DILocalVariable(name: "__arg1_tag", scope: !4247, file: !779, line: 330, type: !150, align: 1)
!4247 = distinct !DILexicalBlock(scope: !4245, file: !779, line: 330, column: 23)
!4248 = !DILocation(line: 330, column: 23, scope: !4236)
!4249 = !DILocation(line: 330, column: 23, scope: !4245)
!4250 = !DILocation(line: 330, column: 23, scope: !4247)
!4251 = !DILocation(line: 330, column: 32, scope: !4236)
!4252 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h36364877f8c396d4E", scope: !4254, file: !4253, line: 281, type: !4257, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4261, retainedNodes: !4259)
!4253 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "9a5f35eb44040bca17e398efcedefd6e")
!4254 = !DINamespace(name: "{impl#0}", scope: !4255)
!4255 = !DINamespace(name: "collect", scope: !4256)
!4256 = !DINamespace(name: "traits", scope: !2693)
!4257 = !DISubroutineType(types: !4258)
!4258 = !{!846, !846}
!4259 = !{!4260}
!4260 = !DILocalVariable(name: "self", arg: 1, scope: !4252, file: !4253, line: 281, type: !846)
!4261 = !{!863}
!4262 = !DILocation(line: 281, column: 18, scope: !4252)
!4263 = !DILocation(line: 283, column: 6, scope: !4252)
!4264 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h53daa7a0e955cc87E", scope: !4265, file: !163, line: 227, type: !4266, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !4268)
!4265 = !DINamespace(name: "{impl#2}", scope: !165)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!207, !9, !169}
!4268 = !{!4269, !4270, !4271}
!4269 = !DILocalVariable(name: "self", arg: 1, scope: !4264, file: !163, line: 227, type: !9)
!4270 = !DILocalVariable(name: "slice", arg: 2, scope: !4264, file: !163, line: 227, type: !169)
!4271 = !DILocalVariable(name: "this", scope: !4272, file: !163, line: 228, type: !9, align: 8)
!4272 = distinct !DILexicalBlock(scope: !4264, file: !163, line: 228, column: 9)
!4273 = !DILocation(line: 227, column: 29, scope: !4264)
!4274 = !DILocation(line: 228, column: 13, scope: !4272)
!4275 = !DILocation(line: 227, column: 35, scope: !4264)
!4276 = !DILocation(line: 234, column: 13, scope: !4272)
!4277 = !DILocation(line: 238, column: 13, scope: !4272)
!4278 = !DILocation(line: 915, column: 29, scope: !200, inlinedAt: !4279)
!4279 = distinct !DILocation(line: 238, column: 13, scope: !4272)
!4280 = !DILocation(line: 915, column: 35, scope: !200, inlinedAt: !4279)
!4281 = !DILocation(line: 927, column: 13, scope: !200, inlinedAt: !4279)
!4282 = !DILocation(line: 240, column: 6, scope: !4264)
!4283 = !DILocalVariable(name: "this", arg: 1, scope: !4284, file: !218, line: 2517, type: !9)
!4284 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hb4a55e8add239afbE", scope: !4285, file: !218, line: 2517, type: !4286, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !4288)
!4285 = !DINamespace(name: "get_unchecked", scope: !4265)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{null, !9, !169}
!4288 = !{!4283, !4289}
!4289 = !DILocalVariable(name: "slice", arg: 2, scope: !4284, file: !218, line: 2517, type: !169)
!4290 = !DILocation(line: 2517, column: 39, scope: !4284, inlinedAt: !4291)
!4291 = distinct !DILocation(line: 234, column: 13, scope: !4272)
!4292 = !DILocation(line: 236, column: 63, scope: !4293, inlinedAt: !4291)
!4293 = !DILexicalBlockFile(scope: !4284, file: !163, discriminator: 0)
!4294 = !DILocation(line: 236, column: 56, scope: !4293, inlinedAt: !4291)
!4295 = !DILocation(line: 2518, column: 20, scope: !4284, inlinedAt: !4291)
!4296 = !DILocation(line: 2520, column: 21, scope: !4284, inlinedAt: !4291)
!4297 = distinct !DISubprogram(name: "drop<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2871d52ba83f2309E", scope: !4298, file: !2590, line: 23, type: !4299, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !4302)
!4298 = !DINamespace(name: "{impl#0}", scope: !1249)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{null, !4301}
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1248, size: 64, align: 64, dwarfAddressSpace: 0)
!4302 = !{!4303}
!4303 = !DILocalVariable(name: "self", arg: 1, scope: !4297, file: !2590, line: 23, type: !4301)
!4304 = !DILocation(line: 23, column: 13, scope: !4297)
!4305 = !DILocation(line: 28, column: 38, scope: !4297)
!4306 = !DILocation(line: 28, column: 48, scope: !4297)
!4307 = !DILocation(line: 28, column: 13, scope: !4297)
!4308 = !DILocation(line: 30, column: 6, scope: !4297)
!4309 = distinct !DISubprogram(name: "next<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9da836cc48c1beebE", scope: !4311, file: !4310, line: 131, type: !4312, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, retainedNodes: !4315)
!4310 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "d6e264c62b60597bf2b0981ba2f39dce")
!4311 = !DINamespace(name: "{impl#181}", scope: !847)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{!3830, !4314}
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !846, size: 64, align: 64, dwarfAddressSpace: 0)
!4315 = !{!4316}
!4316 = !DILocalVariable(name: "self", arg: 1, scope: !4309, file: !4310, line: 131, type: !4314)
!4317 = !DILocation(line: 131, column: 21, scope: !4309)
!4318 = !DILocation(line: 138, column: 24, scope: !4309)
!4319 = !DILocation(line: 141, column: 24, scope: !4309)
!4320 = !DILocation(line: 139, column: 33, scope: !4309)
!4321 = !DILocation(line: 139, column: 32, scope: !4309)
!4322 = !DILocation(line: 139, column: 25, scope: !4309)
!4323 = !DILocation(line: 138, column: 21, scope: !4309)
!4324 = !DILocalVariable(name: "self", arg: 1, scope: !4325, file: !1973, line: 325, type: !850)
!4325 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc0f9fee8504f5e24E", scope: !850, file: !1973, line: 325, type: !4326, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, declaration: !4328, retainedNodes: !4329)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!261, !850}
!4328 = !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc0f9fee8504f5e24E", scope: !850, file: !1973, line: 325, type: !4326, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !189)
!4329 = !{!4324}
!4330 = !DILocation(line: 325, column: 25, scope: !4325, inlinedAt: !4331)
!4331 = distinct !DILocation(line: 141, column: 24, scope: !4309)
!4332 = !DILocation(line: 203, column: 17, scope: !529, inlinedAt: !4333)
!4333 = distinct !DILocation(line: 141, column: 24, scope: !4309)
!4334 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !4335)
!4335 = distinct !DILocation(line: 207, column: 33, scope: !529, inlinedAt: !4333)
!4336 = !DILocation(line: 207, column: 18, scope: !529, inlinedAt: !4333)
!4337 = !DILocalVariable(name: "self", arg: 1, scope: !4338, file: !4310, line: 83, type: !4314)
!4338 = distinct !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h0313ecb60d0cef2fE", scope: !846, file: !4310, line: 83, type: !4339, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !189, declaration: !4341, retainedNodes: !4342)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{!207, !4314, !9}
!4341 = !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h0313ecb60d0cef2fE", scope: !846, file: !4310, line: 83, type: !4339, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !189)
!4342 = !{!4337, !4343, !4344, !4346}
!4343 = !DILocalVariable(name: "offset", arg: 2, scope: !4338, file: !4310, line: 83, type: !9)
!4344 = !DILocalVariable(name: "old", scope: !4345, file: !4310, line: 84, type: !850, align: 8)
!4345 = distinct !DILexicalBlock(scope: !4338, file: !4310, line: 84, column: 17)
!4346 = !DILocalVariable(name: "new_len", scope: !4347, file: !4310, line: 86, type: !9, align: 8)
!4347 = distinct !DILexicalBlock(scope: !4345, file: !4310, line: 85, column: 30)
!4348 = !DILocation(line: 83, column: 38, scope: !4338, inlinedAt: !4349)
!4349 = distinct !DILocation(line: 144, column: 30, scope: !4309)
!4350 = !DILocation(line: 83, column: 49, scope: !4338, inlinedAt: !4349)
!4351 = !DILocation(line: 84, column: 27, scope: !4338, inlinedAt: !4349)
!4352 = !DILocation(line: 84, column: 21, scope: !4345, inlinedAt: !4349)
!4353 = !DILocation(line: 90, column: 41, scope: !4345, inlinedAt: !4349)
!4354 = !DILocation(line: 90, column: 21, scope: !4345, inlinedAt: !4349)
!4355 = !DILocation(line: 325, column: 25, scope: !4325, inlinedAt: !4356)
!4356 = distinct !DILocation(line: 92, column: 17, scope: !4345, inlinedAt: !4349)
!4357 = !DILocation(line: 144, column: 25, scope: !4309)
!4358 = !DILocation(line: 141, column: 21, scope: !4309)
!4359 = !DILocation(line: 142, column: 25, scope: !4309)
!4360 = !DILocation(line: 147, column: 14, scope: !4309)
!4361 = distinct !DISubprogram(name: "position<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17heae48cffa68b8c7aE", scope: !4311, file: !4310, line: 281, type: !4362, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4374, retainedNodes: !4365)
!4362 = !DISubroutineType(types: !4363)
!4363 = !{!458, !4314, !4364}
!4364 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !1227, file: !2, align: 8, elements: !24, identifier: "ad2f00b10821cb0bd00d680533f5901a")
!4365 = !{!4366, !4367, !4368, !4370, !4372}
!4366 = !DILocalVariable(name: "self", arg: 1, scope: !4361, file: !4310, line: 281, type: !4314)
!4367 = !DILocalVariable(name: "predicate", arg: 2, scope: !4361, file: !4310, line: 281, type: !4364)
!4368 = !DILocalVariable(name: "n", scope: !4369, file: !4310, line: 285, type: !9, align: 8)
!4369 = distinct !DILexicalBlock(scope: !4361, file: !4310, line: 285, column: 17)
!4370 = !DILocalVariable(name: "i", scope: !4371, file: !4310, line: 286, type: !9, align: 8)
!4371 = distinct !DILexicalBlock(scope: !4369, file: !4310, line: 286, column: 17)
!4372 = !DILocalVariable(name: "x", scope: !4373, file: !4310, line: 287, type: !12, align: 8)
!4373 = distinct !DILexicalBlock(scope: !4371, file: !4310, line: 287, column: 49)
!4374 = !{!190, !4375}
!4375 = !DITemplateTypeParameter(name: "P", type: !4364)
!4376 = !DILocation(line: 281, column: 28, scope: !4361)
!4377 = !DILocation(line: 281, column: 39, scope: !4361)
!4378 = !DILocation(line: 285, column: 21, scope: !4369)
!4379 = !DILocation(line: 286, column: 21, scope: !4371)
!4380 = !DILocation(line: 285, column: 25, scope: !4361)
!4381 = !DILocation(line: 325, column: 25, scope: !4325, inlinedAt: !4382)
!4382 = distinct !DILocation(line: 285, column: 25, scope: !4361)
!4383 = !DILocation(line: 203, column: 17, scope: !529, inlinedAt: !4384)
!4384 = distinct !DILocation(line: 285, column: 25, scope: !4361)
!4385 = !DILocation(line: 58, column: 26, scope: !536, inlinedAt: !4386)
!4386 = distinct !DILocation(line: 207, column: 33, scope: !529, inlinedAt: !4384)
!4387 = !DILocation(line: 207, column: 18, scope: !529, inlinedAt: !4384)
!4388 = !DILocation(line: 286, column: 29, scope: !4369)
!4389 = !DILocation(line: 287, column: 17, scope: !4371)
!4390 = !DILocation(line: 287, column: 37, scope: !4373)
!4391 = !DILocation(line: 287, column: 27, scope: !4373)
!4392 = !DILocation(line: 287, column: 32, scope: !4373)
!4393 = !DILocation(line: 288, column: 24, scope: !4373)
!4394 = !DILocation(line: 296, column: 17, scope: !4371)
!4395 = !DILocation(line: 297, column: 13, scope: !4361)
!4396 = !DILocation(line: 297, column: 14, scope: !4361)
!4397 = !DILocation(line: 294, column: 21, scope: !4373)
!4398 = !DILocation(line: 291, column: 41, scope: !4373)
!4399 = !DILocation(line: 291, column: 45, scope: !4373)
!4400 = !DILocation(line: 291, column: 34, scope: !4373)
!4401 = !DILocation(line: 292, column: 37, scope: !4373)
!4402 = !DILocation(line: 292, column: 32, scope: !4373)
!4403 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h070f8d3ed63b8f35E", scope: !94, file: !4404, line: 20, type: !4405, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4407, retainedNodes: !24)
!4404 = !DIFile(filename: "src/bootinfo/memory_map.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "e5c49912468d9331b5d84640370affee")
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!94}
!4407 = !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h070f8d3ed63b8f35E", scope: !94, file: !4404, line: 20, type: !4405, scopeLine: 20, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4408 = !DILocation(line: 22, column: 23, scope: !4403)
!4409 = !DILocation(line: 22, column: 22, scope: !4403)
!4410 = !DILocation(line: 21, column: 9, scope: !4403)
!4411 = !DILocation(line: 25, column: 6, scope: !4403)
!4412 = distinct !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17hcadd27ccff8691e7E", scope: !94, file: !4404, line: 27, type: !4413, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4416, retainedNodes: !4417)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{null, !4415, !13}
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4416 = !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17hcadd27ccff8691e7E", scope: !94, file: !4404, line: 27, type: !4413, scopeLine: 27, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4417 = !{!4418, !4419}
!4418 = !DILocalVariable(name: "self", arg: 1, scope: !4412, file: !4404, line: 27, type: !4415)
!4419 = !DILocalVariable(name: "region", arg: 2, scope: !4412, file: !4404, line: 27, type: !13)
!4420 = !DILocation(line: 27, column: 23, scope: !4412)
!4421 = !DILocation(line: 27, column: 34, scope: !4412)
!4422 = !DILocation(line: 29, column: 13, scope: !4412)
!4423 = !DILocation(line: 28, column: 9, scope: !4412)
!4424 = !DILocation(line: 32, column: 22, scope: !4412)
!4425 = !DILocation(line: 32, column: 9, scope: !4412)
!4426 = !DILocation(line: 33, column: 9, scope: !4412)
!4427 = !DILocation(line: 34, column: 9, scope: !4412)
!4428 = !DILocation(line: 35, column: 6, scope: !4412)
!4429 = distinct !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17hbc12f840583cc680E", scope: !94, file: !4404, line: 37, type: !4430, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4432, retainedNodes: !4433)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{null, !4415}
!4432 = !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17hbc12f840583cc680E", scope: !94, file: !4404, line: 37, type: !4430, scopeLine: 37, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4433 = !{!4434, !4435}
!4434 = !DILocalVariable(name: "self", arg: 1, scope: !4429, file: !4404, line: 37, type: !4415)
!4435 = !DILocalVariable(name: "first_zero_index", scope: !4436, file: !4404, line: 58, type: !9, align: 8)
!4436 = distinct !DILexicalBlock(scope: !4429, file: !4404, line: 58, column: 94)
!4437 = !DILocation(line: 37, column: 17, scope: !4429)
!4438 = !DILocation(line: 40, column: 9, scope: !4429)
!4439 = !DILocation(line: 58, column: 41, scope: !4436)
!4440 = !DILocation(line: 58, column: 16, scope: !4436)
!4441 = !DILocation(line: 58, column: 21, scope: !4436)
!4442 = !DILocation(line: 59, column: 13, scope: !4436)
!4443 = !DILocation(line: 58, column: 9, scope: !4429)
!4444 = !DILocation(line: 61, column: 6, scope: !4429)
!4445 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h9aab6d72e771da3cE", scope: !1227, file: !4404, line: 40, type: !4446, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4448)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!148, !1225, !12, !12}
!4448 = !{!4449, !4450, !4451, !4453}
!4449 = !DILocalVariable(name: "r1", arg: 2, scope: !4445, file: !4404, line: 40, type: !12)
!4450 = !DILocalVariable(name: "r2", arg: 3, scope: !4445, file: !4404, line: 40, type: !12)
!4451 = !DILocalVariable(name: "ordering", scope: !4452, file: !4404, line: 46, type: !148, align: 1)
!4452 = distinct !DILexicalBlock(scope: !4445, file: !4404, line: 46, column: 17)
!4453 = !DILocalVariable(arg: 1, scope: !4445, file: !4404, line: 40, type: !1225)
!4454 = !DILocation(line: 40, column: 39, scope: !4445)
!4455 = !DILocation(line: 40, column: 40, scope: !4445)
!4456 = !DILocation(line: 40, column: 44, scope: !4445)
!4457 = !DILocation(line: 46, column: 21, scope: !4452)
!4458 = !DILocation(line: 41, column: 16, scope: !4445)
!4459 = !DILocation(line: 43, column: 23, scope: !4445)
!4460 = !DILocation(line: 42, column: 17, scope: !4445)
!4461 = !DILocation(line: 41, column: 13, scope: !4445)
!4462 = !DILocation(line: 57, column: 10, scope: !4445)
!4463 = !DILocation(line: 46, column: 32, scope: !4445)
!4464 = !DILocation(line: 51, column: 20, scope: !4452)
!4465 = !DILocation(line: 44, column: 17, scope: !4445)
!4466 = !DILocation(line: 43, column: 20, scope: !4445)
!4467 = !DILocation(line: 54, column: 21, scope: !4452)
!4468 = !DILocation(line: 51, column: 17, scope: !4452)
!4469 = !DILocation(line: 52, column: 21, scope: !4452)
!4470 = !DILocation(line: 52, column: 51, scope: !4452)
!4471 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h6d19e11f903ddd26E", scope: !1227, file: !4404, line: 58, type: !4472, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4475)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!401, !4474, !12}
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}", baseType: !4364, size: 64, align: 64, dwarfAddressSpace: 0)
!4475 = !{!4476, !4477}
!4476 = !DILocalVariable(name: "r", arg: 2, scope: !4471, file: !4404, line: 58, type: !12)
!4477 = !DILocalVariable(arg: 1, scope: !4471, file: !4404, line: 58, type: !4474)
!4478 = !DILocation(line: 58, column: 70, scope: !4471)
!4479 = !DILocation(line: 58, column: 71, scope: !4471)
!4480 = !DILocation(line: 58, column: 74, scope: !4471)
!4481 = !DILocation(line: 58, column: 92, scope: !4471)
!4482 = distinct !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf61fbd789bf80f18E", scope: !94, file: !4404, line: 63, type: !4483, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4486, retainedNodes: !4487)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!9, !4485}
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4486 = !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf61fbd789bf80f18E", scope: !94, file: !4404, line: 63, type: !4483, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!4487 = !{!4488}
!4488 = !DILocalVariable(name: "self", arg: 1, scope: !4482, file: !4404, line: 63, type: !4485)
!4489 = !DILocation(line: 63, column: 25, scope: !4482)
!4490 = !DILocation(line: 64, column: 9, scope: !4482)
!4491 = !DILocation(line: 65, column: 6, scope: !4482)
!4492 = distinct !DISubprogram(name: "deref", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17h82ce1d6964150791E", scope: !4493, file: !4404, line: 71, type: !4494, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4496)
!4493 = !DINamespace(name: "{impl#1}", scope: !14)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{!303, !4485}
!4496 = !{!4497}
!4497 = !DILocalVariable(name: "self", arg: 1, scope: !4492, file: !4404, line: 71, type: !4485)
!4498 = !DILocation(line: 71, column: 14, scope: !4492)
!4499 = !DILocation(line: 72, column: 26, scope: !4492)
!4500 = !DILocation(line: 72, column: 23, scope: !4492)
!4501 = !DILocation(line: 72, column: 10, scope: !4492)
!4502 = !DILocation(line: 73, column: 6, scope: !4492)
!4503 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hda92aad7bc4ff9b5E", scope: !4504, file: !4404, line: 77, type: !4505, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4507)
!4504 = !DINamespace(name: "{impl#2}", scope: !14)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!334, !4415}
!4507 = !{!4508, !4509}
!4508 = !DILocalVariable(name: "self", arg: 1, scope: !4503, file: !4404, line: 77, type: !4415)
!4509 = !DILocalVariable(name: "next_index", scope: !4510, file: !4404, line: 78, type: !9, align: 8)
!4510 = distinct !DILexicalBlock(scope: !4503, file: !4404, line: 78, column: 9)
!4511 = !DILocation(line: 77, column: 18, scope: !4503)
!4512 = !DILocation(line: 78, column: 26, scope: !4503)
!4513 = !DILocation(line: 78, column: 13, scope: !4510)
!4514 = !DILocation(line: 79, column: 27, scope: !4510)
!4515 = !DILocation(line: 79, column: 14, scope: !4510)
!4516 = !DILocation(line: 80, column: 6, scope: !4503)
!4517 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h5eae1787705802a9E", scope: !4518, file: !4404, line: 84, type: !4519, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4521)
!4518 = !DINamespace(name: "{impl#3}", scope: !14)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{!431, !4485, !450}
!4521 = !{!4522, !4523}
!4522 = !DILocalVariable(name: "self", arg: 1, scope: !4517, file: !4404, line: 84, type: !4485)
!4523 = !DILocalVariable(name: "f", arg: 2, scope: !4517, file: !4404, line: 84, type: !450)
!4524 = !DILocation(line: 84, column: 12, scope: !4517)
!4525 = !DILocation(line: 84, column: 19, scope: !4517)
!4526 = !DILocation(line: 85, column: 9, scope: !4517)
!4527 = !DILocation(line: 85, column: 32, scope: !4517)
!4528 = !DILocation(line: 86, column: 6, scope: !4517)
!4529 = distinct !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17hbdcec5494b0034e3E", scope: !13, file: !4404, line: 101, type: !4530, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4532, retainedNodes: !24)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!13}
!4532 = !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17hbdcec5494b0034e3E", scope: !13, file: !4404, line: 101, type: !4530, scopeLine: 101, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4533 = !DILocation(line: 103, column: 20, scope: !4529)
!4534 = !DILocation(line: 107, column: 26, scope: !4529)
!4535 = !DILocation(line: 102, column: 9, scope: !4529)
!4536 = !{i32 0, i32 15}
!4537 = !DILocation(line: 109, column: 6, scope: !4529)
!4538 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17hb55906efac1efc89E", scope: !19, file: !4404, line: 132, type: !4539, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4541, retainedNodes: !4542)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!19, !22, !22}
!4541 = !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17hb55906efac1efc89E", scope: !19, file: !4404, line: 132, type: !4539, scopeLine: 132, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4542 = !{!4543, !4544, !4545}
!4543 = !DILocalVariable(name: "start_addr", arg: 1, scope: !4538, file: !4404, line: 132, type: !22)
!4544 = !DILocalVariable(name: "end_addr", arg: 2, scope: !4538, file: !4404, line: 132, type: !22)
!4545 = !DILocalVariable(name: "last_byte", scope: !4546, file: !4404, line: 133, type: !22, align: 8)
!4546 = distinct !DILexicalBlock(scope: !4538, file: !4404, line: 133, column: 9)
!4547 = !DILocation(line: 132, column: 16, scope: !4538)
!4548 = !DILocation(line: 132, column: 33, scope: !4538)
!4549 = !DILocation(line: 133, column: 25, scope: !4538)
!4550 = !DILocation(line: 133, column: 13, scope: !4546)
!4551 = !DILocation(line: 135, column: 33, scope: !4546)
!4552 = !DILocation(line: 136, column: 31, scope: !4546)
!4553 = !DILocation(line: 134, column: 9, scope: !4546)
!4554 = !DILocation(line: 138, column: 6, scope: !4538)
!4555 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hda6d95610bd9e367E", scope: !19, file: !4404, line: 141, type: !4556, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4559, retainedNodes: !4560)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{!401, !4558}
!4558 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4559 = !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hda6d95610bd9e367E", scope: !19, file: !4404, line: 141, type: !4556, scopeLine: 141, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4560 = !{!4561}
!4561 = !DILocalVariable(name: "self", arg: 1, scope: !4555, file: !4404, line: 141, type: !4558)
!4562 = !DILocation(line: 141, column: 21, scope: !4555)
!4563 = !DILocation(line: 142, column: 9, scope: !4555)
!4564 = !DILocation(line: 142, column: 36, scope: !4555)
!4565 = !DILocation(line: 143, column: 6, scope: !4555)
!4566 = distinct !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h170a38779cf27241E", scope: !19, file: !4404, line: 146, type: !4567, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4569, retainedNodes: !4570)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!22, !4558}
!4569 = !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h170a38779cf27241E", scope: !19, file: !4404, line: 146, type: !4567, scopeLine: 146, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4570 = !{!4571}
!4571 = !DILocalVariable(name: "self", arg: 1, scope: !4566, file: !4404, line: 146, type: !4558)
!4572 = !DILocation(line: 146, column: 23, scope: !4566)
!4573 = !DILocation(line: 147, column: 9, scope: !4566)
!4574 = !DILocation(line: 148, column: 6, scope: !4566)
!4575 = distinct !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hf96ff403a0c8d664E", scope: !19, file: !4404, line: 151, type: !4567, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4576, retainedNodes: !4577)
!4576 = !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hf96ff403a0c8d664E", scope: !19, file: !4404, line: 151, type: !4567, scopeLine: 151, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4577 = !{!4578}
!4578 = !DILocalVariable(name: "self", arg: 1, scope: !4575, file: !4404, line: 151, type: !4558)
!4579 = !DILocation(line: 151, column: 21, scope: !4575)
!4580 = !DILocation(line: 152, column: 9, scope: !4575)
!4581 = !DILocation(line: 153, column: 6, scope: !4575)
!4582 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h83d8468df17985c2E", scope: !4583, file: !4404, line: 157, type: !4584, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4586)
!4583 = !DINamespace(name: "{impl#6}", scope: !14)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!431, !4558, !450}
!4586 = !{!4587, !4588}
!4587 = !DILocalVariable(name: "self", arg: 1, scope: !4582, file: !4404, line: 157, type: !4558)
!4588 = !DILocalVariable(name: "f", arg: 2, scope: !4582, file: !4404, line: 157, type: !450)
!4589 = !DILocation(line: 157, column: 12, scope: !4582)
!4590 = !DILocation(line: 157, column: 19, scope: !4582)
!4591 = !DILocation(line: 161, column: 13, scope: !4582)
!4592 = !DILocalVariable(name: "x", arg: 1, scope: !4593, file: !4594, line: 108, type: !132)
!4593 = distinct !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt2rt8Argument13new_lower_hex17hcf13ba17455a1c9dE", scope: !937, file: !4594, line: 108, type: !4595, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1374, declaration: !4597, retainedNodes: !4598)
!4594 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "31eddffc1303c18bd294e608e49a0de2")
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!937, !132}
!4597 = !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt2rt8Argument13new_lower_hex17hcf13ba17455a1c9dE", scope: !937, file: !4594, line: 108, type: !4595, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1374)
!4598 = !{!4592}
!4599 = !DILocation(line: 108, column: 43, scope: !4593, inlinedAt: !4600)
!4600 = distinct !DILocation(line: 158, column: 9, scope: !4582)
!4601 = !DILocalVariable(name: "x", arg: 1, scope: !4602, file: !4594, line: 83, type: !132)
!4602 = distinct !DISubprogram(name: "new<u64>", linkageName: "_ZN4core3fmt2rt8Argument3new17haebc701152923e7eE", scope: !937, file: !4594, line: 83, type: !4603, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1374, declaration: !4606, retainedNodes: !4607)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!937, !132, !4605}
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u64, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !819, size: 64, align: 64, dwarfAddressSpace: 0)
!4606 = !DISubprogram(name: "new<u64>", linkageName: "_ZN4core3fmt2rt8Argument3new17haebc701152923e7eE", scope: !937, file: !4594, line: 83, type: !4603, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1374)
!4607 = !{!4601, !4608}
!4608 = !DILocalVariable(name: "f", arg: 2, scope: !4602, file: !4594, line: 83, type: !4605)
!4609 = !DILocation(line: 83, column: 19, scope: !4602, inlinedAt: !4610)
!4610 = distinct !DILocation(line: 109, column: 9, scope: !4593, inlinedAt: !4600)
!4611 = !DILocation(line: 83, column: 29, scope: !4602, inlinedAt: !4610)
!4612 = !DILocation(line: 92, column: 18, scope: !4602, inlinedAt: !4610)
!4613 = !DILocation(line: 93, column: 6, scope: !4602, inlinedAt: !4610)
!4614 = !DILocation(line: 109, column: 9, scope: !4593, inlinedAt: !4600)
!4615 = !DILocation(line: 158, column: 9, scope: !4582)
!4616 = !DILocation(line: 162, column: 13, scope: !4582)
!4617 = !DILocation(line: 108, column: 43, scope: !4593, inlinedAt: !4618)
!4618 = distinct !DILocation(line: 158, column: 9, scope: !4582)
!4619 = !DILocation(line: 83, column: 19, scope: !4602, inlinedAt: !4620)
!4620 = distinct !DILocation(line: 109, column: 9, scope: !4593, inlinedAt: !4618)
!4621 = !DILocation(line: 83, column: 29, scope: !4602, inlinedAt: !4620)
!4622 = !DILocation(line: 92, column: 18, scope: !4602, inlinedAt: !4620)
!4623 = !DILocation(line: 93, column: 6, scope: !4602, inlinedAt: !4620)
!4624 = !DILocation(line: 109, column: 9, scope: !4593, inlinedAt: !4618)
!4625 = !{i8 0, i8 4}
!4626 = !{i64 0, i64 3}
!4627 = !DILocalVariable(name: "position", arg: 1, scope: !4628, file: !4594, line: 22, type: !9)
!4628 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt11Placeholder3new17h474953d88505000bE", scope: !903, file: !4594, line: 21, type: !4629, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4631, retainedNodes: !4632)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!903, !9, !455, !139, !27, !910, !910}
!4631 = !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt11Placeholder3new17h474953d88505000bE", scope: !903, file: !4594, line: 21, type: !4629, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!4632 = !{!4627, !4633, !4634, !4635, !4636, !4637}
!4633 = !DILocalVariable(name: "fill", arg: 2, scope: !4628, file: !4594, line: 23, type: !455)
!4634 = !DILocalVariable(name: "align", arg: 3, scope: !4628, file: !4594, line: 24, type: !139)
!4635 = !DILocalVariable(name: "flags", arg: 4, scope: !4628, file: !4594, line: 25, type: !27)
!4636 = !DILocalVariable(name: "precision", arg: 5, scope: !4628, file: !4594, line: 26, type: !910)
!4637 = !DILocalVariable(name: "width", arg: 6, scope: !4628, file: !4594, line: 27, type: !910)
!4638 = !DILocation(line: 22, column: 9, scope: !4628, inlinedAt: !4639)
!4639 = distinct !DILocation(line: 158, column: 9, scope: !4582)
!4640 = !DILocation(line: 23, column: 9, scope: !4628, inlinedAt: !4639)
!4641 = !DILocation(line: 24, column: 9, scope: !4628, inlinedAt: !4639)
!4642 = !DILocation(line: 25, column: 9, scope: !4628, inlinedAt: !4639)
!4643 = !DILocation(line: 26, column: 9, scope: !4628, inlinedAt: !4639)
!4644 = !DILocation(line: 27, column: 9, scope: !4628, inlinedAt: !4639)
!4645 = !DILocation(line: 29, column: 9, scope: !4628, inlinedAt: !4639)
!4646 = !DILocation(line: 22, column: 9, scope: !4628, inlinedAt: !4647)
!4647 = distinct !DILocation(line: 158, column: 9, scope: !4582)
!4648 = !DILocation(line: 23, column: 9, scope: !4628, inlinedAt: !4647)
!4649 = !DILocation(line: 24, column: 9, scope: !4628, inlinedAt: !4647)
!4650 = !DILocation(line: 25, column: 9, scope: !4628, inlinedAt: !4647)
!4651 = !DILocation(line: 26, column: 9, scope: !4628, inlinedAt: !4647)
!4652 = !DILocation(line: 27, column: 9, scope: !4628, inlinedAt: !4647)
!4653 = !DILocation(line: 29, column: 9, scope: !4628, inlinedAt: !4647)
!4654 = !DILocation(line: 164, column: 6, scope: !4582)
!4655 = distinct !DISubprogram(name: "from", linkageName: "_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17h2548eb176786aa14E", scope: !4656, file: !4404, line: 218, type: !4657, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4665)
!4656 = !DINamespace(name: "{impl#7}", scope: !14)
!4657 = !DISubroutineType(types: !4658)
!4658 = !{!13, !4659}
!4659 = !DICompositeType(tag: DW_TAG_structure_type, name: "E820MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !4660, templateParams: !24, identifier: "ae55623be5796e0a2305fb527bd6b6df")
!4660 = !{!4661, !4662, !4663, !4664}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !4659, file: !2, baseType: !22, size: 64, align: 64)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4659, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !4659, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_extended_attributes", scope: !4659, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!4665 = !{!4666, !4667, !4669}
!4666 = !DILocalVariable(name: "region", arg: 1, scope: !4655, file: !4404, line: 218, type: !4659)
!4667 = !DILocalVariable(name: "region_type", scope: !4668, file: !4404, line: 219, type: !26, align: 4)
!4668 = distinct !DILexicalBlock(scope: !4655, file: !4404, line: 219, column: 9)
!4669 = !DILocalVariable(name: "t", scope: !4670, file: !4404, line: 225, type: !27, align: 4)
!4670 = distinct !DILexicalBlock(scope: !4655, file: !4404, line: 225, column: 13)
!4671 = !DILocation(line: 218, column: 13, scope: !4655)
!4672 = !DILocation(line: 219, column: 13, scope: !4668)
!4673 = !DILocation(line: 225, column: 13, scope: !4670)
!4674 = !DILocation(line: 219, column: 27, scope: !4655)
!4675 = !DILocation(line: 225, column: 13, scope: !4655)
!4676 = !DILocalVariable(name: "x", arg: 1, scope: !4677, file: !4594, line: 96, type: !85)
!4677 = distinct !DISubprogram(name: "new_display<u32>", linkageName: "_ZN4core3fmt2rt8Argument11new_display17hc326978b703b938fE", scope: !937, file: !4594, line: 96, type: !4678, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1365, declaration: !4680, retainedNodes: !4681)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{!937, !85}
!4680 = !DISubprogram(name: "new_display<u32>", linkageName: "_ZN4core3fmt2rt8Argument11new_display17hc326978b703b938fE", scope: !937, file: !4594, line: 96, type: !4678, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1365)
!4681 = !{!4676}
!4682 = !DILocation(line: 96, column: 40, scope: !4677, inlinedAt: !4683)
!4683 = distinct !DILocation(line: 225, column: 18, scope: !4670)
!4684 = !DILocalVariable(name: "x", arg: 1, scope: !4685, file: !4594, line: 83, type: !85)
!4685 = distinct !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt2rt8Argument3new17h23ae5b210e0df20cE", scope: !937, file: !4594, line: 83, type: !4686, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1365, declaration: !4689, retainedNodes: !4690)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{!937, !85, !4688}
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !804, size: 64, align: 64, dwarfAddressSpace: 0)
!4689 = !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt2rt8Argument3new17h23ae5b210e0df20cE", scope: !937, file: !4594, line: 83, type: !4686, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1365)
!4690 = !{!4684, !4691}
!4691 = !DILocalVariable(name: "f", arg: 2, scope: !4685, file: !4594, line: 83, type: !4688)
!4692 = !DILocation(line: 83, column: 19, scope: !4685, inlinedAt: !4693)
!4693 = distinct !DILocation(line: 97, column: 9, scope: !4677, inlinedAt: !4683)
!4694 = !DILocation(line: 83, column: 29, scope: !4685, inlinedAt: !4693)
!4695 = !DILocation(line: 92, column: 18, scope: !4685, inlinedAt: !4693)
!4696 = !DILocation(line: 93, column: 6, scope: !4685, inlinedAt: !4693)
!4697 = !DILocation(line: 97, column: 9, scope: !4677, inlinedAt: !4683)
!4698 = !DILocation(line: 225, column: 18, scope: !4670)
!4699 = !DILocation(line: 220, column: 18, scope: !4655)
!4700 = !DILocation(line: 221, column: 18, scope: !4655)
!4701 = !DILocation(line: 222, column: 18, scope: !4655)
!4702 = !DILocation(line: 223, column: 18, scope: !4655)
!4703 = !DILocation(line: 224, column: 18, scope: !4655)
!4704 = !DILocation(line: 228, column: 36, scope: !4668)
!4705 = !DILocation(line: 228, column: 55, scope: !4668)
!4706 = !DILocation(line: 228, column: 75, scope: !4668)
!4707 = !DILocation(line: 228, column: 20, scope: !4668)
!4708 = !DILocation(line: 229, column: 13, scope: !4668)
!4709 = !DILocation(line: 227, column: 9, scope: !4668)
!4710 = !DILocation(line: 231, column: 6, scope: !4655)
!4711 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17h65a57936dc8f0d53E", scope: !4713, file: !4712, line: 53, type: !4718, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4720, retainedNodes: !4721)
!4712 = !DIFile(filename: "src/bootinfo/mod.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "a171ea6c439575860461f3a713fd0ff5")
!4713 = !DICompositeType(tag: DW_TAG_structure_type, name: "BootInfo", scope: !15, file: !2, size: 12608, align: 64, elements: !4714, templateParams: !24, identifier: "b28e80f155116293d1edc87eeb85d3b0")
!4714 = !{!4715, !4716, !4717}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "memory_map", scope: !4713, file: !2, baseType: !94, size: 12352, align: 64)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "tls_template", scope: !4713, file: !2, baseType: !109, size: 192, align: 64, offset: 12352)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "_non_exhaustive", scope: !4713, file: !2, baseType: !123, size: 8, align: 8, offset: 12544)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{!4713, !94, !4206, !22, !22}
!4720 = !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17h65a57936dc8f0d53E", scope: !4713, file: !4712, line: 53, type: !4718, scopeLine: 53, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4721 = !{!4722, !4723, !4724, !4725, !4726}
!4722 = !DILocalVariable(name: "memory_map", arg: 1, scope: !4711, file: !4712, line: 54, type: !94)
!4723 = !DILocalVariable(name: "tls_template", arg: 2, scope: !4711, file: !4712, line: 55, type: !4206)
!4724 = !DILocalVariable(name: "recursive_page_table_addr", arg: 3, scope: !4711, file: !4712, line: 56, type: !22)
!4725 = !DILocalVariable(name: "physical_memory_offset", arg: 4, scope: !4711, file: !4712, line: 57, type: !22)
!4726 = !DILocalVariable(name: "tls_template", scope: !4727, file: !4712, line: 59, type: !109, align: 8)
!4727 = distinct !DILexicalBlock(scope: !4711, file: !4712, line: 59, column: 9)
!4728 = !DILocation(line: 54, column: 9, scope: !4711)
!4729 = !DILocation(line: 55, column: 9, scope: !4711)
!4730 = !DILocation(line: 56, column: 9, scope: !4711)
!4731 = !DILocation(line: 57, column: 9, scope: !4711)
!4732 = !DILocation(line: 59, column: 13, scope: !4727)
!4733 = !DILocation(line: 59, column: 51, scope: !4711)
!4734 = !DILocation(line: 59, column: 28, scope: !4711)
!4735 = !DILocation(line: 66, column: 13, scope: !4727)
!4736 = !DILocation(line: 64, column: 9, scope: !4727)
!4737 = !DILocation(line: 73, column: 6, scope: !4711)
!4738 = distinct !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17h2c1f2a1e21522fd6E", scope: !4713, file: !4712, line: 81, type: !4739, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, declaration: !4742, retainedNodes: !4743)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{!4206, !4741}
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::BootInfo", baseType: !4713, size: 64, align: 64, dwarfAddressSpace: 0)
!4742 = !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17h2c1f2a1e21522fd6E", scope: !4713, file: !4712, line: 81, type: !4739, scopeLine: 81, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4743 = !{!4744}
!4744 = !DILocalVariable(name: "self", arg: 1, scope: !4738, file: !4712, line: 81, type: !4741)
!4745 = !DILocation(line: 81, column: 25, scope: !4738)
!4746 = !DILocation(line: 82, column: 12, scope: !4738)
!4747 = !DILocation(line: 85, column: 13, scope: !4738)
!4748 = !DILocation(line: 82, column: 9, scope: !4738)
!4749 = !DILocation(line: 83, column: 18, scope: !4738)
!4750 = !DILocation(line: 83, column: 13, scope: !4738)
!4751 = !DILocation(line: 87, column: 6, scope: !4738)
!4752 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17hffa72bdc7f4aaa40E", scope: !4753, file: !4404, line: 90, type: !4754, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4756)
!4753 = !DINamespace(name: "{impl#8}", scope: !14)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{!431, !12, !450}
!4756 = !{!4757, !4758}
!4757 = !DILocalVariable(name: "self", arg: 1, scope: !4752, file: !4404, line: 90, type: !12)
!4758 = !DILocalVariable(name: "f", arg: 2, scope: !4752, file: !4404, line: 90, type: !450)
!4759 = !DILocation(line: 90, column: 10, scope: !4752)
!4760 = !DILocation(line: 96, column: 5, scope: !4752)
!4761 = !DILocation(line: 90, column: 15, scope: !4752)
!4762 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17hd446ef1bbee7b292E", scope: !4763, file: !4404, line: 168, type: !4764, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4766)
!4763 = !DINamespace(name: "{impl#21}", scope: !14)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{!431, !60, !450}
!4766 = !{!4767, !4768}
!4767 = !DILocalVariable(name: "self", arg: 1, scope: !4762, file: !4404, line: 168, type: !60)
!4768 = !DILocalVariable(name: "f", arg: 2, scope: !4762, file: !4404, line: 168, type: !450)
!4769 = !DILocation(line: 168, column: 10, scope: !4762)
!4770 = !DILocation(line: 168, column: 14, scope: !4762)
!4771 = !DILocation(line: 168, column: 15, scope: !4762)
!4772 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h60556f8b5704cfd9E", scope: !4773, file: !4404, line: 208, type: !4774, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4777)
!4773 = !DINamespace(name: "{impl#28}", scope: !14)
!4774 = !DISubroutineType(types: !4775)
!4775 = !{!431, !4776, !450}
!4776 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::E820MemoryRegion", baseType: !4659, size: 64, align: 64, dwarfAddressSpace: 0)
!4777 = !{!4778, !4779}
!4778 = !DILocalVariable(name: "self", arg: 1, scope: !4772, file: !4404, line: 208, type: !4776)
!4779 = !DILocalVariable(name: "f", arg: 2, scope: !4772, file: !4404, line: 208, type: !450)
!4780 = !DILocation(line: 208, column: 10, scope: !4772)
!4781 = !DILocation(line: 212, column: 5, scope: !4772)
!4782 = !DILocation(line: 213, column: 5, scope: !4772)
!4783 = !DILocation(line: 214, column: 5, scope: !4772)
!4784 = !DILocation(line: 208, column: 15, scope: !4772)
!4785 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0b168d1c2f1ce0eE", scope: !4786, file: !4712, line: 22, type: !4787, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4789)
!4786 = !DINamespace(name: "{impl#1}", scope: !15)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!431, !4741, !450}
!4789 = !{!4790, !4791}
!4790 = !DILocalVariable(name: "self", arg: 1, scope: !4785, file: !4712, line: 22, type: !4741)
!4791 = !DILocalVariable(name: "f", arg: 2, scope: !4785, file: !4712, line: 22, type: !450)
!4792 = !DILocation(line: 22, column: 10, scope: !4785)
!4793 = !DILocation(line: 45, column: 5, scope: !4785)
!4794 = !DILocation(line: 46, column: 5, scope: !4785)
!4795 = !DILocation(line: 22, column: 15, scope: !4785)
!4796 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h3b4e7e8c05b9f9a9E", scope: !4797, file: !4712, line: 103, type: !4798, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4801)
!4797 = !DINamespace(name: "{impl#2}", scope: !15)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{!431, !4800, !450}
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!4801 = !{!4802, !4803}
!4802 = !DILocalVariable(name: "self", arg: 1, scope: !4796, file: !4712, line: 103, type: !4800)
!4803 = !DILocalVariable(name: "f", arg: 2, scope: !4796, file: !4712, line: 103, type: !450)
!4804 = !DILocation(line: 103, column: 10, scope: !4796)
!4805 = !DILocation(line: 111, column: 5, scope: !4796)
!4806 = !DILocation(line: 115, column: 5, scope: !4796)
!4807 = !DILocation(line: 103, column: 15, scope: !4796)
