; ModuleID = 'bootloader.1d7037a3-cgu.0'
source_filename = "bootloader.1d7037a3-cgu.0"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-obuasi-unknown-none"

%"bootinfo::memory_map::MemoryRegion" = type { { i64, i64 }, i32, [1 x i32] }
%"core::ops::range::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, { ptr, i64 } }
%"core::fmt::UnsafeArg" = type { {} }
%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>" = type { %"bootinfo::memory_map::MemoryRegion" }
%"core::mem::manually_drop::ManuallyDrop<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>" = type { %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>" }
%"core::mem::maybe_uninit::MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>" = type { [3 x i64] }
%"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<bootinfo::memory_map::MemoryRegion>" = type { ptr, {} }
%"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>" = type { [1 x i64] }
%"[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]" = type {}
%"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]" = type { { ptr, i64 }, ptr, ptr }
%"core::option::Option<core::fmt::Arguments<'_>>" = type { [2 x i64], ptr, [3 x i64] }
%"bootinfo::TlsTemplate" = type { i64, i64, i64 }
%"core::option::Option<bootinfo::TlsTemplate>::Some" = type { [1 x i64], %"bootinfo::TlsTemplate" }
%"[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]" = type {}
%"bootinfo::memory_map::MemoryMap" = type { [64 x %"bootinfo::memory_map::MemoryRegion"], i64 }
%"core::fmt::builders::DebugList<'_, '_>" = type { %"core::fmt::builders::DebugInner<'_, '_>" }
%"core::fmt::builders::DebugInner<'_, '_>" = type { ptr, i8, i8, [6 x i8] }
%"core::fmt::rt::v1::FormatSpec" = type { { i64, i64 }, { i64, i64 }, i32, i32, i8, [7 x i8] }
%"core::fmt::rt::v1::Argument" = type { %"core::fmt::rt::v1::FormatSpec", i64 }
%"bootinfo::memory_map::E820MemoryRegion" = type { i64, i64, i32, i32 }
%"bootinfo::BootInfo" = type { %"bootinfo::memory_map::MemoryMap", %"bootinfo::TlsTemplate", i8, [7 x i8] }
%"core::option::Option<bootinfo::TlsTemplate>" = type { i64, [3 x i64] }

@alloc308 = private unnamed_addr constant <{ [111 x i8] }> <{ [111 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs" }>, align 1
@alloc306 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc308, [16 x i8] c"o\00\00\00\00\00\00\00\82\01\00\00G\00\00\00" }>, align 8
@str.0 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc307 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the range is within the slice" }>, align 1
@alloc309 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc308, [16 x i8] c"o\00\00\00\00\00\00\00\90\01\00\00O\00\00\00" }>, align 8
@alloc310 = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: slice::get_unchecked_mut requires that the range is within the slice" }>, align 1
@alloc315 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs" }>, align 1
@alloc312 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc315, [16 x i8] c"n\00\00\00\00\00\00\00\D0\08\00\007\00\00\00" }>, align 8
@alloc314 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc315, [16 x i8] c"n\00\00\00\00\00\00\00\D1\08\00\00+\00\00\00" }>, align 8
@alloc316 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc315, [16 x i8] c"n\00\00\00\00\00\00\00\D1\08\00\00J\00\00\00" }>, align 8
@alloc318 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc320 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned aligned and non-null" }>, align 1
@vtable.1 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17hf778883e36c7f693E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6021ca7e6427facaE" }>, align 8, !dbg !0
@alloc326 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc325 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc326, [16 x i8] c"k\00\00\00\00\00\00\00\92\01\00\008\00\00\00" }>, align 8
@str.2 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc81 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc80 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc81, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc78 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc327 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc326, [16 x i8] c"k\00\00\00\00\00\00\00\93\01\00\00\0D\00\00\00" }>, align 8
@alloc328 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs" }>, align 1
@alloc329 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc328, [16 x i8] c"k\00\00\00\00\00\00\00\DE\02\00\00\0C\00\00\00" }>, align 8
@str.3 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc330 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs" }>, align 1
@alloc331 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc330, [16 x i8] c"k\00\00\00\00\00\00\00\A6\04\00\00\05\00\00\00" }>, align 8
@str.4 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc332 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs" }>, align 1
@alloc333 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc332, [16 x i8] c"m\00\00\00\00\00\00\00\CA\01\00\00\1D\00\00\00" }>, align 8
@alloc343 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc335 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc343, [16 x i8] c"k\00\00\00\00\00\00\00\AC\03\00\00&\00\00\00" }>, align 8
@str.5 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc337 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc343, [16 x i8] c"k\00\00\00\00\00\00\00\AE\03\00\00\09\00\00\00" }>, align 8
@str.6 = internal constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc339 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc343, [16 x i8] c"k\00\00\00\00\00\00\00\AF\03\00\00\09\00\00\00" }>, align 8
@alloc340 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::swap_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc342 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc343, [16 x i8] c"k\00\00\00\00\00\00\00\C8\03\00\00\09\00\00\00" }>, align 8
@alloc344 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc343, [16 x i8] c"k\00\00\00\00\00\00\00\86\04\00\00\0D\00\00\00" }>, align 8
@alloc346 = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null" }>, align 1
@alloc348 = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null" }>, align 1
@alloc349 = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc355 = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc351 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc355, [16 x i8] c"q\00\00\00\00\00\00\00#\06\00\00\1A\00\00\00" }>, align 8
@alloc76 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc75 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc76, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc353 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc355, [16 x i8] c"q\00\00\00\00\00\00\00\1E\06\00\00\0D\00\00\00" }>, align 8
@alloc354 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc356 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc355, [16 x i8] c"q\00\00\00\00\00\00\00\1C\03\00\00\09\00\00\00" }>, align 8
@alloc357 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"unsafe precondition(s) violated: ptr::sub_ptr requires `this >= origin`" }>, align 1
@alloc358 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc69 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\FF" }>, align 1
@alloc378 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc360 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc378, [16 x i8] c"m\00\00\00\00\00\00\00\D7\06\00\00M\00\00\00" }>, align 8
@alloc361 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: slice::split_at_mut_unchecked requires the index to be within the slice" }>, align 1
@alloc362 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: a.len() == n" }>, align 1
@alloc364 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc378, [16 x i8] c"m\00\00\00\00\00\00\00\C3\02\00\00\0D\00\00\00" }>, align 8
@alloc365 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: b.len() == n" }>, align 1
@alloc367 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc378, [16 x i8] c"m\00\00\00\00\00\00\00\C4\02\00\00\0D\00\00\00" }>, align 8
@alloc369 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc378, [16 x i8] c"m\00\00\00\00\00\00\00\CA\02\00\00 \00\00\00" }>, align 8
@alloc371 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc378, [16 x i8] c"m\00\00\00\00\00\00\00\CA\02\00\00-\00\00\00" }>, align 8
@alloc373 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc378, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00 \00\00\00" }>, align 8
@alloc375 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc378, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00-\00\00\00" }>, align 8
@alloc377 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc378, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00+\00\00\00" }>, align 8
@alloc379 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc378, [16 x i8] c"m\00\00\00\00\00\00\00\CF\02\00\00\11\00\00\00" }>, align 8
@alloc380 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc386 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: v.len() >= 2" }>, align 1
@alloc545 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs" }>, align 1
@alloc383 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\\\00\00\00\05\00\00\00" }>, align 8
@alloc385 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\87\00\00\00F\00\00\00" }>, align 8
@alloc388 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00'\00\00\00\05\00\00\00" }>, align 8
@alloc390 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00*\00\00\00\0D\00\00\00" }>, align 8
@alloc392 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00G\00\00\00\1A\00\00\00" }>, align 8
@alloc394 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\DB\02\00\00\11\00\00\00" }>, align 8
@alloc396 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\DC\02\00\00\11\00\00\00" }>, align 8
@alloc398 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\DD\02\00\00\11\00\00\00" }>, align 8
@alloc400 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\0F\03\00\00\0A\00\00\00" }>, align 8
@alloc402 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\ED\02\00\00\11\00\00\00" }>, align 8
@alloc404 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\FC\02\00\00\1C\00\00\00" }>, align 8
@alloc406 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\FC\02\00\00/\00\00\00" }>, align 8
@alloc408 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\B9\02\00\00\13\00\00\00" }>, align 8
@alloc410 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\BF\02\00\00+\00\00\00" }>, align 8
@alloc412 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\C3\02\00\00\11\00\00\00" }>, align 8
@alloc414 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\C6\02\00\00\14\00\00\00" }>, align 8
@alloc416 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\C6\02\00\00\0F\00\00\00" }>, align 8
@alloc418 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00l\02\00\00\07\00\00\00" }>, align 8
@alloc420 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00m\02\00\00\18\00\00\00" }>, align 8
@alloc422 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00n\02\00\00\16\00\00\00" }>, align 8
@alloc424 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\82\02\00\00\11\00\00\00" }>, align 8
@alloc426 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\86\02\00\00;\00\00\00" }>, align 8
@alloc428 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\87\02\00\00\11\00\00\00" }>, align 8
@alloc430 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\98\02\00\00\05\00\00\00" }>, align 8
@alloc432 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\90\02\00\00\0D\00\00\00" }>, align 8
@alloc434 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\93\02\00\00\0D\00\00\00" }>, align 8
@alloc436 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00e\01\00\00\11\00\00\00" }>, align 8
@alloc438 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00s\01\00\00\1B\00\00\00" }>, align 8
@alloc439 = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"assertion failed: block_l <= BLOCK && block_r <= BLOCK" }>, align 1
@alloc441 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00u\01\00\00\0D\00\00\00" }>, align 8
@alloc443 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00*\00\00\00" }>, align 8
@alloc444 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"assertion failed: width(l, r) == block_l + block_r" }>, align 1
@alloc446 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00\0D\00\00\00" }>, align 8
@alloc448 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\D2\01\00\00*\00\00\00" }>, align 8
@alloc450 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\D6\01\00\007\00\00\00" }>, align 8
@alloc452 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\D8\01\00\00.\00\00\00" }>, align 8
@alloc454 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\DB\01\00\000\00\00\00" }>, align 8
@alloc456 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\02\02\00\00\09\00\00\00" }>, align 8
@alloc458 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\19\02\00\00\09\00\00\00" }>, align 8
@alloc460 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\1E\02\00\00$\00\00\00" }>, align 8
@alloc466 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: mem::size_of::<T>() > 0" }>, align 1
@alloc463 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00V\01\00\00\09\00\00\00" }>, align 8
@alloc465 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00Y\01\00\00\09\00\00\00" }>, align 8
@alloc468 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\D7\00\00\00K\00\00\00" }>, align 8
@alloc470 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\D8\00\00\00\11\00\00\00" }>, align 8
@alloc472 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\10\00\00\00" }>, align 8
@alloc474 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\0B\00\00\00" }>, align 8
@alloc476 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\00,\00\00\00" }>, align 8
@alloc478 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\004\00\00\00" }>, align 8
@alloc480 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\EE\00\00\00-\00\00\00" }>, align 8
@alloc481 = private unnamed_addr constant <{ [46 x i8] }> <{ [46 x i8] c"assertion failed: offset != 0 && offset <= len" }>, align 1
@alloc483 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\9B\00\00\00\05\00\00\00" }>, align 8
@alloc485 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\A3\00\00\00\1E\00\00\00" }>, align 8
@alloc486 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"assertion failed: offset != 0 && offset <= len && len >= 2" }>, align 1
@alloc488 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\B4\00\00\00\05\00\00\00" }>, align 8
@alloc490 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\BD\00\00\00\1E\00\00\00" }>, align 8
@alloc492 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00;\03\00\00\0D\00\00\00" }>, align 8
@alloc494 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00O\03\00\00\1D\00\00\00" }>, align 8
@alloc496 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00S\03\00\00\1A\00\00\00" }>, align 8
@alloc498 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00Z\03\00\00&\00\00\00" }>, align 8
@alloc500 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00^\03\00\00\1F\00\00\00" }>, align 8
@alloc502 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00_\03\00\00$\00\00\00" }>, align 8
@alloc504 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00`\03\00\00\16\00\00\00" }>, align 8
@alloc506 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00 \01\00\00\0B\00\00\00" }>, align 8
@alloc508 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00!\01\00\00\18\00\00\00" }>, align 8
@alloc510 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\01\01\00\00\1D\00\00\00" }>, align 8
@alloc512 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\07\01\00\00\10\00\00\00" }>, align 8
@alloc514 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00#\00\00\00" }>, align 8
@alloc516 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\000\00\00\00" }>, align 8
@alloc518 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00.\00\00\00" }>, align 8
@alloc520 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00\11\00\00\00" }>, align 8
@alloc522 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00\1A\00\00\00" }>, align 8
@alloc524 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00$\00\00\00" }>, align 8
@alloc526 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00\14\01\00\00\0F\00\00\00" }>, align 8
@alloc528 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\006\02\00\00\0B\00\00\00" }>, align 8
@alloc530 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\007\02\00\00\1C\00\00\00" }>, align 8
@alloc532 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\008\02\00\00\1A\00\00\00" }>, align 8
@alloc534 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00M\02\00\00\11\00\00\00" }>, align 8
@alloc536 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00Q\02\00\005\00\00\00" }>, align 8
@alloc538 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00R\02\00\00\11\00\00\00" }>, align 8
@alloc540 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00'\00\00\00" }>, align 8
@alloc542 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00\0A\00\00\00" }>, align 8
@alloc544 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00^\02\00\00\07\00\00\00" }>, align 8
@alloc546 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc545, [16 x i8] c"n\00\00\00\00\00\00\00{\03\00\00\11\00\00\00" }>, align 8
@alloc547 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the index is within the slice" }>, align 1
@alloc548 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs" }>, align 1
@alloc549 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc548, [16 x i8] c"n\00\00\00\00\00\00\00\81\00\00\00\01\00\00\00" }>, align 8
@alloc550 = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"too many memory regions in memory map" }>, align 1
@alloc571 = private unnamed_addr constant <{ [103 x i8] }> <{ [103 x i8] c"/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs" }>, align 1
@alloc552 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00\1C\00\00\00\09\00\00\00" }>, align 8
@alloc554 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00 \00\00\00\09\00\00\00" }>, align 8
@alloc556 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00!\00\00\00\09\00\00\00" }>, align 8
@alloc71 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc558 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00H\00\00\00\0A\00\00\00" }>, align 8
@alloc560 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00O\00\00\00\0E\00\00\00" }>, align 8
@alloc562 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00\85\00\00\00\19\00\00\00" }>, align 8
@alloc564 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00\88\00\00\00\1F\00\00\00" }>, align 8
@alloc566 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00\93\00\00\00\09\00\00\00" }>, align 8
@alloc568 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00\98\00\00\00\09\00\00\00" }>, align 8
@alloc127 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"FrameRange(" }>, align 1
@alloc128 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".." }>, align 1
@alloc129 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc126 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc127, [8 x i8] c"\0B\00\00\00\00\00\00\00", ptr @alloc128, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc129, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc241 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"invalid region type " }>, align 1
@alloc240 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc241, [8 x i8] c"\14\00\00\00\00\00\00\00" }>, align 8
@alloc570 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00\E1\00\00\00\12\00\00\00" }>, align 8
@alloc572 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc571, [16 x i8] c"g\00\00\00\00\00\00\00\E4\00\00\007\00\00\00" }>, align 8
@alloc573 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"MemoryRegion" }>, align 1
@alloc574 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"range" }>, align 1
@vtable.7 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h62b29fe4400e8c9eE", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h5c9a52575bd523d7E" }>, align 8, !dbg !44
@alloc603 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"region_type" }>, align 1
@vtable.8 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h2deb57f46a4a201eE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb740925c6eb3f5d4E" }>, align 8, !dbg !52
@alloc582 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"NonExhaustive" }>, align 1
@alloc583 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Package" }>, align 1
@alloc611 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"BootInfo" }>, align 1
@alloc585 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc586 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"FrameZero" }>, align 1
@alloc587 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"Bootloader" }>, align 1
@alloc588 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"PageTable" }>, align 1
@alloc589 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"KernelStack" }>, align 1
@alloc590 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Kernel" }>, align 1
@alloc591 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"BadMemory" }>, align 1
@alloc592 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"AcpiNvs" }>, align 1
@alloc593 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"AcpiReclaimable" }>, align 1
@alloc594 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Reserved" }>, align 1
@alloc595 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"InUse" }>, align 1
@alloc596 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Usable" }>, align 1
@alloc597 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"E820MemoryRegion" }>, align 1
@alloc625 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"start_addr" }>, align 1
@vtable.9 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17h707625e6c97aabb3E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17hb863c40d86c7fdd5E" }>, align 8, !dbg !61
@alloc602 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"len" }>, align 1
@vtable.a = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17h3ddda93f5d2fc92fE", [16 x i8] c"\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h5b1a2ebb45fc8c47E" }>, align 8, !dbg !69
@alloc607 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"acpi_extended_attributes" }>, align 1
@vtable.b = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h9f4315a52c3a60e0E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7f8fe1f5d6bf54ddE" }>, align 8, !dbg !77
@alloc612 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"memory_map" }>, align 1
@vtable.c = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17hf1197bdd632281c1E", [16 x i8] c"\08\06\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17haef581e8293cb4faE" }>, align 8, !dbg !86
@alloc616 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"tls_template" }>, align 1
@vtable.d = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17h283cfac31f5bb3e5E", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e156cacff61ac68E" }>, align 8, !dbg !101
@alloc620 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"_non_exhaustive" }>, align 1
@vtable.e = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17hece34ee525e599f5E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he93ca6f7cd20c366E" }>, align 8, !dbg !114
@alloc624 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"TlsTemplate" }>, align 1
@alloc626 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"file_size" }>, align 1
@alloc627 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"mem_size" }>, align 1
@vtable.f = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17ha705ee9fc1ef02fcE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h344f5f5bec46977eE" }>, align 8, !dbg !124

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8f234a53d6bfd06E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !163 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_7 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !184, metadata !DIExpression()), !dbg !190
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !185, metadata !DIExpression()), !dbg !191
  call void @llvm.dbg.declare(metadata ptr %this, metadata !186, metadata !DIExpression()), !dbg !192
  store i64 %self.0, ptr %this, align 8, !dbg !193
  %5 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !193
  store i64 %self.1, ptr %5, align 8, !dbg !193
  %6 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !194
  %7 = load i64, ptr %6, align 8, !dbg !194, !noundef !24
  %8 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !194
  %9 = load i64, ptr %8, align 8, !dbg !194, !noundef !24
  %10 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !194
  store i64 %7, ptr %10, align 8, !dbg !194
  %11 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !194
  store i64 %9, ptr %11, align 8, !dbg !194
  %12 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !194
  %13 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 0, !dbg !194
  store ptr %slice.0, ptr %13, align 8, !dbg !194
  %14 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 1, !dbg !194
  store i64 %slice.1, ptr %14, align 8, !dbg !194
  %15 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !194
  %16 = load i64, ptr %15, align 8, !dbg !194, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !194
  %18 = load i64, ptr %17, align 8, !dbg !194, !noundef !24
  %19 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !194
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !194
  %21 = load ptr, ptr %20, align 8, !dbg !194, !noundef !24
  %22 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !194
  %23 = load i64, ptr %22, align 8, !dbg !194, !noundef !24
  store i64 %16, ptr %this.dbg.spill.i, align 8
  %24 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %18, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !195, metadata !DIExpression()), !dbg !203
  store ptr %21, ptr %slice.dbg.spill.i, align 8
  %25 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %23, ptr %25, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !202, metadata !DIExpression()), !dbg !203
  %_5.i = icmp uge i64 %18, %16, !dbg !205
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !205

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !205
  br label %bb3.i, !dbg !205

bb2.i:                                            ; preds = %start
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h1865381c5371083cE"(ptr %21, i64 %23) #10, !dbg !207
  %_8.i = icmp ule i64 %18, %_10.i, !dbg !208
  %26 = zext i1 %_8.i to i8, !dbg !205
  store i8 %26, ptr %_4.i, align 1, !dbg !205
  br label %bb3.i, !dbg !205

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %27 = load i8, ptr %_4.i, align 1, !dbg !209, !range !210, !noundef !24
  %28 = trunc i8 %27 to i1, !dbg !209
  %_3.i = xor i1 %28, true, !dbg !209
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hd10520e92da969e3E.exit", !dbg !209

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc307, i64 97) #11, !dbg !211
  unreachable, !dbg !211

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hd10520e92da969e3E.exit": ; preds = %bb3.i
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_9 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17haa644275dcb538efE"(ptr %slice.0, i64 %slice.1) #10, !dbg !212
  store ptr %_9, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !213, metadata !DIExpression()), !dbg !224
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !223, metadata !DIExpression()), !dbg !226
  store ptr %_9, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !227, metadata !DIExpression()), !dbg !234
  store i64 %self.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !233, metadata !DIExpression()), !dbg !236
  %29 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_9, i64 %self.0, !dbg !237
  store ptr %29, ptr %0, align 8, !dbg !237
  %30 = load ptr, ptr %0, align 8, !dbg !237, !noundef !24
  %_14.0 = sub i64 %self.1, %self.0, !dbg !238
  %_14.1 = icmp ult i64 %self.1, %self.0, !dbg !238
  %31 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false), !dbg !238
  br i1 %31, label %panic, label %bb4, !dbg !238

bb4:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hd10520e92da969e3E.exit"
; call core::ptr::slice_from_raw_parts
  %32 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h81e5ec8f89303343E(ptr %30, i64 %_14.0) #10, !dbg !239
  %33 = extractvalue { ptr, i64 } %32, 0, !dbg !239
  %34 = extractvalue { ptr, i64 } %32, 1, !dbg !239
  %35 = insertvalue { ptr, i64 } undef, ptr %33, 0, !dbg !240
  %36 = insertvalue { ptr, i64 } %35, i64 %34, 1, !dbg !240
  ret { ptr, i64 } %36, !dbg !240

panic:                                            ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hd10520e92da969e3E.exit"
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc306) #11, !dbg !238
  unreachable, !dbg !238
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h15f541329c45e716E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !241 {
start:
  %self.dbg.spill.i5 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i4 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_7 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !249, metadata !DIExpression()), !dbg !253
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !250, metadata !DIExpression()), !dbg !254
  call void @llvm.dbg.declare(metadata ptr %this, metadata !251, metadata !DIExpression()), !dbg !255
  store i64 %self.0, ptr %this, align 8, !dbg !256
  %5 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !256
  store i64 %self.1, ptr %5, align 8, !dbg !256
  %6 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !257
  %7 = load i64, ptr %6, align 8, !dbg !257, !noundef !24
  %8 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !257
  %9 = load i64, ptr %8, align 8, !dbg !257, !noundef !24
  %10 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !257
  store i64 %7, ptr %10, align 8, !dbg !257
  %11 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !257
  store i64 %9, ptr %11, align 8, !dbg !257
  %12 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !257
  %13 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 0, !dbg !257
  store ptr %slice.0, ptr %13, align 8, !dbg !257
  %14 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 1, !dbg !257
  store i64 %slice.1, ptr %14, align 8, !dbg !257
  %15 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !257
  %16 = load i64, ptr %15, align 8, !dbg !257, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !257
  %18 = load i64, ptr %17, align 8, !dbg !257, !noundef !24
  %19 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !257
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !257
  %21 = load ptr, ptr %20, align 8, !dbg !257, !noundef !24
  %22 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !257
  %23 = load i64, ptr %22, align 8, !dbg !257, !noundef !24
  store i64 %16, ptr %this.dbg.spill.i, align 8
  %24 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %18, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !258, metadata !DIExpression()), !dbg !265
  store ptr %21, ptr %slice.dbg.spill.i, align 8
  %25 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %23, ptr %25, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !264, metadata !DIExpression()), !dbg !265
  %_5.i = icmp uge i64 %18, %16, !dbg !267
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !267

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !267
  br label %bb3.i, !dbg !267

bb2.i:                                            ; preds = %start
  store ptr %21, ptr %self.dbg.spill.i5, align 8
  %26 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i5, i32 0, i32 1
  store i64 %23, ptr %26, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !269, metadata !DIExpression()), !dbg !277
; call core::ptr::metadata::metadata
  %27 = call i64 @_ZN4core3ptr8metadata8metadata17h28e9a44b1a4defa6E(ptr %21, i64 %23) #10, !dbg !279
  %_8.i = icmp ule i64 %18, %27, !dbg !280
  %28 = zext i1 %_8.i to i8, !dbg !267
  store i8 %28, ptr %_4.i, align 1, !dbg !267
  br label %bb3.i, !dbg !267

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %29 = load i8, ptr %_4.i, align 1, !dbg !281, !range !210, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !281
  %_3.i = xor i1 %30, true, !dbg !281
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h98ec7ac4b28f8648E.exit", !dbg !281

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc310, i64 101) #11, !dbg !282
  unreachable, !dbg !282

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h98ec7ac4b28f8648E.exit": ; preds = %bb3.i
  store ptr %slice.0, ptr %self.dbg.spill.i4, align 8
  %31 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i4, i32 0, i32 1
  store i64 %slice.1, ptr %31, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !283, metadata !DIExpression()), !dbg !289
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !291, metadata !DIExpression()), !dbg !298
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !297, metadata !DIExpression()), !dbg !300
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !301, metadata !DIExpression()), !dbg !307
  store i64 %self.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !306, metadata !DIExpression()), !dbg !309
  %32 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %self.0, !dbg !310
  store ptr %32, ptr %0, align 8, !dbg !310
  %_3.i3 = load ptr, ptr %0, align 8, !dbg !310, !noundef !24
  %_14.0 = sub i64 %self.1, %self.0, !dbg !311
  %_14.1 = icmp ult i64 %self.1, %self.0, !dbg !311
  %33 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false), !dbg !311
  br i1 %33, label %panic, label %bb4, !dbg !311

bb4:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h98ec7ac4b28f8648E.exit"
; call core::ptr::slice_from_raw_parts_mut
  %34 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4f44642fed623530E(ptr %_3.i3, i64 %_14.0) #10, !dbg !312
  %35 = extractvalue { ptr, i64 } %34, 0, !dbg !312
  %36 = extractvalue { ptr, i64 } %34, 1, !dbg !312
  %37 = insertvalue { ptr, i64 } undef, ptr %35, 0, !dbg !313
  %38 = insertvalue { ptr, i64 } %37, i64 %36, 1, !dbg !313
  ret { ptr, i64 } %38, !dbg !313

panic:                                            ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h98ec7ac4b28f8648E.exit"
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc309) #11, !dbg !311
  unreachable, !dbg !311
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h287b66d601df05f8E"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !314 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !335, metadata !DIExpression()), !dbg !337
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !336, metadata !DIExpression()), !dbg !338
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !339
  br i1 %_3, label %bb1, label %bb2, !dbg !339

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !340
  br i1 %_9, label %bb3, label %bb4, !dbg !340

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha8d155eada135263E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !341
  unreachable, !dbg !341

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8f234a53d6bfd06E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !342
  %_15.0 = extractvalue { ptr, i64 } %5, 0, !dbg !342
  %_15.1 = extractvalue { ptr, i64 } %5, 1, !dbg !342
  %6 = insertvalue { ptr, i64 } undef, ptr %_15.0, 0, !dbg !343
  %7 = insertvalue { ptr, i64 } %6, i64 %_15.1, 1, !dbg !343
  ret { ptr, i64 } %7, !dbg !343

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hd239870e8b428734E(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !344
  unreachable, !dbg !344
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h997e6282d5db556bE"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !345 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !353, metadata !DIExpression()), !dbg !355
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !354, metadata !DIExpression()), !dbg !356
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !357
  br i1 %_3, label %bb1, label %bb2, !dbg !357

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !358
  br i1 %_9, label %bb3, label %bb4, !dbg !358

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha8d155eada135263E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !359
  unreachable, !dbg !359

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h15f541329c45e716E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !360
  %_17.0 = extractvalue { ptr, i64 } %5, 0, !dbg !360
  %_17.1 = extractvalue { ptr, i64 } %5, 1, !dbg !360
  %6 = insertvalue { ptr, i64 } undef, ptr %_17.0, 0, !dbg !361
  %7 = insertvalue { ptr, i64 } %6, i64 %_17.1, 1, !dbg !361
  ret { ptr, i64 } %7, !dbg !361

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hd239870e8b428734E(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !362
  unreachable, !dbg !362
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5412c5f9bbbd53aeE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !363 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !371, metadata !DIExpression()), !dbg !373
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !372, metadata !DIExpression()), !dbg !374
  store i64 0, ptr %_4, align 8, !dbg !375
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !375
  store i64 %self, ptr %3, align 8, !dbg !375
  %4 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !375
  %5 = load i64, ptr %4, align 8, !dbg !375, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !375
  %7 = load i64, ptr %6, align 8, !dbg !375, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h997e6282d5db556bE"(i64 %5, i64 %7, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !375
  %_3.0 = extractvalue { ptr, i64 } %8, 0, !dbg !375
  %_3.1 = extractvalue { ptr, i64 } %8, 1, !dbg !375
  %9 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !376
  %10 = insertvalue { ptr, i64 } %9, i64 %_3.1, 1, !dbg !376
  ret { ptr, i64 } %10, !dbg !376
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h4d6bf24801eca16eE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !377 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !385, metadata !DIExpression()), !dbg !387
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !386, metadata !DIExpression()), !dbg !388
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !269, metadata !DIExpression()), !dbg !389
; call core::ptr::metadata::metadata
  %3 = call i64 @_ZN4core3ptr8metadata8metadata17h28e9a44b1a4defa6E(ptr %slice.0, i64 %slice.1) #10, !dbg !391
  store i64 %self, ptr %_3, align 8, !dbg !392
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !392
  store i64 %3, ptr %4, align 8, !dbg !392
  %5 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !392
  %6 = load i64, ptr %5, align 8, !dbg !392, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !392
  %8 = load i64, ptr %7, align 8, !dbg !392, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %9 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h15f541329c45e716E"(i64 %6, i64 %8, ptr %slice.0, i64 %slice.1) #10, !dbg !392
  %10 = extractvalue { ptr, i64 } %9, 0, !dbg !392
  %11 = extractvalue { ptr, i64 } %9, 1, !dbg !392
  %12 = insertvalue { ptr, i64 } undef, ptr %10, 0, !dbg !393
  %13 = insertvalue { ptr, i64 } %12, i64 %11, 1, !dbg !393
  ret { ptr, i64 } %13, !dbg !393
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h228b6d3bd03ce9c7E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !394 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !398, metadata !DIExpression()), !dbg !400
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !399, metadata !DIExpression()), !dbg !401
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !402
  br i1 %_3, label %bb1, label %bb2, !dbg !402

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h4d6bf24801eca16eE"(i64 %self, ptr %slice.0, i64 %slice.1) #10, !dbg !403
  %_11.0 = extractvalue { ptr, i64 } %3, 0, !dbg !403
  %_11.1 = extractvalue { ptr, i64 } %3, 1, !dbg !403
  %4 = insertvalue { ptr, i64 } undef, ptr %_11.0, 0, !dbg !404
  %5 = insertvalue { ptr, i64 } %4, i64 %_11.1, 1, !dbg !404
  ret { ptr, i64 } %5, !dbg !404

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17he99f38bedb4c6ea0E(i64 %self, i64 %slice.1, ptr align 8 %0) #11, !dbg !405
  unreachable, !dbg !405
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9378c84f89e88f47E"(ptr %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !406 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8, !dbg !419
  call void @llvm.dbg.declare(metadata ptr %self, metadata !417, metadata !DIExpression()), !dbg !419
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !418, metadata !DIExpression()), !dbg !420
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h2a5a6aea613c6daaE"(ptr align 8 %self) #10, !dbg !421
  %_4 = load i64, ptr %_5, align 8, !dbg !422, !noundef !24
  %_3 = icmp eq i64 %_4, -1, !dbg !422
  br i1 %_3, label %bb2, label %bb3, !dbg !422

bb3:                                              ; preds = %start
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %3 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17hac9cc18aac0fdaffE"(ptr %self) #10, !dbg !423
  %_9.0 = extractvalue { i64, i64 } %3, 0, !dbg !423
  %_9.1 = extractvalue { i64, i64 } %3, 1, !dbg !423
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h997e6282d5db556bE"(i64 %_9.0, i64 %_9.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !423
  %_8.0 = extractvalue { ptr, i64 } %4, 0, !dbg !423
  %_8.1 = extractvalue { ptr, i64 } %4, 1, !dbg !423
  %5 = insertvalue { ptr, i64 } undef, ptr %_8.0, 0, !dbg !424
  %6 = insertvalue { ptr, i64 } %5, i64 %_8.1, 1, !dbg !424
  ret { ptr, i64 } %6, !dbg !424

bb2:                                              ; preds = %start
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17h991e77de43ce5040E(ptr align 8 %0) #11, !dbg !425
  unreachable, !dbg !425
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17heb0f1984c841e2a1E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !426 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !434, metadata !DIExpression()), !dbg !436
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !435, metadata !DIExpression()), !dbg !437
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h6649209037e05de7E"(ptr sret(%"core::ops::range::RangeInclusive<usize>") %_4, i64 0, i64 %self) #10, !dbg !438
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9378c84f89e88f47E"(ptr %_4, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !438
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !438
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !438
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !439
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !439
  ret { ptr, i64 } %5, !dbg !439
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6021ca7e6427facaE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !440 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !499, metadata !DIExpression()), !dbg !501
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !500, metadata !DIExpression()), !dbg !502
  %_3 = load ptr, ptr %self, align 8, !dbg !503, !nonnull !24, !align !504, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h6cda603356b72d76E"(ptr align 8 %_3, ptr align 8 %f) #10, !dbg !505
  ret i1 %0, !dbg !506
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb740925c6eb3f5d4E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !507 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !512, metadata !DIExpression()), !dbg !516
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !513, metadata !DIExpression()), !dbg !517
  %_3 = load ptr, ptr %self, align 8, !dbg !518, !nonnull !24, !align !519, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17hb288a4d2801ef922E"(ptr align 4 %_3, ptr align 8 %f) #10, !dbg !520
  ret i1 %0, !dbg !521
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hadd98891bdebc46aE(ptr %src, ptr %dst, i64 %count) unnamed_addr #1 !dbg !522 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %diff = alloca i64, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !527, metadata !DIExpression()), !dbg !538
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !528, metadata !DIExpression()), !dbg !539
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !529, metadata !DIExpression()), !dbg !540
  call void @llvm.dbg.declare(metadata ptr %diff, metadata !536, metadata !DIExpression()), !dbg !541
  store ptr %src, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !542, metadata !DIExpression()), !dbg !547
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !549, metadata !DIExpression()), !dbg !556
  store ptr %src, ptr %0, align 8, !dbg !558
  %2 = load i64, ptr %0, align 8, !dbg !558, !noundef !24
  store i64 %2, ptr %src_usize.dbg.spill, align 8, !dbg !559
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !530, metadata !DIExpression()), !dbg !560
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !542, metadata !DIExpression()), !dbg !561
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !549, metadata !DIExpression()), !dbg !563
  store ptr %dst, ptr %1, align 8, !dbg !565
  %3 = load i64, ptr %1, align 8, !dbg !565, !noundef !24
  store i64 %3, ptr %dst_usize.dbg.spill, align 8, !dbg !566
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !532, metadata !DIExpression()), !dbg !567
; call core::num::<impl usize>::checked_mul
  %4 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h72c30a1e2370563bE"(i64 24, i64 %count) #10, !dbg !568
  %_7.0 = extractvalue { i64, i64 } %4, 0, !dbg !568
  %_7.1 = extractvalue { i64, i64 } %4, 1, !dbg !568
; call core::option::Option<T>::unwrap
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd77e6df17bcce7e4E"(i64 %_7.0, i64 %_7.1, ptr align 8 @alloc312) #10, !dbg !568
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !568
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !534, metadata !DIExpression()), !dbg !569
  %_10 = icmp ugt i64 %2, %3, !dbg !570
  br i1 %_10, label %bb6, label %bb8, !dbg !570

bb8:                                              ; preds = %start
  %_18.0 = sub i64 %3, %2, !dbg !571
  %_18.1 = icmp ult i64 %3, %2, !dbg !571
  %5 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !571
  br i1 %5, label %panic1, label %bb9, !dbg !571

bb6:                                              ; preds = %start
  %_15.0 = sub i64 %2, %3, !dbg !572
  %_15.1 = icmp ult i64 %2, %3, !dbg !572
  %6 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !572
  br i1 %6, label %panic, label %bb7, !dbg !572

bb7:                                              ; preds = %bb6
  store i64 %_15.0, ptr %diff, align 8, !dbg !572
  br label %bb10, !dbg !573

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc314) #11, !dbg !572
  unreachable, !dbg !572

bb10:                                             ; preds = %bb9, %bb7
  %_19 = load i64, ptr %diff, align 8, !dbg !574, !noundef !24
  %7 = icmp uge i64 %_19, %size, !dbg !574
  ret i1 %7, !dbg !575

bb9:                                              ; preds = %bb8
  store i64 %_18.0, ptr %diff, align 8, !dbg !571
  br label %bb10, !dbg !573

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc316) #11, !dbg !571
  unreachable, !dbg !571
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !576 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !580, metadata !DIExpression()), !dbg !583
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !581, metadata !DIExpression()), !dbg !584
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !582, metadata !DIExpression()), !dbg !585
  store ptr %src, ptr %_5, align 8, !dbg !586
  %0 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !586
  store ptr %dst, ptr %0, align 8, !dbg !586
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !586
  store i64 %count, ptr %1, align 8, !dbg !586
  %2 = load ptr, ptr %_5, align 8, !dbg !586, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !586
  %4 = load ptr, ptr %3, align 8, !dbg !586, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !586
  %6 = load i64, ptr %5, align 8, !dbg !586, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !587, metadata !DIExpression()), !dbg !593
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !591, metadata !DIExpression()), !dbg !593
  store i64 %6, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !592, metadata !DIExpression()), !dbg !593
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %2) #10, !dbg !595
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !595

bb4.i:                                            ; preds = %start
  store i8 0, ptr %_6.i, align 1, !dbg !595
  br label %bb6.i, !dbg !595

bb5.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %4) #10, !dbg !596
  %7 = zext i1 %_8.i to i8, !dbg !595
  store i8 %7, ptr %_6.i, align 1, !dbg !595
  br label %bb6.i, !dbg !595

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %8 = load i8, ptr %_6.i, align 1, !dbg !595, !range !210, !noundef !24
  %9 = trunc i8 %8 to i1, !dbg !595
  br i1 %9, label %bb2.i, label %bb1.i, !dbg !595

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !595
  br label %bb3.i, !dbg !595

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hadd98891bdebc46aE(ptr %2, ptr %4, i64 %6) #10, !dbg !597
  %10 = zext i1 %_10.i to i8, !dbg !595
  store i8 %10, ptr %_5.i, align 1, !dbg !595
  br label %bb3.i, !dbg !595

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %11 = load i8, ptr %_5.i, align 1, !dbg !598, !range !210, !noundef !24
  %12 = trunc i8 %11 to i1, !dbg !598
  %_4.i = xor i1 %12, true, !dbg !598
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h72501f1547f5aaeaE.exit, !dbg !598

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc318, i64 166) #11, !dbg !599
  unreachable, !dbg !599

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h72501f1547f5aaeaE.exit: ; preds = %bb3.i
  %13 = mul i64 %count, 24, !dbg !600
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %13, i1 false), !dbg !600
  ret void, !dbg !601
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17he6b556ffae8c6245E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !602 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !608, metadata !DIExpression()), !dbg !611
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !609, metadata !DIExpression()), !dbg !612
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !610, metadata !DIExpression()), !dbg !613
  store ptr %src, ptr %_5, align 8, !dbg !614
  %0 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !614
  store ptr %dst, ptr %0, align 8, !dbg !614
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !614
  store i64 %count, ptr %1, align 8, !dbg !614
  %2 = load ptr, ptr %_5, align 8, !dbg !614, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !614
  %4 = load ptr, ptr %3, align 8, !dbg !614, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !614
  %6 = load i64, ptr %5, align 8, !dbg !614, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !615, metadata !DIExpression()), !dbg !620
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !618, metadata !DIExpression()), !dbg !620
  store i64 %6, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !619, metadata !DIExpression()), !dbg !620
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h9aaa14f864d28c75E(ptr %2) #10, !dbg !622
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !622

bb4.i:                                            ; preds = %start
  store i8 0, ptr %_6.i, align 1, !dbg !622
  br label %bb6.i, !dbg !622

bb5.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h9aaa14f864d28c75E(ptr %4) #10, !dbg !623
  %7 = zext i1 %_8.i to i8, !dbg !622
  store i8 %7, ptr %_6.i, align 1, !dbg !622
  br label %bb6.i, !dbg !622

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %8 = load i8, ptr %_6.i, align 1, !dbg !622, !range !210, !noundef !24
  %9 = trunc i8 %8 to i1, !dbg !622
  br i1 %9, label %bb2.i, label %bb1.i, !dbg !622

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !622
  br label %bb3.i, !dbg !622

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h58ef1f83be411d9fE(ptr %2, ptr %4, i64 %6) #10, !dbg !624
  %10 = zext i1 %_10.i to i8, !dbg !622
  store i8 %10, ptr %_5.i, align 1, !dbg !622
  br label %bb3.i, !dbg !622

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %11 = load i8, ptr %_5.i, align 1, !dbg !625, !range !210, !noundef !24
  %12 = trunc i8 %11 to i1, !dbg !625
  %_4.i = xor i1 %12, true, !dbg !625
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h5f2075035140fd79E.exit, !dbg !625

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc318, i64 166) #11, !dbg !626
  unreachable, !dbg !626

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h5f2075035140fd79E.exit: ; preds = %bb3.i
  %13 = mul i64 %count, 8, !dbg !627
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %13, i1 false), !dbg !627
  ret void, !dbg !628
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %ptr) unnamed_addr #1 !dbg !629 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !633, metadata !DIExpression()), !dbg !634
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0ffc917f38722119E"(ptr %ptr) #10, !dbg !635
  %_2 = xor i1 %_3, true, !dbg !636
  br i1 %_2, label %bb2, label %bb1, !dbg !636

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !636
  br label %bb3, !dbg !636

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h012921aa164287ceE"(ptr %ptr) #10, !dbg !637
  %1 = zext i1 %_4 to i8, !dbg !636
  store i8 %1, ptr %0, align 1, !dbg !636
  br label %bb3, !dbg !636

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !638, !range !210, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !638
  ret i1 %3, !dbg !638
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h826fcd3d06ba96b4E(ptr %ptr) unnamed_addr #1 !dbg !639 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !654, metadata !DIExpression()), !dbg !657
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h39beab9ca460943bE"(ptr %ptr) #10, !dbg !658
  %_2 = xor i1 %_3, true, !dbg !659
  br i1 %_2, label %bb2, label %bb1, !dbg !659

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !659
  br label %bb3, !dbg !659

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hcef368e9ddc423d6E"(ptr %ptr) #10, !dbg !660
  %1 = zext i1 %_4 to i8, !dbg !659
  store i8 %1, ptr %0, align 1, !dbg !659
  br label %bb3, !dbg !659

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !661, !range !210, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !661
  ret i1 %3, !dbg !661
}

; core::intrinsics::is_valid_allocation_size
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hf4c172ba13be3f02E(i64 %len) unnamed_addr #1 !dbg !662 {
start:
  %max_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !666, metadata !DIExpression()), !dbg !669
  store i64 384307168202282325, ptr %max_len.dbg.spill, align 8, !dbg !670
  call void @llvm.dbg.declare(metadata ptr %max_len.dbg.spill, metadata !667, metadata !DIExpression()), !dbg !671
  %0 = icmp ule i64 %len, 384307168202282325, !dbg !672
  ret i1 %0, !dbg !673
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17h9831803a7b3cada9E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !674 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !676, metadata !DIExpression()), !dbg !679
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !677, metadata !DIExpression()), !dbg !680
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !678, metadata !DIExpression()), !dbg !681
  store ptr %src, ptr %_5, align 8, !dbg !682
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !682
  store ptr %dst, ptr %0, align 8, !dbg !682
  %1 = load ptr, ptr %_5, align 8, !dbg !682, !noundef !24
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !682
  %3 = load ptr, ptr %2, align 8, !dbg !682, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !683, metadata !DIExpression()), !dbg !690
  store ptr %3, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !689, metadata !DIExpression()), !dbg !690
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h9aaa14f864d28c75E(ptr %1) #10, !dbg !692
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !692

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !692
  br label %bb3.i, !dbg !692

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h9aaa14f864d28c75E(ptr %3) #10, !dbg !693
  %4 = zext i1 %_6.i to i8, !dbg !692
  store i8 %4, ptr %_4.i, align 1, !dbg !692
  br label %bb3.i, !dbg !692

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !694, !range !210, !noundef !24
  %6 = trunc i8 %5 to i1, !dbg !694
  %_3.i = xor i1 %6, true, !dbg !694
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17ha701b94fc6bd3866E.exit, !dbg !694

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc320, i64 112) #11, !dbg !695
  unreachable, !dbg !695

_ZN4core10intrinsics4copy7runtime17ha701b94fc6bd3866E.exit: ; preds = %bb3.i
  %7 = mul i64 8, %count, !dbg !696
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %7, i1 false), !dbg !696
  ret void, !dbg !697
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17hc5335cd0346ba533E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !698 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !700, metadata !DIExpression()), !dbg !703
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !701, metadata !DIExpression()), !dbg !704
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !702, metadata !DIExpression()), !dbg !705
  store ptr %src, ptr %_5, align 8, !dbg !706
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !706
  store ptr %dst, ptr %0, align 8, !dbg !706
  %1 = load ptr, ptr %_5, align 8, !dbg !706, !noundef !24
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !706
  %3 = load ptr, ptr %2, align 8, !dbg !706, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !707, metadata !DIExpression()), !dbg !713
  store ptr %3, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !712, metadata !DIExpression()), !dbg !713
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %1) #10, !dbg !715
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !715

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !715
  br label %bb3.i, !dbg !715

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %3) #10, !dbg !716
  %4 = zext i1 %_6.i to i8, !dbg !715
  store i8 %4, ptr %_4.i, align 1, !dbg !715
  br label %bb3.i, !dbg !715

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !717, !range !210, !noundef !24
  %6 = trunc i8 %5 to i1, !dbg !717
  %_3.i = xor i1 %6, true, !dbg !717
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17h76ee47e5dba4e515E.exit, !dbg !717

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc320, i64 112) #11, !dbg !718
  unreachable, !dbg !718

_ZN4core10intrinsics4copy7runtime17h76ee47e5dba4e515E.exit: ; preds = %bb3.i
  %7 = mul i64 24, %count, !dbg !719
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %7, i1 false), !dbg !719
  ret void, !dbg !720
}

; core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h20daabefeafea6fcE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !721 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !728, metadata !DIExpression()), !dbg !730
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !729, metadata !DIExpression()), !dbg !731
  %_4 = load i64, ptr %self, align 8, !dbg !732, !noundef !24
  %_5 = load i64, ptr %other, align 8, !dbg !733, !noundef !24
  %_3 = icmp ult i64 %_4, %_5, !dbg !732
  br i1 %_3, label %bb1, label %bb2, !dbg !732

bb2:                                              ; preds = %start
  %_7 = load i64, ptr %self, align 8, !dbg !734, !noundef !24
  %_8 = load i64, ptr %other, align 8, !dbg !735, !noundef !24
  %_6 = icmp eq i64 %_7, %_8, !dbg !734
  br i1 %_6, label %bb3, label %bb4, !dbg !734

bb1:                                              ; preds = %start
  store i8 -1, ptr %0, align 1, !dbg !736
  br label %bb5, !dbg !737

bb5:                                              ; preds = %bb4, %bb3, %bb1
  %1 = load i8, ptr %0, align 1, !dbg !738, !range !739, !noundef !24
  ret i8 %1, !dbg !738

bb4:                                              ; preds = %bb2
  store i8 1, ptr %0, align 1, !dbg !740
  br label %bb5, !dbg !741

bb3:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !742
  br label %bb5, !dbg !741
}

; core::fmt::ArgumentV1::new_lower_hex
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_lower_hex17h433ba05b4d707d9bE(ptr align 8 %x) unnamed_addr #0 !dbg !743 {
start:
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !757, metadata !DIExpression()), !dbg !760
; call core::fmt::ArgumentV1::new
  %0 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV13new17he5efe772e33215bdE(ptr align 8 %x, ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hbc14bafef08aa5b6E") #10, !dbg !761
  %1 = extractvalue { ptr, ptr } %0, 0, !dbg !761
  %2 = extractvalue { ptr, ptr } %0, 1, !dbg !761
  %3 = insertvalue { ptr, ptr } undef, ptr %1, 0, !dbg !762
  %4 = insertvalue { ptr, ptr } %3, ptr %2, 1, !dbg !762
  ret { ptr, ptr } %4, !dbg !762
}

; core::fmt::num::<impl core::fmt::Debug for u32>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h5b1a2ebb45fc8c47E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #0 !dbg !763 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !770, metadata !DIExpression()), !dbg !772
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !771, metadata !DIExpression()), !dbg !773
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h72a5cea0ccf13146E(ptr align 8 %f) #10, !dbg !774
  br i1 %_3, label %bb2, label %bb3, !dbg !774

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9a19d6967cce92e6E(ptr align 8 %f) #10, !dbg !775
  br i1 %_5, label %bb5, label %bb6, !dbg !775

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17h7320ebe70fc26996E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !776
  %2 = zext i1 %1 to i8, !dbg !776
  store i8 %2, ptr %0, align 1, !dbg !776
  br label %bb7, !dbg !776

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !777, !range !210, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !777
  ret i1 %4, !dbg !777

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h5b7faf12be3a5f79E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !778
  %6 = zext i1 %5 to i8, !dbg !778
  store i8 %6, ptr %0, align 1, !dbg !778
  br label %bb7, !dbg !778

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1980389e98a5a39dE"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !779
  %8 = zext i1 %7 to i8, !dbg !779
  store i8 %8, ptr %0, align 1, !dbg !779
  br label %bb7, !dbg !779
}

; core::fmt::num::<impl core::fmt::Debug for u64>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17hb863c40d86c7fdd5E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !780 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !785, metadata !DIExpression()), !dbg !787
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !786, metadata !DIExpression()), !dbg !788
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h72a5cea0ccf13146E(ptr align 8 %f) #10, !dbg !789
  br i1 %_3, label %bb2, label %bb3, !dbg !789

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9a19d6967cce92e6E(ptr align 8 %f) #10, !dbg !790
  br i1 %_5, label %bb5, label %bb6, !dbg !790

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hbc14bafef08aa5b6E"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !791
  %2 = zext i1 %1 to i8, !dbg !791
  store i8 %2, ptr %0, align 1, !dbg !791
  br label %bb7, !dbg !791

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !792, !range !210, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !792
  ret i1 %4, !dbg !792

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h0343eb9916347eb4E"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !793
  %6 = zext i1 %5 to i8, !dbg !793
  store i8 %6, ptr %0, align 1, !dbg !793
  br label %bb7, !dbg !793

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h9e931a554398795cE"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !794
  %8 = zext i1 %7 to i8, !dbg !794
  store i8 %8, ptr %0, align 1, !dbg !794
  br label %bb7, !dbg !794
}

; core::fmt::builders::DebugList::entries
; Function Attrs: noredzone nounwind
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h3b408f9ace557e17E(ptr align 8 %self, ptr %entries.0, ptr %entries.1) unnamed_addr #1 !dbg !795 {
start:
  %entries.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %entry = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !824, metadata !DIExpression()), !dbg !833
  %0 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 0
  store ptr %entries.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 1
  store ptr %entries.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %entries.dbg.spill, metadata !825, metadata !DIExpression()), !dbg !834
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !826, metadata !DIExpression()), !dbg !835
  call void @llvm.dbg.declare(metadata ptr %entry, metadata !828, metadata !DIExpression()), !dbg !836
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h68016ab3f09a4ae3E"(ptr %entries.0, ptr %entries.1) #10, !dbg !837
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !837
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !837
  %3 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 0, !dbg !837
  store ptr %_3.0, ptr %3, align 8, !dbg !837
  %4 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 1, !dbg !837
  store ptr %_3.1, ptr %4, align 8, !dbg !837
  br label %bb2, !dbg !838

bb2:                                              ; preds = %bb4, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h20e1df60141b61e8E"(ptr align 8 %iter) #10, !dbg !835
  store ptr %5, ptr %_5, align 8, !dbg !835
  %6 = load ptr, ptr %_5, align 8, !dbg !835, !noundef !24
  %7 = ptrtoint ptr %6 to i64, !dbg !835
  %8 = icmp eq i64 %7, 0, !dbg !835
  %_7 = select i1 %8, i64 0, i64 1, !dbg !835
  %9 = icmp eq i64 %_7, 0, !dbg !835
  br i1 %9, label %bb6, label %bb4, !dbg !835

bb6:                                              ; preds = %bb2
  ret ptr %self, !dbg !839

bb4:                                              ; preds = %bb2
  %10 = load ptr, ptr %_5, align 8, !dbg !840, !nonnull !24, !align !504, !noundef !24
  store ptr %10, ptr %entry, align 8, !dbg !840
; call core::fmt::builders::DebugList::entry
  %_9 = call align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h9a76c3bde925a24eE(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.1) #10, !dbg !841
  br label %bb2, !dbg !842

bb5:                                              ; No predecessors!
  unreachable, !dbg !835
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17h34d6d65ca81cd693E(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1, ptr align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 !dbg !843 {
start:
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::UnsafeArg", align 1
  %fmt.dbg.spill = alloca { ptr, i64 }, align 8
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_5 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !909, metadata !DIExpression()), !dbg !913
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !910, metadata !DIExpression()), !dbg !914
  %5 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 0
  store ptr %fmt.0, ptr %5, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 1
  store i64 %fmt.1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %fmt.dbg.spill, metadata !911, metadata !DIExpression()), !dbg !915
  call void @llvm.dbg.declare(metadata ptr %_unsafe_arg.dbg.spill, metadata !912, metadata !DIExpression()), !dbg !916
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !917
  store ptr %fmt.0, ptr %7, align 8, !dbg !917
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !917
  store i64 %fmt.1, ptr %8, align 8, !dbg !917
  %9 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !918
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !918
  store ptr %pieces.0, ptr %10, align 8, !dbg !918
  %11 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !918
  store i64 %pieces.1, ptr %11, align 8, !dbg !918
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !918
  %13 = load ptr, ptr %12, align 8, !dbg !918, !align !504, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !918
  %15 = load i64, ptr %14, align 8, !dbg !918
  %16 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !918
  store ptr %13, ptr %16, align 8, !dbg !918
  %17 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !918
  store i64 %15, ptr %17, align 8, !dbg !918
  %18 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !918
  %19 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 0, !dbg !918
  store ptr %args.0, ptr %19, align 8, !dbg !918
  %20 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 1, !dbg !918
  store i64 %args.1, ptr %20, align 8, !dbg !918
  ret void, !dbg !919
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments6new_v117h30dac65f16f7140aE(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !920 {
start:
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_16 = alloca { ptr, i64 }, align 8
  %_13 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !924, metadata !DIExpression()), !dbg !926
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !925, metadata !DIExpression()), !dbg !927
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !928
  br i1 %_4, label %bb1, label %bb2, !dbg !928

bb2:                                              ; preds = %start
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %args.1, i64 1), !dbg !929
  %_11.0 = extractvalue { i64, i1 } %5, 0, !dbg !929
  %_11.1 = extractvalue { i64, i1 } %5, 1, !dbg !929
  %6 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !929
  br i1 %6, label %panic, label %bb4, !dbg !929

bb1:                                              ; preds = %start
  store i8 1, ptr %_3, align 1, !dbg !928
  br label %bb3, !dbg !928

bb3:                                              ; preds = %bb4, %bb1
  %7 = load i8, ptr %_3, align 1, !dbg !928, !range !210, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !928
  br i1 %8, label %bb5, label %bb7, !dbg !928

bb4:                                              ; preds = %bb2
  %_7 = icmp ugt i64 %pieces.1, %_11.0, !dbg !930
  %9 = zext i1 %_7 to i8, !dbg !928
  store i8 %9, ptr %_3, align 1, !dbg !928
  br label %bb3, !dbg !928

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc325) #11, !dbg !929
  unreachable, !dbg !929

bb7:                                              ; preds = %bb3
  store ptr null, ptr %_16, align 8, !dbg !931
  %10 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !932
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !932
  store ptr %pieces.0, ptr %11, align 8, !dbg !932
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !932
  store i64 %pieces.1, ptr %12, align 8, !dbg !932
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !932
  %14 = load ptr, ptr %13, align 8, !dbg !932, !align !504, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !932
  %16 = load i64, ptr %15, align 8, !dbg !932
  %17 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !932
  store ptr %14, ptr %17, align 8, !dbg !932
  %18 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !932
  store i64 %16, ptr %18, align 8, !dbg !932
  %19 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !932
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !932
  store ptr %args.0, ptr %20, align 8, !dbg !932
  %21 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !932
  store i64 %args.1, ptr %21, align 8, !dbg !932
  ret void, !dbg !933

bb5:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h30dac65f16f7140aE(ptr sret(%"core::fmt::Arguments<'_>") %_13, ptr align 8 @alloc80, i64 1, ptr align 8 @alloc78, i64 0) #10, !dbg !934
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0c6ec1399a51edb5E(ptr %_13, ptr align 8 @alloc327) #11, !dbg !934
  unreachable, !dbg !934
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17hb5406f0a3506dab5E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !935 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_9 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %b = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %a = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !941, metadata !DIExpression()), !dbg !947
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !942, metadata !DIExpression()), !dbg !948
  call void @llvm.dbg.declare(metadata ptr %a, metadata !943, metadata !DIExpression()), !dbg !949
  call void @llvm.dbg.declare(metadata ptr %b, metadata !945, metadata !DIExpression()), !dbg !950
; call core::ptr::read
  call void @_ZN4core3ptr4read17hc4a3b4e001a11806E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %a, ptr %x) #10, !dbg !951
; call core::ptr::read
  call void @_ZN4core3ptr4read17hc4a3b4e001a11806E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %b, ptr %y) #10, !dbg !952
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !953
; call core::ptr::write
  call void @_ZN4core3ptr5write17h13f342a0963792bfE(ptr %x, ptr %_9) #10, !dbg !954
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !955
; call core::ptr::write
  call void @_ZN4core3ptr5write17h13f342a0963792bfE(ptr %y, ptr %_12) #10, !dbg !956
  ret void, !dbg !957
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17hede3dff591370c1cE(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !958 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %_9 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %b = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %a = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !963, metadata !DIExpression()), !dbg !969
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !964, metadata !DIExpression()), !dbg !970
  call void @llvm.dbg.declare(metadata ptr %a, metadata !965, metadata !DIExpression()), !dbg !971
  call void @llvm.dbg.declare(metadata ptr %b, metadata !967, metadata !DIExpression()), !dbg !972
; call core::ptr::read
  call void @_ZN4core3ptr4read17h7e887ee07bcfebe1E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %a, ptr %x) #10, !dbg !973
; call core::ptr::read
  call void @_ZN4core3ptr4read17h7e887ee07bcfebe1E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %b, ptr %y) #10, !dbg !974
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !975
; call core::ptr::write
  call void @_ZN4core3ptr5write17h78e37c5b1bec47a4E(ptr %x, ptr %_9) #10, !dbg !976
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !977
; call core::ptr::write
  call void @_ZN4core3ptr5write17h78e37c5b1bec47a4E(ptr %y, ptr %_12) #10, !dbg !978
  ret void, !dbg !979
}

; core::mem::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem4swap17hdd0820cc94f081c7E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !980 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !982, metadata !DIExpression()), !dbg !984
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !983, metadata !DIExpression()), !dbg !985
  %_7 = icmp eq i64 8, 0, !dbg !986
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !986
  br i1 %0, label %panic, label %bb3, !dbg !986

bb3:                                              ; preds = %start
  %_4 = udiv i64 24, 8, !dbg !986
  %_3 = icmp ugt i64 %_4, 4, !dbg !986
  br i1 %_3, label %bb4, label %bb5, !dbg !986

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc329) #11, !dbg !986
  unreachable, !dbg !986

bb5:                                              ; preds = %bb3
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17hb5406f0a3506dab5E(ptr align 8 %x, ptr align 8 %y) #10, !dbg !987
  br label %bb6, !dbg !987

bb4:                                              ; preds = %bb3
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17ha6d4e483251a8236E(ptr %x, ptr %y, i64 1) #10, !dbg !988
  br label %bb6, !dbg !988

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !989
}

; core::mem::forget
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem6forget17h17e565d642337995E(ptr %t) unnamed_addr #0 !dbg !990 {
start:
  %_2 = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  call void @llvm.dbg.declare(metadata ptr %t, metadata !994, metadata !DIExpression()), !dbg !995
  call void @llvm.dbg.declare(metadata ptr %t, metadata !996, metadata !DIExpression()), !dbg !1002
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %t, i64 24, i1 false), !dbg !1004
  ret void, !dbg !1005
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h72c30a1e2370563bE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1006 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1013, metadata !DIExpression()), !dbg !1018
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !1014, metadata !DIExpression()), !dbg !1019
  store i64 %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1020, metadata !DIExpression()), !dbg !1033
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1029, metadata !DIExpression()), !dbg !1035
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1036
  %_5.0.i = extractvalue { i64, i1 } %3, 0, !dbg !1036
  %_5.1.i = extractvalue { i64, i1 } %3, 1, !dbg !1036
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !1037
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill.i, metadata !1030, metadata !DIExpression()), !dbg !1038
  %4 = zext i1 %_5.1.i to i8, !dbg !1039
  store i8 %4, ptr %b.dbg.spill.i, align 1, !dbg !1039
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill.i, metadata !1032, metadata !DIExpression()), !dbg !1040
  store i64 %_5.0.i, ptr %0, align 8, !dbg !1041
  %5 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1041
  %6 = zext i1 %_5.1.i to i8, !dbg !1041
  store i8 %6, ptr %5, align 8, !dbg !1041
  %7 = load i64, ptr %0, align 8, !dbg !1042, !noundef !24
  %8 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1042
  %9 = load i8, ptr %8, align 8, !dbg !1042, !range !210, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1042
  %11 = zext i1 %10 to i8, !dbg !1042
  %12 = insertvalue { i64, i8 } undef, i64 %7, 0, !dbg !1042
  %13 = insertvalue { i64, i8 } %12, i8 %11, 1, !dbg !1042
  %_5.0 = extractvalue { i64, i8 } %13, 0, !dbg !1043
  %14 = extractvalue { i64, i8 } %13, 1, !dbg !1043
  %_5.1 = trunc i8 %14 to i1, !dbg !1043
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !1044
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !1015, metadata !DIExpression()), !dbg !1045
  %15 = zext i1 %_5.1 to i8, !dbg !1046
  store i8 %15, ptr %b.dbg.spill, align 1, !dbg !1046
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1017, metadata !DIExpression()), !dbg !1047
  %16 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1048
  %17 = zext i1 %16 to i8, !dbg !1048
  store i8 %17, ptr %1, align 1, !dbg !1048
  %18 = load i8, ptr %1, align 1, !dbg !1048, !range !210, !noundef !24
  %_6 = trunc i8 %18 to i1, !dbg !1048
  br i1 %_6, label %bb3, label %bb4, !dbg !1048

bb4:                                              ; preds = %start
  %19 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1049
  store i64 %_5.0, ptr %19, align 8, !dbg !1049
  store i64 1, ptr %2, align 8, !dbg !1049
  br label %bb5, !dbg !1050

bb3:                                              ; preds = %start
  store i64 0, ptr %2, align 8, !dbg !1051
  br label %bb5, !dbg !1050

bb5:                                              ; preds = %bb4, %bb3
  %20 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !1052
  %21 = load i64, ptr %20, align 8, !dbg !1052, !range !1053, !noundef !24
  %22 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1052
  %23 = load i64, ptr %22, align 8, !dbg !1052
  %24 = insertvalue { i64, i64 } undef, i64 %21, 0, !dbg !1052
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1, !dbg !1052
  ret { i64, i64 } %25, !dbg !1052
}

; core::num::<impl usize>::next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h19b99a59f73778e5E"(i64 %self) unnamed_addr #0 !dbg !1054 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1058, metadata !DIExpression()), !dbg !1059
; call core::num::<impl usize>::one_less_than_next_power_of_two
  %_2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17haf8dbd097bc2d15dE"(i64 %self) #10, !dbg !1060
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_2, i64 1), !dbg !1060
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !1060
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !1060
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !1060
  br i1 %1, label %panic, label %bb2, !dbg !1060

bb2:                                              ; preds = %start
  ret i64 %_3.0, !dbg !1061

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc331) #11, !dbg !1060
  unreachable, !dbg !1060
}

; core::num::<impl usize>::one_less_than_next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17haf8dbd097bc2d15dE"(i64 %self) unnamed_addr #0 !dbg !1062 {
start:
  %z.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %p.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1064, metadata !DIExpression()), !dbg !1069
  %_2 = icmp ule i64 %self, 1, !dbg !1070
  br i1 %_2, label %bb1, label %bb2, !dbg !1070

bb2:                                              ; preds = %start
  %_4.0 = sub i64 %self, 1, !dbg !1071
  %_4.1 = icmp ult i64 %self, 1, !dbg !1071
  %2 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1071
  br i1 %2, label %panic, label %bb3, !dbg !1071

bb1:                                              ; preds = %start
  store i64 0, ptr %1, align 8, !dbg !1072
  br label %bb6, !dbg !1073

bb6:                                              ; preds = %bb5, %bb1
  %3 = load i64, ptr %1, align 8, !dbg !1073, !noundef !24
  ret i64 %3, !dbg !1073

bb3:                                              ; preds = %bb2
  store i64 %_4.0, ptr %p.dbg.spill, align 8, !dbg !1071
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !1065, metadata !DIExpression()), !dbg !1074
  %4 = call i64 @llvm.ctlz.i64(i64 %_4.0, i1 true), !dbg !1075
  store i64 %4, ptr %0, align 8, !dbg !1075
  %z = load i64, ptr %0, align 8, !dbg !1075, !noundef !24
  store i64 %z, ptr %z.dbg.spill, align 8, !dbg !1075
  call void @llvm.dbg.declare(metadata ptr %z.dbg.spill, metadata !1067, metadata !DIExpression()), !dbg !1076
  %5 = and i64 %z, -64, !dbg !1077
  %_7.1 = icmp ne i64 %5, 0, !dbg !1077
  %6 = and i64 %z, 63, !dbg !1077
  %_7.0 = lshr i64 -1, %6, !dbg !1077
  %7 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !1077
  br i1 %7, label %panic1, label %bb5, !dbg !1077

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc331) #11, !dbg !1071
  unreachable, !dbg !1071

bb5:                                              ; preds = %bb3
  store i64 %_7.0, ptr %1, align 8, !dbg !1077
  br label %bb6, !dbg !1073

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.4, i64 36, ptr align 8 @alloc331) #11, !dbg !1077
  unreachable, !dbg !1077
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17hac9cc18aac0fdaffE"(ptr %self) unnamed_addr #0 !dbg !1078 {
start:
  %exclusive_end.dbg.spill = alloca i64, align 8
  %start1 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1083, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata ptr %start1, metadata !1086, metadata !DIExpression()), !dbg !1089
  %1 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 1, !dbg !1090
  %_3 = load i64, ptr %1, align 8, !dbg !1090, !noundef !24
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_3, i64 1), !dbg !1090
  %_4.0 = extractvalue { i64, i1 } %2, 0, !dbg !1090
  %_4.1 = extractvalue { i64, i1 } %2, 1, !dbg !1090
  %3 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1090
  br i1 %3, label %panic, label %bb1, !dbg !1090

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %exclusive_end.dbg.spill, align 8, !dbg !1090
  call void @llvm.dbg.declare(metadata ptr %exclusive_end.dbg.spill, metadata !1084, metadata !DIExpression()), !dbg !1091
  %4 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 2, !dbg !1092
  %5 = load i8, ptr %4, align 8, !dbg !1092, !range !210, !noundef !24
  %_6 = trunc i8 %5 to i1, !dbg !1092
  br i1 %_6, label %bb2, label %bb3, !dbg !1092

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc333) #11, !dbg !1090
  unreachable, !dbg !1090

bb3:                                              ; preds = %bb1
  %6 = load i64, ptr %self, align 8, !dbg !1093, !noundef !24
  store i64 %6, ptr %start1, align 8, !dbg !1093
  br label %bb4, !dbg !1094

bb2:                                              ; preds = %bb1
  store i64 %_4.0, ptr %start1, align 8, !dbg !1095
  br label %bb4, !dbg !1094

bb4:                                              ; preds = %bb3, %bb2
  %_7 = load i64, ptr %start1, align 8, !dbg !1096, !noundef !24
  store i64 %_7, ptr %0, align 8, !dbg !1096
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1096
  store i64 %_4.0, ptr %7, align 8, !dbg !1096
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !1097
  %9 = load i64, ptr %8, align 8, !dbg !1097, !noundef !24
  %10 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1097
  %11 = load i64, ptr %10, align 8, !dbg !1097, !noundef !24
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0, !dbg !1097
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1, !dbg !1097
  ret { i64, i64 } %13, !dbg !1097
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17he490ed33b6ccf2c8E"(ptr align 8 %self, ptr align 8 %0, ptr align 8 %1) unnamed_addr #1 !dbg !1098 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %args = alloca { ptr, ptr }, align 8
  store ptr %0, ptr %args, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1
  store ptr %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1117, metadata !DIExpression()), !dbg !1126
  call void @llvm.dbg.declare(metadata ptr %args, metadata !1118, metadata !DIExpression()), !dbg !1127
  %_3 = load ptr, ptr %self, align 8, !dbg !1128, !nonnull !24, !align !504, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 0, !dbg !1128
  %4 = load ptr, ptr %3, align 8, !dbg !1128, !nonnull !24, !align !504, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1, !dbg !1128
  %6 = load ptr, ptr %5, align 8, !dbg !1128, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %7 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %_3, ptr align 8 %4, ptr align 8 %6) #10, !dbg !1128
  ret i1 %7, !dbg !1129
}

; core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h3d495b159b1f4552E"(ptr %_1) unnamed_addr #1 !dbg !1130 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1141, metadata !DIExpression()), !dbg !1144
; call <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9a4d3fa01a0e4ce4E"(ptr align 8 %_1) #10, !dbg !1144
  ret void, !dbg !1144
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr19swap_nonoverlapping17ha6d4e483251a8236E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1145 {
start:
  %self.dbg.spill.i20 = alloca ptr, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %y.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill16 = alloca i64, align 8
  %y.dbg.spill13 = alloca ptr, align 8
  %x.dbg.spill11 = alloca ptr, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %y.dbg.spill5 = alloca ptr, align 8
  %x.dbg.spill3 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_38 = alloca i8, align 1
  %_19 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %_5 = alloca { ptr, ptr, i64 }, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1149, metadata !DIExpression()), !dbg !1165
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1150, metadata !DIExpression()), !dbg !1166
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1151, metadata !DIExpression()), !dbg !1167
  store ptr %x, ptr %_5, align 8, !dbg !1168
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !1168
  store ptr %y, ptr %1, align 8, !dbg !1168
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !1168
  store i64 %count, ptr %2, align 8, !dbg !1168
  %3 = load ptr, ptr %_5, align 8, !dbg !1168, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !1168
  %5 = load ptr, ptr %4, align 8, !dbg !1168, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_5, i32 0, i32 2, !dbg !1168
  %7 = load i64, ptr %6, align 8, !dbg !1168, !noundef !24
  store ptr %3, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !1169, metadata !DIExpression()), !dbg !1175
  store ptr %5, ptr %y.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill.i, metadata !1173, metadata !DIExpression()), !dbg !1175
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1174, metadata !DIExpression()), !dbg !1175
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %3) #10, !dbg !1177
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !1177

bb4.i:                                            ; preds = %start
  store i8 0, ptr %_6.i, align 1, !dbg !1177
  br label %bb6.i, !dbg !1177

bb5.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_9.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %5) #10, !dbg !1179
  %8 = zext i1 %_9.i to i8, !dbg !1177
  store i8 %8, ptr %_6.i, align 1, !dbg !1177
  br label %bb6.i, !dbg !1177

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !1177, !range !210, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1177
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !1177

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !1177
  br label %bb3.i, !dbg !1177

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_11.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hadd98891bdebc46aE(ptr %3, ptr %5, i64 %7) #10, !dbg !1180
  %11 = zext i1 %_11.i to i8, !dbg !1177
  store i8 %11, ptr %_5.i, align 1, !dbg !1177
  br label %bb3.i, !dbg !1177

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !1181, !range !210, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !1181
  %_4.i = xor i1 %13, true, !dbg !1181
  br i1 %_4.i, label %bb10.i, label %_ZN4core3ptr19swap_nonoverlapping7runtime17hdaef8e0485d97d91E.exit, !dbg !1181

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc340, i64 166) #11, !dbg !1182
  unreachable, !dbg !1182

_ZN4core3ptr19swap_nonoverlapping7runtime17hdaef8e0485d97d91E.exit: ; preds = %bb3.i
  %_7 = icmp ule i64 8, 8, !dbg !1183
  br i1 %_7, label %bb3, label %bb2, !dbg !1183

bb2:                                              ; preds = %_ZN4core3ptr19swap_nonoverlapping7runtime17hdaef8e0485d97d91E.exit
  store i8 0, ptr %_6, align 1, !dbg !1183
  br label %bb4, !dbg !1183

bb3:                                              ; preds = %_ZN4core3ptr19swap_nonoverlapping7runtime17hdaef8e0485d97d91E.exit
  store i64 24, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1184, metadata !DIExpression()), !dbg !1187
  store i64 24, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1189, metadata !DIExpression()), !dbg !1194
  store i64 2, ptr %0, align 8, !dbg !1196
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1196, !noundef !24
  %14 = trunc i64 %_2.i.i to i32, !dbg !1196
  %15 = icmp eq i32 %14, 1, !dbg !1197
  %_11 = xor i1 %15, true, !dbg !1198
  br i1 %_11, label %bb7, label %bb8, !dbg !1199

bb8:                                              ; preds = %bb3
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 8, i64 2), !dbg !1200
  %_18.0 = extractvalue { i64, i1 } %16, 0, !dbg !1200
  %_18.1 = extractvalue { i64, i1 } %16, 1, !dbg !1200
  %17 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1200
  br i1 %17, label %panic, label %bb14, !dbg !1200

bb7:                                              ; preds = %bb3
  store i8 1, ptr %_10, align 1, !dbg !1199
  br label %bb9, !dbg !1199

bb9:                                              ; preds = %bb14, %bb7
  %18 = load i8, ptr %_10, align 1, !dbg !1183, !range !210, !noundef !24
  %19 = trunc i8 %18 to i1, !dbg !1183
  %20 = zext i1 %19 to i8, !dbg !1183
  store i8 %20, ptr %_6, align 1, !dbg !1183
  br label %bb4, !dbg !1183

bb14:                                             ; preds = %bb8
  %_14 = icmp ugt i64 24, %_18.0, !dbg !1201
  %21 = zext i1 %_14 to i8, !dbg !1199
  store i8 %21, ptr %_10, align 1, !dbg !1199
  br label %bb9, !dbg !1199

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc335) #11, !dbg !1200
  unreachable, !dbg !1200

bb4:                                              ; preds = %bb2, %bb9
  %22 = load i8, ptr %_6, align 1, !dbg !1183, !range !210, !noundef !24
  %23 = trunc i8 %22 to i1, !dbg !1183
  br i1 %23, label %bb15, label %bb47, !dbg !1183

bb47:                                             ; preds = %bb34, %bb4
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hf6f1df5e8875f92fE(ptr %x, ptr %y, i64 %count) #10, !dbg !1202
  br label %bb48, !dbg !1202

bb15:                                             ; preds = %bb4
  %_20 = icmp uge i64 8, 8, !dbg !1203
  br i1 %_20, label %bb17, label %bb16, !dbg !1203

bb16:                                             ; preds = %bb15
  store i8 0, ptr %_19, align 1, !dbg !1203
  br label %bb18, !dbg !1203

bb17:                                             ; preds = %bb15
  %_27 = icmp eq i64 8, 0, !dbg !1203
  %24 = call i1 @llvm.expect.i1(i1 %_27, i1 false), !dbg !1203
  br i1 %24, label %panic1, label %bb23, !dbg !1203

bb23:                                             ; preds = %bb17
  %_24 = urem i64 24, 8, !dbg !1203
  %_23 = icmp eq i64 %_24, 0, !dbg !1203
  %25 = zext i1 %_23 to i8, !dbg !1203
  store i8 %25, ptr %_19, align 1, !dbg !1203
  br label %bb18, !dbg !1203

panic1:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.6, i64 57, ptr align 8 @alloc337) #11, !dbg !1203
  unreachable, !dbg !1203

bb18:                                             ; preds = %bb16, %bb23
  %26 = load i8, ptr %_19, align 1, !dbg !1203, !range !210, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !1203
  br i1 %27, label %bb24, label %bb31, !dbg !1203

bb31:                                             ; preds = %bb18
  %_39 = icmp uge i64 8, 1, !dbg !1204
  br i1 %_39, label %bb33, label %bb32, !dbg !1204

bb24:                                             ; preds = %bb18
  store ptr %x, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !1205, metadata !DIExpression()), !dbg !1212
  store ptr %x, ptr %x.dbg.spill3, align 8, !dbg !1203
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill3, metadata !1152, metadata !DIExpression()), !dbg !1214
  store ptr %y, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !1205, metadata !DIExpression()), !dbg !1215
  store ptr %y, ptr %y.dbg.spill5, align 8, !dbg !1214
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill5, metadata !1154, metadata !DIExpression()), !dbg !1217
  %_34 = icmp eq i64 8, 0, !dbg !1217
  %28 = call i1 @llvm.expect.i1(i1 %_34, i1 false), !dbg !1217
  br i1 %28, label %panic6, label %bb29, !dbg !1217

bb29:                                             ; preds = %bb24
  %_31 = udiv i64 24, 8, !dbg !1217
  %29 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_31), !dbg !1217
  %_35.0 = extractvalue { i64, i1 } %29, 0, !dbg !1217
  %_35.1 = extractvalue { i64, i1 } %29, 1, !dbg !1217
  %30 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !1217
  br i1 %30, label %panic7, label %bb30, !dbg !1217

panic6:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc337) #11, !dbg !1217
  unreachable, !dbg !1217

bb30:                                             ; preds = %bb29
  store i64 %_35.0, ptr %count.dbg.spill8, align 8, !dbg !1217
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill8, metadata !1156, metadata !DIExpression()), !dbg !1218
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hd773e796fbac3215E(ptr %x, ptr %y, i64 %_35.0) #10, !dbg !1218
  br label %bb48, !dbg !1218

panic7:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc337) #11, !dbg !1217
  unreachable, !dbg !1217

bb48:                                             ; preds = %bb47, %bb46, %bb30
  ret void, !dbg !1219

bb32:                                             ; preds = %bb31
  store i8 0, ptr %_38, align 1, !dbg !1204
  br label %bb34, !dbg !1204

bb33:                                             ; preds = %bb31
  %_46 = icmp eq i64 1, 0, !dbg !1204
  %31 = call i1 @llvm.expect.i1(i1 %_46, i1 false), !dbg !1204
  br i1 %31, label %panic9, label %bb39, !dbg !1204

bb39:                                             ; preds = %bb33
  %_43 = urem i64 24, 1, !dbg !1204
  %_42 = icmp eq i64 %_43, 0, !dbg !1204
  %32 = zext i1 %_42 to i8, !dbg !1204
  store i8 %32, ptr %_38, align 1, !dbg !1204
  br label %bb34, !dbg !1204

panic9:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.6, i64 57, ptr align 8 @alloc339) #11, !dbg !1204
  unreachable, !dbg !1204

bb34:                                             ; preds = %bb32, %bb39
  %33 = load i8, ptr %_38, align 1, !dbg !1204, !range !210, !noundef !24
  %34 = trunc i8 %33 to i1, !dbg !1204
  br i1 %34, label %bb40, label %bb47, !dbg !1204

bb40:                                             ; preds = %bb34
  store ptr %x, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !1220, metadata !DIExpression()), !dbg !1227
  store ptr %x, ptr %x.dbg.spill11, align 8, !dbg !1204
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill11, metadata !1158, metadata !DIExpression()), !dbg !1229
  store ptr %y, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !1220, metadata !DIExpression()), !dbg !1230
  store ptr %y, ptr %y.dbg.spill13, align 8, !dbg !1229
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill13, metadata !1161, metadata !DIExpression()), !dbg !1232
  %_53 = icmp eq i64 1, 0, !dbg !1232
  %35 = call i1 @llvm.expect.i1(i1 %_53, i1 false), !dbg !1232
  br i1 %35, label %panic14, label %bb45, !dbg !1232

bb45:                                             ; preds = %bb40
  %_50 = udiv i64 24, 1, !dbg !1232
  %36 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_50), !dbg !1232
  %_54.0 = extractvalue { i64, i1 } %36, 0, !dbg !1232
  %_54.1 = extractvalue { i64, i1 } %36, 1, !dbg !1232
  %37 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !1232
  br i1 %37, label %panic15, label %bb46, !dbg !1232

panic14:                                          ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc339) #11, !dbg !1232
  unreachable, !dbg !1232

bb46:                                             ; preds = %bb45
  store i64 %_54.0, ptr %count.dbg.spill16, align 8, !dbg !1232
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill16, metadata !1163, metadata !DIExpression()), !dbg !1233
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h776e339449f18e87E(ptr %x, ptr %y, i64 %_54.0) #10, !dbg !1233
  br label %bb48, !dbg !1233

panic15:                                          ; preds = %bb45
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc339) #11, !dbg !1232
  unreachable, !dbg !1232
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h81e5ec8f89303343E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1234 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1238, metadata !DIExpression()), !dbg !1240
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1239, metadata !DIExpression()), !dbg !1241
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !549, metadata !DIExpression()), !dbg !1242
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h96779705a0853e12E(ptr %data, i64 %len) #10, !dbg !1244
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1244
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1244
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !1245
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1245
  ret { ptr, i64 } %4, !dbg !1245
}

; core::ptr::drop_in_place<u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17h3ddda93f5d2fc92fE"(ptr %_1) unnamed_addr #0 !dbg !1246 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1251, metadata !DIExpression()), !dbg !1254
  ret void, !dbg !1254
}

; core::ptr::drop_in_place<u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17h707625e6c97aabb3E"(ptr %_1) unnamed_addr #0 !dbg !1255 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1260, metadata !DIExpression()), !dbg !1261
  ret void, !dbg !1261
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4f44642fed623530E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1262 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1266, metadata !DIExpression()), !dbg !1268
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1267, metadata !DIExpression()), !dbg !1269
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1270, metadata !DIExpression()), !dbg !1276
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hb72e76dc781b31a6E(ptr %data, i64 %len) #10, !dbg !1278
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1278
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1278
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !1279
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1279
  ret { ptr, i64 } %4, !dbg !1279
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17hece34ee525e599f5E"(ptr %_1) unnamed_addr #0 !dbg !1280 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1285, metadata !DIExpression()), !dbg !1288
  ret void, !dbg !1288
}

; core::ptr::drop_in_place<&u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h9f4315a52c3a60e0E"(ptr %_1) unnamed_addr #0 !dbg !1289 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1294, metadata !DIExpression()), !dbg !1297
  ret void, !dbg !1297
}

; core::ptr::drop_in_place<&u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17ha705ee9fc1ef02fcE"(ptr %_1) unnamed_addr #0 !dbg !1298 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1303, metadata !DIExpression()), !dbg !1306
  ret void, !dbg !1306
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hf6f1df5e8875f92fE(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1307 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %self.dbg.spill.i9 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1309, metadata !DIExpression()), !dbg !1323
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1310, metadata !DIExpression()), !dbg !1324
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1311, metadata !DIExpression()), !dbg !1325
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1317, metadata !DIExpression()), !dbg !1326
  store ptr %x, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1327, metadata !DIExpression()), !dbg !1334
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1336
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1312, metadata !DIExpression()), !dbg !1337
  store ptr %y, ptr %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !1327, metadata !DIExpression()), !dbg !1338
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1340
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1315, metadata !DIExpression()), !dbg !1341
  store i64 0, ptr %i, align 8, !dbg !1342
  br label %bb3, !dbg !1343

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1344, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1344
  br i1 %_7, label %bb4, label %bb9, !dbg !1344

bb9:                                              ; preds = %bb3
  ret void, !dbg !1345

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !1346, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1347, metadata !DIExpression()), !dbg !1353
  store i64 %_12, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1352, metadata !DIExpression()), !dbg !1355
  store ptr %x, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !1356, metadata !DIExpression()), !dbg !1362
  store i64 %_12, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !1361, metadata !DIExpression()), !dbg !1364
  %2 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %x, i64 %_12, !dbg !1365
  store ptr %2, ptr %1, align 8, !dbg !1365
  %_3.i = load ptr, ptr %1, align 8, !dbg !1365, !noundef !24
  store ptr %_3.i, ptr %x.dbg.spill5, align 8, !dbg !1366
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1319, metadata !DIExpression()), !dbg !1367
  %_16 = load i64, ptr %i, align 8, !dbg !1368, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1347, metadata !DIExpression()), !dbg !1369
  store i64 %_16, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1352, metadata !DIExpression()), !dbg !1371
  store ptr %y, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !1356, metadata !DIExpression()), !dbg !1372
  store i64 %_16, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !1361, metadata !DIExpression()), !dbg !1374
  %3 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %y, i64 %_16, !dbg !1375
  store ptr %3, ptr %0, align 8, !dbg !1375
  %_3.i15 = load ptr, ptr %0, align 8, !dbg !1375, !noundef !24
  store ptr %_3.i15, ptr %y.dbg.spill6, align 8, !dbg !1376
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1321, metadata !DIExpression()), !dbg !1377
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17hede3dff591370c1cE(ptr align 8 %_3.i, ptr align 8 %_3.i15) #10, !dbg !1378
  %4 = load i64, ptr %i, align 8, !dbg !1379, !noundef !24
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %4, i64 1), !dbg !1379
  %_18.0 = extractvalue { i64, i1 } %5, 0, !dbg !1379
  %_18.1 = extractvalue { i64, i1 } %5, 1, !dbg !1379
  %6 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1379
  br i1 %6, label %panic, label %bb8, !dbg !1379

bb8:                                              ; preds = %bb4
  store i64 %_18.0, ptr %i, align 8, !dbg !1379
  br label %bb3, !dbg !1343

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc342) #11, !dbg !1379
  unreachable, !dbg !1379
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h7e887ee07bcfebe1E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %0, ptr %src) unnamed_addr #0 !dbg !1380 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>", align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>", align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>>", align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1384, metadata !DIExpression()), !dbg !1394
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1385, metadata !DIExpression()), !dbg !1395
  store ptr %src, ptr %_4, align 8, !dbg !1396
  %1 = load ptr, ptr %_4, align 8, !dbg !1396, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1397, metadata !DIExpression()), !dbg !1403
; call core::intrinsics::is_aligned_and_not_null
  %_3.i1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h826fcd3d06ba96b4E(ptr %1) #10, !dbg !1405
  %_2.i = xor i1 %_3.i1, true, !dbg !1407
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h2e6cf6bc438ff033E.exit, !dbg !1407

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc346, i64 101) #11, !dbg !1408
  unreachable, !dbg !1408

_ZN4core3ptr4read7runtime17h2e6cf6bc438ff033E.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1409, metadata !DIExpression()), !dbg !1416
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %src, i64 24, i1 false), !dbg !1418
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tmp, i64 24, i1 false), !dbg !1419
  call void @llvm.dbg.declare(metadata ptr %_7, metadata !1420, metadata !DIExpression()), !dbg !1425
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3.i, ptr align 8 %_7, i64 24, i1 false), !dbg !1427
  call void @llvm.dbg.declare(metadata ptr %_3.i, metadata !1428, metadata !DIExpression()), !dbg !1433
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_3.i, i64 24, i1 false), !dbg !1435
  ret void, !dbg !1436
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17hc4a3b4e001a11806E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %src) unnamed_addr #0 !dbg !1437 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1441, metadata !DIExpression()), !dbg !1444
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1442, metadata !DIExpression()), !dbg !1445
  store ptr %src, ptr %_4, align 8, !dbg !1446
  %1 = load ptr, ptr %_4, align 8, !dbg !1446, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1447, metadata !DIExpression()), !dbg !1452
; call core::intrinsics::is_aligned_and_not_null
  %_3.i1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %1) #10, !dbg !1454
  %_2.i = xor i1 %_3.i1, true, !dbg !1456
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17hd50a912ea7f502c4E.exit, !dbg !1456

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc346, i64 101) #11, !dbg !1457
  unreachable, !dbg !1457

_ZN4core3ptr4read7runtime17hd50a912ea7f502c4E.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1458, metadata !DIExpression()), !dbg !1463
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %src, i64 24, i1 false), !dbg !1465
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tmp, i64 24, i1 false), !dbg !1466
  call void @llvm.dbg.declare(metadata ptr %_7, metadata !1467, metadata !DIExpression()), !dbg !1472
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3.i, ptr align 8 %_7, i64 24, i1 false), !dbg !1474
  call void @llvm.dbg.declare(metadata ptr %_3.i, metadata !1475, metadata !DIExpression()), !dbg !1480
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_3.i, i64 24, i1 false), !dbg !1482
  ret void, !dbg !1483
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h59951b18b0ba78c3E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1484 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1488, metadata !DIExpression()), !dbg !1492
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1489, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1490, metadata !DIExpression()), !dbg !1494
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1458, metadata !DIExpression()), !dbg !1495
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %x, ptr %tmp, i64 1) #10, !dbg !1497
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17hc5335cd0346ba533E(ptr %y, ptr %x, i64 1) #10, !dbg !1498
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1499, metadata !DIExpression()), !dbg !1505
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %tmp, ptr %y, i64 1) #10, !dbg !1507
  ret void, !dbg !1508
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h5e214ee24fa407efE(ptr %x, ptr %y) unnamed_addr #0 !dbg !1509 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1513, metadata !DIExpression()), !dbg !1524
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1514, metadata !DIExpression()), !dbg !1525
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1515, metadata !DIExpression()), !dbg !1526
  %1 = load i64, ptr %0, align 8, !dbg !1527
  store i64 %1, ptr %tmp, align 8, !dbg !1532
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1533, metadata !DIExpression()), !dbg !1539
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17he6b556ffae8c6245E(ptr %x, ptr %tmp, i64 1) #10, !dbg !1541
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h9831803a7b3cada9E(ptr %y, ptr %x, i64 1) #10, !dbg !1542
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1543, metadata !DIExpression()), !dbg !1549
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17he6b556ffae8c6245E(ptr %tmp, ptr %y, i64 1) #10, !dbg !1551
  ret void, !dbg !1552
}

; core::ptr::drop_in_place<bootloader::bootinfo::TlsTemplate>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17h283cfac31f5bb3e5E"(ptr %_1) unnamed_addr #0 !dbg !1553 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1558, metadata !DIExpression()), !dbg !1561
  ret void, !dbg !1561
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h13f342a0963792bfE(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1562 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1566, metadata !DIExpression()), !dbg !1568
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1567, metadata !DIExpression()), !dbg !1569
  store ptr %dst, ptr %_4, align 8, !dbg !1570
  %0 = load ptr, ptr %_4, align 8, !dbg !1570, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1571, metadata !DIExpression()), !dbg !1577
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %0) #10, !dbg !1579
  %_2.i = xor i1 %_3.i, true, !dbg !1581
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17h63a19ca64089740aE.exit, !dbg !1581

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc348, i64 102) #11, !dbg !1582
  unreachable, !dbg !1582

_ZN4core3ptr5write7runtime17h63a19ca64089740aE.exit: ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1583
  ret void, !dbg !1584
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h78e37c5b1bec47a4E(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1585 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1589, metadata !DIExpression()), !dbg !1591
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1590, metadata !DIExpression()), !dbg !1592
  store ptr %dst, ptr %_4, align 8, !dbg !1593
  %0 = load ptr, ptr %_4, align 8, !dbg !1593, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1594, metadata !DIExpression()), !dbg !1599
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h826fcd3d06ba96b4E(ptr %0) #10, !dbg !1601
  %_2.i = xor i1 %_3.i, true, !dbg !1603
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17h838a6b99bc5e95b2E.exit, !dbg !1603

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc348, i64 102) #11, !dbg !1604
  unreachable, !dbg !1604

_ZN4core3ptr5write7runtime17h838a6b99bc5e95b2E.exit: ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1605
  ret void, !dbg !1606
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17hf1197bdd632281c1E"(ptr %_1) unnamed_addr #0 !dbg !1607 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1612, metadata !DIExpression()), !dbg !1615
  ret void, !dbg !1615
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::FrameRange>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h62b29fe4400e8c9eE"(ptr %_1) unnamed_addr #0 !dbg !1616 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1621, metadata !DIExpression()), !dbg !1624
  ret void, !dbg !1624
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17hf778883e36c7f693E"(ptr %_1) unnamed_addr #0 !dbg !1625 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1630, metadata !DIExpression()), !dbg !1631
  ret void, !dbg !1631
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h2deb57f46a4a201eE"(ptr %_1) unnamed_addr #0 !dbg !1632 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1637, metadata !DIExpression()), !dbg !1640
  ret void, !dbg !1640
}

; core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hbdfbfef6ad685b7cE"(ptr %ptr) unnamed_addr #0 !dbg !1641 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1646, metadata !DIExpression()), !dbg !1647
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1648, metadata !DIExpression()), !dbg !1655
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1657, metadata !DIExpression()), !dbg !1663
  store ptr %ptr, ptr %0, align 8, !dbg !1665
  %1 = load i64, ptr %0, align 8, !dbg !1665, !noundef !24
  %2 = icmp eq i64 %1, 0, !dbg !1666
  ret i1 %2, !dbg !1667
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h532880c291436c84E"(ptr %self) unnamed_addr #0 !dbg !1668 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1672, metadata !DIExpression()), !dbg !1673
  store ptr %self, ptr %_2, align 8, !dbg !1674
  %0 = load ptr, ptr %_2, align 8, !dbg !1675, !noundef !24
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hbdfbfef6ad685b7cE"(ptr %0) #10, !dbg !1675
  ret i1 %1, !dbg !1676
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h96779705a0853e12E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1677 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1683, metadata !DIExpression()), !dbg !1685
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1684, metadata !DIExpression()), !dbg !1686
  store ptr %data_address, ptr %_4, align 8, !dbg !1687
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1687
  store i64 %metadata, ptr %0, align 8, !dbg !1687
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1688
  %2 = load ptr, ptr %1, align 8, !dbg !1688, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1688
  %4 = load i64, ptr %3, align 8, !dbg !1688, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1688
  store ptr %2, ptr %5, align 8, !dbg !1688
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1688
  store i64 %4, ptr %6, align 8, !dbg !1688
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1688
  %8 = load ptr, ptr %7, align 8, !dbg !1688, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1688
  %10 = load i64, ptr %9, align 8, !dbg !1688, !noundef !24
  %11 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !1689
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1689
  ret { ptr, i64 } %12, !dbg !1689
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define ptr @_ZN4core3ptr8metadata14from_raw_parts17hdf5128deb57a5081E(ptr %data_address) unnamed_addr #0 !dbg !1690 {
start:
  %metadata.dbg.spill = alloca {}, align 1
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"core::ptr::metadata::PtrComponents<bootinfo::memory_map::MemoryRegion>", align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1694, metadata !DIExpression()), !dbg !1696
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1695, metadata !DIExpression()), !dbg !1697
  store ptr %data_address, ptr %_4, align 8, !dbg !1698
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 8, i1 false), !dbg !1699
  %0 = load ptr, ptr %_3, align 8, !dbg !1699, !noundef !24
  ret ptr %0, !dbg !1700
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hb72e76dc781b31a6E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1701 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1705, metadata !DIExpression()), !dbg !1707
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1706, metadata !DIExpression()), !dbg !1708
  store ptr %data_address, ptr %_4, align 8, !dbg !1709
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1709
  store i64 %metadata, ptr %0, align 8, !dbg !1709
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1710
  %2 = load ptr, ptr %1, align 8, !dbg !1710, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1710
  %4 = load i64, ptr %3, align 8, !dbg !1710, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1710
  store ptr %2, ptr %5, align 8, !dbg !1710
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1710
  store i64 %4, ptr %6, align 8, !dbg !1710
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1710
  %8 = load ptr, ptr %7, align 8, !dbg !1710, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1710
  %10 = load i64, ptr %9, align 8, !dbg !1710, !noundef !24
  %11 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !1711
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1711
  ret { ptr, i64 } %12, !dbg !1711
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr8metadata8metadata17h163e40077ca65461E(ptr %ptr) unnamed_addr #0 !dbg !1712 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1714, metadata !DIExpression()), !dbg !1715
  store ptr %ptr, ptr %_2, align 8, !dbg !1716
  ret void, !dbg !1717
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr8metadata8metadata17h28e9a44b1a4defa6E(ptr %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1718 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1722, metadata !DIExpression()), !dbg !1723
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 0, !dbg !1724
  store ptr %ptr.0, ptr %2, align 8, !dbg !1724
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1724
  store i64 %ptr.1, ptr %3, align 8, !dbg !1724
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1724
  %5 = load i64, ptr %4, align 8, !dbg !1724, !noundef !24
  ret i64 %5, !dbg !1725
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h18bc62e0621d126cE"(ptr %ptr) unnamed_addr #0 !dbg !1726 {
start:
  %ptr.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1731, metadata !DIExpression()), !dbg !1732
  store ptr %ptr, ptr %_3, align 8, !dbg !1733
  %1 = load ptr, ptr %_3, align 8, !dbg !1733, !noundef !24
  store ptr %1, ptr %ptr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !1734, metadata !DIExpression()), !dbg !1739
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h532880c291436c84E"(ptr %1) #10, !dbg !1741
  %_3.i = xor i1 %_4.i, true, !dbg !1743
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h9f337dc199006af8E.exit", !dbg !1744

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc349, i64 93) #11, !dbg !1745
  unreachable, !dbg !1745

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h9f337dc199006af8E.exit": ; preds = %start
  store ptr %ptr, ptr %0, align 8, !dbg !1746
  %2 = load ptr, ptr %0, align 8, !dbg !1747, !nonnull !24, !noundef !24
  ret ptr %2, !dbg !1747
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h012921aa164287ceE"(ptr %self) unnamed_addr #0 !dbg !1748 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1750, metadata !DIExpression()), !dbg !1751
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h68029eeaec8c3569E"(ptr %self, i64 8) #10, !dbg !1752
  ret i1 %0, !dbg !1753
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hcef368e9ddc423d6E"(ptr %self) unnamed_addr #0 !dbg !1754 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1756, metadata !DIExpression()), !dbg !1757
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h536385641514af47E"(ptr %self, i64 8) #10, !dbg !1758
  ret i1 %0, !dbg !1759
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hde7ff9a91eb95225E"(ptr %ptr, i64 %align) unnamed_addr #0 !dbg !1760 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %align.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1765, metadata !DIExpression()), !dbg !1767
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1766, metadata !DIExpression()), !dbg !1768
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1769, metadata !DIExpression()), !dbg !1775
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1777, metadata !DIExpression()), !dbg !1783
  store ptr %ptr, ptr %0, align 8, !dbg !1785
  %1 = load i64, ptr %0, align 8, !dbg !1785, !noundef !24
  %_6.0 = sub i64 %align, 1, !dbg !1786
  %_6.1 = icmp ult i64 %align, 1, !dbg !1786
  %2 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !1786
  br i1 %2, label %panic, label %bb2, !dbg !1786

bb2:                                              ; preds = %start
  %_3 = and i64 %1, %_6.0, !dbg !1787
  %3 = icmp eq i64 %_3, 0, !dbg !1787
  ret i1 %3, !dbg !1788

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc351) #11, !dbg !1786
  unreachable, !dbg !1786
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h536385641514af47E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1789 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1793, metadata !DIExpression()), !dbg !1795
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1794, metadata !DIExpression()), !dbg !1796
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1184, metadata !DIExpression()), !dbg !1797
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1189, metadata !DIExpression()), !dbg !1799
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1801
  store i64 %1, ptr %0, align 8, !dbg !1801
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1801, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !1801
  %3 = icmp eq i32 %2, 1, !dbg !1802
  %_3 = xor i1 %3, true, !dbg !1803
  br i1 %_3, label %bb2, label %bb4, !dbg !1803

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1804, metadata !DIExpression()), !dbg !1810
  store ptr %self, ptr %_9, align 8, !dbg !1812
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !1812
  store i64 %align, ptr %4, align 8, !dbg !1812
  %5 = load ptr, ptr %_9, align 8, !dbg !1813, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !1813
  %7 = load i64, ptr %6, align 8, !dbg !1813, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hde7ff9a91eb95225E"(ptr %5, i64 %7) #10, !dbg !1813
  ret i1 %8, !dbg !1814

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h30dac65f16f7140aE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc75, i64 1, ptr align 8 @alloc78, i64 0) #10, !dbg !1815
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0c6ec1399a51edb5E(ptr %_6, ptr align 8 @alloc353) #11, !dbg !1815
  unreachable, !dbg !1815
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h68029eeaec8c3569E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1816 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1820, metadata !DIExpression()), !dbg !1822
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1821, metadata !DIExpression()), !dbg !1823
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1184, metadata !DIExpression()), !dbg !1824
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1189, metadata !DIExpression()), !dbg !1826
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1828
  store i64 %1, ptr %0, align 8, !dbg !1828
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1828, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !1828
  %3 = icmp eq i32 %2, 1, !dbg !1829
  %_3 = xor i1 %3, true, !dbg !1830
  br i1 %_3, label %bb2, label %bb4, !dbg !1830

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !549, metadata !DIExpression()), !dbg !1831
  store ptr %self, ptr %_9, align 8, !dbg !1833
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !1833
  store i64 %align, ptr %4, align 8, !dbg !1833
  %5 = load ptr, ptr %_9, align 8, !dbg !1834, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !1834
  %7 = load i64, ptr %6, align 8, !dbg !1834, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hde7ff9a91eb95225E"(ptr %5, i64 %7) #10, !dbg !1834
  ret i1 %8, !dbg !1835

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h30dac65f16f7140aE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc75, i64 1, ptr align 8 @alloc78, i64 0) #10, !dbg !1836
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0c6ec1399a51edb5E(ptr %_6, ptr align 8 @alloc353) #11, !dbg !1836
  unreachable, !dbg !1836
}

; core::ptr::const_ptr::<impl *const T>::with_metadata_of
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h18ca5e21f2ab0970E"(ptr %self, ptr %meta) unnamed_addr #0 !dbg !1837 {
start:
  %meta.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1842, metadata !DIExpression()), !dbg !1846
  store ptr %meta, ptr %meta.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %meta.dbg.spill, metadata !1843, metadata !DIExpression()), !dbg !1847
; call core::ptr::metadata::metadata
  call void @_ZN4core3ptr8metadata8metadata17h163e40077ca65461E(ptr %meta) #10, !dbg !1848
; call core::ptr::metadata::from_raw_parts
  %0 = call ptr @_ZN4core3ptr8metadata14from_raw_parts17hdf5128deb57a5081E(ptr %self) #10, !dbg !1849
  ret ptr %0, !dbg !1850
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h2b1072a734c73bb2E"(ptr %ptr) unnamed_addr #0 !dbg !1851 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1856, metadata !DIExpression()), !dbg !1857
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1858, metadata !DIExpression()), !dbg !1863
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1865, metadata !DIExpression()), !dbg !1870
  store ptr %ptr, ptr %0, align 8, !dbg !1872
  %1 = load i64, ptr %0, align 8, !dbg !1872, !noundef !24
  %2 = icmp eq i64 %1, 0, !dbg !1873
  ret i1 %2, !dbg !1874
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0ffc917f38722119E"(ptr %self) unnamed_addr #0 !dbg !1875 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1877, metadata !DIExpression()), !dbg !1878
  store ptr %self, ptr %_2, align 8, !dbg !1879
  %0 = load ptr, ptr %_2, align 8, !dbg !1880, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h2b1072a734c73bb2E"(ptr %0) #10, !dbg !1880
  ret i1 %1, !dbg !1881
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h39beab9ca460943bE"(ptr %self) unnamed_addr #0 !dbg !1882 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1884, metadata !DIExpression()), !dbg !1885
  store ptr %self, ptr %_2, align 8, !dbg !1886
  %0 = load ptr, ptr %_2, align 8, !dbg !1887, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h2b1072a734c73bb2E"(ptr %0) #10, !dbg !1887
  ret i1 %1, !dbg !1888
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h8c59d9ec96e33016E"(ptr %self, ptr %origin) unnamed_addr #0 !dbg !1889 {
start:
  %origin.dbg.spill.i = alloca ptr, align 8
  %this.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %pointee_size.dbg.spill = alloca i64, align 8
  %origin.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca i8, align 1
  %_4 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1893, metadata !DIExpression()), !dbg !1899
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1895, metadata !DIExpression()), !dbg !1900
  store ptr %origin, ptr %origin.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill, metadata !1894, metadata !DIExpression()), !dbg !1901
  store ptr %self, ptr %_4, align 8, !dbg !1902
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_4, i32 0, i32 1, !dbg !1902
  store ptr %origin, ptr %1, align 8, !dbg !1902
  %2 = load ptr, ptr %_4, align 8, !dbg !1902, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_4, i32 0, i32 1, !dbg !1902
  %4 = load ptr, ptr %3, align 8, !dbg !1902, !noundef !24
  store ptr %2, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !1903, metadata !DIExpression()), !dbg !1910
  store ptr %4, ptr %origin.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill.i, metadata !1909, metadata !DIExpression()), !dbg !1910
  %_4.i = icmp uge ptr %2, %4, !dbg !1912
  %_3.i = xor i1 %_4.i, true, !dbg !1914
  br i1 %_3.i, label %bb1.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h74470608b1fc274eE.exit", !dbg !1914

bb1.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc357, i64 71) #11, !dbg !1915
  unreachable, !dbg !1915

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h74470608b1fc274eE.exit": ; preds = %start
  store i64 24, ptr %pointee_size.dbg.spill, align 8, !dbg !1916
  call void @llvm.dbg.declare(metadata ptr %pointee_size.dbg.spill, metadata !1897, metadata !DIExpression()), !dbg !1917
  %_8 = icmp ult i64 0, 24, !dbg !1918
  br i1 %_8, label %bb4, label %bb3, !dbg !1918

bb3:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h74470608b1fc274eE.exit"
  store i8 0, ptr %_7, align 1, !dbg !1918
  br label %bb5, !dbg !1918

bb4:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h74470608b1fc274eE.exit"
  %_10 = icmp ule i64 24, 9223372036854775807, !dbg !1919
  %5 = zext i1 %_10 to i8, !dbg !1918
  store i8 %5, ptr %_7, align 1, !dbg !1918
  br label %bb5, !dbg !1918

bb5:                                              ; preds = %bb3, %bb4
  %6 = load i8, ptr %_7, align 1, !dbg !1920, !range !210, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !1920
  %_6 = xor i1 %7, true, !dbg !1920
  br i1 %_6, label %bb6, label %bb7, !dbg !1920

bb7:                                              ; preds = %bb5
  %8 = ptrtoint ptr %self to i64, !dbg !1921
  %9 = ptrtoint ptr %origin to i64, !dbg !1921
  %10 = sub nuw i64 %8, %9, !dbg !1921
  %11 = udiv exact i64 %10, 24, !dbg !1921
  store i64 %11, ptr %0, align 8, !dbg !1921
  %12 = load i64, ptr %0, align 8, !dbg !1921, !noundef !24
  ret i64 %12, !dbg !1922

bb6:                                              ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc354, i64 73, ptr align 8 @alloc356) #11, !dbg !1920
  unreachable, !dbg !1920
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h1865381c5371083cE"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !1923 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1926, metadata !DIExpression()), !dbg !1927
; call core::ptr::metadata::metadata
  %2 = call i64 @_ZN4core3ptr8metadata8metadata17h28e9a44b1a4defa6E(ptr %self.0, i64 %self.1) #10, !dbg !1928
  ret i64 %2, !dbg !1929
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17haa644275dcb538efE"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !1930 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1934, metadata !DIExpression()), !dbg !1935
  ret ptr %self.0, !dbg !1936
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf82c206c24146943E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !1937 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1945, metadata !DIExpression()), !dbg !1949
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1946, metadata !DIExpression()), !dbg !1950
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc7d1bbe173cff432E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !1951
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !1951
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !1951
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !1952
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !1952
  ret { ptr, i64 } %7, !dbg !1952
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17ha5ddd80e808f2e45E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !1953 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1959, metadata !DIExpression()), !dbg !1961
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1960, metadata !DIExpression()), !dbg !1962
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h817a1d02df95443aE"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !1963
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !1963
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !1963
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !1964
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !1964
  ret { ptr, i64 } %5, !dbg !1964
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17haac3e8b4c0f9643eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid, ptr align 8 %1) unnamed_addr #0 !dbg !1965 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1974, metadata !DIExpression()), !dbg !1976
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !1975, metadata !DIExpression()), !dbg !1977
  %_4 = icmp ule i64 %mid, %self.1, !dbg !1978
  %_3 = xor i1 %_4, true, !dbg !1979
  br i1 %_3, label %bb1, label %bb2, !dbg !1979

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h062c2d5e463458f8E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) #10, !dbg !1980
  ret void, !dbg !1981

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc358, i64 35, ptr align 8 %1) #11, !dbg !1979
  unreachable, !dbg !1979
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !1982 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1986, metadata !DIExpression()), !dbg !1990
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1987, metadata !DIExpression()), !dbg !1991
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h6b7de9994ee6e0bcE"(i64 %index, ptr %self.0, i64 %self.1) #10, !dbg !1992
  ret ptr %_3, !dbg !1993
}

; core::slice::<impl [T]>::as_mut_ptr_range
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h91cdc4b7d36f798dE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1994 {
start:
  %self.dbg.spill.i4 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = alloca { ptr, ptr }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2004, metadata !DIExpression()), !dbg !2009
  store ptr %self.0, ptr %self.dbg.spill.i4, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i4, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !2010, metadata !DIExpression()), !dbg !2015
  store ptr %self.0, ptr %start.dbg.spill, align 8, !dbg !2017
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2005, metadata !DIExpression()), !dbg !2018
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !291, metadata !DIExpression()), !dbg !2019
  store i64 %self.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !297, metadata !DIExpression()), !dbg !2021
  store ptr %self.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !301, metadata !DIExpression()), !dbg !2022
  store i64 %self.1, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !306, metadata !DIExpression()), !dbg !2024
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %self.1, !dbg !2025
  store ptr %5, ptr %0, align 8, !dbg !2025
  %_3.i = load ptr, ptr %0, align 8, !dbg !2025, !noundef !24
  store ptr %_3.i, ptr %end.dbg.spill, align 8, !dbg !2026
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2007, metadata !DIExpression()), !dbg !2027
  store ptr %self.0, ptr %1, align 8, !dbg !2028
  %6 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !2028
  store ptr %_3.i, ptr %6, align 8, !dbg !2028
  %7 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0, !dbg !2029
  %8 = load ptr, ptr %7, align 8, !dbg !2029, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !2029
  %10 = load ptr, ptr %9, align 8, !dbg !2029, !noundef !24
  %11 = insertvalue { ptr, ptr } undef, ptr %8, 0, !dbg !2029
  %12 = insertvalue { ptr, ptr } %11, ptr %10, 1, !dbg !2029
  ret { ptr, ptr } %12, !dbg !2029
}

; core::slice::<impl [T]>::sort_unstable_by
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h28a1a9a5f6304447E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2030 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_4 = alloca ptr, align 8
  %compare = alloca %"[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]", align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2034, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.declare(metadata ptr %compare, metadata !2035, metadata !DIExpression()), !dbg !2039
  store ptr %compare, ptr %_4, align 8, !dbg !2040
  %2 = load ptr, ptr %_4, align 8, !dbg !2041, !nonnull !24, !align !2042, !noundef !24
; call core::slice::sort::quicksort
  call void @_ZN4core5slice4sort9quicksort17h65d58888f6b725fcE(ptr align 8 %self.0, i64 %self.1, ptr align 1 %2) #10, !dbg !2041
  ret void, !dbg !2043
}

; core::slice::<impl [T]>::sort_unstable_by::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2044 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  %_5 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2050, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2051
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2048, metadata !DIExpression()), !dbg !2052
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2049, metadata !DIExpression()), !dbg !2053
  %_8 = load ptr, ptr %_1, align 8, !dbg !2054, !nonnull !24, !align !2042, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2054
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2054
  store ptr %b, ptr %0, align 8, !dbg !2054
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2054
  %2 = load ptr, ptr %1, align 8, !dbg !2054, !nonnull !24, !align !504, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2054
  %4 = load ptr, ptr %3, align 8, !dbg !2054, !nonnull !24, !align !504, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %5 = call i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h395a9740f6ec9df5E"(ptr align 1 %_8, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2054, !range !739
  store i8 %5, ptr %_5, align 1, !dbg !2054
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %6 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h08b9696236dc6075E"(ptr align 1 %_5, ptr align 1 @alloc69) #10, !dbg !2054
  ret i1 %6, !dbg !2055
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h062c2d5e463458f8E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 !dbg !2056 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %mid.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i3 = alloca { ptr, i64 }, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2060, metadata !DIExpression()), !dbg !2066
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !2061, metadata !DIExpression()), !dbg !2067
  store i64 %self.1, ptr %len.dbg.spill, align 8, !dbg !2068
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2062, metadata !DIExpression()), !dbg !2069
  store ptr %self.0, ptr %self.dbg.spill.i3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i3, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !2010, metadata !DIExpression()), !dbg !2070
  store ptr %self.0, ptr %ptr.dbg.spill, align 8, !dbg !2072
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2064, metadata !DIExpression()), !dbg !2073
  store i64 %mid, ptr %_7, align 8, !dbg !2074
  %5 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !2074
  store i64 %self.1, ptr %5, align 8, !dbg !2074
  %6 = load i64, ptr %_7, align 8, !dbg !2074, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !2074
  %8 = load i64, ptr %7, align 8, !dbg !2074, !noundef !24
  store i64 %6, ptr %mid.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill.i, metadata !2075, metadata !DIExpression()), !dbg !2082
  store i64 %8, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2081, metadata !DIExpression()), !dbg !2082
  %_4.i = icmp ule i64 %6, %8, !dbg !2084
  %_3.i4 = xor i1 %_4.i, true, !dbg !2086
  br i1 %_3.i4, label %bb1.i, label %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17hef2e30e888fa4944E.exit", !dbg !2086

bb1.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc361, i64 104) #11, !dbg !2087
  unreachable, !dbg !2087

"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17hef2e30e888fa4944E.exit": ; preds = %start
; call core::slice::raw::from_raw_parts_mut
  %9 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h02aca73b149d318eE(ptr %self.0, i64 %mid) #10, !dbg !2088
  %_9.0 = extractvalue { ptr, i64 } %9, 0, !dbg !2088
  %_9.1 = extractvalue { ptr, i64 } %9, 1, !dbg !2088
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !291, metadata !DIExpression()), !dbg !2089
  store i64 %mid, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !297, metadata !DIExpression()), !dbg !2091
  store ptr %self.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !301, metadata !DIExpression()), !dbg !2092
  store i64 %mid, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !306, metadata !DIExpression()), !dbg !2094
  %10 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %mid, !dbg !2095
  store ptr %10, ptr %1, align 8, !dbg !2095
  %_3.i = load ptr, ptr %1, align 8, !dbg !2095, !noundef !24
  %_16.0 = sub i64 %self.1, %mid, !dbg !2096
  %_16.1 = icmp ult i64 %self.1, %mid, !dbg !2096
  %11 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !2096
  br i1 %11, label %panic, label %bb5, !dbg !2096

bb5:                                              ; preds = %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17hef2e30e888fa4944E.exit"
; call core::slice::raw::from_raw_parts_mut
  %12 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h02aca73b149d318eE(ptr %_3.i, i64 %_16.0) #10, !dbg !2097
  %_12.0 = extractvalue { ptr, i64 } %12, 0, !dbg !2097
  %_12.1 = extractvalue { ptr, i64 } %12, 1, !dbg !2097
  %13 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2098
  store ptr %_9.0, ptr %13, align 8, !dbg !2098
  %14 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2098
  store i64 %_9.1, ptr %14, align 8, !dbg !2098
  %15 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %0, i32 0, i32 1, !dbg !2098
  %16 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 0, !dbg !2098
  store ptr %_12.0, ptr %16, align 8, !dbg !2098
  %17 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 1, !dbg !2098
  store i64 %_12.1, ptr %17, align 8, !dbg !2098
  ret void, !dbg !2099

panic:                                            ; preds = %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17hef2e30e888fa4944E.exit"
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc360) #11, !dbg !2096
  unreachable, !dbg !2096
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hba14cdcfec7012a6E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2100 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2104, metadata !DIExpression()), !dbg !2105
; call core::slice::iter::Iter<T>::new
  %2 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h54ac29da1684dc08E"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2106
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !2106
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !2106
  %5 = insertvalue { ptr, ptr } undef, ptr %3, 0, !dbg !2107
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !2107
  ret { ptr, ptr } %6, !dbg !2107
}

; core::slice::<impl [T]>::swap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17heada400949a61ab0E"(ptr align 8 %self.0, i64 %self.1, i64 %a, i64 %b, ptr align 8 %0) unnamed_addr #0 !dbg !2108 {
start:
  %pb.dbg.spill = alloca ptr, align 8
  %pa.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2112, metadata !DIExpression()), !dbg !2119
  store i64 %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2113, metadata !DIExpression()), !dbg !2120
  store i64 %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2114, metadata !DIExpression()), !dbg !2121
  %_6 = icmp ult i64 %a, %self.1, !dbg !2122
  %3 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !2122
  br i1 %3, label %bb1, label %panic, !dbg !2122

bb1:                                              ; preds = %start
  %pa = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %a, !dbg !2123
  store ptr %pa, ptr %pa.dbg.spill, align 8, !dbg !2123
  call void @llvm.dbg.declare(metadata ptr %pa.dbg.spill, metadata !2115, metadata !DIExpression()), !dbg !2124
  %_9 = icmp ult i64 %b, %self.1, !dbg !2125
  %4 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !2125
  br i1 %4, label %bb2, label %panic1, !dbg !2125

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %a, i64 %self.1, ptr align 8 %0) #11, !dbg !2122
  unreachable, !dbg !2122

bb2:                                              ; preds = %bb1
  %pb = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %b, !dbg !2126
  store ptr %pb, ptr %pb.dbg.spill, align 8, !dbg !2126
  call void @llvm.dbg.declare(metadata ptr %pb.dbg.spill, metadata !2117, metadata !DIExpression()), !dbg !2127
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h59951b18b0ba78c3E(ptr %pa, ptr %pb) #10, !dbg !2128
  ret void, !dbg !2129

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %b, i64 %self.1, ptr align 8 %0) #11, !dbg !2125
  unreachable, !dbg !2125
}

; core::slice::<impl [T]>::reverse
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17hb56fb59b8f5db9d2E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2130 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %back_half.dbg.spill = alloca { ptr, i64 }, align 8
  %front_half.dbg.spill = alloca { ptr, i64 }, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %half_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_10 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2134, metadata !DIExpression()), !dbg !2143
  %half_len = udiv i64 %self.1, 2, !dbg !2144
  store i64 %half_len, ptr %half_len.dbg.spill, align 8, !dbg !2144
  call void @llvm.dbg.declare(metadata ptr %half_len.dbg.spill, metadata !2135, metadata !DIExpression()), !dbg !2145
; call core::slice::<impl [T]>::as_mut_ptr_range
  %3 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h91cdc4b7d36f798dE"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2146
  %_7.0 = extractvalue { ptr, ptr } %3, 0, !dbg !2146
  %_7.1 = extractvalue { ptr, ptr } %3, 1, !dbg !2146
  store ptr %_7.0, ptr %start.dbg.spill, align 8, !dbg !2147
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2137, metadata !DIExpression()), !dbg !2148
  store ptr %_7.1, ptr %end.dbg.spill, align 8, !dbg !2149
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2139, metadata !DIExpression()), !dbg !2150
; call core::slice::raw::from_raw_parts_mut
  %4 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h02aca73b149d318eE(ptr %_7.0, i64 %half_len) #10, !dbg !2151
  %_11.0 = extractvalue { ptr, i64 } %4, 0, !dbg !2151
  %_11.1 = extractvalue { ptr, i64 } %4, 1, !dbg !2151
  store ptr %_7.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2152, metadata !DIExpression()), !dbg !2156
  store i64 %half_len, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2155, metadata !DIExpression()), !dbg !2158
  store i64 %half_len, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2159, metadata !DIExpression()), !dbg !2166
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2168, metadata !DIExpression()), !dbg !2174
  store i64 %half_len, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2173, metadata !DIExpression()), !dbg !2176
  %5 = sub i64 0, %half_len, !dbg !2177
  store ptr %_7.1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !301, metadata !DIExpression()), !dbg !2178
  store i64 %5, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !306, metadata !DIExpression()), !dbg !2180
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_7.1, i64 %5, !dbg !2181
  store ptr %6, ptr %0, align 8, !dbg !2181
  %_3.i = load ptr, ptr %0, align 8, !dbg !2181, !noundef !24
; call core::slice::raw::from_raw_parts_mut
  %7 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h02aca73b149d318eE(ptr %_3.i, i64 %half_len) #10, !dbg !2182
  %_12.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2182
  %_12.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2182
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !2183
  store ptr %_11.0, ptr %8, align 8, !dbg !2183
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !2183
  store i64 %_11.1, ptr %9, align 8, !dbg !2183
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !2183
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2183
  store ptr %_12.0, ptr %11, align 8, !dbg !2183
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2183
  store i64 %_12.1, ptr %12, align 8, !dbg !2183
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !2184
  %front_half.0 = load ptr, ptr %13, align 8, !dbg !2184, !nonnull !24, !align !504, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !2184
  %front_half.1 = load i64, ptr %14, align 8, !dbg !2184, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 0, !dbg !2184
  store ptr %front_half.0, ptr %15, align 8, !dbg !2184
  %16 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 1, !dbg !2184
  store i64 %front_half.1, ptr %16, align 8, !dbg !2184
  call void @llvm.dbg.declare(metadata ptr %front_half.dbg.spill, metadata !2140, metadata !DIExpression()), !dbg !2185
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !2186
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2186
  %back_half.0 = load ptr, ptr %18, align 8, !dbg !2186, !nonnull !24, !align !504, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2186
  %back_half.1 = load i64, ptr %19, align 8, !dbg !2186, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 0, !dbg !2186
  store ptr %back_half.0, ptr %20, align 8, !dbg !2186
  %21 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 1, !dbg !2186
  store i64 %back_half.1, ptr %21, align 8, !dbg !2186
  call void @llvm.dbg.declare(metadata ptr %back_half.dbg.spill, metadata !2142, metadata !DIExpression()), !dbg !2187
; call core::slice::<impl [T]>::reverse::revswap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17hee0f1f2ec0d20bd8E"(ptr align 8 %front_half.0, i64 %front_half.1, ptr align 8 %back_half.0, i64 %back_half.1, i64 %half_len) #10, !dbg !2188
  ret void, !dbg !2189
}

; core::slice::<impl [T]>::reverse::revswap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17hee0f1f2ec0d20bd8E"(ptr align 8 %a.0, i64 %a.1, ptr align 8 %b.0, i64 %b.1, i64 %n) unnamed_addr #0 !dbg !2190 {
start:
  %b.dbg.spill6 = alloca { ptr, i64 }, align 8
  %a.dbg.spill3 = alloca { ptr, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %a.dbg.spill = alloca { ptr, i64 }, align 8
  %i = alloca i64, align 8
  %_22 = alloca i64, align 8
  %_19 = alloca i64, align 8
  %_16 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 0
  store ptr %a.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 1
  store i64 %a.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2195, metadata !DIExpression()), !dbg !2203
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2196, metadata !DIExpression()), !dbg !2204
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !2197, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2201, metadata !DIExpression()), !dbg !2206
  %_5 = icmp eq i64 %a.1, %n, !dbg !2207
  %_4 = xor i1 %_5, true, !dbg !2208
  br i1 %_4, label %bb1, label %bb2, !dbg !2208

bb2:                                              ; preds = %start
  %_10 = icmp eq i64 %b.1, %n, !dbg !2209
  %_9 = xor i1 %_10, true, !dbg !2210
  br i1 %_9, label %bb3, label %bb4, !dbg !2210

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc362, i64 30, ptr align 8 @alloc364) #11, !dbg !2208
  unreachable, !dbg !2208

bb4:                                              ; preds = %bb2
  store i64 %n, ptr %_19, align 8, !dbg !2211
  %4 = load i64, ptr %_19, align 8, !dbg !2212, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h99932268dd4a9ac3E"(ptr align 8 %a.0, i64 %a.1, i64 %4, ptr align 8 @alloc369) #10, !dbg !2212
  %_18.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2212
  %_18.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2212
  store i64 %n, ptr %_22, align 8, !dbg !2213
  %6 = load i64, ptr %_22, align 8, !dbg !2214, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %7 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h99932268dd4a9ac3E"(ptr align 8 %b.0, i64 %b.1, i64 %6, ptr align 8 @alloc371) #10, !dbg !2214
  %_21.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2214
  %_21.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2214
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !2215
  store ptr %_18.0, ptr %8, align 8, !dbg !2215
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !2215
  store i64 %_18.1, ptr %9, align 8, !dbg !2215
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_16, i32 0, i32 1, !dbg !2215
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2215
  store ptr %_21.0, ptr %11, align 8, !dbg !2215
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2215
  store i64 %_21.1, ptr %12, align 8, !dbg !2215
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !2216
  %a.01 = load ptr, ptr %13, align 8, !dbg !2216, !nonnull !24, !align !504, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !2216
  %a.12 = load i64, ptr %14, align 8, !dbg !2216, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 0, !dbg !2216
  store ptr %a.01, ptr %15, align 8, !dbg !2216
  %16 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 1, !dbg !2216
  store i64 %a.12, ptr %16, align 8, !dbg !2216
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill3, metadata !2198, metadata !DIExpression()), !dbg !2217
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_16, i32 0, i32 1, !dbg !2218
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2218
  %b.04 = load ptr, ptr %18, align 8, !dbg !2218, !nonnull !24, !align !504, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2218
  %b.15 = load i64, ptr %19, align 8, !dbg !2218, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 0, !dbg !2218
  store ptr %b.04, ptr %20, align 8, !dbg !2218
  %21 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 1, !dbg !2218
  store i64 %b.15, ptr %21, align 8, !dbg !2218
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill6, metadata !2200, metadata !DIExpression()), !dbg !2219
  store i64 0, ptr %i, align 8, !dbg !2220
  br label %bb7, !dbg !2221

bb3:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc365, i64 30, ptr align 8 @alloc367) #11, !dbg !2210
  unreachable, !dbg !2210

bb7:                                              ; preds = %bb14, %bb4
  %_25 = load i64, ptr %i, align 8, !dbg !2222, !noundef !24
  %_24 = icmp ult i64 %_25, %n, !dbg !2222
  br i1 %_24, label %bb8, label %bb15, !dbg !2222

bb15:                                             ; preds = %bb7
  ret void, !dbg !2223

bb8:                                              ; preds = %bb7
  %_28 = load i64, ptr %i, align 8, !dbg !2224, !noundef !24
  %_30 = icmp ult i64 %_28, %a.12, !dbg !2225
  %22 = call i1 @llvm.expect.i1(i1 %_30, i1 true), !dbg !2225
  br i1 %22, label %bb9, label %panic, !dbg !2225

bb9:                                              ; preds = %bb8
  %_27 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %a.01, i64 0, i64 %_28, !dbg !2226
  %_34.0 = sub i64 %n, 1, !dbg !2227
  %_34.1 = icmp ult i64 %n, 1, !dbg !2227
  %23 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !2227
  br i1 %23, label %panic7, label %bb10, !dbg !2227

panic:                                            ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %_28, i64 %a.12, ptr align 8 @alloc373) #11, !dbg !2225
  unreachable, !dbg !2225

bb10:                                             ; preds = %bb9
  %_35 = load i64, ptr %i, align 8, !dbg !2228, !noundef !24
  %_36.0 = sub i64 %_34.0, %_35, !dbg !2227
  %_36.1 = icmp ult i64 %_34.0, %_35, !dbg !2227
  %24 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !2227
  br i1 %24, label %panic8, label %bb11, !dbg !2227

panic7:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc375) #11, !dbg !2227
  unreachable, !dbg !2227

bb11:                                             ; preds = %bb10
  %_38 = icmp ult i64 %_36.0, %b.15, !dbg !2229
  %25 = call i1 @llvm.expect.i1(i1 %_38, i1 true), !dbg !2229
  br i1 %25, label %bb12, label %panic9, !dbg !2229

panic8:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc375) #11, !dbg !2227
  unreachable, !dbg !2227

bb12:                                             ; preds = %bb11
  %_31 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %b.04, i64 0, i64 %_36.0, !dbg !2230
; call core::mem::swap
  call void @_ZN4core3mem4swap17hdd0820cc94f081c7E(ptr align 8 %_27, ptr align 8 %_31) #10, !dbg !2231
  %26 = load i64, ptr %i, align 8, !dbg !2232, !noundef !24
  %27 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %26, i64 1), !dbg !2232
  %_39.0 = extractvalue { i64, i1 } %27, 0, !dbg !2232
  %_39.1 = extractvalue { i64, i1 } %27, 1, !dbg !2232
  %28 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false), !dbg !2232
  br i1 %28, label %panic10, label %bb14, !dbg !2232

panic9:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %_36.0, i64 %b.15, ptr align 8 @alloc377) #11, !dbg !2229
  unreachable, !dbg !2229

bb14:                                             ; preds = %bb12
  store i64 %_39.0, ptr %i, align 8, !dbg !2232
  br label %bb7, !dbg !2221

panic10:                                          ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc379) #11, !dbg !2232
  unreachable, !dbg !2232
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h02aca73b149d318eE(ptr %data, i64 %len) unnamed_addr #0 !dbg !2233 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !2239, metadata !DIExpression()), !dbg !2241
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2240, metadata !DIExpression()), !dbg !2242
  store ptr %data, ptr %_4, align 8, !dbg !2243
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !2243
  store i64 %len, ptr %0, align 8, !dbg !2243
  %1 = load ptr, ptr %_4, align 8, !dbg !2243, !noundef !24
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !2243
  %3 = load i64, ptr %2, align 8, !dbg !2243, !noundef !24
  store ptr %1, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !2244, metadata !DIExpression()), !dbg !2251
  store i64 %3, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2250, metadata !DIExpression()), !dbg !2251
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E(ptr %1) #10, !dbg !2253
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !2253

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !2253
  br label %bb3.i, !dbg !2253

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_valid_allocation_size
  %_7.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hf4c172ba13be3f02E(i64 %3) #10, !dbg !2255
  %4 = zext i1 %_7.i to i8, !dbg !2253
  store i8 %4, ptr %_4.i, align 1, !dbg !2253
  br label %bb3.i, !dbg !2253

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !2256, !range !210, !noundef !24
  %6 = trunc i8 %5 to i1, !dbg !2256
  %_3.i = xor i1 %6, true, !dbg !2256
  br i1 %_3.i, label %bb6.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17hff2b627985c6b074E.exit, !dbg !2256

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc380, i64 166) #11, !dbg !2257
  unreachable, !dbg !2257

_ZN4core5slice3raw18from_raw_parts_mut7runtime17hff2b627985c6b074E.exit: ; preds = %bb3.i
; call core::ptr::slice_from_raw_parts_mut
  %7 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4f44642fed623530E(ptr %data, i64 %len) #10, !dbg !2258
  %_5.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2258
  %_5.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2258
  %8 = insertvalue { ptr, i64 } undef, ptr %_5.0, 0, !dbg !2259
  %9 = insertvalue { ptr, i64 } %8, i64 %_5.1, 1, !dbg !2259
  ret { ptr, i64 } %9, !dbg !2259
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h54ac29da1684dc08E"(ptr align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2260 {
start:
  %self.dbg.spill.i6 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca ptr, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %end = alloca ptr, align 8
  %2 = alloca { ptr, ptr }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !2263, metadata !DIExpression()), !dbg !2268
  call void @llvm.dbg.declare(metadata ptr %end, metadata !2266, metadata !DIExpression()), !dbg !2269
  store ptr %slice.0, ptr %self.dbg.spill.i6, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i6, i32 0, i32 1
  store i64 %slice.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !2270, metadata !DIExpression()), !dbg !2275
  store ptr %slice.0, ptr %ptr.dbg.spill, align 8, !dbg !2277
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2264, metadata !DIExpression()), !dbg !2278
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0ffc917f38722119E"(ptr %slice.0) #10, !dbg !2279
  %_3 = xor i1 %_4, true, !dbg !2280
  call void @llvm.assume(i1 %_3), !dbg !2281
  br i1 false, label %bb3, label %bb4, !dbg !2282

bb4:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !213, metadata !DIExpression()), !dbg !2283
  store i64 %slice.1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !223, metadata !DIExpression()), !dbg !2285
  store ptr %slice.0, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !227, metadata !DIExpression()), !dbg !2286
  store i64 %slice.1, ptr %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i4, metadata !233, metadata !DIExpression()), !dbg !2288
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %slice.1, !dbg !2289
  store ptr %6, ptr %0, align 8, !dbg !2289
  %7 = load ptr, ptr %0, align 8, !dbg !2289, !noundef !24
  store ptr %7, ptr %end, align 8, !dbg !2290
  br label %bb5, !dbg !2290

bb3:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2291, metadata !DIExpression()), !dbg !2295
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2294, metadata !DIExpression()), !dbg !2297
  store ptr %slice.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !2298, metadata !DIExpression()), !dbg !2303
  store ptr %slice.0, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2305, metadata !DIExpression()), !dbg !2311
  store i64 %slice.1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !2310, metadata !DIExpression()), !dbg !2313
  store ptr %slice.0, ptr %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2.i, metadata !2314, metadata !DIExpression()), !dbg !2320
  store i64 %slice.1, ptr %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1.i, metadata !2319, metadata !DIExpression()), !dbg !2322
  %8 = getelementptr i8, ptr %slice.0, i64 %slice.1, !dbg !2323
  store ptr %8, ptr %1, align 8, !dbg !2323
  %9 = load ptr, ptr %1, align 8, !dbg !2323, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::with_metadata_of
  %10 = call ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h18ca5e21f2ab0970E"(ptr %9, ptr %slice.0) #10, !dbg !2324
  store ptr %10, ptr %end, align 8, !dbg !2325
  br label %bb5, !dbg !2325

bb5:                                              ; preds = %bb4, %bb3
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_12 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h18bc62e0621d126cE"(ptr %slice.0) #10, !dbg !2326
  %_15 = load ptr, ptr %end, align 8, !dbg !2327, !noundef !24
  %11 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1, !dbg !2328
  store ptr %_12, ptr %11, align 8, !dbg !2328
  store ptr %_15, ptr %2, align 8, !dbg !2328
  %12 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0, !dbg !2329
  %13 = load ptr, ptr %12, align 8, !dbg !2329, !noundef !24
  %14 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1, !dbg !2329
  %15 = load ptr, ptr %14, align 8, !dbg !2329, !nonnull !24, !noundef !24
  %16 = insertvalue { ptr, ptr } undef, ptr %13, 0, !dbg !2329
  %17 = insertvalue { ptr, ptr } %16, ptr %15, 1, !dbg !2329
  ret { ptr, ptr } %17, !dbg !2329
}

; core::slice::sort::insert_head
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_head17hc2222a955449100bE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2330 {
start:
  %self.dbg.spill.i30 = alloca ptr, align 8
  %self.dbg.spill.i29 = alloca ptr, align 8
  %self.dbg.spill.i28 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %count.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_47 = alloca ptr, align 8
  %_45 = alloca { ptr, ptr }, align 8
  %_39 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_35 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_18 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_9 = alloca { ptr, ptr }, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %6, align 8
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2335, metadata !DIExpression()), !dbg !2348
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2336, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2339, metadata !DIExpression()), !dbg !2350
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2341, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2343, metadata !DIExpression()), !dbg !2352
  %_4 = icmp uge i64 %v.1, 2, !dbg !2353
  %_3 = xor i1 %_4, true, !dbg !2354
  br i1 %_3, label %bb1, label %bb2, !dbg !2354

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::get_unchecked
  %_11 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %v.0, i64 %v.1, i64 1) #10, !dbg !2355
; call core::slice::<impl [T]>::get_unchecked
  %_14 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %v.0, i64 %v.1, i64 0) #10, !dbg !2356
  store ptr %_11, ptr %_9, align 8, !dbg !2357
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 1, !dbg !2357
  store ptr %_14, ptr %8, align 8, !dbg !2357
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 0, !dbg !2357
  %10 = load ptr, ptr %9, align 8, !dbg !2357, !nonnull !24, !align !504, !noundef !24
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 1, !dbg !2357
  %12 = load ptr, ptr %11, align 8, !dbg !2357, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_8 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %10, ptr align 8 %12) #10, !dbg !2357
  br i1 %_8, label %bb6, label %bb30, !dbg !2357

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc386, i64 30, ptr align 8 @alloc383) #11, !dbg !2354
  unreachable, !dbg !2354

bb30:                                             ; preds = %bb29, %bb2
  ret void, !dbg !2358

bb6:                                              ; preds = %bb2
  store ptr %v.0, ptr %self.dbg.spill.i28, align 8
  %13 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i28, i32 0, i32 1
  store i64 %v.1, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !2010, metadata !DIExpression()), !dbg !2359
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2361
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2337, metadata !DIExpression()), !dbg !2362
; call core::ptr::read
  call void @_ZN4core3ptr4read17hc4a3b4e001a11806E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_18, ptr %v.0) #10, !dbg !2363
  call void @llvm.dbg.declare(metadata ptr %_18, metadata !996, metadata !DIExpression()), !dbg !2364
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_18, i64 24, i1 false), !dbg !2366
  store ptr %tmp, ptr %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i30, metadata !2367, metadata !DIExpression()), !dbg !2374
  store ptr %v.0, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !291, metadata !DIExpression()), !dbg !2376
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !297, metadata !DIExpression()), !dbg !2378
  store ptr %v.0, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !301, metadata !DIExpression()), !dbg !2379
  store i64 1, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !306, metadata !DIExpression()), !dbg !2381
  %14 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2382
  store ptr %14, ptr %5, align 8, !dbg !2382
  %_3.i = load ptr, ptr %5, align 8, !dbg !2382, !noundef !24
  store ptr %tmp, ptr %hole, align 8, !dbg !2383
  %15 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2383
  store ptr %_3.i, ptr %15, align 8, !dbg !2383
  store ptr %v.0, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !291, metadata !DIExpression()), !dbg !2384
  store i64 1, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !297, metadata !DIExpression()), !dbg !2386
  store ptr %v.0, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !301, metadata !DIExpression()), !dbg !2387
  store i64 1, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !306, metadata !DIExpression()), !dbg !2389
  %16 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2390
  store ptr %16, ptr %4, align 8, !dbg !2390
  %_3.i15 = load ptr, ptr %4, align 8, !dbg !2390, !noundef !24
  store ptr %v.0, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !291, metadata !DIExpression()), !dbg !2391
  store i64 0, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !297, metadata !DIExpression()), !dbg !2393
  store ptr %v.0, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !301, metadata !DIExpression()), !dbg !2394
  store i64 0, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !306, metadata !DIExpression()), !dbg !2396
  store ptr %v.0, ptr %3, align 8, !dbg !2397
  %_3.i18 = load ptr, ptr %3, align 8, !dbg !2397, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %_3.i15, ptr %_3.i18, i64 1) #10, !dbg !2398
  store i64 2, ptr %_35, align 8, !dbg !2399
  %17 = getelementptr inbounds { i64, i64 }, ptr %_35, i32 0, i32 1, !dbg !2399
  store i64 %v.1, ptr %17, align 8, !dbg !2399
  %18 = getelementptr inbounds { i64, i64 }, ptr %_35, i32 0, i32 0, !dbg !2399
  %19 = load i64, ptr %18, align 8, !dbg !2399, !noundef !24
  %20 = getelementptr inbounds { i64, i64 }, ptr %_35, i32 0, i32 1, !dbg !2399
  %21 = load i64, ptr %20, align 8, !dbg !2399, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %22 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17haf2af0e98b3b8b4eE"(i64 %19, i64 %21) #10, !dbg !2399
  %_34.0 = extractvalue { i64, i64 } %22, 0, !dbg !2399
  %_34.1 = extractvalue { i64, i64 } %22, 1, !dbg !2399
  %23 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2399
  store i64 %_34.0, ptr %23, align 8, !dbg !2399
  %24 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2399
  store i64 %_34.1, ptr %24, align 8, !dbg !2399
  br label %bb16, !dbg !2400

bb16:                                             ; preds = %bb25, %bb6
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %25 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hac6ae5e1fdafd993E"(ptr align 8 %iter) #10, !dbg !2352
  store { i64, i64 } %25, ptr %_39, align 8, !dbg !2352
  %_41 = load i64, ptr %_39, align 8, !dbg !2352, !range !1053, !noundef !24
  %26 = icmp eq i64 %_41, 0, !dbg !2352
  br i1 %26, label %bb29, label %bb18, !dbg !2352

bb29:                                             ; preds = %bb18, %bb16
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h3d495b159b1f4552E"(ptr %hole) #10, !dbg !2401
  br label %bb30, !dbg !2401

bb18:                                             ; preds = %bb16
  %27 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 1, !dbg !2402
  %i = load i64, ptr %27, align 8, !dbg !2402, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2402
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2345, metadata !DIExpression()), !dbg !2403
; call core::slice::<impl [T]>::get_unchecked
  %28 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %v.0, i64 %v.1, i64 %i) #10, !dbg !2404
  store ptr %28, ptr %_47, align 8, !dbg !2404
  %_62 = load ptr, ptr %_47, align 8, !dbg !2405, !nonnull !24, !align !504, !noundef !24
  store ptr %tmp, ptr %self.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i29, metadata !2367, metadata !DIExpression()), !dbg !2406
  store ptr %_62, ptr %_45, align 8, !dbg !2408
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_45, i32 0, i32 1, !dbg !2408
  store ptr %tmp, ptr %29, align 8, !dbg !2408
  %30 = getelementptr inbounds { ptr, ptr }, ptr %_45, i32 0, i32 0, !dbg !2408
  %31 = load ptr, ptr %30, align 8, !dbg !2408, !nonnull !24, !align !504, !noundef !24
  %32 = getelementptr inbounds { ptr, ptr }, ptr %_45, i32 0, i32 1, !dbg !2408
  %33 = load ptr, ptr %32, align 8, !dbg !2408, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_44 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %31, ptr align 8 %33) #10, !dbg !2408
  %_43 = xor i1 %_44, true, !dbg !2409
  br i1 %_43, label %bb29, label %bb23, !dbg !2409

bb19:                                             ; No predecessors!
  unreachable, !dbg !2352

bb23:                                             ; preds = %bb18
  store ptr %v.0, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !291, metadata !DIExpression()), !dbg !2410
  store i64 %i, ptr %count.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i3, metadata !297, metadata !DIExpression()), !dbg !2412
  store ptr %v.0, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !301, metadata !DIExpression()), !dbg !2413
  store i64 %i, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !306, metadata !DIExpression()), !dbg !2415
  %34 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2416
  store ptr %34, ptr %2, align 8, !dbg !2416
  %_3.i21 = load ptr, ptr %2, align 8, !dbg !2416, !noundef !24
  %_59.0 = sub i64 %i, 1, !dbg !2417
  %_59.1 = icmp ult i64 %i, 1, !dbg !2417
  %35 = call i1 @llvm.expect.i1(i1 %_59.1, i1 false), !dbg !2417
  br i1 %35, label %panic, label %bb25, !dbg !2417

bb25:                                             ; preds = %bb23
  store ptr %v.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !291, metadata !DIExpression()), !dbg !2418
  store i64 %_59.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !297, metadata !DIExpression()), !dbg !2420
  store ptr %v.0, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !301, metadata !DIExpression()), !dbg !2421
  store i64 %_59.0, ptr %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i22, metadata !306, metadata !DIExpression()), !dbg !2423
  %36 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_59.0, !dbg !2424
  store ptr %36, ptr %1, align 8, !dbg !2424
  %_3.i24 = load ptr, ptr %1, align 8, !dbg !2424, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %_3.i21, ptr %_3.i24, i64 1) #10, !dbg !2425
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !291, metadata !DIExpression()), !dbg !2426
  store i64 %i, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !297, metadata !DIExpression()), !dbg !2428
  store ptr %v.0, ptr %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i26, metadata !301, metadata !DIExpression()), !dbg !2429
  store i64 %i, ptr %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i25, metadata !306, metadata !DIExpression()), !dbg !2431
  %37 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2432
  store ptr %37, ptr %0, align 8, !dbg !2432
  %_3.i27 = load ptr, ptr %0, align 8, !dbg !2432, !noundef !24
  %38 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2433
  store ptr %_3.i27, ptr %38, align 8, !dbg !2433
  br label %bb16, !dbg !2400

panic:                                            ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc385) #11, !dbg !2417
  unreachable, !dbg !2417
}

; core::slice::sort::insert_tail
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_tail17h64cc23de55da941bE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2434 {
start:
  %self.dbg.spill.i24 = alloca ptr, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %self.dbg.spill.i22 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %rhs.dbg.spill.i.i6 = alloca i64, align 8
  %self.dbg.spill.i1.i7 = alloca i64, align 8
  %self.dbg.spill.i.i8 = alloca i64, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %j_ptr.dbg.spill = alloca ptr, align 8
  %j.dbg.spill = alloca i64, align 8
  %i_ptr.dbg.spill = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_50 = alloca { ptr, ptr }, align 8
  %_42 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_38 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_22 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_16 = alloca { ptr, ptr }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2436, metadata !DIExpression()), !dbg !2462
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2437, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2444, metadata !DIExpression()), !dbg !2464
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2446, metadata !DIExpression()), !dbg !2465
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2448, metadata !DIExpression()), !dbg !2466
  %_4 = icmp uge i64 %v.1, 2, !dbg !2467
  %_3 = xor i1 %_4, true, !dbg !2468
  br i1 %_3, label %bb1, label %bb2, !dbg !2468

bb2:                                              ; preds = %start
  store ptr %v.0, ptr %self.dbg.spill.i22, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i22, i32 0, i32 1
  store i64 %v.1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !2010, metadata !DIExpression()), !dbg !2469
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2471
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2438, metadata !DIExpression()), !dbg !2472
  %_12.0 = sub i64 %v.1, 1, !dbg !2473
  %_12.1 = icmp ult i64 %v.1, 1, !dbg !2473
  %7 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2473
  br i1 %7, label %panic, label %bb4, !dbg !2473

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc386, i64 30, ptr align 8 @alloc388) #11, !dbg !2468
  unreachable, !dbg !2468

bb4:                                              ; preds = %bb2
  store i64 %_12.0, ptr %i.dbg.spill, align 8, !dbg !2473
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2440, metadata !DIExpression()), !dbg !2474
  store ptr %v.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !291, metadata !DIExpression()), !dbg !2475
  store i64 %_12.0, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !297, metadata !DIExpression()), !dbg !2477
  store ptr %v.0, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !301, metadata !DIExpression()), !dbg !2478
  store i64 %_12.0, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !306, metadata !DIExpression()), !dbg !2480
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_12.0, !dbg !2481
  store ptr %8, ptr %1, align 8, !dbg !2481
  %_3.i18 = load ptr, ptr %1, align 8, !dbg !2481, !noundef !24
  store ptr %_3.i18, ptr %i_ptr.dbg.spill, align 8, !dbg !2482
  call void @llvm.dbg.declare(metadata ptr %i_ptr.dbg.spill, metadata !2442, metadata !DIExpression()), !dbg !2483
  store ptr %_3.i18, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !2152, metadata !DIExpression()), !dbg !2484
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !2155, metadata !DIExpression()), !dbg !2486
  store i64 1, ptr %self.dbg.spill.i.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i8, metadata !2159, metadata !DIExpression()), !dbg !2487
  store i64 0, ptr %self.dbg.spill.i1.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i7, metadata !2168, metadata !DIExpression()), !dbg !2489
  store i64 1, ptr %rhs.dbg.spill.i.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i6, metadata !2173, metadata !DIExpression()), !dbg !2491
  store ptr %_3.i18, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !301, metadata !DIExpression()), !dbg !2492
  store i64 -1, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !306, metadata !DIExpression()), !dbg !2494
  %9 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_3.i18, i64 -1, !dbg !2495
  store ptr %9, ptr %3, align 8, !dbg !2495
  %_3.i = load ptr, ptr %3, align 8, !dbg !2495, !noundef !24
  store ptr %_3.i18, ptr %_16, align 8, !dbg !2496
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_16, i32 0, i32 1, !dbg !2496
  store ptr %_3.i, ptr %10, align 8, !dbg !2496
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_16, i32 0, i32 0, !dbg !2496
  %12 = load ptr, ptr %11, align 8, !dbg !2496, !nonnull !24, !align !504, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_16, i32 0, i32 1, !dbg !2496
  %14 = load ptr, ptr %13, align 8, !dbg !2496, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_15 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2496
  br i1 %_15, label %bb8, label %bb27, !dbg !2496

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc390) #11, !dbg !2473
  unreachable, !dbg !2473

bb27:                                             ; preds = %bb26, %bb4
  ret void, !dbg !2497

bb8:                                              ; preds = %bb4
; call core::ptr::read
  call void @_ZN4core3ptr4read17hc4a3b4e001a11806E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_22, ptr %_3.i18) #10, !dbg !2498
  call void @llvm.dbg.declare(metadata ptr %_22, metadata !996, metadata !DIExpression()), !dbg !2499
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_22, i64 24, i1 false), !dbg !2501
  store ptr %tmp, ptr %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i24, metadata !2367, metadata !DIExpression()), !dbg !2502
  store ptr %_3.i18, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !2152, metadata !DIExpression()), !dbg !2504
  store i64 1, ptr %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i4, metadata !2155, metadata !DIExpression()), !dbg !2506
  store i64 1, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2159, metadata !DIExpression()), !dbg !2507
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2168, metadata !DIExpression()), !dbg !2509
  store i64 1, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2173, metadata !DIExpression()), !dbg !2511
  store ptr %_3.i18, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !301, metadata !DIExpression()), !dbg !2512
  store i64 -1, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !306, metadata !DIExpression()), !dbg !2514
  %15 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_3.i18, i64 -1, !dbg !2515
  store ptr %15, ptr %2, align 8, !dbg !2515
  %_3.i15 = load ptr, ptr %2, align 8, !dbg !2515, !noundef !24
  store ptr %tmp, ptr %hole, align 8, !dbg !2516
  %16 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2516
  store ptr %_3.i15, ptr %16, align 8, !dbg !2516
  %17 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2517
  %_34 = load ptr, ptr %17, align 8, !dbg !2517, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %_34, ptr %_3.i18, i64 1) #10, !dbg !2518
  %_40.0 = sub i64 %_12.0, 1, !dbg !2519
  %_40.1 = icmp ult i64 %_12.0, 1, !dbg !2519
  %18 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false), !dbg !2519
  br i1 %18, label %panic1, label %bb14, !dbg !2519

bb14:                                             ; preds = %bb8
  store i64 0, ptr %_38, align 8, !dbg !2520
  %19 = getelementptr inbounds { i64, i64 }, ptr %_38, i32 0, i32 1, !dbg !2520
  store i64 %_40.0, ptr %19, align 8, !dbg !2520
  %20 = getelementptr inbounds { i64, i64 }, ptr %_38, i32 0, i32 0, !dbg !2520
  %21 = load i64, ptr %20, align 8, !dbg !2520, !noundef !24
  %22 = getelementptr inbounds { i64, i64 }, ptr %_38, i32 0, i32 1, !dbg !2520
  %23 = load i64, ptr %22, align 8, !dbg !2520, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %24 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h3e38ac3e9c2c377aE(i64 %21, i64 %23) #10, !dbg !2520
  %_37.0 = extractvalue { i64, i64 } %24, 0, !dbg !2520
  %_37.1 = extractvalue { i64, i64 } %24, 1, !dbg !2520
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %25 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h58a426f071ab13a9E"(i64 %_37.0, i64 %_37.1) #10, !dbg !2520
  %_36.0 = extractvalue { i64, i64 } %25, 0, !dbg !2520
  %_36.1 = extractvalue { i64, i64 } %25, 1, !dbg !2520
  %26 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2520
  store i64 %_36.0, ptr %26, align 8, !dbg !2520
  %27 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2520
  store i64 %_36.1, ptr %27, align 8, !dbg !2520
  br label %bb17, !dbg !2521

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc392) #11, !dbg !2519
  unreachable, !dbg !2519

bb17:                                             ; preds = %bb24, %bb14
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %28 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h26fee8b0705b7407E"(ptr align 8 %iter) #10, !dbg !2466
  store { i64, i64 } %28, ptr %_42, align 8, !dbg !2466
  %_44 = load i64, ptr %_42, align 8, !dbg !2466, !range !1053, !noundef !24
  %29 = icmp eq i64 %_44, 0, !dbg !2466
  br i1 %29, label %bb26, label %bb19, !dbg !2466

bb26:                                             ; preds = %bb19, %bb17
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h3d495b159b1f4552E"(ptr %hole) #10, !dbg !2522
  br label %bb27, !dbg !2522

bb19:                                             ; preds = %bb17
  %30 = getelementptr inbounds { i64, i64 }, ptr %_42, i32 0, i32 1, !dbg !2523
  %j = load i64, ptr %30, align 8, !dbg !2523, !noundef !24
  store i64 %j, ptr %j.dbg.spill, align 8, !dbg !2523
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !2458, metadata !DIExpression()), !dbg !2524
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !291, metadata !DIExpression()), !dbg !2525
  store i64 %j, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !297, metadata !DIExpression()), !dbg !2527
  store ptr %v.0, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !301, metadata !DIExpression()), !dbg !2528
  store i64 %j, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !306, metadata !DIExpression()), !dbg !2530
  %31 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %j, !dbg !2531
  store ptr %31, ptr %0, align 8, !dbg !2531
  %_3.i21 = load ptr, ptr %0, align 8, !dbg !2531, !noundef !24
  store ptr %_3.i21, ptr %j_ptr.dbg.spill, align 8, !dbg !2532
  call void @llvm.dbg.declare(metadata ptr %j_ptr.dbg.spill, metadata !2460, metadata !DIExpression()), !dbg !2533
  store ptr %tmp, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !2367, metadata !DIExpression()), !dbg !2534
  store ptr %tmp, ptr %_50, align 8, !dbg !2536
  %32 = getelementptr inbounds { ptr, ptr }, ptr %_50, i32 0, i32 1, !dbg !2536
  store ptr %_3.i21, ptr %32, align 8, !dbg !2536
  %33 = getelementptr inbounds { ptr, ptr }, ptr %_50, i32 0, i32 0, !dbg !2536
  %34 = load ptr, ptr %33, align 8, !dbg !2536, !nonnull !24, !align !504, !noundef !24
  %35 = getelementptr inbounds { ptr, ptr }, ptr %_50, i32 0, i32 1, !dbg !2536
  %36 = load ptr, ptr %35, align 8, !dbg !2536, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_49 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %34, ptr align 8 %36) #10, !dbg !2536
  %_48 = xor i1 %_49, true, !dbg !2537
  br i1 %_48, label %bb26, label %bb24, !dbg !2537

bb20:                                             ; No predecessors!
  unreachable, !dbg !2466

bb24:                                             ; preds = %bb19
  %37 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2538
  %_58 = load ptr, ptr %37, align 8, !dbg !2538, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %_3.i21, ptr %_58, i64 1) #10, !dbg !2539
  %38 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2540
  store ptr %_3.i21, ptr %38, align 8, !dbg !2540
  br label %bb17, !dbg !2521
}

; core::slice::sort::choose_pivot
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort12choose_pivot17hf7f3a6a67751ea08E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2541 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_38 = alloca { ptr, ptr, ptr }, align 8
  %_34 = alloca ptr, align 8
  %_30 = alloca ptr, align 8
  %_26 = alloca ptr, align 8
  %sort_adjacent = alloca ptr, align 8
  %sort3 = alloca ptr, align 8
  %sort2 = alloca %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", align 8
  %swaps = alloca i64, align 8
  %c = alloca i64, align 8
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2545, metadata !DIExpression()), !dbg !2578
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2546, metadata !DIExpression()), !dbg !2579
  call void @llvm.dbg.declare(metadata ptr %a, metadata !2549, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.declare(metadata ptr %b, metadata !2551, metadata !DIExpression()), !dbg !2581
  call void @llvm.dbg.declare(metadata ptr %c, metadata !2553, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.declare(metadata ptr %swaps, metadata !2555, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.declare(metadata ptr %sort2, metadata !2557, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.declare(metadata ptr %sort3, metadata !2566, metadata !DIExpression()), !dbg !2585
  call void @llvm.dbg.declare(metadata ptr %sort_adjacent, metadata !2572, metadata !DIExpression()), !dbg !2586
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2587
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2547, metadata !DIExpression()), !dbg !2588
  %_6 = udiv i64 %v.1, 4, !dbg !2589
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_6, i64 1), !dbg !2589
  %_7.0 = extractvalue { i64, i1 } %3, 0, !dbg !2589
  %_7.1 = extractvalue { i64, i1 } %3, 1, !dbg !2589
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !2589
  br i1 %4, label %panic, label %bb1, !dbg !2589

bb1:                                              ; preds = %start
  store i64 %_7.0, ptr %a, align 8, !dbg !2589
  %_9 = udiv i64 %v.1, 4, !dbg !2590
  %5 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_9, i64 2), !dbg !2590
  %_10.0 = extractvalue { i64, i1 } %5, 0, !dbg !2590
  %_10.1 = extractvalue { i64, i1 } %5, 1, !dbg !2590
  %6 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !2590
  br i1 %6, label %panic1, label %bb2, !dbg !2590

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc394) #11, !dbg !2589
  unreachable, !dbg !2589

bb2:                                              ; preds = %bb1
  store i64 %_10.0, ptr %b, align 8, !dbg !2590
  %_12 = udiv i64 %v.1, 4, !dbg !2591
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_12, i64 3), !dbg !2591
  %_13.0 = extractvalue { i64, i1 } %7, 0, !dbg !2591
  %_13.1 = extractvalue { i64, i1 } %7, 1, !dbg !2591
  %8 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !2591
  br i1 %8, label %panic2, label %bb3, !dbg !2591

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc396) #11, !dbg !2590
  unreachable, !dbg !2590

bb3:                                              ; preds = %bb2
  store i64 %_13.0, ptr %c, align 8, !dbg !2591
  store i64 0, ptr %swaps, align 8, !dbg !2592
  %_15 = icmp uge i64 %v.1, 8, !dbg !2593
  br i1 %_15, label %bb4, label %bb9, !dbg !2593

panic2:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc398) #11, !dbg !2591
  unreachable, !dbg !2591

bb9:                                              ; preds = %bb8, %bb3
  %_43 = load i64, ptr %swaps, align 8, !dbg !2594, !noundef !24
  %_42 = icmp ult i64 %_43, 12, !dbg !2594
  br i1 %_42, label %bb10, label %bb11, !dbg !2594

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 1, !dbg !2595
  store ptr %is_less, ptr %9, align 8, !dbg !2595
  %10 = getelementptr inbounds { ptr, i64 }, ptr %sort2, i32 0, i32 0, !dbg !2595
  store ptr %v.0, ptr %10, align 8, !dbg !2595
  %11 = getelementptr inbounds { ptr, i64 }, ptr %sort2, i32 0, i32 1, !dbg !2595
  store i64 %v.1, ptr %11, align 8, !dbg !2595
  %12 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 2, !dbg !2595
  store ptr %swaps, ptr %12, align 8, !dbg !2595
  store ptr %sort2, ptr %sort3, align 8, !dbg !2596
  %_21 = icmp uge i64 %v.1, 50, !dbg !2597
  br i1 %_21, label %bb5, label %bb8, !dbg !2597

bb8:                                              ; preds = %bb5, %bb4
  store ptr %a, ptr %_38, align 8, !dbg !2598
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_38, i32 0, i32 1, !dbg !2598
  store ptr %b, ptr %13, align 8, !dbg !2598
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_38, i32 0, i32 2, !dbg !2598
  store ptr %c, ptr %14, align 8, !dbg !2598
  %15 = load ptr, ptr %_38, align 8, !dbg !2598, !nonnull !24, !align !504, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_38, i32 0, i32 1, !dbg !2598
  %17 = load ptr, ptr %16, align 8, !dbg !2598, !nonnull !24, !align !504, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_38, i32 0, i32 2, !dbg !2598
  %19 = load ptr, ptr %18, align 8, !dbg !2598, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8974e035a2f1d5ceE"(ptr align 8 %sort3, ptr align 8 %15, ptr align 8 %17, ptr align 8 %19) #10, !dbg !2598
  br label %bb9, !dbg !2598

bb5:                                              ; preds = %bb4
  store ptr %sort3, ptr %sort_adjacent, align 8, !dbg !2599
  store ptr %a, ptr %_26, align 8, !dbg !2600
  %20 = load ptr, ptr %_26, align 8, !dbg !2600, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc098a7953860ed10E"(ptr align 8 %sort_adjacent, ptr align 8 %20) #10, !dbg !2600
  store ptr %b, ptr %_30, align 8, !dbg !2601
  %21 = load ptr, ptr %_30, align 8, !dbg !2601, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc098a7953860ed10E"(ptr align 8 %sort_adjacent, ptr align 8 %21) #10, !dbg !2601
  store ptr %c, ptr %_34, align 8, !dbg !2602
  %22 = load ptr, ptr %_34, align 8, !dbg !2602, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc098a7953860ed10E"(ptr align 8 %sort_adjacent, ptr align 8 %22) #10, !dbg !2602
  br label %bb8, !dbg !2602

bb11:                                             ; preds = %bb9
; call core::slice::<impl [T]>::reverse
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17hb56fb59b8f5db9d2E"(ptr align 8 %v.0, i64 %v.1) #10, !dbg !2603
  %_50.0 = sub i64 %v.1, 1, !dbg !2604
  %_50.1 = icmp ult i64 %v.1, 1, !dbg !2604
  %23 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false), !dbg !2604
  br i1 %23, label %panic3, label %bb13, !dbg !2604

bb10:                                             ; preds = %bb9
  %_44 = load i64, ptr %b, align 8, !dbg !2605, !noundef !24
  %_46 = load i64, ptr %swaps, align 8, !dbg !2606, !noundef !24
  %_45 = icmp eq i64 %_46, 0, !dbg !2606
  store i64 %_44, ptr %0, align 8, !dbg !2607
  %24 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2607
  %25 = zext i1 %_45 to i8, !dbg !2607
  store i8 %25, ptr %24, align 8, !dbg !2607
  br label %bb15, !dbg !2608

bb15:                                             ; preds = %bb14, %bb10
  %26 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !2609
  %27 = load i64, ptr %26, align 8, !dbg !2609, !noundef !24
  %28 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2609
  %29 = load i8, ptr %28, align 8, !dbg !2609, !range !210, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !2609
  %31 = zext i1 %30 to i8, !dbg !2609
  %32 = insertvalue { i64, i8 } undef, i64 %27, 0, !dbg !2609
  %33 = insertvalue { i64, i8 } %32, i8 %31, 1, !dbg !2609
  ret { i64, i8 } %33, !dbg !2609

bb13:                                             ; preds = %bb11
  %_51 = load i64, ptr %b, align 8, !dbg !2610, !noundef !24
  %_52.0 = sub i64 %_50.0, %_51, !dbg !2604
  %_52.1 = icmp ult i64 %_50.0, %_51, !dbg !2604
  %34 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !2604
  br i1 %34, label %panic4, label %bb14, !dbg !2604

panic3:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc400) #11, !dbg !2604
  unreachable, !dbg !2604

bb14:                                             ; preds = %bb13
  store i64 %_52.0, ptr %0, align 8, !dbg !2611
  %35 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2611
  store i8 1, ptr %35, align 8, !dbg !2611
  br label %bb15, !dbg !2608

panic4:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc400) #11, !dbg !2604
  unreachable, !dbg !2604
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h5c85e7a9f2c2a658E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2612 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2618, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 16, DW_OP_deref)), !dbg !2621
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2619, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2622
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2620, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 24, DW_OP_deref)), !dbg !2623
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2616, metadata !DIExpression()), !dbg !2624
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2617, metadata !DIExpression()), !dbg !2625
  %0 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 1, !dbg !2626
  %_16 = load ptr, ptr %0, align 8, !dbg !2626, !nonnull !24, !align !504, !noundef !24
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2627
  %_17.0 = load ptr, ptr %1, align 8, !dbg !2627, !nonnull !24, !align !504, !noundef !24
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2627
  %_17.1 = load i64, ptr %2, align 8, !dbg !2627, !noundef !24
  %_8 = load i64, ptr %b, align 8, !dbg !2628, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_7 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %_17.0, i64 %_17.1, i64 %_8) #10, !dbg !2627
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2629
  %_18.0 = load ptr, ptr %3, align 8, !dbg !2629, !nonnull !24, !align !504, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2629
  %_18.1 = load i64, ptr %4, align 8, !dbg !2629, !noundef !24
  %_11 = load i64, ptr %a, align 8, !dbg !2630, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_10 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %_18.0, i64 %_18.1, i64 %_11) #10, !dbg !2629
  store ptr %_7, ptr %_5, align 8, !dbg !2626
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2626
  store ptr %_10, ptr %5, align 8, !dbg !2626
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 0, !dbg !2626
  %7 = load ptr, ptr %6, align 8, !dbg !2626, !nonnull !24, !align !504, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2626
  %9 = load ptr, ptr %8, align 8, !dbg !2626, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %_16, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2626
  br i1 %_4, label %bb4, label %bb7, !dbg !2626

bb7:                                              ; preds = %bb6, %start
  ret void, !dbg !2631

bb4:                                              ; preds = %start
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h5e214ee24fa407efE(ptr %a, ptr %b) #10, !dbg !2632
  %10 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2633
  %_19 = load ptr, ptr %10, align 8, !dbg !2633, !nonnull !24, !align !504, !noundef !24
  %11 = load i64, ptr %_19, align 8, !dbg !2633, !noundef !24
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %11, i64 1), !dbg !2633
  %_15.0 = extractvalue { i64, i1 } %12, 0, !dbg !2633
  %_15.1 = extractvalue { i64, i1 } %12, 1, !dbg !2633
  %13 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2633
  %_20 = load ptr, ptr %13, align 8, !dbg !2633, !nonnull !24, !align !504, !noundef !24
  %14 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !2633
  br i1 %14, label %panic, label %bb6, !dbg !2633

bb6:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2633
  %_21 = load ptr, ptr %15, align 8, !dbg !2633, !nonnull !24, !align !504, !noundef !24
  store i64 %_15.0, ptr %_21, align 8, !dbg !2633
  br label %bb7, !dbg !2634

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc402) #11, !dbg !2633
  unreachable, !dbg !2633
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8974e035a2f1d5ceE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b, ptr align 8 %c) unnamed_addr #0 !dbg !2635 {
start:
  %c.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca { ptr, ptr }, align 8
  %_8 = alloca { ptr, ptr }, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2642, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2643
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2639, metadata !DIExpression()), !dbg !2644
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2640, metadata !DIExpression()), !dbg !2645
  store ptr %c, ptr %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !2641, metadata !DIExpression()), !dbg !2646
  %_11 = load ptr, ptr %_1, align 8, !dbg !2647, !nonnull !24, !align !504, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2647
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2647
  store ptr %b, ptr %0, align 8, !dbg !2647
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2647
  %2 = load ptr, ptr %1, align 8, !dbg !2647, !nonnull !24, !align !504, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2647
  %4 = load ptr, ptr %3, align 8, !dbg !2647, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h5c85e7a9f2c2a658E"(ptr align 8 %_11, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2647
  %_12 = load ptr, ptr %_1, align 8, !dbg !2648, !nonnull !24, !align !504, !noundef !24
  store ptr %b, ptr %_8, align 8, !dbg !2648
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2648
  store ptr %c, ptr %5, align 8, !dbg !2648
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 0, !dbg !2648
  %7 = load ptr, ptr %6, align 8, !dbg !2648, !nonnull !24, !align !504, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2648
  %9 = load ptr, ptr %8, align 8, !dbg !2648, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h5c85e7a9f2c2a658E"(ptr align 8 %_12, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2648
  %_13 = load ptr, ptr %_1, align 8, !dbg !2649, !nonnull !24, !align !504, !noundef !24
  store ptr %a, ptr %_10, align 8, !dbg !2649
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2649
  store ptr %b, ptr %10, align 8, !dbg !2649
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2649
  %12 = load ptr, ptr %11, align 8, !dbg !2649, !nonnull !24, !align !504, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2649
  %14 = load ptr, ptr %13, align 8, !dbg !2649, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h5c85e7a9f2c2a658E"(ptr align 8 %_13, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2649
  ret void, !dbg !2650
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc098a7953860ed10E"(ptr align 8 %_1, ptr align 8 %a) unnamed_addr #0 !dbg !2651 {
start:
  %tmp.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca i64, align 8
  %_5 = alloca { ptr, ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2657, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2660
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2656, metadata !DIExpression()), !dbg !2661
  %tmp = load i64, ptr %a, align 8, !dbg !2662, !noundef !24
  store i64 %tmp, ptr %tmp.dbg.spill, align 8, !dbg !2662
  call void @llvm.dbg.declare(metadata ptr %tmp.dbg.spill, metadata !2658, metadata !DIExpression()), !dbg !2663
  %_12 = load ptr, ptr %_1, align 8, !dbg !2664, !nonnull !24, !align !504, !noundef !24
  %_8.0 = sub i64 %tmp, 1, !dbg !2665
  %_8.1 = icmp ult i64 %tmp, 1, !dbg !2665
  %0 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2665
  br i1 %0, label %panic, label %bb1, !dbg !2665

bb1:                                              ; preds = %start
  store i64 %_8.0, ptr %_7, align 8, !dbg !2665
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %tmp, i64 1), !dbg !2666
  %_11.0 = extractvalue { i64, i1 } %1, 0, !dbg !2666
  %_11.1 = extractvalue { i64, i1 } %1, 1, !dbg !2666
  %2 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !2666
  br i1 %2, label %panic1, label %bb2, !dbg !2666

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc404) #11, !dbg !2665
  unreachable, !dbg !2665

bb2:                                              ; preds = %bb1
  store i64 %_11.0, ptr %_10, align 8, !dbg !2666
  store ptr %_7, ptr %_5, align 8, !dbg !2664
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2664
  store ptr %a, ptr %3, align 8, !dbg !2664
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2664
  store ptr %_10, ptr %4, align 8, !dbg !2664
  %5 = load ptr, ptr %_5, align 8, !dbg !2664, !nonnull !24, !align !504, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2664
  %7 = load ptr, ptr %6, align 8, !dbg !2664, !nonnull !24, !align !504, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2664
  %9 = load ptr, ptr %8, align 8, !dbg !2664, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8974e035a2f1d5ceE"(ptr align 8 %_12, ptr align 8 %5, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2664
  ret void, !dbg !2667

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc406) #11, !dbg !2666
  unreachable, !dbg !2666
}

; core::slice::sort::break_patterns
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort14break_patterns17hcecbe5991799ddb2E(ptr align 8 %v.0, i64 %v.1) unnamed_addr #2 !dbg !2668 {
start:
  %i.dbg.spill = alloca i64, align 8
  %pos.dbg.spill = alloca i64, align 8
  %modulus.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %other = alloca i64, align 8
  %_17 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %gen_usize = alloca ptr, align 8
  %gen_u32 = alloca ptr, align 8
  %random = alloca i32, align 4
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2670, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.declare(metadata ptr %random, metadata !2673, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.declare(metadata ptr %gen_u32, metadata !2675, metadata !DIExpression()), !dbg !2700
  call void @llvm.dbg.declare(metadata ptr %gen_usize, metadata !2682, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2692, metadata !DIExpression()), !dbg !2702
  call void @llvm.dbg.declare(metadata ptr %other, metadata !2696, metadata !DIExpression()), !dbg !2703
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2704
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2671, metadata !DIExpression()), !dbg !2705
  %_4 = icmp uge i64 %v.1, 8, !dbg !2706
  br i1 %_4, label %bb1, label %bb16, !dbg !2706

bb16:                                             ; preds = %bb5, %start
  ret void, !dbg !2707

bb1:                                              ; preds = %start
  %2 = trunc i64 %v.1 to i32, !dbg !2708
  store i32 %2, ptr %random, align 4, !dbg !2708
  store ptr %random, ptr %gen_u32, align 8, !dbg !2709
  store ptr %gen_u32, ptr %gen_usize, align 8, !dbg !2710
; call core::num::<impl usize>::next_power_of_two
  %modulus = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h19b99a59f73778e5E"(i64 %v.1) #10, !dbg !2711
  store i64 %modulus, ptr %modulus.dbg.spill, align 8, !dbg !2711
  call void @llvm.dbg.declare(metadata ptr %modulus.dbg.spill, metadata !2688, metadata !DIExpression()), !dbg !2712
  %_12 = udiv i64 %v.1, 4, !dbg !2713
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_12, i64 2), !dbg !2713
  %_13.0 = extractvalue { i64, i1 } %3, 0, !dbg !2713
  %_13.1 = extractvalue { i64, i1 } %3, 1, !dbg !2713
  %4 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !2713
  br i1 %4, label %panic, label %bb3, !dbg !2713

bb3:                                              ; preds = %bb1
  store i64 %_13.0, ptr %pos.dbg.spill, align 8, !dbg !2713
  call void @llvm.dbg.declare(metadata ptr %pos.dbg.spill, metadata !2690, metadata !DIExpression()), !dbg !2714
  store i64 0, ptr %_15, align 8, !dbg !2715
  %5 = getelementptr inbounds { i64, i64 }, ptr %_15, i32 0, i32 1, !dbg !2715
  store i64 3, ptr %5, align 8, !dbg !2715
  %6 = getelementptr inbounds { i64, i64 }, ptr %_15, i32 0, i32 0, !dbg !2715
  %7 = load i64, ptr %6, align 8, !dbg !2715, !noundef !24
  %8 = getelementptr inbounds { i64, i64 }, ptr %_15, i32 0, i32 1, !dbg !2715
  %9 = load i64, ptr %8, align 8, !dbg !2715, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %10 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17haf2af0e98b3b8b4eE"(i64 %7, i64 %9) #10, !dbg !2715
  %_14.0 = extractvalue { i64, i64 } %10, 0, !dbg !2715
  %_14.1 = extractvalue { i64, i64 } %10, 1, !dbg !2715
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2715
  store i64 %_14.0, ptr %11, align 8, !dbg !2715
  %12 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2715
  store i64 %_14.1, ptr %12, align 8, !dbg !2715
  br label %bb5, !dbg !2716

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc408) #11, !dbg !2713
  unreachable, !dbg !2713

bb5:                                              ; preds = %bb15, %bb3
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %13 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hac6ae5e1fdafd993E"(ptr align 8 %iter) #10, !dbg !2702
  store { i64, i64 } %13, ptr %_17, align 8, !dbg !2702
  %_19 = load i64, ptr %_17, align 8, !dbg !2702, !range !1053, !noundef !24
  %14 = icmp eq i64 %_19, 0, !dbg !2702
  br i1 %14, label %bb16, label %bb7, !dbg !2702

bb7:                                              ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, ptr %_17, i32 0, i32 1, !dbg !2717
  %i = load i64, ptr %15, align 8, !dbg !2717, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2717
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2694, metadata !DIExpression()), !dbg !2718
; call core::slice::sort::break_patterns::{{closure}}
  %_22 = call i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17hef15d68b8b0b3ce8E"(ptr align 8 %gen_usize) #10, !dbg !2719
  %_27.0 = sub i64 %modulus, 1, !dbg !2720
  %_27.1 = icmp ult i64 %modulus, 1, !dbg !2720
  %16 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !2720
  br i1 %16, label %panic1, label %bb10, !dbg !2720

bb8:                                              ; No predecessors!
  unreachable, !dbg !2702

bb10:                                             ; preds = %bb7
  %17 = and i64 %_22, %_27.0, !dbg !2719
  store i64 %17, ptr %other, align 8, !dbg !2719
  %_29 = load i64, ptr %other, align 8, !dbg !2721, !noundef !24
  %_28 = icmp uge i64 %_29, %v.1, !dbg !2721
  br i1 %_28, label %bb11, label %bb13, !dbg !2721

panic1:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc410) #11, !dbg !2720
  unreachable, !dbg !2720

bb13:                                             ; preds = %bb12, %bb10
  %_34.0 = sub i64 %_13.0, 1, !dbg !2722
  %_34.1 = icmp ult i64 %_13.0, 1, !dbg !2722
  %18 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !2722
  br i1 %18, label %panic3, label %bb14, !dbg !2722

bb11:                                             ; preds = %bb10
  %19 = load i64, ptr %other, align 8, !dbg !2723, !noundef !24
  %_30.0 = sub i64 %19, %v.1, !dbg !2723
  %_30.1 = icmp ult i64 %19, %v.1, !dbg !2723
  %20 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false), !dbg !2723
  br i1 %20, label %panic2, label %bb12, !dbg !2723

bb12:                                             ; preds = %bb11
  store i64 %_30.0, ptr %other, align 8, !dbg !2723
  br label %bb13, !dbg !2724

panic2:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc412) #11, !dbg !2723
  unreachable, !dbg !2723

bb14:                                             ; preds = %bb13
  %21 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_34.0, i64 %i), !dbg !2722
  %_35.0 = extractvalue { i64, i1 } %21, 0, !dbg !2722
  %_35.1 = extractvalue { i64, i1 } %21, 1, !dbg !2722
  %22 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !2722
  br i1 %22, label %panic4, label %bb15, !dbg !2722

panic3:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc414) #11, !dbg !2722
  unreachable, !dbg !2722

bb15:                                             ; preds = %bb14
  %_36 = load i64, ptr %other, align 8, !dbg !2725, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17heada400949a61ab0E"(ptr align 8 %v.0, i64 %v.1, i64 %_35.0, i64 %_36, ptr align 8 @alloc416) #10, !dbg !2726
  br label %bb5, !dbg !2726

panic4:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc414) #11, !dbg !2722
  unreachable, !dbg !2722
}

; core::slice::sort::break_patterns::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h1bd37a70f6616ff4E"(ptr align 8 %_1) unnamed_addr #0 !dbg !2727 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2731, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2732
  %_11 = load ptr, ptr %_1, align 8, !dbg !2733, !nonnull !24, !align !519, !noundef !24
  %_3 = load i32, ptr %_11, align 4, !dbg !2733, !noundef !24
  %_4.0 = shl i32 %_3, 13, !dbg !2733
  %_12 = load ptr, ptr %_1, align 8, !dbg !2734, !nonnull !24, !align !519, !noundef !24
  %_13 = load ptr, ptr %_1, align 8, !dbg !2734, !nonnull !24, !align !519, !noundef !24
  %0 = load i32, ptr %_13, align 4, !dbg !2734, !noundef !24
  %1 = xor i32 %0, %_4.0, !dbg !2734
  store i32 %1, ptr %_12, align 4, !dbg !2734
  %_14 = load ptr, ptr %_1, align 8, !dbg !2735, !nonnull !24, !align !519, !noundef !24
  %_6 = load i32, ptr %_14, align 4, !dbg !2735, !noundef !24
  %_7.0 = lshr i32 %_6, 17, !dbg !2735
  %_15 = load ptr, ptr %_1, align 8, !dbg !2736, !nonnull !24, !align !519, !noundef !24
  %_16 = load ptr, ptr %_1, align 8, !dbg !2736, !nonnull !24, !align !519, !noundef !24
  %2 = load i32, ptr %_16, align 4, !dbg !2736, !noundef !24
  %3 = xor i32 %2, %_7.0, !dbg !2736
  store i32 %3, ptr %_15, align 4, !dbg !2736
  %_17 = load ptr, ptr %_1, align 8, !dbg !2737, !nonnull !24, !align !519, !noundef !24
  %_9 = load i32, ptr %_17, align 4, !dbg !2737, !noundef !24
  %_10.0 = shl i32 %_9, 5, !dbg !2737
  %_18 = load ptr, ptr %_1, align 8, !dbg !2738, !nonnull !24, !align !519, !noundef !24
  %_19 = load ptr, ptr %_1, align 8, !dbg !2738, !nonnull !24, !align !519, !noundef !24
  %4 = load i32, ptr %_19, align 4, !dbg !2738, !noundef !24
  %5 = xor i32 %4, %_10.0, !dbg !2738
  store i32 %5, ptr %_18, align 4, !dbg !2738
  %_20 = load ptr, ptr %_1, align 8, !dbg !2739, !nonnull !24, !align !519, !noundef !24
  %6 = load i32, ptr %_20, align 4, !dbg !2739, !noundef !24
  ret i32 %6, !dbg !2740
}

; core::slice::sort::break_patterns::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17hef15d68b8b0b3ce8E"(ptr align 8 %_1) unnamed_addr #0 !dbg !2741 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2746, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2747
  %_11 = load ptr, ptr %_1, align 8, !dbg !2748, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::break_patterns::{{closure}}
  %_5 = call i32 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h1bd37a70f6616ff4E"(ptr align 8 %_11) #10, !dbg !2748
  %_4 = zext i32 %_5 to i64, !dbg !2749
  %_7.0 = shl i64 %_4, 32, !dbg !2750
  %_12 = load ptr, ptr %_1, align 8, !dbg !2751, !nonnull !24, !align !504, !noundef !24
; call core::slice::sort::break_patterns::{{closure}}
  %_9 = call i32 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h1bd37a70f6616ff4E"(ptr align 8 %_12) #10, !dbg !2751
  %_8 = zext i32 %_9 to i64, !dbg !2752
  %_2 = or i64 %_7.0, %_8, !dbg !2753
  ret i64 %_2, !dbg !2754
}

; core::slice::sort::partition_equal
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort15partition_equal17h333611f4883529faE(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2755 {
start:
  %self.dbg.spill.i23 = alloca ptr, align 8
  %self.dbg.spill.i22 = alloca ptr, align 8
  %self.dbg.spill.i21 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i14 = alloca i64, align 8
  %self.dbg.spill.i15 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_44 = alloca { ptr, ptr }, align 8
  %_39 = alloca i8, align 1
  %_33 = alloca { ptr, ptr }, align 8
  %_27 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_13 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_7 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2759, metadata !DIExpression()), !dbg !2779
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2760, metadata !DIExpression()), !dbg !2780
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2761, metadata !DIExpression()), !dbg !2781
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2767, metadata !DIExpression()), !dbg !2782
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !2769, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2773, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2775, metadata !DIExpression()), !dbg !2785
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17heada400949a61ab0E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc418) #10, !dbg !2786
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17haac3e8b4c0f9643eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_7, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc420) #10, !dbg !2787
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !2788
  %pivot.0 = load ptr, ptr %4, align 8, !dbg !2788, !nonnull !24, !align !504, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !2788
  %pivot.1 = load i64, ptr %5, align 8, !dbg !2788, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !2788
  store ptr %pivot.0, ptr %6, align 8, !dbg !2788
  %7 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !2788
  store i64 %pivot.1, ptr %7, align 8, !dbg !2788
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !2762, metadata !DIExpression()), !dbg !2789
  %8 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !2790
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !2790
  %v.02 = load ptr, ptr %9, align 8, !dbg !2790, !nonnull !24, !align !504, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !2790
  %v.13 = load i64, ptr %10, align 8, !dbg !2790, !noundef !24
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !2790
  store ptr %v.02, ptr %11, align 8, !dbg !2790
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !2790
  store i64 %v.13, ptr %12, align 8, !dbg !2790
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !2764, metadata !DIExpression()), !dbg !2791
  %_11 = icmp ult i64 0, %pivot.1, !dbg !2792
  %13 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !2792
  br i1 %13, label %bb3, label %panic, !dbg !2792

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !2793
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !2793
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !2765, metadata !DIExpression()), !dbg !2794
; call core::ptr::read
  call void @_ZN4core3ptr4read17hc4a3b4e001a11806E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_13, ptr %pivot5) #10, !dbg !2795
  call void @llvm.dbg.declare(metadata ptr %_13, metadata !996, metadata !DIExpression()), !dbg !2796
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_13, i64 24, i1 false), !dbg !2798
  store ptr %tmp, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !2367, metadata !DIExpression()), !dbg !2799
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !2801
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !2801
  store ptr %pivot5, ptr %14, align 8, !dbg !2801
  store ptr %tmp, ptr %self.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !2367, metadata !DIExpression()), !dbg !2802
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !2804
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !2771, metadata !DIExpression()), !dbg !2805
  store i64 0, ptr %l, align 8, !dbg !2806
  store i64 %v.13, ptr %r, align 8, !dbg !2807
  br label %bb8, !dbg !2808

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 0, i64 %pivot.1, ptr align 8 @alloc422) #11, !dbg !2792
  unreachable, !dbg !2792

bb8:                                              ; preds = %bb33, %bb15, %bb3
  %_29 = load i64, ptr %l, align 8, !dbg !2809, !noundef !24
  %_30 = load i64, ptr %r, align 8, !dbg !2810, !noundef !24
  %_28 = icmp ult i64 %_29, %_30, !dbg !2809
  br i1 %_28, label %bb10, label %bb9, !dbg !2809

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_27, align 1, !dbg !2809
  br label %bb11, !dbg !2809

bb10:                                             ; preds = %bb8
  %_37 = load i64, ptr %l, align 8, !dbg !2811, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_35 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %v.02, i64 %v.13, i64 %_37) #10, !dbg !2812
  store ptr %tmp, ptr %_33, align 8, !dbg !2813
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !2813
  store ptr %_35, ptr %15, align 8, !dbg !2813
  %16 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 0, !dbg !2813
  %17 = load ptr, ptr %16, align 8, !dbg !2813, !nonnull !24, !align !504, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !2813
  %19 = load ptr, ptr %18, align 8, !dbg !2813, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_32 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %17, ptr align 8 %19) #10, !dbg !2813
  %_31 = xor i1 %_32, true, !dbg !2814
  %20 = zext i1 %_31 to i8, !dbg !2809
  store i8 %20, ptr %_27, align 1, !dbg !2809
  br label %bb11, !dbg !2809

bb11:                                             ; preds = %bb9, %bb10
  %21 = load i8, ptr %_27, align 1, !dbg !2809, !range !210, !noundef !24
  %22 = trunc i8 %21 to i1, !dbg !2809
  br i1 %22, label %bb14, label %bb16, !dbg !2809

bb16:                                             ; preds = %bb24, %bb11
  %_41 = load i64, ptr %l, align 8, !dbg !2815, !noundef !24
  %_42 = load i64, ptr %r, align 8, !dbg !2816, !noundef !24
  %_40 = icmp ult i64 %_41, %_42, !dbg !2815
  br i1 %_40, label %bb18, label %bb17, !dbg !2815

bb14:                                             ; preds = %bb11
  %23 = load i64, ptr %l, align 8, !dbg !2817, !noundef !24
  %24 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %23, i64 1), !dbg !2817
  %_38.0 = extractvalue { i64, i1 } %24, 0, !dbg !2817
  %_38.1 = extractvalue { i64, i1 } %24, 1, !dbg !2817
  %25 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !2817
  br i1 %25, label %panic8, label %bb15, !dbg !2817

bb15:                                             ; preds = %bb14
  store i64 %_38.0, ptr %l, align 8, !dbg !2817
  br label %bb8, !dbg !2818

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc424) #11, !dbg !2817
  unreachable, !dbg !2817

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_39, align 1, !dbg !2815
  br label %bb19, !dbg !2815

bb18:                                             ; preds = %bb16
  %_49 = load i64, ptr %r, align 8, !dbg !2819, !noundef !24
  %_50.0 = sub i64 %_49, 1, !dbg !2819
  %_50.1 = icmp ult i64 %_49, 1, !dbg !2819
  %26 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false), !dbg !2819
  br i1 %26, label %panic9, label %bb20, !dbg !2819

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_46 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %v.02, i64 %v.13, i64 %_50.0) #10, !dbg !2820
  store ptr %tmp, ptr %_44, align 8, !dbg !2821
  %27 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !2821
  store ptr %_46, ptr %27, align 8, !dbg !2821
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 0, !dbg !2821
  %29 = load ptr, ptr %28, align 8, !dbg !2821, !nonnull !24, !align !504, !noundef !24
  %30 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !2821
  %31 = load ptr, ptr %30, align 8, !dbg !2821, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_43 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %29, ptr align 8 %31) #10, !dbg !2821
  %32 = zext i1 %_43 to i8, !dbg !2815
  store i8 %32, ptr %_39, align 1, !dbg !2815
  br label %bb19, !dbg !2815

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc426) #11, !dbg !2819
  unreachable, !dbg !2819

bb19:                                             ; preds = %bb17, %bb20
  %33 = load i8, ptr %_39, align 1, !dbg !2815, !range !210, !noundef !24
  %34 = trunc i8 %33 to i1, !dbg !2815
  br i1 %34, label %bb23, label %bb25, !dbg !2815

bb25:                                             ; preds = %bb19
  %_53 = load i64, ptr %l, align 8, !dbg !2822, !noundef !24
  %_54 = load i64, ptr %r, align 8, !dbg !2823, !noundef !24
  %_52 = icmp uge i64 %_53, %_54, !dbg !2822
  br i1 %_52, label %bb26, label %bb27, !dbg !2822

bb23:                                             ; preds = %bb19
  %35 = load i64, ptr %r, align 8, !dbg !2824, !noundef !24
  %_51.0 = sub i64 %35, 1, !dbg !2824
  %_51.1 = icmp ult i64 %35, 1, !dbg !2824
  %36 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false), !dbg !2824
  br i1 %36, label %panic10, label %bb24, !dbg !2824

bb24:                                             ; preds = %bb23
  store i64 %_51.0, ptr %r, align 8, !dbg !2824
  br label %bb16, !dbg !2825

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc428) #11, !dbg !2824
  unreachable, !dbg !2824

bb27:                                             ; preds = %bb25
  %37 = load i64, ptr %r, align 8, !dbg !2826, !noundef !24
  %_55.0 = sub i64 %37, 1, !dbg !2826
  %_55.1 = icmp ult i64 %37, 1, !dbg !2826
  %38 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2826
  br i1 %38, label %panic12, label %bb28, !dbg !2826

bb26:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !2827, !noundef !24
  %39 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_65, i64 1), !dbg !2827
  %_66.0 = extractvalue { i64, i1 } %39, 0, !dbg !2827
  %_66.1 = extractvalue { i64, i1 } %39, 1, !dbg !2827
  %40 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !2827
  br i1 %40, label %panic11, label %bb34, !dbg !2827

bb34:                                             ; preds = %bb26
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h3d495b159b1f4552E"(ptr %_pivot_guard) #10, !dbg !2828
  ret i64 %_66.0, !dbg !2829

panic11:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc430) #11, !dbg !2827
  unreachable, !dbg !2827

bb28:                                             ; preds = %bb27
  store i64 %_55.0, ptr %r, align 8, !dbg !2826
  store ptr %v.02, ptr %self.dbg.spill.i21, align 8
  %41 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i21, i32 0, i32 1
  store i64 %v.13, ptr %41, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i21, metadata !2010, metadata !DIExpression()), !dbg !2830
  store ptr %v.02, ptr %ptr.dbg.spill, align 8, !dbg !2832
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2777, metadata !DIExpression()), !dbg !2833
  %_60 = load i64, ptr %l, align 8, !dbg !2834, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i15, metadata !291, metadata !DIExpression()), !dbg !2835
  store i64 %_60, ptr %count.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i14, metadata !297, metadata !DIExpression()), !dbg !2837
  store ptr %v.02, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !301, metadata !DIExpression()), !dbg !2838
  store i64 %_60, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !306, metadata !DIExpression()), !dbg !2840
  %42 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_60, !dbg !2841
  store ptr %42, ptr %1, align 8, !dbg !2841
  %_3.i = load ptr, ptr %1, align 8, !dbg !2841, !noundef !24
  %_63 = load i64, ptr %r, align 8, !dbg !2842, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !291, metadata !DIExpression()), !dbg !2843
  store i64 %_63, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !297, metadata !DIExpression()), !dbg !2845
  store ptr %v.02, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !301, metadata !DIExpression()), !dbg !2846
  store i64 %_63, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !306, metadata !DIExpression()), !dbg !2848
  %43 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_63, !dbg !2849
  store ptr %43, ptr %0, align 8, !dbg !2849
  %_3.i20 = load ptr, ptr %0, align 8, !dbg !2849, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h59951b18b0ba78c3E(ptr %_3.i, ptr %_3.i20) #10, !dbg !2850
  %44 = load i64, ptr %l, align 8, !dbg !2851, !noundef !24
  %45 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %44, i64 1), !dbg !2851
  %_64.0 = extractvalue { i64, i1 } %45, 0, !dbg !2851
  %_64.1 = extractvalue { i64, i1 } %45, 1, !dbg !2851
  %46 = call i1 @llvm.expect.i1(i1 %_64.1, i1 false), !dbg !2851
  br i1 %46, label %panic13, label %bb33, !dbg !2851

panic12:                                          ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc432) #11, !dbg !2826
  unreachable, !dbg !2826

bb33:                                             ; preds = %bb28
  store i64 %_64.0, ptr %l, align 8, !dbg !2851
  br label %bb8, !dbg !2808

panic13:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc434) #11, !dbg !2851
  unreachable, !dbg !2851
}

; core::slice::sort::partition_in_blocks
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks17h9f68d96e82fd1beaE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2852 {
start:
  %small.dbg.spill.i194 = alloca i8, align 1
  %small.dbg.spill.i193 = alloca i8, align 1
  %small.dbg.spill.i192 = alloca i8, align 1
  %small.dbg.spill.i191 = alloca i8, align 1
  %small.dbg.spill.i190 = alloca i8, align 1
  %small.dbg.spill.i189 = alloca i8, align 1
  %small.dbg.spill.i188 = alloca i8, align 1
  %small.dbg.spill.i187 = alloca i8, align 1
  %small.dbg.spill.i186 = alloca i8, align 1
  %small.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i185 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i184 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i183 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i182 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i181 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i180 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %addr.dbg.spill.i.i179 = alloca i64, align 8
  %1 = alloca ptr, align 8
  %addr.dbg.spill.i.i178 = alloca i64, align 8
  %2 = alloca ptr, align 8
  %addr.dbg.spill.i.i177 = alloca i64, align 8
  %3 = alloca ptr, align 8
  %addr.dbg.spill.i.i = alloca i64, align 8
  %4 = alloca ptr, align 8
  %count.dbg.spill.i174 = alloca i64, align 8
  %self.dbg.spill.i175 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %count.dbg.spill.i171 = alloca i64, align 8
  %self.dbg.spill.i172 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %count.dbg.spill.i168 = alloca i64, align 8
  %self.dbg.spill.i169 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %count.dbg.spill.i165 = alloca i64, align 8
  %self.dbg.spill.i166 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %count.dbg.spill.i162 = alloca i64, align 8
  %self.dbg.spill.i163 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %count.dbg.spill.i159 = alloca i64, align 8
  %self.dbg.spill.i160 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %count.dbg.spill.i156 = alloca i64, align 8
  %self.dbg.spill.i157 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %count.dbg.spill.i153 = alloca i64, align 8
  %self.dbg.spill.i154 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %count.dbg.spill.i150 = alloca i64, align 8
  %self.dbg.spill.i151 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %count.dbg.spill.i147 = alloca i64, align 8
  %self.dbg.spill.i148 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %count.dbg.spill.i144 = alloca i64, align 8
  %self.dbg.spill.i145 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %count.dbg.spill.i141 = alloca i64, align 8
  %self.dbg.spill.i142 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %count.dbg.spill.i138 = alloca i64, align 8
  %self.dbg.spill.i139 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %count.dbg.spill.i135 = alloca i64, align 8
  %self.dbg.spill.i136 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %count.dbg.spill.i132 = alloca i64, align 8
  %self.dbg.spill.i133 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %count.dbg.spill.i129 = alloca i64, align 8
  %self.dbg.spill.i130 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %count.dbg.spill.i126 = alloca i64, align 8
  %self.dbg.spill.i127 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %count.dbg.spill.i123 = alloca i64, align 8
  %self.dbg.spill.i124 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %count.dbg.spill.i120 = alloca i64, align 8
  %self.dbg.spill.i121 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %count.dbg.spill.i117 = alloca i64, align 8
  %self.dbg.spill.i118 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  %count.dbg.spill.i114 = alloca i64, align 8
  %self.dbg.spill.i115 = alloca ptr, align 8
  %25 = alloca ptr, align 8
  %count.dbg.spill.i111 = alloca i64, align 8
  %self.dbg.spill.i112 = alloca ptr, align 8
  %26 = alloca ptr, align 8
  %count.dbg.spill.i108 = alloca i64, align 8
  %self.dbg.spill.i109 = alloca ptr, align 8
  %27 = alloca ptr, align 8
  %count.dbg.spill.i105 = alloca i64, align 8
  %self.dbg.spill.i106 = alloca ptr, align 8
  %28 = alloca ptr, align 8
  %count.dbg.spill.i102 = alloca i64, align 8
  %self.dbg.spill.i103 = alloca ptr, align 8
  %29 = alloca ptr, align 8
  %count.dbg.spill.i100 = alloca i64, align 8
  %self.dbg.spill.i101 = alloca ptr, align 8
  %rhs.dbg.spill.i.i95 = alloca i64, align 8
  %self.dbg.spill.i1.i96 = alloca i64, align 8
  %self.dbg.spill.i.i97 = alloca i64, align 8
  %count.dbg.spill.i98 = alloca i64, align 8
  %self.dbg.spill.i99 = alloca ptr, align 8
  %rhs.dbg.spill.i.i90 = alloca i64, align 8
  %self.dbg.spill.i1.i91 = alloca i64, align 8
  %self.dbg.spill.i.i92 = alloca i64, align 8
  %count.dbg.spill.i93 = alloca i64, align 8
  %self.dbg.spill.i94 = alloca ptr, align 8
  %rhs.dbg.spill.i.i85 = alloca i64, align 8
  %self.dbg.spill.i1.i86 = alloca i64, align 8
  %self.dbg.spill.i.i87 = alloca i64, align 8
  %count.dbg.spill.i88 = alloca i64, align 8
  %self.dbg.spill.i89 = alloca ptr, align 8
  %rhs.dbg.spill.i.i80 = alloca i64, align 8
  %self.dbg.spill.i1.i81 = alloca i64, align 8
  %self.dbg.spill.i.i82 = alloca i64, align 8
  %count.dbg.spill.i83 = alloca i64, align 8
  %self.dbg.spill.i84 = alloca ptr, align 8
  %rhs.dbg.spill.i.i75 = alloca i64, align 8
  %self.dbg.spill.i1.i76 = alloca i64, align 8
  %self.dbg.spill.i.i77 = alloca i64, align 8
  %count.dbg.spill.i78 = alloca i64, align 8
  %self.dbg.spill.i79 = alloca ptr, align 8
  %rhs.dbg.spill.i.i70 = alloca i64, align 8
  %self.dbg.spill.i1.i71 = alloca i64, align 8
  %self.dbg.spill.i.i72 = alloca i64, align 8
  %count.dbg.spill.i73 = alloca i64, align 8
  %self.dbg.spill.i74 = alloca ptr, align 8
  %rhs.dbg.spill.i.i65 = alloca i64, align 8
  %self.dbg.spill.i1.i66 = alloca i64, align 8
  %self.dbg.spill.i.i67 = alloca i64, align 8
  %count.dbg.spill.i68 = alloca i64, align 8
  %self.dbg.spill.i69 = alloca ptr, align 8
  %rhs.dbg.spill.i.i60 = alloca i64, align 8
  %self.dbg.spill.i1.i61 = alloca i64, align 8
  %self.dbg.spill.i.i62 = alloca i64, align 8
  %count.dbg.spill.i63 = alloca i64, align 8
  %self.dbg.spill.i64 = alloca ptr, align 8
  %rhs.dbg.spill.i.i55 = alloca i64, align 8
  %self.dbg.spill.i1.i56 = alloca i64, align 8
  %self.dbg.spill.i.i57 = alloca i64, align 8
  %count.dbg.spill.i58 = alloca i64, align 8
  %self.dbg.spill.i59 = alloca ptr, align 8
  %rhs.dbg.spill.i.i50 = alloca i64, align 8
  %self.dbg.spill.i1.i51 = alloca i64, align 8
  %self.dbg.spill.i.i52 = alloca i64, align 8
  %count.dbg.spill.i53 = alloca i64, align 8
  %self.dbg.spill.i54 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i48 = alloca i64, align 8
  %self.dbg.spill.i49 = alloca ptr, align 8
  %count.dbg.spill.i46 = alloca i64, align 8
  %self.dbg.spill.i47 = alloca ptr, align 8
  %count.dbg.spill.i44 = alloca i64, align 8
  %self.dbg.spill.i45 = alloca ptr, align 8
  %count.dbg.spill.i42 = alloca i64, align 8
  %self.dbg.spill.i43 = alloca ptr, align 8
  %count.dbg.spill.i40 = alloca i64, align 8
  %self.dbg.spill.i41 = alloca ptr, align 8
  %count.dbg.spill.i38 = alloca i64, align 8
  %self.dbg.spill.i39 = alloca ptr, align 8
  %count.dbg.spill.i36 = alloca i64, align 8
  %self.dbg.spill.i37 = alloca ptr, align 8
  %count.dbg.spill.i34 = alloca i64, align 8
  %self.dbg.spill.i35 = alloca ptr, align 8
  %count.dbg.spill.i32 = alloca i64, align 8
  %self.dbg.spill.i33 = alloca ptr, align 8
  %count.dbg.spill.i30 = alloca i64, align 8
  %self.dbg.spill.i31 = alloca ptr, align 8
  %count.dbg.spill.i28 = alloca i64, align 8
  %self.dbg.spill.i29 = alloca ptr, align 8
  %count.dbg.spill.i26 = alloca i64, align 8
  %self.dbg.spill.i27 = alloca ptr, align 8
  %count.dbg.spill.i24 = alloca i64, align 8
  %self.dbg.spill.i25 = alloca ptr, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %count.dbg.spill.i20 = alloca i64, align 8
  %self.dbg.spill.i21 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %this.dbg.spill.i18 = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { ptr, i64 }, align 8
  %kind.dbg.spill16 = alloca i8, align 1
  %right_val.dbg.spill15 = alloca ptr, align 8
  %left_val.dbg.spill13 = alloca ptr, align 8
  %kind.dbg.spill = alloca i8, align 1
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %i.dbg.spill7 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %is_done.dbg.spill = alloca i8, align 1
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_253 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %_241 = alloca i64, align 8
  %_239 = alloca { ptr, ptr }, align 8
  %_219 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %_207 = alloca i64, align 8
  %_205 = alloca { ptr, ptr }, align 8
  %_185 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_144 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_141 = alloca { i64, i64 }, align 8
  %tmp = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_111 = alloca { ptr, ptr }, align 8
  %_101 = alloca { i64, i64 }, align 8
  %iter2 = alloca { i64, i64 }, align 8
  %_98 = alloca { i64, i64 }, align 8
  %elem1 = alloca ptr, align 8
  %_85 = alloca { ptr, ptr }, align 8
  %_76 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_73 = alloca { i64, i64 }, align 8
  %elem = alloca ptr, align 8
  %_48 = alloca i8, align 1
  %_27 = alloca i8, align 1
  %rem = alloca i64, align 8
  %offsets_r = alloca [128 x i8], align 1
  %end_r = alloca ptr, align 8
  %start_r = alloca ptr, align 8
  %block_r = alloca i64, align 8
  %r = alloca ptr, align 8
  %offsets_l = alloca [128 x i8], align 1
  %end_l = alloca ptr, align 8
  %start_l = alloca ptr, align 8
  %block_l = alloca i64, align 8
  %l = alloca ptr, align 8
  %32 = alloca i64, align 8
  %33 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %34, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2856, metadata !DIExpression()), !dbg !2927
  store ptr %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2857, metadata !DIExpression()), !dbg !2928
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2858, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2859, metadata !DIExpression()), !dbg !2930
  call void @llvm.dbg.declare(metadata ptr %block_l, metadata !2861, metadata !DIExpression()), !dbg !2931
  call void @llvm.dbg.declare(metadata ptr %start_l, metadata !2863, metadata !DIExpression()), !dbg !2932
  call void @llvm.dbg.declare(metadata ptr %end_l, metadata !2865, metadata !DIExpression()), !dbg !2933
  call void @llvm.dbg.declare(metadata ptr %offsets_l, metadata !2867, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2879, metadata !DIExpression()), !dbg !2935
  call void @llvm.dbg.declare(metadata ptr %block_r, metadata !2881, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.declare(metadata ptr %start_r, metadata !2883, metadata !DIExpression()), !dbg !2937
  call void @llvm.dbg.declare(metadata ptr %end_r, metadata !2885, metadata !DIExpression()), !dbg !2938
  call void @llvm.dbg.declare(metadata ptr %offsets_r, metadata !2887, metadata !DIExpression()), !dbg !2939
  call void @llvm.dbg.declare(metadata ptr %rem, metadata !2891, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.declare(metadata ptr %elem, metadata !2893, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2895, metadata !DIExpression()), !dbg !2942
  call void @llvm.dbg.declare(metadata ptr %elem1, metadata !2899, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.declare(metadata ptr %iter2, metadata !2901, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2907, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.declare(metadata ptr %iter3, metadata !2909, metadata !DIExpression()), !dbg !2946
  store ptr %v.0, ptr %self.dbg.spill.i183, align 8
  %35 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i183, i32 0, i32 1
  store i64 %v.1, ptr %35, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i183, metadata !2010, metadata !DIExpression()), !dbg !2947
  store ptr %v.0, ptr %l, align 8, !dbg !2949
  store i64 128, ptr %block_l, align 8, !dbg !2950
  store i64 0, ptr %addr.dbg.spill.i.i179, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i179, metadata !2951, metadata !DIExpression()), !dbg !2956
  store i64 0, ptr %0, align 8, !dbg !2962
  %36 = load ptr, ptr %0, align 8, !dbg !2962, !noundef !24
; call core::ptr::metadata::from_raw_parts_mut
  %37 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h101f728fd46e84c5E(ptr %36) #10, !dbg !2963
  store ptr %37, ptr %start_l, align 8, !dbg !2964
  store i64 0, ptr %addr.dbg.spill.i.i178, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i178, metadata !2951, metadata !DIExpression()), !dbg !2965
  store i64 0, ptr %1, align 8, !dbg !2968
  %38 = load ptr, ptr %1, align 8, !dbg !2968, !noundef !24
; call core::ptr::metadata::from_raw_parts_mut
  %39 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h101f728fd46e84c5E(ptr %38) #10, !dbg !2969
  store ptr %39, ptr %end_l, align 8, !dbg !2970
  %40 = load i8, ptr %30, align 1, !dbg !2971
  %41 = getelementptr inbounds [128 x i8], ptr %offsets_l, i64 0, i64 0, !dbg !2976
  call void @llvm.memset.p0.i64(ptr align 1 %41, i8 %40, i64 128, i1 false), !dbg !2976
  %_11 = load ptr, ptr %l, align 8, !dbg !2977, !noundef !24
  store ptr %_11, ptr %self.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i35, metadata !291, metadata !DIExpression()), !dbg !2978
  store i64 %v.1, ptr %count.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i34, metadata !297, metadata !DIExpression()), !dbg !2980
  store ptr %_11, ptr %self.dbg.spill.i127, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i127, metadata !301, metadata !DIExpression()), !dbg !2981
  store i64 %v.1, ptr %count.dbg.spill.i126, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i126, metadata !306, metadata !DIExpression()), !dbg !2983
  %42 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %v.1, !dbg !2984
  store ptr %42, ptr %20, align 8, !dbg !2984
  %_3.i128 = load ptr, ptr %20, align 8, !dbg !2984, !noundef !24
  store ptr %_3.i128, ptr %r, align 8, !dbg !2977
  store i64 128, ptr %block_r, align 8, !dbg !2985
  store i64 0, ptr %addr.dbg.spill.i.i177, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i177, metadata !2951, metadata !DIExpression()), !dbg !2986
  store i64 0, ptr %2, align 8, !dbg !2989
  %43 = load ptr, ptr %2, align 8, !dbg !2989, !noundef !24
; call core::ptr::metadata::from_raw_parts_mut
  %44 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h101f728fd46e84c5E(ptr %43) #10, !dbg !2990
  store ptr %44, ptr %start_r, align 8, !dbg !2991
  store i64 0, ptr %addr.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i, metadata !2951, metadata !DIExpression()), !dbg !2992
  store i64 0, ptr %3, align 8, !dbg !2995
  %45 = load ptr, ptr %3, align 8, !dbg !2995, !noundef !24
; call core::ptr::metadata::from_raw_parts_mut
  %46 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h101f728fd46e84c5E(ptr %45) #10, !dbg !2996
  store ptr %46, ptr %end_r, align 8, !dbg !2997
  %47 = load i8, ptr %31, align 1, !dbg !2998
  %48 = getelementptr inbounds [128 x i8], ptr %offsets_r, i64 0, i64 0, !dbg !3000
  call void @llvm.memset.p0.i64(ptr align 1 %48, i8 %47, i64 128, i1 false), !dbg !3000
  br label %bb9, !dbg !3001

bb9:                                              ; preds = %bb101, %start
  %_21 = load ptr, ptr %l, align 8, !dbg !3002, !noundef !24
  %_22 = load ptr, ptr %r, align 8, !dbg !3003, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_20 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E(ptr %_21, ptr %_22) #10, !dbg !3004
  %is_done = icmp ule i64 %_20, 256, !dbg !3004
  %49 = zext i1 %is_done to i8, !dbg !3004
  store i8 %49, ptr %is_done.dbg.spill, align 1, !dbg !3004
  call void @llvm.dbg.declare(metadata ptr %is_done.dbg.spill, metadata !2889, metadata !DIExpression()), !dbg !3005
  br i1 %is_done, label %bb11, label %bb33, !dbg !3006

bb33:                                             ; preds = %bb31, %bb9
  %_65 = load ptr, ptr %start_l, align 8, !dbg !3007, !noundef !24
  %_66 = load ptr, ptr %end_l, align 8, !dbg !3008, !noundef !24
  %_64 = icmp eq ptr %_65, %_66, !dbg !3007
  br i1 %_64, label %bb34, label %bb44, !dbg !3007

bb11:                                             ; preds = %bb9
  %_25 = load ptr, ptr %l, align 8, !dbg !3009, !noundef !24
  %_26 = load ptr, ptr %r, align 8, !dbg !3010, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %50 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E(ptr %_25, ptr %_26) #10, !dbg !3011
  store i64 %50, ptr %rem, align 8, !dbg !3011
  %_29 = load ptr, ptr %start_l, align 8, !dbg !3012, !noundef !24
  %_30 = load ptr, ptr %end_l, align 8, !dbg !3013, !noundef !24
  %_28 = icmp ult ptr %_29, %_30, !dbg !3012
  br i1 %_28, label %bb13, label %bb14, !dbg !3012

bb14:                                             ; preds = %bb11
  %_32 = load ptr, ptr %start_r, align 8, !dbg !3014, !noundef !24
  %_33 = load ptr, ptr %end_r, align 8, !dbg !3015, !noundef !24
  %_31 = icmp ult ptr %_32, %_33, !dbg !3014
  %51 = zext i1 %_31 to i8, !dbg !3012
  store i8 %51, ptr %_27, align 1, !dbg !3012
  br label %bb15, !dbg !3012

bb13:                                             ; preds = %bb11
  store i8 1, ptr %_27, align 1, !dbg !3012
  br label %bb15, !dbg !3012

bb15:                                             ; preds = %bb14, %bb13
  %52 = load i8, ptr %_27, align 1, !dbg !3012, !range !210, !noundef !24
  %53 = trunc i8 %52 to i1, !dbg !3012
  br i1 %53, label %bb16, label %bb18, !dbg !3012

bb18:                                             ; preds = %bb17, %bb15
  %_36 = load ptr, ptr %start_l, align 8, !dbg !3016, !noundef !24
  %_37 = load ptr, ptr %end_l, align 8, !dbg !3017, !noundef !24
  %_35 = icmp ult ptr %_36, %_37, !dbg !3016
  br i1 %_35, label %bb19, label %bb20, !dbg !3016

bb16:                                             ; preds = %bb15
  %54 = load i64, ptr %rem, align 8, !dbg !3018, !noundef !24
  %_34.0 = sub i64 %54, 128, !dbg !3018
  %_34.1 = icmp ult i64 %54, 128, !dbg !3018
  %55 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !3018
  br i1 %55, label %panic, label %bb17, !dbg !3018

bb17:                                             ; preds = %bb16
  store i64 %_34.0, ptr %rem, align 8, !dbg !3018
  br label %bb18, !dbg !3019

panic:                                            ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc436) #11, !dbg !3018
  unreachable, !dbg !3018

bb20:                                             ; preds = %bb18
  %_40 = load ptr, ptr %start_r, align 8, !dbg !3020, !noundef !24
  %_41 = load ptr, ptr %end_r, align 8, !dbg !3021, !noundef !24
  %_39 = icmp ult ptr %_40, %_41, !dbg !3020
  br i1 %_39, label %bb21, label %bb22, !dbg !3020

bb19:                                             ; preds = %bb18
  %_38 = load i64, ptr %rem, align 8, !dbg !3022, !noundef !24
  store i64 %_38, ptr %block_r, align 8, !dbg !3023
  br label %bb24, !dbg !3024

bb24:                                             ; preds = %bb23, %bb21, %bb19
  %_50 = load i64, ptr %block_l, align 8, !dbg !3025, !noundef !24
  %_49 = icmp ule i64 %_50, 128, !dbg !3025
  br i1 %_49, label %bb26, label %bb25, !dbg !3025

bb22:                                             ; preds = %bb20
  %_43 = load i64, ptr %rem, align 8, !dbg !3026, !noundef !24
  %56 = udiv i64 %_43, 2, !dbg !3027
  store i64 %56, ptr %block_l, align 8, !dbg !3027
  %_44 = load i64, ptr %rem, align 8, !dbg !3028, !noundef !24
  %_45 = load i64, ptr %block_l, align 8, !dbg !3029, !noundef !24
  %_46.0 = sub i64 %_44, %_45, !dbg !3028
  %_46.1 = icmp ult i64 %_44, %_45, !dbg !3028
  %57 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3028
  br i1 %57, label %panic4, label %bb23, !dbg !3028

bb21:                                             ; preds = %bb20
  %_42 = load i64, ptr %rem, align 8, !dbg !3030, !noundef !24
  store i64 %_42, ptr %block_l, align 8, !dbg !3031
  br label %bb24, !dbg !3032

bb23:                                             ; preds = %bb22
  store i64 %_46.0, ptr %block_r, align 8, !dbg !3033
  br label %bb24, !dbg !3032

panic4:                                           ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc438) #11, !dbg !3028
  unreachable, !dbg !3028

bb25:                                             ; preds = %bb24
  store i8 0, ptr %_48, align 1, !dbg !3025
  br label %bb27, !dbg !3025

bb26:                                             ; preds = %bb24
  %_52 = load i64, ptr %block_r, align 8, !dbg !3034, !noundef !24
  %_51 = icmp ule i64 %_52, 128, !dbg !3034
  %58 = zext i1 %_51 to i8, !dbg !3025
  store i8 %58, ptr %_48, align 1, !dbg !3025
  br label %bb27, !dbg !3025

bb27:                                             ; preds = %bb25, %bb26
  %59 = load i8, ptr %_48, align 1, !dbg !3035, !range !210, !noundef !24
  %60 = trunc i8 %59 to i1, !dbg !3035
  %_47 = xor i1 %60, true, !dbg !3035
  br i1 %_47, label %bb28, label %bb29, !dbg !3035

bb29:                                             ; preds = %bb27
  %_57 = load ptr, ptr %l, align 8, !dbg !3036, !noundef !24
  %_58 = load ptr, ptr %r, align 8, !dbg !3037, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_56 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E(ptr %_57, ptr %_58) #10, !dbg !3038
  %_60 = load i64, ptr %block_l, align 8, !dbg !3039, !noundef !24
  %_61 = load i64, ptr %block_r, align 8, !dbg !3040, !noundef !24
  %61 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_60, i64 %_61), !dbg !3039
  %_62.0 = extractvalue { i64, i1 } %61, 0, !dbg !3039
  %_62.1 = extractvalue { i64, i1 } %61, 1, !dbg !3039
  %62 = call i1 @llvm.expect.i1(i1 %_62.1, i1 false), !dbg !3039
  br i1 %62, label %panic5, label %bb31, !dbg !3039

bb28:                                             ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc439, i64 54, ptr align 8 @alloc441) #11, !dbg !3035
  unreachable, !dbg !3035

bb31:                                             ; preds = %bb29
  %_55 = icmp eq i64 %_56, %_62.0, !dbg !3038
  %_54 = xor i1 %_55, true, !dbg !3041
  br i1 %_54, label %bb32, label %bb33, !dbg !3041

panic5:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc443) #11, !dbg !3039
  unreachable, !dbg !3039

bb32:                                             ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc444, i64 50, ptr align 8 @alloc446) #11, !dbg !3041
  unreachable, !dbg !3041

bb44:                                             ; preds = %bb37, %bb33
  %_90 = load ptr, ptr %start_r, align 8, !dbg !3042, !noundef !24
  %_91 = load ptr, ptr %end_r, align 8, !dbg !3043, !noundef !24
  %_89 = icmp eq ptr %_90, %_91, !dbg !3042
  br i1 %_89, label %bb45, label %bb55, !dbg !3042

bb34:                                             ; preds = %bb33
  store ptr %offsets_l, ptr %this.dbg.spill.i18, align 8
  %63 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i18, i32 0, i32 1
  store i64 128, ptr %63, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i18, metadata !3044, metadata !DIExpression()), !dbg !3054
  store ptr %offsets_l, ptr %self.dbg.spill.i184, align 8
  %64 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i184, i32 0, i32 1
  store i64 128, ptr %64, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i184, metadata !3056, metadata !DIExpression()), !dbg !3064
  store ptr %offsets_l, ptr %start_l, align 8, !dbg !3066
  %_70 = load ptr, ptr %start_l, align 8, !dbg !3067, !noundef !24
  store ptr %_70, ptr %end_l, align 8, !dbg !3068
  %65 = load ptr, ptr %l, align 8, !dbg !3069, !noundef !24
  store ptr %65, ptr %elem, align 8, !dbg !3069
  %_74 = load i64, ptr %block_l, align 8, !dbg !3070, !noundef !24
  store i64 0, ptr %_73, align 8, !dbg !3071
  %66 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 1, !dbg !3071
  store i64 %_74, ptr %66, align 8, !dbg !3071
  %67 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 0, !dbg !3071
  %68 = load i64, ptr %67, align 8, !dbg !3071, !noundef !24
  %69 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 1, !dbg !3071
  %70 = load i64, ptr %69, align 8, !dbg !3071, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %71 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17haf2af0e98b3b8b4eE"(i64 %68, i64 %70) #10, !dbg !3071
  %_72.0 = extractvalue { i64, i64 } %71, 0, !dbg !3071
  %_72.1 = extractvalue { i64, i64 } %71, 1, !dbg !3071
  %72 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3071
  store i64 %_72.0, ptr %72, align 8, !dbg !3071
  %73 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3071
  store i64 %_72.1, ptr %73, align 8, !dbg !3071
  br label %bb37, !dbg !3072

bb37:                                             ; preds = %bb39, %bb34
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %74 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hac6ae5e1fdafd993E"(ptr align 8 %iter) #10, !dbg !2942
  store { i64, i64 } %74, ptr %_76, align 8, !dbg !2942
  %_78 = load i64, ptr %_76, align 8, !dbg !2942, !range !1053, !noundef !24
  %75 = icmp eq i64 %_78, 0, !dbg !2942
  br i1 %75, label %bb44, label %bb39, !dbg !2942

bb39:                                             ; preds = %bb37
  %76 = getelementptr inbounds { i64, i64 }, ptr %_76, i32 0, i32 1, !dbg !3073
  %i = load i64, ptr %76, align 8, !dbg !3073, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3073
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2897, metadata !DIExpression()), !dbg !3074
  %77 = load ptr, ptr %end_l, align 8, !dbg !3075, !noundef !24
  %78 = trunc i64 %i to i8, !dbg !3075
  store i8 %78, ptr %77, align 1, !dbg !3075
  %_81 = load ptr, ptr %end_l, align 8, !dbg !3076, !noundef !24
  %_86 = load ptr, ptr %elem, align 8, !dbg !3077, !noundef !24
  store ptr %_86, ptr %_85, align 8, !dbg !3078
  %79 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 1, !dbg !3078
  store ptr %pivot, ptr %79, align 8, !dbg !3078
  %80 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 0, !dbg !3078
  %81 = load ptr, ptr %80, align 8, !dbg !3078, !nonnull !24, !align !504, !noundef !24
  %82 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 1, !dbg !3078
  %83 = load ptr, ptr %82, align 8, !dbg !3078, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_84 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %81, ptr align 8 %83) #10, !dbg !3078
  %_83 = xor i1 %_84, true, !dbg !3079
  %_82 = zext i1 %_83 to i64, !dbg !3079
  store ptr %_81, ptr %self.dbg.spill.i47, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i47, metadata !3080, metadata !DIExpression()), !dbg !3086
  store i64 %_82, ptr %count.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i46, metadata !3085, metadata !DIExpression()), !dbg !3088
  store ptr %_81, ptr %self.dbg.spill.i160, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i160, metadata !3089, metadata !DIExpression()), !dbg !3095
  store i64 %_82, ptr %count.dbg.spill.i159, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i159, metadata !3094, metadata !DIExpression()), !dbg !3097
  %84 = getelementptr inbounds i8, ptr %_81, i64 %_82, !dbg !3098
  store ptr %84, ptr %9, align 8, !dbg !3098
  %_3.i161 = load ptr, ptr %9, align 8, !dbg !3098, !noundef !24
  store ptr %_3.i161, ptr %end_l, align 8, !dbg !3099
  %_88 = load ptr, ptr %elem, align 8, !dbg !3100, !noundef !24
  store ptr %_88, ptr %self.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i33, metadata !291, metadata !DIExpression()), !dbg !3101
  store i64 1, ptr %count.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i32, metadata !297, metadata !DIExpression()), !dbg !3103
  store ptr %_88, ptr %self.dbg.spill.i130, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i130, metadata !301, metadata !DIExpression()), !dbg !3104
  store i64 1, ptr %count.dbg.spill.i129, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i129, metadata !306, metadata !DIExpression()), !dbg !3106
  %85 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_88, i64 1, !dbg !3107
  store ptr %85, ptr %19, align 8, !dbg !3107
  %_3.i131 = load ptr, ptr %19, align 8, !dbg !3107, !noundef !24
  store ptr %_3.i131, ptr %elem, align 8, !dbg !3108
  br label %bb37, !dbg !3072

bb40:                                             ; No predecessors!
  unreachable, !dbg !2942

bb55:                                             ; preds = %bb48, %bb44
  %_115 = load ptr, ptr %start_l, align 8, !dbg !3109, !noundef !24
  %_116 = load ptr, ptr %end_l, align 8, !dbg !3110, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_114 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf99af2bf0ac83c36E(ptr %_115, ptr %_116) #10, !dbg !3111
  %_118 = load ptr, ptr %start_r, align 8, !dbg !3112, !noundef !24
  %_119 = load ptr, ptr %end_r, align 8, !dbg !3113, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_117 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf99af2bf0ac83c36E(ptr %_118, ptr %_119) #10, !dbg !3114
; call core::cmp::min
  %count = call i64 @_ZN4core3cmp3min17h40572bf1d69cc26bE(i64 %_114, i64 %_117) #10, !dbg !3115
  store i64 %count, ptr %count.dbg.spill, align 8, !dbg !3115
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !2905, metadata !DIExpression()), !dbg !3116
  %_120 = icmp ugt i64 %count, 0, !dbg !3117
  br i1 %_120, label %bb59, label %bb95, !dbg !3117

bb45:                                             ; preds = %bb44
  store ptr %offsets_r, ptr %this.dbg.spill.i, align 8
  %86 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 128, ptr %86, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !3044, metadata !DIExpression()), !dbg !3118
  store ptr %offsets_r, ptr %self.dbg.spill.i185, align 8
  %87 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i185, i32 0, i32 1
  store i64 128, ptr %87, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i185, metadata !3056, metadata !DIExpression()), !dbg !3120
  store ptr %offsets_r, ptr %start_r, align 8, !dbg !3122
  %_95 = load ptr, ptr %start_r, align 8, !dbg !3123, !noundef !24
  store ptr %_95, ptr %end_r, align 8, !dbg !3124
  %88 = load ptr, ptr %r, align 8, !dbg !3125, !noundef !24
  store ptr %88, ptr %elem1, align 8, !dbg !3125
  %_99 = load i64, ptr %block_r, align 8, !dbg !3126, !noundef !24
  store i64 0, ptr %_98, align 8, !dbg !3127
  %89 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 1, !dbg !3127
  store i64 %_99, ptr %89, align 8, !dbg !3127
  %90 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 0, !dbg !3127
  %91 = load i64, ptr %90, align 8, !dbg !3127, !noundef !24
  %92 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 1, !dbg !3127
  %93 = load i64, ptr %92, align 8, !dbg !3127, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %94 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17haf2af0e98b3b8b4eE"(i64 %91, i64 %93) #10, !dbg !3127
  %_97.0 = extractvalue { i64, i64 } %94, 0, !dbg !3127
  %_97.1 = extractvalue { i64, i64 } %94, 1, !dbg !3127
  %95 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 0, !dbg !3127
  store i64 %_97.0, ptr %95, align 8, !dbg !3127
  %96 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 1, !dbg !3127
  store i64 %_97.1, ptr %96, align 8, !dbg !3127
  br label %bb48, !dbg !3128

bb48:                                             ; preds = %bb50, %bb45
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %97 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hac6ae5e1fdafd993E"(ptr align 8 %iter2) #10, !dbg !2944
  store { i64, i64 } %97, ptr %_101, align 8, !dbg !2944
  %_103 = load i64, ptr %_101, align 8, !dbg !2944, !range !1053, !noundef !24
  %98 = icmp eq i64 %_103, 0, !dbg !2944
  br i1 %98, label %bb55, label %bb50, !dbg !2944

bb50:                                             ; preds = %bb48
  %99 = getelementptr inbounds { i64, i64 }, ptr %_101, i32 0, i32 1, !dbg !3129
  %i6 = load i64, ptr %99, align 8, !dbg !3129, !noundef !24
  store i64 %i6, ptr %i.dbg.spill7, align 8, !dbg !3129
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill7, metadata !2903, metadata !DIExpression()), !dbg !3130
  %_106 = load ptr, ptr %elem1, align 8, !dbg !3131, !noundef !24
  store ptr %_106, ptr %self.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i99, metadata !2152, metadata !DIExpression()), !dbg !3132
  store i64 1, ptr %count.dbg.spill.i98, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i98, metadata !2155, metadata !DIExpression()), !dbg !3134
  store i64 1, ptr %self.dbg.spill.i.i97, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i97, metadata !2159, metadata !DIExpression()), !dbg !3135
  store i64 0, ptr %self.dbg.spill.i1.i96, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i96, metadata !2168, metadata !DIExpression()), !dbg !3137
  store i64 1, ptr %rhs.dbg.spill.i.i95, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i95, metadata !2173, metadata !DIExpression()), !dbg !3139
  store ptr %_106, ptr %self.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i101, metadata !301, metadata !DIExpression()), !dbg !3140
  store i64 -1, ptr %count.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i100, metadata !306, metadata !DIExpression()), !dbg !3142
  %100 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_106, i64 -1, !dbg !3143
  store ptr %100, ptr %29, align 8, !dbg !3143
  %_3.i = load ptr, ptr %29, align 8, !dbg !3143, !noundef !24
  store ptr %_3.i, ptr %elem1, align 8, !dbg !3144
  %101 = load ptr, ptr %end_r, align 8, !dbg !3145, !noundef !24
  %102 = trunc i64 %i6 to i8, !dbg !3145
  store i8 %102, ptr %101, align 1, !dbg !3145
  %_108 = load ptr, ptr %end_r, align 8, !dbg !3146, !noundef !24
  %_112 = load ptr, ptr %elem1, align 8, !dbg !3147, !noundef !24
  store ptr %_112, ptr %_111, align 8, !dbg !3148
  %103 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 1, !dbg !3148
  store ptr %pivot, ptr %103, align 8, !dbg !3148
  %104 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 0, !dbg !3148
  %105 = load ptr, ptr %104, align 8, !dbg !3148, !nonnull !24, !align !504, !noundef !24
  %106 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 1, !dbg !3148
  %107 = load ptr, ptr %106, align 8, !dbg !3148, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_110 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %105, ptr align 8 %107) #10, !dbg !3148
  %_109 = zext i1 %_110 to i64, !dbg !3148
  store ptr %_108, ptr %self.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i45, metadata !3080, metadata !DIExpression()), !dbg !3149
  store i64 %_109, ptr %count.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i44, metadata !3085, metadata !DIExpression()), !dbg !3151
  store ptr %_108, ptr %self.dbg.spill.i163, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i163, metadata !3089, metadata !DIExpression()), !dbg !3152
  store i64 %_109, ptr %count.dbg.spill.i162, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i162, metadata !3094, metadata !DIExpression()), !dbg !3154
  %108 = getelementptr inbounds i8, ptr %_108, i64 %_109, !dbg !3155
  store ptr %108, ptr %8, align 8, !dbg !3155
  %_3.i164 = load ptr, ptr %8, align 8, !dbg !3155, !noundef !24
  store ptr %_3.i164, ptr %end_r, align 8, !dbg !3156
  br label %bb48, !dbg !3128

bb51:                                             ; No predecessors!
  unreachable, !dbg !2944

bb95:                                             ; preds = %bb89, %bb55
  %_191 = load ptr, ptr %start_l, align 8, !dbg !3157, !noundef !24
  %_192 = load ptr, ptr %end_l, align 8, !dbg !3158, !noundef !24
  %_190 = icmp eq ptr %_191, %_192, !dbg !3157
  br i1 %_190, label %bb96, label %bb98, !dbg !3157

bb59:                                             ; preds = %bb55
  %_125 = load ptr, ptr %l, align 8, !dbg !3159, !noundef !24
  %109 = load ptr, ptr %start_l, align 8, !dbg !3159, !noundef !24
  %_127 = load i8, ptr %109, align 1, !dbg !3159, !noundef !24
  store i8 %_127, ptr %small.dbg.spill.i194, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i194, metadata !3160, metadata !DIExpression()), !dbg !3169
  %110 = zext i8 %_127 to i64, !dbg !3171
  store ptr %_125, ptr %self.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i31, metadata !291, metadata !DIExpression()), !dbg !3172
  store i64 %110, ptr %count.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i30, metadata !297, metadata !DIExpression()), !dbg !3174
  store ptr %_125, ptr %self.dbg.spill.i133, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i133, metadata !301, metadata !DIExpression()), !dbg !3175
  store i64 %110, ptr %count.dbg.spill.i132, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i132, metadata !306, metadata !DIExpression()), !dbg !3177
  %111 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_125, i64 %110, !dbg !3178
  store ptr %111, ptr %18, align 8, !dbg !3178
  %_3.i134 = load ptr, ptr %18, align 8, !dbg !3178, !noundef !24
; call core::ptr::read
  call void @_ZN4core3ptr4read17hc4a3b4e001a11806E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %tmp, ptr %_3.i134) #10, !dbg !3179
  %_131 = load ptr, ptr %r, align 8, !dbg !3180, !noundef !24
  %112 = load ptr, ptr %start_r, align 8, !dbg !3180, !noundef !24
  %_134 = load i8, ptr %112, align 1, !dbg !3180, !noundef !24
  store i8 %_134, ptr %small.dbg.spill.i193, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i193, metadata !3160, metadata !DIExpression()), !dbg !3181
  %113 = zext i8 %_134 to i64, !dbg !3183
  %114 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %113, i64 1), !dbg !3180
  %_135.0 = extractvalue { i64, i1 } %114, 0, !dbg !3180
  %_135.1 = extractvalue { i64, i1 } %114, 1, !dbg !3180
  %115 = call i1 @llvm.expect.i1(i1 %_135.1, i1 false), !dbg !3180
  br i1 %115, label %panic8, label %bb64, !dbg !3180

bb64:                                             ; preds = %bb59
  store ptr %_131, ptr %self.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i94, metadata !2152, metadata !DIExpression()), !dbg !3184
  store i64 %_135.0, ptr %count.dbg.spill.i93, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i93, metadata !2155, metadata !DIExpression()), !dbg !3186
  store i64 %_135.0, ptr %self.dbg.spill.i.i92, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i92, metadata !2159, metadata !DIExpression()), !dbg !3187
  store i64 0, ptr %self.dbg.spill.i1.i91, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i91, metadata !2168, metadata !DIExpression()), !dbg !3189
  store i64 %_135.0, ptr %rhs.dbg.spill.i.i90, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i90, metadata !2173, metadata !DIExpression()), !dbg !3191
  %116 = sub i64 0, %_135.0, !dbg !3192
  store ptr %_131, ptr %self.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i103, metadata !301, metadata !DIExpression()), !dbg !3193
  store i64 %116, ptr %count.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i102, metadata !306, metadata !DIExpression()), !dbg !3195
  %117 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_131, i64 %116, !dbg !3196
  store ptr %117, ptr %28, align 8, !dbg !3196
  %_3.i104 = load ptr, ptr %28, align 8, !dbg !3196, !noundef !24
  %_137 = load ptr, ptr %l, align 8, !dbg !3197, !noundef !24
  %118 = load ptr, ptr %start_l, align 8, !dbg !3197, !noundef !24
  %_139 = load i8, ptr %118, align 1, !dbg !3197, !noundef !24
  store i8 %_139, ptr %small.dbg.spill.i192, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i192, metadata !3160, metadata !DIExpression()), !dbg !3198
  %119 = zext i8 %_139 to i64, !dbg !3200
  store ptr %_137, ptr %self.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i29, metadata !291, metadata !DIExpression()), !dbg !3201
  store i64 %119, ptr %count.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i28, metadata !297, metadata !DIExpression()), !dbg !3203
  store ptr %_137, ptr %self.dbg.spill.i136, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i136, metadata !301, metadata !DIExpression()), !dbg !3204
  store i64 %119, ptr %count.dbg.spill.i135, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i135, metadata !306, metadata !DIExpression()), !dbg !3206
  %120 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_137, i64 %119, !dbg !3207
  store ptr %120, ptr %17, align 8, !dbg !3207
  %_3.i137 = load ptr, ptr %17, align 8, !dbg !3207, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %_3.i104, ptr %_3.i137, i64 1) #10, !dbg !3208
  store i64 1, ptr %_141, align 8, !dbg !3209
  %121 = getelementptr inbounds { i64, i64 }, ptr %_141, i32 0, i32 1, !dbg !3209
  store i64 %count, ptr %121, align 8, !dbg !3209
  %122 = getelementptr inbounds { i64, i64 }, ptr %_141, i32 0, i32 0, !dbg !3209
  %123 = load i64, ptr %122, align 8, !dbg !3209, !noundef !24
  %124 = getelementptr inbounds { i64, i64 }, ptr %_141, i32 0, i32 1, !dbg !3209
  %125 = load i64, ptr %124, align 8, !dbg !3209, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %126 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17haf2af0e98b3b8b4eE"(i64 %123, i64 %125) #10, !dbg !3209
  %_140.0 = extractvalue { i64, i64 } %126, 0, !dbg !3209
  %_140.1 = extractvalue { i64, i64 } %126, 1, !dbg !3209
  %127 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 0, !dbg !3209
  store i64 %_140.0, ptr %127, align 8, !dbg !3209
  %128 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 1, !dbg !3209
  store i64 %_140.1, ptr %128, align 8, !dbg !3209
  br label %bb70, !dbg !3210

panic8:                                           ; preds = %bb59
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc448) #11, !dbg !3180
  unreachable, !dbg !3180

bb70:                                             ; preds = %bb84, %bb64
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %129 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hac6ae5e1fdafd993E"(ptr align 8 %iter3) #10, !dbg !2946
  store { i64, i64 } %129, ptr %_144, align 8, !dbg !2946
  %_146 = load i64, ptr %_144, align 8, !dbg !2946, !range !1053, !noundef !24
  %130 = icmp eq i64 %_146, 0, !dbg !2946
  br i1 %130, label %bb74, label %bb72, !dbg !2946

bb74:                                             ; preds = %bb70
  %_179 = load ptr, ptr %r, align 8, !dbg !3211, !noundef !24
  %131 = load ptr, ptr %start_r, align 8, !dbg !3211, !noundef !24
  %_182 = load i8, ptr %131, align 1, !dbg !3211, !noundef !24
  store i8 %_182, ptr %small.dbg.spill.i187, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i187, metadata !3160, metadata !DIExpression()), !dbg !3212
  %132 = zext i8 %_182 to i64, !dbg !3214
  %133 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %132, i64 1), !dbg !3211
  %_183.0 = extractvalue { i64, i1 } %133, 0, !dbg !3211
  %_183.1 = extractvalue { i64, i1 } %133, 1, !dbg !3211
  %134 = call i1 @llvm.expect.i1(i1 %_183.1, i1 false), !dbg !3211
  br i1 %134, label %panic11, label %bb89, !dbg !3211

bb72:                                             ; preds = %bb70
  %_148 = load ptr, ptr %start_l, align 8, !dbg !3215, !noundef !24
  store ptr %_148, ptr %self.dbg.spill.i43, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i43, metadata !3080, metadata !DIExpression()), !dbg !3216
  store i64 1, ptr %count.dbg.spill.i42, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i42, metadata !3085, metadata !DIExpression()), !dbg !3218
  store ptr %_148, ptr %self.dbg.spill.i166, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i166, metadata !3089, metadata !DIExpression()), !dbg !3219
  store i64 1, ptr %count.dbg.spill.i165, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i165, metadata !3094, metadata !DIExpression()), !dbg !3221
  %135 = getelementptr inbounds i8, ptr %_148, i64 1, !dbg !3222
  store ptr %135, ptr %7, align 8, !dbg !3222
  %_3.i167 = load ptr, ptr %7, align 8, !dbg !3222, !noundef !24
  store ptr %_3.i167, ptr %start_l, align 8, !dbg !3223
  %_152 = load ptr, ptr %l, align 8, !dbg !3224, !noundef !24
  %136 = load ptr, ptr %start_l, align 8, !dbg !3224, !noundef !24
  %_154 = load i8, ptr %136, align 1, !dbg !3224, !noundef !24
  store i8 %_154, ptr %small.dbg.spill.i191, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i191, metadata !3160, metadata !DIExpression()), !dbg !3225
  %137 = zext i8 %_154 to i64, !dbg !3227
  store ptr %_152, ptr %self.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i27, metadata !291, metadata !DIExpression()), !dbg !3228
  store i64 %137, ptr %count.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i26, metadata !297, metadata !DIExpression()), !dbg !3230
  store ptr %_152, ptr %self.dbg.spill.i139, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i139, metadata !301, metadata !DIExpression()), !dbg !3231
  store i64 %137, ptr %count.dbg.spill.i138, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i138, metadata !306, metadata !DIExpression()), !dbg !3233
  %138 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_152, i64 %137, !dbg !3234
  store ptr %138, ptr %16, align 8, !dbg !3234
  %_3.i140 = load ptr, ptr %16, align 8, !dbg !3234, !noundef !24
  %_156 = load ptr, ptr %r, align 8, !dbg !3235, !noundef !24
  %139 = load ptr, ptr %start_r, align 8, !dbg !3235, !noundef !24
  %_159 = load i8, ptr %139, align 1, !dbg !3235, !noundef !24
  store i8 %_159, ptr %small.dbg.spill.i190, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i190, metadata !3160, metadata !DIExpression()), !dbg !3236
  %140 = zext i8 %_159 to i64, !dbg !3238
  %141 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %140, i64 1), !dbg !3235
  %_160.0 = extractvalue { i64, i1 } %141, 0, !dbg !3235
  %_160.1 = extractvalue { i64, i1 } %141, 1, !dbg !3235
  %142 = call i1 @llvm.expect.i1(i1 %_160.1, i1 false), !dbg !3235
  br i1 %142, label %panic9, label %bb79, !dbg !3235

bb73:                                             ; No predecessors!
  unreachable, !dbg !2946

bb79:                                             ; preds = %bb72
  store ptr %_156, ptr %self.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i89, metadata !2152, metadata !DIExpression()), !dbg !3239
  store i64 %_160.0, ptr %count.dbg.spill.i88, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i88, metadata !2155, metadata !DIExpression()), !dbg !3241
  store i64 %_160.0, ptr %self.dbg.spill.i.i87, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i87, metadata !2159, metadata !DIExpression()), !dbg !3242
  store i64 0, ptr %self.dbg.spill.i1.i86, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i86, metadata !2168, metadata !DIExpression()), !dbg !3244
  store i64 %_160.0, ptr %rhs.dbg.spill.i.i85, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i85, metadata !2173, metadata !DIExpression()), !dbg !3246
  %143 = sub i64 0, %_160.0, !dbg !3247
  store ptr %_156, ptr %self.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i106, metadata !301, metadata !DIExpression()), !dbg !3248
  store i64 %143, ptr %count.dbg.spill.i105, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i105, metadata !306, metadata !DIExpression()), !dbg !3250
  %144 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_156, i64 %143, !dbg !3251
  store ptr %144, ptr %27, align 8, !dbg !3251
  %_3.i107 = load ptr, ptr %27, align 8, !dbg !3251, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %_3.i140, ptr %_3.i107, i64 1) #10, !dbg !3252
  %_162 = load ptr, ptr %start_r, align 8, !dbg !3253, !noundef !24
  store ptr %_162, ptr %self.dbg.spill.i41, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i41, metadata !3080, metadata !DIExpression()), !dbg !3254
  store i64 1, ptr %count.dbg.spill.i40, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i40, metadata !3085, metadata !DIExpression()), !dbg !3256
  store ptr %_162, ptr %self.dbg.spill.i169, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i169, metadata !3089, metadata !DIExpression()), !dbg !3257
  store i64 1, ptr %count.dbg.spill.i168, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i168, metadata !3094, metadata !DIExpression()), !dbg !3259
  %145 = getelementptr inbounds i8, ptr %_162, i64 1, !dbg !3260
  store ptr %145, ptr %6, align 8, !dbg !3260
  %_3.i170 = load ptr, ptr %6, align 8, !dbg !3260, !noundef !24
  store ptr %_3.i170, ptr %start_r, align 8, !dbg !3261
  %_166 = load ptr, ptr %r, align 8, !dbg !3262, !noundef !24
  %146 = load ptr, ptr %start_r, align 8, !dbg !3262, !noundef !24
  %_169 = load i8, ptr %146, align 1, !dbg !3262, !noundef !24
  store i8 %_169, ptr %small.dbg.spill.i189, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i189, metadata !3160, metadata !DIExpression()), !dbg !3263
  %147 = zext i8 %_169 to i64, !dbg !3265
  %148 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %147, i64 1), !dbg !3262
  %_170.0 = extractvalue { i64, i1 } %148, 0, !dbg !3262
  %_170.1 = extractvalue { i64, i1 } %148, 1, !dbg !3262
  %149 = call i1 @llvm.expect.i1(i1 %_170.1, i1 false), !dbg !3262
  br i1 %149, label %panic10, label %bb84, !dbg !3262

panic9:                                           ; preds = %bb72
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc450) #11, !dbg !3235
  unreachable, !dbg !3235

bb84:                                             ; preds = %bb79
  store ptr %_166, ptr %self.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i84, metadata !2152, metadata !DIExpression()), !dbg !3266
  store i64 %_170.0, ptr %count.dbg.spill.i83, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i83, metadata !2155, metadata !DIExpression()), !dbg !3268
  store i64 %_170.0, ptr %self.dbg.spill.i.i82, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i82, metadata !2159, metadata !DIExpression()), !dbg !3269
  store i64 0, ptr %self.dbg.spill.i1.i81, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i81, metadata !2168, metadata !DIExpression()), !dbg !3271
  store i64 %_170.0, ptr %rhs.dbg.spill.i.i80, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i80, metadata !2173, metadata !DIExpression()), !dbg !3273
  %150 = sub i64 0, %_170.0, !dbg !3274
  store ptr %_166, ptr %self.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i109, metadata !301, metadata !DIExpression()), !dbg !3275
  store i64 %150, ptr %count.dbg.spill.i108, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i108, metadata !306, metadata !DIExpression()), !dbg !3277
  %151 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_166, i64 %150, !dbg !3278
  store ptr %151, ptr %26, align 8, !dbg !3278
  %_3.i110 = load ptr, ptr %26, align 8, !dbg !3278, !noundef !24
  %_172 = load ptr, ptr %l, align 8, !dbg !3279, !noundef !24
  %152 = load ptr, ptr %start_l, align 8, !dbg !3279, !noundef !24
  %_174 = load i8, ptr %152, align 1, !dbg !3279, !noundef !24
  store i8 %_174, ptr %small.dbg.spill.i188, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i188, metadata !3160, metadata !DIExpression()), !dbg !3280
  %153 = zext i8 %_174 to i64, !dbg !3282
  store ptr %_172, ptr %self.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i25, metadata !291, metadata !DIExpression()), !dbg !3283
  store i64 %153, ptr %count.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i24, metadata !297, metadata !DIExpression()), !dbg !3285
  store ptr %_172, ptr %self.dbg.spill.i142, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i142, metadata !301, metadata !DIExpression()), !dbg !3286
  store i64 %153, ptr %count.dbg.spill.i141, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i141, metadata !306, metadata !DIExpression()), !dbg !3288
  %154 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_172, i64 %153, !dbg !3289
  store ptr %154, ptr %15, align 8, !dbg !3289
  %_3.i143 = load ptr, ptr %15, align 8, !dbg !3289, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %_3.i110, ptr %_3.i143, i64 1) #10, !dbg !3290
  br label %bb70, !dbg !3290

panic10:                                          ; preds = %bb79
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc452) #11, !dbg !3262
  unreachable, !dbg !3262

bb89:                                             ; preds = %bb74
  store ptr %_179, ptr %self.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i79, metadata !2152, metadata !DIExpression()), !dbg !3291
  store i64 %_183.0, ptr %count.dbg.spill.i78, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i78, metadata !2155, metadata !DIExpression()), !dbg !3293
  store i64 %_183.0, ptr %self.dbg.spill.i.i77, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i77, metadata !2159, metadata !DIExpression()), !dbg !3294
  store i64 0, ptr %self.dbg.spill.i1.i76, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i76, metadata !2168, metadata !DIExpression()), !dbg !3296
  store i64 %_183.0, ptr %rhs.dbg.spill.i.i75, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i75, metadata !2173, metadata !DIExpression()), !dbg !3298
  %155 = sub i64 0, %_183.0, !dbg !3299
  store ptr %_179, ptr %self.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i112, metadata !301, metadata !DIExpression()), !dbg !3300
  store i64 %155, ptr %count.dbg.spill.i111, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i111, metadata !306, metadata !DIExpression()), !dbg !3302
  %156 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_179, i64 %155, !dbg !3303
  store ptr %156, ptr %25, align 8, !dbg !3303
  %_3.i113 = load ptr, ptr %25, align 8, !dbg !3303, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %tmp, ptr %_3.i113, i64 1) #10, !dbg !3304
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_185, ptr align 8 %tmp, i64 24, i1 false), !dbg !3305
; call core::mem::forget
  call void @_ZN4core3mem6forget17h17e565d642337995E(ptr %_185) #10, !dbg !3306
  %_187 = load ptr, ptr %start_l, align 8, !dbg !3307, !noundef !24
  store ptr %_187, ptr %self.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i39, metadata !3080, metadata !DIExpression()), !dbg !3308
  store i64 1, ptr %count.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i38, metadata !3085, metadata !DIExpression()), !dbg !3310
  store ptr %_187, ptr %self.dbg.spill.i172, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i172, metadata !3089, metadata !DIExpression()), !dbg !3311
  store i64 1, ptr %count.dbg.spill.i171, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i171, metadata !3094, metadata !DIExpression()), !dbg !3313
  %157 = getelementptr inbounds i8, ptr %_187, i64 1, !dbg !3314
  store ptr %157, ptr %5, align 8, !dbg !3314
  %_3.i173 = load ptr, ptr %5, align 8, !dbg !3314, !noundef !24
  store ptr %_3.i173, ptr %start_l, align 8, !dbg !3315
  %_189 = load ptr, ptr %start_r, align 8, !dbg !3316, !noundef !24
  store ptr %_189, ptr %self.dbg.spill.i37, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i37, metadata !3080, metadata !DIExpression()), !dbg !3317
  store i64 1, ptr %count.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i36, metadata !3085, metadata !DIExpression()), !dbg !3319
  store ptr %_189, ptr %self.dbg.spill.i175, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i175, metadata !3089, metadata !DIExpression()), !dbg !3320
  store i64 1, ptr %count.dbg.spill.i174, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i174, metadata !3094, metadata !DIExpression()), !dbg !3322
  %158 = getelementptr inbounds i8, ptr %_189, i64 1, !dbg !3323
  store ptr %158, ptr %4, align 8, !dbg !3323
  %_3.i176 = load ptr, ptr %4, align 8, !dbg !3323, !noundef !24
  store ptr %_3.i176, ptr %start_r, align 8, !dbg !3324
  br label %bb95, !dbg !3325

panic11:                                          ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc454) #11, !dbg !3211
  unreachable, !dbg !3211

bb98:                                             ; preds = %bb96, %bb95
  %_197 = load ptr, ptr %start_r, align 8, !dbg !3326, !noundef !24
  %_198 = load ptr, ptr %end_r, align 8, !dbg !3327, !noundef !24
  %_196 = icmp eq ptr %_197, %_198, !dbg !3326
  br i1 %_196, label %bb99, label %bb101, !dbg !3326

bb96:                                             ; preds = %bb95
  %_194 = load ptr, ptr %l, align 8, !dbg !3328, !noundef !24
  %_195 = load i64, ptr %block_l, align 8, !dbg !3329, !noundef !24
  store ptr %_194, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !291, metadata !DIExpression()), !dbg !3330
  store i64 %_195, ptr %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i22, metadata !297, metadata !DIExpression()), !dbg !3332
  store ptr %_194, ptr %self.dbg.spill.i145, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i145, metadata !301, metadata !DIExpression()), !dbg !3333
  store i64 %_195, ptr %count.dbg.spill.i144, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i144, metadata !306, metadata !DIExpression()), !dbg !3335
  %159 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_194, i64 %_195, !dbg !3336
  store ptr %159, ptr %14, align 8, !dbg !3336
  %_3.i146 = load ptr, ptr %14, align 8, !dbg !3336, !noundef !24
  store ptr %_3.i146, ptr %l, align 8, !dbg !3337
  br label %bb98, !dbg !3338

bb101:                                            ; preds = %bb99, %bb98
  br i1 %is_done, label %bb102, label %bb9, !dbg !3339

bb99:                                             ; preds = %bb98
  %_200 = load ptr, ptr %r, align 8, !dbg !3340, !noundef !24
  %_201 = load i64, ptr %block_r, align 8, !dbg !3341, !noundef !24
  store ptr %_200, ptr %self.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i74, metadata !2152, metadata !DIExpression()), !dbg !3342
  store i64 %_201, ptr %count.dbg.spill.i73, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i73, metadata !2155, metadata !DIExpression()), !dbg !3344
  store i64 %_201, ptr %self.dbg.spill.i.i72, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i72, metadata !2159, metadata !DIExpression()), !dbg !3345
  store i64 0, ptr %self.dbg.spill.i1.i71, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i71, metadata !2168, metadata !DIExpression()), !dbg !3347
  store i64 %_201, ptr %rhs.dbg.spill.i.i70, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i70, metadata !2173, metadata !DIExpression()), !dbg !3349
  %160 = sub i64 0, %_201, !dbg !3350
  store ptr %_200, ptr %self.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i115, metadata !301, metadata !DIExpression()), !dbg !3351
  store i64 %160, ptr %count.dbg.spill.i114, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i114, metadata !306, metadata !DIExpression()), !dbg !3353
  %161 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_200, i64 %160, !dbg !3354
  store ptr %161, ptr %24, align 8, !dbg !3354
  %_3.i116 = load ptr, ptr %24, align 8, !dbg !3354, !noundef !24
  store ptr %_3.i116, ptr %r, align 8, !dbg !3355
  br label %bb101, !dbg !3356

bb102:                                            ; preds = %bb101
  %_203 = load ptr, ptr %start_l, align 8, !dbg !3357, !noundef !24
  %_204 = load ptr, ptr %end_l, align 8, !dbg !3358, !noundef !24
  %_202 = icmp ult ptr %_203, %_204, !dbg !3357
  br i1 %_202, label %bb103, label %bb104, !dbg !3357

bb104:                                            ; preds = %bb102
  %_237 = load ptr, ptr %start_r, align 8, !dbg !3359, !noundef !24
  %_238 = load ptr, ptr %end_r, align 8, !dbg !3360, !noundef !24
  %_236 = icmp ult ptr %_237, %_238, !dbg !3359
  br i1 %_236, label %bb117, label %bb118, !dbg !3359

bb103:                                            ; preds = %bb102
  %_208 = load ptr, ptr %l, align 8, !dbg !3361, !noundef !24
  %_209 = load ptr, ptr %r, align 8, !dbg !3362, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %162 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E(ptr %_208, ptr %_209) #10, !dbg !3363
  store i64 %162, ptr %_207, align 8, !dbg !3363
  store ptr %_207, ptr %_205, align 8, !dbg !3364
  %163 = getelementptr inbounds { ptr, ptr }, ptr %_205, i32 0, i32 1, !dbg !3364
  store ptr %block_l, ptr %163, align 8, !dbg !3364
  %left_val = load ptr, ptr %_205, align 8, !dbg !3364, !nonnull !24, !align !504, !noundef !24
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !3364
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !2911, metadata !DIExpression()), !dbg !3365
  %164 = getelementptr inbounds { ptr, ptr }, ptr %_205, i32 0, i32 1, !dbg !3364
  %right_val = load ptr, ptr %164, align 8, !dbg !3364, !nonnull !24, !align !504, !noundef !24
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !3364
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !2916, metadata !DIExpression()), !dbg !3365
  %_215 = load i64, ptr %left_val, align 8, !dbg !3365, !noundef !24
  %_216 = load i64, ptr %right_val, align 8, !dbg !3365, !noundef !24
  %_214 = icmp eq i64 %_215, %_216, !dbg !3365
  %_213 = xor i1 %_214, true, !dbg !3365
  br i1 %_213, label %bb106, label %bb107, !dbg !3365

bb107:                                            ; preds = %bb108, %bb103
  %_221 = load ptr, ptr %start_l, align 8, !dbg !3366, !noundef !24
  %_222 = load ptr, ptr %end_l, align 8, !dbg !3367, !noundef !24
  %_220 = icmp ult ptr %_221, %_222, !dbg !3366
  br i1 %_220, label %bb108, label %bb115, !dbg !3366

bb106:                                            ; preds = %bb103
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !3365
  call void @llvm.dbg.declare(metadata ptr %kind.dbg.spill, metadata !2917, metadata !DIExpression()), !dbg !3368
  %165 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_219, i32 0, i32 1, !dbg !3368
  store ptr null, ptr %165, align 8, !dbg !3368
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hc66d02a845f62d29E(i8 0, ptr align 8 %left_val, ptr align 8 %right_val, ptr %_219, ptr align 8 @alloc456) #11, !dbg !3368
  unreachable, !dbg !3368

bb115:                                            ; preds = %bb107
  store ptr %v.0, ptr %self.dbg.spill.i182, align 8
  %166 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i182, i32 0, i32 1
  store i64 %v.1, ptr %166, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i182, metadata !2010, metadata !DIExpression()), !dbg !3369
  %_235 = load ptr, ptr %r, align 8, !dbg !3371, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %167 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E(ptr %v.0, ptr %_235) #10, !dbg !3372
  store i64 %167, ptr %32, align 8, !dbg !3372
  br label %bb132, !dbg !3372

bb108:                                            ; preds = %bb107
  %_224 = load ptr, ptr %end_l, align 8, !dbg !3373, !noundef !24
  store ptr %_224, ptr %self.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i54, metadata !3374, metadata !DIExpression()), !dbg !3378
  store i64 1, ptr %count.dbg.spill.i53, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i53, metadata !3377, metadata !DIExpression()), !dbg !3380
  store i64 1, ptr %self.dbg.spill.i.i52, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i52, metadata !2159, metadata !DIExpression()), !dbg !3381
  store i64 0, ptr %self.dbg.spill.i1.i51, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i51, metadata !2168, metadata !DIExpression()), !dbg !3383
  store i64 1, ptr %rhs.dbg.spill.i.i50, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i50, metadata !2173, metadata !DIExpression()), !dbg !3385
  store ptr %_224, ptr %self.dbg.spill.i154, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i154, metadata !3089, metadata !DIExpression()), !dbg !3386
  store i64 -1, ptr %count.dbg.spill.i153, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i153, metadata !3094, metadata !DIExpression()), !dbg !3388
  %168 = getelementptr inbounds i8, ptr %_224, i64 -1, !dbg !3389
  store ptr %168, ptr %11, align 8, !dbg !3389
  %_3.i155 = load ptr, ptr %11, align 8, !dbg !3389, !noundef !24
  store ptr %_3.i155, ptr %end_l, align 8, !dbg !3390
  %_227 = load ptr, ptr %l, align 8, !dbg !3391, !noundef !24
  %169 = load ptr, ptr %end_l, align 8, !dbg !3392, !noundef !24
  %_229 = load i8, ptr %169, align 1, !dbg !3392, !noundef !24
  store i8 %_229, ptr %small.dbg.spill.i186, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i186, metadata !3160, metadata !DIExpression()), !dbg !3393
  %170 = zext i8 %_229 to i64, !dbg !3395
  store ptr %_227, ptr %self.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i21, metadata !291, metadata !DIExpression()), !dbg !3396
  store i64 %170, ptr %count.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i20, metadata !297, metadata !DIExpression()), !dbg !3398
  store ptr %_227, ptr %self.dbg.spill.i148, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i148, metadata !301, metadata !DIExpression()), !dbg !3399
  store i64 %170, ptr %count.dbg.spill.i147, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i147, metadata !306, metadata !DIExpression()), !dbg !3401
  %171 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_227, i64 %170, !dbg !3402
  store ptr %171, ptr %13, align 8, !dbg !3402
  %_3.i149 = load ptr, ptr %13, align 8, !dbg !3402, !noundef !24
  %_231 = load ptr, ptr %r, align 8, !dbg !3403, !noundef !24
  store ptr %_231, ptr %self.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i69, metadata !2152, metadata !DIExpression()), !dbg !3404
  store i64 1, ptr %count.dbg.spill.i68, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i68, metadata !2155, metadata !DIExpression()), !dbg !3406
  store i64 1, ptr %self.dbg.spill.i.i67, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i67, metadata !2159, metadata !DIExpression()), !dbg !3407
  store i64 0, ptr %self.dbg.spill.i1.i66, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i66, metadata !2168, metadata !DIExpression()), !dbg !3409
  store i64 1, ptr %rhs.dbg.spill.i.i65, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i65, metadata !2173, metadata !DIExpression()), !dbg !3411
  store ptr %_231, ptr %self.dbg.spill.i118, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i118, metadata !301, metadata !DIExpression()), !dbg !3412
  store i64 -1, ptr %count.dbg.spill.i117, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i117, metadata !306, metadata !DIExpression()), !dbg !3414
  %172 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_231, i64 -1, !dbg !3415
  store ptr %172, ptr %23, align 8, !dbg !3415
  %_3.i119 = load ptr, ptr %23, align 8, !dbg !3415, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h59951b18b0ba78c3E(ptr %_3.i149, ptr %_3.i119) #10, !dbg !3416
  %_233 = load ptr, ptr %r, align 8, !dbg !3417, !noundef !24
  store ptr %_233, ptr %self.dbg.spill.i64, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i64, metadata !2152, metadata !DIExpression()), !dbg !3418
  store i64 1, ptr %count.dbg.spill.i63, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i63, metadata !2155, metadata !DIExpression()), !dbg !3420
  store i64 1, ptr %self.dbg.spill.i.i62, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i62, metadata !2159, metadata !DIExpression()), !dbg !3421
  store i64 0, ptr %self.dbg.spill.i1.i61, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i61, metadata !2168, metadata !DIExpression()), !dbg !3423
  store i64 1, ptr %rhs.dbg.spill.i.i60, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i60, metadata !2173, metadata !DIExpression()), !dbg !3425
  store ptr %_233, ptr %self.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i121, metadata !301, metadata !DIExpression()), !dbg !3426
  store i64 -1, ptr %count.dbg.spill.i120, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i120, metadata !306, metadata !DIExpression()), !dbg !3428
  %173 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_233, i64 -1, !dbg !3429
  store ptr %173, ptr %22, align 8, !dbg !3429
  %_3.i122 = load ptr, ptr %22, align 8, !dbg !3429, !noundef !24
  store ptr %_3.i122, ptr %r, align 8, !dbg !3430
  br label %bb107, !dbg !3431

bb132:                                            ; preds = %bb118, %bb129, %bb115
  %174 = load i64, ptr %32, align 8, !dbg !3432, !noundef !24
  ret i64 %174, !dbg !3432

bb118:                                            ; preds = %bb104
  store ptr %v.0, ptr %self.dbg.spill.i180, align 8
  %175 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i180, i32 0, i32 1
  store i64 %v.1, ptr %175, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i180, metadata !2010, metadata !DIExpression()), !dbg !3433
  %_272 = load ptr, ptr %l, align 8, !dbg !3435, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %176 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E(ptr %v.0, ptr %_272) #10, !dbg !3436
  store i64 %176, ptr %32, align 8, !dbg !3436
  br label %bb132, !dbg !3436

bb117:                                            ; preds = %bb104
  %_242 = load ptr, ptr %l, align 8, !dbg !3437, !noundef !24
  %_243 = load ptr, ptr %r, align 8, !dbg !3438, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %177 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E(ptr %_242, ptr %_243) #10, !dbg !3439
  store i64 %177, ptr %_241, align 8, !dbg !3439
  store ptr %_241, ptr %_239, align 8, !dbg !3440
  %178 = getelementptr inbounds { ptr, ptr }, ptr %_239, i32 0, i32 1, !dbg !3440
  store ptr %block_r, ptr %178, align 8, !dbg !3440
  %left_val12 = load ptr, ptr %_239, align 8, !dbg !3440, !nonnull !24, !align !504, !noundef !24
  store ptr %left_val12, ptr %left_val.dbg.spill13, align 8, !dbg !3440
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill13, metadata !2920, metadata !DIExpression()), !dbg !3441
  %179 = getelementptr inbounds { ptr, ptr }, ptr %_239, i32 0, i32 1, !dbg !3440
  %right_val14 = load ptr, ptr %179, align 8, !dbg !3440, !nonnull !24, !align !504, !noundef !24
  store ptr %right_val14, ptr %right_val.dbg.spill15, align 8, !dbg !3440
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill15, metadata !2923, metadata !DIExpression()), !dbg !3441
  %_249 = load i64, ptr %left_val12, align 8, !dbg !3441, !noundef !24
  %_250 = load i64, ptr %right_val14, align 8, !dbg !3441, !noundef !24
  %_248 = icmp eq i64 %_249, %_250, !dbg !3441
  %_247 = xor i1 %_248, true, !dbg !3441
  br i1 %_247, label %bb120, label %bb121, !dbg !3441

bb121:                                            ; preds = %bb125, %bb117
  %_255 = load ptr, ptr %start_r, align 8, !dbg !3442, !noundef !24
  %_256 = load ptr, ptr %end_r, align 8, !dbg !3443, !noundef !24
  %_254 = icmp ult ptr %_255, %_256, !dbg !3442
  br i1 %_254, label %bb122, label %bb129, !dbg !3442

bb120:                                            ; preds = %bb117
  store i8 0, ptr %kind.dbg.spill16, align 1, !dbg !3441
  call void @llvm.dbg.declare(metadata ptr %kind.dbg.spill16, metadata !2924, metadata !DIExpression()), !dbg !3444
  %180 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_253, i32 0, i32 1, !dbg !3444
  store ptr null, ptr %180, align 8, !dbg !3444
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hc66d02a845f62d29E(i8 0, ptr align 8 %left_val12, ptr align 8 %right_val14, ptr %_253, ptr align 8 @alloc458) #11, !dbg !3444
  unreachable, !dbg !3444

bb129:                                            ; preds = %bb121
  store ptr %v.0, ptr %self.dbg.spill.i181, align 8
  %181 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i181, i32 0, i32 1
  store i64 %v.1, ptr %181, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i181, metadata !2010, metadata !DIExpression()), !dbg !3445
  %_270 = load ptr, ptr %l, align 8, !dbg !3447, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %182 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E(ptr %v.0, ptr %_270) #10, !dbg !3448
  store i64 %182, ptr %32, align 8, !dbg !3448
  br label %bb132, !dbg !3448

bb122:                                            ; preds = %bb121
  %_258 = load ptr, ptr %end_r, align 8, !dbg !3449, !noundef !24
  store ptr %_258, ptr %self.dbg.spill.i49, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i49, metadata !3374, metadata !DIExpression()), !dbg !3450
  store i64 1, ptr %count.dbg.spill.i48, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i48, metadata !3377, metadata !DIExpression()), !dbg !3452
  store i64 1, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2159, metadata !DIExpression()), !dbg !3453
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2168, metadata !DIExpression()), !dbg !3455
  store i64 1, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2173, metadata !DIExpression()), !dbg !3457
  store ptr %_258, ptr %self.dbg.spill.i157, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i157, metadata !3089, metadata !DIExpression()), !dbg !3458
  store i64 -1, ptr %count.dbg.spill.i156, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i156, metadata !3094, metadata !DIExpression()), !dbg !3460
  %183 = getelementptr inbounds i8, ptr %_258, i64 -1, !dbg !3461
  store ptr %183, ptr %10, align 8, !dbg !3461
  %_3.i158 = load ptr, ptr %10, align 8, !dbg !3461, !noundef !24
  store ptr %_3.i158, ptr %end_r, align 8, !dbg !3462
  %_260 = load ptr, ptr %l, align 8, !dbg !3463, !noundef !24
  %_262 = load ptr, ptr %r, align 8, !dbg !3464, !noundef !24
  %184 = load ptr, ptr %end_r, align 8, !dbg !3465, !noundef !24
  %_265 = load i8, ptr %184, align 1, !dbg !3465, !noundef !24
  store i8 %_265, ptr %small.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i, metadata !3160, metadata !DIExpression()), !dbg !3466
  %185 = zext i8 %_265 to i64, !dbg !3468
  %186 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %185, i64 1), !dbg !3469
  %_266.0 = extractvalue { i64, i1 } %186, 0, !dbg !3469
  %_266.1 = extractvalue { i64, i1 } %186, 1, !dbg !3469
  %187 = call i1 @llvm.expect.i1(i1 %_266.1, i1 false), !dbg !3469
  br i1 %187, label %panic17, label %bb125, !dbg !3469

bb125:                                            ; preds = %bb122
  store ptr %_262, ptr %self.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i59, metadata !2152, metadata !DIExpression()), !dbg !3470
  store i64 %_266.0, ptr %count.dbg.spill.i58, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i58, metadata !2155, metadata !DIExpression()), !dbg !3472
  store i64 %_266.0, ptr %self.dbg.spill.i.i57, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i57, metadata !2159, metadata !DIExpression()), !dbg !3473
  store i64 0, ptr %self.dbg.spill.i1.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i56, metadata !2168, metadata !DIExpression()), !dbg !3475
  store i64 %_266.0, ptr %rhs.dbg.spill.i.i55, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i55, metadata !2173, metadata !DIExpression()), !dbg !3477
  %188 = sub i64 0, %_266.0, !dbg !3478
  store ptr %_262, ptr %self.dbg.spill.i124, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i124, metadata !301, metadata !DIExpression()), !dbg !3479
  store i64 %188, ptr %count.dbg.spill.i123, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i123, metadata !306, metadata !DIExpression()), !dbg !3481
  %189 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_262, i64 %188, !dbg !3482
  store ptr %189, ptr %21, align 8, !dbg !3482
  %_3.i125 = load ptr, ptr %21, align 8, !dbg !3482, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h59951b18b0ba78c3E(ptr %_260, ptr %_3.i125) #10, !dbg !3483
  %_268 = load ptr, ptr %l, align 8, !dbg !3484, !noundef !24
  store ptr %_268, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !291, metadata !DIExpression()), !dbg !3485
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !297, metadata !DIExpression()), !dbg !3487
  store ptr %_268, ptr %self.dbg.spill.i151, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i151, metadata !301, metadata !DIExpression()), !dbg !3488
  store i64 1, ptr %count.dbg.spill.i150, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i150, metadata !306, metadata !DIExpression()), !dbg !3490
  %190 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_268, i64 1, !dbg !3491
  store ptr %190, ptr %12, align 8, !dbg !3491
  %_3.i152 = load ptr, ptr %12, align 8, !dbg !3491, !noundef !24
  store ptr %_3.i152, ptr %l, align 8, !dbg !3492
  br label %bb121, !dbg !3493

panic17:                                          ; preds = %bb122
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc460) #11, !dbg !3469
  unreachable, !dbg !3469
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3494 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3499, metadata !DIExpression()), !dbg !3501
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3500, metadata !DIExpression()), !dbg !3502
  %_4 = icmp ugt i64 24, 0, !dbg !3503
  %_3 = xor i1 %_4, true, !dbg !3504
  br i1 %_3, label %bb2, label %bb3, !dbg !3504

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3505, metadata !DIExpression()), !dbg !3510
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1270, metadata !DIExpression()), !dbg !3512
  store ptr %r, ptr %0, align 8, !dbg !3514
  %2 = load i64, ptr %0, align 8, !dbg !3514, !noundef !24
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3505, metadata !DIExpression()), !dbg !3515
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1270, metadata !DIExpression()), !dbg !3517
  store ptr %l, ptr %1, align 8, !dbg !3519
  %3 = load i64, ptr %1, align 8, !dbg !3519, !noundef !24
  %_10.0 = sub i64 %2, %3, !dbg !3520
  %_10.1 = icmp ult i64 %2, %3, !dbg !3520
  %4 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3520
  br i1 %4, label %panic, label %bb6, !dbg !3520

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc466, i64 41, ptr align 8 @alloc463) #11, !dbg !3504
  unreachable, !dbg !3504

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 24, 0, !dbg !3520
  %5 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3520
  br i1 %5, label %panic1, label %bb8, !dbg !3520

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc465) #11, !dbg !3520
  unreachable, !dbg !3520

bb8:                                              ; preds = %bb6
  %6 = udiv i64 %_10.0, 24, !dbg !3520
  ret i64 %6, !dbg !3521

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc465) #11, !dbg !3520
  unreachable, !dbg !3520
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17hf99af2bf0ac83c36E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3522 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3526, metadata !DIExpression()), !dbg !3528
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3527, metadata !DIExpression()), !dbg !3529
  %_4 = icmp ugt i64 1, 0, !dbg !3530
  %_3 = xor i1 %_4, true, !dbg !3531
  br i1 %_3, label %bb2, label %bb3, !dbg !3531

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !1648, metadata !DIExpression()), !dbg !3532
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1657, metadata !DIExpression()), !dbg !3534
  store ptr %r, ptr %0, align 8, !dbg !3536
  %2 = load i64, ptr %0, align 8, !dbg !3536, !noundef !24
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1648, metadata !DIExpression()), !dbg !3537
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1657, metadata !DIExpression()), !dbg !3539
  store ptr %l, ptr %1, align 8, !dbg !3541
  %3 = load i64, ptr %1, align 8, !dbg !3541, !noundef !24
  %_10.0 = sub i64 %2, %3, !dbg !3542
  %_10.1 = icmp ult i64 %2, %3, !dbg !3542
  %4 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3542
  br i1 %4, label %panic, label %bb6, !dbg !3542

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc466, i64 41, ptr align 8 @alloc463) #11, !dbg !3531
  unreachable, !dbg !3531

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 1, 0, !dbg !3542
  %5 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3542
  br i1 %5, label %panic1, label %bb8, !dbg !3542

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc465) #11, !dbg !3542
  unreachable, !dbg !3542

bb8:                                              ; preds = %bb6
  %6 = udiv i64 %_10.0, 1, !dbg !3542
  ret i64 %6, !dbg !3543

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc465) #11, !dbg !3542
  unreachable, !dbg !3542
}

; core::slice::sort::partial_insertion_sort
; Function Attrs: cold noredzone nounwind
define zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17hf9aa677a9fb85ed8E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #2 !dbg !3544 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_50 = alloca i64, align 8
  %_42 = alloca i64, align 8
  %_17 = alloca { ptr, ptr }, align 8
  %_12 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %i = alloca i64, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3548, metadata !DIExpression()), !dbg !3556
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3549, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.declare(metadata ptr %i, metadata !3552, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3554, metadata !DIExpression()), !dbg !3559
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3560
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3550, metadata !DIExpression()), !dbg !3561
  store i64 1, ptr %i, align 8, !dbg !3562
  store i64 0, ptr %_7, align 8, !dbg !3563
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3563
  store i64 5, ptr %3, align 8, !dbg !3563
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3563
  %5 = load i64, ptr %4, align 8, !dbg !3563, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3563
  %7 = load i64, ptr %6, align 8, !dbg !3563, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17haf2af0e98b3b8b4eE"(i64 %5, i64 %7) #10, !dbg !3563
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3563
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3563
  %9 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3563
  store i64 %_6.0, ptr %9, align 8, !dbg !3563
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3563
  store i64 %_6.1, ptr %10, align 8, !dbg !3563
  br label %bb2, !dbg !3564

bb2:                                              ; preds = %bb25, %bb21, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %11 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hac6ae5e1fdafd993E"(ptr align 8 %iter) #10, !dbg !3559
  store { i64, i64 } %11, ptr %_9, align 8, !dbg !3559
  %_11 = load i64, ptr %_9, align 8, !dbg !3559, !range !1053, !noundef !24
  %12 = icmp eq i64 %_11, 0, !dbg !3559
  br i1 %12, label %bb5, label %bb6, !dbg !3559

bb5:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !3565
  br label %bb28, !dbg !3566

bb6:                                              ; preds = %bb15, %bb2
  %_14 = load i64, ptr %i, align 8, !dbg !3567, !noundef !24
  %_13 = icmp ult i64 %_14, %v.1, !dbg !3567
  br i1 %_13, label %bb8, label %bb7, !dbg !3567

bb4:                                              ; No predecessors!
  unreachable, !dbg !3559

bb7:                                              ; preds = %bb6
  store i8 0, ptr %_12, align 1, !dbg !3567
  br label %bb9, !dbg !3567

bb8:                                              ; preds = %bb6
  %_21 = load i64, ptr %i, align 8, !dbg !3568, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_19 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %v.0, i64 %v.1, i64 %_21) #10, !dbg !3569
  %_26 = load i64, ptr %i, align 8, !dbg !3570, !noundef !24
  %_27.0 = sub i64 %_26, 1, !dbg !3570
  %_27.1 = icmp ult i64 %_26, 1, !dbg !3570
  %13 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !3570
  br i1 %13, label %panic, label %bb11, !dbg !3570

bb11:                                             ; preds = %bb8
; call core::slice::<impl [T]>::get_unchecked
  %_23 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %v.0, i64 %v.1, i64 %_27.0) #10, !dbg !3571
  store ptr %_19, ptr %_17, align 8, !dbg !3572
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3572
  store ptr %_23, ptr %14, align 8, !dbg !3572
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 0, !dbg !3572
  %16 = load ptr, ptr %15, align 8, !dbg !3572, !nonnull !24, !align !504, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3572
  %18 = load ptr, ptr %17, align 8, !dbg !3572, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_16 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3572
  %_15 = xor i1 %_16, true, !dbg !3573
  %19 = zext i1 %_15 to i8, !dbg !3567
  store i8 %19, ptr %_12, align 1, !dbg !3567
  br label %bb9, !dbg !3567

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc468) #11, !dbg !3570
  unreachable, !dbg !3570

bb9:                                              ; preds = %bb7, %bb11
  %20 = load i8, ptr %_12, align 1, !dbg !3567, !range !210, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3567
  br i1 %21, label %bb14, label %bb16, !dbg !3567

bb16:                                             ; preds = %bb9
  %_30 = load i64, ptr %i, align 8, !dbg !3574, !noundef !24
  %_29 = icmp eq i64 %_30, %v.1, !dbg !3574
  br i1 %_29, label %bb17, label %bb18, !dbg !3574

bb14:                                             ; preds = %bb9
  %22 = load i64, ptr %i, align 8, !dbg !3575, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !3575
  %_28.0 = extractvalue { i64, i1 } %23, 0, !dbg !3575
  %_28.1 = extractvalue { i64, i1 } %23, 1, !dbg !3575
  %24 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !3575
  br i1 %24, label %panic1, label %bb15, !dbg !3575

bb15:                                             ; preds = %bb14
  store i64 %_28.0, ptr %i, align 8, !dbg !3575
  br label %bb6, !dbg !3576

panic1:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc470) #11, !dbg !3575
  unreachable, !dbg !3575

bb18:                                             ; preds = %bb16
  %_31 = icmp ult i64 %v.1, 50, !dbg !3577
  br i1 %_31, label %bb19, label %bb20, !dbg !3577

bb17:                                             ; preds = %bb16
  store i8 1, ptr %0, align 1, !dbg !3578
  br label %bb28, !dbg !3579

bb28:                                             ; preds = %bb5, %bb19, %bb17
  %25 = load i8, ptr %0, align 1, !dbg !3566, !range !210, !noundef !24
  %26 = trunc i8 %25 to i1, !dbg !3566
  ret i1 %26, !dbg !3566

bb20:                                             ; preds = %bb18
  %_34 = load i64, ptr %i, align 8, !dbg !3582, !noundef !24
  %_35.0 = sub i64 %_34, 1, !dbg !3582
  %_35.1 = icmp ult i64 %_34, 1, !dbg !3582
  %27 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !3582
  br i1 %27, label %panic2, label %bb21, !dbg !3582

bb19:                                             ; preds = %bb18
  store i8 0, ptr %0, align 1, !dbg !3583
  br label %bb28, !dbg !3579

bb21:                                             ; preds = %bb20
  %_36 = load i64, ptr %i, align 8, !dbg !3584, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17heada400949a61ab0E"(ptr align 8 %v.0, i64 %v.1, i64 %_35.0, i64 %_36, ptr align 8 @alloc474) #10, !dbg !3585
  %_38 = load i64, ptr %i, align 8, !dbg !3586, !noundef !24
  %_37 = icmp uge i64 %_38, 2, !dbg !3586
  br i1 %_37, label %bb23, label %bb2, !dbg !3586

panic2:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc472) #11, !dbg !3582
  unreachable, !dbg !3582

bb23:                                             ; preds = %bb21
  %_43 = load i64, ptr %i, align 8, !dbg !3587, !noundef !24
  store i64 %_43, ptr %_42, align 8, !dbg !3588
  %28 = load i64, ptr %_42, align 8, !dbg !3589, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %29 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h99932268dd4a9ac3E"(ptr align 8 %v.0, i64 %v.1, i64 %28, ptr align 8 @alloc476) #10, !dbg !3589
  %_41.0 = extractvalue { ptr, i64 } %29, 0, !dbg !3589
  %_41.1 = extractvalue { ptr, i64 } %29, 1, !dbg !3589
  %_45 = load i64, ptr %i, align 8, !dbg !3590, !noundef !24
  %_46.0 = sub i64 %_45, 1, !dbg !3590
  %_46.1 = icmp ult i64 %_45, 1, !dbg !3590
  %30 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3590
  br i1 %30, label %panic3, label %bb25, !dbg !3590

bb25:                                             ; preds = %bb23
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17he2386a719bb72b7bE(ptr align 8 %_41.0, i64 %_41.1, i64 %_46.0, ptr align 8 %is_less) #10, !dbg !3591
  %_51 = load i64, ptr %i, align 8, !dbg !3592, !noundef !24
  store i64 %_51, ptr %_50, align 8, !dbg !3593
  %31 = load i64, ptr %_50, align 8, !dbg !3594, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %32 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h99932268dd4a9ac3E"(ptr align 8 %v.0, i64 %v.1, i64 %31, ptr align 8 @alloc480) #10, !dbg !3594
  %_49.0 = extractvalue { ptr, i64 } %32, 0, !dbg !3594
  %_49.1 = extractvalue { ptr, i64 } %32, 1, !dbg !3594
; call core::slice::sort::insertion_sort_shift_right
  call void @_ZN4core5slice4sort26insertion_sort_shift_right17h315ae64e1829bebdE(ptr align 8 %_49.0, i64 %_49.1, i64 1, ptr align 8 %is_less) #10, !dbg !3595
  br label %bb2, !dbg !3595

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc478) #11, !dbg !3590
  unreachable, !dbg !3590
}

; core::slice::sort::insertion_sort_shift_left
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort25insertion_sort_shift_left17he2386a719bb72b7bE(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3596 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_20 = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3600, metadata !DIExpression()), !dbg !3609
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3601, metadata !DIExpression()), !dbg !3610
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3602, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3605, metadata !DIExpression()), !dbg !3612
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3613
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3603, metadata !DIExpression()), !dbg !3614
  %2 = icmp eq i64 %offset, 0, !dbg !3615
  br i1 %2, label %bb1, label %bb2, !dbg !3615

bb1:                                              ; preds = %start
  store i8 0, ptr %_7, align 1, !dbg !3615
  br label %bb3, !dbg !3615

bb2:                                              ; preds = %start
  %_8 = icmp ule i64 %offset, %v.1, !dbg !3616
  %3 = zext i1 %_8 to i8, !dbg !3615
  store i8 %3, ptr %_7, align 1, !dbg !3615
  br label %bb3, !dbg !3615

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, ptr %_7, align 1, !dbg !3617, !range !210, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3617
  %_6 = xor i1 %5, true, !dbg !3617
  br i1 %_6, label %bb4, label %bb5, !dbg !3617

bb5:                                              ; preds = %bb3
  store i64 %offset, ptr %_11, align 8, !dbg !3618
  %6 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3618
  store i64 %v.1, ptr %6, align 8, !dbg !3618
  %7 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 0, !dbg !3618
  %8 = load i64, ptr %7, align 8, !dbg !3618, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3618
  %10 = load i64, ptr %9, align 8, !dbg !3618, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %11 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17haf2af0e98b3b8b4eE"(i64 %8, i64 %10) #10, !dbg !3618
  %_10.0 = extractvalue { i64, i64 } %11, 0, !dbg !3618
  %_10.1 = extractvalue { i64, i64 } %11, 1, !dbg !3618
  %12 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3618
  store i64 %_10.0, ptr %12, align 8, !dbg !3618
  %13 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3618
  store i64 %_10.1, ptr %13, align 8, !dbg !3618
  br label %bb7, !dbg !3619

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc481, i64 46, ptr align 8 @alloc483) #11, !dbg !3617
  unreachable, !dbg !3617

bb7:                                              ; preds = %bb9, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %14 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hac6ae5e1fdafd993E"(ptr align 8 %iter) #10, !dbg !3612
  store { i64, i64 } %14, ptr %_13, align 8, !dbg !3612
  %_15 = load i64, ptr %_13, align 8, !dbg !3612, !range !1053, !noundef !24
  %15 = icmp eq i64 %_15, 0, !dbg !3612
  br i1 %15, label %bb11, label %bb9, !dbg !3612

bb11:                                             ; preds = %bb7
  ret void, !dbg !3620

bb9:                                              ; preds = %bb7
  %16 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3621
  %i = load i64, ptr %16, align 8, !dbg !3621, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3621
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3607, metadata !DIExpression()), !dbg !3622
  store i64 %i, ptr %_20, align 8, !dbg !3623
  %17 = load i64, ptr %_20, align 8, !dbg !3624, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %18 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h8b4c6736f697ea0fE"(ptr align 8 %v.0, i64 %v.1, i64 %17, ptr align 8 @alloc485) #10, !dbg !3624
  %_19.0 = extractvalue { ptr, i64 } %18, 0, !dbg !3624
  %_19.1 = extractvalue { ptr, i64 } %18, 1, !dbg !3624
; call core::slice::sort::insert_tail
  call void @_ZN4core5slice4sort11insert_tail17h64cc23de55da941bE(ptr align 8 %_19.0, i64 %_19.1, ptr align 8 %is_less) #10, !dbg !3625
  br label %bb7, !dbg !3625

bb10:                                             ; No predecessors!
  unreachable, !dbg !3612
}

; core::slice::sort::insertion_sort_shift_right
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort26insertion_sort_shift_right17h315ae64e1829bebdE(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3626 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3628, metadata !DIExpression()), !dbg !3637
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3629, metadata !DIExpression()), !dbg !3638
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3630, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3633, metadata !DIExpression()), !dbg !3640
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3641
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3631, metadata !DIExpression()), !dbg !3642
  %2 = icmp eq i64 %offset, 0, !dbg !3643
  br i1 %2, label %bb4, label %bb5, !dbg !3643

bb4:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !3643
  br label %bb6, !dbg !3643

bb5:                                              ; preds = %start
  %_9 = icmp ule i64 %offset, %v.1, !dbg !3644
  %3 = zext i1 %_9 to i8, !dbg !3643
  store i8 %3, ptr %_8, align 1, !dbg !3643
  br label %bb6, !dbg !3643

bb6:                                              ; preds = %bb4, %bb5
  %4 = load i8, ptr %_8, align 1, !dbg !3643, !range !210, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3643
  br i1 %5, label %bb2, label %bb1, !dbg !3643

bb1:                                              ; preds = %bb6
  store i8 0, ptr %_7, align 1, !dbg !3643
  br label %bb3, !dbg !3643

bb2:                                              ; preds = %bb6
  %_10 = icmp uge i64 %v.1, 2, !dbg !3645
  %6 = zext i1 %_10 to i8, !dbg !3643
  store i8 %6, ptr %_7, align 1, !dbg !3643
  br label %bb3, !dbg !3643

bb3:                                              ; preds = %bb1, %bb2
  %7 = load i8, ptr %_7, align 1, !dbg !3646, !range !210, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !3646
  %_6 = xor i1 %8, true, !dbg !3646
  br i1 %_6, label %bb7, label %bb8, !dbg !3646

bb8:                                              ; preds = %bb3
  store i64 0, ptr %_14, align 8, !dbg !3647
  %9 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3647
  store i64 %offset, ptr %9, align 8, !dbg !3647
  %10 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !3647
  %11 = load i64, ptr %10, align 8, !dbg !3647, !noundef !24
  %12 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3647
  %13 = load i64, ptr %12, align 8, !dbg !3647, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %14 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h3e38ac3e9c2c377aE(i64 %11, i64 %13) #10, !dbg !3647
  %_13.0 = extractvalue { i64, i64 } %14, 0, !dbg !3647
  %_13.1 = extractvalue { i64, i64 } %14, 1, !dbg !3647
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %15 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h58a426f071ab13a9E"(i64 %_13.0, i64 %_13.1) #10, !dbg !3647
  %_12.0 = extractvalue { i64, i64 } %15, 0, !dbg !3647
  %_12.1 = extractvalue { i64, i64 } %15, 1, !dbg !3647
  %16 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3647
  store i64 %_12.0, ptr %16, align 8, !dbg !3647
  %17 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3647
  store i64 %_12.1, ptr %17, align 8, !dbg !3647
  br label %bb11, !dbg !3648

bb7:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc486, i64 58, ptr align 8 @alloc488) #11, !dbg !3646
  unreachable, !dbg !3646

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %18 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h26fee8b0705b7407E"(ptr align 8 %iter) #10, !dbg !3640
  store { i64, i64 } %18, ptr %_16, align 8, !dbg !3640
  %_18 = load i64, ptr %_16, align 8, !dbg !3640, !range !1053, !noundef !24
  %19 = icmp eq i64 %_18, 0, !dbg !3640
  br i1 %19, label %bb15, label %bb13, !dbg !3640

bb15:                                             ; preds = %bb11
  ret void, !dbg !3649

bb13:                                             ; preds = %bb11
  %20 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !3650
  %i = load i64, ptr %20, align 8, !dbg !3650, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3650
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3635, metadata !DIExpression()), !dbg !3651
  store i64 %i, ptr %_23, align 8, !dbg !3652
  %21 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3652
  store i64 %v.1, ptr %21, align 8, !dbg !3652
  %22 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !3653
  %23 = load i64, ptr %22, align 8, !dbg !3653, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3653
  %25 = load i64, ptr %24, align 8, !dbg !3653, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %26 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h817a1d02df95443aE"(ptr align 8 %v.0, i64 %v.1, i64 %23, i64 %25, ptr align 8 @alloc490) #10, !dbg !3653
  %_22.0 = extractvalue { ptr, i64 } %26, 0, !dbg !3653
  %_22.1 = extractvalue { ptr, i64 } %26, 1, !dbg !3653
; call core::slice::sort::insert_head
  call void @_ZN4core5slice4sort11insert_head17hc2222a955449100bE(ptr align 8 %_22.0, i64 %_22.1, ptr align 8 %is_less) #10, !dbg !3654
  br label %bb11, !dbg !3654

bb14:                                             ; No predecessors!
  unreachable, !dbg !3640
}

; core::slice::sort::recurse
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort7recurse17hf95552ee1c386416E(ptr align 8 %0, i64 %1, ptr align 8 %is_less, ptr align 8 %2, i32 %3) unnamed_addr #1 !dbg !3655 {
start:
  %pivot.dbg.spill9 = alloca ptr, align 8
  %right.dbg.spill7 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill4 = alloca { ptr, i64 }, align 8
  %right.dbg.spill = alloca { ptr, i64 }, align 8
  %left.dbg.spill = alloca { ptr, i64 }, align 8
  %was_p.dbg.spill = alloca i8, align 1
  %mid.dbg.spill2 = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %p.dbg.spill = alloca ptr, align 8
  %likely_sorted.dbg.spill = alloca i8, align 1
  %pivot.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %_75 = alloca ptr, align 8
  %_73 = alloca ptr, align 8
  %_60 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_56 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_44 = alloca i64, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_26 = alloca i8, align 1
  %_25 = alloca i8, align 1
  %was_partitioned = alloca i8, align 1
  %was_balanced = alloca i8, align 1
  %limit = alloca i32, align 4
  %pred = alloca ptr, align 8
  %v = alloca { ptr, i64 }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %pred, align 8
  store i32 %3, ptr %limit, align 4
  call void @llvm.dbg.declare(metadata ptr %v, metadata !3670, metadata !DIExpression()), !dbg !3698
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3671, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.declare(metadata ptr %pred, metadata !3672, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.declare(metadata ptr %limit, metadata !3673, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.declare(metadata ptr %was_balanced, metadata !3674, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.declare(metadata ptr %was_partitioned, metadata !3676, metadata !DIExpression()), !dbg !3703
  store i8 1, ptr %was_balanced, align 1, !dbg !3704
  store i8 1, ptr %was_partitioned, align 1, !dbg !3705
  br label %bb1, !dbg !3706

bb1:                                              ; preds = %bb36, %bb34, %bb24, %start
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3707
  %_8.0 = load ptr, ptr %6, align 8, !dbg !3707, !nonnull !24, !align !504, !noundef !24
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3707
  %_8.1 = load i64, ptr %7, align 8, !dbg !3707, !noundef !24
  store i64 %_8.1, ptr %len.dbg.spill, align 8, !dbg !3707
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3678, metadata !DIExpression()), !dbg !3708
  %_9 = icmp ule i64 %_8.1, 20, !dbg !3709
  br i1 %_9, label %bb2, label %bb4, !dbg !3709

bb4:                                              ; preds = %bb1
  %_13 = load i32, ptr %limit, align 4, !dbg !3710, !noundef !24
  %8 = icmp eq i32 %_13, 0, !dbg !3710
  br i1 %8, label %bb5, label %bb6, !dbg !3710

bb2:                                              ; preds = %bb1
  %_10 = icmp uge i64 %_8.1, 2, !dbg !3711
  br i1 %_10, label %bb3, label %bb38, !dbg !3711

bb38:                                             ; preds = %bb5, %bb18, %bb3, %bb2
  ret void, !dbg !3712

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3713
  %_12.0 = load ptr, ptr %9, align 8, !dbg !3713, !nonnull !24, !align !504, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3713
  %_12.1 = load i64, ptr %10, align 8, !dbg !3713, !noundef !24
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17he2386a719bb72b7bE(ptr align 8 %_12.0, i64 %_12.1, i64 1, ptr align 8 %is_less) #10, !dbg !3714
  br label %bb38, !dbg !3714

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3715
  %_15.0 = load ptr, ptr %11, align 8, !dbg !3715, !nonnull !24, !align !504, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3715
  %_15.1 = load i64, ptr %12, align 8, !dbg !3715, !noundef !24
; call core::slice::sort::heapsort
  call void @_ZN4core5slice4sort8heapsort17he1f0ec5af510337fE(ptr align 8 %_15.0, i64 %_15.1, ptr align 8 %is_less) #10, !dbg !3716
  br label %bb38, !dbg !3716

bb6:                                              ; preds = %bb4
  %13 = load i8, ptr %was_balanced, align 1, !dbg !3717, !range !210, !noundef !24
  %_17 = trunc i8 %13 to i1, !dbg !3717
  %_16 = xor i1 %_17, true, !dbg !3718
  br i1 %_16, label %bb7, label %bb10, !dbg !3718

bb10:                                             ; preds = %bb9, %bb6
  %14 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3719
  %_24.0 = load ptr, ptr %14, align 8, !dbg !3719, !nonnull !24, !align !504, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3719
  %_24.1 = load i64, ptr %15, align 8, !dbg !3719, !noundef !24
; call core::slice::sort::choose_pivot
  %16 = call { i64, i8 } @_ZN4core5slice4sort12choose_pivot17hf7f3a6a67751ea08E(ptr align 8 %_24.0, i64 %_24.1, ptr align 8 %is_less) #10, !dbg !3720
  %_23.0 = extractvalue { i64, i8 } %16, 0, !dbg !3720
  %17 = extractvalue { i64, i8 } %16, 1, !dbg !3720
  %_23.1 = trunc i8 %17 to i1, !dbg !3720
  store i64 %_23.0, ptr %pivot.dbg.spill, align 8, !dbg !3721
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3680, metadata !DIExpression()), !dbg !3722
  %18 = zext i1 %_23.1 to i8, !dbg !3723
  store i8 %18, ptr %likely_sorted.dbg.spill, align 1, !dbg !3723
  call void @llvm.dbg.declare(metadata ptr %likely_sorted.dbg.spill, metadata !3682, metadata !DIExpression()), !dbg !3724
  %19 = load i8, ptr %was_balanced, align 1, !dbg !3725, !range !210, !noundef !24
  %_27 = trunc i8 %19 to i1, !dbg !3725
  br i1 %_27, label %bb16, label %bb15, !dbg !3725

bb7:                                              ; preds = %bb6
  %20 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3726
  %_19.0 = load ptr, ptr %20, align 8, !dbg !3726, !nonnull !24, !align !504, !noundef !24
  %21 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3726
  %_19.1 = load i64, ptr %21, align 8, !dbg !3726, !noundef !24
; call core::slice::sort::break_patterns
  call void @_ZN4core5slice4sort14break_patterns17hcecbe5991799ddb2E(ptr align 8 %_19.0, i64 %_19.1) #10, !dbg !3727
  %22 = load i32, ptr %limit, align 4, !dbg !3728, !noundef !24
  %_20.0 = sub i32 %22, 1, !dbg !3728
  %_20.1 = icmp ult i32 %22, 1, !dbg !3728
  %23 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !3728
  br i1 %23, label %panic, label %bb9, !dbg !3728

bb9:                                              ; preds = %bb7
  store i32 %_20.0, ptr %limit, align 4, !dbg !3728
  br label %bb10, !dbg !3729

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc492) #11, !dbg !3728
  unreachable, !dbg !3728

bb15:                                             ; preds = %bb10
  store i8 0, ptr %_26, align 1, !dbg !3725
  br label %bb17, !dbg !3725

bb16:                                             ; preds = %bb10
  %24 = load i8, ptr %was_partitioned, align 1, !dbg !3730, !range !210, !noundef !24
  %_28 = trunc i8 %24 to i1, !dbg !3730
  %25 = zext i1 %_28 to i8, !dbg !3725
  store i8 %25, ptr %_26, align 1, !dbg !3725
  br label %bb17, !dbg !3725

bb17:                                             ; preds = %bb15, %bb16
  %26 = load i8, ptr %_26, align 1, !dbg !3725, !range !210, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !3725
  br i1 %27, label %bb13, label %bb12, !dbg !3725

bb12:                                             ; preds = %bb17
  store i8 0, ptr %_25, align 1, !dbg !3725
  br label %bb14, !dbg !3725

bb13:                                             ; preds = %bb17
  %28 = zext i1 %_23.1 to i8, !dbg !3725
  store i8 %28, ptr %_25, align 1, !dbg !3725
  br label %bb14, !dbg !3725

bb14:                                             ; preds = %bb12, %bb13
  %29 = load i8, ptr %_25, align 1, !dbg !3725, !range !210, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !3725
  br i1 %30, label %bb18, label %bb20, !dbg !3725

bb20:                                             ; preds = %bb18, %bb14
  %31 = load ptr, ptr %pred, align 8, !dbg !3731, !noundef !24
  %32 = ptrtoint ptr %31 to i64, !dbg !3731
  %33 = icmp eq i64 %32, 0, !dbg !3731
  %_31 = select i1 %33, i64 0, i64 1, !dbg !3731
  %34 = icmp eq i64 %_31, 1, !dbg !3731
  br i1 %34, label %bb21, label %bb27, !dbg !3731

bb18:                                             ; preds = %bb14
  %35 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3732
  %_30.0 = load ptr, ptr %35, align 8, !dbg !3732, !nonnull !24, !align !504, !noundef !24
  %36 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3732
  %_30.1 = load i64, ptr %36, align 8, !dbg !3732, !noundef !24
; call core::slice::sort::partial_insertion_sort
  %_29 = call zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17hf9aa677a9fb85ed8E(ptr align 8 %_30.0, i64 %_30.1, ptr align 8 %is_less) #10, !dbg !3733
  br i1 %_29, label %bb38, label %bb20, !dbg !3733

bb21:                                             ; preds = %bb20
  %p = load ptr, ptr %pred, align 8, !dbg !3734, !nonnull !24, !align !504, !noundef !24
  store ptr %p, ptr %p.dbg.spill, align 8, !dbg !3734
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !3683, metadata !DIExpression()), !dbg !3734
  %37 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3735
  %38 = load ptr, ptr %37, align 8, !dbg !3735, !nonnull !24, !align !504, !noundef !24
  %39 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3735
  %_37 = load i64, ptr %39, align 8, !dbg !3735, !noundef !24
  %_38 = icmp ult i64 %_23.0, %_37, !dbg !3735
  %40 = call i1 @llvm.expect.i1(i1 %_38, i1 true), !dbg !3735
  br i1 %40, label %bb22, label %panic1, !dbg !3735

bb27:                                             ; preds = %bb22, %bb20
  %41 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3736
  %_49.0 = load ptr, ptr %41, align 8, !dbg !3736, !nonnull !24, !align !504, !noundef !24
  %42 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3736
  %_49.1 = load i64, ptr %42, align 8, !dbg !3736, !noundef !24
; call core::slice::sort::partition
  %43 = call { i64, i8 } @_ZN4core5slice4sort9partition17h5991b453aacc2b5fE(ptr align 8 %_49.0, i64 %_49.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3737
  %_48.0 = extractvalue { i64, i8 } %43, 0, !dbg !3737
  %44 = extractvalue { i64, i8 } %43, 1, !dbg !3737
  %_48.1 = trunc i8 %44 to i1, !dbg !3737
  store i64 %_48.0, ptr %mid.dbg.spill2, align 8, !dbg !3738
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill2, metadata !3687, metadata !DIExpression()), !dbg !3739
  %45 = zext i1 %_48.1 to i8, !dbg !3740
  store i8 %45, ptr %was_p.dbg.spill, align 1, !dbg !3740
  call void @llvm.dbg.declare(metadata ptr %was_p.dbg.spill, metadata !3689, metadata !DIExpression()), !dbg !3741
  %_52.0 = sub i64 %_8.1, %_48.0, !dbg !3742
  %_52.1 = icmp ult i64 %_8.1, %_48.0, !dbg !3742
  %46 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !3742
  br i1 %46, label %panic3, label %bb29, !dbg !3742

bb22:                                             ; preds = %bb21
  %47 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3743
  %48 = load ptr, ptr %47, align 8, !dbg !3743, !nonnull !24, !align !504, !noundef !24
  %49 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3743
  %50 = load i64, ptr %49, align 8, !dbg !3743, !noundef !24
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %48, i64 0, i64 %_23.0, !dbg !3743
  store ptr %p, ptr %_35, align 8, !dbg !3744
  %51 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3744
  store ptr %_36, ptr %51, align 8, !dbg !3744
  %52 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3744
  %53 = load ptr, ptr %52, align 8, !dbg !3744, !nonnull !24, !align !504, !noundef !24
  %54 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3744
  %55 = load ptr, ptr %54, align 8, !dbg !3744, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %53, ptr align 8 %55) #10, !dbg !3744
  %_33 = xor i1 %_34, true, !dbg !3745
  br i1 %_33, label %bb24, label %bb27, !dbg !3745

panic1:                                           ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %_23.0, i64 %_37, ptr align 8 @alloc494) #11, !dbg !3735
  unreachable, !dbg !3735

bb24:                                             ; preds = %bb22
  %56 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3746
  %_40.0 = load ptr, ptr %56, align 8, !dbg !3746, !nonnull !24, !align !504, !noundef !24
  %57 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3746
  %_40.1 = load i64, ptr %57, align 8, !dbg !3746, !noundef !24
; call core::slice::sort::partition_equal
  %mid = call i64 @_ZN4core5slice4sort15partition_equal17h333611f4883529faE(ptr align 8 %_40.0, i64 %_40.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3747
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3747
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3685, metadata !DIExpression()), !dbg !3748
  %58 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3749
  %_43.0 = load ptr, ptr %58, align 8, !dbg !3749, !nonnull !24, !align !504, !noundef !24
  %59 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3749
  %_43.1 = load i64, ptr %59, align 8, !dbg !3749, !noundef !24
  store i64 %mid, ptr %_44, align 8, !dbg !3750
  %60 = load i64, ptr %_44, align 8, !dbg !3749, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %61 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h2d7066af8ea7a829E"(ptr align 8 %_43.0, i64 %_43.1, i64 %60, ptr align 8 @alloc496) #10, !dbg !3749
  %_42.0 = extractvalue { ptr, i64 } %61, 0, !dbg !3749
  %_42.1 = extractvalue { ptr, i64 } %61, 1, !dbg !3749
  %62 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3751
  store ptr %_42.0, ptr %62, align 8, !dbg !3751
  %63 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3751
  store i64 %_42.1, ptr %63, align 8, !dbg !3751
  br label %bb1, !dbg !3752

bb29:                                             ; preds = %bb27
; call core::cmp::min
  %_50 = call i64 @_ZN4core3cmp3min17h40572bf1d69cc26bE(i64 %_48.0, i64 %_52.0) #10, !dbg !3754
  %_53 = udiv i64 %_8.1, 8, !dbg !3755
  %64 = icmp uge i64 %_50, %_53, !dbg !3756
  %65 = zext i1 %64 to i8, !dbg !3756
  store i8 %65, ptr %was_balanced, align 1, !dbg !3756
  %66 = zext i1 %_48.1 to i8, !dbg !3757
  store i8 %66, ptr %was_partitioned, align 1, !dbg !3757
  %67 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3758
  %_57.0 = load ptr, ptr %67, align 8, !dbg !3758, !nonnull !24, !align !504, !noundef !24
  %68 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3758
  %_57.1 = load i64, ptr %68, align 8, !dbg !3758, !noundef !24
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17haac3e8b4c0f9643eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_56, ptr align 8 %_57.0, i64 %_57.1, i64 %_48.0, ptr align 8 @alloc500) #10, !dbg !3758
  %69 = getelementptr inbounds { ptr, i64 }, ptr %_56, i32 0, i32 0, !dbg !3759
  %left.0 = load ptr, ptr %69, align 8, !dbg !3759, !nonnull !24, !align !504, !noundef !24
  %70 = getelementptr inbounds { ptr, i64 }, ptr %_56, i32 0, i32 1, !dbg !3759
  %left.1 = load i64, ptr %70, align 8, !dbg !3759, !noundef !24
  %71 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 0, !dbg !3759
  store ptr %left.0, ptr %71, align 8, !dbg !3759
  %72 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 1, !dbg !3759
  store i64 %left.1, ptr %72, align 8, !dbg !3759
  call void @llvm.dbg.declare(metadata ptr %left.dbg.spill, metadata !3690, metadata !DIExpression()), !dbg !3760
  %73 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_56, i32 0, i32 1, !dbg !3761
  %74 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 0, !dbg !3761
  %right.0 = load ptr, ptr %74, align 8, !dbg !3761, !nonnull !24, !align !504, !noundef !24
  %75 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 1, !dbg !3761
  %right.1 = load i64, ptr %75, align 8, !dbg !3761, !noundef !24
  %76 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 0, !dbg !3761
  store ptr %right.0, ptr %76, align 8, !dbg !3761
  %77 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 1, !dbg !3761
  store i64 %right.1, ptr %77, align 8, !dbg !3761
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill, metadata !3692, metadata !DIExpression()), !dbg !3762
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17haac3e8b4c0f9643eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_60, ptr align 8 %right.0, i64 %right.1, i64 1, ptr align 8 @alloc502) #10, !dbg !3763
  %78 = getelementptr inbounds { ptr, i64 }, ptr %_60, i32 0, i32 0, !dbg !3764
  %pivot.0 = load ptr, ptr %78, align 8, !dbg !3764, !nonnull !24, !align !504, !noundef !24
  %79 = getelementptr inbounds { ptr, i64 }, ptr %_60, i32 0, i32 1, !dbg !3764
  %pivot.1 = load i64, ptr %79, align 8, !dbg !3764, !noundef !24
  %80 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 0, !dbg !3764
  store ptr %pivot.0, ptr %80, align 8, !dbg !3764
  %81 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 1, !dbg !3764
  store i64 %pivot.1, ptr %81, align 8, !dbg !3764
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill4, metadata !3693, metadata !DIExpression()), !dbg !3765
  %82 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_60, i32 0, i32 1, !dbg !3766
  %83 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 0, !dbg !3766
  %right.05 = load ptr, ptr %83, align 8, !dbg !3766, !nonnull !24, !align !504, !noundef !24
  %84 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 1, !dbg !3766
  %right.16 = load i64, ptr %84, align 8, !dbg !3766, !noundef !24
  %85 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 0, !dbg !3766
  store ptr %right.05, ptr %85, align 8, !dbg !3766
  %86 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 1, !dbg !3766
  store i64 %right.16, ptr %86, align 8, !dbg !3766
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill7, metadata !3695, metadata !DIExpression()), !dbg !3767
  %_64 = icmp ult i64 0, %pivot.1, !dbg !3768
  %87 = call i1 @llvm.expect.i1(i1 %_64, i1 true), !dbg !3768
  br i1 %87, label %bb33, label %panic8, !dbg !3768

panic3:                                           ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc498) #11, !dbg !3742
  unreachable, !dbg !3742

bb33:                                             ; preds = %bb29
  %pivot = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3769
  store ptr %pivot, ptr %pivot.dbg.spill9, align 8, !dbg !3769
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill9, metadata !3696, metadata !DIExpression()), !dbg !3770
  %_65 = icmp ult i64 %left.1, %right.16, !dbg !3771
  br i1 %_65, label %bb34, label %bb36, !dbg !3771

panic8:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 0, i64 %pivot.1, ptr align 8 @alloc504) #11, !dbg !3768
  unreachable, !dbg !3768

bb36:                                             ; preds = %bb33
  store ptr %pivot, ptr %_75, align 8, !dbg !3772
  %_76 = load i32, ptr %limit, align 4, !dbg !3773, !noundef !24
  %88 = load ptr, ptr %_75, align 8, !dbg !3774, !align !504, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17hf95552ee1c386416E(ptr align 8 %right.05, i64 %right.16, ptr align 8 %is_less, ptr align 8 %88, i32 %_76) #10, !dbg !3774
  %89 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3775
  store ptr %left.0, ptr %89, align 8, !dbg !3775
  %90 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3775
  store i64 %left.1, ptr %90, align 8, !dbg !3775
  br label %bb1, !dbg !3776

bb34:                                             ; preds = %bb33
  %_71 = load ptr, ptr %pred, align 8, !dbg !3777, !align !504, !noundef !24
  %_72 = load i32, ptr %limit, align 4, !dbg !3778, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17hf95552ee1c386416E(ptr align 8 %left.0, i64 %left.1, ptr align 8 %is_less, ptr align 8 %_71, i32 %_72) #10, !dbg !3779
  %91 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3780
  store ptr %right.05, ptr %91, align 8, !dbg !3780
  %92 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3780
  store i64 %right.16, ptr %92, align 8, !dbg !3780
  store ptr %pivot, ptr %_73, align 8, !dbg !3781
  %93 = load ptr, ptr %_73, align 8, !dbg !3782, !align !504, !noundef !24
  store ptr %93, ptr %pred, align 8, !dbg !3782
  br label %bb1, !dbg !3776
}

; core::slice::sort::heapsort
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort8heapsort17he1f0ec5af510337fE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %0) unnamed_addr #2 !dbg !3783 {
start:
  %i.dbg.spill3 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_35 = alloca i64, align 8
  %_32 = alloca { { ptr, i64 }, i64 }, align 8
  %_25 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_21 = alloca { i64, i64 }, align 8
  %_18 = alloca { { ptr, i64 }, i64 }, align 8
  %_12 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %sift_down = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3785, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3786, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.declare(metadata ptr %sift_down, metadata !3787, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3793, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !3797, metadata !DIExpression()), !dbg !3807
  store ptr %is_less, ptr %sift_down, align 8, !dbg !3808
  %_8 = udiv i64 %v.1, 2, !dbg !3809
  store i64 0, ptr %_7, align 8, !dbg !3810
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3810
  store i64 %_8, ptr %3, align 8, !dbg !3810
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3810
  %5 = load i64, ptr %4, align 8, !dbg !3810, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3810
  %7 = load i64, ptr %6, align 8, !dbg !3810, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %8 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h3e38ac3e9c2c377aE(i64 %5, i64 %7) #10, !dbg !3810
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3810
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3810
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h58a426f071ab13a9E"(i64 %_6.0, i64 %_6.1) #10, !dbg !3810
  %_5.0 = extractvalue { i64, i64 } %9, 0, !dbg !3810
  %_5.1 = extractvalue { i64, i64 } %9, 1, !dbg !3810
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3810
  store i64 %_5.0, ptr %10, align 8, !dbg !3810
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3810
  store i64 %_5.1, ptr %11, align 8, !dbg !3810
  br label %bb3, !dbg !3811

bb3:                                              ; preds = %bb5, %start
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h26fee8b0705b7407E"(ptr align 8 %iter) #10, !dbg !3806
  store { i64, i64 } %12, ptr %_12, align 8, !dbg !3806
  %_14 = load i64, ptr %_12, align 8, !dbg !3806, !range !1053, !noundef !24
  %13 = icmp eq i64 %_14, 0, !dbg !3806
  br i1 %13, label %bb7, label %bb5, !dbg !3806

bb7:                                              ; preds = %bb3
  store i64 1, ptr %_21, align 8, !dbg !3812
  %14 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 1, !dbg !3812
  store i64 %v.1, ptr %14, align 8, !dbg !3812
  %15 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 0, !dbg !3812
  %16 = load i64, ptr %15, align 8, !dbg !3812, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 1, !dbg !3812
  %18 = load i64, ptr %17, align 8, !dbg !3812, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %19 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h3e38ac3e9c2c377aE(i64 %16, i64 %18) #10, !dbg !3812
  %_20.0 = extractvalue { i64, i64 } %19, 0, !dbg !3812
  %_20.1 = extractvalue { i64, i64 } %19, 1, !dbg !3812
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h58a426f071ab13a9E"(i64 %_20.0, i64 %_20.1) #10, !dbg !3812
  %_19.0 = extractvalue { i64, i64 } %20, 0, !dbg !3812
  %_19.1 = extractvalue { i64, i64 } %20, 1, !dbg !3812
  %21 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 0, !dbg !3812
  store i64 %_19.0, ptr %21, align 8, !dbg !3812
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 1, !dbg !3812
  store i64 %_19.1, ptr %22, align 8, !dbg !3812
  br label %bb10, !dbg !3813

bb5:                                              ; preds = %bb3
  %23 = getelementptr inbounds { i64, i64 }, ptr %_12, i32 0, i32 1, !dbg !3814
  %i = load i64, ptr %23, align 8, !dbg !3814, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3814
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3795, metadata !DIExpression()), !dbg !3815
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !3816
  store ptr %v.0, ptr %24, align 8, !dbg !3816
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !3816
  store i64 %v.1, ptr %25, align 8, !dbg !3816
  %26 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_18, i32 0, i32 1, !dbg !3816
  store i64 %i, ptr %26, align 8, !dbg !3816
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !3816
  %28 = load ptr, ptr %27, align 8, !dbg !3816, !nonnull !24, !align !504, !noundef !24
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !3816
  %30 = load i64, ptr %29, align 8, !dbg !3816, !noundef !24
  %31 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_18, i32 0, i32 1, !dbg !3816
  %32 = load i64, ptr %31, align 8, !dbg !3816, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h38ea04fa6e9c2503E"(ptr align 8 %sift_down, ptr align 8 %28, i64 %30, i64 %32) #10, !dbg !3816
  br label %bb3, !dbg !3816

bb6:                                              ; No predecessors!
  unreachable, !dbg !3806

bb10:                                             ; preds = %bb12, %bb7
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %33 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h26fee8b0705b7407E"(ptr align 8 %iter1) #10, !dbg !3807
  store { i64, i64 } %33, ptr %_25, align 8, !dbg !3807
  %_27 = load i64, ptr %_25, align 8, !dbg !3807, !range !1053, !noundef !24
  %34 = icmp eq i64 %_27, 0, !dbg !3807
  br i1 %34, label %bb14, label %bb12, !dbg !3807

bb14:                                             ; preds = %bb10
  ret void, !dbg !3817

bb12:                                             ; preds = %bb10
  %35 = getelementptr inbounds { i64, i64 }, ptr %_25, i32 0, i32 1, !dbg !3818
  %i2 = load i64, ptr %35, align 8, !dbg !3818, !noundef !24
  store i64 %i2, ptr %i.dbg.spill3, align 8, !dbg !3818
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill3, metadata !3799, metadata !DIExpression()), !dbg !3819
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17heada400949a61ab0E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %i2, ptr align 8 @alloc506) #10, !dbg !3820
  store i64 %i2, ptr %_35, align 8, !dbg !3821
  %36 = load i64, ptr %_35, align 8, !dbg !3822, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %37 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h99932268dd4a9ac3E"(ptr align 8 %v.0, i64 %v.1, i64 %36, ptr align 8 @alloc508) #10, !dbg !3822
  %_34.0 = extractvalue { ptr, i64 } %37, 0, !dbg !3822
  %_34.1 = extractvalue { ptr, i64 } %37, 1, !dbg !3822
  %38 = getelementptr inbounds { ptr, i64 }, ptr %_32, i32 0, i32 0, !dbg !3823
  store ptr %_34.0, ptr %38, align 8, !dbg !3823
  %39 = getelementptr inbounds { ptr, i64 }, ptr %_32, i32 0, i32 1, !dbg !3823
  store i64 %_34.1, ptr %39, align 8, !dbg !3823
  %40 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_32, i32 0, i32 1, !dbg !3823
  store i64 0, ptr %40, align 8, !dbg !3823
  %41 = getelementptr inbounds { ptr, i64 }, ptr %_32, i32 0, i32 0, !dbg !3823
  %42 = load ptr, ptr %41, align 8, !dbg !3823, !nonnull !24, !align !504, !noundef !24
  %43 = getelementptr inbounds { ptr, i64 }, ptr %_32, i32 0, i32 1, !dbg !3823
  %44 = load i64, ptr %43, align 8, !dbg !3823, !noundef !24
  %45 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_32, i32 0, i32 1, !dbg !3823
  %46 = load i64, ptr %45, align 8, !dbg !3823, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h38ea04fa6e9c2503E"(ptr align 8 %sift_down, ptr align 8 %42, i64 %44, i64 %46) #10, !dbg !3823
  br label %bb10, !dbg !3823

bb13:                                             ; No predecessors!
  unreachable, !dbg !3807
}

; core::slice::sort::heapsort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h38ea04fa6e9c2503E"(ptr align 8 %_1, ptr align 8 %v.0, i64 %v.1, i64 %0) unnamed_addr #0 !dbg !3824 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_21 = alloca { ptr, ptr }, align 8
  %child = alloca i64, align 8
  %node = alloca i64, align 8
  store i64 %0, ptr %node, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !3831, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !3834
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3829, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.declare(metadata ptr %node, metadata !3830, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.declare(metadata ptr %child, metadata !3832, metadata !DIExpression()), !dbg !3837
  br label %bb1, !dbg !3838

bb1:                                              ; preds = %bb16, %start
  %_6 = load i64, ptr %node, align 8, !dbg !3839, !noundef !24
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 %_6), !dbg !3840
  %_7.0 = extractvalue { i64, i1 } %3, 0, !dbg !3840
  %_7.1 = extractvalue { i64, i1 } %3, 1, !dbg !3840
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !3840
  br i1 %4, label %panic, label %bb2, !dbg !3840

bb2:                                              ; preds = %bb1
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7.0, i64 1), !dbg !3840
  %_8.0 = extractvalue { i64, i1 } %5, 0, !dbg !3840
  %_8.1 = extractvalue { i64, i1 } %5, 1, !dbg !3840
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3840
  br i1 %6, label %panic1, label %bb3, !dbg !3840

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc510) #11, !dbg !3840
  unreachable, !dbg !3840

bb3:                                              ; preds = %bb2
  store i64 %_8.0, ptr %child, align 8, !dbg !3840
  %_10 = load i64, ptr %child, align 8, !dbg !3841, !noundef !24
  %_9 = icmp uge i64 %_10, %v.1, !dbg !3841
  br i1 %_9, label %bb18, label %bb4, !dbg !3841

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc510) #11, !dbg !3840
  unreachable, !dbg !3840

bb4:                                              ; preds = %bb3
  %_15 = load i64, ptr %child, align 8, !dbg !3842, !noundef !24
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 1), !dbg !3842
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !3842
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !3842
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !3842
  br i1 %8, label %panic2, label %bb5, !dbg !3842

bb18:                                             ; preds = %bb14, %bb3
  ret void, !dbg !3843

bb5:                                              ; preds = %bb4
  %_13 = icmp ult i64 %_16.0, %v.1, !dbg !3842
  br i1 %_13, label %bb6, label %bb12, !dbg !3842

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc512) #11, !dbg !3842
  unreachable, !dbg !3842

bb12:                                             ; preds = %bb11, %bb5
  %_49 = load ptr, ptr %_1, align 8, !dbg !3844, !nonnull !24, !align !504, !noundef !24
  %_37 = load i64, ptr %node, align 8, !dbg !3845, !noundef !24
  %_39 = icmp ult i64 %_37, %v.1, !dbg !3846
  %9 = call i1 @llvm.expect.i1(i1 %_39, i1 true), !dbg !3846
  br i1 %9, label %bb13, label %panic7, !dbg !3846

bb6:                                              ; preds = %bb5
  %_48 = load ptr, ptr %_1, align 8, !dbg !3847, !nonnull !24, !align !504, !noundef !24
  %_23 = load i64, ptr %child, align 8, !dbg !3848, !noundef !24
  %_25 = icmp ult i64 %_23, %v.1, !dbg !3849
  %10 = call i1 @llvm.expect.i1(i1 %_25, i1 true), !dbg !3849
  br i1 %10, label %bb7, label %panic3, !dbg !3849

bb7:                                              ; preds = %bb6
  %_22 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_23, !dbg !3850
  %_28 = load i64, ptr %child, align 8, !dbg !3851, !noundef !24
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_28, i64 1), !dbg !3851
  %_29.0 = extractvalue { i64, i1 } %11, 0, !dbg !3851
  %_29.1 = extractvalue { i64, i1 } %11, 1, !dbg !3851
  %12 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !3851
  br i1 %12, label %panic4, label %bb8, !dbg !3851

panic3:                                           ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %_23, i64 %v.1, ptr align 8 @alloc514) #11, !dbg !3849
  unreachable, !dbg !3849

bb8:                                              ; preds = %bb7
  %_31 = icmp ult i64 %_29.0, %v.1, !dbg !3852
  %13 = call i1 @llvm.expect.i1(i1 %_31, i1 true), !dbg !3852
  br i1 %13, label %bb9, label %panic5, !dbg !3852

panic4:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc516) #11, !dbg !3851
  unreachable, !dbg !3851

bb9:                                              ; preds = %bb8
  %_26 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_29.0, !dbg !3853
  store ptr %_22, ptr %_21, align 8, !dbg !3847
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3847
  store ptr %_26, ptr %14, align 8, !dbg !3847
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 0, !dbg !3847
  %16 = load ptr, ptr %15, align 8, !dbg !3847, !nonnull !24, !align !504, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3847
  %18 = load ptr, ptr %17, align 8, !dbg !3847, !nonnull !24, !align !504, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_20 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17he490ed33b6ccf2c8E"(ptr align 8 %_48, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3847
  %_19 = zext i1 %_20 to i64, !dbg !3847
  %19 = load i64, ptr %child, align 8, !dbg !3854, !noundef !24
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 %_19), !dbg !3854
  %_32.0 = extractvalue { i64, i1 } %20, 0, !dbg !3854
  %_32.1 = extractvalue { i64, i1 } %20, 1, !dbg !3854
  %21 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !3854
  br i1 %21, label %panic6, label %bb11, !dbg !3854

panic5:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %_29.0, i64 %v.1, ptr align 8 @alloc518) #11, !dbg !3852
  unreachable, !dbg !3852

bb11:                                             ; preds = %bb9
  store i64 %_32.0, ptr %child, align 8, !dbg !3854
  br label %bb12, !dbg !3855

panic6:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc520) #11, !dbg !3854
  unreachable, !dbg !3854

bb13:                                             ; preds = %bb12
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_37, !dbg !3856
  %_41 = load i64, ptr %child, align 8, !dbg !3857, !noundef !24
  %_43 = icmp ult i64 %_41, %v.1, !dbg !3858
  %22 = call i1 @llvm.expect.i1(i1 %_43, i1 true), !dbg !3858
  br i1 %22, label %bb14, label %panic8, !dbg !3858

panic7:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %_37, i64 %v.1, ptr align 8 @alloc522) #11, !dbg !3846
  unreachable, !dbg !3846

bb14:                                             ; preds = %bb13
  %_40 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_41, !dbg !3859
  store ptr %_36, ptr %_35, align 8, !dbg !3844
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3844
  store ptr %_40, ptr %23, align 8, !dbg !3844
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3844
  %25 = load ptr, ptr %24, align 8, !dbg !3844, !nonnull !24, !align !504, !noundef !24
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3844
  %27 = load ptr, ptr %26, align 8, !dbg !3844, !nonnull !24, !align !504, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_34 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17he490ed33b6ccf2c8E"(ptr align 8 %_49, ptr align 8 %25, ptr align 8 %27) #10, !dbg !3844
  %_33 = xor i1 %_34, true, !dbg !3860
  br i1 %_33, label %bb18, label %bb16, !dbg !3860

panic8:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %_41, i64 %v.1, ptr align 8 @alloc524) #11, !dbg !3858
  unreachable, !dbg !3858

bb16:                                             ; preds = %bb14
  %_45 = load i64, ptr %node, align 8, !dbg !3861, !noundef !24
  %_46 = load i64, ptr %child, align 8, !dbg !3862, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17heada400949a61ab0E"(ptr align 8 %v.0, i64 %v.1, i64 %_45, i64 %_46, ptr align 8 @alloc526) #10, !dbg !3863
  %_47 = load i64, ptr %child, align 8, !dbg !3864, !noundef !24
  store i64 %_47, ptr %node, align 8, !dbg !3865
  br label %bb1, !dbg !3838
}

; core::slice::sort::partition
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort9partition17h5991b453aacc2b5fE(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !3866 {
start:
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %was_partitioned.dbg.spill = alloca i8, align 1
  %mid.dbg.spill = alloca i64, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_60 = alloca { i64, i64 }, align 8
  %_47 = alloca { ptr, ptr }, align 8
  %_41 = alloca i8, align 1
  %_35 = alloca { ptr, ptr }, align 8
  %_30 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_16 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_6 = alloca { i64, i8 }, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3870, metadata !DIExpression()), !dbg !3891
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3871, metadata !DIExpression()), !dbg !3892
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3872, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3881, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !3883, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata ptr %l, metadata !3887, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.declare(metadata ptr %r, metadata !3889, metadata !DIExpression()), !dbg !3897
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17heada400949a61ab0E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc528) #10, !dbg !3898
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17haac3e8b4c0f9643eE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_10, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc530) #10, !dbg !3899
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !3900
  %pivot.0 = load ptr, ptr %3, align 8, !dbg !3900, !nonnull !24, !align !504, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !3900
  %pivot.1 = load i64, ptr %4, align 8, !dbg !3900, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !3900
  store ptr %pivot.0, ptr %5, align 8, !dbg !3900
  %6 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !3900
  store i64 %pivot.1, ptr %6, align 8, !dbg !3900
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !3876, metadata !DIExpression()), !dbg !3901
  %7 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !3902
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !3902
  %v.02 = load ptr, ptr %8, align 8, !dbg !3902, !nonnull !24, !align !504, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !3902
  %v.13 = load i64, ptr %9, align 8, !dbg !3902, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !3902
  store ptr %v.02, ptr %10, align 8, !dbg !3902
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !3902
  store i64 %v.13, ptr %11, align 8, !dbg !3902
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !3878, metadata !DIExpression()), !dbg !3903
  %_14 = icmp ult i64 0, %pivot.1, !dbg !3904
  %12 = call i1 @llvm.expect.i1(i1 %_14, i1 true), !dbg !3904
  br i1 %12, label %bb3, label %panic, !dbg !3904

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3905
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !3905
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !3879, metadata !DIExpression()), !dbg !3906
; call core::ptr::read
  call void @_ZN4core3ptr4read17hc4a3b4e001a11806E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_16, ptr %pivot5) #10, !dbg !3907
  call void @llvm.dbg.declare(metadata ptr %_16, metadata !996, metadata !DIExpression()), !dbg !3908
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_16, i64 24, i1 false), !dbg !3910
  store ptr %tmp, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2367, metadata !DIExpression()), !dbg !3911
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !3913
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !3913
  store ptr %pivot5, ptr %13, align 8, !dbg !3913
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2367, metadata !DIExpression()), !dbg !3914
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !3916
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !3885, metadata !DIExpression()), !dbg !3917
  store i64 0, ptr %l, align 8, !dbg !3918
  store i64 %v.13, ptr %r, align 8, !dbg !3919
  br label %bb8, !dbg !3920

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 0, i64 %pivot.1, ptr align 8 @alloc532) #11, !dbg !3904
  unreachable, !dbg !3904

bb8:                                              ; preds = %bb15, %bb3
  %_32 = load i64, ptr %l, align 8, !dbg !3921, !noundef !24
  %_33 = load i64, ptr %r, align 8, !dbg !3922, !noundef !24
  %_31 = icmp ult i64 %_32, %_33, !dbg !3921
  br i1 %_31, label %bb10, label %bb9, !dbg !3921

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_30, align 1, !dbg !3921
  br label %bb11, !dbg !3921

bb10:                                             ; preds = %bb8
  %_39 = load i64, ptr %l, align 8, !dbg !3923, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_37 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %v.02, i64 %v.13, i64 %_39) #10, !dbg !3924
  store ptr %_37, ptr %_35, align 8, !dbg !3925
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3925
  store ptr %tmp, ptr %14, align 8, !dbg !3925
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3925
  %16 = load ptr, ptr %15, align 8, !dbg !3925, !nonnull !24, !align !504, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3925
  %18 = load ptr, ptr %17, align 8, !dbg !3925, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3925
  %19 = zext i1 %_34 to i8, !dbg !3921
  store i8 %19, ptr %_30, align 1, !dbg !3921
  br label %bb11, !dbg !3921

bb11:                                             ; preds = %bb9, %bb10
  %20 = load i8, ptr %_30, align 1, !dbg !3921, !range !210, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3921
  br i1 %21, label %bb14, label %bb16, !dbg !3921

bb16:                                             ; preds = %bb24, %bb11
  %_43 = load i64, ptr %l, align 8, !dbg !3926, !noundef !24
  %_44 = load i64, ptr %r, align 8, !dbg !3927, !noundef !24
  %_42 = icmp ult i64 %_43, %_44, !dbg !3926
  br i1 %_42, label %bb18, label %bb17, !dbg !3926

bb14:                                             ; preds = %bb11
  %22 = load i64, ptr %l, align 8, !dbg !3928, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !3928
  %_40.0 = extractvalue { i64, i1 } %23, 0, !dbg !3928
  %_40.1 = extractvalue { i64, i1 } %23, 1, !dbg !3928
  %24 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false), !dbg !3928
  br i1 %24, label %panic8, label %bb15, !dbg !3928

bb15:                                             ; preds = %bb14
  store i64 %_40.0, ptr %l, align 8, !dbg !3928
  br label %bb8, !dbg !3920

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc534) #11, !dbg !3928
  unreachable, !dbg !3928

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_41, align 1, !dbg !3926
  br label %bb19, !dbg !3926

bb18:                                             ; preds = %bb16
  %_52 = load i64, ptr %r, align 8, !dbg !3929, !noundef !24
  %_53.0 = sub i64 %_52, 1, !dbg !3929
  %_53.1 = icmp ult i64 %_52, 1, !dbg !3929
  %25 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !3929
  br i1 %25, label %panic9, label %bb20, !dbg !3929

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_49 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E"(ptr align 8 %v.02, i64 %v.13, i64 %_53.0) #10, !dbg !3930
  store ptr %_49, ptr %_47, align 8, !dbg !3931
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !3931
  store ptr %tmp, ptr %26, align 8, !dbg !3931
  %27 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 0, !dbg !3931
  %28 = load ptr, ptr %27, align 8, !dbg !3931, !nonnull !24, !align !504, !noundef !24
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !3931
  %30 = load ptr, ptr %29, align 8, !dbg !3931, !nonnull !24, !align !504, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_46 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E"(ptr align 8 %is_less, ptr align 8 %28, ptr align 8 %30) #10, !dbg !3931
  %_45 = xor i1 %_46, true, !dbg !3932
  %31 = zext i1 %_45 to i8, !dbg !3926
  store i8 %31, ptr %_41, align 1, !dbg !3926
  br label %bb19, !dbg !3926

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc536) #11, !dbg !3929
  unreachable, !dbg !3929

bb19:                                             ; preds = %bb17, %bb20
  %32 = load i8, ptr %_41, align 1, !dbg !3926, !range !210, !noundef !24
  %33 = trunc i8 %32 to i1, !dbg !3926
  br i1 %33, label %bb23, label %bb25, !dbg !3926

bb25:                                             ; preds = %bb19
  %_56 = load i64, ptr %l, align 8, !dbg !3933, !noundef !24
  %_61 = load i64, ptr %l, align 8, !dbg !3934, !noundef !24
  %_62 = load i64, ptr %r, align 8, !dbg !3935, !noundef !24
  store i64 %_61, ptr %_60, align 8, !dbg !3934
  %34 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !3934
  store i64 %_62, ptr %34, align 8, !dbg !3934
  %35 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 0, !dbg !3936
  %36 = load i64, ptr %35, align 8, !dbg !3936, !noundef !24
  %37 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !3936
  %38 = load i64, ptr %37, align 8, !dbg !3936, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %39 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h817a1d02df95443aE"(ptr align 8 %v.02, i64 %v.13, i64 %36, i64 %38, ptr align 8 @alloc540) #10, !dbg !3936
  %_59.0 = extractvalue { ptr, i64 } %39, 0, !dbg !3936
  %_59.1 = extractvalue { ptr, i64 } %39, 1, !dbg !3936
; call core::slice::sort::partition_in_blocks
  %_57 = call i64 @_ZN4core5slice4sort19partition_in_blocks17h9f68d96e82fd1beaE(ptr align 8 %_59.0, i64 %_59.1, ptr align 8 %tmp, ptr align 8 %is_less) #10, !dbg !3937
  %40 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_56, i64 %_57), !dbg !3933
  %_63.0 = extractvalue { i64, i1 } %40, 0, !dbg !3933
  %_63.1 = extractvalue { i64, i1 } %40, 1, !dbg !3933
  %41 = call i1 @llvm.expect.i1(i1 %_63.1, i1 false), !dbg !3933
  br i1 %41, label %panic11, label %bb28, !dbg !3933

bb23:                                             ; preds = %bb19
  %42 = load i64, ptr %r, align 8, !dbg !3938, !noundef !24
  %_54.0 = sub i64 %42, 1, !dbg !3938
  %_54.1 = icmp ult i64 %42, 1, !dbg !3938
  %43 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !3938
  br i1 %43, label %panic10, label %bb24, !dbg !3938

bb24:                                             ; preds = %bb23
  store i64 %_54.0, ptr %r, align 8, !dbg !3938
  br label %bb16, !dbg !3939

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc538) #11, !dbg !3938
  unreachable, !dbg !3938

bb28:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !3940, !noundef !24
  %_66 = load i64, ptr %r, align 8, !dbg !3941, !noundef !24
  %_64 = icmp uge i64 %_65, %_66, !dbg !3940
  store i64 %_63.0, ptr %_6, align 8, !dbg !3942
  %44 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3942
  %45 = zext i1 %_64 to i8, !dbg !3942
  store i8 %45, ptr %44, align 8, !dbg !3942
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h3d495b159b1f4552E"(ptr %_pivot_guard) #10, !dbg !3943
  %mid = load i64, ptr %_6, align 8, !dbg !3944, !noundef !24
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3944
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3873, metadata !DIExpression()), !dbg !3945
  %46 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3946
  %47 = load i8, ptr %46, align 8, !dbg !3946, !range !210, !noundef !24
  %was_partitioned = trunc i8 %47 to i1, !dbg !3946
  %48 = zext i1 %was_partitioned to i8, !dbg !3946
  store i8 %48, ptr %was_partitioned.dbg.spill, align 1, !dbg !3946
  call void @llvm.dbg.declare(metadata ptr %was_partitioned.dbg.spill, metadata !3875, metadata !DIExpression()), !dbg !3947
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17heada400949a61ab0E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %mid, ptr align 8 @alloc544) #10, !dbg !3948
  store i64 %mid, ptr %0, align 8, !dbg !3949
  %49 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !3949
  %50 = zext i1 %was_partitioned to i8, !dbg !3949
  store i8 %50, ptr %49, align 8, !dbg !3949
  %51 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !3950
  %52 = load i64, ptr %51, align 8, !dbg !3950, !noundef !24
  %53 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !3950
  %54 = load i8, ptr %53, align 8, !dbg !3950, !range !210, !noundef !24
  %55 = trunc i8 %54 to i1, !dbg !3950
  %56 = zext i1 %55 to i8, !dbg !3950
  %57 = insertvalue { i64, i8 } undef, i64 %52, 0, !dbg !3950
  %58 = insertvalue { i64, i8 } %57, i8 %56, 1, !dbg !3950
  ret { i64, i8 } %58, !dbg !3950

panic11:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc542) #11, !dbg !3933
  unreachable, !dbg !3933
}

; core::slice::sort::quicksort
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort9quicksort17h65d58888f6b725fcE(ptr align 8 %v.0, i64 %v.1, ptr align 1 %0) unnamed_addr #1 !dbg !3951 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %limit.dbg.spill = alloca i32, align 4
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3955, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3956, metadata !DIExpression()), !dbg !3960
  br i1 false, label %bb1, label %bb2, !dbg !3961

bb2:                                              ; preds = %start
  store i64 %v.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3962, metadata !DIExpression()), !dbg !3965
  %4 = call i64 @llvm.ctlz.i64(i64 %v.1, i1 false), !dbg !3967
  store i64 %4, ptr %1, align 8, !dbg !3967
  %_2.i = load i64, ptr %1, align 8, !dbg !3967, !noundef !24
  %5 = trunc i64 %_2.i to i32, !dbg !3967
  %_8.0 = sub i32 64, %5, !dbg !3968
  %_8.1 = icmp ult i32 64, %5, !dbg !3968
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3968
  br i1 %6, label %panic, label %bb4, !dbg !3968

bb1:                                              ; preds = %start
  br label %bb6, !dbg !3969

bb6:                                              ; preds = %bb4, %bb1
  ret void, !dbg !3970

bb4:                                              ; preds = %bb2
  store i32 %_8.0, ptr %limit.dbg.spill, align 4, !dbg !3968
  call void @llvm.dbg.declare(metadata ptr %limit.dbg.spill, metadata !3957, metadata !DIExpression()), !dbg !3971
  store ptr null, ptr %_11, align 8, !dbg !3972
  %7 = load ptr, ptr %_11, align 8, !dbg !3973, !align !504, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17hf95552ee1c386416E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less, ptr align 8 %7, i32 %_8.0) #10, !dbg !3973
  br label %bb6, !dbg !3969

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc546) #11, !dbg !3968
  unreachable, !dbg !3968
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc7d1bbe173cff432E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !3974 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3979, metadata !DIExpression()), !dbg !3981
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3980, metadata !DIExpression()), !dbg !3982
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h287b66d601df05f8E"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3983
  %6 = extractvalue { ptr, i64 } %5, 0, !dbg !3983
  %7 = extractvalue { ptr, i64 } %5, 1, !dbg !3983
  %8 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !3984
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !3984
  ret { ptr, i64 } %9, !dbg !3984
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h2d7066af8ea7a829E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !3985 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3990, metadata !DIExpression()), !dbg !3994
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3991, metadata !DIExpression()), !dbg !3995
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h228b6d3bd03ce9c7E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3996
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3996
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3996
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !3997
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !3997
  ret { ptr, i64 } %5, !dbg !3997
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h817a1d02df95443aE"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !3998 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4002, metadata !DIExpression()), !dbg !4004
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4003, metadata !DIExpression()), !dbg !4005
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h997e6282d5db556bE"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4006
  %_3.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4006
  %_3.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4006
  %6 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !4007
  %7 = insertvalue { ptr, i64 } %6, i64 %_3.1, 1, !dbg !4007
  ret { ptr, i64 } %7, !dbg !4007
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h8b4c6736f697ea0fE"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4008 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4012, metadata !DIExpression()), !dbg !4016
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4013, metadata !DIExpression()), !dbg !4017
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17heb0f1984c841e2a1E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4018
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4018
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4018
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !4019
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !4019
  ret { ptr, i64 } %5, !dbg !4019
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h99932268dd4a9ac3E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4020 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4024, metadata !DIExpression()), !dbg !4028
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4025, metadata !DIExpression()), !dbg !4029
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5412c5f9bbbd53aeE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4030
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4030
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4030
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !4031
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !4031
  ret { ptr, i64 } %5, !dbg !4031
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hddab6344e80635f6E"(ptr sret(%"bootinfo::TlsTemplate") %0, ptr %self, ptr %default) unnamed_addr #0 !dbg !4032 {
start:
  %_5 = alloca i8, align 1
  %x = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4048, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.declare(metadata ptr %default, metadata !4049, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.declare(metadata ptr %x, metadata !4050, metadata !DIExpression()), !dbg !4054
  store i8 0, ptr %_5, align 1, !dbg !4055
  store i8 1, ptr %_5, align 1, !dbg !4055
  %_3 = load i64, ptr %self, align 8, !dbg !4055, !range !1053, !noundef !24
  %1 = icmp eq i64 %_3, 0, !dbg !4056
  br i1 %1, label %bb1, label %bb3, !dbg !4056

bb1:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !4057
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %default, i64 24, i1 false), !dbg !4057
  br label %bb6, !dbg !4057

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %self, i32 0, i32 1, !dbg !4058
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %2, i64 24, i1 false), !dbg !4058
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %x, i64 24, i1 false), !dbg !4059
  br label %bb6, !dbg !4060

bb2:                                              ; No predecessors!
  unreachable, !dbg !4055

bb6:                                              ; preds = %bb1, %bb3
  %3 = load i8, ptr %_5, align 1, !dbg !4061, !range !210, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !4061
  br i1 %4, label %bb5, label %bb4, !dbg !4061

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !4062

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !4061
}

; <core::cmp::Ordering as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h08b9696236dc6075E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !4063 {
start:
  %__arg1_tag.dbg.spill = alloca i8, align 1
  %__self_tag.dbg.spill = alloca i8, align 1
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4069, metadata !DIExpression()), !dbg !4075
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !4070, metadata !DIExpression()), !dbg !4075
  %__self_tag = load i8, ptr %self, align 1, !dbg !4075, !range !739, !noundef !24
  store i8 %__self_tag, ptr %__self_tag.dbg.spill, align 1, !dbg !4075
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill, metadata !4071, metadata !DIExpression()), !dbg !4076
  %__arg1_tag = load i8, ptr %other, align 1, !dbg !4076, !range !739, !noundef !24
  store i8 %__arg1_tag, ptr %__arg1_tag.dbg.spill, align 1, !dbg !4076
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill, metadata !4073, metadata !DIExpression()), !dbg !4077
  %0 = icmp eq i8 %__self_tag, %__arg1_tag, !dbg !4077
  ret i1 %0, !dbg !4078
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h68016ab3f09a4ae3E"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !4079 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4087, metadata !DIExpression()), !dbg !4089
  %2 = insertvalue { ptr, ptr } undef, ptr %self.0, 0, !dbg !4090
  %3 = insertvalue { ptr, ptr } %2, ptr %self.1, 1, !dbg !4090
  ret { ptr, ptr } %3, !dbg !4090
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h6b7de9994ee6e0bcE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !4091 {
start:
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca i64, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, { ptr, i64 } }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4096, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4098, metadata !DIExpression()), !dbg !4101
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !4097, metadata !DIExpression()), !dbg !4102
  store i64 %self, ptr %_4, align 8, !dbg !4103
  %3 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4103
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !4103
  store ptr %slice.0, ptr %4, align 8, !dbg !4103
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !4103
  store i64 %slice.1, ptr %5, align 8, !dbg !4103
  %6 = load i64, ptr %_4, align 8, !dbg !4103, !noundef !24
  %7 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4103
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !4103
  %9 = load ptr, ptr %8, align 8, !dbg !4103, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !4103
  %11 = load i64, ptr %10, align 8, !dbg !4103, !noundef !24
  store i64 %6, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !4104, metadata !DIExpression()), !dbg !4111
  store ptr %9, ptr %slice.dbg.spill.i, align 8
  %12 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %11, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !4110, metadata !DIExpression()), !dbg !4111
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h1865381c5371083cE"(ptr %9, i64 %11) #10, !dbg !4113
  %_4.i = icmp ult i64 %6, %_5.i, !dbg !4115
  %_3.i = xor i1 %_4.i, true, !dbg !4116
  br i1 %_3.i, label %bb2.i, label %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h51c0558f48bfc9f9E.exit", !dbg !4116

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1 @alloc547, i64 97) #11, !dbg !4117
  unreachable, !dbg !4117

"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h51c0558f48bfc9f9E.exit": ; preds = %start
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_5 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17haa644275dcb538efE"(ptr %slice.0, i64 %slice.1) #10, !dbg !4118
  store ptr %_5, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !213, metadata !DIExpression()), !dbg !4119
  store i64 %self, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !223, metadata !DIExpression()), !dbg !4121
  store ptr %_5, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !227, metadata !DIExpression()), !dbg !4122
  store i64 %self, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !233, metadata !DIExpression()), !dbg !4124
  %13 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_5, i64 %self, !dbg !4125
  store ptr %13, ptr %0, align 8, !dbg !4125
  %14 = load ptr, ptr %0, align 8, !dbg !4125, !noundef !24
  ret ptr %14, !dbg !4126
}

; <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9a4d3fa01a0e4ce4E"(ptr align 8 %self) unnamed_addr #1 !dbg !4127 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4133, metadata !DIExpression()), !dbg !4134
  %_3 = load ptr, ptr %self, align 8, !dbg !4135, !noundef !24
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4136
  %_4 = load ptr, ptr %0, align 8, !dbg !4136, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E(ptr %_3, ptr %_4, i64 1) #10, !dbg !4137
  ret void, !dbg !4138
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h20e1df60141b61e8E"(ptr align 8 %self) unnamed_addr #0 !dbg !4139 {
start:
  %self.dbg.spill.i5.i = alloca ptr, align 8
  %self.dbg.spill.i4.i = alloca ptr, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca ptr, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %old.dbg.spill.i = alloca ptr, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4146, metadata !DIExpression()), !dbg !4147
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4148
  %_5 = load ptr, ptr %3, align 8, !dbg !4148, !nonnull !24, !noundef !24
  store ptr %_5, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !4149, metadata !DIExpression()), !dbg !4154
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h532880c291436c84E"(ptr %_5) #10, !dbg !4148
  %_2 = xor i1 %_3, true, !dbg !4156
  call void @llvm.assume(i1 %_2), !dbg !4157
  br i1 true, label %bb3, label %bb5, !dbg !4158

bb5:                                              ; preds = %bb3, %start
  %4 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4159
  %_13 = load ptr, ptr %4, align 8, !dbg !4159, !nonnull !24, !noundef !24
  store ptr %_13, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4149, metadata !DIExpression()), !dbg !4160
  %_14 = load ptr, ptr %self, align 8, !dbg !4159, !noundef !24
  %_10 = icmp eq ptr %_13, %_14, !dbg !4159
  br i1 %_10, label %bb7, label %bb8, !dbg !4159

bb3:                                              ; preds = %start
  %_9 = load ptr, ptr %self, align 8, !dbg !4162, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0ffc917f38722119E"(ptr %_9) #10, !dbg !4162
  %_7 = xor i1 %_8, true, !dbg !4163
  call void @llvm.assume(i1 %_7), !dbg !4164
  br label %bb5, !dbg !4165

bb8:                                              ; preds = %bb5
  store ptr %self, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !4166, metadata !DIExpression()), !dbg !4174
  store i64 1, ptr %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill.i, metadata !4171, metadata !DIExpression()), !dbg !4176
  %5 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4177
  %_9.i = load ptr, ptr %5, align 8, !dbg !4177, !nonnull !24, !noundef !24
  store ptr %_9.i, ptr %self.dbg.spill.i5.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5.i, metadata !4149, metadata !DIExpression()), !dbg !4178
  store ptr %_9.i, ptr %old.dbg.spill.i, align 8, !dbg !4177
  call void @llvm.dbg.declare(metadata ptr %old.dbg.spill.i, metadata !4172, metadata !DIExpression()), !dbg !4180
  %6 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4181
  %_13.i = load ptr, ptr %6, align 8, !dbg !4181, !nonnull !24, !noundef !24
  store ptr %_13.i, ptr %self.dbg.spill.i4.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4.i, metadata !4149, metadata !DIExpression()), !dbg !4182
  store ptr %_13.i, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !291, metadata !DIExpression()), !dbg !4184
  store i64 1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !297, metadata !DIExpression()), !dbg !4186
  store ptr %_13.i, ptr %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2.i, metadata !301, metadata !DIExpression()), !dbg !4187
  store i64 1, ptr %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1.i, metadata !306, metadata !DIExpression()), !dbg !4189
  %7 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_13.i, i64 1, !dbg !4190
  store ptr %7, ptr %0, align 8, !dbg !4190
  %_3.i.i = load ptr, ptr %0, align 8, !dbg !4190, !noundef !24
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_10.i = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h18bc62e0621d126cE"(ptr %_3.i.i) #10, !dbg !4191
  %8 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4192
  store ptr %_10.i, ptr %8, align 8, !dbg !4192
  store ptr %_9.i, ptr %1, align 8, !dbg !4193
  %9 = load ptr, ptr %1, align 8, !dbg !4194, !noundef !24
  store ptr %9, ptr %2, align 8, !dbg !4195
  br label %bb10, !dbg !4196

bb7:                                              ; preds = %bb5
  store ptr null, ptr %2, align 8, !dbg !4197
  br label %bb10, !dbg !4196

bb10:                                             ; preds = %bb8, %bb7
  %10 = load ptr, ptr %2, align 8, !dbg !4198, !align !504, !noundef !24
  ret ptr %10, !dbg !4198
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h928163773198b798E"(ptr align 8 %self) unnamed_addr #0 !dbg !4199 {
start:
  %self.dbg.spill.i7 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %x.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_19 = alloca ptr, align 8
  %_14 = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %predicate = alloca %"[closure@/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]", align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4204, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.declare(metadata ptr %predicate, metadata !4205, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4206, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.declare(metadata ptr %i, metadata !4210, metadata !DIExpression()), !dbg !4219
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4220
  %start1 = load ptr, ptr %3, align 8, !dbg !4220, !nonnull !24, !noundef !24
  store ptr %start1, ptr %start.dbg.spill, align 8, !dbg !4220
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !4208, metadata !DIExpression()), !dbg !4221
  br i1 false, label %bb1, label %bb5, !dbg !4221

bb5:                                              ; preds = %start
  %_10 = load ptr, ptr %self, align 8, !dbg !4221, !noundef !24
  store ptr %start1, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !4149, metadata !DIExpression()), !dbg !4222
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %4 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h8c59d9ec96e33016E"(ptr %_10, ptr %start1) #10, !dbg !4221
  store i64 %4, ptr %n, align 8, !dbg !4221
  br label %bb7, !dbg !4221

bb1:                                              ; preds = %start
  %_7 = load ptr, ptr %self, align 8, !dbg !4221, !noundef !24
  store ptr %_7, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !542, metadata !DIExpression()), !dbg !4224
  store ptr %_7, ptr %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i7, metadata !549, metadata !DIExpression()), !dbg !4226
  store ptr %_7, ptr %0, align 8, !dbg !4228
  %5 = load i64, ptr %0, align 8, !dbg !4228, !noundef !24
  store ptr %start1, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !4149, metadata !DIExpression()), !dbg !4229
  store ptr %start1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3505, metadata !DIExpression()), !dbg !4231
  store ptr %start1, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !1270, metadata !DIExpression()), !dbg !4233
  store ptr %start1, ptr %1, align 8, !dbg !4235
  %6 = load i64, ptr %1, align 8, !dbg !4235, !noundef !24
  store i64 %5, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4236, metadata !DIExpression()), !dbg !4242
  store i64 %6, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !4241, metadata !DIExpression()), !dbg !4244
  %7 = sub i64 %5, %6, !dbg !4245
  store i64 %7, ptr %n, align 8, !dbg !4221
  br label %bb7, !dbg !4221

bb7:                                              ; preds = %bb5, %bb1
  store i64 0, ptr %i, align 8, !dbg !4246
  br label %bb8, !dbg !4247

bb8:                                              ; preds = %bb14, %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %8 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h20e1df60141b61e8E"(ptr align 8 %self) #10, !dbg !4248
  store ptr %8, ptr %_14, align 8, !dbg !4248
  %9 = load ptr, ptr %_14, align 8, !dbg !4249, !noundef !24
  %10 = ptrtoint ptr %9 to i64, !dbg !4249
  %11 = icmp eq i64 %10, 0, !dbg !4249
  %_15 = select i1 %11, i64 0, i64 1, !dbg !4249
  %12 = icmp eq i64 %_15, 1, !dbg !4249
  br i1 %12, label %bb10, label %bb15, !dbg !4249

bb10:                                             ; preds = %bb8
  %x = load ptr, ptr %_14, align 8, !dbg !4250, !nonnull !24, !align !504, !noundef !24
  store ptr %x, ptr %x.dbg.spill, align 8, !dbg !4250
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4212, metadata !DIExpression()), !dbg !4250
  store ptr %x, ptr %_19, align 8, !dbg !4251
  %13 = load ptr, ptr %_19, align 8, !dbg !4251, !nonnull !24, !align !504, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %_17 = call zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h008aac30a1d7221eE"(ptr align 1 %predicate, ptr align 8 %13) #10, !dbg !4251
  br i1 %_17, label %bb12, label %bb13, !dbg !4251

bb15:                                             ; preds = %bb8
  store i64 0, ptr %2, align 8, !dbg !4252
  br label %bb16, !dbg !4253

bb16:                                             ; preds = %bb12, %bb15
  %14 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !4254
  %15 = load i64, ptr %14, align 8, !dbg !4254, !range !1053, !noundef !24
  %16 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !4254
  %17 = load i64, ptr %16, align 8, !dbg !4254
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0, !dbg !4254
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1, !dbg !4254
  ret { i64, i64 } %19, !dbg !4254

bb13:                                             ; preds = %bb10
  %20 = load i64, ptr %i, align 8, !dbg !4255, !noundef !24
  %21 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 1), !dbg !4255
  %_24.0 = extractvalue { i64, i1 } %21, 0, !dbg !4255
  %_24.1 = extractvalue { i64, i1 } %21, 1, !dbg !4255
  %22 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !4255
  br i1 %22, label %panic, label %bb14, !dbg !4255

bb12:                                             ; preds = %bb10
  %_21 = load i64, ptr %i, align 8, !dbg !4256, !noundef !24
  %_22 = load i64, ptr %n, align 8, !dbg !4257, !noundef !24
  %_20 = icmp ult i64 %_21, %_22, !dbg !4256
  call void @llvm.assume(i1 %_20), !dbg !4258
  %_23 = load i64, ptr %i, align 8, !dbg !4259, !noundef !24
  %23 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !4260
  store i64 %_23, ptr %23, align 8, !dbg !4260
  store i64 1, ptr %2, align 8, !dbg !4260
  br label %bb16, !dbg !4253

bb14:                                             ; preds = %bb13
  store i64 %_24.0, ptr %i, align 8, !dbg !4255
  br label %bb8, !dbg !4247

panic:                                            ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc549) #11, !dbg !4255
  unreachable, !dbg !4255
}

; bootloader::bootinfo::memory_map::MemoryMap::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h6b6051dd9a37da0fE(ptr sret(%"bootinfo::memory_map::MemoryMap") %0) unnamed_addr #1 !dbg !4261 {
start:
  %_2 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_1 = alloca [64 x %"bootinfo::memory_map::MemoryRegion"], align 8
; call bootloader::bootinfo::memory_map::MemoryRegion::empty
  call void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h524310d26fec40d5E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_2) #10, !dbg !4265
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 0, !dbg !4266
  %2 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 64, !dbg !4266
  br label %repeat_loop_header, !dbg !4266

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %3 = phi ptr [ %1, %start ], [ %5, %repeat_loop_body ]
  %4 = icmp ne ptr %3, %2
  br i1 %4, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_2, i64 24, i1 false)
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %3, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_1, i64 1536, i1 false), !dbg !4267
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %0, i32 0, i32 1, !dbg !4267
  store i64 0, ptr %6, align 8, !dbg !4267
  ret void, !dbg !4268
}

; bootloader::bootinfo::memory_map::MemoryMap::add_region
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h2fba7a148fe734e3E(ptr align 8 %self, ptr %region) unnamed_addr #1 !dbg !4269 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4274, metadata !DIExpression()), !dbg !4276
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4275, metadata !DIExpression()), !dbg !4277
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17ha022e0a6cd345ccbE(ptr align 8 %self) #10, !dbg !4278
  %_4 = icmp ult i64 %_5, 64, !dbg !4278
  %_3 = xor i1 %_4, true, !dbg !4279
  br i1 %_3, label %bb2, label %bb3, !dbg !4279

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_8 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17ha022e0a6cd345ccbE(ptr align 8 %self) #10, !dbg !4280
  %_11 = icmp ult i64 %_8, 64, !dbg !4281
  %0 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !4281
  br i1 %0, label %bb5, label %panic, !dbg !4281

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @alloc550, i64 37, ptr align 8 @alloc552) #11, !dbg !4279
  unreachable, !dbg !4279

bb5:                                              ; preds = %bb3
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %self, i64 0, i64 %_8, !dbg !4281
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %region, i64 24, i1 false), !dbg !4281
  %2 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4282
  %3 = load i64, ptr %2, align 8, !dbg !4282, !noundef !24
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %3, i64 1), !dbg !4282
  %_12.0 = extractvalue { i64, i1 } %4, 0, !dbg !4282
  %_12.1 = extractvalue { i64, i1 } %4, 1, !dbg !4282
  %5 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !4282
  br i1 %5, label %panic1, label %bb6, !dbg !4282

panic:                                            ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64 %_8, i64 64, ptr align 8 @alloc554) #11, !dbg !4281
  unreachable, !dbg !4281

bb6:                                              ; preds = %bb5
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4282
  store i64 %_12.0, ptr %6, align 8, !dbg !4282
; call bootloader::bootinfo::memory_map::MemoryMap::sort
  call void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h56c79485cce96702E(ptr align 8 %self) #10, !dbg !4283
  ret void, !dbg !4284

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc556) #11, !dbg !4282
  unreachable, !dbg !4282
}

; bootloader::bootinfo::memory_map::MemoryMap::sort
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h56c79485cce96702E(ptr align 8 %self) unnamed_addr #1 !dbg !4285 {
start:
  %first_zero_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { ptr, ptr }, align 8
  %_6 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4289, metadata !DIExpression()), !dbg !4292
; call core::slice::<impl [T]>::sort_unstable_by
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h28a1a9a5f6304447E"(ptr align 8 %self, i64 64) #10, !dbg !4293
; call core::slice::<impl [T]>::iter
  %0 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hba14cdcfec7012a6E"(ptr align 8 %self, i64 64) #10, !dbg !4294
  store { ptr, ptr } %0, ptr %_8, align 8, !dbg !4294
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %1 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h928163773198b798E"(ptr align 8 %_8) #10, !dbg !4294
  store { i64, i64 } %1, ptr %_6, align 8, !dbg !4294
  %_12 = load i64, ptr %_6, align 8, !dbg !4295, !range !1053, !noundef !24
  %2 = icmp eq i64 %_12, 1, !dbg !4295
  br i1 %2, label %bb4, label %bb5, !dbg !4295

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4296
  %first_zero_index = load i64, ptr %3, align 8, !dbg !4296, !noundef !24
  store i64 %first_zero_index, ptr %first_zero_index.dbg.spill, align 8, !dbg !4296
  call void @llvm.dbg.declare(metadata ptr %first_zero_index.dbg.spill, metadata !4290, metadata !DIExpression()), !dbg !4296
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4297
  store i64 %first_zero_index, ptr %4, align 8, !dbg !4297
  br label %bb5, !dbg !4298

bb5:                                              ; preds = %bb4, %start
  ret void, !dbg !4299
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h395a9740f6ec9df5E"(ptr align 1 %_1, ptr align 8 %r1, ptr align 8 %r2) unnamed_addr #0 !dbg !4300 {
start:
  %r2.dbg.spill = alloca ptr, align 8
  %r1.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %ordering = alloca i8, align 1
  %0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4308, metadata !DIExpression()), !dbg !4309
  store ptr %r1, ptr %r1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r1.dbg.spill, metadata !4304, metadata !DIExpression()), !dbg !4310
  store ptr %r2, ptr %r2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r2.dbg.spill, metadata !4305, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.declare(metadata ptr %ordering, metadata !4306, metadata !DIExpression()), !dbg !4312
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_4 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h7d078b191d29adecE(ptr align 8 %r1) #10, !dbg !4313
  br i1 %_4, label %bb2, label %bb3, !dbg !4313

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_6 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h7d078b191d29adecE(ptr align 8 %r2) #10, !dbg !4314
  br i1 %_6, label %bb5, label %bb6, !dbg !4314

bb2:                                              ; preds = %start
  store i8 1, ptr %0, align 1, !dbg !4315
  br label %bb11, !dbg !4316

bb11:                                             ; preds = %bb10, %bb9, %bb5, %bb2
  %1 = load i8, ptr %0, align 1, !dbg !4317, !range !739, !noundef !24
  ret i8 %1, !dbg !4317

bb6:                                              ; preds = %bb3
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %2 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h20daabefeafea6fcE"(ptr align 8 %r1, ptr align 8 %r2) #10, !dbg !4318, !range !739
  store i8 %2, ptr %ordering, align 1, !dbg !4318
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %_11 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h08b9696236dc6075E"(ptr align 1 %ordering, ptr align 1 @alloc71) #10, !dbg !4319
  br i1 %_11, label %bb9, label %bb10, !dbg !4319

bb5:                                              ; preds = %bb3
  store i8 -1, ptr %0, align 1, !dbg !4320
  br label %bb11, !dbg !4321

bb10:                                             ; preds = %bb6
  %3 = load i8, ptr %ordering, align 1, !dbg !4322, !range !739, !noundef !24
  store i8 %3, ptr %0, align 1, !dbg !4322
  br label %bb11, !dbg !4323

bb9:                                              ; preds = %bb6
  %_13 = getelementptr inbounds { i64, i64 }, ptr %r1, i32 0, i32 1, !dbg !4324
  %_14 = getelementptr inbounds { i64, i64 }, ptr %r2, i32 0, i32 1, !dbg !4325
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %4 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h20daabefeafea6fcE"(ptr align 8 %_13, ptr align 8 %_14) #10, !dbg !4324, !range !739
  store i8 %4, ptr %0, align 1, !dbg !4324
  br label %bb11, !dbg !4324
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h008aac30a1d7221eE"(ptr align 1 %_1, ptr align 8 %r) unnamed_addr #0 !dbg !4326 {
start:
  %r.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4332, metadata !DIExpression()), !dbg !4333
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !4331, metadata !DIExpression()), !dbg !4334
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %0 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h7d078b191d29adecE(ptr align 8 %r) #10, !dbg !4335
  ret i1 %0, !dbg !4336
}

; bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
; Function Attrs: noredzone nounwind
define internal i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17ha022e0a6cd345ccbE(ptr align 8 %self) unnamed_addr #1 !dbg !4337 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4342, metadata !DIExpression()), !dbg !4343
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4344
  %_2 = load i64, ptr %0, align 8, !dbg !4344, !noundef !24
  ret i64 %_2, !dbg !4345
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e37451526df444dE"(ptr align 8 %self) unnamed_addr #1 !dbg !4346 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4351, metadata !DIExpression()), !dbg !4352
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17ha022e0a6cd345ccbE(ptr align 8 %self) #10, !dbg !4353
  store i64 0, ptr %_4, align 8, !dbg !4354
  %0 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4354
  store i64 %_5, ptr %0, align 8, !dbg !4354
  %1 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !4355
  %2 = load i64, ptr %1, align 8, !dbg !4355, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4355
  %4 = load i64, ptr %3, align 8, !dbg !4355, !noundef !24
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %5 = call { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf82c206c24146943E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc558) #10, !dbg !4355
  %_2.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4355
  %_2.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4355
  %6 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !4356
  %7 = insertvalue { ptr, i64 } %6, i64 %_2.1, 1, !dbg !4356
  ret { ptr, i64 } %7, !dbg !4356
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17he056234f3602d585E"(ptr align 8 %self) unnamed_addr #1 !dbg !4357 {
start:
  %next_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4362, metadata !DIExpression()), !dbg !4365
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %next_index = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17ha022e0a6cd345ccbE(ptr align 8 %self) #10, !dbg !4366
  store i64 %next_index, ptr %next_index.dbg.spill, align 8, !dbg !4366
  call void @llvm.dbg.declare(metadata ptr %next_index.dbg.spill, metadata !4363, metadata !DIExpression()), !dbg !4367
  store i64 0, ptr %_6, align 8, !dbg !4368
  %0 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4368
  store i64 %next_index, ptr %0, align 8, !dbg !4368
  %1 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !4369
  %2 = load i64, ptr %1, align 8, !dbg !4369, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4369
  %4 = load i64, ptr %3, align 8, !dbg !4369, !noundef !24
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17ha5ddd80e808f2e45E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc560) #10, !dbg !4369
  %_4.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4369
  %_4.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4369
  %6 = insertvalue { ptr, i64 } undef, ptr %_4.0, 0, !dbg !4370
  %7 = insertvalue { ptr, i64 } %6, i64 %_4.1, 1, !dbg !4370
  ret { ptr, i64 } %7, !dbg !4370
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17haef581e8293cb4faE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4371 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca %"core::fmt::builders::DebugList<'_, '_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4376, metadata !DIExpression()), !dbg !4378
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4377, metadata !DIExpression()), !dbg !4379
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17h5c20ecf7b2a46a84E(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") %_6, ptr align 8 %f) #10, !dbg !4380
; call <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e37451526df444dE"(ptr align 8 %self) #10, !dbg !4381
  %_9.0 = extractvalue { ptr, i64 } %0, 0, !dbg !4381
  %_9.1 = extractvalue { ptr, i64 } %0, 1, !dbg !4381
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hba14cdcfec7012a6E"(ptr align 8 %_9.0, i64 %_9.1) #10, !dbg !4381
  %_7.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4381
  %_7.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4381
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h3b408f9ace557e17E(ptr align 8 %_6, ptr %_7.0, ptr %_7.1) #10, !dbg !4380
; call core::fmt::builders::DebugList::finish
  %2 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17haf64e70f8c99453fE(ptr align 8 %_4) #10, !dbg !4380
  ret i1 %2, !dbg !4382
}

; bootloader::bootinfo::memory_map::MemoryRegion::empty
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h524310d26fec40d5E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0) unnamed_addr #1 !dbg !4383 {
start:
  %_1 = alloca { i64, i64 }, align 8
  store i64 0, ptr %_1, align 8, !dbg !4386
  %1 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4386
  store i64 0, ptr %1, align 8, !dbg !4386
  %2 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 0, !dbg !4387
  %3 = load i64, ptr %2, align 8, !dbg !4387, !noundef !24
  %4 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4387
  %5 = load i64, ptr %4, align 8, !dbg !4387, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4387
  store i64 %3, ptr %6, align 8, !dbg !4387
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4387
  store i64 %5, ptr %7, align 8, !dbg !4387
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4387
  store i32 11, ptr %8, align 8, !dbg !4387
  ret void, !dbg !4388
}

; bootloader::bootinfo::memory_map::FrameRange::new
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17he095772a33ed67b7E(i64 %start_addr, i64 %end_addr) unnamed_addr #1 !dbg !4389 {
start:
  %last_byte.dbg.spill = alloca i64, align 8
  %end_addr.dbg.spill = alloca i64, align 8
  %start_addr.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %start_addr, ptr %start_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %start_addr.dbg.spill, metadata !4393, metadata !DIExpression()), !dbg !4397
  store i64 %end_addr, ptr %end_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %end_addr.dbg.spill, metadata !4394, metadata !DIExpression()), !dbg !4398
  %_4.0 = sub i64 %end_addr, 1, !dbg !4399
  %_4.1 = icmp ult i64 %end_addr, 1, !dbg !4399
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !4399
  br i1 %1, label %panic, label %bb1, !dbg !4399

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %last_byte.dbg.spill, align 8, !dbg !4399
  call void @llvm.dbg.declare(metadata ptr %last_byte.dbg.spill, metadata !4395, metadata !DIExpression()), !dbg !4400
  %_5 = udiv i64 %start_addr, 4096, !dbg !4401
  %_7 = udiv i64 %_4.0, 4096, !dbg !4402
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7, i64 1), !dbg !4402
  %_8.0 = extractvalue { i64, i1 } %2, 0, !dbg !4402
  %_8.1 = extractvalue { i64, i1 } %2, 1, !dbg !4402
  %3 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4402
  br i1 %3, label %panic1, label %bb2, !dbg !4402

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc562) #11, !dbg !4399
  unreachable, !dbg !4399

bb2:                                              ; preds = %bb1
  store i64 %_5, ptr %0, align 8, !dbg !4403
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4403
  store i64 %_8.0, ptr %4, align 8, !dbg !4403
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4404
  %6 = load i64, ptr %5, align 8, !dbg !4404, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4404
  %8 = load i64, ptr %7, align 8, !dbg !4404, !noundef !24
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !4404
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !4404
  ret { i64, i64 } %10, !dbg !4404

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc564) #11, !dbg !4402
  unreachable, !dbg !4402
}

; bootloader::bootinfo::memory_map::FrameRange::is_empty
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h7d078b191d29adecE(ptr align 8 %self) unnamed_addr #1 !dbg !4405 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4410, metadata !DIExpression()), !dbg !4411
  %_2 = load i64, ptr %self, align 8, !dbg !4412, !noundef !24
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4413
  %_3 = load i64, ptr %0, align 8, !dbg !4413, !noundef !24
  %1 = icmp eq i64 %_2, %_3, !dbg !4412
  ret i1 %1, !dbg !4414
}

; bootloader::bootinfo::memory_map::FrameRange::start_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h534325a16159babbE(ptr align 8 %self) unnamed_addr #1 !dbg !4415 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4419, metadata !DIExpression()), !dbg !4420
  %_2 = load i64, ptr %self, align 8, !dbg !4421, !noundef !24
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4421
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !4421
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !4421
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4421
  br i1 %1, label %panic, label %bb1, !dbg !4421

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4422

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc566) #11, !dbg !4421
  unreachable, !dbg !4421
}

; bootloader::bootinfo::memory_map::FrameRange::end_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hbd4af1c861e0ef66E(ptr align 8 %self) unnamed_addr #1 !dbg !4423 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4425, metadata !DIExpression()), !dbg !4426
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4427
  %_2 = load i64, ptr %0, align 8, !dbg !4427, !noundef !24
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4427
  %_3.0 = extractvalue { i64, i1 } %1, 0, !dbg !4427
  %_3.1 = extractvalue { i64, i1 } %1, 1, !dbg !4427
  %2 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4427
  br i1 %2, label %panic, label %bb1, !dbg !4427

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4428

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc568) #11, !dbg !4427
  unreachable, !dbg !4427
}

; <bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h5c9a52575bd523d7E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4429 {
start:
  %width.dbg.spill.i1 = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i2 = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i3 = alloca i32, align 4
  %align.dbg.spill.i4 = alloca i8, align 1
  %fill.dbg.spill.i5 = alloca i32, align 4
  %position.dbg.spill.i6 = alloca i64, align 8
  %_7.i7 = alloca %"core::fmt::rt::v1::FormatSpec", align 8
  %width.dbg.spill.i = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i = alloca i32, align 4
  %align.dbg.spill.i = alloca i8, align 1
  %fill.dbg.spill.i = alloca i32, align 4
  %position.dbg.spill.i = alloca i64, align 8
  %_7.i = alloca %"core::fmt::rt::v1::FormatSpec", align 8
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_24 = alloca { i64, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_21 = alloca %"core::fmt::rt::v1::Argument", align 8
  %_20 = alloca { i64, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_17 = alloca %"core::fmt::rt::v1::Argument", align 8
  %_16 = alloca [2 x %"core::fmt::rt::v1::Argument"], align 8
  %_13 = alloca i64, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca [2 x { ptr, ptr }], align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4434, metadata !DIExpression()), !dbg !4436
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4435, metadata !DIExpression()), !dbg !4437
; call bootloader::bootinfo::memory_map::FrameRange::start_addr
  %0 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h534325a16159babbE(ptr align 8 %self) #10, !dbg !4438
  store i64 %0, ptr %_10, align 8, !dbg !4438
; call core::fmt::ArgumentV1::new_lower_hex
  %1 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_lower_hex17h433ba05b4d707d9bE(ptr align 8 %_10) #10, !dbg !4439
  %_8.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4439
  %_8.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4439
; call bootloader::bootinfo::memory_map::FrameRange::end_addr
  %2 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hbd4af1c861e0ef66E(ptr align 8 %self) #10, !dbg !4440
  store i64 %2, ptr %_13, align 8, !dbg !4440
; call core::fmt::ArgumentV1::new_lower_hex
  %3 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_lower_hex17h433ba05b4d707d9bE(ptr align 8 %_13) #10, !dbg !4439
  %_11.0 = extractvalue { ptr, ptr } %3, 0, !dbg !4439
  %_11.1 = extractvalue { ptr, ptr } %3, 1, !dbg !4439
  %4 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 0, !dbg !4439
  %5 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 0, !dbg !4439
  store ptr %_8.0, ptr %5, align 8, !dbg !4439
  %6 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 1, !dbg !4439
  store ptr %_8.1, ptr %6, align 8, !dbg !4439
  %7 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 1, !dbg !4439
  %8 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 0, !dbg !4439
  store ptr %_11.0, ptr %8, align 8, !dbg !4439
  %9 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 1, !dbg !4439
  store ptr %_11.1, ptr %9, align 8, !dbg !4439
  store i64 2, ptr %_19, align 8, !dbg !4439
  store i64 2, ptr %_20, align 8, !dbg !4439
  %10 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !4439
  %11 = load i64, ptr %10, align 8, !dbg !4439, !range !4441, !noundef !24
  %12 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !4439
  %13 = load i64, ptr %12, align 8, !dbg !4439
  %14 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 0, !dbg !4439
  %15 = load i64, ptr %14, align 8, !dbg !4439, !range !4441, !noundef !24
  %16 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !4439
  %17 = load i64, ptr %16, align 8, !dbg !4439
  store i64 0, ptr %position.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i6, metadata !4442, metadata !DIExpression()), !dbg !4453
  store i32 32, ptr %fill.dbg.spill.i5, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i5, metadata !4448, metadata !DIExpression()), !dbg !4455
  store i8 3, ptr %align.dbg.spill.i4, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i4, metadata !4449, metadata !DIExpression()), !dbg !4456
  store i32 4, ptr %flags.dbg.spill.i3, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i3, metadata !4450, metadata !DIExpression()), !dbg !4457
  store i64 %11, ptr %precision.dbg.spill.i2, align 8
  %18 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i2, i32 0, i32 1
  store i64 %13, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i2, metadata !4451, metadata !DIExpression()), !dbg !4458
  store i64 %15, ptr %width.dbg.spill.i1, align 8
  %19 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i1, i32 0, i32 1
  store i64 %17, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i1, metadata !4452, metadata !DIExpression()), !dbg !4459
  %20 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 3, !dbg !4460
  store i32 32, ptr %20, align 4, !dbg !4460
  %21 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 4, !dbg !4460
  store i8 3, ptr %21, align 8, !dbg !4460
  %22 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 2, !dbg !4460
  store i32 4, ptr %22, align 8, !dbg !4460
  store i64 %11, ptr %_7.i7, align 8, !dbg !4460
  %23 = getelementptr inbounds { i64, i64 }, ptr %_7.i7, i32 0, i32 1, !dbg !4460
  store i64 %13, ptr %23, align 8, !dbg !4460
  %24 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 1, !dbg !4460
  store i64 %15, ptr %24, align 8, !dbg !4460
  %25 = getelementptr inbounds { i64, i64 }, ptr %24, i32 0, i32 1, !dbg !4460
  store i64 %17, ptr %25, align 8, !dbg !4460
  %26 = getelementptr inbounds %"core::fmt::rt::v1::Argument", ptr %_17, i32 0, i32 1, !dbg !4461
  store i64 0, ptr %26, align 8, !dbg !4461
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_17, ptr align 8 %_7.i7, i64 48, i1 false), !dbg !4461
  store i64 2, ptr %_23, align 8, !dbg !4439
  store i64 2, ptr %_24, align 8, !dbg !4439
  %27 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !4439
  %28 = load i64, ptr %27, align 8, !dbg !4439, !range !4441, !noundef !24
  %29 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !4439
  %30 = load i64, ptr %29, align 8, !dbg !4439
  %31 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 0, !dbg !4439
  %32 = load i64, ptr %31, align 8, !dbg !4439, !range !4441, !noundef !24
  %33 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 1, !dbg !4439
  %34 = load i64, ptr %33, align 8, !dbg !4439
  store i64 1, ptr %position.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i, metadata !4442, metadata !DIExpression()), !dbg !4462
  store i32 32, ptr %fill.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i, metadata !4448, metadata !DIExpression()), !dbg !4464
  store i8 3, ptr %align.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !4449, metadata !DIExpression()), !dbg !4465
  store i32 4, ptr %flags.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i, metadata !4450, metadata !DIExpression()), !dbg !4466
  store i64 %28, ptr %precision.dbg.spill.i, align 8
  %35 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i, i32 0, i32 1
  store i64 %30, ptr %35, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i, metadata !4451, metadata !DIExpression()), !dbg !4467
  store i64 %32, ptr %width.dbg.spill.i, align 8
  %36 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i, i32 0, i32 1
  store i64 %34, ptr %36, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i, metadata !4452, metadata !DIExpression()), !dbg !4468
  %37 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 3, !dbg !4469
  store i32 32, ptr %37, align 4, !dbg !4469
  %38 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 4, !dbg !4469
  store i8 3, ptr %38, align 8, !dbg !4469
  %39 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 2, !dbg !4469
  store i32 4, ptr %39, align 8, !dbg !4469
  store i64 %28, ptr %_7.i, align 8, !dbg !4469
  %40 = getelementptr inbounds { i64, i64 }, ptr %_7.i, i32 0, i32 1, !dbg !4469
  store i64 %30, ptr %40, align 8, !dbg !4469
  %41 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 1, !dbg !4469
  store i64 %32, ptr %41, align 8, !dbg !4469
  %42 = getelementptr inbounds { i64, i64 }, ptr %41, i32 0, i32 1, !dbg !4469
  store i64 %34, ptr %42, align 8, !dbg !4469
  %43 = getelementptr inbounds %"core::fmt::rt::v1::Argument", ptr %_21, i32 0, i32 1, !dbg !4470
  store i64 1, ptr %43, align 8, !dbg !4470
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_21, ptr align 8 %_7.i, i64 48, i1 false), !dbg !4470
  %44 = getelementptr inbounds [2 x %"core::fmt::rt::v1::Argument"], ptr %_16, i64 0, i64 0, !dbg !4439
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %44, ptr align 8 %_17, i64 56, i1 false), !dbg !4439
  %45 = getelementptr inbounds [2 x %"core::fmt::rt::v1::Argument"], ptr %_16, i64 0, i64 1, !dbg !4439
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %_21, i64 56, i1 false), !dbg !4439
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17h34d6d65ca81cd693E(ptr sret(%"core::fmt::Arguments<'_>") %_3, ptr align 8 @alloc126, i64 3, ptr align 8 %_7, i64 2, ptr align 8 %_16, i64 2) #10, !dbg !4439
; call core::fmt::Formatter::write_fmt
  %46 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h17fce91e79ab4de5E(ptr align 8 %f, ptr %_3) #10, !dbg !4439
  ret i1 %46, !dbg !4471
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::convert::From<bootloader::bootinfo::memory_map::E820MemoryRegion>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17h32d60b0d6d39abe8E"(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %region) unnamed_addr #1 !dbg !4472 {
start:
  %_9 = alloca [1 x { ptr, ptr }], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %t = alloca i32, align 4
  %region_type = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4483, metadata !DIExpression()), !dbg !4488
  call void @llvm.dbg.declare(metadata ptr %region_type, metadata !4484, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.declare(metadata ptr %t, metadata !4486, metadata !DIExpression()), !dbg !4490
  %1 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4491
  %2 = load i32, ptr %1, align 8, !dbg !4491, !noundef !24
  switch i32 %2, label %bb1 [
    i32 1, label %bb2
    i32 2, label %bb3
    i32 3, label %bb4
    i32 4, label %bb5
    i32 5, label %bb6
  ], !dbg !4491

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4492
  %4 = load i32, ptr %3, align 8, !dbg !4492, !noundef !24
  store i32 %4, ptr %t, align 4, !dbg !4492
; call core::fmt::ArgumentV1::new_display
  %5 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17hba5a2acf17c1c851E(ptr align 4 %t) #10, !dbg !4493
  %_10.0 = extractvalue { ptr, ptr } %5, 0, !dbg !4493
  %_10.1 = extractvalue { ptr, ptr } %5, 1, !dbg !4493
  %6 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_9, i64 0, i64 0, !dbg !4493
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0, !dbg !4493
  store ptr %_10.0, ptr %7, align 8, !dbg !4493
  %8 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1, !dbg !4493
  store ptr %_10.1, ptr %8, align 8, !dbg !4493
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h30dac65f16f7140aE(ptr sret(%"core::fmt::Arguments<'_>") %_5, ptr align 8 @alloc240, i64 1, ptr align 8 %_9, i64 1) #10, !dbg !4493
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0c6ec1399a51edb5E(ptr %_5, ptr align 8 @alloc570) #11, !dbg !4493
  unreachable, !dbg !4493

bb2:                                              ; preds = %start
  store i32 0, ptr %region_type, align 4, !dbg !4494
  br label %bb9, !dbg !4494

bb3:                                              ; preds = %start
  store i32 2, ptr %region_type, align 4, !dbg !4495
  br label %bb9, !dbg !4495

bb4:                                              ; preds = %start
  store i32 3, ptr %region_type, align 4, !dbg !4496
  br label %bb9, !dbg !4496

bb5:                                              ; preds = %start
  store i32 4, ptr %region_type, align 4, !dbg !4497
  br label %bb9, !dbg !4497

bb6:                                              ; preds = %start
  store i32 5, ptr %region_type, align 4, !dbg !4498
  br label %bb9, !dbg !4498

bb9:                                              ; preds = %bb2, %bb3, %bb4, %bb5, %bb6
  %_13 = load i64, ptr %region, align 8, !dbg !4499, !noundef !24
  %_15 = load i64, ptr %region, align 8, !dbg !4500, !noundef !24
  %9 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 1, !dbg !4501
  %_16 = load i64, ptr %9, align 8, !dbg !4501, !noundef !24
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 %_16), !dbg !4500
  %_17.0 = extractvalue { i64, i1 } %10, 0, !dbg !4500
  %_17.1 = extractvalue { i64, i1 } %10, 1, !dbg !4500
  %11 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !4500
  br i1 %11, label %panic, label %bb10, !dbg !4500

bb10:                                             ; preds = %bb9
; call bootloader::bootinfo::memory_map::FrameRange::new
  %12 = call { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17he095772a33ed67b7E(i64 %_13, i64 %_17.0) #10, !dbg !4502
  %_12.0 = extractvalue { i64, i64 } %12, 0, !dbg !4502
  %_12.1 = extractvalue { i64, i64 } %12, 1, !dbg !4502
  %_18 = load i32, ptr %region_type, align 4, !dbg !4503, !range !4504, !noundef !24
  %13 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4505
  store i64 %_12.0, ptr %13, align 8, !dbg !4505
  %14 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4505
  store i64 %_12.1, ptr %14, align 8, !dbg !4505
  %15 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4505
  store i32 %_18, ptr %15, align 8, !dbg !4505
  ret void, !dbg !4506

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc572) #11, !dbg !4500
  unreachable, !dbg !4500
}

; bootloader::bootinfo::BootInfo::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo3new17h9ec888e86ca2235aE(ptr sret(%"bootinfo::BootInfo") %0, ptr %memory_map, ptr %tls_template, i64 %recursive_page_table_addr, i64 %physical_memory_offset) unnamed_addr #1 !dbg !4507 {
start:
  %1 = alloca %"core::option::Option<bootinfo::TlsTemplate>", align 8
  %physical_memory_offset.dbg.spill = alloca i64, align 8
  %recursive_page_table_addr.dbg.spill = alloca i64, align 8
  %_7 = alloca %"bootinfo::TlsTemplate", align 8
  %_6 = alloca %"bootinfo::TlsTemplate", align 8
  %tls_template1 = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %memory_map, metadata !4517, metadata !DIExpression()), !dbg !4523
  call void @llvm.dbg.declare(metadata ptr %tls_template, metadata !4518, metadata !DIExpression()), !dbg !4524
  store i64 %recursive_page_table_addr, ptr %recursive_page_table_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %recursive_page_table_addr.dbg.spill, metadata !4519, metadata !DIExpression()), !dbg !4525
  store i64 %physical_memory_offset, ptr %physical_memory_offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %physical_memory_offset.dbg.spill, metadata !4520, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.declare(metadata ptr %tls_template1, metadata !4521, metadata !DIExpression()), !dbg !4527
  store i64 0, ptr %_6, align 8, !dbg !4528
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 1, !dbg !4528
  store i64 0, ptr %2, align 8, !dbg !4528
  %3 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 2, !dbg !4528
  store i64 0, ptr %3, align 8, !dbg !4528
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %tls_template, i64 32, i1 false), !dbg !4529
; call core::option::Option<T>::unwrap_or
  call void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hddab6344e80635f6E"(ptr sret(%"bootinfo::TlsTemplate") %tls_template1, ptr %1, ptr %_6) #10, !dbg !4529
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tls_template1, i64 24, i1 false), !dbg !4530
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %memory_map, i64 1544, i1 false), !dbg !4531
  %4 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 1, !dbg !4531
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_7, i64 24, i1 false), !dbg !4531
  %5 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 2, !dbg !4531
  store i8 0, ptr %5, align 8, !dbg !4531
  ret void, !dbg !4532
}

; bootloader::bootinfo::BootInfo::tls_template
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo12tls_template17hc0491335b5f4e2d6E(ptr sret(%"core::option::Option<bootinfo::TlsTemplate>") %0, ptr align 8 %self) unnamed_addr #1 !dbg !4533 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"bootinfo::TlsTemplate", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4538, metadata !DIExpression()), !dbg !4539
  %1 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4540
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %1, i32 0, i32 2, !dbg !4540
  %_3 = load i64, ptr %2, align 8, !dbg !4540, !noundef !24
  %_2 = icmp ugt i64 %_3, 0, !dbg !4540
  br i1 %_2, label %bb1, label %bb2, !dbg !4540

bb2:                                              ; preds = %start
  store i64 0, ptr %0, align 8, !dbg !4541
  br label %bb3, !dbg !4542

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4543
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %3, i64 24, i1 false), !dbg !4543
  %4 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %0, i32 0, i32 1, !dbg !4544
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_4, i64 24, i1 false), !dbg !4544
  store i64 1, ptr %0, align 8, !dbg !4544
  br label %bb3, !dbg !4542

bb3:                                              ; preds = %bb2, %bb1
  ret void, !dbg !4545
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h6cda603356b72d76E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4546 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4551, metadata !DIExpression()), !dbg !4553
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4552, metadata !DIExpression()), !dbg !4553
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4554
  store ptr %0, ptr %_10, align 8, !dbg !4554
; call core::fmt::Formatter::debug_struct_field2_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hc179f906b2cd2c4aE(ptr align 8 %f, ptr align 1 @alloc573, i64 12, ptr align 1 @alloc574, i64 5, ptr align 1 %self, ptr align 8 @vtable.7, ptr align 1 @alloc603, i64 11, ptr align 1 %_10, ptr align 8 @vtable.8) #10, !dbg !4553
  ret i1 %1, !dbg !4555
}

; <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17hb288a4d2801ef922E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4556 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_3 = alloca { ptr, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4561, metadata !DIExpression()), !dbg !4563
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4562, metadata !DIExpression()), !dbg !4563
  %0 = load i32, ptr %self, align 4, !dbg !4563, !range !4504, !noundef !24
  %_4 = zext i32 %0 to i64, !dbg !4563
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
    i64 10, label %bb13
    i64 11, label %bb14
    i64 12, label %bb15
    i64 13, label %bb16
    i64 14, label %bb1
  ], !dbg !4563

bb2:                                              ; preds = %start
  unreachable, !dbg !4563

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc596, ptr %1, align 8, !dbg !4563
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 6, ptr %2, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc595, ptr %3, align 8, !dbg !4563
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 5, ptr %4, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb5:                                              ; preds = %start
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc594, ptr %5, align 8, !dbg !4563
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 8, ptr %6, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb6:                                              ; preds = %start
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc593, ptr %7, align 8, !dbg !4563
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 15, ptr %8, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb7:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc592, ptr %9, align 8, !dbg !4563
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 7, ptr %10, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb8:                                              ; preds = %start
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc591, ptr %11, align 8, !dbg !4563
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 9, ptr %12, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb9:                                              ; preds = %start
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc590, ptr %13, align 8, !dbg !4563
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 6, ptr %14, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb10:                                             ; preds = %start
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc589, ptr %15, align 8, !dbg !4563
  %16 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 11, ptr %16, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb11:                                             ; preds = %start
  %17 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc588, ptr %17, align 8, !dbg !4563
  %18 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 9, ptr %18, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb12:                                             ; preds = %start
  %19 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc587, ptr %19, align 8, !dbg !4563
  %20 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 10, ptr %20, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb13:                                             ; preds = %start
  %21 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc586, ptr %21, align 8, !dbg !4563
  %22 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 9, ptr %22, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb14:                                             ; preds = %start
  %23 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc585, ptr %23, align 8, !dbg !4563
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 5, ptr %24, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb15:                                             ; preds = %start
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc611, ptr %25, align 8, !dbg !4563
  %26 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 8, ptr %26, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb16:                                             ; preds = %start
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc583, ptr %27, align 8, !dbg !4563
  %28 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 7, ptr %28, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb1:                                              ; preds = %start
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  store ptr @alloc582, ptr %29, align 8, !dbg !4563
  %30 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  store i64 13, ptr %30, align 8, !dbg !4563
  br label %bb17, !dbg !4564

bb17:                                             ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb14, %bb15, %bb16, %bb1
  %31 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4563
  %32 = load ptr, ptr %31, align 8, !dbg !4563, !nonnull !24, !align !2042, !noundef !24
  %33 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4563
  %34 = load i64, ptr %33, align 8, !dbg !4563, !noundef !24
; call core::fmt::Formatter::write_str
  %35 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h17e4356ac6ad8f11E(ptr align 8 %f, ptr align 1 %32, i64 %34) #10, !dbg !4563
  ret i1 %35, !dbg !4565
}

; <bootloader::bootinfo::memory_map::E820MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h0dd3b2e79a1f0df1E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4566 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_16 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4572, metadata !DIExpression()), !dbg !4574
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4573, metadata !DIExpression()), !dbg !4574
  %_9 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4575
  %_12 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 2, !dbg !4576
  %0 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 3, !dbg !4577
  store ptr %0, ptr %_16, align 8, !dbg !4577
; call core::fmt::Formatter::debug_struct_field4_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17hfef28726377450f8E(ptr align 8 %f, ptr align 1 @alloc597, i64 16, ptr align 1 @alloc625, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc602, i64 3, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc603, i64 11, ptr align 1 %_12, ptr align 8 @vtable.a, ptr align 1 @alloc607, i64 24, ptr align 1 %_16, ptr align 8 @vtable.b) #10, !dbg !4574
  ret i1 %1, !dbg !4578
}

; <bootloader::bootinfo::BootInfo as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17h572b6d57226f2120E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4579 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4584, metadata !DIExpression()), !dbg !4586
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4585, metadata !DIExpression()), !dbg !4586
  %_9 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4587
  %0 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 2, !dbg !4588
  store ptr %0, ptr %_13, align 8, !dbg !4588
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h2edc6f5a517c275eE(ptr align 8 %f, ptr align 1 @alloc611, i64 8, ptr align 1 @alloc612, i64 10, ptr align 1 %self, ptr align 8 @vtable.c, ptr align 1 @alloc616, i64 12, ptr align 1 %_9, ptr align 8 @vtable.d, ptr align 1 @alloc620, i64 15, ptr align 1 %_13, ptr align 8 @vtable.e) #10, !dbg !4586
  ret i1 %1, !dbg !4589
}

; <bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e156cacff61ac68E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4590 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4596, metadata !DIExpression()), !dbg !4598
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4597, metadata !DIExpression()), !dbg !4598
  %_9 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 1, !dbg !4599
  %0 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 2, !dbg !4600
  store ptr %0, ptr %_13, align 8, !dbg !4600
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h2edc6f5a517c275eE(ptr align 8 %f, ptr align 1 @alloc624, i64 11, ptr align 1 @alloc625, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc626, i64 9, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc627, i64 8, ptr align 1 %_13, ptr align 8 @vtable.f) #10, !dbg !4598
  ret i1 %1, !dbg !4601
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #5

; core::panicking::panic
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking5panic17h2341ccf462e0c328E(ptr align 1, i64, ptr align 8) unnamed_addr #6

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking14panic_nounwind17h2659e8ef56e187b0E(ptr align 1, i64) unnamed_addr #6

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17ha8d155eada135263E(i64, i64, ptr align 8) unnamed_addr #6

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hd239870e8b428734E(i64, i64, ptr align 8) unnamed_addr #6

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17he99f38bedb4c6ea0E(i64, i64, ptr align 8) unnamed_addr #6

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint noredzone nounwind
declare align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h2a5a6aea613c6daaE"(ptr align 8) unnamed_addr #0

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17h991e77de43ce5040E(ptr align 8) unnamed_addr #6

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint noredzone nounwind
declare void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h6649209037e05de7E"(ptr sret(%"core::ops::range::RangeInclusive<usize>"), i64, i64) unnamed_addr #0

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd77e6df17bcce7e4E"(i64, i64, ptr align 8) unnamed_addr #0

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #7

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h9aaa14f864d28c75E(ptr) unnamed_addr #1

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h58ef1f83be411d9fE(ptr, ptr, i64) unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #7

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hbc14bafef08aa5b6E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @_ZN4core3fmt10ArgumentV13new17he5efe772e33215bdE(ptr align 8, ptr) unnamed_addr #0

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h72a5cea0ccf13146E(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17h7320ebe70fc26996E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9a19d6967cce92e6E(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1980389e98a5a39dE"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h5b7faf12be3a5f79E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h9e931a554398795cE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h0343eb9916347eb4E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: noredzone nounwind
declare align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h9a76c3bde925a24eE(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; core::panicking::panic_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking9panic_fmt17h0c6ec1399a51edb5E(ptr, ptr align 8) unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hd773e796fbac3215E(ptr, ptr, i64) unnamed_addr #0

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h776e339449f18e87E(ptr, ptr, i64) unnamed_addr #0

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
declare ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17h101f728fd46e84c5E(ptr) unnamed_addr #0

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17h213baf498ad437b9E(i64, i64, ptr align 8) unnamed_addr #6

; Function Attrs: inaccessiblememonly nocallback nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #8

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17haf2af0e98b3b8b4eE"(i64, i64) unnamed_addr #0

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hac6ae5e1fdafd993E"(ptr align 8) unnamed_addr #0

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h3e38ac3e9c2c377aE(i64, i64) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h58a426f071ab13a9E"(i64, i64) unnamed_addr #0

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h26fee8b0705b7407E"(ptr align 8) unnamed_addr #0

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #9

; core::cmp::min
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3cmp3min17h40572bf1d69cc26bE(i64, i64) unnamed_addr #0

; core::panicking::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking13assert_failed17hc66d02a845f62d29E(i8, ptr align 8, ptr align 8, ptr, ptr align 8) unnamed_addr #6

; core::fmt::Formatter::debug_list
; Function Attrs: noredzone nounwind
declare void @_ZN4core3fmt9Formatter10debug_list17h5c20ecf7b2a46a84E(ptr sret(%"core::fmt::builders::DebugList<'_, '_>"), ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17haf64e70f8c99453fE(ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h17fce91e79ab4de5E(ptr align 8, ptr) unnamed_addr #1

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17hba5a2acf17c1c851E(ptr align 4) unnamed_addr #0

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hc179f906b2cd2c4aE(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h17e4356ac6ad8f11E(ptr align 8, ptr align 1, i64) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7f8fe1f5d6bf54ddE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field4_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17hfef28726377450f8E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he93ca6f7cd20c366E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field3_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17h2edc6f5a517c275eE(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h344f5f5bec46977eE"(ptr align 8, ptr align 8) unnamed_addr #1

attributes #0 = { inlinehint noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #1 = { noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #2 = { cold noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #3 = { noinline noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #4 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #6 = { cold noinline noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #7 = { argmemonly nocallback nofree nounwind willreturn }
attributes #8 = { inaccessiblememonly nocallback nofree nosync nounwind willreturn }
attributes #9 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!133, !134, !135}
!llvm.dbg.cu = !{!136}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !24, identifier: "2149f970ce9658f412e4dc9754e4596b")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !17, templateParams: !24, identifier: "ef6cafd47a88dc0087d3be0f23009826")
!14 = !DINamespace(name: "memory_map", scope: !15)
!15 = !DINamespace(name: "bootinfo", scope: !16)
!16 = !DINamespace(name: "bootloader", scope: null)
!17 = !{!18, !25}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !13, file: !2, baseType: !19, size: 128, align: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "FrameRange", scope: !14, file: !2, size: 128, align: 64, elements: !20, templateParams: !24, identifier: "dc1485c08bdd20233c3a28391abbc203")
!20 = !{!21, !23}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64)
!22 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!24 = !{}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !13, file: !2, baseType: !26, size: 32, align: 32, offset: 128)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MemoryRegionType", scope: !14, file: !2, baseType: !27, size: 32, align: 32, flags: DIFlagEnumClass, elements: !28)
!27 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43}
!29 = !DIEnumerator(name: "Usable", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "InUse", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "Reserved", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "AcpiReclaimable", value: 3, isUnsigned: true)
!33 = !DIEnumerator(name: "AcpiNvs", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "BadMemory", value: 5, isUnsigned: true)
!35 = !DIEnumerator(name: "Kernel", value: 6, isUnsigned: true)
!36 = !DIEnumerator(name: "KernelStack", value: 7, isUnsigned: true)
!37 = !DIEnumerator(name: "PageTable", value: 8, isUnsigned: true)
!38 = !DIEnumerator(name: "Bootloader", value: 9, isUnsigned: true)
!39 = !DIEnumerator(name: "FrameZero", value: 10, isUnsigned: true)
!40 = !DIEnumerator(name: "Empty", value: 11, isUnsigned: true)
!41 = !DIEnumerator(name: "BootInfo", value: 12, isUnsigned: true)
!42 = !DIEnumerator(name: "Package", value: 13, isUnsigned: true)
!43 = !DIEnumerator(name: "NonExhaustive", value: 14, isUnsigned: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !46, isLocal: true, isDefinition: true)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !47, vtableHolder: !19, templateParams: !24, identifier: "f11898327709b782893ea9a3dc81ff3b")
!47 = !{!48, !49, !50, !51}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !46, file: !2, baseType: !6, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !46, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !54, isLocal: true, isDefinition: true)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !55, vtableHolder: !60, templateParams: !24, identifier: "ca301d2d93b95feac061b4e33e32561a")
!55 = !{!56, !57, !58, !59}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !54, file: !2, baseType: !6, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !54, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !26, size: 64, align: 64, dwarfAddressSpace: 0)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "<u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !63, isLocal: true, isDefinition: true)
!63 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !64, vtableHolder: !22, templateParams: !24, identifier: "8b5c2750de7ad06458ea66def6cd4f20")
!64 = !{!65, !66, !67, !68}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !63, file: !2, baseType: !6, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !63, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!69 = !DIGlobalVariableExpression(var: !70, expr: !DIExpression())
!70 = distinct !DIGlobalVariable(name: "<u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !71, isLocal: true, isDefinition: true)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !72, vtableHolder: !27, templateParams: !24, identifier: "299c820aab8f28c4d019286a8e4fc0f1")
!72 = !{!73, !74, !75, !76}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !71, file: !2, baseType: !6, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !71, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!77 = !DIGlobalVariableExpression(var: !78, expr: !DIExpression())
!78 = distinct !DIGlobalVariable(name: "<&u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !79, isLocal: true, isDefinition: true)
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !80, vtableHolder: !85, templateParams: !24, identifier: "9118f31127f253fd369607fb2214e2f5")
!80 = !{!81, !82, !83, !84}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !79, file: !2, baseType: !6, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !79, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !88, isLocal: true, isDefinition: true)
!88 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !89, vtableHolder: !94, templateParams: !24, identifier: "fbd6f3304e41661f3b038fb9df7eaa81")
!89 = !{!90, !91, !92, !93}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !88, file: !2, baseType: !6, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !88, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!94 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryMap", scope: !14, file: !2, size: 12352, align: 64, elements: !95, templateParams: !24, identifier: "e5a2299c802929148b9d50aa6d30345e")
!95 = !{!96, !100}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !94, file: !2, baseType: !97, size: 12288, align: 64)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 12288, align: 64, elements: !98)
!98 = !{!99}
!99 = !DISubrange(count: 64, lowerBound: 0)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "next_entry_index", scope: !94, file: !2, baseType: !22, size: 64, align: 64, offset: 12288)
!101 = !DIGlobalVariableExpression(var: !102, expr: !DIExpression())
!102 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !103, isLocal: true, isDefinition: true)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !104, vtableHolder: !109, templateParams: !24, identifier: "6b2c3f34549a913bb9581991256e3afb")
!104 = !{!105, !106, !107, !108}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !103, file: !2, baseType: !6, size: 64, align: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !103, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!109 = !DICompositeType(tag: DW_TAG_structure_type, name: "TlsTemplate", scope: !15, file: !2, size: 192, align: 64, elements: !110, templateParams: !24, identifier: "c9b0731136e2655691566bcdc47cd373")
!110 = !{!111, !112, !113}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !109, file: !2, baseType: !22, size: 64, align: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "file_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "mem_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 128)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "<&u8 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !116, isLocal: true, isDefinition: true)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u8 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !117, vtableHolder: !122, templateParams: !24, identifier: "f0d5be5e0ebfe37f8009cecc4ba63cee")
!117 = !{!118, !119, !120, !121}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !116, file: !2, baseType: !6, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !116, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!123 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "<&u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !126, isLocal: true, isDefinition: true)
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !127, vtableHolder: !132, templateParams: !24, identifier: "ed62d085a619173042794cb62c3965ba")
!127 = !{!128, !129, !130, !131}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !126, file: !2, baseType: !6, size: 64, align: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !126, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!133 = !{i32 7, !"PIC Level", i32 2}
!134 = !{i32 2, !"Dwarf Version", i32 4}
!135 = !{i32 2, !"Debug Info Version", i32 3}
!136 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !137, producer: "clang LLVM (rustc version 1.69.0-nightly (246eae2fa 2023-02-21))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !138, globals: !162, splitDebugInlining: false)
!137 = !DIFile(filename: "/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23/src/lib.rs/@/bootloader.1d7037a3-cgu.0", directory: "/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23")
!138 = !{!26, !139, !149, !156}
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !140, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !144)
!140 = !DINamespace(name: "v1", scope: !141)
!141 = !DINamespace(name: "rt", scope: !142)
!142 = !DINamespace(name: "fmt", scope: !143)
!143 = !DINamespace(name: "core", scope: null)
!144 = !{!145, !146, !147, !148}
!145 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !150, file: !2, baseType: !151, size: 8, align: 8, flags: DIFlagEnumClass, elements: !152)
!150 = !DINamespace(name: "cmp", scope: !143)
!151 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!152 = !{!153, !154, !155}
!153 = !DIEnumerator(name: "Less", value: -1)
!154 = !DIEnumerator(name: "Equal", value: 0)
!155 = !DIEnumerator(name: "Greater", value: 1)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !157, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !158)
!157 = !DINamespace(name: "panicking", scope: !143)
!158 = !{!159, !160, !161}
!159 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!160 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!161 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!162 = !{!0, !44, !52, !61, !69, !77, !86, !101, !114, !124}
!163 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb8f234a53d6bfd06E", scope: !165, file: !164, line: 373, type: !168, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !183)
!164 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "afd2e83bc7b2acdd8fe6c036dd45a95e")
!165 = !DINamespace(name: "{impl#4}", scope: !166)
!166 = !DINamespace(name: "index", scope: !167)
!167 = !DINamespace(name: "slice", scope: !143)
!168 = !DISubroutineType(types: !169)
!169 = !{!170, !175, !170}
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !171, templateParams: !24, identifier: "2f401ee8dfca15abdea01bab449cd5a1")
!171 = !{!172, !174}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !170, file: !2, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !170, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!175 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !176, file: !2, size: 128, align: 64, elements: !178, templateParams: !181, identifier: "68b4355f832d5b808860ceba6b246024")
!176 = !DINamespace(name: "range", scope: !177)
!177 = !DINamespace(name: "ops", scope: !143)
!178 = !{!179, !180}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !175, file: !2, baseType: !9, size: 64, align: 64)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !175, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!181 = !{!182}
!182 = !DITemplateTypeParameter(name: "Idx", type: !9)
!183 = !{!184, !185, !186}
!184 = !DILocalVariable(name: "self", arg: 1, scope: !163, file: !164, line: 373, type: !175)
!185 = !DILocalVariable(name: "slice", arg: 2, scope: !163, file: !164, line: 373, type: !170)
!186 = !DILocalVariable(name: "this", scope: !187, file: !164, line: 374, type: !175, align: 8)
!187 = distinct !DILexicalBlock(scope: !163, file: !164, line: 374, column: 9)
!188 = !{!189}
!189 = !DITemplateTypeParameter(name: "T", type: !13)
!190 = !DILocation(line: 373, column: 29, scope: !163)
!191 = !DILocation(line: 373, column: 35, scope: !163)
!192 = !DILocation(line: 374, column: 13, scope: !187)
!193 = !DILocation(line: 374, column: 20, scope: !163)
!194 = !DILocation(line: 381, column: 13, scope: !187)
!195 = !DILocalVariable(name: "this", arg: 1, scope: !196, file: !197, line: 2218, type: !175)
!196 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hd10520e92da969e3E", scope: !198, file: !197, line: 2218, type: !199, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !201)
!197 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "9636877b7f12d537541e2836c747da25")
!198 = !DINamespace(name: "get_unchecked", scope: !165)
!199 = !DISubroutineType(types: !200)
!200 = !{null, !175, !170}
!201 = !{!195, !202}
!202 = !DILocalVariable(name: "slice", arg: 2, scope: !196, file: !197, line: 2218, type: !170)
!203 = !DILocation(line: 2218, column: 39, scope: !196, inlinedAt: !204)
!204 = distinct !DILocation(line: 381, column: 13, scope: !187)
!205 = !DILocation(line: 384, column: 17, scope: !206, inlinedAt: !204)
!206 = !DILexicalBlockFile(scope: !196, file: !164, discriminator: 0)
!207 = !DILocation(line: 384, column: 55, scope: !206, inlinedAt: !204)
!208 = !DILocation(line: 384, column: 43, scope: !206, inlinedAt: !204)
!209 = !DILocation(line: 2219, column: 20, scope: !196, inlinedAt: !204)
!210 = !{i8 0, i8 2}
!211 = !DILocation(line: 2221, column: 21, scope: !196, inlinedAt: !204)
!212 = !DILocation(line: 386, column: 39, scope: !187)
!213 = !DILocalVariable(name: "self", arg: 1, scope: !214, file: !215, line: 915, type: !221)
!214 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6853ff56dcbd02a0E", scope: !216, file: !215, line: 915, type: !219, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !222)
!215 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "310ccb1a5479a9302756ed4297f2c8bd")
!216 = !DINamespace(name: "{impl#0}", scope: !217)
!217 = !DINamespace(name: "const_ptr", scope: !218)
!218 = !DINamespace(name: "ptr", scope: !143)
!219 = !DISubroutineType(types: !220)
!220 = !{!221, !221, !9}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!222 = !{!213, !223}
!223 = !DILocalVariable(name: "count", arg: 2, scope: !214, file: !215, line: 915, type: !9)
!224 = !DILocation(line: 915, column: 29, scope: !214, inlinedAt: !225)
!225 = distinct !DILocation(line: 386, column: 39, scope: !187)
!226 = !DILocation(line: 915, column: 35, scope: !214, inlinedAt: !225)
!227 = !DILocalVariable(name: "self", arg: 1, scope: !228, file: !215, line: 460, type: !221)
!228 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7d8774c36bf4d034E", scope: !216, file: !215, line: 460, type: !229, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !232)
!229 = !DISubroutineType(types: !230)
!230 = !{!221, !221, !231}
!231 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!232 = !{!227, !233}
!233 = !DILocalVariable(name: "count", arg: 2, scope: !228, file: !215, line: 460, type: !231)
!234 = !DILocation(line: 460, column: 32, scope: !228, inlinedAt: !235)
!235 = distinct !DILocation(line: 920, column: 18, scope: !214, inlinedAt: !225)
!236 = !DILocation(line: 460, column: 38, scope: !228, inlinedAt: !235)
!237 = !DILocation(line: 465, column: 18, scope: !228, inlinedAt: !235)
!238 = !DILocation(line: 386, column: 71, scope: !187)
!239 = !DILocation(line: 386, column: 13, scope: !187)
!240 = !DILocation(line: 388, column: 6, scope: !163)
!241 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h15f541329c45e716E", scope: !165, file: !164, line: 391, type: !242, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !248)
!242 = !DISubroutineType(types: !243)
!243 = !{!244, !175, !244}
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !245, templateParams: !24, identifier: "899239b578103bec8585cc6b84cfe53d")
!245 = !{!246, !247}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !244, file: !2, baseType: !173, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !244, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!248 = !{!249, !250, !251}
!249 = !DILocalVariable(name: "self", arg: 1, scope: !241, file: !164, line: 391, type: !175)
!250 = !DILocalVariable(name: "slice", arg: 2, scope: !241, file: !164, line: 391, type: !244)
!251 = !DILocalVariable(name: "this", scope: !252, file: !164, line: 392, type: !175, align: 8)
!252 = distinct !DILexicalBlock(scope: !241, file: !164, line: 392, column: 9)
!253 = !DILocation(line: 391, column: 33, scope: !241)
!254 = !DILocation(line: 391, column: 39, scope: !241)
!255 = !DILocation(line: 392, column: 13, scope: !252)
!256 = !DILocation(line: 392, column: 20, scope: !241)
!257 = !DILocation(line: 395, column: 13, scope: !252)
!258 = !DILocalVariable(name: "this", arg: 1, scope: !259, file: !197, line: 2218, type: !175)
!259 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h98ec7ac4b28f8648E", scope: !260, file: !197, line: 2218, type: !261, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !263)
!260 = !DINamespace(name: "get_unchecked_mut", scope: !165)
!261 = !DISubroutineType(types: !262)
!262 = !{null, !175, !244}
!263 = !{!258, !264}
!264 = !DILocalVariable(name: "slice", arg: 2, scope: !259, file: !197, line: 2218, type: !244)
!265 = !DILocation(line: 2218, column: 39, scope: !259, inlinedAt: !266)
!266 = distinct !DILocation(line: 395, column: 13, scope: !252)
!267 = !DILocation(line: 398, column: 17, scope: !268, inlinedAt: !266)
!268 = !DILexicalBlockFile(scope: !259, file: !164, discriminator: 0)
!269 = !DILocalVariable(name: "self", arg: 1, scope: !270, file: !271, line: 1878, type: !244)
!270 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h4e8f7248369d348eE", scope: !272, file: !271, line: 1878, type: !274, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !276)
!271 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "8f9c2a68da2d937402d223242416154f")
!272 = !DINamespace(name: "{impl#1}", scope: !273)
!273 = !DINamespace(name: "mut_ptr", scope: !218)
!274 = !DISubroutineType(types: !275)
!275 = !{!9, !244}
!276 = !{!269}
!277 = !DILocation(line: 1878, column: 22, scope: !270, inlinedAt: !278)
!278 = distinct !DILocation(line: 398, column: 55, scope: !268, inlinedAt: !266)
!279 = !DILocation(line: 1879, column: 9, scope: !270, inlinedAt: !278)
!280 = !DILocation(line: 398, column: 43, scope: !268, inlinedAt: !266)
!281 = !DILocation(line: 2219, column: 20, scope: !259, inlinedAt: !266)
!282 = !DILocation(line: 2221, column: 21, scope: !259, inlinedAt: !266)
!283 = !DILocalVariable(name: "self", arg: 1, scope: !284, file: !271, line: 2014, type: !244)
!284 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd9785d4fc8f2dde8E", scope: !272, file: !271, line: 2014, type: !285, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !288)
!285 = !DISubroutineType(types: !286)
!286 = !{!287, !244}
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!288 = !{!283}
!289 = !DILocation(line: 2014, column: 29, scope: !284, inlinedAt: !290)
!290 = distinct !DILocation(line: 400, column: 43, scope: !252)
!291 = !DILocalVariable(name: "self", arg: 1, scope: !292, file: !271, line: 1015, type: !287)
!292 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0b563a5a4f4fdaa8E", scope: !293, file: !271, line: 1015, type: !294, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !296)
!293 = !DINamespace(name: "{impl#0}", scope: !273)
!294 = !DISubroutineType(types: !295)
!295 = !{!287, !287, !9}
!296 = !{!291, !297}
!297 = !DILocalVariable(name: "count", arg: 2, scope: !292, file: !271, line: 1015, type: !9)
!298 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !299)
!299 = distinct !DILocation(line: 400, column: 43, scope: !252)
!300 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !299)
!301 = !DILocalVariable(name: "self", arg: 1, scope: !302, file: !271, line: 472, type: !287)
!302 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h30bcd6b72f80b07fE", scope: !293, file: !271, line: 472, type: !303, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !305)
!303 = !DISubroutineType(types: !304)
!304 = !{!287, !287, !231}
!305 = !{!301, !306}
!306 = !DILocalVariable(name: "count", arg: 2, scope: !302, file: !271, line: 472, type: !231)
!307 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !308)
!308 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !299)
!309 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !308)
!310 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !308)
!311 = !DILocation(line: 400, column: 79, scope: !252)
!312 = !DILocation(line: 400, column: 13, scope: !252)
!313 = !DILocation(line: 402, column: 6, scope: !241)
!314 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h287b66d601df05f8E", scope: !165, file: !164, line: 405, type: !315, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !334)
!315 = !DISubroutineType(types: !316)
!316 = !{!317, !175, !317, !321}
!317 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !318, templateParams: !24, identifier: "7239d4e26ceb1d376c52c25e25733da4")
!318 = !{!319, !320}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !317, file: !2, baseType: !173, size: 64, align: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !317, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !322, size: 64, align: 64, dwarfAddressSpace: 0)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !323, file: !2, size: 192, align: 64, elements: !325, templateParams: !24, identifier: "ba91c9b532f73ed29960cd9fed44efec")
!323 = !DINamespace(name: "location", scope: !324)
!324 = !DINamespace(name: "panic", scope: !143)
!325 = !{!326, !332, !333}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !322, file: !2, baseType: !327, size: 128, align: 64)
!327 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !328, templateParams: !24, identifier: "c67d244f92c53ee233f4a290be1c6ff8")
!328 = !{!329, !331}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !327, file: !2, baseType: !330, size: 64, align: 64)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !327, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !322, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !322, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!334 = !{!335, !336}
!335 = !DILocalVariable(name: "self", arg: 1, scope: !314, file: !164, line: 405, type: !175)
!336 = !DILocalVariable(name: "slice", arg: 2, scope: !314, file: !164, line: 405, type: !317)
!337 = !DILocation(line: 405, column: 14, scope: !314)
!338 = !DILocation(line: 405, column: 20, scope: !314)
!339 = !DILocation(line: 406, column: 12, scope: !314)
!340 = !DILocation(line: 408, column: 19, scope: !314)
!341 = !DILocation(line: 407, column: 13, scope: !314)
!342 = !DILocation(line: 412, column: 20, scope: !314)
!343 = !DILocation(line: 413, column: 6, scope: !314)
!344 = !DILocation(line: 409, column: 13, scope: !314)
!345 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h997e6282d5db556bE", scope: !165, file: !164, line: 416, type: !346, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !352)
!346 = !DISubroutineType(types: !347)
!347 = !{!348, !175, !348, !321}
!348 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !349, templateParams: !24, identifier: "8252aad9bb14d5b65538f9bf1aa31088")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !348, file: !2, baseType: !173, size: 64, align: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !348, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!352 = !{!353, !354}
!353 = !DILocalVariable(name: "self", arg: 1, scope: !345, file: !164, line: 416, type: !175)
!354 = !DILocalVariable(name: "slice", arg: 2, scope: !345, file: !164, line: 416, type: !348)
!355 = !DILocation(line: 416, column: 18, scope: !345)
!356 = !DILocation(line: 416, column: 24, scope: !345)
!357 = !DILocation(line: 417, column: 12, scope: !345)
!358 = !DILocation(line: 419, column: 19, scope: !345)
!359 = !DILocation(line: 418, column: 13, scope: !345)
!360 = !DILocation(line: 423, column: 24, scope: !345)
!361 = !DILocation(line: 424, column: 6, scope: !345)
!362 = !DILocation(line: 420, column: 13, scope: !345)
!363 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5412c5f9bbbd53aeE", scope: !364, file: !164, line: 460, type: !365, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !370)
!364 = !DINamespace(name: "{impl#5}", scope: !166)
!365 = !DISubroutineType(types: !366)
!366 = !{!348, !367, !348, !321}
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !176, file: !2, size: 64, align: 64, elements: !368, templateParams: !181, identifier: "a4b3ef1fe64b8c3c189abf5d030d06aa")
!368 = !{!369}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !367, file: !2, baseType: !9, size: 64, align: 64)
!370 = !{!371, !372}
!371 = !DILocalVariable(name: "self", arg: 1, scope: !363, file: !164, line: 460, type: !367)
!372 = !DILocalVariable(name: "slice", arg: 2, scope: !363, file: !164, line: 460, type: !348)
!373 = !DILocation(line: 460, column: 18, scope: !363)
!374 = !DILocation(line: 460, column: 24, scope: !363)
!375 = !DILocation(line: 461, column: 9, scope: !363)
!376 = !DILocation(line: 462, column: 6, scope: !363)
!377 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h4d6bf24801eca16eE", scope: !378, file: !164, line: 487, type: !379, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !384)
!378 = !DINamespace(name: "{impl#6}", scope: !166)
!379 = !DISubroutineType(types: !380)
!380 = !{!244, !381, !244}
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !176, file: !2, size: 64, align: 64, elements: !382, templateParams: !181, identifier: "7746bb6200981691be5a874ad4af3168")
!382 = !{!383}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !381, file: !2, baseType: !9, size: 64, align: 64)
!384 = !{!385, !386}
!385 = !DILocalVariable(name: "self", arg: 1, scope: !377, file: !164, line: 487, type: !381)
!386 = !DILocalVariable(name: "slice", arg: 2, scope: !377, file: !164, line: 487, type: !244)
!387 = !DILocation(line: 487, column: 33, scope: !377)
!388 = !DILocation(line: 487, column: 39, scope: !377)
!389 = !DILocation(line: 1878, column: 22, scope: !270, inlinedAt: !390)
!390 = distinct !DILocation(line: 489, column: 31, scope: !377)
!391 = !DILocation(line: 1879, column: 9, scope: !270, inlinedAt: !390)
!392 = !DILocation(line: 489, column: 18, scope: !377)
!393 = !DILocation(line: 490, column: 6, scope: !377)
!394 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h228b6d3bd03ce9c7E", scope: !378, file: !164, line: 502, type: !395, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !397)
!395 = !DISubroutineType(types: !396)
!396 = !{!348, !381, !348, !321}
!397 = !{!398, !399}
!398 = !DILocalVariable(name: "self", arg: 1, scope: !394, file: !164, line: 502, type: !381)
!399 = !DILocalVariable(name: "slice", arg: 2, scope: !394, file: !164, line: 502, type: !348)
!400 = !DILocation(line: 502, column: 18, scope: !394)
!401 = !DILocation(line: 502, column: 24, scope: !394)
!402 = !DILocation(line: 503, column: 12, scope: !394)
!403 = !DILocation(line: 507, column: 24, scope: !394)
!404 = !DILocation(line: 508, column: 6, scope: !394)
!405 = !DILocation(line: 504, column: 13, scope: !394)
!406 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9378c84f89e88f47E", scope: !407, file: !164, line: 583, type: !408, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !416)
!407 = !DINamespace(name: "{impl#8}", scope: !166)
!408 = !DISubroutineType(types: !409)
!409 = !{!348, !410, !348, !321}
!410 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !176, file: !2, size: 192, align: 64, elements: !411, templateParams: !181, identifier: "8fe78dbb44e4a49690dc8d8213b74166")
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !410, file: !2, baseType: !9, size: 64, align: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !410, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !410, file: !2, baseType: !415, size: 8, align: 8, offset: 128)
!415 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!416 = !{!417, !418}
!417 = !DILocalVariable(name: "self", arg: 1, scope: !406, file: !164, line: 583, type: !410)
!418 = !DILocalVariable(name: "slice", arg: 2, scope: !406, file: !164, line: 583, type: !348)
!419 = !DILocation(line: 583, column: 18, scope: !406)
!420 = !DILocation(line: 583, column: 24, scope: !406)
!421 = !DILocation(line: 584, column: 13, scope: !406)
!422 = !DILocation(line: 584, column: 12, scope: !406)
!423 = !DILocation(line: 587, column: 9, scope: !406)
!424 = !DILocation(line: 588, column: 6, scope: !406)
!425 = !DILocation(line: 585, column: 13, scope: !406)
!426 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17heb0f1984c841e2a1E", scope: !427, file: !164, line: 624, type: !428, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !433)
!427 = !DINamespace(name: "{impl#9}", scope: !166)
!428 = !DISubroutineType(types: !429)
!429 = !{!348, !430, !348, !321}
!430 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeToInclusive<usize>", scope: !176, file: !2, size: 64, align: 64, elements: !431, templateParams: !181, identifier: "e79c17799af49a06694fb7fa59a0bddb")
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !430, file: !2, baseType: !9, size: 64, align: 64)
!433 = !{!434, !435}
!434 = !DILocalVariable(name: "self", arg: 1, scope: !426, file: !164, line: 624, type: !430)
!435 = !DILocalVariable(name: "slice", arg: 2, scope: !426, file: !164, line: 624, type: !348)
!436 = !DILocation(line: 624, column: 18, scope: !426)
!437 = !DILocation(line: 624, column: 24, scope: !426)
!438 = !DILocation(line: 625, column: 9, scope: !426)
!439 = !DILocation(line: 626, column: 6, scope: !426)
!440 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6021ca7e6427facaE", scope: !442, file: !441, line: 2396, type: !443, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !498)
!441 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "3da37f0da8b4e2a4936cc4d503a5a432")
!442 = !DINamespace(name: "{impl#59}", scope: !142)
!443 = !DISubroutineType(types: !444)
!444 = !{!445, !463, !464}
!445 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !446, file: !2, size: 8, align: 8, elements: !447, templateParams: !24, identifier: "788bffb4789253a9afd2241f2cf6c63")
!446 = !DINamespace(name: "result", scope: !143)
!447 = !{!448}
!448 = !DICompositeType(tag: DW_TAG_variant_part, scope: !445, file: !2, size: 8, align: 8, elements: !449, templateParams: !24, identifier: "a5c9a77aaba9139ff38fda7f8eb66621", discriminator: !462)
!449 = !{!450, !458}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !448, file: !2, baseType: !451, size: 8, align: 8, extraData: i64 0)
!451 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !445, file: !2, size: 8, align: 8, elements: !452, templateParams: !454, identifier: "215bfedc2e085f664292f2a587a10cfd")
!452 = !{!453}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !451, file: !2, baseType: !7, align: 8, offset: 8)
!454 = !{!455, !456}
!455 = !DITemplateTypeParameter(name: "T", type: !7)
!456 = !DITemplateTypeParameter(name: "E", type: !457)
!457 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !142, file: !2, align: 8, elements: !24, identifier: "fc4dd510399c056143ebb04e96e96efe")
!458 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !448, file: !2, baseType: !459, size: 8, align: 8, extraData: i64 1)
!459 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !445, file: !2, size: 8, align: 8, elements: !460, templateParams: !454, identifier: "e9504b56de2478d488546b43335c032d")
!460 = !{!461}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !459, file: !2, baseType: !457, align: 8, offset: 8)
!462 = !DIDerivedType(tag: DW_TAG_member, scope: !445, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagArtificial)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !465, size: 64, align: 64, dwarfAddressSpace: 0)
!465 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !142, file: !2, size: 512, align: 64, elements: !466, templateParams: !24, identifier: "9b9ae44c91c17007c5d6724c43bf796a")
!466 = !{!467, !468, !470, !471, !486, !487}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !465, file: !2, baseType: !27, size: 32, align: 32, offset: 384)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !465, file: !2, baseType: !469, size: 32, align: 32, offset: 416)
!469 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !465, file: !2, baseType: !139, size: 8, align: 8, offset: 448)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !465, file: !2, baseType: !472, size: 128, align: 64, offset: 128)
!472 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !473, file: !2, size: 128, align: 64, elements: !474, templateParams: !24, identifier: "7c810bf04bf09bbb6e233b88eeea1c13")
!473 = !DINamespace(name: "option", scope: !143)
!474 = !{!475}
!475 = !DICompositeType(tag: DW_TAG_variant_part, scope: !472, file: !2, size: 128, align: 64, elements: !476, templateParams: !24, identifier: "25288f32166afb81c64879a204cd361", discriminator: !485)
!476 = !{!477, !481}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !475, file: !2, baseType: !478, size: 128, align: 64, extraData: i64 0)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !472, file: !2, size: 128, align: 64, elements: !24, templateParams: !479, identifier: "c47cd9059ac8b1d02d08c13c5ebdc9c5")
!479 = !{!480}
!480 = !DITemplateTypeParameter(name: "T", type: !9)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !475, file: !2, baseType: !482, size: 128, align: 64, extraData: i64 1)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !472, file: !2, size: 128, align: 64, elements: !483, templateParams: !479, identifier: "9e32042650b6fd1fa50bb285d2f0504a")
!483 = !{!484}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !482, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, scope: !472, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !465, file: !2, baseType: !472, size: 128, align: 64, offset: 256)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !465, file: !2, baseType: !488, size: 128, align: 64)
!488 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !489, templateParams: !24, identifier: "130a7508282b65bdc4224777d2c38b70")
!489 = !{!490, !493}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !488, file: !2, baseType: !491, size: 64, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64, align: 64, dwarfAddressSpace: 0)
!492 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !24, identifier: "fbca469ffff351bd55eaf5b63e80f55")
!493 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !488, file: !2, baseType: !494, size: 64, align: 64, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !495, size: 64, align: 64, dwarfAddressSpace: 0)
!495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !496)
!496 = !{!497}
!497 = !DISubrange(count: 3, lowerBound: 0)
!498 = !{!499, !500}
!499 = !DILocalVariable(name: "self", arg: 1, scope: !440, file: !441, line: 2396, type: !463)
!500 = !DILocalVariable(name: "f", arg: 2, scope: !440, file: !441, line: 2396, type: !464)
!501 = !DILocation(line: 2396, column: 20, scope: !440)
!502 = !DILocation(line: 2396, column: 27, scope: !440)
!503 = !DILocation(line: 2396, column: 71, scope: !440)
!504 = !{i64 8}
!505 = !DILocation(line: 2396, column: 62, scope: !440)
!506 = !DILocation(line: 2396, column: 84, scope: !440)
!507 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb740925c6eb3f5d4E", scope: !442, file: !441, line: 2396, type: !508, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !514, retainedNodes: !511)
!508 = !DISubroutineType(types: !509)
!509 = !{!445, !510, !464}
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!511 = !{!512, !513}
!512 = !DILocalVariable(name: "self", arg: 1, scope: !507, file: !441, line: 2396, type: !510)
!513 = !DILocalVariable(name: "f", arg: 2, scope: !507, file: !441, line: 2396, type: !464)
!514 = !{!515}
!515 = !DITemplateTypeParameter(name: "T", type: !26)
!516 = !DILocation(line: 2396, column: 20, scope: !507)
!517 = !DILocation(line: 2396, column: 27, scope: !507)
!518 = !DILocation(line: 2396, column: 71, scope: !507)
!519 = !{i64 4}
!520 = !DILocation(line: 2396, column: 62, scope: !507)
!521 = !DILocation(line: 2396, column: 84, scope: !507)
!522 = distinct !DISubprogram(name: "is_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17hadd98891bdebc46aE", scope: !523, file: !197, line: 2253, type: !524, scopeLine: 2253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !526)
!523 = !DINamespace(name: "intrinsics", scope: !143)
!524 = !DISubroutineType(types: !525)
!525 = !{!415, !221, !221, !9}
!526 = !{!527, !528, !529, !530, !532, !534, !536}
!527 = !DILocalVariable(name: "src", arg: 1, scope: !522, file: !197, line: 2253, type: !221)
!528 = !DILocalVariable(name: "dst", arg: 2, scope: !522, file: !197, line: 2253, type: !221)
!529 = !DILocalVariable(name: "count", arg: 3, scope: !522, file: !197, line: 2253, type: !9)
!530 = !DILocalVariable(name: "src_usize", scope: !531, file: !197, line: 2254, type: !9, align: 8)
!531 = distinct !DILexicalBlock(scope: !522, file: !197, line: 2254, column: 5)
!532 = !DILocalVariable(name: "dst_usize", scope: !533, file: !197, line: 2255, type: !9, align: 8)
!533 = distinct !DILexicalBlock(scope: !531, file: !197, line: 2255, column: 5)
!534 = !DILocalVariable(name: "size", scope: !535, file: !197, line: 2256, type: !9, align: 8)
!535 = distinct !DILexicalBlock(scope: !533, file: !197, line: 2256, column: 5)
!536 = !DILocalVariable(name: "diff", scope: !537, file: !197, line: 2257, type: !9, align: 8)
!537 = distinct !DILexicalBlock(scope: !535, file: !197, line: 2257, column: 5)
!538 = !DILocation(line: 2253, column: 36, scope: !522)
!539 = !DILocation(line: 2253, column: 51, scope: !522)
!540 = !DILocation(line: 2253, column: 66, scope: !522)
!541 = !DILocation(line: 2257, column: 9, scope: !537)
!542 = !DILocalVariable(name: "self", arg: 1, scope: !543, file: !215, line: 203, type: !221)
!543 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h75af8660e25638c6E", scope: !216, file: !215, line: 203, type: !544, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !546)
!544 = !DISubroutineType(types: !545)
!545 = !{!9, !221}
!546 = !{!542}
!547 = !DILocation(line: 203, column: 17, scope: !543, inlinedAt: !548)
!548 = distinct !DILocation(line: 2254, column: 21, scope: !522)
!549 = !DILocalVariable(name: "self", arg: 1, scope: !550, file: !215, line: 58, type: !221)
!550 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h047194b75c9db07cE", scope: !216, file: !215, line: 58, type: !551, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !554, retainedNodes: !553)
!551 = !DISubroutineType(types: !552)
!552 = !{!6, !221}
!553 = !{!549}
!554 = !{!189, !555}
!555 = !DITemplateTypeParameter(name: "U", type: !7)
!556 = !DILocation(line: 58, column: 26, scope: !550, inlinedAt: !557)
!557 = distinct !DILocation(line: 207, column: 33, scope: !543, inlinedAt: !548)
!558 = !DILocation(line: 207, column: 18, scope: !543, inlinedAt: !548)
!559 = !DILocation(line: 2254, column: 21, scope: !522)
!560 = !DILocation(line: 2254, column: 9, scope: !531)
!561 = !DILocation(line: 203, column: 17, scope: !543, inlinedAt: !562)
!562 = distinct !DILocation(line: 2255, column: 21, scope: !531)
!563 = !DILocation(line: 58, column: 26, scope: !550, inlinedAt: !564)
!564 = distinct !DILocation(line: 207, column: 33, scope: !543, inlinedAt: !562)
!565 = !DILocation(line: 207, column: 18, scope: !543, inlinedAt: !562)
!566 = !DILocation(line: 2255, column: 21, scope: !531)
!567 = !DILocation(line: 2255, column: 9, scope: !533)
!568 = !DILocation(line: 2256, column: 16, scope: !533)
!569 = !DILocation(line: 2256, column: 9, scope: !535)
!570 = !DILocation(line: 2257, column: 19, scope: !535)
!571 = !DILocation(line: 2257, column: 74, scope: !535)
!572 = !DILocation(line: 2257, column: 43, scope: !535)
!573 = !DILocation(line: 2257, column: 16, scope: !535)
!574 = !DILocation(line: 2260, column: 5, scope: !537)
!575 = !DILocation(line: 2261, column: 2, scope: !522)
!576 = distinct !DISubprogram(name: "copy_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hb745d534b1a3fc84E", scope: !523, file: !197, line: 2353, type: !577, scopeLine: 2353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !579)
!577 = !DISubroutineType(types: !578)
!578 = !{null, !221, !287, !9}
!579 = !{!580, !581, !582}
!580 = !DILocalVariable(name: "src", arg: 1, scope: !576, file: !197, line: 2353, type: !221)
!581 = !DILocalVariable(name: "dst", arg: 2, scope: !576, file: !197, line: 2353, type: !287)
!582 = !DILocalVariable(name: "count", arg: 3, scope: !576, file: !197, line: 2353, type: !9)
!583 = !DILocation(line: 2353, column: 44, scope: !576)
!584 = !DILocation(line: 2353, column: 59, scope: !576)
!585 = !DILocation(line: 2353, column: 72, scope: !576)
!586 = !DILocation(line: 2362, column: 9, scope: !576)
!587 = !DILocalVariable(name: "src", arg: 1, scope: !588, file: !197, line: 2218, type: !221)
!588 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h72501f1547f5aaeaE", scope: !589, file: !197, line: 2218, type: !577, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !590)
!589 = !DINamespace(name: "copy_nonoverlapping", scope: !523)
!590 = !{!587, !591, !592}
!591 = !DILocalVariable(name: "dst", arg: 2, scope: !588, file: !197, line: 2218, type: !287)
!592 = !DILocalVariable(name: "count", arg: 3, scope: !588, file: !197, line: 2218, type: !9)
!593 = !DILocation(line: 2218, column: 39, scope: !588, inlinedAt: !594)
!594 = distinct !DILocation(line: 2362, column: 9, scope: !576)
!595 = !DILocation(line: 2366, column: 13, scope: !588, inlinedAt: !594)
!596 = !DILocation(line: 2367, column: 20, scope: !588, inlinedAt: !594)
!597 = !DILocation(line: 2368, column: 20, scope: !588, inlinedAt: !594)
!598 = !DILocation(line: 2219, column: 20, scope: !588, inlinedAt: !594)
!599 = !DILocation(line: 2221, column: 21, scope: !588, inlinedAt: !594)
!600 = !DILocation(line: 2370, column: 9, scope: !576)
!601 = !DILocation(line: 2372, column: 2, scope: !576)
!602 = distinct !DISubprogram(name: "copy_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17he6b556ffae8c6245E", scope: !523, file: !197, line: 2353, type: !603, scopeLine: 2353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !479, retainedNodes: !607)
!603 = !DISubroutineType(types: !604)
!604 = !{null, !605, !606, !9}
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!607 = !{!608, !609, !610}
!608 = !DILocalVariable(name: "src", arg: 1, scope: !602, file: !197, line: 2353, type: !605)
!609 = !DILocalVariable(name: "dst", arg: 2, scope: !602, file: !197, line: 2353, type: !606)
!610 = !DILocalVariable(name: "count", arg: 3, scope: !602, file: !197, line: 2353, type: !9)
!611 = !DILocation(line: 2353, column: 44, scope: !602)
!612 = !DILocation(line: 2353, column: 59, scope: !602)
!613 = !DILocation(line: 2353, column: 72, scope: !602)
!614 = !DILocation(line: 2362, column: 9, scope: !602)
!615 = !DILocalVariable(name: "src", arg: 1, scope: !616, file: !197, line: 2218, type: !605)
!616 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h5f2075035140fd79E", scope: !589, file: !197, line: 2218, type: !603, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !479, retainedNodes: !617)
!617 = !{!615, !618, !619}
!618 = !DILocalVariable(name: "dst", arg: 2, scope: !616, file: !197, line: 2218, type: !606)
!619 = !DILocalVariable(name: "count", arg: 3, scope: !616, file: !197, line: 2218, type: !9)
!620 = !DILocation(line: 2218, column: 39, scope: !616, inlinedAt: !621)
!621 = distinct !DILocation(line: 2362, column: 9, scope: !602)
!622 = !DILocation(line: 2366, column: 13, scope: !616, inlinedAt: !621)
!623 = !DILocation(line: 2367, column: 20, scope: !616, inlinedAt: !621)
!624 = !DILocation(line: 2368, column: 20, scope: !616, inlinedAt: !621)
!625 = !DILocation(line: 2219, column: 20, scope: !616, inlinedAt: !621)
!626 = !DILocation(line: 2221, column: 21, scope: !616, inlinedAt: !621)
!627 = !DILocation(line: 2370, column: 9, scope: !602)
!628 = !DILocation(line: 2372, column: 2, scope: !602)
!629 = distinct !DISubprogram(name: "is_aligned_and_not_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h6a60c6b4bab249b8E", scope: !523, file: !197, line: 2237, type: !630, scopeLine: 2237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !632)
!630 = !DISubroutineType(types: !631)
!631 = !{!415, !221}
!632 = !{!633}
!633 = !DILocalVariable(name: "ptr", arg: 1, scope: !629, file: !197, line: 2237, type: !221)
!634 = !DILocation(line: 2237, column: 42, scope: !629)
!635 = !DILocation(line: 2238, column: 6, scope: !629)
!636 = !DILocation(line: 2238, column: 5, scope: !629)
!637 = !DILocation(line: 2238, column: 23, scope: !629)
!638 = !DILocation(line: 2239, column: 2, scope: !629)
!639 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h826fcd3d06ba96b4E", scope: !523, file: !197, line: 2237, type: !640, scopeLine: 2237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !653)
!640 = !DISubroutineType(types: !641)
!641 = !{!415, !642}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !643, size: 64, align: 64, dwarfAddressSpace: 0)
!643 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !644, file: !2, size: 192, align: 64, elements: !646, templateParams: !188, identifier: "528b41129458118f58cbd7553824be9")
!644 = !DINamespace(name: "maybe_uninit", scope: !645)
!645 = !DINamespace(name: "mem", scope: !143)
!646 = !{!647, !648}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !643, file: !2, baseType: !7, align: 8)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !643, file: !2, baseType: !649, size: 192, align: 64)
!649 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !650, file: !2, size: 192, align: 64, elements: !651, templateParams: !188, identifier: "19c6fa3444ffdd416edd43c726664d8f")
!650 = !DINamespace(name: "manually_drop", scope: !645)
!651 = !{!652}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !649, file: !2, baseType: !13, size: 192, align: 64)
!653 = !{!654}
!654 = !DILocalVariable(name: "ptr", arg: 1, scope: !639, file: !197, line: 2237, type: !642)
!655 = !{!656}
!656 = !DITemplateTypeParameter(name: "T", type: !643)
!657 = !DILocation(line: 2237, column: 42, scope: !639)
!658 = !DILocation(line: 2238, column: 6, scope: !639)
!659 = !DILocation(line: 2238, column: 5, scope: !639)
!660 = !DILocation(line: 2238, column: 23, scope: !639)
!661 = !DILocation(line: 2239, column: 2, scope: !639)
!662 = distinct !DISubprogram(name: "is_valid_allocation_size<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics24is_valid_allocation_size17hf4c172ba13be3f02E", scope: !523, file: !197, line: 2243, type: !663, scopeLine: 2243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !665)
!663 = !DISubroutineType(types: !664)
!664 = !{!415, !9}
!665 = !{!666, !667}
!666 = !DILocalVariable(name: "len", arg: 1, scope: !662, file: !197, line: 2243, type: !9)
!667 = !DILocalVariable(name: "max_len", scope: !668, file: !197, line: 2244, type: !9, align: 8)
!668 = distinct !DILexicalBlock(scope: !662, file: !197, line: 2244, column: 5)
!669 = !DILocation(line: 2243, column: 43, scope: !662)
!670 = !DILocation(line: 2244, column: 19, scope: !662)
!671 = !DILocation(line: 2244, column: 9, scope: !668)
!672 = !DILocation(line: 2248, column: 5, scope: !668)
!673 = !DILocation(line: 2249, column: 2, scope: !662)
!674 = distinct !DISubprogram(name: "copy<usize>", linkageName: "_ZN4core10intrinsics4copy17h9831803a7b3cada9E", scope: !523, file: !197, line: 2443, type: !603, scopeLine: 2443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !479, retainedNodes: !675)
!675 = !{!676, !677, !678}
!676 = !DILocalVariable(name: "src", arg: 1, scope: !674, file: !197, line: 2443, type: !605)
!677 = !DILocalVariable(name: "dst", arg: 2, scope: !674, file: !197, line: 2443, type: !606)
!678 = !DILocalVariable(name: "count", arg: 3, scope: !674, file: !197, line: 2443, type: !9)
!679 = !DILocation(line: 2443, column: 29, scope: !674)
!680 = !DILocation(line: 2443, column: 44, scope: !674)
!681 = !DILocation(line: 2443, column: 57, scope: !674)
!682 = !DILocation(line: 2451, column: 9, scope: !674)
!683 = !DILocalVariable(name: "src", arg: 1, scope: !684, file: !197, line: 2218, type: !605)
!684 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics4copy7runtime17ha701b94fc6bd3866E", scope: !685, file: !197, line: 2218, type: !686, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !479, retainedNodes: !688)
!685 = !DINamespace(name: "copy", scope: !523)
!686 = !DISubroutineType(types: !687)
!687 = !{null, !605, !606}
!688 = !{!683, !689}
!689 = !DILocalVariable(name: "dst", arg: 2, scope: !684, file: !197, line: 2218, type: !606)
!690 = !DILocation(line: 2218, column: 39, scope: !684, inlinedAt: !691)
!691 = distinct !DILocation(line: 2451, column: 9, scope: !674)
!692 = !DILocation(line: 2454, column: 13, scope: !684, inlinedAt: !691)
!693 = !DILocation(line: 2454, column: 45, scope: !684, inlinedAt: !691)
!694 = !DILocation(line: 2219, column: 20, scope: !684, inlinedAt: !691)
!695 = !DILocation(line: 2221, column: 21, scope: !684, inlinedAt: !691)
!696 = !DILocation(line: 2456, column: 9, scope: !674)
!697 = !DILocation(line: 2458, column: 2, scope: !674)
!698 = distinct !DISubprogram(name: "copy<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy17hc5335cd0346ba533E", scope: !523, file: !197, line: 2443, type: !577, scopeLine: 2443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !699)
!699 = !{!700, !701, !702}
!700 = !DILocalVariable(name: "src", arg: 1, scope: !698, file: !197, line: 2443, type: !221)
!701 = !DILocalVariable(name: "dst", arg: 2, scope: !698, file: !197, line: 2443, type: !287)
!702 = !DILocalVariable(name: "count", arg: 3, scope: !698, file: !197, line: 2443, type: !9)
!703 = !DILocation(line: 2443, column: 29, scope: !698)
!704 = !DILocation(line: 2443, column: 44, scope: !698)
!705 = !DILocation(line: 2443, column: 57, scope: !698)
!706 = !DILocation(line: 2451, column: 9, scope: !698)
!707 = !DILocalVariable(name: "src", arg: 1, scope: !708, file: !197, line: 2218, type: !221)
!708 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy7runtime17h76ee47e5dba4e515E", scope: !685, file: !197, line: 2218, type: !709, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !711)
!709 = !DISubroutineType(types: !710)
!710 = !{null, !221, !287}
!711 = !{!707, !712}
!712 = !DILocalVariable(name: "dst", arg: 2, scope: !708, file: !197, line: 2218, type: !287)
!713 = !DILocation(line: 2218, column: 39, scope: !708, inlinedAt: !714)
!714 = distinct !DILocation(line: 2451, column: 9, scope: !698)
!715 = !DILocation(line: 2454, column: 13, scope: !708, inlinedAt: !714)
!716 = !DILocation(line: 2454, column: 45, scope: !708, inlinedAt: !714)
!717 = !DILocation(line: 2219, column: 20, scope: !708, inlinedAt: !714)
!718 = !DILocation(line: 2221, column: 21, scope: !708, inlinedAt: !714)
!719 = !DILocation(line: 2456, column: 9, scope: !698)
!720 = !DILocation(line: 2458, column: 2, scope: !698)
!721 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17h20daabefeafea6fcE", scope: !723, file: !722, line: 1409, type: !725, scopeLine: 1409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !727)
!722 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "3edd07a073af9fa0170275f7799f80b9")
!723 = !DINamespace(name: "{impl#63}", scope: !724)
!724 = !DINamespace(name: "impls", scope: !150)
!725 = !DISubroutineType(types: !726)
!726 = !{!149, !132, !132}
!727 = !{!728, !729}
!728 = !DILocalVariable(name: "self", arg: 1, scope: !721, file: !722, line: 1409, type: !132)
!729 = !DILocalVariable(name: "other", arg: 2, scope: !721, file: !722, line: 1409, type: !132)
!730 = !DILocation(line: 1409, column: 24, scope: !721)
!731 = !DILocation(line: 1409, column: 31, scope: !721)
!732 = !DILocation(line: 1412, column: 24, scope: !721)
!733 = !DILocation(line: 1412, column: 32, scope: !721)
!734 = !DILocation(line: 1413, column: 29, scope: !721)
!735 = !DILocation(line: 1413, column: 38, scope: !721)
!736 = !DILocation(line: 1412, column: 41, scope: !721)
!737 = !DILocation(line: 1412, column: 21, scope: !721)
!738 = !DILocation(line: 1415, column: 18, scope: !721)
!739 = !{i8 -1, i8 2}
!740 = !DILocation(line: 1414, column: 28, scope: !721)
!741 = !DILocation(line: 1413, column: 26, scope: !721)
!742 = !DILocation(line: 1413, column: 47, scope: !721)
!743 = distinct !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt10ArgumentV113new_lower_hex17h433ba05b4d707d9bE", scope: !744, file: !441, line: 329, type: !754, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !758, retainedNodes: !756)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !142, file: !2, size: 128, align: 64, elements: !745, templateParams: !24, identifier: "f24895bf20b1f11393e3198b0078cd90")
!745 = !{!746, !750}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !744, file: !2, baseType: !747, size: 64, align: 64)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !748, size: 64, align: 64, dwarfAddressSpace: 0)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !749, file: !2, align: 8, elements: !24, identifier: "83cf1042a24ae6619d6bcd30f5d788ab")
!749 = !DINamespace(name: "{extern#0}", scope: !142)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !744, file: !2, baseType: !751, size: 64, align: 64, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !752, size: 64, align: 64, dwarfAddressSpace: 0)
!752 = !DISubroutineType(types: !753)
!753 = !{!445, !747, !464}
!754 = !DISubroutineType(types: !755)
!755 = !{!744, !132}
!756 = !{!757}
!757 = !DILocalVariable(name: "x", arg: 1, scope: !743, file: !441, line: 329, type: !132)
!758 = !{!759}
!759 = !DITemplateTypeParameter(name: "T", type: !22)
!760 = !DILocation(line: 329, column: 30, scope: !743)
!761 = !DILocation(line: 330, column: 13, scope: !743)
!762 = !DILocation(line: 331, column: 10, scope: !743)
!763 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h5b1a2ebb45fc8c47E", scope: !765, file: !764, line: 185, type: !767, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !769)
!764 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "02359a317e793c1b82de7b934f87f847")
!765 = !DINamespace(name: "{impl#86}", scope: !766)
!766 = !DINamespace(name: "num", scope: !142)
!767 = !DISubroutineType(types: !768)
!768 = !{!445, !85, !464}
!769 = !{!770, !771}
!770 = !DILocalVariable(name: "self", arg: 1, scope: !763, file: !764, line: 185, type: !85)
!771 = !DILocalVariable(name: "f", arg: 2, scope: !763, file: !764, line: 185, type: !464)
!772 = !DILocation(line: 185, column: 20, scope: !763)
!773 = !DILocation(line: 185, column: 27, scope: !763)
!774 = !DILocation(line: 186, column: 20, scope: !763)
!775 = !DILocation(line: 188, column: 27, scope: !763)
!776 = !DILocation(line: 187, column: 21, scope: !763)
!777 = !DILocation(line: 193, column: 14, scope: !763)
!778 = !DILocation(line: 191, column: 21, scope: !763)
!779 = !DILocation(line: 189, column: 21, scope: !763)
!780 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17hb863c40d86c7fdd5E", scope: !781, file: !764, line: 185, type: !782, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !784)
!781 = !DINamespace(name: "{impl#87}", scope: !766)
!782 = !DISubroutineType(types: !783)
!783 = !{!445, !132, !464}
!784 = !{!785, !786}
!785 = !DILocalVariable(name: "self", arg: 1, scope: !780, file: !764, line: 185, type: !132)
!786 = !DILocalVariable(name: "f", arg: 2, scope: !780, file: !764, line: 185, type: !464)
!787 = !DILocation(line: 185, column: 20, scope: !780)
!788 = !DILocation(line: 185, column: 27, scope: !780)
!789 = !DILocation(line: 186, column: 20, scope: !780)
!790 = !DILocation(line: 188, column: 27, scope: !780)
!791 = !DILocation(line: 187, column: 21, scope: !780)
!792 = !DILocation(line: 193, column: 14, scope: !780)
!793 = !DILocation(line: 191, column: 21, scope: !780)
!794 = !DILocation(line: 189, column: 21, scope: !780)
!795 = distinct !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17h3b408f9ace557e17E", scope: !797, file: !796, line: 627, type: !806, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !830, retainedNodes: !823)
!796 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "3a909d1cde985fb0d953605fd1b0e0e2")
!797 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !798, file: !2, size: 128, align: 64, elements: !799, templateParams: !24, identifier: "ecb3007fc91522dc2ad34c10a595dc7")
!798 = !DINamespace(name: "builders", scope: !142)
!799 = !{!800}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !797, file: !2, baseType: !801, size: 128, align: 64)
!801 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !798, file: !2, size: 128, align: 64, elements: !802, templateParams: !24, identifier: "4b6969bebc5568bbacf6ed98d6711e01")
!802 = !{!803, !804, !805}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !801, file: !2, baseType: !464, size: 64, align: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !801, file: !2, baseType: !445, size: 8, align: 8, offset: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !801, file: !2, baseType: !415, size: 8, align: 8, offset: 72)
!806 = !DISubroutineType(types: !807)
!807 = !{!808, !808, !809}
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !797, size: 64, align: 64, dwarfAddressSpace: 0)
!809 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !810, file: !2, size: 128, align: 64, elements: !811, templateParams: !188, identifier: "87276184c4fc8f8d4fbdfae86f6b7f55")
!810 = !DINamespace(name: "iter", scope: !167)
!811 = !{!812, !817, !818}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !809, file: !2, baseType: !813, size: 64, align: 64, offset: 64)
!813 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !814, file: !2, size: 64, align: 64, elements: !815, templateParams: !188, identifier: "d8af6e52327b59c36040bbc53dd43636")
!814 = !DINamespace(name: "non_null", scope: !218)
!815 = !{!816}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !813, file: !2, baseType: !221, size: 64, align: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !809, file: !2, baseType: !221, size: 64, align: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !809, file: !2, baseType: !819, align: 8)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !820, file: !2, align: 8, elements: !24, templateParams: !821, identifier: "24b1620c5164e9156e4d4eb02e6bc37c")
!820 = !DINamespace(name: "marker", scope: !143)
!821 = !{!822}
!822 = !DITemplateTypeParameter(name: "T", type: !12)
!823 = !{!824, !825, !826, !828}
!824 = !DILocalVariable(name: "self", arg: 1, scope: !795, file: !796, line: 627, type: !808)
!825 = !DILocalVariable(name: "entries", arg: 2, scope: !795, file: !796, line: 627, type: !809)
!826 = !DILocalVariable(name: "iter", scope: !827, file: !796, line: 632, type: !809, align: 8)
!827 = distinct !DILexicalBlock(scope: !795, file: !796, line: 632, column: 9)
!828 = !DILocalVariable(name: "entry", scope: !829, file: !796, line: 632, type: !12, align: 8)
!829 = distinct !DILexicalBlock(scope: !827, file: !796, line: 632, column: 30)
!830 = !{!831, !832}
!831 = !DITemplateTypeParameter(name: "D", type: !12)
!832 = !DITemplateTypeParameter(name: "I", type: !809)
!833 = !DILocation(line: 627, column: 26, scope: !795)
!834 = !DILocation(line: 627, column: 37, scope: !795)
!835 = !DILocation(line: 632, column: 22, scope: !827)
!836 = !DILocation(line: 632, column: 13, scope: !829)
!837 = !DILocation(line: 632, column: 22, scope: !795)
!838 = !DILocation(line: 632, column: 9, scope: !827)
!839 = !DILocation(line: 636, column: 6, scope: !795)
!840 = !DILocation(line: 632, column: 13, scope: !827)
!841 = !DILocation(line: 633, column: 13, scope: !829)
!842 = !DILocation(line: 634, column: 9, scope: !827)
!843 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17h34d6d65ca81cd693E", scope: !844, file: !441, line: 421, type: !903, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !908)
!844 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !142, file: !2, size: 384, align: 64, elements: !845, templateParams: !24, identifier: "6349816354aa93c9c1313312dc1f6df8")
!845 = !{!846, !852, !897}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !844, file: !2, baseType: !847, size: 128, align: 64, offset: 128)
!847 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !848, templateParams: !24, identifier: "1bd0df68c6cb6036a2bb36aa5621bbdb")
!848 = !{!849, !851}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !847, file: !2, baseType: !850, size: 64, align: 64)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64, align: 64, dwarfAddressSpace: 0)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !847, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !844, file: !2, baseType: !853, size: 128, align: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !473, file: !2, size: 128, align: 64, elements: !854, templateParams: !24, identifier: "910dbdb16568df75bf80cbca1fd92433")
!854 = !{!855}
!855 = !DICompositeType(tag: DW_TAG_variant_part, scope: !853, file: !2, size: 128, align: 64, elements: !856, templateParams: !24, identifier: "4edb0d8a2ee15e0b56ae5d0c9c0bf0e4", discriminator: !896)
!856 = !{!857, !892}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !855, file: !2, baseType: !858, size: 128, align: 64, extraData: i64 0)
!858 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !853, file: !2, size: 128, align: 64, elements: !24, templateParams: !859, identifier: "75c4f2bae4e0df9abc28affa1d548c12")
!859 = !{!860}
!860 = !DITemplateTypeParameter(name: "T", type: !861)
!861 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !862, templateParams: !24, identifier: "770d9f14499d58ad818fe834fdf51bee")
!862 = !{!863, !891}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !861, file: !2, baseType: !864, size: 64, align: 64)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64, align: 64, dwarfAddressSpace: 0)
!865 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !140, file: !2, size: 448, align: 64, elements: !866, templateParams: !24, identifier: "14c90a8ea4c7c37d10839a7eae9d70c9")
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !865, file: !2, baseType: !9, size: 64, align: 64, offset: 384)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !865, file: !2, baseType: !869, size: 384, align: 64)
!869 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !140, file: !2, size: 384, align: 64, elements: !870, templateParams: !24, identifier: "9423f974ddb81c1ca3f1597108bb064b")
!870 = !{!871, !872, !873, !874, !890}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !869, file: !2, baseType: !469, size: 32, align: 32, offset: 288)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !869, file: !2, baseType: !139, size: 8, align: 8, offset: 320)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !869, file: !2, baseType: !27, size: 32, align: 32, offset: 256)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !869, file: !2, baseType: !875, size: 128, align: 64)
!875 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !140, file: !2, size: 128, align: 64, elements: !876, templateParams: !24, identifier: "ec8ec62201f5a20b9b4c5a51c0d9aa46")
!876 = !{!877}
!877 = !DICompositeType(tag: DW_TAG_variant_part, scope: !875, file: !2, size: 128, align: 64, elements: !878, templateParams: !24, identifier: "dd09d2bfb4745e3e9134dcbed11f4b9d", discriminator: !889)
!878 = !{!879, !883, !887}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !877, file: !2, baseType: !880, size: 128, align: 64, extraData: i64 0)
!880 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !875, file: !2, size: 128, align: 64, elements: !881, templateParams: !24, identifier: "5365717288fdddaf146e25f47cafbb54")
!881 = !{!882}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !880, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !877, file: !2, baseType: !884, size: 128, align: 64, extraData: i64 1)
!884 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !875, file: !2, size: 128, align: 64, elements: !885, templateParams: !24, identifier: "af5fa2811eb9b5a263adff7f4d011b48")
!885 = !{!886}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !884, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !877, file: !2, baseType: !888, size: 128, align: 64, extraData: i64 2)
!888 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !875, file: !2, size: 128, align: 64, elements: !24, identifier: "2a6ef902c5b7fb9a8009fad57d3503d8")
!889 = !DIDerivedType(tag: DW_TAG_member, scope: !875, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !869, file: !2, baseType: !875, size: 128, align: 64, offset: 128)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !861, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !855, file: !2, baseType: !893, size: 128, align: 64)
!893 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !853, file: !2, size: 128, align: 64, elements: !894, templateParams: !859, identifier: "20162f7a0a4aaa9d58fd63d979338130")
!894 = !{!895}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !893, file: !2, baseType: !861, size: 128, align: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, scope: !853, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !844, file: !2, baseType: !898, size: 128, align: 64, offset: 256)
!898 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !899, templateParams: !24, identifier: "aad5c4f4aeaf5e472bfbf21d14bdaedf")
!899 = !{!900, !902}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !898, file: !2, baseType: !901, size: 64, align: 64)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64, align: 64, dwarfAddressSpace: 0)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !898, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{!844, !847, !898, !861, !905}
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !142, file: !2, align: 8, elements: !906, templateParams: !24, identifier: "70b4bad5302e8381b9a9ce3886429509")
!906 = !{!907}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !905, file: !2, baseType: !7, align: 8)
!908 = !{!909, !910, !911, !912}
!909 = !DILocalVariable(name: "pieces", arg: 1, scope: !843, file: !441, line: 422, type: !847)
!910 = !DILocalVariable(name: "args", arg: 2, scope: !843, file: !441, line: 423, type: !898)
!911 = !DILocalVariable(name: "fmt", arg: 3, scope: !843, file: !441, line: 424, type: !861)
!912 = !DILocalVariable(name: "_unsafe_arg", arg: 4, scope: !843, file: !441, line: 425, type: !905)
!913 = !DILocation(line: 422, column: 9, scope: !843)
!914 = !DILocation(line: 423, column: 9, scope: !843)
!915 = !DILocation(line: 424, column: 9, scope: !843)
!916 = !DILocation(line: 425, column: 9, scope: !843)
!917 = !DILocation(line: 427, column: 34, scope: !843)
!918 = !DILocation(line: 427, column: 9, scope: !843)
!919 = !DILocation(line: 428, column: 6, scope: !843)
!920 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h30dac65f16f7140aE", scope: !844, file: !441, line: 401, type: !921, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !923)
!921 = !DISubroutineType(types: !922)
!922 = !{!844, !847, !898}
!923 = !{!924, !925}
!924 = !DILocalVariable(name: "pieces", arg: 1, scope: !920, file: !441, line: 401, type: !847)
!925 = !DILocalVariable(name: "args", arg: 2, scope: !920, file: !441, line: 401, type: !898)
!926 = !DILocation(line: 401, column: 25, scope: !920)
!927 = !DILocation(line: 401, column: 53, scope: !920)
!928 = !DILocation(line: 402, column: 12, scope: !920)
!929 = !DILocation(line: 402, column: 56, scope: !920)
!930 = !DILocation(line: 402, column: 41, scope: !920)
!931 = !DILocation(line: 405, column: 34, scope: !920)
!932 = !DILocation(line: 405, column: 9, scope: !920)
!933 = !DILocation(line: 406, column: 6, scope: !920)
!934 = !DILocation(line: 403, column: 13, scope: !920)
!935 = distinct !DISubprogram(name: "swap_simple<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem11swap_simple17hb5406f0a3506dab5E", scope: !645, file: !936, line: 756, type: !937, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !940)
!936 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "2818803a2f5479a3883c65b3bb9963fd")
!937 = !DISubroutineType(types: !938)
!938 = !{null, !939, !939}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!940 = !{!941, !942, !943, !945}
!941 = !DILocalVariable(name: "x", arg: 1, scope: !935, file: !936, line: 756, type: !939)
!942 = !DILocalVariable(name: "y", arg: 2, scope: !935, file: !936, line: 756, type: !939)
!943 = !DILocalVariable(name: "a", scope: !944, file: !936, line: 773, type: !13, align: 8)
!944 = distinct !DILexicalBlock(scope: !935, file: !936, line: 773, column: 9)
!945 = !DILocalVariable(name: "b", scope: !946, file: !936, line: 774, type: !13, align: 8)
!946 = distinct !DILexicalBlock(scope: !944, file: !936, line: 774, column: 9)
!947 = !DILocation(line: 756, column: 36, scope: !935)
!948 = !DILocation(line: 756, column: 47, scope: !935)
!949 = !DILocation(line: 773, column: 13, scope: !944)
!950 = !DILocation(line: 774, column: 13, scope: !946)
!951 = !DILocation(line: 773, column: 17, scope: !935)
!952 = !DILocation(line: 774, column: 17, scope: !944)
!953 = !DILocation(line: 775, column: 23, scope: !946)
!954 = !DILocation(line: 775, column: 9, scope: !946)
!955 = !DILocation(line: 776, column: 23, scope: !946)
!956 = !DILocation(line: 776, column: 9, scope: !946)
!957 = !DILocation(line: 778, column: 2, scope: !935)
!958 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem11swap_simple17hede3dff591370c1cE", scope: !645, file: !936, line: 756, type: !959, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !962)
!959 = !DISubroutineType(types: !960)
!960 = !{null, !961, !961}
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !643, size: 64, align: 64, dwarfAddressSpace: 0)
!962 = !{!963, !964, !965, !967}
!963 = !DILocalVariable(name: "x", arg: 1, scope: !958, file: !936, line: 756, type: !961)
!964 = !DILocalVariable(name: "y", arg: 2, scope: !958, file: !936, line: 756, type: !961)
!965 = !DILocalVariable(name: "a", scope: !966, file: !936, line: 773, type: !643, align: 8)
!966 = distinct !DILexicalBlock(scope: !958, file: !936, line: 773, column: 9)
!967 = !DILocalVariable(name: "b", scope: !968, file: !936, line: 774, type: !643, align: 8)
!968 = distinct !DILexicalBlock(scope: !966, file: !936, line: 774, column: 9)
!969 = !DILocation(line: 756, column: 36, scope: !958)
!970 = !DILocation(line: 756, column: 47, scope: !958)
!971 = !DILocation(line: 773, column: 13, scope: !966)
!972 = !DILocation(line: 774, column: 13, scope: !968)
!973 = !DILocation(line: 773, column: 17, scope: !958)
!974 = !DILocation(line: 774, column: 17, scope: !966)
!975 = !DILocation(line: 775, column: 23, scope: !968)
!976 = !DILocation(line: 775, column: 9, scope: !968)
!977 = !DILocation(line: 776, column: 23, scope: !968)
!978 = !DILocation(line: 776, column: 9, scope: !968)
!979 = !DILocation(line: 778, column: 2, scope: !958)
!980 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem4swap17hdd0820cc94f081c7E", scope: !645, file: !936, line: 719, type: !937, scopeLine: 719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !981)
!981 = !{!982, !983}
!982 = !DILocalVariable(name: "x", arg: 1, scope: !980, file: !936, line: 719, type: !939)
!983 = !DILocalVariable(name: "y", arg: 2, scope: !980, file: !936, line: 719, type: !939)
!984 = !DILocation(line: 719, column: 22, scope: !980)
!985 = !DILocation(line: 719, column: 33, scope: !980)
!986 = !DILocation(line: 734, column: 12, scope: !980)
!987 = !DILocation(line: 748, column: 5, scope: !980)
!988 = !DILocation(line: 737, column: 29, scope: !980)
!989 = !DILocation(line: 749, column: 2, scope: !980)
!990 = distinct !DISubprogram(name: "forget<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem6forget17h17e565d642337995E", scope: !645, file: !936, line: 148, type: !991, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !993)
!991 = !DISubroutineType(types: !992)
!992 = !{null, !13}
!993 = !{!994}
!994 = !DILocalVariable(name: "t", arg: 1, scope: !990, file: !936, line: 148, type: !13)
!995 = !DILocation(line: 148, column: 24, scope: !990)
!996 = !DILocalVariable(name: "value", arg: 1, scope: !997, file: !998, line: 70, type: !13)
!997 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h92caa8560d3d7000E", scope: !649, file: !998, line: 70, type: !999, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1001)
!998 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!999 = !DISubroutineType(types: !1000)
!1000 = !{!649, !13}
!1001 = !{!996}
!1002 = !DILocation(line: 70, column: 22, scope: !997, inlinedAt: !1003)
!1003 = distinct !DILocation(line: 149, column: 13, scope: !990)
!1004 = !DILocation(line: 71, column: 9, scope: !997, inlinedAt: !1003)
!1005 = !DILocation(line: 150, column: 2, scope: !990)
!1006 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h72c30a1e2370563bE", scope: !1008, file: !1007, line: 571, type: !1010, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1012)
!1007 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "83927209ac309798655233058ca6d5ae")
!1008 = !DINamespace(name: "{impl#11}", scope: !1009)
!1009 = !DINamespace(name: "num", scope: !143)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!472, !9, !9}
!1012 = !{!1013, !1014, !1015, !1017}
!1013 = !DILocalVariable(name: "self", arg: 1, scope: !1006, file: !1007, line: 571, type: !9)
!1014 = !DILocalVariable(name: "rhs", arg: 2, scope: !1006, file: !1007, line: 571, type: !9)
!1015 = !DILocalVariable(name: "a", scope: !1016, file: !1007, line: 572, type: !9, align: 8)
!1016 = distinct !DILexicalBlock(scope: !1006, file: !1007, line: 572, column: 13)
!1017 = !DILocalVariable(name: "b", scope: !1016, file: !1007, line: 572, type: !415, align: 1)
!1018 = !DILocation(line: 571, column: 34, scope: !1006)
!1019 = !DILocation(line: 571, column: 40, scope: !1006)
!1020 = !DILocalVariable(name: "self", arg: 1, scope: !1021, file: !1007, line: 1698, type: !9)
!1021 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hfb2247e143eeda61E", scope: !1008, file: !1007, line: 1698, type: !1022, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1028)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!1024, !9, !9}
!1024 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1025, templateParams: !24, identifier: "5d4cb4b3e2da4aeebd47965411ffedac")
!1025 = !{!1026, !1027}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1024, file: !2, baseType: !9, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1024, file: !2, baseType: !415, size: 8, align: 8, offset: 64)
!1028 = !{!1020, !1029, !1030, !1032}
!1029 = !DILocalVariable(name: "rhs", arg: 2, scope: !1021, file: !1007, line: 1698, type: !9)
!1030 = !DILocalVariable(name: "a", scope: !1031, file: !1007, line: 1699, type: !22, align: 8)
!1031 = distinct !DILexicalBlock(scope: !1021, file: !1007, line: 1699, column: 13)
!1032 = !DILocalVariable(name: "b", scope: !1031, file: !1007, line: 1699, type: !415, align: 1)
!1033 = !DILocation(line: 1698, column: 38, scope: !1021, inlinedAt: !1034)
!1034 = distinct !DILocation(line: 572, column: 26, scope: !1006)
!1035 = !DILocation(line: 1698, column: 44, scope: !1021, inlinedAt: !1034)
!1036 = !DILocation(line: 1699, column: 26, scope: !1021, inlinedAt: !1034)
!1037 = !DILocation(line: 1699, column: 18, scope: !1021, inlinedAt: !1034)
!1038 = !DILocation(line: 1699, column: 18, scope: !1031, inlinedAt: !1034)
!1039 = !DILocation(line: 1699, column: 21, scope: !1021, inlinedAt: !1034)
!1040 = !DILocation(line: 1699, column: 21, scope: !1031, inlinedAt: !1034)
!1041 = !DILocation(line: 1700, column: 13, scope: !1031, inlinedAt: !1034)
!1042 = !DILocation(line: 1701, column: 10, scope: !1021, inlinedAt: !1034)
!1043 = !DILocation(line: 572, column: 26, scope: !1006)
!1044 = !DILocation(line: 572, column: 18, scope: !1006)
!1045 = !DILocation(line: 572, column: 18, scope: !1016)
!1046 = !DILocation(line: 572, column: 21, scope: !1006)
!1047 = !DILocation(line: 572, column: 21, scope: !1016)
!1048 = !DILocation(line: 573, column: 16, scope: !1016)
!1049 = !DILocation(line: 573, column: 42, scope: !1016)
!1050 = !DILocation(line: 573, column: 13, scope: !1016)
!1051 = !DILocation(line: 573, column: 30, scope: !1016)
!1052 = !DILocation(line: 574, column: 10, scope: !1006)
!1053 = !{i64 0, i64 2}
!1054 = distinct !DISubprogram(name: "next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h19b99a59f73778e5E", scope: !1008, file: !1007, line: 2212, type: !1055, scopeLine: 2212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1057)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!9, !9}
!1057 = !{!1058}
!1058 = !DILocalVariable(name: "self", arg: 1, scope: !1054, file: !1007, line: 2212, type: !9)
!1059 = !DILocation(line: 2212, column: 40, scope: !1054)
!1060 = !DILocation(line: 2213, column: 13, scope: !1054)
!1061 = !DILocation(line: 2214, column: 10, scope: !1054)
!1062 = distinct !DISubprogram(name: "one_less_than_next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17haf8dbd097bc2d15dE", scope: !1008, file: !1007, line: 2180, type: !1055, scopeLine: 2180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1063)
!1063 = !{!1064, !1065, !1067}
!1064 = !DILocalVariable(name: "self", arg: 1, scope: !1062, file: !1007, line: 2180, type: !9)
!1065 = !DILocalVariable(name: "p", scope: !1066, file: !1007, line: 2183, type: !9, align: 8)
!1066 = distinct !DILexicalBlock(scope: !1062, file: !1007, line: 2183, column: 13)
!1067 = !DILocalVariable(name: "z", scope: !1068, file: !1007, line: 2188, type: !9, align: 8)
!1068 = distinct !DILexicalBlock(scope: !1066, file: !1007, line: 2188, column: 13)
!1069 = !DILocation(line: 2180, column: 50, scope: !1062)
!1070 = !DILocation(line: 2181, column: 16, scope: !1062)
!1071 = !DILocation(line: 2183, column: 21, scope: !1062)
!1072 = !DILocation(line: 2181, column: 35, scope: !1062)
!1073 = !DILocation(line: 2190, column: 10, scope: !1062)
!1074 = !DILocation(line: 2183, column: 17, scope: !1066)
!1075 = !DILocation(line: 2188, column: 30, scope: !1066)
!1076 = !DILocation(line: 2188, column: 17, scope: !1068)
!1077 = !DILocation(line: 2189, column: 13, scope: !1068)
!1078 = distinct !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17hac9cc18aac0fdaffE", scope: !410, file: !1079, line: 454, type: !1080, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1082)
!1079 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "c1aecaf6a5b28eb8d294ea6247bce985")
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!175, !410}
!1082 = !{!1083, !1084, !1086}
!1083 = !DILocalVariable(name: "self", arg: 1, scope: !1078, file: !1079, line: 454, type: !410)
!1084 = !DILocalVariable(name: "exclusive_end", scope: !1085, file: !1079, line: 458, type: !9, align: 8)
!1085 = distinct !DILexicalBlock(scope: !1078, file: !1079, line: 458, column: 9)
!1086 = !DILocalVariable(name: "start", scope: !1087, file: !1079, line: 459, type: !9, align: 8)
!1087 = distinct !DILexicalBlock(scope: !1085, file: !1079, line: 459, column: 9)
!1088 = !DILocation(line: 454, column: 42, scope: !1078)
!1089 = !DILocation(line: 459, column: 13, scope: !1087)
!1090 = !DILocation(line: 458, column: 29, scope: !1078)
!1091 = !DILocation(line: 458, column: 13, scope: !1085)
!1092 = !DILocation(line: 459, column: 24, scope: !1085)
!1093 = !DILocation(line: 459, column: 64, scope: !1085)
!1094 = !DILocation(line: 459, column: 21, scope: !1085)
!1095 = !DILocation(line: 459, column: 41, scope: !1085)
!1096 = !DILocation(line: 460, column: 9, scope: !1087)
!1097 = !DILocation(line: 461, column: 6, scope: !1078)
!1098 = distinct !DISubprogram(name: "call_mut<(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion), core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17he490ed33b6ccf2c8E", scope: !1100, file: !1099, line: 297, type: !1103, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1123, retainedNodes: !1116)
!1099 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "56fb008eac3df8d06ce524ffb023f0b6")
!1100 = !DINamespace(name: "{impl#3}", scope: !1101)
!1101 = !DINamespace(name: "impls", scope: !1102)
!1102 = !DINamespace(name: "function", scope: !177)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!415, !1105, !12, !12}
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1106, size: 64, align: 64, dwarfAddressSpace: 0)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1107, size: 64, align: 64, dwarfAddressSpace: 0)
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", scope: !1108, file: !2, size: 64, align: 64, elements: !1110, templateParams: !24, identifier: "25f3b8d761b264abd6ec48ea7f1b8711")
!1108 = !DINamespace(name: "sort_unstable_by", scope: !1109)
!1109 = !DINamespace(name: "{impl#0}", scope: !167)
!1110 = !{!1111}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__compare", scope: !1107, file: !2, baseType: !1112, size: 64, align: 64)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}", baseType: !1113, size: 64, align: 64, dwarfAddressSpace: 0)
!1113 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1114, file: !2, align: 8, elements: !24, identifier: "ca3fecee02c82567f663379c4968536e")
!1114 = !DINamespace(name: "sort", scope: !1115)
!1115 = !DINamespace(name: "{impl#0}", scope: !14)
!1116 = !{!1117, !1118}
!1117 = !DILocalVariable(name: "self", arg: 1, scope: !1098, file: !1099, line: 297, type: !1105)
!1118 = !DILocalVariable(name: "args", arg: 2, scope: !1098, file: !1099, line: 297, type: !1119)
!1119 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion)", file: !2, size: 128, align: 64, elements: !1120, templateParams: !24, identifier: "e2932a3244803b30a84f538f3ab07e34")
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1119, file: !2, baseType: !12, size: 64, align: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1119, file: !2, baseType: !12, size: 64, align: 64, offset: 64)
!1123 = !{!1124, !1125}
!1124 = !DITemplateTypeParameter(name: "A", type: !1119)
!1125 = !DITemplateTypeParameter(name: "F", type: !1107)
!1126 = !DILocation(line: 297, column: 40, scope: !1098)
!1127 = !DILocation(line: 297, column: 51, scope: !1098)
!1128 = !DILocation(line: 298, column: 13, scope: !1098)
!1129 = !DILocation(line: 299, column: 10, scope: !1098)
!1130 = distinct !DISubprogram(name: "drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17h3d495b159b1f4552E", scope: !218, file: !1131, line: 490, type: !1132, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1142, retainedNodes: !1140)
!1131 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "bdd6b96186b52f0612a564cb734428a7")
!1132 = !DISubroutineType(types: !1133)
!1133 = !{null, !1134}
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1135, size: 64, align: 64, dwarfAddressSpace: 0)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !1136, file: !2, size: 128, align: 64, elements: !1137, templateParams: !188, identifier: "9eeef050e558a608a57d5cf48358c631")
!1136 = !DINamespace(name: "sort", scope: !167)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1135, file: !2, baseType: !221, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1135, file: !2, baseType: !287, size: 64, align: 64, offset: 64)
!1140 = !{!1141}
!1141 = !DILocalVariable(arg: 1, scope: !1130, file: !1131, line: 490, type: !1134)
!1142 = !{!1143}
!1143 = !DITemplateTypeParameter(name: "T", type: !1135)
!1144 = !DILocation(line: 490, column: 1, scope: !1130)
!1145 = distinct !DISubprogram(name: "swap_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping17ha6d4e483251a8236E", scope: !218, file: !1131, line: 902, type: !1146, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1148)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{null, !287, !287, !9}
!1148 = !{!1149, !1150, !1151, !1152, !1154, !1156, !1158, !1161, !1163}
!1149 = !DILocalVariable(name: "x", arg: 1, scope: !1145, file: !1131, line: 902, type: !287)
!1150 = !DILocalVariable(name: "y", arg: 2, scope: !1145, file: !1131, line: 902, type: !287)
!1151 = !DILocalVariable(name: "count", arg: 3, scope: !1145, file: !1131, line: 902, type: !9)
!1152 = !DILocalVariable(name: "x", scope: !1153, file: !1131, line: 942, type: !606, align: 8)
!1153 = distinct !DILexicalBlock(scope: !1145, file: !1131, line: 909, column: 17)
!1154 = !DILocalVariable(name: "y", scope: !1155, file: !1131, line: 942, type: !606, align: 8)
!1155 = distinct !DILexicalBlock(scope: !1153, file: !1131, line: 910, column: 17)
!1156 = !DILocalVariable(name: "count", scope: !1157, file: !1131, line: 942, type: !9, align: 8)
!1157 = distinct !DILexicalBlock(scope: !1155, file: !1131, line: 911, column: 17)
!1158 = !DILocalVariable(name: "x", scope: !1159, file: !1131, line: 943, type: !1160, align: 8)
!1159 = distinct !DILexicalBlock(scope: !1145, file: !1131, line: 909, column: 17)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!1161 = !DILocalVariable(name: "y", scope: !1162, file: !1131, line: 943, type: !1160, align: 8)
!1162 = distinct !DILexicalBlock(scope: !1159, file: !1131, line: 910, column: 17)
!1163 = !DILocalVariable(name: "count", scope: !1164, file: !1131, line: 943, type: !9, align: 8)
!1164 = distinct !DILexicalBlock(scope: !1162, file: !1131, line: 911, column: 17)
!1165 = !DILocation(line: 902, column: 44, scope: !1145)
!1166 = !DILocation(line: 902, column: 55, scope: !1145)
!1167 = !DILocation(line: 902, column: 66, scope: !1145)
!1168 = !DILocation(line: 925, column: 9, scope: !1145)
!1169 = !DILocalVariable(name: "x", arg: 1, scope: !1170, file: !197, line: 2218, type: !287)
!1170 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping7runtime17hdaef8e0485d97d91E", scope: !1171, file: !197, line: 2218, type: !1146, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1172)
!1171 = !DINamespace(name: "swap_nonoverlapping", scope: !218)
!1172 = !{!1169, !1173, !1174}
!1173 = !DILocalVariable(name: "y", arg: 2, scope: !1170, file: !197, line: 2218, type: !287)
!1174 = !DILocalVariable(name: "count", arg: 3, scope: !1170, file: !197, line: 2218, type: !9)
!1175 = !DILocation(line: 2218, column: 39, scope: !1170, inlinedAt: !1176)
!1176 = distinct !DILocation(line: 925, column: 9, scope: !1145)
!1177 = !DILocation(line: 929, column: 13, scope: !1178, inlinedAt: !1176)
!1178 = !DILexicalBlockFile(scope: !1170, file: !1131, discriminator: 0)
!1179 = !DILocation(line: 930, column: 20, scope: !1178, inlinedAt: !1176)
!1180 = !DILocation(line: 931, column: 20, scope: !1178, inlinedAt: !1176)
!1181 = !DILocation(line: 2219, column: 20, scope: !1170, inlinedAt: !1176)
!1182 = !DILocation(line: 2221, column: 21, scope: !1170, inlinedAt: !1176)
!1183 = !DILocation(line: 938, column: 8, scope: !1145)
!1184 = !DILocalVariable(name: "self", arg: 1, scope: !1185, file: !1007, line: 2165, type: !9)
!1185 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h16ba94c2cf5461f8E", scope: !1008, file: !1007, line: 2165, type: !663, scopeLine: 2165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1186)
!1186 = !{!1184}
!1187 = !DILocation(line: 2165, column: 38, scope: !1185, inlinedAt: !1188)
!1188 = distinct !DILocation(line: 939, column: 14, scope: !1145)
!1189 = !DILocalVariable(name: "self", arg: 1, scope: !1190, file: !1007, line: 101, type: !9)
!1190 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hc4ab53f46baa4082E", scope: !1008, file: !1007, line: 101, type: !1191, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1193)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!27, !9}
!1193 = !{!1189}
!1194 = !DILocation(line: 101, column: 33, scope: !1190, inlinedAt: !1195)
!1195 = distinct !DILocation(line: 2166, column: 13, scope: !1185, inlinedAt: !1188)
!1196 = !DILocation(line: 102, column: 13, scope: !1190, inlinedAt: !1195)
!1197 = !DILocation(line: 2166, column: 13, scope: !1185, inlinedAt: !1188)
!1198 = !DILocation(line: 939, column: 13, scope: !1145)
!1199 = !DILocation(line: 939, column: 12, scope: !1145)
!1200 = !DILocation(line: 940, column: 38, scope: !1145)
!1201 = !DILocation(line: 940, column: 16, scope: !1145)
!1202 = !DILocation(line: 947, column: 14, scope: !1145)
!1203 = !DILocation(line: 942, column: 9, scope: !1145)
!1204 = !DILocation(line: 943, column: 9, scope: !1145)
!1205 = !DILocalVariable(name: "self", arg: 1, scope: !1206, file: !271, line: 57, type: !287)
!1206 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h07be5a7d6ee7b770E", scope: !293, file: !271, line: 57, type: !1207, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1210, retainedNodes: !1209)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!606, !287}
!1209 = !{!1205}
!1210 = !{!189, !1211}
!1211 = !DITemplateTypeParameter(name: "U", type: !9)
!1212 = !DILocation(line: 57, column: 26, scope: !1206, inlinedAt: !1213)
!1213 = distinct !DILocation(line: 942, column: 9, scope: !1145)
!1214 = !DILocation(line: 942, column: 9, scope: !1153)
!1215 = !DILocation(line: 57, column: 26, scope: !1206, inlinedAt: !1216)
!1216 = distinct !DILocation(line: 942, column: 9, scope: !1153)
!1217 = !DILocation(line: 942, column: 9, scope: !1155)
!1218 = !DILocation(line: 942, column: 9, scope: !1157)
!1219 = !DILocation(line: 948, column: 2, scope: !1145)
!1220 = !DILocalVariable(name: "self", arg: 1, scope: !1221, file: !271, line: 57, type: !287)
!1221 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h4e8d0fd0521083b9E", scope: !293, file: !271, line: 57, type: !1222, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1225, retainedNodes: !1224)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!1160, !287}
!1224 = !{!1220}
!1225 = !{!189, !1226}
!1226 = !DITemplateTypeParameter(name: "U", type: !123)
!1227 = !DILocation(line: 57, column: 26, scope: !1221, inlinedAt: !1228)
!1228 = distinct !DILocation(line: 943, column: 9, scope: !1145)
!1229 = !DILocation(line: 943, column: 9, scope: !1159)
!1230 = !DILocation(line: 57, column: 26, scope: !1221, inlinedAt: !1231)
!1231 = distinct !DILocation(line: 943, column: 9, scope: !1159)
!1232 = !DILocation(line: 943, column: 9, scope: !1162)
!1233 = !DILocation(line: 943, column: 9, scope: !1164)
!1234 = distinct !DISubprogram(name: "slice_from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h81e5ec8f89303343E", scope: !218, file: !1131, line: 733, type: !1235, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1237)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!170, !221, !9}
!1237 = !{!1238, !1239}
!1238 = !DILocalVariable(name: "data", arg: 1, scope: !1234, file: !1131, line: 733, type: !221)
!1239 = !DILocalVariable(name: "len", arg: 2, scope: !1234, file: !1131, line: 733, type: !9)
!1240 = !DILocation(line: 733, column: 38, scope: !1234)
!1241 = !DILocation(line: 733, column: 54, scope: !1234)
!1242 = !DILocation(line: 58, column: 26, scope: !550, inlinedAt: !1243)
!1243 = distinct !DILocation(line: 734, column: 20, scope: !1234)
!1244 = !DILocation(line: 734, column: 5, scope: !1234)
!1245 = !DILocation(line: 735, column: 2, scope: !1234)
!1246 = distinct !DISubprogram(name: "drop_in_place<u32>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u32$GT$17h3ddda93f5d2fc92fE", scope: !218, file: !1131, line: 490, type: !1247, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1252, retainedNodes: !1250)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{null, !1249}
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!1250 = !{!1251}
!1251 = !DILocalVariable(arg: 1, scope: !1246, file: !1131, line: 490, type: !1249)
!1252 = !{!1253}
!1253 = !DITemplateTypeParameter(name: "T", type: !27)
!1254 = !DILocation(line: 490, column: 1, scope: !1246)
!1255 = distinct !DISubprogram(name: "drop_in_place<u64>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u64$GT$17h707625e6c97aabb3E", scope: !218, file: !1131, line: 490, type: !1256, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !758, retainedNodes: !1259)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{null, !1258}
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!1259 = !{!1260}
!1260 = !DILocalVariable(arg: 1, scope: !1255, file: !1131, line: 490, type: !1258)
!1261 = !DILocation(line: 490, column: 1, scope: !1255)
!1262 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h4f44642fed623530E", scope: !218, file: !1131, line: 765, type: !1263, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1265)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!244, !287, !9}
!1265 = !{!1266, !1267}
!1266 = !DILocalVariable(name: "data", arg: 1, scope: !1262, file: !1131, line: 765, type: !287)
!1267 = !DILocalVariable(name: "len", arg: 2, scope: !1262, file: !1131, line: 765, type: !9)
!1268 = !DILocation(line: 765, column: 42, scope: !1262)
!1269 = !DILocation(line: 765, column: 56, scope: !1262)
!1270 = !DILocalVariable(name: "self", arg: 1, scope: !1271, file: !271, line: 57, type: !287)
!1271 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hc1907ae19bd25db1E", scope: !293, file: !271, line: 57, type: !1272, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !554, retainedNodes: !1275)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!1274, !287}
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1275 = !{!1270}
!1276 = !DILocation(line: 57, column: 26, scope: !1271, inlinedAt: !1277)
!1277 = distinct !DILocation(line: 766, column: 24, scope: !1262)
!1278 = !DILocation(line: 766, column: 5, scope: !1262)
!1279 = !DILocation(line: 767, column: 2, scope: !1262)
!1280 = distinct !DISubprogram(name: "drop_in_place<&u8>", linkageName: "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17hece34ee525e599f5E", scope: !218, file: !1131, line: 490, type: !1281, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1286, retainedNodes: !1284)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{null, !1283}
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u8", baseType: !122, size: 64, align: 64, dwarfAddressSpace: 0)
!1284 = !{!1285}
!1285 = !DILocalVariable(arg: 1, scope: !1280, file: !1131, line: 490, type: !1283)
!1286 = !{!1287}
!1287 = !DITemplateTypeParameter(name: "T", type: !122)
!1288 = !DILocation(line: 490, column: 1, scope: !1280)
!1289 = distinct !DISubprogram(name: "drop_in_place<&u32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h9f4315a52c3a60e0E", scope: !218, file: !1131, line: 490, type: !1290, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1295, retainedNodes: !1293)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{null, !1292}
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u32", baseType: !85, size: 64, align: 64, dwarfAddressSpace: 0)
!1293 = !{!1294}
!1294 = !DILocalVariable(arg: 1, scope: !1289, file: !1131, line: 490, type: !1292)
!1295 = !{!1296}
!1296 = !DITemplateTypeParameter(name: "T", type: !85)
!1297 = !DILocation(line: 490, column: 1, scope: !1289)
!1298 = distinct !DISubprogram(name: "drop_in_place<&u64>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17ha705ee9fc1ef02fcE", scope: !218, file: !1131, line: 490, type: !1299, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1304, retainedNodes: !1302)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !1301}
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u64", baseType: !132, size: 64, align: 64, dwarfAddressSpace: 0)
!1302 = !{!1303}
!1303 = !DILocalVariable(arg: 1, scope: !1298, file: !1131, line: 490, type: !1301)
!1304 = !{!1305}
!1305 = !DITemplateTypeParameter(name: "T", type: !132)
!1306 = !DILocation(line: 490, column: 1, scope: !1298)
!1307 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17hf6f1df5e8875f92fE", scope: !218, file: !1131, line: 956, type: !1146, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1308)
!1308 = !{!1309, !1310, !1311, !1312, !1315, !1317, !1319, !1321}
!1309 = !DILocalVariable(name: "x", arg: 1, scope: !1307, file: !1131, line: 956, type: !287)
!1310 = !DILocalVariable(name: "y", arg: 2, scope: !1307, file: !1131, line: 956, type: !287)
!1311 = !DILocalVariable(name: "count", arg: 3, scope: !1307, file: !1131, line: 956, type: !9)
!1312 = !DILocalVariable(name: "x", scope: !1313, file: !1131, line: 957, type: !1314, align: 8)
!1313 = distinct !DILexicalBlock(scope: !1307, file: !1131, line: 957, column: 5)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !643, size: 64, align: 64, dwarfAddressSpace: 0)
!1315 = !DILocalVariable(name: "y", scope: !1316, file: !1131, line: 958, type: !1314, align: 8)
!1316 = distinct !DILexicalBlock(scope: !1313, file: !1131, line: 958, column: 5)
!1317 = !DILocalVariable(name: "i", scope: !1318, file: !1131, line: 959, type: !9, align: 8)
!1318 = distinct !DILexicalBlock(scope: !1316, file: !1131, line: 959, column: 5)
!1319 = !DILocalVariable(name: "x", scope: !1320, file: !1131, line: 962, type: !961, align: 8)
!1320 = distinct !DILexicalBlock(scope: !1318, file: !1131, line: 962, column: 9)
!1321 = !DILocalVariable(name: "y", scope: !1322, file: !1131, line: 965, type: !961, align: 8)
!1322 = distinct !DILexicalBlock(scope: !1320, file: !1131, line: 965, column: 9)
!1323 = !DILocation(line: 956, column: 55, scope: !1307)
!1324 = !DILocation(line: 956, column: 66, scope: !1307)
!1325 = !DILocation(line: 956, column: 77, scope: !1307)
!1326 = !DILocation(line: 959, column: 9, scope: !1318)
!1327 = !DILocalVariable(name: "self", arg: 1, scope: !1328, file: !271, line: 57, type: !287)
!1328 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hf176cc55110714aaE", scope: !293, file: !271, line: 57, type: !1329, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1332, retainedNodes: !1331)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!1314, !287}
!1331 = !{!1327}
!1332 = !{!189, !1333}
!1333 = !DITemplateTypeParameter(name: "U", type: !643)
!1334 = !DILocation(line: 57, column: 26, scope: !1328, inlinedAt: !1335)
!1335 = distinct !DILocation(line: 957, column: 13, scope: !1307)
!1336 = !DILocation(line: 957, column: 13, scope: !1307)
!1337 = !DILocation(line: 957, column: 9, scope: !1313)
!1338 = !DILocation(line: 57, column: 26, scope: !1328, inlinedAt: !1339)
!1339 = distinct !DILocation(line: 958, column: 13, scope: !1313)
!1340 = !DILocation(line: 958, column: 13, scope: !1313)
!1341 = !DILocation(line: 958, column: 9, scope: !1316)
!1342 = !DILocation(line: 959, column: 17, scope: !1316)
!1343 = !DILocation(line: 960, column: 5, scope: !1318)
!1344 = !DILocation(line: 960, column: 11, scope: !1318)
!1345 = !DILocation(line: 970, column: 2, scope: !1307)
!1346 = !DILocation(line: 962, column: 38, scope: !1318)
!1347 = !DILocalVariable(name: "self", arg: 1, scope: !1348, file: !271, line: 1015, type: !1314)
!1348 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hde90f73d7c5d6a3aE", scope: !293, file: !271, line: 1015, type: !1349, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1351)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!1314, !1314, !9}
!1351 = !{!1347, !1352}
!1352 = !DILocalVariable(name: "count", arg: 2, scope: !1348, file: !271, line: 1015, type: !9)
!1353 = !DILocation(line: 1015, column: 29, scope: !1348, inlinedAt: !1354)
!1354 = distinct !DILocation(line: 962, column: 32, scope: !1318)
!1355 = !DILocation(line: 1015, column: 35, scope: !1348, inlinedAt: !1354)
!1356 = !DILocalVariable(name: "self", arg: 1, scope: !1357, file: !271, line: 472, type: !1314)
!1357 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h84cb0cfc8b80c76cE", scope: !293, file: !271, line: 472, type: !1358, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1360)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!1314, !1314, !231}
!1360 = !{!1356, !1361}
!1361 = !DILocalVariable(name: "count", arg: 2, scope: !1357, file: !271, line: 472, type: !231)
!1362 = !DILocation(line: 472, column: 32, scope: !1357, inlinedAt: !1363)
!1363 = distinct !DILocation(line: 1020, column: 18, scope: !1348, inlinedAt: !1354)
!1364 = !DILocation(line: 472, column: 38, scope: !1357, inlinedAt: !1363)
!1365 = !DILocation(line: 479, column: 18, scope: !1357, inlinedAt: !1363)
!1366 = !DILocation(line: 962, column: 26, scope: !1318)
!1367 = !DILocation(line: 962, column: 13, scope: !1320)
!1368 = !DILocation(line: 965, column: 38, scope: !1320)
!1369 = !DILocation(line: 1015, column: 29, scope: !1348, inlinedAt: !1370)
!1370 = distinct !DILocation(line: 965, column: 32, scope: !1320)
!1371 = !DILocation(line: 1015, column: 35, scope: !1348, inlinedAt: !1370)
!1372 = !DILocation(line: 472, column: 32, scope: !1357, inlinedAt: !1373)
!1373 = distinct !DILocation(line: 1020, column: 18, scope: !1348, inlinedAt: !1370)
!1374 = !DILocation(line: 472, column: 38, scope: !1357, inlinedAt: !1373)
!1375 = !DILocation(line: 479, column: 18, scope: !1357, inlinedAt: !1373)
!1376 = !DILocation(line: 965, column: 26, scope: !1320)
!1377 = !DILocation(line: 965, column: 13, scope: !1322)
!1378 = !DILocation(line: 966, column: 9, scope: !1322)
!1379 = !DILocation(line: 968, column: 9, scope: !1322)
!1380 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read17h7e887ee07bcfebe1E", scope: !218, file: !1131, line: 1137, type: !1381, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1383)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{!643, !642}
!1383 = !{!1384, !1385}
!1384 = !DILocalVariable(name: "src", arg: 1, scope: !1380, file: !1131, line: 1137, type: !642)
!1385 = !DILocalVariable(name: "tmp", scope: !1386, file: !1131, line: 1145, type: !1387, align: 8)
!1386 = distinct !DILexicalBlock(scope: !1380, file: !1131, line: 1145, column: 5)
!1387 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", scope: !644, file: !2, size: 192, align: 64, elements: !1388, templateParams: !655, identifier: "6ea00e4505699079afc2a375c2bbced4")
!1388 = !{!1389, !1390}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1387, file: !2, baseType: !7, align: 8)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1387, file: !2, baseType: !1391, size: 192, align: 64)
!1391 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", scope: !650, file: !2, size: 192, align: 64, elements: !1392, templateParams: !655, identifier: "b4fdb6e3c095fa47e261438e4284aa68")
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1391, file: !2, baseType: !643, size: 192, align: 64)
!1394 = !DILocation(line: 1137, column: 29, scope: !1380)
!1395 = !DILocation(line: 1145, column: 9, scope: !1386)
!1396 = !DILocation(line: 1153, column: 9, scope: !1386)
!1397 = !DILocalVariable(name: "src", arg: 1, scope: !1398, file: !197, line: 2218, type: !642)
!1398 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read7runtime17h2e6cf6bc438ff033E", scope: !1399, file: !197, line: 2218, type: !1400, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1402)
!1399 = !DINamespace(name: "read", scope: !218)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{null, !642}
!1402 = !{!1397}
!1403 = !DILocation(line: 2218, column: 39, scope: !1398, inlinedAt: !1404)
!1404 = distinct !DILocation(line: 1153, column: 9, scope: !1386)
!1405 = !DILocation(line: 1155, column: 35, scope: !1406, inlinedAt: !1404)
!1406 = !DILexicalBlockFile(scope: !1398, file: !1131, discriminator: 0)
!1407 = !DILocation(line: 2219, column: 20, scope: !1398, inlinedAt: !1404)
!1408 = !DILocation(line: 2221, column: 21, scope: !1398, inlinedAt: !1404)
!1409 = !DILocalVariable(name: "self", arg: 1, scope: !1410, file: !1411, line: 567, type: !1414)
!1410 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17haa74eae5be0f321eE", scope: !1387, file: !1411, line: 567, type: !1412, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1415)
!1411 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "1414c0f1ab8ce712ce2deada2fd51b28")
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!1314, !1414}
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", baseType: !1387, size: 64, align: 64, dwarfAddressSpace: 0)
!1415 = !{!1409}
!1416 = !DILocation(line: 567, column: 29, scope: !1410, inlinedAt: !1417)
!1417 = distinct !DILocation(line: 1157, column: 34, scope: !1386)
!1418 = !DILocation(line: 1157, column: 9, scope: !1386)
!1419 = !DILocation(line: 1158, column: 9, scope: !1386)
!1420 = !DILocalVariable(name: "self", arg: 1, scope: !1421, file: !1411, line: 622, type: !1387)
!1421 = distinct !DISubprogram(name: "assume_init<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hfb37da7d9f07f3fdE", scope: !1387, file: !1411, line: 622, type: !1422, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1424)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!643, !1387, !321}
!1424 = !{!1420}
!1425 = !DILocation(line: 622, column: 37, scope: !1421, inlinedAt: !1426)
!1426 = distinct !DILocation(line: 1158, column: 9, scope: !1386)
!1427 = !DILocation(line: 627, column: 38, scope: !1421, inlinedAt: !1426)
!1428 = !DILocalVariable(name: "slot", arg: 1, scope: !1429, file: !998, line: 88, type: !1391)
!1429 = distinct !DISubprogram(name: "into_inner<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h957d2ef5236cbae2E", scope: !1391, file: !998, line: 88, type: !1430, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1432)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!643, !1391}
!1432 = !{!1428}
!1433 = !DILocation(line: 88, column: 29, scope: !1429, inlinedAt: !1434)
!1434 = distinct !DILocation(line: 627, column: 13, scope: !1421, inlinedAt: !1426)
!1435 = !DILocation(line: 89, column: 9, scope: !1429, inlinedAt: !1434)
!1436 = !DILocation(line: 1160, column: 2, scope: !1380)
!1437 = distinct !DISubprogram(name: "read<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read17hc4a3b4e001a11806E", scope: !218, file: !1131, line: 1137, type: !1438, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1440)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!13, !221}
!1440 = !{!1441, !1442}
!1441 = !DILocalVariable(name: "src", arg: 1, scope: !1437, file: !1131, line: 1137, type: !221)
!1442 = !DILocalVariable(name: "tmp", scope: !1443, file: !1131, line: 1145, type: !643, align: 8)
!1443 = distinct !DILexicalBlock(scope: !1437, file: !1131, line: 1145, column: 5)
!1444 = !DILocation(line: 1137, column: 29, scope: !1437)
!1445 = !DILocation(line: 1145, column: 9, scope: !1443)
!1446 = !DILocation(line: 1153, column: 9, scope: !1443)
!1447 = !DILocalVariable(name: "src", arg: 1, scope: !1448, file: !197, line: 2218, type: !221)
!1448 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read7runtime17hd50a912ea7f502c4E", scope: !1399, file: !197, line: 2218, type: !1449, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1451)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !221}
!1451 = !{!1447}
!1452 = !DILocation(line: 2218, column: 39, scope: !1448, inlinedAt: !1453)
!1453 = distinct !DILocation(line: 1153, column: 9, scope: !1443)
!1454 = !DILocation(line: 1155, column: 35, scope: !1455, inlinedAt: !1453)
!1455 = !DILexicalBlockFile(scope: !1448, file: !1131, discriminator: 0)
!1456 = !DILocation(line: 2219, column: 20, scope: !1448, inlinedAt: !1453)
!1457 = !DILocation(line: 2221, column: 21, scope: !1448, inlinedAt: !1453)
!1458 = !DILocalVariable(name: "self", arg: 1, scope: !1459, file: !1411, line: 567, type: !961)
!1459 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h094867d4f8094388E", scope: !643, file: !1411, line: 567, type: !1460, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1462)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!287, !961}
!1462 = !{!1458}
!1463 = !DILocation(line: 567, column: 29, scope: !1459, inlinedAt: !1464)
!1464 = distinct !DILocation(line: 1157, column: 34, scope: !1443)
!1465 = !DILocation(line: 1157, column: 9, scope: !1443)
!1466 = !DILocation(line: 1158, column: 9, scope: !1443)
!1467 = !DILocalVariable(name: "self", arg: 1, scope: !1468, file: !1411, line: 622, type: !643)
!1468 = distinct !DISubprogram(name: "assume_init<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3bed9f4d2497aebaE", scope: !643, file: !1411, line: 622, type: !1469, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1471)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!13, !643, !321}
!1471 = !{!1467}
!1472 = !DILocation(line: 622, column: 37, scope: !1468, inlinedAt: !1473)
!1473 = distinct !DILocation(line: 1158, column: 9, scope: !1443)
!1474 = !DILocation(line: 627, column: 38, scope: !1468, inlinedAt: !1473)
!1475 = !DILocalVariable(name: "slot", arg: 1, scope: !1476, file: !998, line: 88, type: !649)
!1476 = distinct !DISubprogram(name: "into_inner<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h2078a607764aae77E", scope: !649, file: !998, line: 88, type: !1477, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1479)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!13, !649}
!1479 = !{!1475}
!1480 = !DILocation(line: 88, column: 29, scope: !1476, inlinedAt: !1481)
!1481 = distinct !DILocation(line: 627, column: 13, scope: !1468, inlinedAt: !1473)
!1482 = !DILocation(line: 89, column: 9, scope: !1476, inlinedAt: !1481)
!1483 = !DILocation(line: 1160, column: 2, scope: !1437)
!1484 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4swap17h59951b18b0ba78c3E", scope: !218, file: !1131, line: 841, type: !1485, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1487)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{null, !287, !287}
!1487 = !{!1488, !1489, !1490}
!1488 = !DILocalVariable(name: "x", arg: 1, scope: !1484, file: !1131, line: 841, type: !287)
!1489 = !DILocalVariable(name: "y", arg: 2, scope: !1484, file: !1131, line: 841, type: !287)
!1490 = !DILocalVariable(name: "tmp", scope: !1491, file: !1131, line: 844, type: !643, align: 8)
!1491 = distinct !DILexicalBlock(scope: !1484, file: !1131, line: 844, column: 5)
!1492 = !DILocation(line: 841, column: 29, scope: !1484)
!1493 = !DILocation(line: 841, column: 40, scope: !1484)
!1494 = !DILocation(line: 844, column: 9, scope: !1491)
!1495 = !DILocation(line: 567, column: 29, scope: !1459, inlinedAt: !1496)
!1496 = distinct !DILocation(line: 852, column: 32, scope: !1491)
!1497 = !DILocation(line: 852, column: 9, scope: !1491)
!1498 = !DILocation(line: 853, column: 9, scope: !1491)
!1499 = !DILocalVariable(name: "self", arg: 1, scope: !1500, file: !1411, line: 528, type: !1503)
!1500 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h82c8e03490168d22E", scope: !643, file: !1411, line: 528, type: !1501, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1504)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!221, !1503}
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !643, size: 64, align: 64, dwarfAddressSpace: 0)
!1504 = !{!1499}
!1505 = !DILocation(line: 528, column: 25, scope: !1500, inlinedAt: !1506)
!1506 = distinct !DILocation(line: 854, column: 29, scope: !1491)
!1507 = !DILocation(line: 854, column: 9, scope: !1491)
!1508 = !DILocation(line: 856, column: 2, scope: !1484)
!1509 = distinct !DISubprogram(name: "swap<usize>", linkageName: "_ZN4core3ptr4swap17h5e214ee24fa407efE", scope: !218, file: !1131, line: 841, type: !1510, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !479, retainedNodes: !1512)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{null, !606, !606}
!1512 = !{!1513, !1514, !1515}
!1513 = !DILocalVariable(name: "x", arg: 1, scope: !1509, file: !1131, line: 841, type: !606)
!1514 = !DILocalVariable(name: "y", arg: 2, scope: !1509, file: !1131, line: 841, type: !606)
!1515 = !DILocalVariable(name: "tmp", scope: !1516, file: !1131, line: 844, type: !1517, align: 8)
!1516 = distinct !DILexicalBlock(scope: !1509, file: !1131, line: 844, column: 5)
!1517 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !644, file: !2, size: 64, align: 64, elements: !1518, templateParams: !479, identifier: "f95f8b7f9db107eddf8fdfffc65ab80a")
!1518 = !{!1519, !1520}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1517, file: !2, baseType: !7, align: 8)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1517, file: !2, baseType: !1521, size: 64, align: 64)
!1521 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !650, file: !2, size: 64, align: 64, elements: !1522, templateParams: !479, identifier: "a096448d4591367aad7c2fc076c98051")
!1522 = !{!1523}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1521, file: !2, baseType: !9, size: 64, align: 64)
!1524 = !DILocation(line: 841, column: 29, scope: !1509)
!1525 = !DILocation(line: 841, column: 40, scope: !1509)
!1526 = !DILocation(line: 844, column: 9, scope: !1516)
!1527 = !DILocation(line: 315, column: 6, scope: !1528, inlinedAt: !1531)
!1528 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h780d32ff853a7e14E", scope: !1517, file: !1411, line: 313, type: !1529, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !479, retainedNodes: !24)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!1517}
!1531 = distinct !DILocation(line: 844, column: 19, scope: !1509)
!1532 = !DILocation(line: 844, column: 19, scope: !1509)
!1533 = !DILocalVariable(name: "self", arg: 1, scope: !1534, file: !1411, line: 567, type: !1537)
!1534 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hb825bba19a38ad7eE", scope: !1517, file: !1411, line: 567, type: !1535, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !479, retainedNodes: !1538)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!606, !1537}
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !1517, size: 64, align: 64, dwarfAddressSpace: 0)
!1538 = !{!1533}
!1539 = !DILocation(line: 567, column: 29, scope: !1534, inlinedAt: !1540)
!1540 = distinct !DILocation(line: 852, column: 32, scope: !1516)
!1541 = !DILocation(line: 852, column: 9, scope: !1516)
!1542 = !DILocation(line: 853, column: 9, scope: !1516)
!1543 = !DILocalVariable(name: "self", arg: 1, scope: !1544, file: !1411, line: 528, type: !1547)
!1544 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hb7152c96c18c5ae1E", scope: !1517, file: !1411, line: 528, type: !1545, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !479, retainedNodes: !1548)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!605, !1547}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !1517, size: 64, align: 64, dwarfAddressSpace: 0)
!1548 = !{!1543}
!1549 = !DILocation(line: 528, column: 25, scope: !1544, inlinedAt: !1550)
!1550 = distinct !DILocation(line: 854, column: 29, scope: !1516)
!1551 = !DILocation(line: 854, column: 9, scope: !1516)
!1552 = !DILocation(line: 856, column: 2, scope: !1509)
!1553 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17h283cfac31f5bb3e5E", scope: !218, file: !1131, line: 490, type: !1554, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1559, retainedNodes: !1557)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{null, !1556}
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!1557 = !{!1558}
!1558 = !DILocalVariable(arg: 1, scope: !1553, file: !1131, line: 490, type: !1556)
!1559 = !{!1560}
!1560 = !DITemplateTypeParameter(name: "T", type: !109)
!1561 = !DILocation(line: 490, column: 1, scope: !1553)
!1562 = distinct !DISubprogram(name: "write<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write17h13f342a0963792bfE", scope: !218, file: !1131, line: 1338, type: !1563, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1565)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{null, !287, !13}
!1565 = !{!1566, !1567}
!1566 = !DILocalVariable(name: "dst", arg: 1, scope: !1562, file: !1131, line: 1338, type: !287)
!1567 = !DILocalVariable(name: "src", arg: 2, scope: !1562, file: !1131, line: 1338, type: !13)
!1568 = !DILocation(line: 1338, column: 30, scope: !1562)
!1569 = !DILocation(line: 1338, column: 43, scope: !1562)
!1570 = !DILocation(line: 1350, column: 9, scope: !1562)
!1571 = !DILocalVariable(name: "dst", arg: 1, scope: !1572, file: !197, line: 2218, type: !287)
!1572 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write7runtime17h63a19ca64089740aE", scope: !1573, file: !197, line: 2218, type: !1574, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1576)
!1573 = !DINamespace(name: "write", scope: !218)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{null, !287}
!1576 = !{!1571}
!1577 = !DILocation(line: 2218, column: 39, scope: !1572, inlinedAt: !1578)
!1578 = distinct !DILocation(line: 1350, column: 9, scope: !1562)
!1579 = !DILocation(line: 1352, column: 33, scope: !1580, inlinedAt: !1578)
!1580 = !DILexicalBlockFile(scope: !1572, file: !1131, discriminator: 0)
!1581 = !DILocation(line: 2219, column: 20, scope: !1572, inlinedAt: !1578)
!1582 = !DILocation(line: 2221, column: 21, scope: !1572, inlinedAt: !1578)
!1583 = !DILocation(line: 1354, column: 9, scope: !1562)
!1584 = !DILocation(line: 1357, column: 2, scope: !1562)
!1585 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write17h78e37c5b1bec47a4E", scope: !218, file: !1131, line: 1338, type: !1586, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1588)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{null, !1314, !643}
!1588 = !{!1589, !1590}
!1589 = !DILocalVariable(name: "dst", arg: 1, scope: !1585, file: !1131, line: 1338, type: !1314)
!1590 = !DILocalVariable(name: "src", arg: 2, scope: !1585, file: !1131, line: 1338, type: !643)
!1591 = !DILocation(line: 1338, column: 30, scope: !1585)
!1592 = !DILocation(line: 1338, column: 43, scope: !1585)
!1593 = !DILocation(line: 1350, column: 9, scope: !1585)
!1594 = !DILocalVariable(name: "dst", arg: 1, scope: !1595, file: !197, line: 2218, type: !1314)
!1595 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write7runtime17h838a6b99bc5e95b2E", scope: !1573, file: !197, line: 2218, type: !1596, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1598)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{null, !1314}
!1598 = !{!1594}
!1599 = !DILocation(line: 2218, column: 39, scope: !1595, inlinedAt: !1600)
!1600 = distinct !DILocation(line: 1350, column: 9, scope: !1585)
!1601 = !DILocation(line: 1352, column: 33, scope: !1602, inlinedAt: !1600)
!1602 = !DILexicalBlockFile(scope: !1595, file: !1131, discriminator: 0)
!1603 = !DILocation(line: 2219, column: 20, scope: !1595, inlinedAt: !1600)
!1604 = !DILocation(line: 2221, column: 21, scope: !1595, inlinedAt: !1600)
!1605 = !DILocation(line: 1354, column: 9, scope: !1585)
!1606 = !DILocation(line: 1357, column: 2, scope: !1585)
!1607 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>", linkageName: "_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17hf1197bdd632281c1E", scope: !218, file: !1131, line: 490, type: !1608, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1613, retainedNodes: !1611)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1610}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!1611 = !{!1612}
!1612 = !DILocalVariable(arg: 1, scope: !1607, file: !1131, line: 490, type: !1610)
!1613 = !{!1614}
!1614 = !DITemplateTypeParameter(name: "T", type: !94)
!1615 = !DILocation(line: 490, column: 1, scope: !1607)
!1616 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::FrameRange>", linkageName: "_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h62b29fe4400e8c9eE", scope: !218, file: !1131, line: 490, type: !1617, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1622, retainedNodes: !1620)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{null, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!1620 = !{!1621}
!1621 = !DILocalVariable(arg: 1, scope: !1616, file: !1131, line: 490, type: !1619)
!1622 = !{!1623}
!1623 = !DITemplateTypeParameter(name: "T", type: !19)
!1624 = !DILocation(line: 490, column: 1, scope: !1616)
!1625 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17hf778883e36c7f693E", scope: !218, file: !1131, line: 490, type: !1626, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !821, retainedNodes: !1629)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{null, !1628}
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!1629 = !{!1630}
!1630 = !DILocalVariable(arg: 1, scope: !1625, file: !1131, line: 490, type: !1628)
!1631 = !DILocation(line: 490, column: 1, scope: !1625)
!1632 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h2deb57f46a4a201eE", scope: !218, file: !1131, line: 490, type: !1633, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1638, retainedNodes: !1636)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{null, !1635}
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!1636 = !{!1637}
!1637 = !DILocalVariable(arg: 1, scope: !1632, file: !1131, line: 490, type: !1635)
!1638 = !{!1639}
!1639 = !DITemplateTypeParameter(name: "T", type: !60)
!1640 = !DILocation(line: 490, column: 1, scope: !1632)
!1641 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hbdfbfef6ad685b7cE", scope: !1642, file: !271, line: 35, type: !1643, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1645)
!1642 = !DINamespace(name: "is_null", scope: !293)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!415, !1160}
!1645 = !{!1646}
!1646 = !DILocalVariable(name: "ptr", arg: 1, scope: !1641, file: !271, line: 35, type: !1160)
!1647 = !DILocation(line: 35, column: 25, scope: !1641)
!1648 = !DILocalVariable(name: "self", arg: 1, scope: !1649, file: !271, line: 209, type: !1160)
!1649 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hbcfaf1cfbf94aa93E", scope: !293, file: !271, line: 209, type: !1650, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !1652)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!9, !1160}
!1652 = !{!1648}
!1653 = !{!1654}
!1654 = !DITemplateTypeParameter(name: "T", type: !123)
!1655 = !DILocation(line: 209, column: 17, scope: !1649, inlinedAt: !1656)
!1656 = distinct !DILocation(line: 36, column: 13, scope: !1641)
!1657 = !DILocalVariable(name: "self", arg: 1, scope: !1658, file: !271, line: 57, type: !1160)
!1658 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hfa1073c80f6585eeE", scope: !293, file: !271, line: 57, type: !1659, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1662, retainedNodes: !1661)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!1274, !1160}
!1661 = !{!1657}
!1662 = !{!1654, !555}
!1663 = !DILocation(line: 57, column: 26, scope: !1658, inlinedAt: !1664)
!1664 = distinct !DILocation(line: 213, column: 33, scope: !1649, inlinedAt: !1656)
!1665 = !DILocation(line: 213, column: 18, scope: !1649, inlinedAt: !1656)
!1666 = !DILocation(line: 36, column: 13, scope: !1641)
!1667 = !DILocation(line: 37, column: 10, scope: !1641)
!1668 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h532880c291436c84E", scope: !293, file: !271, line: 33, type: !1669, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1671)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{!415, !287}
!1671 = !{!1672}
!1672 = !DILocalVariable(name: "self", arg: 1, scope: !1668, file: !271, line: 33, type: !287)
!1673 = !DILocation(line: 33, column: 26, scope: !1668)
!1674 = !DILocation(line: 50, column: 36, scope: !1668)
!1675 = !DILocation(line: 50, column: 18, scope: !1668)
!1676 = !DILocation(line: 51, column: 6, scope: !1668)
!1677 = distinct !DISubprogram(name: "from_raw_parts<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h96779705a0853e12E", scope: !1679, file: !1678, line: 111, type: !1680, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1682)
!1678 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1e1a461bde75de7a93357ca7e628f393")
!1679 = !DINamespace(name: "metadata", scope: !218)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!170, !6, !9}
!1682 = !{!1683, !1684}
!1683 = !DILocalVariable(name: "data_address", arg: 1, scope: !1677, file: !1678, line: 112, type: !6)
!1684 = !DILocalVariable(name: "metadata", arg: 2, scope: !1677, file: !1678, line: 113, type: !9)
!1685 = !DILocation(line: 112, column: 5, scope: !1677)
!1686 = !DILocation(line: 113, column: 5, scope: !1677)
!1687 = !DILocation(line: 118, column: 36, scope: !1677)
!1688 = !DILocation(line: 118, column: 14, scope: !1677)
!1689 = !DILocation(line: 119, column: 2, scope: !1677)
!1690 = distinct !DISubprogram(name: "from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hdf5128deb57a5081E", scope: !1679, file: !1678, line: 111, type: !1691, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1693)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!221, !6, !7}
!1693 = !{!1694, !1695}
!1694 = !DILocalVariable(name: "data_address", arg: 1, scope: !1690, file: !1678, line: 112, type: !6)
!1695 = !DILocalVariable(name: "metadata", arg: 2, scope: !1690, file: !1678, line: 113, type: !7)
!1696 = !DILocation(line: 112, column: 5, scope: !1690)
!1697 = !DILocation(line: 113, column: 5, scope: !1690)
!1698 = !DILocation(line: 118, column: 36, scope: !1690)
!1699 = !DILocation(line: 118, column: 14, scope: !1690)
!1700 = !DILocation(line: 119, column: 2, scope: !1690)
!1701 = distinct !DISubprogram(name: "from_raw_parts_mut<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb72e76dc781b31a6E", scope: !1679, file: !1678, line: 128, type: !1702, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1704)
!1702 = !DISubroutineType(types: !1703)
!1703 = !{!244, !1274, !9}
!1704 = !{!1705, !1706}
!1705 = !DILocalVariable(name: "data_address", arg: 1, scope: !1701, file: !1678, line: 129, type: !1274)
!1706 = !DILocalVariable(name: "metadata", arg: 2, scope: !1701, file: !1678, line: 130, type: !9)
!1707 = !DILocation(line: 129, column: 5, scope: !1701)
!1708 = !DILocation(line: 130, column: 5, scope: !1701)
!1709 = !DILocation(line: 135, column: 36, scope: !1701)
!1710 = !DILocation(line: 135, column: 14, scope: !1701)
!1711 = !DILocation(line: 136, column: 2, scope: !1701)
!1712 = distinct !DISubprogram(name: "metadata<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8metadata8metadata17h163e40077ca65461E", scope: !1679, file: !1678, line: 94, type: !1449, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1713)
!1713 = !{!1714}
!1714 = !DILocalVariable(name: "ptr", arg: 1, scope: !1712, file: !1678, line: 94, type: !221)
!1715 = !DILocation(line: 94, column: 34, scope: !1712)
!1716 = !DILocation(line: 98, column: 14, scope: !1712)
!1717 = !DILocation(line: 99, column: 2, scope: !1712)
!1718 = distinct !DISubprogram(name: "metadata<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata8metadata17h28e9a44b1a4defa6E", scope: !1679, file: !1678, line: 94, type: !1719, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1721)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!9, !170}
!1721 = !{!1722}
!1722 = !DILocalVariable(name: "ptr", arg: 1, scope: !1718, file: !1678, line: 94, type: !170)
!1723 = !DILocation(line: 94, column: 34, scope: !1718)
!1724 = !DILocation(line: 98, column: 14, scope: !1718)
!1725 = !DILocation(line: 99, column: 2, scope: !1718)
!1726 = distinct !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h18bc62e0621d126cE", scope: !813, file: !1727, line: 197, type: !1728, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1730)
!1727 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "489a545a71841a1f316d99c11467aaa5")
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!813, !287}
!1730 = !{!1731}
!1731 = !DILocalVariable(name: "ptr", arg: 1, scope: !1726, file: !1727, line: 197, type: !287)
!1732 = !DILocation(line: 197, column: 39, scope: !1726)
!1733 = !DILocation(line: 200, column: 13, scope: !1726)
!1734 = !DILocalVariable(name: "ptr", arg: 1, scope: !1735, file: !197, line: 2218, type: !287)
!1735 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h9f337dc199006af8E", scope: !1736, file: !197, line: 2218, type: !1574, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1738)
!1736 = !DINamespace(name: "new_unchecked", scope: !1737)
!1737 = !DINamespace(name: "{impl#3}", scope: !814)
!1738 = !{!1734}
!1739 = !DILocation(line: 2218, column: 39, scope: !1735, inlinedAt: !1740)
!1740 = distinct !DILocation(line: 200, column: 13, scope: !1726)
!1741 = !DILocation(line: 200, column: 134, scope: !1742, inlinedAt: !1740)
!1742 = !DILexicalBlockFile(scope: !1735, file: !1727, discriminator: 0)
!1743 = !DILocation(line: 200, column: 133, scope: !1742, inlinedAt: !1740)
!1744 = !DILocation(line: 2219, column: 20, scope: !1735, inlinedAt: !1740)
!1745 = !DILocation(line: 2221, column: 21, scope: !1735, inlinedAt: !1740)
!1746 = !DILocation(line: 201, column: 13, scope: !1726)
!1747 = !DILocation(line: 203, column: 6, scope: !1726)
!1748 = distinct !DISubprogram(name: "is_aligned<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h012921aa164287ceE", scope: !216, file: !215, line: 1448, type: !630, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1749)
!1749 = !{!1750}
!1750 = !DILocalVariable(name: "self", arg: 1, scope: !1748, file: !215, line: 1448, type: !221)
!1751 = !DILocation(line: 1448, column: 29, scope: !1748)
!1752 = !DILocation(line: 1452, column: 9, scope: !1748)
!1753 = !DILocation(line: 1453, column: 6, scope: !1748)
!1754 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hcef368e9ddc423d6E", scope: !216, file: !215, line: 1448, type: !640, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1755)
!1755 = !{!1756}
!1756 = !DILocalVariable(name: "self", arg: 1, scope: !1754, file: !215, line: 1448, type: !642)
!1757 = !DILocation(line: 1448, column: 29, scope: !1754)
!1758 = !DILocation(line: 1452, column: 9, scope: !1754)
!1759 = !DILocation(line: 1453, column: 6, scope: !1754)
!1760 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hde7ff9a91eb95225E", scope: !1761, file: !215, line: 1570, type: !1762, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1764)
!1761 = !DINamespace(name: "is_aligned_to", scope: !216)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{!415, !6, !9}
!1764 = !{!1765, !1766}
!1765 = !DILocalVariable(name: "ptr", arg: 1, scope: !1760, file: !215, line: 1570, type: !6)
!1766 = !DILocalVariable(name: "align", arg: 2, scope: !1760, file: !215, line: 1570, type: !9)
!1767 = !DILocation(line: 1570, column: 25, scope: !1760)
!1768 = !DILocation(line: 1570, column: 41, scope: !1760)
!1769 = !DILocalVariable(name: "self", arg: 1, scope: !1770, file: !215, line: 203, type: !6)
!1770 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hc69baef28c0c2005E", scope: !216, file: !215, line: 203, type: !1771, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1774, retainedNodes: !1773)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!9, !6}
!1773 = !{!1769}
!1774 = !{!455}
!1775 = !DILocation(line: 203, column: 17, scope: !1770, inlinedAt: !1776)
!1776 = distinct !DILocation(line: 1571, column: 13, scope: !1760)
!1777 = !DILocalVariable(name: "self", arg: 1, scope: !1778, file: !215, line: 58, type: !6)
!1778 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h504cba93127d6bf7E", scope: !216, file: !215, line: 58, type: !1779, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1782, retainedNodes: !1781)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!6, !6}
!1781 = !{!1777}
!1782 = !{!455, !555}
!1783 = !DILocation(line: 58, column: 26, scope: !1778, inlinedAt: !1784)
!1784 = distinct !DILocation(line: 207, column: 33, scope: !1770, inlinedAt: !1776)
!1785 = !DILocation(line: 207, column: 18, scope: !1770, inlinedAt: !1776)
!1786 = !DILocation(line: 1571, column: 26, scope: !1760)
!1787 = !DILocation(line: 1571, column: 13, scope: !1760)
!1788 = !DILocation(line: 1572, column: 10, scope: !1760)
!1789 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h536385641514af47E", scope: !216, file: !215, line: 1564, type: !1790, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1792)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!415, !642, !9}
!1792 = !{!1793, !1794}
!1793 = !DILocalVariable(name: "self", arg: 1, scope: !1789, file: !215, line: 1564, type: !642)
!1794 = !DILocalVariable(name: "align", arg: 2, scope: !1789, file: !215, line: 1564, type: !9)
!1795 = !DILocation(line: 1564, column: 32, scope: !1789)
!1796 = !DILocation(line: 1564, column: 38, scope: !1789)
!1797 = !DILocation(line: 2165, column: 38, scope: !1185, inlinedAt: !1798)
!1798 = distinct !DILocation(line: 1565, column: 13, scope: !1789)
!1799 = !DILocation(line: 101, column: 33, scope: !1190, inlinedAt: !1800)
!1800 = distinct !DILocation(line: 2166, column: 13, scope: !1185, inlinedAt: !1798)
!1801 = !DILocation(line: 102, column: 13, scope: !1190, inlinedAt: !1800)
!1802 = !DILocation(line: 2166, column: 13, scope: !1185, inlinedAt: !1798)
!1803 = !DILocation(line: 1565, column: 12, scope: !1789)
!1804 = !DILocalVariable(name: "self", arg: 1, scope: !1805, file: !215, line: 58, type: !642)
!1805 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he67240509c56ade6E", scope: !216, file: !215, line: 58, type: !1806, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1809, retainedNodes: !1808)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!6, !642}
!1808 = !{!1804}
!1809 = !{!656, !555}
!1810 = !DILocation(line: 58, column: 26, scope: !1805, inlinedAt: !1811)
!1811 = distinct !DILocation(line: 1584, column: 37, scope: !1789)
!1812 = !DILocation(line: 1584, column: 36, scope: !1789)
!1813 = !DILocation(line: 1584, column: 18, scope: !1789)
!1814 = !DILocation(line: 1585, column: 6, scope: !1789)
!1815 = !DILocation(line: 1566, column: 13, scope: !1789)
!1816 = distinct !DISubprogram(name: "is_aligned_to<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h68029eeaec8c3569E", scope: !216, file: !215, line: 1564, type: !1817, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1819)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!415, !221, !9}
!1819 = !{!1820, !1821}
!1820 = !DILocalVariable(name: "self", arg: 1, scope: !1816, file: !215, line: 1564, type: !221)
!1821 = !DILocalVariable(name: "align", arg: 2, scope: !1816, file: !215, line: 1564, type: !9)
!1822 = !DILocation(line: 1564, column: 32, scope: !1816)
!1823 = !DILocation(line: 1564, column: 38, scope: !1816)
!1824 = !DILocation(line: 2165, column: 38, scope: !1185, inlinedAt: !1825)
!1825 = distinct !DILocation(line: 1565, column: 13, scope: !1816)
!1826 = !DILocation(line: 101, column: 33, scope: !1190, inlinedAt: !1827)
!1827 = distinct !DILocation(line: 2166, column: 13, scope: !1185, inlinedAt: !1825)
!1828 = !DILocation(line: 102, column: 13, scope: !1190, inlinedAt: !1827)
!1829 = !DILocation(line: 2166, column: 13, scope: !1185, inlinedAt: !1825)
!1830 = !DILocation(line: 1565, column: 12, scope: !1816)
!1831 = !DILocation(line: 58, column: 26, scope: !550, inlinedAt: !1832)
!1832 = distinct !DILocation(line: 1584, column: 37, scope: !1816)
!1833 = !DILocation(line: 1584, column: 36, scope: !1816)
!1834 = !DILocation(line: 1584, column: 18, scope: !1816)
!1835 = !DILocation(line: 1585, column: 6, scope: !1816)
!1836 = !DILocation(line: 1566, column: 13, scope: !1816)
!1837 = distinct !DISubprogram(name: "with_metadata_of<u8, bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h18ca5e21f2ab0970E", scope: !216, file: !215, line: 94, type: !1838, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1844, retainedNodes: !1841)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!221, !1840, !221}
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!1841 = !{!1842, !1843}
!1842 = !DILocalVariable(name: "self", arg: 1, scope: !1837, file: !215, line: 94, type: !1840)
!1843 = !DILocalVariable(name: "meta", arg: 2, scope: !1837, file: !215, line: 94, type: !221)
!1844 = !{!1654, !1845}
!1845 = !DITemplateTypeParameter(name: "U", type: !13)
!1846 = !DILocation(line: 94, column: 38, scope: !1837)
!1847 = !DILocation(line: 94, column: 44, scope: !1837)
!1848 = !DILocation(line: 98, column: 48, scope: !1837)
!1849 = !DILocation(line: 98, column: 9, scope: !1837)
!1850 = !DILocation(line: 99, column: 6, scope: !1837)
!1851 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h2b1072a734c73bb2E", scope: !1852, file: !215, line: 36, type: !1853, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1855)
!1852 = !DINamespace(name: "is_null", scope: !216)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!415, !1840}
!1855 = !{!1856}
!1856 = !DILocalVariable(name: "ptr", arg: 1, scope: !1851, file: !215, line: 36, type: !1840)
!1857 = !DILocation(line: 36, column: 25, scope: !1851)
!1858 = !DILocalVariable(name: "self", arg: 1, scope: !1859, file: !215, line: 203, type: !1840)
!1859 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hc9af6796da5133a2E", scope: !216, file: !215, line: 203, type: !1860, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !1862)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!9, !1840}
!1862 = !{!1858}
!1863 = !DILocation(line: 203, column: 17, scope: !1859, inlinedAt: !1864)
!1864 = distinct !DILocation(line: 37, column: 13, scope: !1851)
!1865 = !DILocalVariable(name: "self", arg: 1, scope: !1866, file: !215, line: 58, type: !1840)
!1866 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h0afc3c087bc494faE", scope: !216, file: !215, line: 58, type: !1867, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1662, retainedNodes: !1869)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!6, !1840}
!1869 = !{!1865}
!1870 = !DILocation(line: 58, column: 26, scope: !1866, inlinedAt: !1871)
!1871 = distinct !DILocation(line: 207, column: 33, scope: !1859, inlinedAt: !1864)
!1872 = !DILocation(line: 207, column: 18, scope: !1859, inlinedAt: !1864)
!1873 = !DILocation(line: 37, column: 13, scope: !1851)
!1874 = !DILocation(line: 38, column: 10, scope: !1851)
!1875 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0ffc917f38722119E", scope: !216, file: !215, line: 34, type: !630, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1876)
!1876 = !{!1877}
!1877 = !DILocalVariable(name: "self", arg: 1, scope: !1875, file: !215, line: 34, type: !221)
!1878 = !DILocation(line: 34, column: 26, scope: !1875)
!1879 = !DILocation(line: 51, column: 36, scope: !1875)
!1880 = !DILocation(line: 51, column: 18, scope: !1875)
!1881 = !DILocation(line: 52, column: 6, scope: !1875)
!1882 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h39beab9ca460943bE", scope: !216, file: !215, line: 34, type: !640, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !655, retainedNodes: !1883)
!1883 = !{!1884}
!1884 = !DILocalVariable(name: "self", arg: 1, scope: !1882, file: !215, line: 34, type: !642)
!1885 = !DILocation(line: 34, column: 26, scope: !1882)
!1886 = !DILocation(line: 51, column: 36, scope: !1882)
!1887 = !DILocation(line: 51, column: 18, scope: !1882)
!1888 = !DILocation(line: 52, column: 6, scope: !1882)
!1889 = distinct !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h8c59d9ec96e33016E", scope: !216, file: !215, line: 781, type: !1890, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1892)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{!9, !221, !221}
!1892 = !{!1893, !1894, !1895, !1897}
!1893 = !DILocalVariable(name: "self", arg: 1, scope: !1889, file: !215, line: 781, type: !221)
!1894 = !DILocalVariable(name: "origin", arg: 2, scope: !1889, file: !215, line: 781, type: !221)
!1895 = !DILocalVariable(name: "this", scope: !1896, file: !215, line: 785, type: !221, align: 8)
!1896 = distinct !DILexicalBlock(scope: !1889, file: !215, line: 785, column: 9)
!1897 = !DILocalVariable(name: "pointee_size", scope: !1898, file: !215, line: 795, type: !9, align: 8)
!1898 = distinct !DILexicalBlock(scope: !1896, file: !215, line: 795, column: 9)
!1899 = !DILocation(line: 781, column: 33, scope: !1889)
!1900 = !DILocation(line: 785, column: 13, scope: !1896)
!1901 = !DILocation(line: 781, column: 39, scope: !1889)
!1902 = !DILocation(line: 789, column: 13, scope: !1896)
!1903 = !DILocalVariable(name: "this", arg: 1, scope: !1904, file: !197, line: 2218, type: !221)
!1904 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h74470608b1fc274eE", scope: !1905, file: !197, line: 2218, type: !1906, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1908)
!1905 = !DINamespace(name: "sub_ptr", scope: !216)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{null, !221, !221}
!1908 = !{!1903, !1909}
!1909 = !DILocalVariable(name: "origin", arg: 2, scope: !1904, file: !197, line: 2218, type: !221)
!1910 = !DILocation(line: 2218, column: 39, scope: !1904, inlinedAt: !1911)
!1911 = distinct !DILocation(line: 789, column: 13, scope: !1896)
!1912 = !DILocation(line: 791, column: 58, scope: !1913, inlinedAt: !1911)
!1913 = !DILexicalBlockFile(scope: !1904, file: !215, discriminator: 0)
!1914 = !DILocation(line: 2219, column: 20, scope: !1904, inlinedAt: !1911)
!1915 = !DILocation(line: 2221, column: 21, scope: !1904, inlinedAt: !1911)
!1916 = !DILocation(line: 795, column: 28, scope: !1896)
!1917 = !DILocation(line: 795, column: 13, scope: !1898)
!1918 = !DILocation(line: 796, column: 17, scope: !1898)
!1919 = !DILocation(line: 796, column: 37, scope: !1898)
!1920 = !DILocation(line: 796, column: 9, scope: !1898)
!1921 = !DILocation(line: 798, column: 18, scope: !1898)
!1922 = !DILocation(line: 799, column: 6, scope: !1889)
!1923 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h1865381c5371083cE", scope: !1924, file: !215, line: 1609, type: !1719, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1925)
!1924 = !DINamespace(name: "{impl#1}", scope: !217)
!1925 = !{!1926}
!1926 = !DILocalVariable(name: "self", arg: 1, scope: !1923, file: !215, line: 1609, type: !170)
!1927 = !DILocation(line: 1609, column: 22, scope: !1923)
!1928 = !DILocation(line: 1610, column: 9, scope: !1923)
!1929 = !DILocation(line: 1611, column: 6, scope: !1923)
!1930 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17haa644275dcb538efE", scope: !1924, file: !215, line: 1629, type: !1931, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1933)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!221, !170}
!1933 = !{!1934}
!1934 = !DILocalVariable(name: "self", arg: 1, scope: !1930, file: !215, line: 1629, type: !170)
!1935 = !DILocation(line: 1629, column: 25, scope: !1930)
!1936 = !DILocation(line: 1631, column: 6, scope: !1930)
!1937 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf82c206c24146943E", scope: !1939, file: !1938, line: 347, type: !1941, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1947, retainedNodes: !1944)
!1938 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "a3c36e35ceb67ad777a82e040f0657ec")
!1939 = !DINamespace(name: "{impl#15}", scope: !1940)
!1940 = !DINamespace(name: "array", scope: !143)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!317, !1943, !175, !321}
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!1944 = !{!1945, !1946}
!1945 = !DILocalVariable(name: "self", arg: 1, scope: !1937, file: !1938, line: 347, type: !1943)
!1946 = !DILocalVariable(name: "index", arg: 2, scope: !1937, file: !1938, line: 347, type: !175)
!1947 = !{!189, !1948}
!1948 = !DITemplateTypeParameter(name: "I", type: !175)
!1949 = !DILocation(line: 347, column: 14, scope: !1937)
!1950 = !DILocation(line: 347, column: 21, scope: !1937)
!1951 = !DILocation(line: 348, column: 9, scope: !1937)
!1952 = !DILocation(line: 349, column: 6, scope: !1937)
!1953 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17ha5ddd80e808f2e45E", scope: !1954, file: !1938, line: 359, type: !1955, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1947, retainedNodes: !1958)
!1954 = !DINamespace(name: "{impl#16}", scope: !1940)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!348, !1957, !175, !321}
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!1958 = !{!1959, !1960}
!1959 = !DILocalVariable(name: "self", arg: 1, scope: !1953, file: !1938, line: 359, type: !1957)
!1960 = !DILocalVariable(name: "index", arg: 2, scope: !1953, file: !1938, line: 359, type: !175)
!1961 = !DILocation(line: 359, column: 18, scope: !1953)
!1962 = !DILocation(line: 359, column: 29, scope: !1953)
!1963 = !DILocation(line: 360, column: 9, scope: !1953)
!1964 = !DILocation(line: 361, column: 6, scope: !1953)
!1965 = distinct !DISubprogram(name: "split_at_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17haac3e8b4c0f9643eE", scope: !1109, file: !1966, line: 1636, type: !1967, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !1973)
!1966 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "c080588f2e23f57a242d9fad86267984")
!1967 = !DISubroutineType(types: !1968)
!1968 = !{!1969, !348, !9, !321}
!1969 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut [bootloader::bootinfo::memory_map::MemoryRegion], &mut [bootloader::bootinfo::memory_map::MemoryRegion])", file: !2, size: 256, align: 64, elements: !1970, templateParams: !24, identifier: "ac3e72f6ad06c1b0ebfc0773eb9fb0a9")
!1970 = !{!1971, !1972}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1969, file: !2, baseType: !348, size: 128, align: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1969, file: !2, baseType: !348, size: 128, align: 64, offset: 128)
!1973 = !{!1974, !1975}
!1974 = !DILocalVariable(name: "self", arg: 1, scope: !1965, file: !1966, line: 1636, type: !348)
!1975 = !DILocalVariable(name: "mid", arg: 2, scope: !1965, file: !1966, line: 1636, type: !9)
!1976 = !DILocation(line: 1636, column: 31, scope: !1965)
!1977 = !DILocation(line: 1636, column: 42, scope: !1965)
!1978 = !DILocation(line: 1637, column: 17, scope: !1965)
!1979 = !DILocation(line: 1637, column: 9, scope: !1965)
!1980 = !DILocation(line: 1640, column: 18, scope: !1965)
!1981 = !DILocation(line: 1641, column: 6, scope: !1965)
!1982 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha2c59c6478c7bca0E", scope: !1109, file: !1966, line: 398, type: !1983, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1988, retainedNodes: !1985)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{!12, !317, !9}
!1985 = !{!1986, !1987}
!1986 = !DILocalVariable(name: "self", arg: 1, scope: !1982, file: !1966, line: 398, type: !317)
!1987 = !DILocalVariable(name: "index", arg: 2, scope: !1982, file: !1966, line: 398, type: !9)
!1988 = !{!189, !1989}
!1989 = !DITemplateTypeParameter(name: "I", type: !9)
!1990 = !DILocation(line: 398, column: 42, scope: !1982)
!1991 = !DILocation(line: 398, column: 49, scope: !1982)
!1992 = !DILocation(line: 405, column: 20, scope: !1982)
!1993 = !DILocation(line: 406, column: 6, scope: !1982)
!1994 = distinct !DISubprogram(name: "as_mut_ptr_range<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h91cdc4b7d36f798dE", scope: !1109, file: !1966, line: 586, type: !1995, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2003)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!1997, !348}
!1997 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<*mut bootloader::bootinfo::memory_map::MemoryRegion>", scope: !176, file: !2, size: 128, align: 64, elements: !1998, templateParams: !2001, identifier: "1334d06ab93fc80af3ee3e7ccc37c93a")
!1998 = !{!1999, !2000}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1997, file: !2, baseType: !287, size: 64, align: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1997, file: !2, baseType: !287, size: 64, align: 64, offset: 64)
!2001 = !{!2002}
!2002 = !DITemplateTypeParameter(name: "Idx", type: !287)
!2003 = !{!2004, !2005, !2007}
!2004 = !DILocalVariable(name: "self", arg: 1, scope: !1994, file: !1966, line: 586, type: !348)
!2005 = !DILocalVariable(name: "start", scope: !2006, file: !1966, line: 587, type: !287, align: 8)
!2006 = distinct !DILexicalBlock(scope: !1994, file: !1966, line: 587, column: 9)
!2007 = !DILocalVariable(name: "end", scope: !2008, file: !1966, line: 589, type: !287, align: 8)
!2008 = distinct !DILexicalBlock(scope: !2006, file: !1966, line: 589, column: 9)
!2009 = !DILocation(line: 586, column: 35, scope: !1994)
!2010 = !DILocalVariable(name: "self", arg: 1, scope: !2011, file: !1966, line: 506, type: !348)
!2011 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha1170391f24208b9E", scope: !1109, file: !1966, line: 506, type: !2012, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2014)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{!287, !348}
!2014 = !{!2010}
!2015 = !DILocation(line: 506, column: 29, scope: !2011, inlinedAt: !2016)
!2016 = distinct !DILocation(line: 587, column: 21, scope: !1994)
!2017 = !DILocation(line: 587, column: 21, scope: !1994)
!2018 = !DILocation(line: 587, column: 13, scope: !2006)
!2019 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2020)
!2020 = distinct !DILocation(line: 589, column: 28, scope: !2006)
!2021 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2020)
!2022 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2023)
!2023 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2020)
!2024 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2023)
!2025 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2023)
!2026 = !DILocation(line: 589, column: 28, scope: !2006)
!2027 = !DILocation(line: 589, column: 13, scope: !2008)
!2028 = !DILocation(line: 590, column: 9, scope: !2008)
!2029 = !DILocation(line: 591, column: 6, scope: !1994)
!2030 = distinct !DISubprogram(name: "sort_unstable_by<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h28a1a9a5f6304447E", scope: !1109, file: !1966, line: 2682, type: !2031, scopeLine: 2682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2036, retainedNodes: !2033)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{null, !348, !1113}
!2033 = !{!2034, !2035}
!2034 = !DILocalVariable(name: "self", arg: 1, scope: !2030, file: !1966, line: 2682, type: !348)
!2035 = !DILocalVariable(name: "compare", arg: 2, scope: !2030, file: !1966, line: 2682, type: !1113)
!2036 = !{!189, !2037}
!2037 = !DITemplateTypeParameter(name: "F", type: !1113)
!2038 = !DILocation(line: 2682, column: 32, scope: !2030)
!2039 = !DILocation(line: 2682, column: 43, scope: !2030)
!2040 = !DILocation(line: 2686, column: 31, scope: !2030)
!2041 = !DILocation(line: 2686, column: 9, scope: !2030)
!2042 = !{i64 1}
!2043 = !DILocation(line: 2687, column: 6, scope: !2030)
!2044 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h3af58e2d91edbac6E", scope: !1108, file: !1966, line: 2686, type: !2045, scopeLine: 2686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2036, retainedNodes: !2047)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!415, !1106, !12, !12}
!2047 = !{!2048, !2049, !2050}
!2048 = !DILocalVariable(name: "a", arg: 2, scope: !2044, file: !1966, line: 2686, type: !12)
!2049 = !DILocalVariable(name: "b", arg: 3, scope: !2044, file: !1966, line: 2686, type: !12)
!2050 = !DILocalVariable(name: "compare", scope: !2044, file: !1966, line: 2682, type: !1113, align: 1)
!2051 = !DILocation(line: 2682, column: 43, scope: !2044)
!2052 = !DILocation(line: 2686, column: 32, scope: !2044)
!2053 = !DILocation(line: 2686, column: 35, scope: !2044)
!2054 = !DILocation(line: 2686, column: 38, scope: !2044)
!2055 = !DILocation(line: 2686, column: 69, scope: !2044)
!2056 = distinct !DISubprogram(name: "split_at_mut_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h062c2d5e463458f8E", scope: !1109, file: !1966, line: 1738, type: !2057, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2059)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!1969, !348, !9}
!2059 = !{!2060, !2061, !2062, !2064}
!2060 = !DILocalVariable(name: "self", arg: 1, scope: !2056, file: !1966, line: 1738, type: !348)
!2061 = !DILocalVariable(name: "mid", arg: 2, scope: !2056, file: !1966, line: 1738, type: !9)
!2062 = !DILocalVariable(name: "len", scope: !2063, file: !1966, line: 1739, type: !9, align: 8)
!2063 = distinct !DILexicalBlock(scope: !2056, file: !1966, line: 1739, column: 9)
!2064 = !DILocalVariable(name: "ptr", scope: !2065, file: !1966, line: 1740, type: !287, align: 8)
!2065 = distinct !DILexicalBlock(scope: !2063, file: !1966, line: 1740, column: 9)
!2066 = !DILocation(line: 1738, column: 48, scope: !2056)
!2067 = !DILocation(line: 1738, column: 59, scope: !2056)
!2068 = !DILocation(line: 1739, column: 19, scope: !2056)
!2069 = !DILocation(line: 1739, column: 13, scope: !2063)
!2070 = !DILocation(line: 506, column: 29, scope: !2011, inlinedAt: !2071)
!2071 = distinct !DILocation(line: 1740, column: 19, scope: !2063)
!2072 = !DILocation(line: 1740, column: 19, scope: !2063)
!2073 = !DILocation(line: 1740, column: 13, scope: !2065)
!2074 = !DILocation(line: 1747, column: 13, scope: !2065)
!2075 = !DILocalVariable(name: "mid", arg: 1, scope: !2076, file: !197, line: 2218, type: !9)
!2076 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17hef2e30e888fa4944E", scope: !2077, file: !197, line: 2218, type: !2078, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2080)
!2077 = !DINamespace(name: "split_at_mut_unchecked", scope: !1109)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{null, !9, !9}
!2080 = !{!2075, !2081}
!2081 = !DILocalVariable(name: "len", arg: 2, scope: !2076, file: !197, line: 2218, type: !9)
!2082 = !DILocation(line: 2218, column: 39, scope: !2076, inlinedAt: !2083)
!2083 = distinct !DILocation(line: 1747, column: 13, scope: !2065)
!2084 = !DILocation(line: 1749, column: 45, scope: !2085, inlinedAt: !2083)
!2085 = !DILexicalBlockFile(scope: !2076, file: !1966, discriminator: 0)
!2086 = !DILocation(line: 2219, column: 20, scope: !2076, inlinedAt: !2083)
!2087 = !DILocation(line: 2221, column: 21, scope: !2076, inlinedAt: !2083)
!2088 = !DILocation(line: 1751, column: 14, scope: !2065)
!2089 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2090)
!2090 = distinct !DILocation(line: 1751, column: 63, scope: !2065)
!2091 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2090)
!2092 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2093)
!2093 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2090)
!2094 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2093)
!2095 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2093)
!2096 = !DILocation(line: 1751, column: 77, scope: !2065)
!2097 = !DILocation(line: 1751, column: 44, scope: !2065)
!2098 = !DILocation(line: 1751, column: 13, scope: !2065)
!2099 = !DILocation(line: 1753, column: 6, scope: !2056)
!2100 = distinct !DISubprogram(name: "iter<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hba14cdcfec7012a6E", scope: !1109, file: !1966, line: 741, type: !2101, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2103)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!809, !317}
!2103 = !{!2104}
!2104 = !DILocalVariable(name: "self", arg: 1, scope: !2100, file: !1966, line: 741, type: !317)
!2105 = !DILocation(line: 741, column: 17, scope: !2100)
!2106 = !DILocation(line: 742, column: 9, scope: !2100)
!2107 = !DILocation(line: 743, column: 6, scope: !2100)
!2108 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17heada400949a61ab0E", scope: !1109, file: !1966, line: 615, type: !2109, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2111)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{null, !348, !9, !9, !321}
!2111 = !{!2112, !2113, !2114, !2115, !2117}
!2112 = !DILocalVariable(name: "self", arg: 1, scope: !2108, file: !1966, line: 615, type: !348)
!2113 = !DILocalVariable(name: "a", arg: 2, scope: !2108, file: !1966, line: 615, type: !9)
!2114 = !DILocalVariable(name: "b", arg: 3, scope: !2108, file: !1966, line: 615, type: !9)
!2115 = !DILocalVariable(name: "pa", scope: !2116, file: !1966, line: 618, type: !287, align: 8)
!2116 = distinct !DILexicalBlock(scope: !2108, file: !1966, line: 618, column: 9)
!2117 = !DILocalVariable(name: "pb", scope: !2118, file: !1966, line: 619, type: !287, align: 8)
!2118 = distinct !DILexicalBlock(scope: !2116, file: !1966, line: 619, column: 9)
!2119 = !DILocation(line: 615, column: 23, scope: !2108)
!2120 = !DILocation(line: 615, column: 34, scope: !2108)
!2121 = !DILocation(line: 615, column: 44, scope: !2108)
!2122 = !DILocation(line: 618, column: 36, scope: !2108)
!2123 = !DILocation(line: 618, column: 18, scope: !2108)
!2124 = !DILocation(line: 618, column: 13, scope: !2116)
!2125 = !DILocation(line: 619, column: 36, scope: !2116)
!2126 = !DILocation(line: 619, column: 18, scope: !2116)
!2127 = !DILocation(line: 619, column: 13, scope: !2118)
!2128 = !DILocation(line: 625, column: 13, scope: !2118)
!2129 = !DILocation(line: 627, column: 6, scope: !2108)
!2130 = distinct !DISubprogram(name: "reverse<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17hb56fb59b8f5db9d2E", scope: !1109, file: !1966, line: 683, type: !2131, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2133)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{null, !348}
!2133 = !{!2134, !2135, !2137, !2139, !2140, !2142}
!2134 = !DILocalVariable(name: "self", arg: 1, scope: !2130, file: !1966, line: 683, type: !348)
!2135 = !DILocalVariable(name: "half_len", scope: !2136, file: !1966, line: 684, type: !9, align: 8)
!2136 = distinct !DILexicalBlock(scope: !2130, file: !1966, line: 684, column: 9)
!2137 = !DILocalVariable(name: "start", scope: !2138, file: !1966, line: 685, type: !287, align: 8)
!2138 = distinct !DILexicalBlock(scope: !2136, file: !1966, line: 685, column: 9)
!2139 = !DILocalVariable(name: "end", scope: !2138, file: !1966, line: 685, type: !287, align: 8)
!2140 = !DILocalVariable(name: "front_half", scope: !2141, file: !1966, line: 689, type: !348, align: 8)
!2141 = distinct !DILexicalBlock(scope: !2138, file: !1966, line: 689, column: 9)
!2142 = !DILocalVariable(name: "back_half", scope: !2141, file: !1966, line: 689, type: !348, align: 8)
!2143 = !DILocation(line: 683, column: 26, scope: !2130)
!2144 = !DILocation(line: 684, column: 24, scope: !2130)
!2145 = !DILocation(line: 684, column: 13, scope: !2136)
!2146 = !DILocation(line: 685, column: 36, scope: !2136)
!2147 = !DILocation(line: 685, column: 21, scope: !2136)
!2148 = !DILocation(line: 685, column: 21, scope: !2138)
!2149 = !DILocation(line: 685, column: 28, scope: !2136)
!2150 = !DILocation(line: 685, column: 28, scope: !2138)
!2151 = !DILocation(line: 695, column: 21, scope: !2138)
!2152 = !DILocalVariable(name: "self", arg: 1, scope: !2153, file: !271, line: 1098, type: !287)
!2153 = distinct !DISubprogram(name: "sub<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17hd17f2c7bdee2f61dE", scope: !293, file: !271, line: 1098, type: !294, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2154)
!2154 = !{!2152, !2155}
!2155 = !DILocalVariable(name: "count", arg: 2, scope: !2153, file: !271, line: 1098, type: !9)
!2156 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !2157)
!2157 = distinct !DILocation(line: 696, column: 47, scope: !2138)
!2158 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !2157)
!2159 = !DILocalVariable(name: "self", arg: 1, scope: !2160, file: !2161, line: 1353, type: !231)
!2160 = distinct !DISubprogram(name: "wrapping_neg", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17hdfe0f193822d88ddE", scope: !2162, file: !2161, line: 1353, type: !2163, scopeLine: 1353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2165)
!2161 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "22edd91b35c19901e1ca1fe82aabcb75")
!2162 = !DINamespace(name: "{impl#5}", scope: !1009)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!231, !231}
!2165 = !{!2159}
!2166 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !2167)
!2167 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !2157)
!2168 = !DILocalVariable(name: "self", arg: 1, scope: !2169, file: !2161, line: 1178, type: !231)
!2169 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_sub17hab3b677eacee3ffdE", scope: !2162, file: !2161, line: 1178, type: !2170, scopeLine: 1178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2172)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{!231, !231, !231}
!2172 = !{!2168, !2173}
!2173 = !DILocalVariable(name: "rhs", arg: 2, scope: !2169, file: !2161, line: 1178, type: !231)
!2174 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !2175)
!2175 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !2167)
!2176 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !2175)
!2177 = !DILocation(line: 1179, column: 13, scope: !2169, inlinedAt: !2175)
!2178 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2179)
!2179 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !2157)
!2180 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2179)
!2181 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2179)
!2182 = !DILocation(line: 696, column: 21, scope: !2138)
!2183 = !DILocation(line: 694, column: 17, scope: !2138)
!2184 = !DILocation(line: 689, column: 14, scope: !2138)
!2185 = !DILocation(line: 689, column: 14, scope: !2141)
!2186 = !DILocation(line: 689, column: 26, scope: !2138)
!2187 = !DILocation(line: 689, column: 26, scope: !2141)
!2188 = !DILocation(line: 703, column: 9, scope: !2141)
!2189 = !DILocation(line: 722, column: 6, scope: !2130)
!2190 = distinct !DISubprogram(name: "revswap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17hee0f1f2ec0d20bd8E", scope: !2191, file: !1966, line: 706, type: !2192, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2194)
!2191 = !DINamespace(name: "reverse", scope: !1109)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{null, !348, !348, !9}
!2194 = !{!2195, !2196, !2197, !2198, !2200, !2201}
!2195 = !DILocalVariable(name: "a", arg: 1, scope: !2190, file: !1966, line: 706, type: !348)
!2196 = !DILocalVariable(name: "b", arg: 2, scope: !2190, file: !1966, line: 706, type: !348)
!2197 = !DILocalVariable(name: "n", arg: 3, scope: !2190, file: !1966, line: 706, type: !9)
!2198 = !DILocalVariable(name: "a", scope: !2199, file: !1966, line: 714, type: !348, align: 8)
!2199 = distinct !DILexicalBlock(scope: !2190, file: !1966, line: 714, column: 13)
!2200 = !DILocalVariable(name: "b", scope: !2199, file: !1966, line: 714, type: !348, align: 8)
!2201 = !DILocalVariable(name: "i", scope: !2202, file: !1966, line: 716, type: !9, align: 8)
!2202 = distinct !DILexicalBlock(scope: !2199, file: !1966, line: 716, column: 13)
!2203 = !DILocation(line: 706, column: 29, scope: !2190)
!2204 = !DILocation(line: 706, column: 42, scope: !2190)
!2205 = !DILocation(line: 706, column: 55, scope: !2190)
!2206 = !DILocation(line: 716, column: 17, scope: !2202)
!2207 = !DILocation(line: 707, column: 27, scope: !2190)
!2208 = !DILocation(line: 707, column: 13, scope: !2190)
!2209 = !DILocation(line: 708, column: 27, scope: !2190)
!2210 = !DILocation(line: 708, column: 13, scope: !2190)
!2211 = !DILocation(line: 714, column: 34, scope: !2190)
!2212 = !DILocation(line: 714, column: 32, scope: !2190)
!2213 = !DILocation(line: 714, column: 47, scope: !2190)
!2214 = !DILocation(line: 714, column: 45, scope: !2190)
!2215 = !DILocation(line: 714, column: 26, scope: !2190)
!2216 = !DILocation(line: 714, column: 18, scope: !2190)
!2217 = !DILocation(line: 714, column: 18, scope: !2199)
!2218 = !DILocation(line: 714, column: 21, scope: !2190)
!2219 = !DILocation(line: 714, column: 21, scope: !2199)
!2220 = !DILocation(line: 716, column: 25, scope: !2199)
!2221 = !DILocation(line: 717, column: 13, scope: !2202)
!2222 = !DILocation(line: 717, column: 19, scope: !2202)
!2223 = !DILocation(line: 721, column: 10, scope: !2190)
!2224 = !DILocation(line: 718, column: 34, scope: !2202)
!2225 = !DILocation(line: 718, column: 32, scope: !2202)
!2226 = !DILocation(line: 718, column: 27, scope: !2202)
!2227 = !DILocation(line: 718, column: 45, scope: !2202)
!2228 = !DILocation(line: 718, column: 53, scope: !2202)
!2229 = !DILocation(line: 718, column: 43, scope: !2202)
!2230 = !DILocation(line: 718, column: 38, scope: !2202)
!2231 = !DILocation(line: 718, column: 17, scope: !2202)
!2232 = !DILocation(line: 719, column: 17, scope: !2202)
!2233 = distinct !DISubprogram(name: "from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h02aca73b149d318eE", scope: !2235, file: !2234, line: 137, type: !2236, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2238)
!2234 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "4e9e8b780584cc248c586456197d9cf5")
!2235 = !DINamespace(name: "raw", scope: !167)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!348, !287, !9}
!2238 = !{!2239, !2240}
!2239 = !DILocalVariable(name: "data", arg: 1, scope: !2233, file: !2234, line: 137, type: !287)
!2240 = !DILocalVariable(name: "len", arg: 2, scope: !2233, file: !2234, line: 137, type: !9)
!2241 = !DILocation(line: 137, column: 47, scope: !2233)
!2242 = !DILocation(line: 137, column: 61, scope: !2233)
!2243 = !DILocation(line: 140, column: 9, scope: !2233)
!2244 = !DILocalVariable(name: "data", arg: 1, scope: !2245, file: !197, line: 2218, type: !287)
!2245 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17hff2b627985c6b074E", scope: !2246, file: !197, line: 2218, type: !2247, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2249)
!2246 = !DINamespace(name: "from_raw_parts_mut", scope: !2235)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{null, !287, !9}
!2249 = !{!2244, !2250}
!2250 = !DILocalVariable(name: "len", arg: 2, scope: !2245, file: !197, line: 2218, type: !9)
!2251 = !DILocation(line: 2218, column: 39, scope: !2245, inlinedAt: !2252)
!2252 = distinct !DILocation(line: 140, column: 9, scope: !2233)
!2253 = !DILocation(line: 142, column: 46, scope: !2254, inlinedAt: !2252)
!2254 = !DILexicalBlockFile(scope: !2245, file: !2234, discriminator: 0)
!2255 = !DILocation(line: 143, column: 20, scope: !2254, inlinedAt: !2252)
!2256 = !DILocation(line: 2219, column: 20, scope: !2245, inlinedAt: !2252)
!2257 = !DILocation(line: 2221, column: 21, scope: !2245, inlinedAt: !2252)
!2258 = !DILocation(line: 145, column: 15, scope: !2233)
!2259 = !DILocation(line: 147, column: 2, scope: !2233)
!2260 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h54ac29da1684dc08E", scope: !809, file: !2261, line: 84, type: !2101, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2262)
!2261 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "873209af95ace3fbbcdd03c09eda7332")
!2262 = !{!2263, !2264, !2266}
!2263 = !DILocalVariable(name: "slice", arg: 1, scope: !2260, file: !2261, line: 84, type: !317)
!2264 = !DILocalVariable(name: "ptr", scope: !2265, file: !2261, line: 85, type: !221, align: 8)
!2265 = distinct !DILexicalBlock(scope: !2260, file: !2261, line: 85, column: 9)
!2266 = !DILocalVariable(name: "end", scope: !2267, file: !2261, line: 90, type: !221, align: 8)
!2267 = distinct !DILexicalBlock(scope: !2265, file: !2261, line: 90, column: 13)
!2268 = !DILocation(line: 84, column: 23, scope: !2260)
!2269 = !DILocation(line: 90, column: 17, scope: !2267)
!2270 = !DILocalVariable(name: "self", arg: 1, scope: !2271, file: !1966, line: 476, type: !317)
!2271 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h767b743d2886f6c6E", scope: !1109, file: !1966, line: 476, type: !2272, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2274)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!221, !317}
!2274 = !{!2270}
!2275 = !DILocation(line: 476, column: 25, scope: !2271, inlinedAt: !2276)
!2276 = distinct !DILocation(line: 85, column: 19, scope: !2260)
!2277 = !DILocation(line: 85, column: 19, scope: !2260)
!2278 = !DILocation(line: 85, column: 13, scope: !2265)
!2279 = !DILocation(line: 88, column: 21, scope: !2265)
!2280 = !DILocation(line: 88, column: 20, scope: !2265)
!2281 = !DILocation(line: 88, column: 13, scope: !2265)
!2282 = !DILocation(line: 91, column: 20, scope: !2265)
!2283 = !DILocation(line: 915, column: 29, scope: !214, inlinedAt: !2284)
!2284 = distinct !DILocation(line: 91, column: 76, scope: !2265)
!2285 = !DILocation(line: 915, column: 35, scope: !214, inlinedAt: !2284)
!2286 = !DILocation(line: 460, column: 32, scope: !228, inlinedAt: !2287)
!2287 = distinct !DILocation(line: 920, column: 18, scope: !214, inlinedAt: !2284)
!2288 = !DILocation(line: 460, column: 38, scope: !228, inlinedAt: !2287)
!2289 = !DILocation(line: 465, column: 18, scope: !228, inlinedAt: !2287)
!2290 = !DILocation(line: 91, column: 76, scope: !2265)
!2291 = !DILocalVariable(name: "self", arg: 1, scope: !2292, file: !215, line: 1101, type: !221)
!2292 = distinct !DISubprogram(name: "wrapping_byte_add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$17wrapping_byte_add17h5db3da106001babeE", scope: !216, file: !215, line: 1101, type: !219, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2293)
!2293 = !{!2291, !2294}
!2294 = !DILocalVariable(name: "count", arg: 2, scope: !2292, file: !215, line: 1101, type: !9)
!2295 = !DILocation(line: 1101, column: 36, scope: !2292, inlinedAt: !2296)
!2296 = distinct !DILocation(line: 91, column: 32, scope: !2265)
!2297 = !DILocation(line: 1101, column: 42, scope: !2292, inlinedAt: !2296)
!2298 = !DILocalVariable(name: "self", arg: 1, scope: !2299, file: !215, line: 58, type: !221)
!2299 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h354b1f425a42ad12E", scope: !216, file: !215, line: 58, type: !2300, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1225, retainedNodes: !2302)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{!1840, !221}
!2302 = !{!2298}
!2303 = !DILocation(line: 58, column: 26, scope: !2299, inlinedAt: !2304)
!2304 = distinct !DILocation(line: 1102, column: 9, scope: !2292, inlinedAt: !2296)
!2305 = !DILocalVariable(name: "self", arg: 1, scope: !2306, file: !215, line: 1080, type: !1840)
!2306 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17hf08fe8d17a6553d7E", scope: !216, file: !215, line: 1080, type: !2307, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !2309)
!2307 = !DISubroutineType(types: !2308)
!2308 = !{!1840, !1840, !9}
!2309 = !{!2305, !2310}
!2310 = !DILocalVariable(name: "count", arg: 2, scope: !2306, file: !215, line: 1080, type: !9)
!2311 = !DILocation(line: 1080, column: 31, scope: !2306, inlinedAt: !2312)
!2312 = distinct !DILocation(line: 1102, column: 9, scope: !2292, inlinedAt: !2296)
!2313 = !DILocation(line: 1080, column: 37, scope: !2306, inlinedAt: !2312)
!2314 = !DILocalVariable(name: "self", arg: 1, scope: !2315, file: !215, line: 540, type: !1840)
!2315 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hce4b461b0c6f3befE", scope: !216, file: !215, line: 540, type: !2316, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !2318)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{!1840, !1840, !231}
!2318 = !{!2314, !2319}
!2319 = !DILocalVariable(name: "count", arg: 2, scope: !2315, file: !215, line: 540, type: !231)
!2320 = !DILocation(line: 540, column: 34, scope: !2315, inlinedAt: !2321)
!2321 = distinct !DILocation(line: 1084, column: 9, scope: !2306, inlinedAt: !2312)
!2322 = !DILocation(line: 540, column: 40, scope: !2315, inlinedAt: !2321)
!2323 = !DILocation(line: 545, column: 18, scope: !2315, inlinedAt: !2321)
!2324 = !DILocation(line: 1102, column: 9, scope: !2292, inlinedAt: !2296)
!2325 = !DILocation(line: 91, column: 32, scope: !2265)
!2326 = !DILocation(line: 93, column: 25, scope: !2267)
!2327 = !DILocation(line: 93, column: 64, scope: !2267)
!2328 = !DILocation(line: 93, column: 13, scope: !2267)
!2329 = !DILocation(line: 95, column: 6, scope: !2260)
!2330 = distinct !DISubprogram(name: "insert_head<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_head17hc2222a955449100bE", scope: !1136, file: !2331, line: 88, type: !2332, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !2334)
!2331 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs", directory: "", checksumkind: CSK_MD5, checksum: "ffd055a2ce62690addc8d3b731c0d933")
!2332 = !DISubroutineType(types: !2333)
!2333 = !{null, !348, !1106}
!2334 = !{!2335, !2336, !2337, !2339, !2341, !2343, !2345}
!2335 = !DILocalVariable(name: "v", arg: 1, scope: !2330, file: !2331, line: 88, type: !348)
!2336 = !DILocalVariable(name: "is_less", arg: 2, scope: !2330, file: !2331, line: 88, type: !1106)
!2337 = !DILocalVariable(name: "arr_ptr", scope: !2338, file: !2331, line: 97, type: !287, align: 8)
!2338 = distinct !DILexicalBlock(scope: !2330, file: !2331, line: 97, column: 13)
!2339 = !DILocalVariable(name: "tmp", scope: !2340, file: !2331, line: 116, type: !649, align: 8)
!2340 = distinct !DILexicalBlock(scope: !2338, file: !2331, line: 116, column: 13)
!2341 = !DILocalVariable(name: "hole", scope: !2342, file: !2331, line: 128, type: !1135, align: 8)
!2342 = distinct !DILexicalBlock(scope: !2340, file: !2331, line: 128, column: 13)
!2343 = !DILocalVariable(name: "iter", scope: !2344, file: !2331, line: 131, type: !175, align: 8)
!2344 = distinct !DILexicalBlock(scope: !2342, file: !2331, line: 131, column: 13)
!2345 = !DILocalVariable(name: "i", scope: !2346, file: !2331, line: 131, type: !9, align: 8)
!2346 = distinct !DILexicalBlock(scope: !2344, file: !2331, line: 131, column: 33)
!2347 = !{!189, !1125}
!2348 = !DILocation(line: 88, column: 29, scope: !2330)
!2349 = !DILocation(line: 88, column: 42, scope: !2330)
!2350 = !DILocation(line: 116, column: 17, scope: !2340)
!2351 = !DILocation(line: 128, column: 17, scope: !2342)
!2352 = !DILocation(line: 131, column: 22, scope: !2344)
!2353 = !DILocation(line: 92, column: 19, scope: !2330)
!2354 = !DILocation(line: 92, column: 5, scope: !2330)
!2355 = !DILocation(line: 96, column: 20, scope: !2330)
!2356 = !DILocation(line: 96, column: 40, scope: !2330)
!2357 = !DILocation(line: 96, column: 12, scope: !2330)
!2358 = !DILocation(line: 141, column: 2, scope: !2330)
!2359 = !DILocation(line: 506, column: 29, scope: !2011, inlinedAt: !2360)
!2360 = distinct !DILocation(line: 97, column: 27, scope: !2330)
!2361 = !DILocation(line: 97, column: 27, scope: !2330)
!2362 = !DILocation(line: 97, column: 17, scope: !2338)
!2363 = !DILocation(line: 116, column: 46, scope: !2338)
!2364 = !DILocation(line: 70, column: 22, scope: !997, inlinedAt: !2365)
!2365 = distinct !DILocation(line: 116, column: 23, scope: !2338)
!2366 = !DILocation(line: 71, column: 9, scope: !997, inlinedAt: !2365)
!2367 = !DILocalVariable(name: "self", arg: 1, scope: !2368, file: !998, line: 153, type: !2372)
!2368 = distinct !DISubprogram(name: "deref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd6592268030643eaE", scope: !2369, file: !998, line: 153, type: !2370, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2373)
!2369 = !DINamespace(name: "{impl#2}", scope: !650)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!12, !2372}
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !649, size: 64, align: 64, dwarfAddressSpace: 0)
!2373 = !{!2367}
!2374 = !DILocation(line: 153, column: 14, scope: !2368, inlinedAt: !2375)
!2375 = distinct !DILocation(line: 128, column: 50, scope: !2340)
!2376 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2377)
!2377 = distinct !DILocation(line: 128, column: 62, scope: !2340)
!2378 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2377)
!2379 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2380)
!2380 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2377)
!2381 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2380)
!2382 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2380)
!2383 = !DILocation(line: 128, column: 28, scope: !2340)
!2384 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2385)
!2385 = distinct !DILocation(line: 129, column: 38, scope: !2342)
!2386 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2385)
!2387 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2388)
!2388 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2385)
!2389 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2388)
!2390 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2388)
!2391 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2392)
!2392 = distinct !DILocation(line: 129, column: 54, scope: !2342)
!2393 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2392)
!2394 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2395)
!2395 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2392)
!2396 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2395)
!2397 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2395)
!2398 = !DILocation(line: 129, column: 13, scope: !2342)
!2399 = !DILocation(line: 131, column: 22, scope: !2342)
!2400 = !DILocation(line: 131, column: 13, scope: !2344)
!2401 = !DILocation(line: 139, column: 9, scope: !2340)
!2402 = !DILocation(line: 131, column: 17, scope: !2344)
!2403 = !DILocation(line: 131, column: 17, scope: !2346)
!2404 = !DILocation(line: 132, column: 30, scope: !2346)
!2405 = !DILocation(line: 132, column: 29, scope: !2346)
!2406 = !DILocation(line: 153, column: 14, scope: !2368, inlinedAt: !2407)
!2407 = distinct !DILocation(line: 132, column: 51, scope: !2346)
!2408 = !DILocation(line: 132, column: 21, scope: !2346)
!2409 = !DILocation(line: 132, column: 20, scope: !2346)
!2410 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2411)
!2411 = distinct !DILocation(line: 135, column: 42, scope: !2346)
!2412 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2411)
!2413 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2414)
!2414 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2411)
!2415 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2414)
!2416 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2414)
!2417 = !DILocation(line: 135, column: 70, scope: !2346)
!2418 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2419)
!2419 = distinct !DILocation(line: 135, column: 58, scope: !2346)
!2420 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2419)
!2421 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2422)
!2422 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2419)
!2423 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2422)
!2424 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2422)
!2425 = !DILocation(line: 135, column: 17, scope: !2346)
!2426 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2427)
!2427 = distinct !DILocation(line: 136, column: 29, scope: !2346)
!2428 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2427)
!2429 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2430)
!2430 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2427)
!2431 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2430)
!2432 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2430)
!2433 = !DILocation(line: 136, column: 17, scope: !2346)
!2434 = distinct !DISubprogram(name: "insert_tail<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_tail17h64cc23de55da941bE", scope: !1136, file: !2331, line: 35, type: !2332, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !2435)
!2435 = !{!2436, !2437, !2438, !2440, !2442, !2444, !2446, !2448, !2458, !2460}
!2436 = !DILocalVariable(name: "v", arg: 1, scope: !2434, file: !2331, line: 35, type: !348)
!2437 = !DILocalVariable(name: "is_less", arg: 2, scope: !2434, file: !2331, line: 35, type: !1106)
!2438 = !DILocalVariable(name: "arr_ptr", scope: !2439, file: !2331, line: 41, type: !287, align: 8)
!2439 = distinct !DILexicalBlock(scope: !2434, file: !2331, line: 41, column: 5)
!2440 = !DILocalVariable(name: "i", scope: !2441, file: !2331, line: 42, type: !9, align: 8)
!2441 = distinct !DILexicalBlock(scope: !2439, file: !2331, line: 42, column: 5)
!2442 = !DILocalVariable(name: "i_ptr", scope: !2443, file: !2331, line: 47, type: !287, align: 8)
!2443 = distinct !DILexicalBlock(scope: !2441, file: !2331, line: 47, column: 9)
!2444 = !DILocalVariable(name: "tmp", scope: !2445, file: !2331, line: 56, type: !649, align: 8)
!2445 = distinct !DILexicalBlock(scope: !2443, file: !2331, line: 56, column: 13)
!2446 = !DILocalVariable(name: "hole", scope: !2447, file: !2331, line: 67, type: !1135, align: 8)
!2447 = distinct !DILexicalBlock(scope: !2445, file: !2331, line: 67, column: 13)
!2448 = !DILocalVariable(name: "iter", scope: !2449, file: !2331, line: 71, type: !2450, align: 8)
!2449 = distinct !DILexicalBlock(scope: !2447, file: !2331, line: 71, column: 13)
!2450 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !2451, file: !2, size: 128, align: 64, elements: !2454, templateParams: !2456, identifier: "f7c527b5bc0a87ed578ba11dbdba96b4")
!2451 = !DINamespace(name: "rev", scope: !2452)
!2452 = !DINamespace(name: "adapters", scope: !2453)
!2453 = !DINamespace(name: "iter", scope: !143)
!2454 = !{!2455}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2450, file: !2, baseType: !175, size: 128, align: 64)
!2456 = !{!2457}
!2457 = !DITemplateTypeParameter(name: "T", type: !175)
!2458 = !DILocalVariable(name: "j", scope: !2459, file: !2331, line: 71, type: !9, align: 8)
!2459 = distinct !DILexicalBlock(scope: !2449, file: !2331, line: 71, column: 41)
!2460 = !DILocalVariable(name: "j_ptr", scope: !2461, file: !2331, line: 72, type: !287, align: 8)
!2461 = distinct !DILexicalBlock(scope: !2459, file: !2331, line: 72, column: 17)
!2462 = !DILocation(line: 35, column: 29, scope: !2434)
!2463 = !DILocation(line: 35, column: 42, scope: !2434)
!2464 = !DILocation(line: 56, column: 17, scope: !2445)
!2465 = !DILocation(line: 67, column: 17, scope: !2447)
!2466 = !DILocation(line: 71, column: 22, scope: !2449)
!2467 = !DILocation(line: 39, column: 19, scope: !2434)
!2468 = !DILocation(line: 39, column: 5, scope: !2434)
!2469 = !DILocation(line: 506, column: 29, scope: !2011, inlinedAt: !2470)
!2470 = distinct !DILocation(line: 41, column: 19, scope: !2434)
!2471 = !DILocation(line: 41, column: 19, scope: !2434)
!2472 = !DILocation(line: 41, column: 9, scope: !2439)
!2473 = !DILocation(line: 42, column: 13, scope: !2439)
!2474 = !DILocation(line: 42, column: 9, scope: !2441)
!2475 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2476)
!2476 = distinct !DILocation(line: 47, column: 21, scope: !2441)
!2477 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2476)
!2478 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2479)
!2479 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2476)
!2480 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2479)
!2481 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2479)
!2482 = !DILocation(line: 47, column: 21, scope: !2441)
!2483 = !DILocation(line: 47, column: 13, scope: !2443)
!2484 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !2485)
!2485 = distinct !DILocation(line: 52, column: 31, scope: !2443)
!2486 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !2485)
!2487 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !2488)
!2488 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !2485)
!2489 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !2490)
!2490 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !2488)
!2491 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !2490)
!2492 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2493)
!2493 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !2485)
!2494 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2493)
!2495 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2493)
!2496 = !DILocation(line: 52, column: 12, scope: !2443)
!2497 = !DILocation(line: 83, column: 2, scope: !2434)
!2498 = !DILocation(line: 56, column: 46, scope: !2443)
!2499 = !DILocation(line: 70, column: 22, scope: !997, inlinedAt: !2500)
!2500 = distinct !DILocation(line: 56, column: 23, scope: !2443)
!2501 = !DILocation(line: 71, column: 9, scope: !997, inlinedAt: !2500)
!2502 = !DILocation(line: 153, column: 14, scope: !2368, inlinedAt: !2503)
!2503 = distinct !DILocation(line: 67, column: 50, scope: !2445)
!2504 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !2505)
!2505 = distinct !DILocation(line: 67, column: 62, scope: !2445)
!2506 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !2505)
!2507 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !2508)
!2508 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !2505)
!2509 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !2510)
!2510 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !2508)
!2511 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !2510)
!2512 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2513)
!2513 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !2505)
!2514 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2513)
!2515 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2513)
!2516 = !DILocation(line: 67, column: 28, scope: !2445)
!2517 = !DILocation(line: 68, column: 38, scope: !2447)
!2518 = !DILocation(line: 68, column: 13, scope: !2447)
!2519 = !DILocation(line: 71, column: 26, scope: !2447)
!2520 = !DILocation(line: 71, column: 22, scope: !2447)
!2521 = !DILocation(line: 71, column: 13, scope: !2449)
!2522 = !DILocation(line: 81, column: 9, scope: !2445)
!2523 = !DILocation(line: 71, column: 17, scope: !2449)
!2524 = !DILocation(line: 71, column: 17, scope: !2459)
!2525 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2526)
!2526 = distinct !DILocation(line: 72, column: 29, scope: !2459)
!2527 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2526)
!2528 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2529)
!2529 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2526)
!2530 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2529)
!2531 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2529)
!2532 = !DILocation(line: 72, column: 29, scope: !2459)
!2533 = !DILocation(line: 72, column: 21, scope: !2461)
!2534 = !DILocation(line: 153, column: 14, scope: !2368, inlinedAt: !2535)
!2535 = distinct !DILocation(line: 73, column: 30, scope: !2461)
!2536 = !DILocation(line: 73, column: 21, scope: !2461)
!2537 = !DILocation(line: 73, column: 20, scope: !2461)
!2538 = !DILocation(line: 77, column: 49, scope: !2461)
!2539 = !DILocation(line: 77, column: 17, scope: !2461)
!2540 = !DILocation(line: 78, column: 17, scope: !2461)
!2541 = distinct !DISubprogram(name: "choose_pivot<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot17hf7f3a6a67751ea08E", scope: !1136, file: !2331, line: 718, type: !2542, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !2544)
!2542 = !DISubroutineType(types: !2543)
!2543 = !{!1024, !348, !1106}
!2544 = !{!2545, !2546, !2547, !2549, !2551, !2553, !2555, !2557, !2566, !2572}
!2545 = !DILocalVariable(name: "v", arg: 1, scope: !2541, file: !2331, line: 718, type: !348)
!2546 = !DILocalVariable(name: "is_less", arg: 2, scope: !2541, file: !2331, line: 718, type: !1106)
!2547 = !DILocalVariable(name: "len", scope: !2548, file: !2331, line: 728, type: !9, align: 8)
!2548 = distinct !DILexicalBlock(scope: !2541, file: !2331, line: 728, column: 5)
!2549 = !DILocalVariable(name: "a", scope: !2550, file: !2331, line: 731, type: !9, align: 8)
!2550 = distinct !DILexicalBlock(scope: !2548, file: !2331, line: 731, column: 5)
!2551 = !DILocalVariable(name: "b", scope: !2552, file: !2331, line: 732, type: !9, align: 8)
!2552 = distinct !DILexicalBlock(scope: !2550, file: !2331, line: 732, column: 5)
!2553 = !DILocalVariable(name: "c", scope: !2554, file: !2331, line: 733, type: !9, align: 8)
!2554 = distinct !DILexicalBlock(scope: !2552, file: !2331, line: 733, column: 5)
!2555 = !DILocalVariable(name: "swaps", scope: !2556, file: !2331, line: 736, type: !9, align: 8)
!2556 = distinct !DILexicalBlock(scope: !2554, file: !2331, line: 736, column: 5)
!2557 = !DILocalVariable(name: "sort2", scope: !2558, file: !2331, line: 746, type: !2559, align: 8)
!2558 = distinct !DILexicalBlock(scope: !2556, file: !2331, line: 746, column: 9)
!2559 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2560, file: !2, size: 256, align: 64, elements: !2561, templateParams: !24, identifier: "5f48f341c9e74ea7b73894ab2119f813")
!2560 = !DINamespace(name: "choose_pivot", scope: !1136)
!2561 = !{!2562, !2563, !2564}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !2559, file: !2, baseType: !1106, size: 64, align: 64, offset: 128)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__v", scope: !2559, file: !2, baseType: !317, size: 128, align: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__swaps", scope: !2559, file: !2, baseType: !2565, size: 64, align: 64, offset: 192)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2566 = !DILocalVariable(name: "sort3", scope: !2567, file: !2331, line: 754, type: !2568, align: 8)
!2567 = distinct !DILexicalBlock(scope: !2558, file: !2331, line: 754, column: 9)
!2568 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2560, file: !2, size: 64, align: 64, elements: !2569, templateParams: !24, identifier: "637480eec69c6084c271978ed8367ada")
!2569 = !{!2570}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort2", scope: !2568, file: !2, baseType: !2571, size: 64, align: 64)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2559, size: 64, align: 64, dwarfAddressSpace: 0)
!2572 = !DILocalVariable(name: "sort_adjacent", scope: !2573, file: !2331, line: 762, type: !2574, align: 8)
!2573 = distinct !DILexicalBlock(scope: !2567, file: !2331, line: 762, column: 13)
!2574 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2560, file: !2, size: 64, align: 64, elements: !2575, templateParams: !24, identifier: "5e9fe4e6eacbce98c25556f074fba2dc")
!2575 = !{!2576}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort3", scope: !2574, file: !2, baseType: !2577, size: 64, align: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2568, size: 64, align: 64, dwarfAddressSpace: 0)
!2578 = !DILocation(line: 718, column: 23, scope: !2541)
!2579 = !DILocation(line: 718, column: 36, scope: !2541)
!2580 = !DILocation(line: 731, column: 9, scope: !2550)
!2581 = !DILocation(line: 732, column: 9, scope: !2552)
!2582 = !DILocation(line: 733, column: 9, scope: !2554)
!2583 = !DILocation(line: 736, column: 9, scope: !2556)
!2584 = !DILocation(line: 746, column: 13, scope: !2558)
!2585 = !DILocation(line: 754, column: 13, scope: !2567)
!2586 = !DILocation(line: 762, column: 17, scope: !2573)
!2587 = !DILocation(line: 728, column: 15, scope: !2541)
!2588 = !DILocation(line: 728, column: 9, scope: !2548)
!2589 = !DILocation(line: 731, column: 17, scope: !2548)
!2590 = !DILocation(line: 732, column: 17, scope: !2550)
!2591 = !DILocation(line: 733, column: 17, scope: !2552)
!2592 = !DILocation(line: 736, column: 21, scope: !2554)
!2593 = !DILocation(line: 738, column: 8, scope: !2556)
!2594 = !DILocation(line: 777, column: 8, scope: !2556)
!2595 = !DILocation(line: 746, column: 25, scope: !2556)
!2596 = !DILocation(line: 754, column: 25, scope: !2558)
!2597 = !DILocation(line: 760, column: 12, scope: !2567)
!2598 = !DILocation(line: 774, column: 9, scope: !2567)
!2599 = !DILocation(line: 762, column: 37, scope: !2567)
!2600 = !DILocation(line: 768, column: 13, scope: !2573)
!2601 = !DILocation(line: 769, column: 13, scope: !2573)
!2602 = !DILocation(line: 770, column: 13, scope: !2573)
!2603 = !DILocation(line: 782, column: 9, scope: !2556)
!2604 = !DILocation(line: 783, column: 10, scope: !2556)
!2605 = !DILocation(line: 778, column: 10, scope: !2556)
!2606 = !DILocation(line: 778, column: 13, scope: !2556)
!2607 = !DILocation(line: 778, column: 9, scope: !2556)
!2608 = !DILocation(line: 777, column: 5, scope: !2556)
!2609 = !DILocation(line: 785, column: 2, scope: !2541)
!2610 = !DILocation(line: 783, column: 20, scope: !2556)
!2611 = !DILocation(line: 783, column: 9, scope: !2556)
!2612 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h5c85e7a9f2c2a658E", scope: !2560, file: !2331, line: 746, type: !2613, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !2615)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{null, !2571, !2565, !2565}
!2615 = !{!2616, !2617, !2618, !2619, !2620}
!2616 = !DILocalVariable(name: "a", arg: 2, scope: !2612, file: !2331, line: 746, type: !2565)
!2617 = !DILocalVariable(name: "b", arg: 3, scope: !2612, file: !2331, line: 746, type: !2565)
!2618 = !DILocalVariable(name: "is_less", scope: !2612, file: !2331, line: 718, type: !1107, align: 8)
!2619 = !DILocalVariable(name: "v", scope: !2612, file: !2331, line: 718, type: !13, align: 8)
!2620 = !DILocalVariable(name: "swaps", scope: !2612, file: !2331, line: 736, type: !9, align: 8)
!2621 = !DILocation(line: 718, column: 36, scope: !2612)
!2622 = !DILocation(line: 718, column: 23, scope: !2612)
!2623 = !DILocation(line: 736, column: 9, scope: !2612)
!2624 = !DILocation(line: 746, column: 26, scope: !2612)
!2625 = !DILocation(line: 746, column: 41, scope: !2612)
!2626 = !DILocation(line: 747, column: 16, scope: !2612)
!2627 = !DILocation(line: 747, column: 24, scope: !2612)
!2628 = !DILocation(line: 747, column: 40, scope: !2612)
!2629 = !DILocation(line: 747, column: 45, scope: !2612)
!2630 = !DILocation(line: 747, column: 61, scope: !2612)
!2631 = !DILocation(line: 751, column: 10, scope: !2612)
!2632 = !DILocation(line: 748, column: 17, scope: !2612)
!2633 = !DILocation(line: 749, column: 17, scope: !2612)
!2634 = !DILocation(line: 747, column: 13, scope: !2612)
!2635 = distinct !DISubprogram(name: "{closure#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h8974e035a2f1d5ceE", scope: !2560, file: !2331, line: 754, type: !2636, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !2638)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{null, !2577, !2565, !2565, !2565}
!2638 = !{!2639, !2640, !2641, !2642}
!2639 = !DILocalVariable(name: "a", arg: 2, scope: !2635, file: !2331, line: 754, type: !2565)
!2640 = !DILocalVariable(name: "b", arg: 3, scope: !2635, file: !2331, line: 754, type: !2565)
!2641 = !DILocalVariable(name: "c", arg: 4, scope: !2635, file: !2331, line: 754, type: !2565)
!2642 = !DILocalVariable(name: "sort2", scope: !2635, file: !2331, line: 746, type: !2559, align: 8)
!2643 = !DILocation(line: 746, column: 13, scope: !2635)
!2644 = !DILocation(line: 754, column: 26, scope: !2635)
!2645 = !DILocation(line: 754, column: 41, scope: !2635)
!2646 = !DILocation(line: 754, column: 56, scope: !2635)
!2647 = !DILocation(line: 755, column: 13, scope: !2635)
!2648 = !DILocation(line: 756, column: 13, scope: !2635)
!2649 = !DILocation(line: 757, column: 13, scope: !2635)
!2650 = !DILocation(line: 758, column: 10, scope: !2635)
!2651 = distinct !DISubprogram(name: "{closure#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc098a7953860ed10E", scope: !2560, file: !2331, line: 762, type: !2652, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !2655)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{null, !2654, !2565}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2574, size: 64, align: 64, dwarfAddressSpace: 0)
!2655 = !{!2656, !2657, !2658}
!2656 = !DILocalVariable(name: "a", arg: 2, scope: !2651, file: !2331, line: 762, type: !2565)
!2657 = !DILocalVariable(name: "sort3", scope: !2651, file: !2331, line: 754, type: !2568, align: 8)
!2658 = !DILocalVariable(name: "tmp", scope: !2659, file: !2331, line: 763, type: !9, align: 8)
!2659 = distinct !DILexicalBlock(scope: !2651, file: !2331, line: 763, column: 17)
!2660 = !DILocation(line: 754, column: 13, scope: !2651)
!2661 = !DILocation(line: 762, column: 38, scope: !2651)
!2662 = !DILocation(line: 763, column: 27, scope: !2651)
!2663 = !DILocation(line: 763, column: 21, scope: !2659)
!2664 = !DILocation(line: 764, column: 17, scope: !2659)
!2665 = !DILocation(line: 764, column: 28, scope: !2659)
!2666 = !DILocation(line: 764, column: 47, scope: !2659)
!2667 = !DILocation(line: 765, column: 14, scope: !2651)
!2668 = distinct !DISubprogram(name: "break_patterns<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns17hcecbe5991799ddb2E", scope: !1136, file: !2331, line: 673, type: !2131, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2669)
!2669 = !{!2670, !2671, !2673, !2675, !2682, !2688, !2690, !2692, !2694, !2696}
!2670 = !DILocalVariable(name: "v", arg: 1, scope: !2668, file: !2331, line: 673, type: !348)
!2671 = !DILocalVariable(name: "len", scope: !2672, file: !2331, line: 674, type: !9, align: 8)
!2672 = distinct !DILexicalBlock(scope: !2668, file: !2331, line: 674, column: 5)
!2673 = !DILocalVariable(name: "random", scope: !2674, file: !2331, line: 677, type: !27, align: 4)
!2674 = distinct !DILexicalBlock(scope: !2672, file: !2331, line: 677, column: 9)
!2675 = !DILocalVariable(name: "gen_u32", scope: !2676, file: !2331, line: 678, type: !2677, align: 8)
!2676 = distinct !DILexicalBlock(scope: !2674, file: !2331, line: 678, column: 9)
!2677 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !2678, file: !2, size: 64, align: 64, elements: !2679, templateParams: !24, identifier: "a7f836ef5f1eb5c58bd03d1c2d692227")
!2678 = !DINamespace(name: "break_patterns", scope: !1136)
!2679 = !{!2680}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__random", scope: !2677, file: !2, baseType: !2681, size: 64, align: 64)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!2682 = !DILocalVariable(name: "gen_usize", scope: !2683, file: !2331, line: 684, type: !2684, align: 8)
!2683 = distinct !DILexicalBlock(scope: !2676, file: !2331, line: 684, column: 9)
!2684 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !2678, file: !2, size: 64, align: 64, elements: !2685, templateParams: !24, identifier: "f16af45dc84c6d5ed11300c9a3530433")
!2685 = !{!2686}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__gen_u32", scope: !2684, file: !2, baseType: !2687, size: 64, align: 64)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::break_patterns::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !2677, size: 64, align: 64, dwarfAddressSpace: 0)
!2688 = !DILocalVariable(name: "modulus", scope: !2689, file: !2331, line: 694, type: !9, align: 8)
!2689 = distinct !DILexicalBlock(scope: !2683, file: !2331, line: 694, column: 9)
!2690 = !DILocalVariable(name: "pos", scope: !2691, file: !2331, line: 697, type: !9, align: 8)
!2691 = distinct !DILexicalBlock(scope: !2689, file: !2331, line: 697, column: 9)
!2692 = !DILocalVariable(name: "iter", scope: !2693, file: !2331, line: 699, type: !175, align: 8)
!2693 = distinct !DILexicalBlock(scope: !2691, file: !2331, line: 699, column: 9)
!2694 = !DILocalVariable(name: "i", scope: !2695, file: !2331, line: 699, type: !9, align: 8)
!2695 = distinct !DILexicalBlock(scope: !2693, file: !2331, line: 699, column: 23)
!2696 = !DILocalVariable(name: "other", scope: !2697, file: !2331, line: 703, type: !9, align: 8)
!2697 = distinct !DILexicalBlock(scope: !2695, file: !2331, line: 703, column: 13)
!2698 = !DILocation(line: 673, column: 22, scope: !2668)
!2699 = !DILocation(line: 677, column: 13, scope: !2674)
!2700 = !DILocation(line: 678, column: 13, scope: !2676)
!2701 = !DILocation(line: 684, column: 13, scope: !2683)
!2702 = !DILocation(line: 699, column: 18, scope: !2693)
!2703 = !DILocation(line: 703, column: 17, scope: !2697)
!2704 = !DILocation(line: 674, column: 15, scope: !2668)
!2705 = !DILocation(line: 674, column: 9, scope: !2672)
!2706 = !DILocation(line: 675, column: 8, scope: !2672)
!2707 = !DILocation(line: 713, column: 2, scope: !2668)
!2708 = !DILocation(line: 677, column: 26, scope: !2672)
!2709 = !DILocation(line: 678, column: 27, scope: !2674)
!2710 = !DILocation(line: 684, column: 29, scope: !2676)
!2711 = !DILocation(line: 694, column: 23, scope: !2683)
!2712 = !DILocation(line: 694, column: 13, scope: !2689)
!2713 = !DILocation(line: 697, column: 19, scope: !2689)
!2714 = !DILocation(line: 697, column: 13, scope: !2691)
!2715 = !DILocation(line: 699, column: 18, scope: !2691)
!2716 = !DILocation(line: 699, column: 9, scope: !2693)
!2717 = !DILocation(line: 699, column: 13, scope: !2693)
!2718 = !DILocation(line: 699, column: 13, scope: !2695)
!2719 = !DILocation(line: 703, column: 29, scope: !2695)
!2720 = !DILocation(line: 703, column: 43, scope: !2695)
!2721 = !DILocation(line: 706, column: 16, scope: !2697)
!2722 = !DILocation(line: 710, column: 20, scope: !2697)
!2723 = !DILocation(line: 707, column: 17, scope: !2697)
!2724 = !DILocation(line: 706, column: 13, scope: !2697)
!2725 = !DILocation(line: 710, column: 33, scope: !2697)
!2726 = !DILocation(line: 710, column: 13, scope: !2697)
!2727 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h1bd37a70f6616ff4E", scope: !2678, file: !2331, line: 678, type: !2728, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2730)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!27, !2687}
!2730 = !{!2731}
!2731 = !DILocalVariable(name: "random", scope: !2727, file: !2331, line: 677, type: !27, align: 4)
!2732 = !DILocation(line: 677, column: 13, scope: !2727)
!2733 = !DILocation(line: 679, column: 23, scope: !2727)
!2734 = !DILocation(line: 679, column: 13, scope: !2727)
!2735 = !DILocation(line: 680, column: 23, scope: !2727)
!2736 = !DILocation(line: 680, column: 13, scope: !2727)
!2737 = !DILocation(line: 681, column: 23, scope: !2727)
!2738 = !DILocation(line: 681, column: 13, scope: !2727)
!2739 = !DILocation(line: 682, column: 13, scope: !2727)
!2740 = !DILocation(line: 683, column: 10, scope: !2727)
!2741 = distinct !DISubprogram(name: "{closure#1}<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17hef15d68b8b0b3ce8E", scope: !2678, file: !2331, line: 684, type: !2742, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !2745)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!9, !2744}
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::break_patterns::{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !2684, size: 64, align: 64, dwarfAddressSpace: 0)
!2745 = !{!2746}
!2746 = !DILocalVariable(name: "gen_u32", scope: !2741, file: !2331, line: 678, type: !2677, align: 8)
!2747 = !DILocation(line: 678, column: 13, scope: !2741)
!2748 = !DILocation(line: 688, column: 20, scope: !2741)
!2749 = !DILocation(line: 688, column: 19, scope: !2741)
!2750 = !DILocation(line: 688, column: 18, scope: !2741)
!2751 = !DILocation(line: 688, column: 48, scope: !2741)
!2752 = !DILocation(line: 688, column: 47, scope: !2741)
!2753 = !DILocation(line: 688, column: 17, scope: !2741)
!2754 = !DILocation(line: 690, column: 10, scope: !2741)
!2755 = distinct !DISubprogram(name: "partition_equal<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort15partition_equal17h333611f4883529faE", scope: !1136, file: !2331, line: 615, type: !2756, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !2758)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!9, !348, !9, !1106}
!2758 = !{!2759, !2760, !2761, !2762, !2764, !2765, !2767, !2769, !2771, !2773, !2775, !2777}
!2759 = !DILocalVariable(name: "v", arg: 1, scope: !2755, file: !2331, line: 615, type: !348)
!2760 = !DILocalVariable(name: "pivot", arg: 2, scope: !2755, file: !2331, line: 615, type: !9)
!2761 = !DILocalVariable(name: "is_less", arg: 3, scope: !2755, file: !2331, line: 615, type: !1106)
!2762 = !DILocalVariable(name: "pivot", scope: !2763, file: !2331, line: 621, type: !348, align: 8)
!2763 = distinct !DILexicalBlock(scope: !2755, file: !2331, line: 621, column: 5)
!2764 = !DILocalVariable(name: "v", scope: !2763, file: !2331, line: 621, type: !348, align: 8)
!2765 = !DILocalVariable(name: "pivot", scope: !2766, file: !2331, line: 622, type: !939, align: 8)
!2766 = distinct !DILexicalBlock(scope: !2763, file: !2331, line: 622, column: 5)
!2767 = !DILocalVariable(name: "tmp", scope: !2768, file: !2331, line: 627, type: !649, align: 8)
!2768 = distinct !DILexicalBlock(scope: !2766, file: !2331, line: 627, column: 5)
!2769 = !DILocalVariable(name: "_pivot_guard", scope: !2770, file: !2331, line: 628, type: !1135, align: 8)
!2770 = distinct !DILexicalBlock(scope: !2768, file: !2331, line: 628, column: 5)
!2771 = !DILocalVariable(name: "pivot", scope: !2772, file: !2331, line: 629, type: !12, align: 8)
!2772 = distinct !DILexicalBlock(scope: !2770, file: !2331, line: 629, column: 5)
!2773 = !DILocalVariable(name: "l", scope: !2774, file: !2331, line: 632, type: !9, align: 8)
!2774 = distinct !DILexicalBlock(scope: !2772, file: !2331, line: 632, column: 5)
!2775 = !DILocalVariable(name: "r", scope: !2776, file: !2331, line: 633, type: !9, align: 8)
!2776 = distinct !DILexicalBlock(scope: !2774, file: !2331, line: 633, column: 5)
!2777 = !DILocalVariable(name: "ptr", scope: !2778, file: !2331, line: 657, type: !287, align: 8)
!2778 = distinct !DILexicalBlock(scope: !2776, file: !2331, line: 657, column: 13)
!2779 = !DILocation(line: 615, column: 26, scope: !2755)
!2780 = !DILocation(line: 615, column: 39, scope: !2755)
!2781 = !DILocation(line: 615, column: 53, scope: !2755)
!2782 = !DILocation(line: 627, column: 9, scope: !2768)
!2783 = !DILocation(line: 628, column: 9, scope: !2770)
!2784 = !DILocation(line: 632, column: 9, scope: !2774)
!2785 = !DILocation(line: 633, column: 9, scope: !2776)
!2786 = !DILocation(line: 620, column: 5, scope: !2755)
!2787 = !DILocation(line: 621, column: 22, scope: !2755)
!2788 = !DILocation(line: 621, column: 10, scope: !2755)
!2789 = !DILocation(line: 621, column: 10, scope: !2763)
!2790 = !DILocation(line: 621, column: 17, scope: !2755)
!2791 = !DILocation(line: 621, column: 17, scope: !2763)
!2792 = !DILocation(line: 622, column: 22, scope: !2763)
!2793 = !DILocation(line: 622, column: 17, scope: !2763)
!2794 = !DILocation(line: 622, column: 9, scope: !2766)
!2795 = !DILocation(line: 627, column: 47, scope: !2766)
!2796 = !DILocation(line: 70, column: 22, scope: !997, inlinedAt: !2797)
!2797 = distinct !DILocation(line: 627, column: 15, scope: !2766)
!2798 = !DILocation(line: 71, column: 9, scope: !997, inlinedAt: !2797)
!2799 = !DILocation(line: 153, column: 14, scope: !2368, inlinedAt: !2800)
!2800 = distinct !DILocation(line: 628, column: 46, scope: !2768)
!2801 = !DILocation(line: 628, column: 24, scope: !2768)
!2802 = !DILocation(line: 153, column: 14, scope: !2368, inlinedAt: !2803)
!2803 = distinct !DILocation(line: 629, column: 18, scope: !2770)
!2804 = !DILocation(line: 629, column: 17, scope: !2770)
!2805 = !DILocation(line: 629, column: 9, scope: !2772)
!2806 = !DILocation(line: 632, column: 17, scope: !2772)
!2807 = !DILocation(line: 633, column: 17, scope: !2774)
!2808 = !DILocation(line: 634, column: 5, scope: !2776)
!2809 = !DILocation(line: 641, column: 19, scope: !2776)
!2810 = !DILocation(line: 641, column: 23, scope: !2776)
!2811 = !DILocation(line: 641, column: 60, scope: !2776)
!2812 = !DILocation(line: 641, column: 44, scope: !2776)
!2813 = !DILocation(line: 641, column: 29, scope: !2776)
!2814 = !DILocation(line: 641, column: 28, scope: !2776)
!2815 = !DILocation(line: 646, column: 19, scope: !2776)
!2816 = !DILocation(line: 646, column: 23, scope: !2776)
!2817 = !DILocation(line: 642, column: 17, scope: !2776)
!2818 = !DILocation(line: 641, column: 13, scope: !2776)
!2819 = !DILocation(line: 646, column: 59, scope: !2776)
!2820 = !DILocation(line: 646, column: 43, scope: !2776)
!2821 = !DILocation(line: 646, column: 28, scope: !2776)
!2822 = !DILocation(line: 651, column: 16, scope: !2776)
!2823 = !DILocation(line: 651, column: 21, scope: !2776)
!2824 = !DILocation(line: 647, column: 17, scope: !2776)
!2825 = !DILocation(line: 646, column: 13, scope: !2776)
!2826 = !DILocation(line: 656, column: 13, scope: !2776)
!2827 = !DILocation(line: 664, column: 5, scope: !2776)
!2828 = !DILocation(line: 668, column: 1, scope: !2768)
!2829 = !DILocation(line: 668, column: 2, scope: !2755)
!2830 = !DILocation(line: 506, column: 29, scope: !2011, inlinedAt: !2831)
!2831 = distinct !DILocation(line: 657, column: 23, scope: !2776)
!2832 = !DILocation(line: 657, column: 23, scope: !2776)
!2833 = !DILocation(line: 657, column: 17, scope: !2778)
!2834 = !DILocation(line: 658, column: 31, scope: !2778)
!2835 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2836)
!2836 = distinct !DILocation(line: 658, column: 23, scope: !2778)
!2837 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2836)
!2838 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2839)
!2839 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2836)
!2840 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2839)
!2841 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2839)
!2842 = !DILocation(line: 658, column: 43, scope: !2778)
!2843 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2844)
!2844 = distinct !DILocation(line: 658, column: 35, scope: !2778)
!2845 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2844)
!2846 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2847)
!2847 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2844)
!2848 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2847)
!2849 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2847)
!2850 = !DILocation(line: 658, column: 13, scope: !2778)
!2851 = !DILocation(line: 659, column: 13, scope: !2778)
!2852 = distinct !DISubprogram(name: "partition_in_blocks<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort19partition_in_blocks17h9f68d96e82fd1beaE", scope: !1136, file: !2331, line: 302, type: !2853, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !2855)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!9, !348, !12, !1106}
!2855 = !{!2856, !2857, !2858, !2859, !2861, !2863, !2865, !2867, !2879, !2881, !2883, !2885, !2887, !2889, !2891, !2893, !2895, !2897, !2899, !2901, !2903, !2905, !2907, !2909, !2911, !2916, !2917, !2920, !2923, !2924}
!2856 = !DILocalVariable(name: "v", arg: 1, scope: !2852, file: !2331, line: 302, type: !348)
!2857 = !DILocalVariable(name: "pivot", arg: 2, scope: !2852, file: !2331, line: 302, type: !12)
!2858 = !DILocalVariable(name: "is_less", arg: 3, scope: !2852, file: !2331, line: 302, type: !1106)
!2859 = !DILocalVariable(name: "l", scope: !2860, file: !2331, line: 323, type: !287, align: 8)
!2860 = distinct !DILexicalBlock(scope: !2852, file: !2331, line: 323, column: 5)
!2861 = !DILocalVariable(name: "block_l", scope: !2862, file: !2331, line: 324, type: !9, align: 8)
!2862 = distinct !DILexicalBlock(scope: !2860, file: !2331, line: 324, column: 5)
!2863 = !DILocalVariable(name: "start_l", scope: !2864, file: !2331, line: 325, type: !1160, align: 8)
!2864 = distinct !DILexicalBlock(scope: !2862, file: !2331, line: 325, column: 5)
!2865 = !DILocalVariable(name: "end_l", scope: !2866, file: !2331, line: 326, type: !1160, align: 8)
!2866 = distinct !DILexicalBlock(scope: !2864, file: !2331, line: 326, column: 5)
!2867 = !DILocalVariable(name: "offsets_l", scope: !2868, file: !2331, line: 327, type: !2869, align: 1)
!2868 = distinct !DILexicalBlock(scope: !2866, file: !2331, line: 327, column: 5)
!2869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2870, size: 1024, align: 8, elements: !2877)
!2870 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !644, file: !2, size: 8, align: 8, elements: !2871, templateParams: !1653, identifier: "276df1ddbdad79adb56f095062830c7e")
!2871 = !{!2872, !2873}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2870, file: !2, baseType: !7, align: 8)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2870, file: !2, baseType: !2874, size: 8, align: 8)
!2874 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !650, file: !2, size: 8, align: 8, elements: !2875, templateParams: !1653, identifier: "fb337fa8848e4d454f8655ac9447148d")
!2875 = !{!2876}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2874, file: !2, baseType: !123, size: 8, align: 8)
!2877 = !{!2878}
!2878 = !DISubrange(count: 128, lowerBound: 0)
!2879 = !DILocalVariable(name: "r", scope: !2880, file: !2331, line: 331, type: !287, align: 8)
!2880 = distinct !DILexicalBlock(scope: !2868, file: !2331, line: 331, column: 5)
!2881 = !DILocalVariable(name: "block_r", scope: !2882, file: !2331, line: 332, type: !9, align: 8)
!2882 = distinct !DILexicalBlock(scope: !2880, file: !2331, line: 332, column: 5)
!2883 = !DILocalVariable(name: "start_r", scope: !2884, file: !2331, line: 333, type: !1160, align: 8)
!2884 = distinct !DILexicalBlock(scope: !2882, file: !2331, line: 333, column: 5)
!2885 = !DILocalVariable(name: "end_r", scope: !2886, file: !2331, line: 334, type: !1160, align: 8)
!2886 = distinct !DILexicalBlock(scope: !2884, file: !2331, line: 334, column: 5)
!2887 = !DILocalVariable(name: "offsets_r", scope: !2888, file: !2331, line: 335, type: !2869, align: 1)
!2888 = distinct !DILexicalBlock(scope: !2886, file: !2331, line: 335, column: 5)
!2889 = !DILocalVariable(name: "is_done", scope: !2890, file: !2331, line: 351, type: !415, align: 1)
!2890 = distinct !DILexicalBlock(scope: !2888, file: !2331, line: 351, column: 9)
!2891 = !DILocalVariable(name: "rem", scope: !2892, file: !2331, line: 355, type: !9, align: 8)
!2892 = distinct !DILexicalBlock(scope: !2890, file: !2331, line: 355, column: 13)
!2893 = !DILocalVariable(name: "elem", scope: !2894, file: !2331, line: 381, type: !287, align: 8)
!2894 = distinct !DILexicalBlock(scope: !2890, file: !2331, line: 381, column: 13)
!2895 = !DILocalVariable(name: "iter", scope: !2896, file: !2331, line: 383, type: !175, align: 8)
!2896 = distinct !DILexicalBlock(scope: !2894, file: !2331, line: 383, column: 13)
!2897 = !DILocalVariable(name: "i", scope: !2898, file: !2331, line: 383, type: !9, align: 8)
!2898 = distinct !DILexicalBlock(scope: !2896, file: !2331, line: 383, column: 33)
!2899 = !DILocalVariable(name: "elem", scope: !2900, file: !2331, line: 407, type: !287, align: 8)
!2900 = distinct !DILexicalBlock(scope: !2890, file: !2331, line: 407, column: 13)
!2901 = !DILocalVariable(name: "iter", scope: !2902, file: !2331, line: 409, type: !175, align: 8)
!2902 = distinct !DILexicalBlock(scope: !2900, file: !2331, line: 409, column: 13)
!2903 = !DILocalVariable(name: "i", scope: !2904, file: !2331, line: 409, type: !9, align: 8)
!2904 = distinct !DILexicalBlock(scope: !2902, file: !2331, line: 409, column: 33)
!2905 = !DILocalVariable(name: "count", scope: !2906, file: !2331, line: 431, type: !9, align: 8)
!2906 = distinct !DILexicalBlock(scope: !2890, file: !2331, line: 431, column: 9)
!2907 = !DILocalVariable(name: "tmp", scope: !2908, file: !2331, line: 465, type: !13, align: 8)
!2908 = distinct !DILexicalBlock(scope: !2906, file: !2331, line: 465, column: 17)
!2909 = !DILocalVariable(name: "iter", scope: !2910, file: !2331, line: 468, type: !175, align: 8)
!2910 = distinct !DILexicalBlock(scope: !2908, file: !2331, line: 468, column: 17)
!2911 = !DILocalVariable(name: "left_val", scope: !2912, file: !2331, line: 514, type: !2915, align: 8)
!2912 = !DILexicalBlockFile(scope: !2913, file: !2331, discriminator: 0)
!2913 = distinct !DILexicalBlock(scope: !2888, file: !2914, line: 39, column: 13)
!2914 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "0168b0d49598552ba64770ba9401c336")
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2916 = !DILocalVariable(name: "right_val", scope: !2912, file: !2331, line: 514, type: !2915, align: 8)
!2917 = !DILocalVariable(name: "kind", scope: !2918, file: !2331, line: 514, type: !156, align: 1)
!2918 = !DILexicalBlockFile(scope: !2919, file: !2331, discriminator: 0)
!2919 = distinct !DILexicalBlock(scope: !2913, file: !2914, line: 41, column: 21)
!2920 = !DILocalVariable(name: "left_val", scope: !2921, file: !2331, line: 537, type: !2915, align: 8)
!2921 = !DILexicalBlockFile(scope: !2922, file: !2331, discriminator: 0)
!2922 = distinct !DILexicalBlock(scope: !2888, file: !2914, line: 39, column: 13)
!2923 = !DILocalVariable(name: "right_val", scope: !2921, file: !2331, line: 537, type: !2915, align: 8)
!2924 = !DILocalVariable(name: "kind", scope: !2925, file: !2331, line: 537, type: !156, align: 1)
!2925 = !DILexicalBlockFile(scope: !2926, file: !2331, discriminator: 0)
!2926 = distinct !DILexicalBlock(scope: !2922, file: !2914, line: 41, column: 21)
!2927 = !DILocation(line: 302, column: 30, scope: !2852)
!2928 = !DILocation(line: 302, column: 43, scope: !2852)
!2929 = !DILocation(line: 302, column: 54, scope: !2852)
!2930 = !DILocation(line: 323, column: 9, scope: !2860)
!2931 = !DILocation(line: 324, column: 9, scope: !2862)
!2932 = !DILocation(line: 325, column: 9, scope: !2864)
!2933 = !DILocation(line: 326, column: 9, scope: !2866)
!2934 = !DILocation(line: 327, column: 9, scope: !2868)
!2935 = !DILocation(line: 331, column: 9, scope: !2880)
!2936 = !DILocation(line: 332, column: 9, scope: !2882)
!2937 = !DILocation(line: 333, column: 9, scope: !2884)
!2938 = !DILocation(line: 334, column: 9, scope: !2886)
!2939 = !DILocation(line: 335, column: 9, scope: !2888)
!2940 = !DILocation(line: 355, column: 17, scope: !2892)
!2941 = !DILocation(line: 381, column: 17, scope: !2894)
!2942 = !DILocation(line: 383, column: 22, scope: !2896)
!2943 = !DILocation(line: 407, column: 17, scope: !2900)
!2944 = !DILocation(line: 409, column: 22, scope: !2902)
!2945 = !DILocation(line: 465, column: 21, scope: !2908)
!2946 = !DILocation(line: 468, column: 26, scope: !2910)
!2947 = !DILocation(line: 506, column: 29, scope: !2011, inlinedAt: !2948)
!2948 = distinct !DILocation(line: 323, column: 17, scope: !2852)
!2949 = !DILocation(line: 323, column: 17, scope: !2852)
!2950 = !DILocation(line: 324, column: 23, scope: !2860)
!2951 = !DILocalVariable(name: "addr", arg: 1, scope: !2952, file: !1131, line: 593, type: !9)
!2952 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h91b3b38e35e2b5a4E", scope: !218, file: !1131, line: 593, type: !2953, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1774, retainedNodes: !2955)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!1274, !9}
!2955 = !{!2951}
!2956 = !DILocation(line: 593, column: 29, scope: !2952, inlinedAt: !2957)
!2957 = distinct !DILocation(line: 537, column: 24, scope: !2958, inlinedAt: !2961)
!2958 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hedc83c42c8199f3cE", scope: !218, file: !1131, line: 536, type: !2959, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !24)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{!1160}
!2961 = distinct !DILocation(line: 325, column: 23, scope: !2862)
!2962 = !DILocation(line: 599, column: 14, scope: !2952, inlinedAt: !2957)
!2963 = !DILocation(line: 537, column: 5, scope: !2958, inlinedAt: !2961)
!2964 = !DILocation(line: 325, column: 23, scope: !2862)
!2965 = !DILocation(line: 593, column: 29, scope: !2952, inlinedAt: !2966)
!2966 = distinct !DILocation(line: 537, column: 24, scope: !2958, inlinedAt: !2967)
!2967 = distinct !DILocation(line: 326, column: 21, scope: !2864)
!2968 = !DILocation(line: 599, column: 14, scope: !2952, inlinedAt: !2966)
!2969 = !DILocation(line: 537, column: 5, scope: !2958, inlinedAt: !2967)
!2970 = !DILocation(line: 326, column: 21, scope: !2864)
!2971 = !DILocation(line: 315, column: 6, scope: !2972, inlinedAt: !2975)
!2972 = distinct !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h3105af750b5645faE", scope: !2870, file: !1411, line: 313, type: !2973, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !24)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{!2870}
!2975 = distinct !DILocation(line: 327, column: 26, scope: !2866)
!2976 = !DILocation(line: 327, column: 25, scope: !2866)
!2977 = !DILocation(line: 331, column: 26, scope: !2868)
!2978 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !2979)
!2979 = distinct !DILocation(line: 331, column: 26, scope: !2868)
!2980 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !2979)
!2981 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !2982)
!2982 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !2979)
!2983 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !2982)
!2984 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !2982)
!2985 = !DILocation(line: 332, column: 23, scope: !2880)
!2986 = !DILocation(line: 593, column: 29, scope: !2952, inlinedAt: !2987)
!2987 = distinct !DILocation(line: 537, column: 24, scope: !2958, inlinedAt: !2988)
!2988 = distinct !DILocation(line: 333, column: 23, scope: !2882)
!2989 = !DILocation(line: 599, column: 14, scope: !2952, inlinedAt: !2987)
!2990 = !DILocation(line: 537, column: 5, scope: !2958, inlinedAt: !2988)
!2991 = !DILocation(line: 333, column: 23, scope: !2882)
!2992 = !DILocation(line: 593, column: 29, scope: !2952, inlinedAt: !2993)
!2993 = distinct !DILocation(line: 537, column: 24, scope: !2958, inlinedAt: !2994)
!2994 = distinct !DILocation(line: 334, column: 21, scope: !2884)
!2995 = !DILocation(line: 599, column: 14, scope: !2952, inlinedAt: !2993)
!2996 = !DILocation(line: 537, column: 5, scope: !2958, inlinedAt: !2994)
!2997 = !DILocation(line: 334, column: 21, scope: !2884)
!2998 = !DILocation(line: 315, column: 6, scope: !2972, inlinedAt: !2999)
!2999 = distinct !DILocation(line: 335, column: 26, scope: !2886)
!3000 = !DILocation(line: 335, column: 25, scope: !2886)
!3001 = !DILocation(line: 348, column: 5, scope: !2888)
!3002 = !DILocation(line: 351, column: 29, scope: !2888)
!3003 = !DILocation(line: 351, column: 32, scope: !2888)
!3004 = !DILocation(line: 351, column: 23, scope: !2888)
!3005 = !DILocation(line: 351, column: 13, scope: !2890)
!3006 = !DILocation(line: 353, column: 12, scope: !2890)
!3007 = !DILocation(line: 377, column: 12, scope: !2890)
!3008 = !DILocation(line: 377, column: 23, scope: !2890)
!3009 = !DILocation(line: 355, column: 33, scope: !2890)
!3010 = !DILocation(line: 355, column: 36, scope: !2890)
!3011 = !DILocation(line: 355, column: 27, scope: !2890)
!3012 = !DILocation(line: 356, column: 16, scope: !2892)
!3013 = !DILocation(line: 356, column: 26, scope: !2892)
!3014 = !DILocation(line: 356, column: 35, scope: !2892)
!3015 = !DILocation(line: 356, column: 45, scope: !2892)
!3016 = !DILocation(line: 362, column: 16, scope: !2892)
!3017 = !DILocation(line: 362, column: 26, scope: !2892)
!3018 = !DILocation(line: 357, column: 17, scope: !2892)
!3019 = !DILocation(line: 356, column: 13, scope: !2892)
!3020 = !DILocation(line: 364, column: 23, scope: !2892)
!3021 = !DILocation(line: 364, column: 33, scope: !2892)
!3022 = !DILocation(line: 363, column: 27, scope: !2892)
!3023 = !DILocation(line: 363, column: 17, scope: !2892)
!3024 = !DILocation(line: 362, column: 13, scope: !2892)
!3025 = !DILocation(line: 373, column: 27, scope: !2892)
!3026 = !DILocation(line: 370, column: 27, scope: !2892)
!3027 = !DILocation(line: 370, column: 17, scope: !2892)
!3028 = !DILocation(line: 371, column: 27, scope: !2892)
!3029 = !DILocation(line: 371, column: 33, scope: !2892)
!3030 = !DILocation(line: 365, column: 27, scope: !2892)
!3031 = !DILocation(line: 365, column: 17, scope: !2892)
!3032 = !DILocation(line: 364, column: 20, scope: !2892)
!3033 = !DILocation(line: 371, column: 17, scope: !2892)
!3034 = !DILocation(line: 373, column: 47, scope: !2892)
!3035 = !DILocation(line: 373, column: 13, scope: !2892)
!3036 = !DILocation(line: 374, column: 33, scope: !2892)
!3037 = !DILocation(line: 374, column: 36, scope: !2892)
!3038 = !DILocation(line: 374, column: 27, scope: !2892)
!3039 = !DILocation(line: 374, column: 42, scope: !2892)
!3040 = !DILocation(line: 374, column: 52, scope: !2892)
!3041 = !DILocation(line: 374, column: 13, scope: !2892)
!3042 = !DILocation(line: 403, column: 12, scope: !2890)
!3043 = !DILocation(line: 403, column: 23, scope: !2890)
!3044 = !DILocalVariable(name: "this", arg: 1, scope: !3045, file: !1411, line: 1012, type: !3048)
!3045 = distinct !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17ha8334701703430ffE", scope: !2870, file: !1411, line: 1012, type: !3046, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !3053)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{!1160, !3048}
!3048 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !3049, templateParams: !24, identifier: "6b86f45111c3f5c8817f06706b8ee833")
!3049 = !{!3050, !3052}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3048, file: !2, baseType: !3051, size: 64, align: 64)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64, align: 64, dwarfAddressSpace: 0)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3048, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3053 = !{!3044}
!3054 = !DILocation(line: 1012, column: 35, scope: !3045, inlinedAt: !3055)
!3055 = distinct !DILocation(line: 379, column: 23, scope: !2890)
!3056 = !DILocalVariable(name: "self", arg: 1, scope: !3057, file: !1966, line: 506, type: !3048)
!3057 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17he2d2a89beee74789E", scope: !1109, file: !1966, line: 506, type: !3058, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3062, retainedNodes: !3061)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{!3060, !3048}
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !2870, size: 64, align: 64, dwarfAddressSpace: 0)
!3061 = !{!3056}
!3062 = !{!3063}
!3063 = !DITemplateTypeParameter(name: "T", type: !2870)
!3064 = !DILocation(line: 506, column: 29, scope: !3057, inlinedAt: !3065)
!3065 = distinct !DILocation(line: 1013, column: 9, scope: !3045, inlinedAt: !3055)
!3066 = !DILocation(line: 379, column: 13, scope: !2890)
!3067 = !DILocation(line: 380, column: 21, scope: !2890)
!3068 = !DILocation(line: 380, column: 13, scope: !2890)
!3069 = !DILocation(line: 381, column: 28, scope: !2890)
!3070 = !DILocation(line: 383, column: 25, scope: !2894)
!3071 = !DILocation(line: 383, column: 22, scope: !2894)
!3072 = !DILocation(line: 383, column: 13, scope: !2896)
!3073 = !DILocation(line: 383, column: 17, scope: !2896)
!3074 = !DILocation(line: 383, column: 17, scope: !2898)
!3075 = !DILocation(line: 396, column: 21, scope: !2898)
!3076 = !DILocation(line: 397, column: 29, scope: !2898)
!3077 = !DILocation(line: 397, column: 48, scope: !2898)
!3078 = !DILocation(line: 397, column: 40, scope: !2898)
!3079 = !DILocation(line: 397, column: 39, scope: !2898)
!3080 = !DILocalVariable(name: "self", arg: 1, scope: !3081, file: !271, line: 1015, type: !1160)
!3081 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha6d825aa1fccbf64E", scope: !293, file: !271, line: 1015, type: !3082, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !3084)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!1160, !1160, !9}
!3084 = !{!3080, !3085}
!3085 = !DILocalVariable(name: "count", arg: 2, scope: !3081, file: !271, line: 1015, type: !9)
!3086 = !DILocation(line: 1015, column: 29, scope: !3081, inlinedAt: !3087)
!3087 = distinct !DILocation(line: 397, column: 29, scope: !2898)
!3088 = !DILocation(line: 1015, column: 35, scope: !3081, inlinedAt: !3087)
!3089 = !DILocalVariable(name: "self", arg: 1, scope: !3090, file: !271, line: 472, type: !1160)
!3090 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h432f60fccb3b8233E", scope: !293, file: !271, line: 472, type: !3091, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !3093)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!1160, !1160, !231}
!3093 = !{!3089, !3094}
!3094 = !DILocalVariable(name: "count", arg: 2, scope: !3090, file: !271, line: 472, type: !231)
!3095 = !DILocation(line: 472, column: 32, scope: !3090, inlinedAt: !3096)
!3096 = distinct !DILocation(line: 1020, column: 18, scope: !3081, inlinedAt: !3087)
!3097 = !DILocation(line: 472, column: 38, scope: !3090, inlinedAt: !3096)
!3098 = !DILocation(line: 479, column: 18, scope: !3090, inlinedAt: !3096)
!3099 = !DILocation(line: 397, column: 21, scope: !2898)
!3100 = !DILocation(line: 398, column: 28, scope: !2898)
!3101 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !3102)
!3102 = distinct !DILocation(line: 398, column: 28, scope: !2898)
!3103 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !3102)
!3104 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3105)
!3105 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !3102)
!3106 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3105)
!3107 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3105)
!3108 = !DILocation(line: 398, column: 21, scope: !2898)
!3109 = !DILocation(line: 431, column: 36, scope: !2890)
!3110 = !DILocation(line: 431, column: 45, scope: !2890)
!3111 = !DILocation(line: 431, column: 30, scope: !2890)
!3112 = !DILocation(line: 431, column: 59, scope: !2890)
!3113 = !DILocation(line: 431, column: 68, scope: !2890)
!3114 = !DILocation(line: 431, column: 53, scope: !2890)
!3115 = !DILocation(line: 431, column: 21, scope: !2890)
!3116 = !DILocation(line: 431, column: 13, scope: !2906)
!3117 = !DILocation(line: 433, column: 12, scope: !2906)
!3118 = !DILocation(line: 1012, column: 35, scope: !3045, inlinedAt: !3119)
!3119 = distinct !DILocation(line: 405, column: 23, scope: !2890)
!3120 = !DILocation(line: 506, column: 29, scope: !3057, inlinedAt: !3121)
!3121 = distinct !DILocation(line: 1013, column: 9, scope: !3045, inlinedAt: !3119)
!3122 = !DILocation(line: 405, column: 13, scope: !2890)
!3123 = !DILocation(line: 406, column: 21, scope: !2890)
!3124 = !DILocation(line: 406, column: 13, scope: !2890)
!3125 = !DILocation(line: 407, column: 28, scope: !2890)
!3126 = !DILocation(line: 409, column: 25, scope: !2900)
!3127 = !DILocation(line: 409, column: 22, scope: !2900)
!3128 = !DILocation(line: 409, column: 13, scope: !2902)
!3129 = !DILocation(line: 409, column: 17, scope: !2902)
!3130 = !DILocation(line: 409, column: 17, scope: !2904)
!3131 = !DILocation(line: 423, column: 28, scope: !2904)
!3132 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !3133)
!3133 = distinct !DILocation(line: 423, column: 28, scope: !2904)
!3134 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !3133)
!3135 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3136)
!3136 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !3133)
!3137 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3138)
!3138 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3136)
!3139 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3138)
!3140 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3141)
!3141 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !3133)
!3142 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3141)
!3143 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3141)
!3144 = !DILocation(line: 423, column: 21, scope: !2904)
!3145 = !DILocation(line: 424, column: 21, scope: !2904)
!3146 = !DILocation(line: 425, column: 29, scope: !2904)
!3147 = !DILocation(line: 425, column: 47, scope: !2904)
!3148 = !DILocation(line: 425, column: 39, scope: !2904)
!3149 = !DILocation(line: 1015, column: 29, scope: !3081, inlinedAt: !3150)
!3150 = distinct !DILocation(line: 425, column: 29, scope: !2904)
!3151 = !DILocation(line: 1015, column: 35, scope: !3081, inlinedAt: !3150)
!3152 = !DILocation(line: 472, column: 32, scope: !3090, inlinedAt: !3153)
!3153 = distinct !DILocation(line: 1020, column: 18, scope: !3081, inlinedAt: !3150)
!3154 = !DILocation(line: 472, column: 38, scope: !3090, inlinedAt: !3153)
!3155 = !DILocation(line: 479, column: 18, scope: !3090, inlinedAt: !3153)
!3156 = !DILocation(line: 425, column: 21, scope: !2904)
!3157 = !DILocation(line: 482, column: 12, scope: !2906)
!3158 = !DILocation(line: 482, column: 23, scope: !2906)
!3159 = !DILocation(line: 465, column: 37, scope: !2906)
!3160 = !DILocalVariable(name: "small", arg: 1, scope: !3161, file: !3162, line: 53, type: !123)
!3161 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h357b3800386ad61dE", scope: !3163, file: !3162, line: 53, type: !3166, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3168)
!3162 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "a4a9b089b86ec74888517cdccbe35dbc")
!3163 = !DINamespace(name: "{impl#44}", scope: !3164)
!3164 = !DINamespace(name: "num", scope: !3165)
!3165 = !DINamespace(name: "convert", scope: !143)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!9, !123}
!3168 = !{!3160}
!3169 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3170)
!3170 = distinct !DILocation(line: 465, column: 37, scope: !2906)
!3171 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3170)
!3172 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !3173)
!3173 = distinct !DILocation(line: 465, column: 37, scope: !2906)
!3174 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !3173)
!3175 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3176)
!3176 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !3173)
!3177 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3176)
!3178 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3176)
!3179 = !DILocation(line: 465, column: 27, scope: !2906)
!3180 = !DILocation(line: 466, column: 42, scope: !2908)
!3181 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3182)
!3182 = distinct !DILocation(line: 466, column: 42, scope: !2908)
!3183 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3182)
!3184 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !3185)
!3185 = distinct !DILocation(line: 466, column: 42, scope: !2908)
!3186 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !3185)
!3187 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3188)
!3188 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !3185)
!3189 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3190)
!3190 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3188)
!3191 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3190)
!3192 = !DILocation(line: 1179, column: 13, scope: !2169, inlinedAt: !3190)
!3193 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3194)
!3194 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !3185)
!3195 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3194)
!3196 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3194)
!3197 = !DILocation(line: 466, column: 52, scope: !2908)
!3198 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3199)
!3199 = distinct !DILocation(line: 466, column: 52, scope: !2908)
!3200 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3199)
!3201 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !3202)
!3202 = distinct !DILocation(line: 466, column: 52, scope: !2908)
!3203 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !3202)
!3204 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3205)
!3205 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !3202)
!3206 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3205)
!3207 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3205)
!3208 = !DILocation(line: 466, column: 17, scope: !2908)
!3209 = !DILocation(line: 468, column: 26, scope: !2908)
!3210 = !DILocation(line: 468, column: 17, scope: !2910)
!3211 = !DILocation(line: 475, column: 48, scope: !2908)
!3212 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3213)
!3213 = distinct !DILocation(line: 475, column: 48, scope: !2908)
!3214 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3213)
!3215 = !DILocation(line: 469, column: 31, scope: !2910)
!3216 = !DILocation(line: 1015, column: 29, scope: !3081, inlinedAt: !3217)
!3217 = distinct !DILocation(line: 469, column: 31, scope: !2910)
!3218 = !DILocation(line: 1015, column: 35, scope: !3081, inlinedAt: !3217)
!3219 = !DILocation(line: 472, column: 32, scope: !3090, inlinedAt: !3220)
!3220 = distinct !DILocation(line: 1020, column: 18, scope: !3081, inlinedAt: !3217)
!3221 = !DILocation(line: 472, column: 38, scope: !3090, inlinedAt: !3220)
!3222 = !DILocation(line: 479, column: 18, scope: !3090, inlinedAt: !3220)
!3223 = !DILocation(line: 469, column: 21, scope: !2910)
!3224 = !DILocation(line: 470, column: 46, scope: !2910)
!3225 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3226)
!3226 = distinct !DILocation(line: 470, column: 46, scope: !2910)
!3227 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3226)
!3228 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !3229)
!3229 = distinct !DILocation(line: 470, column: 46, scope: !2910)
!3230 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !3229)
!3231 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3232)
!3232 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !3229)
!3233 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3232)
!3234 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3232)
!3235 = !DILocation(line: 470, column: 55, scope: !2910)
!3236 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3237)
!3237 = distinct !DILocation(line: 470, column: 55, scope: !2910)
!3238 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3237)
!3239 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !3240)
!3240 = distinct !DILocation(line: 470, column: 55, scope: !2910)
!3241 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !3240)
!3242 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3243)
!3243 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !3240)
!3244 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3245)
!3245 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3243)
!3246 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3245)
!3247 = !DILocation(line: 1179, column: 13, scope: !2169, inlinedAt: !3245)
!3248 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3249)
!3249 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !3240)
!3250 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3249)
!3251 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3249)
!3252 = !DILocation(line: 470, column: 21, scope: !2910)
!3253 = !DILocation(line: 471, column: 31, scope: !2910)
!3254 = !DILocation(line: 1015, column: 29, scope: !3081, inlinedAt: !3255)
!3255 = distinct !DILocation(line: 471, column: 31, scope: !2910)
!3256 = !DILocation(line: 1015, column: 35, scope: !3081, inlinedAt: !3255)
!3257 = !DILocation(line: 472, column: 32, scope: !3090, inlinedAt: !3258)
!3258 = distinct !DILocation(line: 1020, column: 18, scope: !3081, inlinedAt: !3255)
!3259 = !DILocation(line: 472, column: 38, scope: !3090, inlinedAt: !3258)
!3260 = !DILocation(line: 479, column: 18, scope: !3090, inlinedAt: !3258)
!3261 = !DILocation(line: 471, column: 21, scope: !2910)
!3262 = !DILocation(line: 472, column: 46, scope: !2910)
!3263 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3264)
!3264 = distinct !DILocation(line: 472, column: 46, scope: !2910)
!3265 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3264)
!3266 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !3267)
!3267 = distinct !DILocation(line: 472, column: 46, scope: !2910)
!3268 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !3267)
!3269 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3270)
!3270 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !3267)
!3271 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3272)
!3272 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3270)
!3273 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3272)
!3274 = !DILocation(line: 1179, column: 13, scope: !2169, inlinedAt: !3272)
!3275 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3276)
!3276 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !3267)
!3277 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3276)
!3278 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3276)
!3279 = !DILocation(line: 472, column: 56, scope: !2910)
!3280 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3281)
!3281 = distinct !DILocation(line: 472, column: 56, scope: !2910)
!3282 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3281)
!3283 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !3284)
!3284 = distinct !DILocation(line: 472, column: 56, scope: !2910)
!3285 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !3284)
!3286 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3287)
!3287 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !3284)
!3288 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3287)
!3289 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3287)
!3290 = !DILocation(line: 472, column: 21, scope: !2910)
!3291 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !3292)
!3292 = distinct !DILocation(line: 475, column: 48, scope: !2908)
!3293 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !3292)
!3294 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3295)
!3295 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !3292)
!3296 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3297)
!3297 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3295)
!3298 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3297)
!3299 = !DILocation(line: 1179, column: 13, scope: !2169, inlinedAt: !3297)
!3300 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3301)
!3301 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !3292)
!3302 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3301)
!3303 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3301)
!3304 = !DILocation(line: 475, column: 17, scope: !2908)
!3305 = !DILocation(line: 476, column: 29, scope: !2908)
!3306 = !DILocation(line: 476, column: 17, scope: !2908)
!3307 = !DILocation(line: 477, column: 27, scope: !2908)
!3308 = !DILocation(line: 1015, column: 29, scope: !3081, inlinedAt: !3309)
!3309 = distinct !DILocation(line: 477, column: 27, scope: !2908)
!3310 = !DILocation(line: 1015, column: 35, scope: !3081, inlinedAt: !3309)
!3311 = !DILocation(line: 472, column: 32, scope: !3090, inlinedAt: !3312)
!3312 = distinct !DILocation(line: 1020, column: 18, scope: !3081, inlinedAt: !3309)
!3313 = !DILocation(line: 472, column: 38, scope: !3090, inlinedAt: !3312)
!3314 = !DILocation(line: 479, column: 18, scope: !3090, inlinedAt: !3312)
!3315 = !DILocation(line: 477, column: 17, scope: !2908)
!3316 = !DILocation(line: 478, column: 27, scope: !2908)
!3317 = !DILocation(line: 1015, column: 29, scope: !3081, inlinedAt: !3318)
!3318 = distinct !DILocation(line: 478, column: 27, scope: !2908)
!3319 = !DILocation(line: 1015, column: 35, scope: !3081, inlinedAt: !3318)
!3320 = !DILocation(line: 472, column: 32, scope: !3090, inlinedAt: !3321)
!3321 = distinct !DILocation(line: 1020, column: 18, scope: !3081, inlinedAt: !3318)
!3322 = !DILocation(line: 472, column: 38, scope: !3090, inlinedAt: !3321)
!3323 = !DILocation(line: 479, column: 18, scope: !3090, inlinedAt: !3321)
!3324 = !DILocation(line: 478, column: 17, scope: !2908)
!3325 = !DILocation(line: 433, column: 9, scope: !2906)
!3326 = !DILocation(line: 494, column: 12, scope: !2906)
!3327 = !DILocation(line: 494, column: 23, scope: !2906)
!3328 = !DILocation(line: 491, column: 26, scope: !2906)
!3329 = !DILocation(line: 491, column: 32, scope: !2906)
!3330 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !3331)
!3331 = distinct !DILocation(line: 491, column: 26, scope: !2906)
!3332 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !3331)
!3333 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3334)
!3334 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !3331)
!3335 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3334)
!3336 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3334)
!3337 = !DILocation(line: 491, column: 13, scope: !2906)
!3338 = !DILocation(line: 482, column: 9, scope: !2906)
!3339 = !DILocation(line: 502, column: 12, scope: !2906)
!3340 = !DILocation(line: 499, column: 26, scope: !2906)
!3341 = !DILocation(line: 499, column: 32, scope: !2906)
!3342 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !3343)
!3343 = distinct !DILocation(line: 499, column: 26, scope: !2906)
!3344 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !3343)
!3345 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3346)
!3346 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !3343)
!3347 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3348)
!3348 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3346)
!3349 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3348)
!3350 = !DILocation(line: 1179, column: 13, scope: !2169, inlinedAt: !3348)
!3351 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3352)
!3352 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !3343)
!3353 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3352)
!3354 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3352)
!3355 = !DILocation(line: 499, column: 13, scope: !2906)
!3356 = !DILocation(line: 494, column: 9, scope: !2906)
!3357 = !DILocation(line: 511, column: 8, scope: !2888)
!3358 = !DILocation(line: 511, column: 18, scope: !2888)
!3359 = !DILocation(line: 534, column: 15, scope: !2888)
!3360 = !DILocation(line: 534, column: 25, scope: !2888)
!3361 = !DILocation(line: 514, column: 32, scope: !2888)
!3362 = !DILocation(line: 514, column: 35, scope: !2888)
!3363 = !DILocation(line: 514, column: 26, scope: !2888)
!3364 = !DILocation(line: 514, column: 9, scope: !2888)
!3365 = !DILocation(line: 514, column: 9, scope: !2912)
!3366 = !DILocation(line: 515, column: 15, scope: !2888)
!3367 = !DILocation(line: 515, column: 25, scope: !2888)
!3368 = !DILocation(line: 514, column: 9, scope: !2918)
!3369 = !DILocation(line: 506, column: 29, scope: !2011, inlinedAt: !3370)
!3370 = distinct !DILocation(line: 533, column: 15, scope: !2888)
!3371 = !DILocation(line: 533, column: 31, scope: !2888)
!3372 = !DILocation(line: 533, column: 9, scope: !2888)
!3373 = !DILocation(line: 528, column: 25, scope: !2888)
!3374 = !DILocalVariable(name: "self", arg: 1, scope: !3375, file: !271, line: 1098, type: !1160)
!3375 = distinct !DISubprogram(name: "sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h6f115b2afa039609E", scope: !293, file: !271, line: 1098, type: !3082, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !3376)
!3376 = !{!3374, !3377}
!3377 = !DILocalVariable(name: "count", arg: 2, scope: !3375, file: !271, line: 1098, type: !9)
!3378 = !DILocation(line: 1098, column: 29, scope: !3375, inlinedAt: !3379)
!3379 = distinct !DILocation(line: 528, column: 25, scope: !2888)
!3380 = !DILocation(line: 1098, column: 35, scope: !3375, inlinedAt: !3379)
!3381 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3382)
!3382 = distinct !DILocation(line: 1103, column: 30, scope: !3375, inlinedAt: !3379)
!3383 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3384)
!3384 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3382)
!3385 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3384)
!3386 = !DILocation(line: 472, column: 32, scope: !3090, inlinedAt: !3387)
!3387 = distinct !DILocation(line: 1103, column: 18, scope: !3375, inlinedAt: !3379)
!3388 = !DILocation(line: 472, column: 38, scope: !3090, inlinedAt: !3387)
!3389 = !DILocation(line: 479, column: 18, scope: !3090, inlinedAt: !3387)
!3390 = !DILocation(line: 528, column: 17, scope: !2888)
!3391 = !DILocation(line: 529, column: 27, scope: !2888)
!3392 = !DILocation(line: 529, column: 45, scope: !2888)
!3393 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3394)
!3394 = distinct !DILocation(line: 529, column: 33, scope: !2888)
!3395 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3394)
!3396 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !3397)
!3397 = distinct !DILocation(line: 529, column: 27, scope: !2888)
!3398 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !3397)
!3399 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3400)
!3400 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !3397)
!3401 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3400)
!3402 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3400)
!3403 = !DILocation(line: 529, column: 55, scope: !2888)
!3404 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !3405)
!3405 = distinct !DILocation(line: 529, column: 55, scope: !2888)
!3406 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !3405)
!3407 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3408)
!3408 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !3405)
!3409 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3410)
!3410 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3408)
!3411 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3410)
!3412 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3413)
!3413 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !3405)
!3414 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3413)
!3415 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3413)
!3416 = !DILocation(line: 529, column: 17, scope: !2888)
!3417 = !DILocation(line: 530, column: 21, scope: !2888)
!3418 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !3419)
!3419 = distinct !DILocation(line: 530, column: 21, scope: !2888)
!3420 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !3419)
!3421 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3422)
!3422 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !3419)
!3423 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3424)
!3424 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3422)
!3425 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3424)
!3426 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3427)
!3427 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !3419)
!3428 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3427)
!3429 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3427)
!3430 = !DILocation(line: 530, column: 17, scope: !2888)
!3431 = !DILocation(line: 515, column: 9, scope: !2888)
!3432 = !DILocation(line: 551, column: 2, scope: !2852)
!3433 = !DILocation(line: 506, column: 29, scope: !2011, inlinedAt: !3434)
!3434 = distinct !DILocation(line: 549, column: 15, scope: !2888)
!3435 = !DILocation(line: 549, column: 31, scope: !2888)
!3436 = !DILocation(line: 549, column: 9, scope: !2888)
!3437 = !DILocation(line: 537, column: 32, scope: !2888)
!3438 = !DILocation(line: 537, column: 35, scope: !2888)
!3439 = !DILocation(line: 537, column: 26, scope: !2888)
!3440 = !DILocation(line: 537, column: 9, scope: !2888)
!3441 = !DILocation(line: 537, column: 9, scope: !2921)
!3442 = !DILocation(line: 538, column: 15, scope: !2888)
!3443 = !DILocation(line: 538, column: 25, scope: !2888)
!3444 = !DILocation(line: 537, column: 9, scope: !2925)
!3445 = !DILocation(line: 506, column: 29, scope: !2011, inlinedAt: !3446)
!3446 = distinct !DILocation(line: 546, column: 15, scope: !2888)
!3447 = !DILocation(line: 546, column: 31, scope: !2888)
!3448 = !DILocation(line: 546, column: 9, scope: !2888)
!3449 = !DILocation(line: 541, column: 25, scope: !2888)
!3450 = !DILocation(line: 1098, column: 29, scope: !3375, inlinedAt: !3451)
!3451 = distinct !DILocation(line: 541, column: 25, scope: !2888)
!3452 = !DILocation(line: 1098, column: 35, scope: !3375, inlinedAt: !3451)
!3453 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3454)
!3454 = distinct !DILocation(line: 1103, column: 30, scope: !3375, inlinedAt: !3451)
!3455 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3456)
!3456 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3454)
!3457 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3456)
!3458 = !DILocation(line: 472, column: 32, scope: !3090, inlinedAt: !3459)
!3459 = distinct !DILocation(line: 1103, column: 18, scope: !3375, inlinedAt: !3451)
!3460 = !DILocation(line: 472, column: 38, scope: !3090, inlinedAt: !3459)
!3461 = !DILocation(line: 479, column: 18, scope: !3090, inlinedAt: !3459)
!3462 = !DILocation(line: 541, column: 17, scope: !2888)
!3463 = !DILocation(line: 542, column: 27, scope: !2888)
!3464 = !DILocation(line: 542, column: 30, scope: !2888)
!3465 = !DILocation(line: 542, column: 48, scope: !2888)
!3466 = !DILocation(line: 53, column: 21, scope: !3161, inlinedAt: !3467)
!3467 = distinct !DILocation(line: 542, column: 36, scope: !2888)
!3468 = !DILocation(line: 54, column: 17, scope: !3161, inlinedAt: !3467)
!3469 = !DILocation(line: 542, column: 36, scope: !2888)
!3470 = !DILocation(line: 1098, column: 29, scope: !2153, inlinedAt: !3471)
!3471 = distinct !DILocation(line: 542, column: 30, scope: !2888)
!3472 = !DILocation(line: 1098, column: 35, scope: !2153, inlinedAt: !3471)
!3473 = !DILocation(line: 1353, column: 35, scope: !2160, inlinedAt: !3474)
!3474 = distinct !DILocation(line: 1103, column: 30, scope: !2153, inlinedAt: !3471)
!3475 = !DILocation(line: 1178, column: 35, scope: !2169, inlinedAt: !3476)
!3476 = distinct !DILocation(line: 1354, column: 13, scope: !2160, inlinedAt: !3474)
!3477 = !DILocation(line: 1178, column: 41, scope: !2169, inlinedAt: !3476)
!3478 = !DILocation(line: 1179, column: 13, scope: !2169, inlinedAt: !3476)
!3479 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3480)
!3480 = distinct !DILocation(line: 1103, column: 18, scope: !2153, inlinedAt: !3471)
!3481 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3480)
!3482 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3480)
!3483 = !DILocation(line: 542, column: 17, scope: !2888)
!3484 = !DILocation(line: 543, column: 21, scope: !2888)
!3485 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !3486)
!3486 = distinct !DILocation(line: 543, column: 21, scope: !2888)
!3487 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !3486)
!3488 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !3489)
!3489 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !3486)
!3490 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !3489)
!3491 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !3489)
!3492 = !DILocation(line: 543, column: 17, scope: !2888)
!3493 = !DILocation(line: 538, column: 9, scope: !2888)
!3494 = distinct !DISubprogram(name: "width<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h56ce5da82a17cba0E", scope: !3495, file: !2331, line: 341, type: !3496, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !3498)
!3495 = !DINamespace(name: "partition_in_blocks", scope: !1136)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!9, !287, !287}
!3498 = !{!3499, !3500}
!3499 = !DILocalVariable(name: "l", arg: 1, scope: !3494, file: !2331, line: 341, type: !287)
!3500 = !DILocalVariable(name: "r", arg: 2, scope: !3494, file: !2331, line: 341, type: !287)
!3501 = !DILocation(line: 341, column: 17, scope: !3494)
!3502 = !DILocation(line: 341, column: 28, scope: !3494)
!3503 = !DILocation(line: 342, column: 17, scope: !3494)
!3504 = !DILocation(line: 342, column: 9, scope: !3494)
!3505 = !DILocalVariable(name: "self", arg: 1, scope: !3506, file: !271, line: 209, type: !287)
!3506 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h914b021d9341ed77E", scope: !293, file: !271, line: 209, type: !3507, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !3509)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!9, !287}
!3509 = !{!3505}
!3510 = !DILocation(line: 209, column: 17, scope: !3506, inlinedAt: !3511)
!3511 = distinct !DILocation(line: 345, column: 10, scope: !3494)
!3512 = !DILocation(line: 57, column: 26, scope: !1271, inlinedAt: !3513)
!3513 = distinct !DILocation(line: 213, column: 33, scope: !3506, inlinedAt: !3511)
!3514 = !DILocation(line: 213, column: 18, scope: !3506, inlinedAt: !3511)
!3515 = !DILocation(line: 209, column: 17, scope: !3506, inlinedAt: !3516)
!3516 = distinct !DILocation(line: 345, column: 21, scope: !3494)
!3517 = !DILocation(line: 57, column: 26, scope: !1271, inlinedAt: !3518)
!3518 = distinct !DILocation(line: 213, column: 33, scope: !3506, inlinedAt: !3516)
!3519 = !DILocation(line: 213, column: 18, scope: !3506, inlinedAt: !3516)
!3520 = !DILocation(line: 345, column: 9, scope: !3494)
!3521 = !DILocation(line: 346, column: 6, scope: !3494)
!3522 = distinct !DISubprogram(name: "width<u8>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17hf99af2bf0ac83c36E", scope: !3495, file: !2331, line: 341, type: !3523, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1653, retainedNodes: !3525)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{!9, !1160, !1160}
!3525 = !{!3526, !3527}
!3526 = !DILocalVariable(name: "l", arg: 1, scope: !3522, file: !2331, line: 341, type: !1160)
!3527 = !DILocalVariable(name: "r", arg: 2, scope: !3522, file: !2331, line: 341, type: !1160)
!3528 = !DILocation(line: 341, column: 17, scope: !3522)
!3529 = !DILocation(line: 341, column: 28, scope: !3522)
!3530 = !DILocation(line: 342, column: 17, scope: !3522)
!3531 = !DILocation(line: 342, column: 9, scope: !3522)
!3532 = !DILocation(line: 209, column: 17, scope: !1649, inlinedAt: !3533)
!3533 = distinct !DILocation(line: 345, column: 10, scope: !3522)
!3534 = !DILocation(line: 57, column: 26, scope: !1658, inlinedAt: !3535)
!3535 = distinct !DILocation(line: 213, column: 33, scope: !1649, inlinedAt: !3533)
!3536 = !DILocation(line: 213, column: 18, scope: !1649, inlinedAt: !3533)
!3537 = !DILocation(line: 209, column: 17, scope: !1649, inlinedAt: !3538)
!3538 = distinct !DILocation(line: 345, column: 21, scope: !3522)
!3539 = !DILocation(line: 57, column: 26, scope: !1658, inlinedAt: !3540)
!3540 = distinct !DILocation(line: 213, column: 33, scope: !1649, inlinedAt: !3538)
!3541 = !DILocation(line: 213, column: 18, scope: !1649, inlinedAt: !3538)
!3542 = !DILocation(line: 345, column: 9, scope: !3522)
!3543 = !DILocation(line: 346, column: 6, scope: !3522)
!3544 = distinct !DISubprogram(name: "partial_insertion_sort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort22partial_insertion_sort17hf9aa677a9fb85ed8E", scope: !1136, file: !2331, line: 198, type: !3545, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !3547)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!415, !348, !1106}
!3547 = !{!3548, !3549, !3550, !3552, !3554}
!3548 = !DILocalVariable(name: "v", arg: 1, scope: !3544, file: !2331, line: 198, type: !348)
!3549 = !DILocalVariable(name: "is_less", arg: 2, scope: !3544, file: !2331, line: 198, type: !1106)
!3550 = !DILocalVariable(name: "len", scope: !3551, file: !2331, line: 207, type: !9, align: 8)
!3551 = distinct !DILexicalBlock(scope: !3544, file: !2331, line: 207, column: 5)
!3552 = !DILocalVariable(name: "i", scope: !3553, file: !2331, line: 208, type: !9, align: 8)
!3553 = distinct !DILexicalBlock(scope: !3551, file: !2331, line: 208, column: 5)
!3554 = !DILocalVariable(name: "iter", scope: !3555, file: !2331, line: 210, type: !175, align: 8)
!3555 = distinct !DILexicalBlock(scope: !3553, file: !2331, line: 210, column: 5)
!3556 = !DILocation(line: 198, column: 33, scope: !3544)
!3557 = !DILocation(line: 198, column: 46, scope: !3544)
!3558 = !DILocation(line: 208, column: 9, scope: !3553)
!3559 = !DILocation(line: 210, column: 14, scope: !3555)
!3560 = !DILocation(line: 207, column: 15, scope: !3544)
!3561 = !DILocation(line: 207, column: 9, scope: !3551)
!3562 = !DILocation(line: 208, column: 17, scope: !3551)
!3563 = !DILocation(line: 210, column: 14, scope: !3553)
!3564 = !DILocation(line: 210, column: 5, scope: !3555)
!3565 = !DILocation(line: 243, column: 5, scope: !3553)
!3566 = !DILocation(line: 244, column: 2, scope: !3544)
!3567 = !DILocation(line: 215, column: 19, scope: !3555)
!3568 = !DILocation(line: 215, column: 55, scope: !3555)
!3569 = !DILocation(line: 215, column: 39, scope: !3555)
!3570 = !DILocation(line: 215, column: 75, scope: !3555)
!3571 = !DILocation(line: 215, column: 59, scope: !3555)
!3572 = !DILocation(line: 215, column: 31, scope: !3555)
!3573 = !DILocation(line: 215, column: 30, scope: !3555)
!3574 = !DILocation(line: 221, column: 12, scope: !3555)
!3575 = !DILocation(line: 216, column: 17, scope: !3555)
!3576 = !DILocation(line: 215, column: 13, scope: !3555)
!3577 = !DILocation(line: 226, column: 12, scope: !3555)
!3578 = !DILocation(line: 222, column: 20, scope: !3555)
!3579 = !DILocation(line: 1, column: 1, scope: !3580)
!3580 = !DILexicalBlockFile(scope: !3555, file: !3581, discriminator: 0)
!3581 = !DIFile(filename: "src/lib.rs", directory: "/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "ef3e180ca1e13bae3e0904cdd600c8e7")
!3582 = !DILocation(line: 231, column: 16, scope: !3555)
!3583 = !DILocation(line: 227, column: 20, scope: !3555)
!3584 = !DILocation(line: 231, column: 23, scope: !3555)
!3585 = !DILocation(line: 231, column: 9, scope: !3555)
!3586 = !DILocation(line: 233, column: 12, scope: !3555)
!3587 = !DILocation(line: 235, column: 48, scope: !3555)
!3588 = !DILocation(line: 235, column: 46, scope: !3555)
!3589 = !DILocation(line: 235, column: 44, scope: !3555)
!3590 = !DILocation(line: 235, column: 52, scope: !3555)
!3591 = !DILocation(line: 235, column: 13, scope: !3555)
!3592 = !DILocation(line: 238, column: 49, scope: !3555)
!3593 = !DILocation(line: 238, column: 47, scope: !3555)
!3594 = !DILocation(line: 238, column: 45, scope: !3555)
!3595 = !DILocation(line: 238, column: 13, scope: !3555)
!3596 = distinct !DISubprogram(name: "insertion_sort_shift_left<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort25insertion_sort_shift_left17he2386a719bb72b7bE", scope: !1136, file: !2331, line: 148, type: !3597, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !3599)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{null, !348, !9, !1106}
!3599 = !{!3600, !3601, !3602, !3603, !3605, !3607}
!3600 = !DILocalVariable(name: "v", arg: 1, scope: !3596, file: !2331, line: 148, type: !348)
!3601 = !DILocalVariable(name: "offset", arg: 2, scope: !3596, file: !2331, line: 148, type: !9)
!3602 = !DILocalVariable(name: "is_less", arg: 3, scope: !3596, file: !2331, line: 148, type: !1106)
!3603 = !DILocalVariable(name: "len", scope: !3604, file: !2331, line: 152, type: !9, align: 8)
!3604 = distinct !DILexicalBlock(scope: !3596, file: !2331, line: 152, column: 5)
!3605 = !DILocalVariable(name: "iter", scope: !3606, file: !2331, line: 158, type: !175, align: 8)
!3606 = distinct !DILexicalBlock(scope: !3604, file: !2331, line: 158, column: 5)
!3607 = !DILocalVariable(name: "i", scope: !3608, file: !2331, line: 158, type: !9, align: 8)
!3608 = distinct !DILexicalBlock(scope: !3606, file: !2331, line: 158, column: 26)
!3609 = !DILocation(line: 148, column: 36, scope: !3596)
!3610 = !DILocation(line: 148, column: 49, scope: !3596)
!3611 = !DILocation(line: 148, column: 64, scope: !3596)
!3612 = !DILocation(line: 158, column: 14, scope: !3606)
!3613 = !DILocation(line: 152, column: 15, scope: !3596)
!3614 = !DILocation(line: 152, column: 9, scope: !3604)
!3615 = !DILocation(line: 155, column: 13, scope: !3604)
!3616 = !DILocation(line: 155, column: 28, scope: !3604)
!3617 = !DILocation(line: 155, column: 5, scope: !3604)
!3618 = !DILocation(line: 158, column: 14, scope: !3604)
!3619 = !DILocation(line: 158, column: 5, scope: !3606)
!3620 = !DILocation(line: 166, column: 2, scope: !3596)
!3621 = !DILocation(line: 158, column: 9, scope: !3606)
!3622 = !DILocation(line: 158, column: 9, scope: !3608)
!3623 = !DILocation(line: 163, column: 32, scope: !3608)
!3624 = !DILocation(line: 163, column: 30, scope: !3608)
!3625 = !DILocation(line: 163, column: 13, scope: !3608)
!3626 = distinct !DISubprogram(name: "insertion_sort_shift_right<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort26insertion_sort_shift_right17h315ae64e1829bebdE", scope: !1136, file: !2331, line: 173, type: !3597, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !3627)
!3627 = !{!3628, !3629, !3630, !3631, !3633, !3635}
!3628 = !DILocalVariable(name: "v", arg: 1, scope: !3626, file: !2331, line: 173, type: !348)
!3629 = !DILocalVariable(name: "offset", arg: 2, scope: !3626, file: !2331, line: 173, type: !9)
!3630 = !DILocalVariable(name: "is_less", arg: 3, scope: !3626, file: !2331, line: 173, type: !1106)
!3631 = !DILocalVariable(name: "len", scope: !3632, file: !2331, line: 177, type: !9, align: 8)
!3632 = distinct !DILexicalBlock(scope: !3626, file: !2331, line: 177, column: 5)
!3633 = !DILocalVariable(name: "iter", scope: !3634, file: !2331, line: 183, type: !2450, align: 8)
!3634 = distinct !DILexicalBlock(scope: !3632, file: !2331, line: 183, column: 5)
!3635 = !DILocalVariable(name: "i", scope: !3636, file: !2331, line: 183, type: !9, align: 8)
!3636 = distinct !DILexicalBlock(scope: !3634, file: !2331, line: 183, column: 32)
!3637 = !DILocation(line: 173, column: 37, scope: !3626)
!3638 = !DILocation(line: 173, column: 50, scope: !3626)
!3639 = !DILocation(line: 173, column: 65, scope: !3626)
!3640 = !DILocation(line: 183, column: 14, scope: !3634)
!3641 = !DILocation(line: 177, column: 15, scope: !3626)
!3642 = !DILocation(line: 177, column: 9, scope: !3632)
!3643 = !DILocation(line: 180, column: 13, scope: !3632)
!3644 = !DILocation(line: 180, column: 28, scope: !3632)
!3645 = !DILocation(line: 180, column: 45, scope: !3632)
!3646 = !DILocation(line: 180, column: 5, scope: !3632)
!3647 = !DILocation(line: 183, column: 14, scope: !3632)
!3648 = !DILocation(line: 183, column: 5, scope: !3634)
!3649 = !DILocation(line: 192, column: 2, scope: !3626)
!3650 = !DILocation(line: 183, column: 9, scope: !3634)
!3651 = !DILocation(line: 183, column: 9, scope: !3636)
!3652 = !DILocation(line: 189, column: 32, scope: !3636)
!3653 = !DILocation(line: 189, column: 30, scope: !3636)
!3654 = !DILocation(line: 189, column: 13, scope: !3636)
!3655 = distinct !DISubprogram(name: "recurse<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort7recurse17hf95552ee1c386416E", scope: !1136, file: !2331, line: 793, type: !3656, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !3669)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{null, !348, !1106, !3658, !27}
!3658 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !473, file: !2, size: 64, align: 64, elements: !3659, templateParams: !24, identifier: "7b4f62a274567461e4be84890121be21")
!3659 = !{!3660}
!3660 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3658, file: !2, size: 64, align: 64, elements: !3661, templateParams: !24, identifier: "d205facf7a3ae1b392cc61a1b706033a", discriminator: !3668)
!3661 = !{!3662, !3664}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3660, file: !2, baseType: !3663, size: 64, align: 64, extraData: i64 0)
!3663 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3658, file: !2, size: 64, align: 64, elements: !24, templateParams: !821, identifier: "4527f157ff5131d2914a992522212a00")
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3660, file: !2, baseType: !3665, size: 64, align: 64)
!3665 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3658, file: !2, size: 64, align: 64, elements: !3666, templateParams: !821, identifier: "27af4e01d8a27cfad88710a4738dafb2")
!3666 = !{!3667}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3665, file: !2, baseType: !12, size: 64, align: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, scope: !3658, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!3669 = !{!3670, !3671, !3672, !3673, !3674, !3676, !3678, !3680, !3682, !3683, !3685, !3687, !3689, !3690, !3692, !3693, !3695, !3696}
!3670 = !DILocalVariable(name: "v", arg: 1, scope: !3655, file: !2331, line: 793, type: !348)
!3671 = !DILocalVariable(name: "is_less", arg: 2, scope: !3655, file: !2331, line: 793, type: !1106)
!3672 = !DILocalVariable(name: "pred", arg: 3, scope: !3655, file: !2331, line: 793, type: !3658)
!3673 = !DILocalVariable(name: "limit", arg: 4, scope: !3655, file: !2331, line: 793, type: !27)
!3674 = !DILocalVariable(name: "was_balanced", scope: !3675, file: !2331, line: 801, type: !415, align: 1)
!3675 = distinct !DILexicalBlock(scope: !3655, file: !2331, line: 801, column: 5)
!3676 = !DILocalVariable(name: "was_partitioned", scope: !3677, file: !2331, line: 803, type: !415, align: 1)
!3677 = distinct !DILexicalBlock(scope: !3675, file: !2331, line: 803, column: 5)
!3678 = !DILocalVariable(name: "len", scope: !3679, file: !2331, line: 806, type: !9, align: 8)
!3679 = distinct !DILexicalBlock(scope: !3677, file: !2331, line: 806, column: 9)
!3680 = !DILocalVariable(name: "pivot", scope: !3681, file: !2331, line: 831, type: !9, align: 8)
!3681 = distinct !DILexicalBlock(scope: !3679, file: !2331, line: 831, column: 9)
!3682 = !DILocalVariable(name: "likely_sorted", scope: !3681, file: !2331, line: 831, type: !415, align: 1)
!3683 = !DILocalVariable(name: "p", scope: !3684, file: !2331, line: 846, type: !12, align: 8)
!3684 = distinct !DILexicalBlock(scope: !3681, file: !2331, line: 846, column: 31)
!3685 = !DILocalVariable(name: "mid", scope: !3686, file: !2331, line: 848, type: !9, align: 8)
!3686 = distinct !DILexicalBlock(scope: !3684, file: !2331, line: 848, column: 17)
!3687 = !DILocalVariable(name: "mid", scope: !3688, file: !2331, line: 857, type: !9, align: 8)
!3688 = distinct !DILexicalBlock(scope: !3681, file: !2331, line: 857, column: 9)
!3689 = !DILocalVariable(name: "was_p", scope: !3688, file: !2331, line: 857, type: !415, align: 1)
!3690 = !DILocalVariable(name: "left", scope: !3691, file: !2331, line: 862, type: !348, align: 8)
!3691 = distinct !DILexicalBlock(scope: !3688, file: !2331, line: 862, column: 9)
!3692 = !DILocalVariable(name: "right", scope: !3691, file: !2331, line: 862, type: !348, align: 8)
!3693 = !DILocalVariable(name: "pivot", scope: !3694, file: !2331, line: 863, type: !348, align: 8)
!3694 = distinct !DILexicalBlock(scope: !3691, file: !2331, line: 863, column: 9)
!3695 = !DILocalVariable(name: "right", scope: !3694, file: !2331, line: 863, type: !348, align: 8)
!3696 = !DILocalVariable(name: "pivot", scope: !3697, file: !2331, line: 864, type: !12, align: 8)
!3697 = distinct !DILexicalBlock(scope: !3694, file: !2331, line: 864, column: 9)
!3698 = !DILocation(line: 793, column: 22, scope: !3655)
!3699 = !DILocation(line: 793, column: 42, scope: !3655)
!3700 = !DILocation(line: 793, column: 59, scope: !3655)
!3701 = !DILocation(line: 793, column: 84, scope: !3655)
!3702 = !DILocation(line: 801, column: 9, scope: !3675)
!3703 = !DILocation(line: 803, column: 9, scope: !3677)
!3704 = !DILocation(line: 801, column: 28, scope: !3655)
!3705 = !DILocation(line: 803, column: 31, scope: !3675)
!3706 = !DILocation(line: 805, column: 5, scope: !3677)
!3707 = !DILocation(line: 806, column: 19, scope: !3677)
!3708 = !DILocation(line: 806, column: 13, scope: !3679)
!3709 = !DILocation(line: 809, column: 12, scope: !3679)
!3710 = !DILocation(line: 818, column: 12, scope: !3679)
!3711 = !DILocation(line: 810, column: 16, scope: !3679)
!3712 = !DILocation(line: 878, column: 2, scope: !3655)
!3713 = !DILocation(line: 811, column: 43, scope: !3679)
!3714 = !DILocation(line: 811, column: 17, scope: !3679)
!3715 = !DILocation(line: 819, column: 22, scope: !3679)
!3716 = !DILocation(line: 819, column: 13, scope: !3679)
!3717 = !DILocation(line: 825, column: 13, scope: !3679)
!3718 = !DILocation(line: 825, column: 12, scope: !3679)
!3719 = !DILocation(line: 831, column: 51, scope: !3679)
!3720 = !DILocation(line: 831, column: 38, scope: !3679)
!3721 = !DILocation(line: 831, column: 14, scope: !3679)
!3722 = !DILocation(line: 831, column: 14, scope: !3681)
!3723 = !DILocation(line: 831, column: 21, scope: !3679)
!3724 = !DILocation(line: 831, column: 21, scope: !3681)
!3725 = !DILocation(line: 835, column: 12, scope: !3681)
!3726 = !DILocation(line: 826, column: 28, scope: !3679)
!3727 = !DILocation(line: 826, column: 13, scope: !3679)
!3728 = !DILocation(line: 827, column: 13, scope: !3679)
!3729 = !DILocation(line: 825, column: 9, scope: !3679)
!3730 = !DILocation(line: 835, column: 28, scope: !3681)
!3731 = !DILocation(line: 846, column: 16, scope: !3684)
!3732 = !DILocation(line: 838, column: 39, scope: !3681)
!3733 = !DILocation(line: 838, column: 16, scope: !3681)
!3734 = !DILocation(line: 846, column: 21, scope: !3684)
!3735 = !DILocation(line: 847, column: 29, scope: !3684)
!3736 = !DILocation(line: 857, column: 38, scope: !3681)
!3737 = !DILocation(line: 857, column: 28, scope: !3681)
!3738 = !DILocation(line: 857, column: 14, scope: !3681)
!3739 = !DILocation(line: 857, column: 14, scope: !3688)
!3740 = !DILocation(line: 857, column: 19, scope: !3681)
!3741 = !DILocation(line: 857, column: 19, scope: !3688)
!3742 = !DILocation(line: 858, column: 38, scope: !3688)
!3743 = !DILocation(line: 847, column: 28, scope: !3684)
!3744 = !DILocation(line: 847, column: 17, scope: !3684)
!3745 = !DILocation(line: 847, column: 16, scope: !3684)
!3746 = !DILocation(line: 848, column: 43, scope: !3684)
!3747 = !DILocation(line: 848, column: 27, scope: !3684)
!3748 = !DILocation(line: 848, column: 21, scope: !3686)
!3749 = !DILocation(line: 851, column: 26, scope: !3686)
!3750 = !DILocation(line: 851, column: 28, scope: !3686)
!3751 = !DILocation(line: 851, column: 17, scope: !3686)
!3752 = !DILocation(line: 1, column: 1, scope: !3753)
!3753 = !DILexicalBlockFile(scope: !3677, file: !3581, discriminator: 0)
!3754 = !DILocation(line: 858, column: 24, scope: !3688)
!3755 = !DILocation(line: 858, column: 52, scope: !3688)
!3756 = !DILocation(line: 858, column: 9, scope: !3688)
!3757 = !DILocation(line: 859, column: 9, scope: !3688)
!3758 = !DILocation(line: 862, column: 29, scope: !3688)
!3759 = !DILocation(line: 862, column: 14, scope: !3688)
!3760 = !DILocation(line: 862, column: 14, scope: !3691)
!3761 = !DILocation(line: 862, column: 20, scope: !3688)
!3762 = !DILocation(line: 862, column: 20, scope: !3691)
!3763 = !DILocation(line: 863, column: 30, scope: !3691)
!3764 = !DILocation(line: 863, column: 14, scope: !3691)
!3765 = !DILocation(line: 863, column: 14, scope: !3694)
!3766 = !DILocation(line: 863, column: 21, scope: !3691)
!3767 = !DILocation(line: 863, column: 21, scope: !3694)
!3768 = !DILocation(line: 864, column: 22, scope: !3694)
!3769 = !DILocation(line: 864, column: 21, scope: !3694)
!3770 = !DILocation(line: 864, column: 13, scope: !3697)
!3771 = !DILocation(line: 869, column: 12, scope: !3697)
!3772 = !DILocation(line: 874, column: 37, scope: !3697)
!3773 = !DILocation(line: 874, column: 50, scope: !3697)
!3774 = !DILocation(line: 874, column: 13, scope: !3697)
!3775 = !DILocation(line: 875, column: 13, scope: !3697)
!3776 = !DILocation(line: 869, column: 9, scope: !3697)
!3777 = !DILocation(line: 870, column: 36, scope: !3697)
!3778 = !DILocation(line: 870, column: 42, scope: !3697)
!3779 = !DILocation(line: 870, column: 13, scope: !3697)
!3780 = !DILocation(line: 871, column: 13, scope: !3697)
!3781 = !DILocation(line: 872, column: 20, scope: !3697)
!3782 = !DILocation(line: 872, column: 13, scope: !3697)
!3783 = distinct !DISubprogram(name: "heapsort<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort17he1f0ec5af510337fE", scope: !1136, file: !2331, line: 249, type: !2332, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3801, retainedNodes: !3784)
!3784 = !{!3785, !3786, !3787, !3793, !3795, !3797, !3799}
!3785 = !DILocalVariable(name: "v", arg: 1, scope: !3783, file: !2331, line: 249, type: !348)
!3786 = !DILocalVariable(name: "is_less", arg: 2, scope: !3783, file: !2331, line: 249, type: !1106)
!3787 = !DILocalVariable(name: "sift_down", scope: !3788, file: !2331, line: 254, type: !3789, align: 8)
!3788 = distinct !DILexicalBlock(scope: !3783, file: !2331, line: 254, column: 5)
!3789 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !3790, file: !2, size: 64, align: 64, elements: !3791, templateParams: !24, identifier: "d0511b198fca70e2abf252926342df74")
!3790 = !DINamespace(name: "heapsort", scope: !1136)
!3791 = !{!3792}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !3789, file: !2, baseType: !1105, size: 64, align: 64)
!3793 = !DILocalVariable(name: "iter", scope: !3794, file: !2331, line: 282, type: !2450, align: 8)
!3794 = distinct !DILexicalBlock(scope: !3788, file: !2331, line: 282, column: 5)
!3795 = !DILocalVariable(name: "i", scope: !3796, file: !2331, line: 282, type: !9, align: 8)
!3796 = distinct !DILexicalBlock(scope: !3794, file: !2331, line: 282, column: 37)
!3797 = !DILocalVariable(name: "iter", scope: !3798, file: !2331, line: 287, type: !2450, align: 8)
!3798 = distinct !DILexicalBlock(scope: !3788, file: !2331, line: 287, column: 5)
!3799 = !DILocalVariable(name: "i", scope: !3800, file: !2331, line: 287, type: !9, align: 8)
!3800 = distinct !DILexicalBlock(scope: !3798, file: !2331, line: 287, column: 33)
!3801 = !{!189, !3802}
!3802 = !DITemplateTypeParameter(name: "F", type: !1106)
!3803 = !DILocation(line: 249, column: 23, scope: !3783)
!3804 = !DILocation(line: 249, column: 36, scope: !3783)
!3805 = !DILocation(line: 254, column: 9, scope: !3788)
!3806 = !DILocation(line: 282, column: 14, scope: !3794)
!3807 = !DILocation(line: 287, column: 14, scope: !3798)
!3808 = !DILocation(line: 254, column: 25, scope: !3783)
!3809 = !DILocation(line: 282, column: 18, scope: !3788)
!3810 = !DILocation(line: 282, column: 14, scope: !3788)
!3811 = !DILocation(line: 282, column: 5, scope: !3794)
!3812 = !DILocation(line: 287, column: 14, scope: !3788)
!3813 = !DILocation(line: 287, column: 5, scope: !3798)
!3814 = !DILocation(line: 282, column: 9, scope: !3794)
!3815 = !DILocation(line: 282, column: 9, scope: !3796)
!3816 = !DILocation(line: 283, column: 9, scope: !3796)
!3817 = !DILocation(line: 291, column: 2, scope: !3783)
!3818 = !DILocation(line: 287, column: 9, scope: !3798)
!3819 = !DILocation(line: 287, column: 9, scope: !3800)
!3820 = !DILocation(line: 288, column: 9, scope: !3800)
!3821 = !DILocation(line: 289, column: 26, scope: !3800)
!3822 = !DILocation(line: 289, column: 24, scope: !3800)
!3823 = !DILocation(line: 289, column: 9, scope: !3800)
!3824 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h38ea04fa6e9c2503E", scope: !3790, file: !2331, line: 254, type: !3825, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3801, retainedNodes: !3828)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{null, !3827, !348, !9}
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::heapsort::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !3789, size: 64, align: 64, dwarfAddressSpace: 0)
!3828 = !{!3829, !3830, !3831, !3832}
!3829 = !DILocalVariable(name: "v", arg: 2, scope: !3824, file: !2331, line: 254, type: !348)
!3830 = !DILocalVariable(name: "node", arg: 3, scope: !3824, file: !2331, line: 254, type: !9)
!3831 = !DILocalVariable(name: "is_less", scope: !3824, file: !2331, line: 249, type: !1106, align: 8)
!3832 = !DILocalVariable(name: "child", scope: !3833, file: !2331, line: 257, type: !9, align: 8)
!3833 = distinct !DILexicalBlock(scope: !3824, file: !2331, line: 257, column: 13)
!3834 = !DILocation(line: 249, column: 36, scope: !3824)
!3835 = !DILocation(line: 254, column: 26, scope: !3824)
!3836 = !DILocation(line: 254, column: 39, scope: !3824)
!3837 = !DILocation(line: 257, column: 17, scope: !3833)
!3838 = !DILocation(line: 255, column: 9, scope: !3824)
!3839 = !DILocation(line: 257, column: 33, scope: !3824)
!3840 = !DILocation(line: 257, column: 29, scope: !3824)
!3841 = !DILocation(line: 258, column: 16, scope: !3833)
!3842 = !DILocation(line: 263, column: 16, scope: !3833)
!3843 = !DILocation(line: 279, column: 6, scope: !3824)
!3844 = !DILocation(line: 271, column: 17, scope: !3833)
!3845 = !DILocation(line: 271, column: 28, scope: !3833)
!3846 = !DILocation(line: 271, column: 26, scope: !3833)
!3847 = !DILocation(line: 267, column: 26, scope: !3833)
!3848 = !DILocation(line: 267, column: 37, scope: !3833)
!3849 = !DILocation(line: 267, column: 35, scope: !3833)
!3850 = !DILocation(line: 267, column: 34, scope: !3833)
!3851 = !DILocation(line: 267, column: 48, scope: !3833)
!3852 = !DILocation(line: 267, column: 46, scope: !3833)
!3853 = !DILocation(line: 267, column: 45, scope: !3833)
!3854 = !DILocation(line: 267, column: 17, scope: !3833)
!3855 = !DILocation(line: 263, column: 13, scope: !3833)
!3856 = !DILocation(line: 271, column: 25, scope: !3833)
!3857 = !DILocation(line: 271, column: 38, scope: !3833)
!3858 = !DILocation(line: 271, column: 36, scope: !3833)
!3859 = !DILocation(line: 271, column: 35, scope: !3833)
!3860 = !DILocation(line: 271, column: 16, scope: !3833)
!3861 = !DILocation(line: 276, column: 20, scope: !3833)
!3862 = !DILocation(line: 276, column: 26, scope: !3833)
!3863 = !DILocation(line: 276, column: 13, scope: !3833)
!3864 = !DILocation(line: 277, column: 20, scope: !3833)
!3865 = !DILocation(line: 277, column: 13, scope: !3833)
!3866 = distinct !DISubprogram(name: "partition<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9partition17h5991b453aacc2b5fE", scope: !1136, file: !2331, line: 560, type: !3867, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !3869)
!3867 = !DISubroutineType(types: !3868)
!3868 = !{!1024, !348, !9, !1106}
!3869 = !{!3870, !3871, !3872, !3873, !3875, !3876, !3878, !3879, !3881, !3883, !3885, !3887, !3889}
!3870 = !DILocalVariable(name: "v", arg: 1, scope: !3866, file: !2331, line: 560, type: !348)
!3871 = !DILocalVariable(name: "pivot", arg: 2, scope: !3866, file: !2331, line: 560, type: !9)
!3872 = !DILocalVariable(name: "is_less", arg: 3, scope: !3866, file: !2331, line: 560, type: !1106)
!3873 = !DILocalVariable(name: "mid", scope: !3874, file: !2331, line: 564, type: !9, align: 8)
!3874 = distinct !DILexicalBlock(scope: !3866, file: !2331, line: 564, column: 5)
!3875 = !DILocalVariable(name: "was_partitioned", scope: !3874, file: !2331, line: 564, type: !415, align: 1)
!3876 = !DILocalVariable(name: "pivot", scope: !3877, file: !2331, line: 567, type: !348, align: 8)
!3877 = distinct !DILexicalBlock(scope: !3866, file: !2331, line: 567, column: 9)
!3878 = !DILocalVariable(name: "v", scope: !3877, file: !2331, line: 567, type: !348, align: 8)
!3879 = !DILocalVariable(name: "pivot", scope: !3880, file: !2331, line: 568, type: !939, align: 8)
!3880 = distinct !DILexicalBlock(scope: !3877, file: !2331, line: 568, column: 9)
!3881 = !DILocalVariable(name: "tmp", scope: !3882, file: !2331, line: 574, type: !649, align: 8)
!3882 = distinct !DILexicalBlock(scope: !3880, file: !2331, line: 574, column: 9)
!3883 = !DILocalVariable(name: "_pivot_guard", scope: !3884, file: !2331, line: 575, type: !1135, align: 8)
!3884 = distinct !DILexicalBlock(scope: !3882, file: !2331, line: 575, column: 9)
!3885 = !DILocalVariable(name: "pivot", scope: !3886, file: !2331, line: 576, type: !12, align: 8)
!3886 = distinct !DILexicalBlock(scope: !3884, file: !2331, line: 576, column: 9)
!3887 = !DILocalVariable(name: "l", scope: !3888, file: !2331, line: 579, type: !9, align: 8)
!3888 = distinct !DILexicalBlock(scope: !3886, file: !2331, line: 579, column: 9)
!3889 = !DILocalVariable(name: "r", scope: !3890, file: !2331, line: 580, type: !9, align: 8)
!3890 = distinct !DILexicalBlock(scope: !3888, file: !2331, line: 580, column: 9)
!3891 = !DILocation(line: 560, column: 20, scope: !3866)
!3892 = !DILocation(line: 560, column: 33, scope: !3866)
!3893 = !DILocation(line: 560, column: 47, scope: !3866)
!3894 = !DILocation(line: 574, column: 13, scope: !3882)
!3895 = !DILocation(line: 575, column: 13, scope: !3884)
!3896 = !DILocation(line: 579, column: 13, scope: !3888)
!3897 = !DILocation(line: 580, column: 13, scope: !3890)
!3898 = !DILocation(line: 566, column: 9, scope: !3866)
!3899 = !DILocation(line: 567, column: 26, scope: !3866)
!3900 = !DILocation(line: 567, column: 14, scope: !3866)
!3901 = !DILocation(line: 567, column: 14, scope: !3877)
!3902 = !DILocation(line: 567, column: 21, scope: !3866)
!3903 = !DILocation(line: 567, column: 21, scope: !3877)
!3904 = !DILocation(line: 568, column: 26, scope: !3877)
!3905 = !DILocation(line: 568, column: 21, scope: !3877)
!3906 = !DILocation(line: 568, column: 13, scope: !3880)
!3907 = !DILocation(line: 574, column: 51, scope: !3880)
!3908 = !DILocation(line: 70, column: 22, scope: !997, inlinedAt: !3909)
!3909 = distinct !DILocation(line: 574, column: 19, scope: !3880)
!3910 = !DILocation(line: 71, column: 9, scope: !997, inlinedAt: !3909)
!3911 = !DILocation(line: 153, column: 14, scope: !2368, inlinedAt: !3912)
!3912 = distinct !DILocation(line: 575, column: 50, scope: !3882)
!3913 = !DILocation(line: 575, column: 28, scope: !3882)
!3914 = !DILocation(line: 153, column: 14, scope: !2368, inlinedAt: !3915)
!3915 = distinct !DILocation(line: 576, column: 22, scope: !3884)
!3916 = !DILocation(line: 576, column: 21, scope: !3884)
!3917 = !DILocation(line: 576, column: 13, scope: !3886)
!3918 = !DILocation(line: 579, column: 21, scope: !3886)
!3919 = !DILocation(line: 580, column: 21, scope: !3888)
!3920 = !DILocation(line: 588, column: 13, scope: !3890)
!3921 = !DILocation(line: 588, column: 19, scope: !3890)
!3922 = !DILocation(line: 588, column: 23, scope: !3890)
!3923 = !DILocation(line: 588, column: 52, scope: !3890)
!3924 = !DILocation(line: 588, column: 36, scope: !3890)
!3925 = !DILocation(line: 588, column: 28, scope: !3890)
!3926 = !DILocation(line: 593, column: 19, scope: !3890)
!3927 = !DILocation(line: 593, column: 23, scope: !3890)
!3928 = !DILocation(line: 589, column: 17, scope: !3890)
!3929 = !DILocation(line: 593, column: 53, scope: !3890)
!3930 = !DILocation(line: 593, column: 37, scope: !3890)
!3931 = !DILocation(line: 593, column: 29, scope: !3890)
!3932 = !DILocation(line: 593, column: 28, scope: !3890)
!3933 = !DILocation(line: 598, column: 10, scope: !3890)
!3934 = !DILocation(line: 598, column: 41, scope: !3890)
!3935 = !DILocation(line: 598, column: 44, scope: !3890)
!3936 = !DILocation(line: 598, column: 39, scope: !3890)
!3937 = !DILocation(line: 598, column: 14, scope: !3890)
!3938 = !DILocation(line: 594, column: 17, scope: !3890)
!3939 = !DILocation(line: 593, column: 13, scope: !3890)
!3940 = !DILocation(line: 598, column: 65, scope: !3890)
!3941 = !DILocation(line: 598, column: 70, scope: !3890)
!3942 = !DILocation(line: 598, column: 9, scope: !3890)
!3943 = !DILocation(line: 603, column: 5, scope: !3882)
!3944 = !DILocation(line: 564, column: 10, scope: !3866)
!3945 = !DILocation(line: 564, column: 10, scope: !3874)
!3946 = !DILocation(line: 564, column: 15, scope: !3866)
!3947 = !DILocation(line: 564, column: 15, scope: !3874)
!3948 = !DILocation(line: 606, column: 5, scope: !3874)
!3949 = !DILocation(line: 608, column: 5, scope: !3874)
!3950 = !DILocation(line: 609, column: 2, scope: !3866)
!3951 = distinct !DISubprogram(name: "quicksort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9quicksort17h65d58888f6b725fcE", scope: !1136, file: !2331, line: 881, type: !3952, scopeLine: 881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2347, retainedNodes: !3954)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{null, !348, !1107}
!3954 = !{!3955, !3956, !3957}
!3955 = !DILocalVariable(name: "v", arg: 1, scope: !3951, file: !2331, line: 881, type: !348)
!3956 = !DILocalVariable(name: "is_less", arg: 2, scope: !3951, file: !2331, line: 881, type: !1107)
!3957 = !DILocalVariable(name: "limit", scope: !3958, file: !2331, line: 891, type: !27, align: 4)
!3958 = distinct !DILexicalBlock(scope: !3951, file: !2331, line: 891, column: 5)
!3959 = !DILocation(line: 881, column: 24, scope: !3951)
!3960 = !DILocation(line: 881, column: 37, scope: !3951)
!3961 = !DILocation(line: 886, column: 8, scope: !3951)
!3962 = !DILocalVariable(name: "self", arg: 1, scope: !3963, file: !1007, line: 143, type: !9)
!3963 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13leading_zeros17h4e856bb11f46e1d5E", scope: !1008, file: !1007, line: 143, type: !1191, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3964)
!3964 = !{!3962}
!3965 = !DILocation(line: 143, column: 36, scope: !3963, inlinedAt: !3966)
!3966 = distinct !DILocation(line: 891, column: 31, scope: !3951)
!3967 = !DILocation(line: 144, column: 13, scope: !3963, inlinedAt: !3966)
!3968 = !DILocation(line: 891, column: 17, scope: !3951)
!3969 = !DILocation(line: 894, column: 1, scope: !3951)
!3970 = !DILocation(line: 894, column: 2, scope: !3951)
!3971 = !DILocation(line: 891, column: 9, scope: !3958)
!3972 = !DILocation(line: 893, column: 30, scope: !3958)
!3973 = !DILocation(line: 893, column: 5, scope: !3958)
!3974 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc7d1bbe173cff432E", scope: !3975, file: !164, line: 17, type: !3976, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1947, retainedNodes: !3978)
!3975 = !DINamespace(name: "{impl#0}", scope: !166)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{!317, !317, !175, !321}
!3978 = !{!3979, !3980}
!3979 = !DILocalVariable(name: "self", arg: 1, scope: !3974, file: !164, line: 17, type: !317)
!3980 = !DILocalVariable(name: "index", arg: 2, scope: !3974, file: !164, line: 17, type: !175)
!3981 = !DILocation(line: 17, column: 14, scope: !3974)
!3982 = !DILocation(line: 17, column: 21, scope: !3974)
!3983 = !DILocation(line: 18, column: 9, scope: !3974)
!3984 = !DILocation(line: 19, column: 6, scope: !3974)
!3985 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h2d7066af8ea7a829E", scope: !3986, file: !164, line: 29, type: !3987, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3992, retainedNodes: !3989)
!3986 = !DINamespace(name: "{impl#1}", scope: !166)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{!348, !348, !381, !321}
!3989 = !{!3990, !3991}
!3990 = !DILocalVariable(name: "self", arg: 1, scope: !3985, file: !164, line: 29, type: !348)
!3991 = !DILocalVariable(name: "index", arg: 2, scope: !3985, file: !164, line: 29, type: !381)
!3992 = !{!189, !3993}
!3993 = !DITemplateTypeParameter(name: "I", type: !381)
!3994 = !DILocation(line: 29, column: 18, scope: !3985)
!3995 = !DILocation(line: 29, column: 29, scope: !3985)
!3996 = !DILocation(line: 30, column: 9, scope: !3985)
!3997 = !DILocation(line: 31, column: 6, scope: !3985)
!3998 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h817a1d02df95443aE", scope: !3986, file: !164, line: 29, type: !3999, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1947, retainedNodes: !4001)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!348, !348, !175, !321}
!4001 = !{!4002, !4003}
!4002 = !DILocalVariable(name: "self", arg: 1, scope: !3998, file: !164, line: 29, type: !348)
!4003 = !DILocalVariable(name: "index", arg: 2, scope: !3998, file: !164, line: 29, type: !175)
!4004 = !DILocation(line: 29, column: 18, scope: !3998)
!4005 = !DILocation(line: 29, column: 29, scope: !3998)
!4006 = !DILocation(line: 30, column: 9, scope: !3998)
!4007 = !DILocation(line: 31, column: 6, scope: !3998)
!4008 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeToInclusive<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h8b4c6736f697ea0fE", scope: !3986, file: !164, line: 29, type: !4009, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4014, retainedNodes: !4011)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!348, !348, !430, !321}
!4011 = !{!4012, !4013}
!4012 = !DILocalVariable(name: "self", arg: 1, scope: !4008, file: !164, line: 29, type: !348)
!4013 = !DILocalVariable(name: "index", arg: 2, scope: !4008, file: !164, line: 29, type: !430)
!4014 = !{!189, !4015}
!4015 = !DITemplateTypeParameter(name: "I", type: !430)
!4016 = !DILocation(line: 29, column: 18, scope: !4008)
!4017 = !DILocation(line: 29, column: 29, scope: !4008)
!4018 = !DILocation(line: 30, column: 9, scope: !4008)
!4019 = !DILocation(line: 31, column: 6, scope: !4008)
!4020 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h99932268dd4a9ac3E", scope: !3986, file: !164, line: 29, type: !4021, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4026, retainedNodes: !4023)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!348, !348, !367, !321}
!4023 = !{!4024, !4025}
!4024 = !DILocalVariable(name: "self", arg: 1, scope: !4020, file: !164, line: 29, type: !348)
!4025 = !DILocalVariable(name: "index", arg: 2, scope: !4020, file: !164, line: 29, type: !367)
!4026 = !{!189, !4027}
!4027 = !DITemplateTypeParameter(name: "I", type: !367)
!4028 = !DILocation(line: 29, column: 18, scope: !4020)
!4029 = !DILocation(line: 29, column: 29, scope: !4020)
!4030 = !DILocation(line: 30, column: 9, scope: !4020)
!4031 = !DILocation(line: 31, column: 6, scope: !4020)
!4032 = distinct !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17hddab6344e80635f6E", scope: !4034, file: !4033, line: 844, type: !4045, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1559, retainedNodes: !4047)
!4033 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "d086cbc744c20a3ae6ac1353844999b2")
!4034 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<bootloader::bootinfo::TlsTemplate>", scope: !473, file: !2, size: 256, align: 64, elements: !4035, templateParams: !24, identifier: "42fdeac50f85ae1d2d3e9fcf3f81246c")
!4035 = !{!4036}
!4036 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4034, file: !2, size: 256, align: 64, elements: !4037, templateParams: !24, identifier: "cd776079dc5d1ac5f9a673b182517e78", discriminator: !4044)
!4037 = !{!4038, !4040}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4036, file: !2, baseType: !4039, size: 256, align: 64, extraData: i64 0)
!4039 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4034, file: !2, size: 256, align: 64, elements: !24, templateParams: !1559, identifier: "6ded0cd32c50a1c9eb53e07665681fa8")
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4036, file: !2, baseType: !4041, size: 256, align: 64, extraData: i64 1)
!4041 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4034, file: !2, size: 256, align: 64, elements: !4042, templateParams: !1559, identifier: "fd3cbf07ca84f880ffd4d862ae31569a")
!4042 = !{!4043}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4041, file: !2, baseType: !109, size: 192, align: 64, offset: 64)
!4044 = !DIDerivedType(tag: DW_TAG_member, scope: !4034, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!109, !4034, !109}
!4047 = !{!4048, !4049, !4050}
!4048 = !DILocalVariable(name: "self", arg: 1, scope: !4032, file: !4033, line: 844, type: !4034)
!4049 = !DILocalVariable(name: "default", arg: 2, scope: !4032, file: !4033, line: 844, type: !109)
!4050 = !DILocalVariable(name: "x", scope: !4051, file: !4033, line: 849, type: !109, align: 8)
!4051 = distinct !DILexicalBlock(scope: !4032, file: !4033, line: 849, column: 13)
!4052 = !DILocation(line: 844, column: 28, scope: !4032)
!4053 = !DILocation(line: 844, column: 34, scope: !4032)
!4054 = !DILocation(line: 849, column: 18, scope: !4051)
!4055 = !DILocation(line: 848, column: 15, scope: !4032)
!4056 = !DILocation(line: 848, column: 9, scope: !4032)
!4057 = !DILocation(line: 850, column: 21, scope: !4032)
!4058 = !DILocation(line: 849, column: 18, scope: !4032)
!4059 = !DILocation(line: 849, column: 24, scope: !4051)
!4060 = !DILocation(line: 849, column: 24, scope: !4032)
!4061 = !DILocation(line: 852, column: 5, scope: !4032)
!4062 = !DILocation(line: 852, column: 6, scope: !4032)
!4063 = distinct !DISubprogram(name: "eq", linkageName: "_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h08b9696236dc6075E", scope: !4064, file: !722, line: 333, type: !4065, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4068)
!4064 = !DINamespace(name: "{impl#13}", scope: !150)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!415, !4067, !4067}
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cmp::Ordering", baseType: !149, size: 64, align: 64, dwarfAddressSpace: 0)
!4068 = !{!4069, !4070, !4071, !4073}
!4069 = !DILocalVariable(name: "self", arg: 1, scope: !4063, file: !722, line: 333, type: !4067)
!4070 = !DILocalVariable(name: "other", arg: 2, scope: !4063, file: !722, line: 333, type: !4067)
!4071 = !DILocalVariable(name: "__self_tag", scope: !4072, file: !722, line: 333, type: !151, align: 1)
!4072 = distinct !DILexicalBlock(scope: !4063, file: !722, line: 333, column: 33)
!4073 = !DILocalVariable(name: "__arg1_tag", scope: !4074, file: !722, line: 333, type: !151, align: 1)
!4074 = distinct !DILexicalBlock(scope: !4072, file: !722, line: 333, column: 33)
!4075 = !DILocation(line: 333, column: 33, scope: !4063)
!4076 = !DILocation(line: 333, column: 33, scope: !4072)
!4077 = !DILocation(line: 333, column: 33, scope: !4074)
!4078 = !DILocation(line: 333, column: 42, scope: !4063)
!4079 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h68016ab3f09a4ae3E", scope: !4081, file: !4080, line: 272, type: !4084, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4088, retainedNodes: !4086)
!4080 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "697d559cdba63f105535b8b53d6ea422")
!4081 = !DINamespace(name: "{impl#0}", scope: !4082)
!4082 = !DINamespace(name: "collect", scope: !4083)
!4083 = !DINamespace(name: "traits", scope: !2453)
!4084 = !DISubroutineType(types: !4085)
!4085 = !{!809, !809}
!4086 = !{!4087}
!4087 = !DILocalVariable(name: "self", arg: 1, scope: !4079, file: !4080, line: 272, type: !809)
!4088 = !{!832}
!4089 = !DILocation(line: 272, column: 18, scope: !4079)
!4090 = !DILocation(line: 274, column: 6, scope: !4079)
!4091 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h6b7de9994ee6e0bcE", scope: !4092, file: !164, line: 229, type: !4093, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !4095)
!4092 = !DINamespace(name: "{impl#2}", scope: !166)
!4093 = !DISubroutineType(types: !4094)
!4094 = !{!221, !9, !170}
!4095 = !{!4096, !4097, !4098}
!4096 = !DILocalVariable(name: "self", arg: 1, scope: !4091, file: !164, line: 229, type: !9)
!4097 = !DILocalVariable(name: "slice", arg: 2, scope: !4091, file: !164, line: 229, type: !170)
!4098 = !DILocalVariable(name: "this", scope: !4099, file: !164, line: 230, type: !9, align: 8)
!4099 = distinct !DILexicalBlock(scope: !4091, file: !164, line: 230, column: 9)
!4100 = !DILocation(line: 229, column: 29, scope: !4091)
!4101 = !DILocation(line: 230, column: 13, scope: !4099)
!4102 = !DILocation(line: 229, column: 35, scope: !4091)
!4103 = !DILocation(line: 236, column: 13, scope: !4099)
!4104 = !DILocalVariable(name: "this", arg: 1, scope: !4105, file: !197, line: 2218, type: !9)
!4105 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h51c0558f48bfc9f9E", scope: !4106, file: !197, line: 2218, type: !4107, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !4109)
!4106 = !DINamespace(name: "get_unchecked", scope: !4092)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{null, !9, !170}
!4109 = !{!4104, !4110}
!4110 = !DILocalVariable(name: "slice", arg: 2, scope: !4105, file: !197, line: 2218, type: !170)
!4111 = !DILocation(line: 2218, column: 39, scope: !4105, inlinedAt: !4112)
!4112 = distinct !DILocation(line: 236, column: 13, scope: !4099)
!4113 = !DILocation(line: 238, column: 63, scope: !4114, inlinedAt: !4112)
!4114 = !DILexicalBlockFile(scope: !4105, file: !164, discriminator: 0)
!4115 = !DILocation(line: 238, column: 56, scope: !4114, inlinedAt: !4112)
!4116 = !DILocation(line: 2219, column: 20, scope: !4105, inlinedAt: !4112)
!4117 = !DILocation(line: 2221, column: 21, scope: !4105, inlinedAt: !4112)
!4118 = !DILocation(line: 240, column: 13, scope: !4099)
!4119 = !DILocation(line: 915, column: 29, scope: !214, inlinedAt: !4120)
!4120 = distinct !DILocation(line: 240, column: 13, scope: !4099)
!4121 = !DILocation(line: 915, column: 35, scope: !214, inlinedAt: !4120)
!4122 = !DILocation(line: 460, column: 32, scope: !228, inlinedAt: !4123)
!4123 = distinct !DILocation(line: 920, column: 18, scope: !214, inlinedAt: !4120)
!4124 = !DILocation(line: 460, column: 38, scope: !228, inlinedAt: !4123)
!4125 = !DILocation(line: 465, column: 18, scope: !228, inlinedAt: !4123)
!4126 = !DILocation(line: 242, column: 6, scope: !4091)
!4127 = distinct !DISubprogram(name: "drop<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9a4d3fa01a0e4ce4E", scope: !4128, file: !2331, line: 23, type: !4129, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !4132)
!4128 = !DINamespace(name: "{impl#0}", scope: !1136)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{null, !4131}
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1135, size: 64, align: 64, dwarfAddressSpace: 0)
!4132 = !{!4133}
!4133 = !DILocalVariable(name: "self", arg: 1, scope: !4127, file: !2331, line: 23, type: !4131)
!4134 = !DILocation(line: 23, column: 13, scope: !4127)
!4135 = !DILocation(line: 28, column: 38, scope: !4127)
!4136 = !DILocation(line: 28, column: 48, scope: !4127)
!4137 = !DILocation(line: 28, column: 13, scope: !4127)
!4138 = !DILocation(line: 30, column: 6, scope: !4127)
!4139 = distinct !DISubprogram(name: "next<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h20e1df60141b61e8E", scope: !4141, file: !4140, line: 124, type: !4142, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !4145)
!4140 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "471ba458e4027bbd8c4174bbeafb0c53")
!4141 = !DINamespace(name: "{impl#181}", scope: !810)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!3658, !4144}
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !809, size: 64, align: 64, dwarfAddressSpace: 0)
!4145 = !{!4146}
!4146 = !DILocalVariable(name: "self", arg: 1, scope: !4139, file: !4140, line: 124, type: !4144)
!4147 = !DILocation(line: 124, column: 21, scope: !4139)
!4148 = !DILocation(line: 132, column: 29, scope: !4139)
!4149 = !DILocalVariable(name: "self", arg: 1, scope: !4150, file: !1727, line: 325, type: !813)
!4150 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hab56af6c6593dccfE", scope: !813, file: !1727, line: 325, type: !4151, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !4153)
!4151 = !DISubroutineType(types: !4152)
!4152 = !{!287, !813}
!4153 = !{!4149}
!4154 = !DILocation(line: 325, column: 25, scope: !4150, inlinedAt: !4155)
!4155 = distinct !DILocation(line: 132, column: 29, scope: !4139)
!4156 = !DILocation(line: 132, column: 28, scope: !4139)
!4157 = !DILocation(line: 132, column: 21, scope: !4139)
!4158 = !DILocation(line: 133, column: 24, scope: !4139)
!4159 = !DILocation(line: 136, column: 24, scope: !4139)
!4160 = !DILocation(line: 325, column: 25, scope: !4150, inlinedAt: !4161)
!4161 = distinct !DILocation(line: 136, column: 24, scope: !4139)
!4162 = !DILocation(line: 134, column: 33, scope: !4139)
!4163 = !DILocation(line: 134, column: 32, scope: !4139)
!4164 = !DILocation(line: 134, column: 25, scope: !4139)
!4165 = !DILocation(line: 133, column: 21, scope: !4139)
!4166 = !DILocalVariable(name: "self", arg: 1, scope: !4167, file: !4140, line: 75, type: !4144)
!4167 = distinct !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h717e7ac8e48c0264E", scope: !809, file: !4140, line: 75, type: !4168, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !188, retainedNodes: !4170)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{!221, !4144, !9}
!4170 = !{!4166, !4171, !4172}
!4171 = !DILocalVariable(name: "offset", arg: 2, scope: !4167, file: !4140, line: 75, type: !9)
!4172 = !DILocalVariable(name: "old", scope: !4173, file: !4140, line: 80, type: !287, align: 8)
!4173 = distinct !DILexicalBlock(scope: !4167, file: !4140, line: 80, column: 21)
!4174 = !DILocation(line: 75, column: 38, scope: !4167, inlinedAt: !4175)
!4175 = distinct !DILocation(line: 139, column: 30, scope: !4139)
!4176 = !DILocation(line: 75, column: 49, scope: !4167, inlinedAt: !4175)
!4177 = !DILocation(line: 80, column: 31, scope: !4167, inlinedAt: !4175)
!4178 = !DILocation(line: 325, column: 25, scope: !4150, inlinedAt: !4179)
!4179 = distinct !DILocation(line: 80, column: 31, scope: !4167, inlinedAt: !4175)
!4180 = !DILocation(line: 80, column: 25, scope: !4173, inlinedAt: !4175)
!4181 = !DILocation(line: 83, column: 64, scope: !4173, inlinedAt: !4175)
!4182 = !DILocation(line: 325, column: 25, scope: !4150, inlinedAt: !4183)
!4183 = distinct !DILocation(line: 83, column: 64, scope: !4173, inlinedAt: !4175)
!4184 = !DILocation(line: 1015, column: 29, scope: !292, inlinedAt: !4185)
!4185 = distinct !DILocation(line: 83, column: 64, scope: !4173, inlinedAt: !4175)
!4186 = !DILocation(line: 1015, column: 35, scope: !292, inlinedAt: !4185)
!4187 = !DILocation(line: 472, column: 32, scope: !302, inlinedAt: !4188)
!4188 = distinct !DILocation(line: 1020, column: 18, scope: !292, inlinedAt: !4185)
!4189 = !DILocation(line: 472, column: 38, scope: !302, inlinedAt: !4188)
!4190 = !DILocation(line: 479, column: 18, scope: !302, inlinedAt: !4188)
!4191 = !DILocation(line: 83, column: 41, scope: !4173, inlinedAt: !4175)
!4192 = !DILocation(line: 83, column: 21, scope: !4173, inlinedAt: !4175)
!4193 = !DILocation(line: 84, column: 21, scope: !4173, inlinedAt: !4175)
!4194 = !DILocation(line: 86, column: 14, scope: !4167, inlinedAt: !4175)
!4195 = !DILocation(line: 139, column: 25, scope: !4139)
!4196 = !DILocation(line: 136, column: 21, scope: !4139)
!4197 = !DILocation(line: 137, column: 25, scope: !4139)
!4198 = !DILocation(line: 142, column: 14, scope: !4139)
!4199 = distinct !DISubprogram(name: "position<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h928163773198b798E", scope: !4141, file: !4140, line: 278, type: !4200, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4214, retainedNodes: !4203)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{!472, !4144, !4202}
!4202 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !1114, file: !2, align: 8, elements: !24, identifier: "4ebee87bb39ee26dadb0d9cdba6bb02c")
!4203 = !{!4204, !4205, !4206, !4208, !4210, !4212}
!4204 = !DILocalVariable(name: "self", arg: 1, scope: !4199, file: !4140, line: 278, type: !4144)
!4205 = !DILocalVariable(name: "predicate", arg: 2, scope: !4199, file: !4140, line: 278, type: !4202)
!4206 = !DILocalVariable(name: "n", scope: !4207, file: !4140, line: 282, type: !9, align: 8)
!4207 = distinct !DILexicalBlock(scope: !4199, file: !4140, line: 282, column: 17)
!4208 = !DILocalVariable(name: "start", scope: !4209, file: !4140, line: 282, type: !813, align: 8)
!4209 = distinct !DILexicalBlock(scope: !4199, file: !4140, line: 16, column: 9)
!4210 = !DILocalVariable(name: "i", scope: !4211, file: !4140, line: 283, type: !9, align: 8)
!4211 = distinct !DILexicalBlock(scope: !4207, file: !4140, line: 283, column: 17)
!4212 = !DILocalVariable(name: "x", scope: !4213, file: !4140, line: 284, type: !12, align: 8)
!4213 = distinct !DILexicalBlock(scope: !4211, file: !4140, line: 284, column: 49)
!4214 = !{!189, !4215}
!4215 = !DITemplateTypeParameter(name: "P", type: !4202)
!4216 = !DILocation(line: 278, column: 28, scope: !4199)
!4217 = !DILocation(line: 278, column: 39, scope: !4199)
!4218 = !DILocation(line: 282, column: 21, scope: !4207)
!4219 = !DILocation(line: 283, column: 21, scope: !4211)
!4220 = !DILocation(line: 282, column: 25, scope: !4199)
!4221 = !DILocation(line: 282, column: 25, scope: !4209)
!4222 = !DILocation(line: 325, column: 25, scope: !4150, inlinedAt: !4223)
!4223 = distinct !DILocation(line: 282, column: 25, scope: !4209)
!4224 = !DILocation(line: 203, column: 17, scope: !543, inlinedAt: !4225)
!4225 = distinct !DILocation(line: 282, column: 25, scope: !4209)
!4226 = !DILocation(line: 58, column: 26, scope: !550, inlinedAt: !4227)
!4227 = distinct !DILocation(line: 207, column: 33, scope: !543, inlinedAt: !4225)
!4228 = !DILocation(line: 207, column: 18, scope: !543, inlinedAt: !4225)
!4229 = !DILocation(line: 325, column: 25, scope: !4150, inlinedAt: !4230)
!4230 = distinct !DILocation(line: 282, column: 25, scope: !4209)
!4231 = !DILocation(line: 209, column: 17, scope: !3506, inlinedAt: !4232)
!4232 = distinct !DILocation(line: 282, column: 25, scope: !4209)
!4233 = !DILocation(line: 57, column: 26, scope: !1271, inlinedAt: !4234)
!4234 = distinct !DILocation(line: 213, column: 33, scope: !3506, inlinedAt: !4232)
!4235 = !DILocation(line: 213, column: 18, scope: !3506, inlinedAt: !4232)
!4236 = !DILocalVariable(name: "self", arg: 1, scope: !4237, file: !1007, line: 1224, type: !9)
!4237 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h4c913c25b391c4e2E", scope: !1008, file: !1007, line: 1224, type: !4238, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4240)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!9, !9, !9}
!4240 = !{!4236, !4241}
!4241 = !DILocalVariable(name: "rhs", arg: 2, scope: !4237, file: !1007, line: 1224, type: !9)
!4242 = !DILocation(line: 1224, column: 35, scope: !4237, inlinedAt: !4243)
!4243 = distinct !DILocation(line: 282, column: 25, scope: !4209)
!4244 = !DILocation(line: 1224, column: 41, scope: !4237, inlinedAt: !4243)
!4245 = !DILocation(line: 1225, column: 13, scope: !4237, inlinedAt: !4243)
!4246 = !DILocation(line: 283, column: 29, scope: !4207)
!4247 = !DILocation(line: 284, column: 17, scope: !4211)
!4248 = !DILocation(line: 284, column: 37, scope: !4213)
!4249 = !DILocation(line: 284, column: 27, scope: !4213)
!4250 = !DILocation(line: 284, column: 32, scope: !4213)
!4251 = !DILocation(line: 285, column: 24, scope: !4213)
!4252 = !DILocation(line: 293, column: 17, scope: !4211)
!4253 = !DILocation(line: 294, column: 13, scope: !4199)
!4254 = !DILocation(line: 294, column: 14, scope: !4199)
!4255 = !DILocation(line: 291, column: 21, scope: !4213)
!4256 = !DILocation(line: 288, column: 41, scope: !4213)
!4257 = !DILocation(line: 288, column: 45, scope: !4213)
!4258 = !DILocation(line: 288, column: 34, scope: !4213)
!4259 = !DILocation(line: 289, column: 37, scope: !4213)
!4260 = !DILocation(line: 289, column: 32, scope: !4213)
!4261 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h6b6051dd9a37da0fE", scope: !94, file: !4262, line: 20, type: !4263, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !24)
!4262 = !DIFile(filename: "src/bootinfo/memory_map.rs", directory: "/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "e5c49912468d9331b5d84640370affee")
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!94}
!4265 = !DILocation(line: 22, column: 23, scope: !4261)
!4266 = !DILocation(line: 22, column: 22, scope: !4261)
!4267 = !DILocation(line: 21, column: 9, scope: !4261)
!4268 = !DILocation(line: 25, column: 6, scope: !4261)
!4269 = distinct !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h2fba7a148fe734e3E", scope: !94, file: !4262, line: 27, type: !4270, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4273)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{null, !4272, !13}
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4273 = !{!4274, !4275}
!4274 = !DILocalVariable(name: "self", arg: 1, scope: !4269, file: !4262, line: 27, type: !4272)
!4275 = !DILocalVariable(name: "region", arg: 2, scope: !4269, file: !4262, line: 27, type: !13)
!4276 = !DILocation(line: 27, column: 23, scope: !4269)
!4277 = !DILocation(line: 27, column: 34, scope: !4269)
!4278 = !DILocation(line: 29, column: 13, scope: !4269)
!4279 = !DILocation(line: 28, column: 9, scope: !4269)
!4280 = !DILocation(line: 32, column: 22, scope: !4269)
!4281 = !DILocation(line: 32, column: 9, scope: !4269)
!4282 = !DILocation(line: 33, column: 9, scope: !4269)
!4283 = !DILocation(line: 34, column: 9, scope: !4269)
!4284 = !DILocation(line: 35, column: 6, scope: !4269)
!4285 = distinct !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h56c79485cce96702E", scope: !94, file: !4262, line: 37, type: !4286, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4288)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{null, !4272}
!4288 = !{!4289, !4290}
!4289 = !DILocalVariable(name: "self", arg: 1, scope: !4285, file: !4262, line: 37, type: !4272)
!4290 = !DILocalVariable(name: "first_zero_index", scope: !4291, file: !4262, line: 58, type: !9, align: 8)
!4291 = distinct !DILexicalBlock(scope: !4285, file: !4262, line: 58, column: 94)
!4292 = !DILocation(line: 37, column: 17, scope: !4285)
!4293 = !DILocation(line: 40, column: 9, scope: !4285)
!4294 = !DILocation(line: 58, column: 41, scope: !4291)
!4295 = !DILocation(line: 58, column: 16, scope: !4291)
!4296 = !DILocation(line: 58, column: 21, scope: !4291)
!4297 = !DILocation(line: 59, column: 13, scope: !4291)
!4298 = !DILocation(line: 58, column: 9, scope: !4285)
!4299 = !DILocation(line: 61, column: 6, scope: !4285)
!4300 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h395a9740f6ec9df5E", scope: !1114, file: !4262, line: 40, type: !4301, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4303)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!149, !1112, !12, !12}
!4303 = !{!4304, !4305, !4306, !4308}
!4304 = !DILocalVariable(name: "r1", arg: 2, scope: !4300, file: !4262, line: 40, type: !12)
!4305 = !DILocalVariable(name: "r2", arg: 3, scope: !4300, file: !4262, line: 40, type: !12)
!4306 = !DILocalVariable(name: "ordering", scope: !4307, file: !4262, line: 46, type: !149, align: 1)
!4307 = distinct !DILexicalBlock(scope: !4300, file: !4262, line: 46, column: 17)
!4308 = !DILocalVariable(arg: 1, scope: !4300, file: !4262, line: 40, type: !1112)
!4309 = !DILocation(line: 40, column: 39, scope: !4300)
!4310 = !DILocation(line: 40, column: 40, scope: !4300)
!4311 = !DILocation(line: 40, column: 44, scope: !4300)
!4312 = !DILocation(line: 46, column: 21, scope: !4307)
!4313 = !DILocation(line: 41, column: 16, scope: !4300)
!4314 = !DILocation(line: 43, column: 23, scope: !4300)
!4315 = !DILocation(line: 42, column: 17, scope: !4300)
!4316 = !DILocation(line: 41, column: 13, scope: !4300)
!4317 = !DILocation(line: 57, column: 10, scope: !4300)
!4318 = !DILocation(line: 46, column: 32, scope: !4300)
!4319 = !DILocation(line: 51, column: 20, scope: !4307)
!4320 = !DILocation(line: 44, column: 17, scope: !4300)
!4321 = !DILocation(line: 43, column: 20, scope: !4300)
!4322 = !DILocation(line: 54, column: 21, scope: !4307)
!4323 = !DILocation(line: 51, column: 17, scope: !4307)
!4324 = !DILocation(line: 52, column: 21, scope: !4307)
!4325 = !DILocation(line: 52, column: 51, scope: !4307)
!4326 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h008aac30a1d7221eE", scope: !1114, file: !4262, line: 58, type: !4327, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4330)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!415, !4329, !12}
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}", baseType: !4202, size: 64, align: 64, dwarfAddressSpace: 0)
!4330 = !{!4331, !4332}
!4331 = !DILocalVariable(name: "r", arg: 2, scope: !4326, file: !4262, line: 58, type: !12)
!4332 = !DILocalVariable(arg: 1, scope: !4326, file: !4262, line: 58, type: !4329)
!4333 = !DILocation(line: 58, column: 70, scope: !4326)
!4334 = !DILocation(line: 58, column: 71, scope: !4326)
!4335 = !DILocation(line: 58, column: 74, scope: !4326)
!4336 = !DILocation(line: 58, column: 92, scope: !4326)
!4337 = distinct !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17ha022e0a6cd345ccbE", scope: !94, file: !4262, line: 63, type: !4338, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4341)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{!9, !4340}
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4341 = !{!4342}
!4342 = !DILocalVariable(name: "self", arg: 1, scope: !4337, file: !4262, line: 63, type: !4340)
!4343 = !DILocation(line: 63, column: 25, scope: !4337)
!4344 = !DILocation(line: 64, column: 9, scope: !4337)
!4345 = !DILocation(line: 65, column: 6, scope: !4337)
!4346 = distinct !DISubprogram(name: "deref", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e37451526df444dE", scope: !4347, file: !4262, line: 71, type: !4348, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4350)
!4347 = !DINamespace(name: "{impl#1}", scope: !14)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!317, !4340}
!4350 = !{!4351}
!4351 = !DILocalVariable(name: "self", arg: 1, scope: !4346, file: !4262, line: 71, type: !4340)
!4352 = !DILocation(line: 71, column: 14, scope: !4346)
!4353 = !DILocation(line: 72, column: 26, scope: !4346)
!4354 = !DILocation(line: 72, column: 23, scope: !4346)
!4355 = !DILocation(line: 72, column: 10, scope: !4346)
!4356 = !DILocation(line: 73, column: 6, scope: !4346)
!4357 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17he056234f3602d585E", scope: !4358, file: !4262, line: 77, type: !4359, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4361)
!4358 = !DINamespace(name: "{impl#2}", scope: !14)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!348, !4272}
!4361 = !{!4362, !4363}
!4362 = !DILocalVariable(name: "self", arg: 1, scope: !4357, file: !4262, line: 77, type: !4272)
!4363 = !DILocalVariable(name: "next_index", scope: !4364, file: !4262, line: 78, type: !9, align: 8)
!4364 = distinct !DILexicalBlock(scope: !4357, file: !4262, line: 78, column: 9)
!4365 = !DILocation(line: 77, column: 18, scope: !4357)
!4366 = !DILocation(line: 78, column: 26, scope: !4357)
!4367 = !DILocation(line: 78, column: 13, scope: !4364)
!4368 = !DILocation(line: 79, column: 27, scope: !4364)
!4369 = !DILocation(line: 79, column: 14, scope: !4364)
!4370 = !DILocation(line: 80, column: 6, scope: !4357)
!4371 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17haef581e8293cb4faE", scope: !4372, file: !4262, line: 84, type: !4373, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4375)
!4372 = !DINamespace(name: "{impl#3}", scope: !14)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!445, !4340, !464}
!4375 = !{!4376, !4377}
!4376 = !DILocalVariable(name: "self", arg: 1, scope: !4371, file: !4262, line: 84, type: !4340)
!4377 = !DILocalVariable(name: "f", arg: 2, scope: !4371, file: !4262, line: 84, type: !464)
!4378 = !DILocation(line: 84, column: 12, scope: !4371)
!4379 = !DILocation(line: 84, column: 19, scope: !4371)
!4380 = !DILocation(line: 85, column: 9, scope: !4371)
!4381 = !DILocation(line: 85, column: 32, scope: !4371)
!4382 = !DILocation(line: 86, column: 6, scope: !4371)
!4383 = distinct !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h524310d26fec40d5E", scope: !13, file: !4262, line: 101, type: !4384, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !24)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{!13}
!4386 = !DILocation(line: 103, column: 20, scope: !4383)
!4387 = !DILocation(line: 102, column: 9, scope: !4383)
!4388 = !DILocation(line: 109, column: 6, scope: !4383)
!4389 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17he095772a33ed67b7E", scope: !19, file: !4262, line: 132, type: !4390, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4392)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!19, !22, !22}
!4392 = !{!4393, !4394, !4395}
!4393 = !DILocalVariable(name: "start_addr", arg: 1, scope: !4389, file: !4262, line: 132, type: !22)
!4394 = !DILocalVariable(name: "end_addr", arg: 2, scope: !4389, file: !4262, line: 132, type: !22)
!4395 = !DILocalVariable(name: "last_byte", scope: !4396, file: !4262, line: 133, type: !22, align: 8)
!4396 = distinct !DILexicalBlock(scope: !4389, file: !4262, line: 133, column: 9)
!4397 = !DILocation(line: 132, column: 16, scope: !4389)
!4398 = !DILocation(line: 132, column: 33, scope: !4389)
!4399 = !DILocation(line: 133, column: 25, scope: !4389)
!4400 = !DILocation(line: 133, column: 13, scope: !4396)
!4401 = !DILocation(line: 135, column: 33, scope: !4396)
!4402 = !DILocation(line: 136, column: 31, scope: !4396)
!4403 = !DILocation(line: 134, column: 9, scope: !4396)
!4404 = !DILocation(line: 138, column: 6, scope: !4389)
!4405 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h7d078b191d29adecE", scope: !19, file: !4262, line: 141, type: !4406, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4409)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!415, !4408}
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4409 = !{!4410}
!4410 = !DILocalVariable(name: "self", arg: 1, scope: !4405, file: !4262, line: 141, type: !4408)
!4411 = !DILocation(line: 141, column: 21, scope: !4405)
!4412 = !DILocation(line: 142, column: 9, scope: !4405)
!4413 = !DILocation(line: 142, column: 36, scope: !4405)
!4414 = !DILocation(line: 143, column: 6, scope: !4405)
!4415 = distinct !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17h534325a16159babbE", scope: !19, file: !4262, line: 146, type: !4416, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!22, !4408}
!4418 = !{!4419}
!4419 = !DILocalVariable(name: "self", arg: 1, scope: !4415, file: !4262, line: 146, type: !4408)
!4420 = !DILocation(line: 146, column: 23, scope: !4415)
!4421 = !DILocation(line: 147, column: 9, scope: !4415)
!4422 = !DILocation(line: 148, column: 6, scope: !4415)
!4423 = distinct !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17hbd4af1c861e0ef66E", scope: !19, file: !4262, line: 151, type: !4416, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4424)
!4424 = !{!4425}
!4425 = !DILocalVariable(name: "self", arg: 1, scope: !4423, file: !4262, line: 151, type: !4408)
!4426 = !DILocation(line: 151, column: 21, scope: !4423)
!4427 = !DILocation(line: 152, column: 9, scope: !4423)
!4428 = !DILocation(line: 153, column: 6, scope: !4423)
!4429 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h5c9a52575bd523d7E", scope: !4430, file: !4262, line: 157, type: !4431, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4433)
!4430 = !DINamespace(name: "{impl#6}", scope: !14)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!445, !4408, !464}
!4433 = !{!4434, !4435}
!4434 = !DILocalVariable(name: "self", arg: 1, scope: !4429, file: !4262, line: 157, type: !4408)
!4435 = !DILocalVariable(name: "f", arg: 2, scope: !4429, file: !4262, line: 157, type: !464)
!4436 = !DILocation(line: 157, column: 12, scope: !4429)
!4437 = !DILocation(line: 157, column: 19, scope: !4429)
!4438 = !DILocation(line: 161, column: 13, scope: !4429)
!4439 = !DILocation(line: 158, column: 9, scope: !4429)
!4440 = !DILocation(line: 162, column: 13, scope: !4429)
!4441 = !{i64 0, i64 3}
!4442 = !DILocalVariable(name: "position", arg: 1, scope: !4443, file: !4444, line: 28, type: !9)
!4443 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt2v18Argument3new17hc9dce691d506e193E", scope: !865, file: !4444, line: 27, type: !4445, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4447)
!4444 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/rt/v1.rs", directory: "", checksumkind: CSK_MD5, checksum: "7ef9505ab9453fb51d2a0f5873641c71")
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!865, !9, !469, !139, !27, !875, !875}
!4447 = !{!4442, !4448, !4449, !4450, !4451, !4452}
!4448 = !DILocalVariable(name: "fill", arg: 2, scope: !4443, file: !4444, line: 29, type: !469)
!4449 = !DILocalVariable(name: "align", arg: 3, scope: !4443, file: !4444, line: 30, type: !139)
!4450 = !DILocalVariable(name: "flags", arg: 4, scope: !4443, file: !4444, line: 31, type: !27)
!4451 = !DILocalVariable(name: "precision", arg: 5, scope: !4443, file: !4444, line: 32, type: !875)
!4452 = !DILocalVariable(name: "width", arg: 6, scope: !4443, file: !4444, line: 33, type: !875)
!4453 = !DILocation(line: 28, column: 9, scope: !4443, inlinedAt: !4454)
!4454 = distinct !DILocation(line: 158, column: 9, scope: !4429)
!4455 = !DILocation(line: 29, column: 9, scope: !4443, inlinedAt: !4454)
!4456 = !DILocation(line: 30, column: 9, scope: !4443, inlinedAt: !4454)
!4457 = !DILocation(line: 31, column: 9, scope: !4443, inlinedAt: !4454)
!4458 = !DILocation(line: 32, column: 9, scope: !4443, inlinedAt: !4454)
!4459 = !DILocation(line: 33, column: 9, scope: !4443, inlinedAt: !4454)
!4460 = !DILocation(line: 35, column: 34, scope: !4443, inlinedAt: !4454)
!4461 = !DILocation(line: 35, column: 9, scope: !4443, inlinedAt: !4454)
!4462 = !DILocation(line: 28, column: 9, scope: !4443, inlinedAt: !4463)
!4463 = distinct !DILocation(line: 158, column: 9, scope: !4429)
!4464 = !DILocation(line: 29, column: 9, scope: !4443, inlinedAt: !4463)
!4465 = !DILocation(line: 30, column: 9, scope: !4443, inlinedAt: !4463)
!4466 = !DILocation(line: 31, column: 9, scope: !4443, inlinedAt: !4463)
!4467 = !DILocation(line: 32, column: 9, scope: !4443, inlinedAt: !4463)
!4468 = !DILocation(line: 33, column: 9, scope: !4443, inlinedAt: !4463)
!4469 = !DILocation(line: 35, column: 34, scope: !4443, inlinedAt: !4463)
!4470 = !DILocation(line: 35, column: 9, scope: !4443, inlinedAt: !4463)
!4471 = !DILocation(line: 164, column: 6, scope: !4429)
!4472 = distinct !DISubprogram(name: "from", linkageName: "_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17h32d60b0d6d39abe8E", scope: !4473, file: !4262, line: 218, type: !4474, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4482)
!4473 = !DINamespace(name: "{impl#7}", scope: !14)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!13, !4476}
!4476 = !DICompositeType(tag: DW_TAG_structure_type, name: "E820MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !4477, templateParams: !24, identifier: "25f119c0b9a2af62f5c60f91d5fcd1e7")
!4477 = !{!4478, !4479, !4480, !4481}
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !4476, file: !2, baseType: !22, size: 64, align: 64)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4476, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !4476, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_extended_attributes", scope: !4476, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!4482 = !{!4483, !4484, !4486}
!4483 = !DILocalVariable(name: "region", arg: 1, scope: !4472, file: !4262, line: 218, type: !4476)
!4484 = !DILocalVariable(name: "region_type", scope: !4485, file: !4262, line: 219, type: !26, align: 4)
!4485 = distinct !DILexicalBlock(scope: !4472, file: !4262, line: 219, column: 9)
!4486 = !DILocalVariable(name: "t", scope: !4487, file: !4262, line: 225, type: !27, align: 4)
!4487 = distinct !DILexicalBlock(scope: !4472, file: !4262, line: 225, column: 13)
!4488 = !DILocation(line: 218, column: 13, scope: !4472)
!4489 = !DILocation(line: 219, column: 13, scope: !4485)
!4490 = !DILocation(line: 225, column: 13, scope: !4487)
!4491 = !DILocation(line: 219, column: 27, scope: !4472)
!4492 = !DILocation(line: 225, column: 13, scope: !4472)
!4493 = !DILocation(line: 225, column: 18, scope: !4487)
!4494 = !DILocation(line: 220, column: 18, scope: !4472)
!4495 = !DILocation(line: 221, column: 18, scope: !4472)
!4496 = !DILocation(line: 222, column: 18, scope: !4472)
!4497 = !DILocation(line: 223, column: 18, scope: !4472)
!4498 = !DILocation(line: 224, column: 18, scope: !4472)
!4499 = !DILocation(line: 228, column: 36, scope: !4485)
!4500 = !DILocation(line: 228, column: 55, scope: !4485)
!4501 = !DILocation(line: 228, column: 75, scope: !4485)
!4502 = !DILocation(line: 228, column: 20, scope: !4485)
!4503 = !DILocation(line: 229, column: 13, scope: !4485)
!4504 = !{i32 0, i32 15}
!4505 = !DILocation(line: 227, column: 9, scope: !4485)
!4506 = !DILocation(line: 231, column: 6, scope: !4472)
!4507 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17h9ec888e86ca2235aE", scope: !4509, file: !4508, line: 53, type: !4514, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4516)
!4508 = !DIFile(filename: "src/bootinfo/mod.rs", directory: "/Users/yaw/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "a171ea6c439575860461f3a713fd0ff5")
!4509 = !DICompositeType(tag: DW_TAG_structure_type, name: "BootInfo", scope: !15, file: !2, size: 12608, align: 64, elements: !4510, templateParams: !24, identifier: "3b93e86eeba4eedaacd79998be92c13d")
!4510 = !{!4511, !4512, !4513}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "memory_map", scope: !4509, file: !2, baseType: !94, size: 12352, align: 64)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "tls_template", scope: !4509, file: !2, baseType: !109, size: 192, align: 64, offset: 12352)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "_non_exhaustive", scope: !4509, file: !2, baseType: !123, size: 8, align: 8, offset: 12544)
!4514 = !DISubroutineType(types: !4515)
!4515 = !{!4509, !94, !4034, !22, !22}
!4516 = !{!4517, !4518, !4519, !4520, !4521}
!4517 = !DILocalVariable(name: "memory_map", arg: 1, scope: !4507, file: !4508, line: 54, type: !94)
!4518 = !DILocalVariable(name: "tls_template", arg: 2, scope: !4507, file: !4508, line: 55, type: !4034)
!4519 = !DILocalVariable(name: "recursive_page_table_addr", arg: 3, scope: !4507, file: !4508, line: 56, type: !22)
!4520 = !DILocalVariable(name: "physical_memory_offset", arg: 4, scope: !4507, file: !4508, line: 57, type: !22)
!4521 = !DILocalVariable(name: "tls_template", scope: !4522, file: !4508, line: 59, type: !109, align: 8)
!4522 = distinct !DILexicalBlock(scope: !4507, file: !4508, line: 59, column: 9)
!4523 = !DILocation(line: 54, column: 9, scope: !4507)
!4524 = !DILocation(line: 55, column: 9, scope: !4507)
!4525 = !DILocation(line: 56, column: 9, scope: !4507)
!4526 = !DILocation(line: 57, column: 9, scope: !4507)
!4527 = !DILocation(line: 59, column: 13, scope: !4522)
!4528 = !DILocation(line: 59, column: 51, scope: !4507)
!4529 = !DILocation(line: 59, column: 28, scope: !4507)
!4530 = !DILocation(line: 66, column: 13, scope: !4522)
!4531 = !DILocation(line: 64, column: 9, scope: !4522)
!4532 = !DILocation(line: 73, column: 6, scope: !4507)
!4533 = distinct !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17hc0491335b5f4e2d6E", scope: !4509, file: !4508, line: 81, type: !4534, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4537)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!4034, !4536}
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::BootInfo", baseType: !4509, size: 64, align: 64, dwarfAddressSpace: 0)
!4537 = !{!4538}
!4538 = !DILocalVariable(name: "self", arg: 1, scope: !4533, file: !4508, line: 81, type: !4536)
!4539 = !DILocation(line: 81, column: 25, scope: !4533)
!4540 = !DILocation(line: 82, column: 12, scope: !4533)
!4541 = !DILocation(line: 85, column: 13, scope: !4533)
!4542 = !DILocation(line: 82, column: 9, scope: !4533)
!4543 = !DILocation(line: 83, column: 18, scope: !4533)
!4544 = !DILocation(line: 83, column: 13, scope: !4533)
!4545 = !DILocation(line: 87, column: 6, scope: !4533)
!4546 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h6cda603356b72d76E", scope: !4547, file: !4262, line: 90, type: !4548, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4550)
!4547 = !DINamespace(name: "{impl#8}", scope: !14)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{!445, !12, !464}
!4550 = !{!4551, !4552}
!4551 = !DILocalVariable(name: "self", arg: 1, scope: !4546, file: !4262, line: 90, type: !12)
!4552 = !DILocalVariable(name: "f", arg: 2, scope: !4546, file: !4262, line: 90, type: !464)
!4553 = !DILocation(line: 90, column: 10, scope: !4546)
!4554 = !DILocation(line: 96, column: 5, scope: !4546)
!4555 = !DILocation(line: 90, column: 15, scope: !4546)
!4556 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17hb288a4d2801ef922E", scope: !4557, file: !4262, line: 168, type: !4558, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4560)
!4557 = !DINamespace(name: "{impl#21}", scope: !14)
!4558 = !DISubroutineType(types: !4559)
!4559 = !{!445, !60, !464}
!4560 = !{!4561, !4562}
!4561 = !DILocalVariable(name: "self", arg: 1, scope: !4556, file: !4262, line: 168, type: !60)
!4562 = !DILocalVariable(name: "f", arg: 2, scope: !4556, file: !4262, line: 168, type: !464)
!4563 = !DILocation(line: 168, column: 10, scope: !4556)
!4564 = !DILocation(line: 168, column: 14, scope: !4556)
!4565 = !DILocation(line: 168, column: 15, scope: !4556)
!4566 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h0dd3b2e79a1f0df1E", scope: !4567, file: !4262, line: 208, type: !4568, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4571)
!4567 = !DINamespace(name: "{impl#28}", scope: !14)
!4568 = !DISubroutineType(types: !4569)
!4569 = !{!445, !4570, !464}
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::E820MemoryRegion", baseType: !4476, size: 64, align: 64, dwarfAddressSpace: 0)
!4571 = !{!4572, !4573}
!4572 = !DILocalVariable(name: "self", arg: 1, scope: !4566, file: !4262, line: 208, type: !4570)
!4573 = !DILocalVariable(name: "f", arg: 2, scope: !4566, file: !4262, line: 208, type: !464)
!4574 = !DILocation(line: 208, column: 10, scope: !4566)
!4575 = !DILocation(line: 212, column: 5, scope: !4566)
!4576 = !DILocation(line: 213, column: 5, scope: !4566)
!4577 = !DILocation(line: 214, column: 5, scope: !4566)
!4578 = !DILocation(line: 208, column: 15, scope: !4566)
!4579 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17h572b6d57226f2120E", scope: !4580, file: !4508, line: 22, type: !4581, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4583)
!4580 = !DINamespace(name: "{impl#1}", scope: !15)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{!445, !4536, !464}
!4583 = !{!4584, !4585}
!4584 = !DILocalVariable(name: "self", arg: 1, scope: !4579, file: !4508, line: 22, type: !4536)
!4585 = !DILocalVariable(name: "f", arg: 2, scope: !4579, file: !4508, line: 22, type: !464)
!4586 = !DILocation(line: 22, column: 10, scope: !4579)
!4587 = !DILocation(line: 45, column: 5, scope: !4579)
!4588 = !DILocation(line: 46, column: 5, scope: !4579)
!4589 = !DILocation(line: 22, column: 15, scope: !4579)
!4590 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e156cacff61ac68E", scope: !4591, file: !4508, line: 103, type: !4592, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4595)
!4591 = !DINamespace(name: "{impl#2}", scope: !15)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!445, !4594, !464}
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!4595 = !{!4596, !4597}
!4596 = !DILocalVariable(name: "self", arg: 1, scope: !4590, file: !4508, line: 103, type: !4594)
!4597 = !DILocalVariable(name: "f", arg: 2, scope: !4590, file: !4508, line: 103, type: !464)
!4598 = !DILocation(line: 103, column: 10, scope: !4590)
!4599 = !DILocation(line: 111, column: 5, scope: !4590)
!4600 = !DILocation(line: 115, column: 5, scope: !4590)
!4601 = !DILocation(line: 103, column: 15, scope: !4590)
