; ModuleID = 'bootloader.85e3987a0f8903c2-cgu.0'
source_filename = "bootloader.85e3987a0f8903c2-cgu.0"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-obuasi-unknown-none"

%"bootinfo::memory_map::MemoryRegion" = type { { i64, i64 }, i32, [1 x i32] }
%"core::ops::range::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, { ptr, i64 } }
%"core::fmt::rt::UnsafeArg" = type { {} }
%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>" = type { %"bootinfo::memory_map::MemoryRegion" }
%"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<u8>" = type { ptr, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}" = type {}
%"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}" = type { ptr, { ptr, i64 }, ptr }
%"core::option::Option<core::fmt::Arguments<'_>>" = type { ptr, [5 x i64] }
%"bootinfo::TlsTemplate" = type { i64, i64, i64 }
%"core::option::Option<bootinfo::TlsTemplate>::Some" = type { [1 x i64], %"bootinfo::TlsTemplate" }
%"{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73}" = type {}
%"bootinfo::memory_map::MemoryMap" = type { [64 x %"bootinfo::memory_map::MemoryRegion"], i64 }
%"core::fmt::builders::DebugList<'_, '_>" = type { %"core::fmt::builders::DebugInner<'_, '_>" }
%"core::fmt::builders::DebugInner<'_, '_>" = type { ptr, i8, i8, [6 x i8] }
%"core::fmt::rt::Placeholder" = type { { i64, i64 }, { i64, i64 }, i64, i32, i32, i8, [7 x i8] }
%"bootinfo::memory_map::E820MemoryRegion" = type { i64, i64, i32, i32 }
%"bootinfo::BootInfo" = type { %"bootinfo::memory_map::MemoryMap", %"bootinfo::TlsTemplate", i8, [7 x i8] }
%"core::option::Option<bootinfo::TlsTemplate>" = type { i64, [3 x i64] }

@alloc_fa017189c529f9a37ad81f1b7f28d734 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the range is within the slice" }>, align 1
@alloc_e4c0784e4975da2173a354afd99193ad = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: slice::get_unchecked_mut requires that the range is within the slice" }>, align 1
@alloc_763310d78c99c2c1ad3f8a9821e942f3 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"is_nonoverlapping: `size_of::<T>() * count` overflows a usize" }>, align 1
@alloc_cf71ba46b07f75a509e946b584ee4f31 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs" }>, align 1
@alloc_4a2c03a9003a987502ff0d6c9c75c0f0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\0E\0A\00\00\0A\00\00\00" }>, align 8
@alloc_8df0580a595a87d56789d20c7318e185 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_2f5fae7ca9908dec8d13988b47dc9dc4 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned and non-null" }>, align 1
@vtable.0 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17hb941c6545ab6374fE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h05876b06ccd65c5fE" }>, align 8, !dbg !0
@alloc_c2ea93c90919bb7b1e482f917e413fa1 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc_4b40c6b3614ea02c5f31ead026cec0d4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00L\01\00\008\00\00\00" }>, align 8
@str.1 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc_91c7fa63c3cfeaa3c795652d5cf060e4 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc_560206a49c61adca6f3f0639a12632eb = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_91c7fa63c3cfeaa3c795652d5cf060e4, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_29183d143b1e5214e3e66c35cbecd132 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00M\01\00\00\0D\00\00\00" }>, align 8
@alloc_513570631223a12912d85da2bec3b15a = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc_22bd94ddb1ad8522c31de2db3dc6d917 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00C\01\00\00\0D\00\00\00" }>, align 8
@alloc_062d8212fd02b81dce3f023edbf3244d = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs" }>, align 1
@alloc_5ec3decc36c5e739d2ee906473d1e146 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_062d8212fd02b81dce3f023edbf3244d, [16 x i8] c"k\00\00\00\00\00\00\00\E3\02\00\00\0C\00\00\00" }>, align 8
@str.2 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc_8b72e65625de3e221368553edb4591ff = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs" }>, align 1
@alloc_a293008768a4943f020befa7eda6a4e3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8b72e65625de3e221368553edb4591ff, [16 x i8] c"k\00\00\00\00\00\00\00O\01\00\00\05\00\00\00" }>, align 8
@str.3 = internal constant [31 x i8] c"attempt to negate with overflow"
@alloc_48ea3a20d67f003bf521503306070782 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8b72e65625de3e221368553edb4591ff, [16 x i8] c"k\00\00\00\00\00\00\00\F5\04\00\00\05\00\00\00" }>, align 8
@str.4 = internal constant [33 x i8] c"attempt to subtract with overflow"
@str.5 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc_444495105b9016883a01942a28847d22 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs" }>, align 1
@alloc_50d1e257ccd56aaa3f8677a989ec63c7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_444495105b9016883a01942a28847d22, [16 x i8] c"m\00\00\00\00\00\00\00\CA\01\00\00\1D\00\00\00" }>, align 8
@alloc_29f87e6ac6e7e4317253d26531c5c81c = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc_aa1e5897789d5224e95b74e3ee1cddd7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\C7\03\00\00&\00\00\00" }>, align 8
@str.6 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc_8aeb7488dd45ec4f785c1b9d2864062e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\C9\03\00\00\09\00\00\00" }>, align 8
@str.7 = internal constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc_c29284cfeec3ebf1725665bca1c2de8c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\CA\03\00\00\09\00\00\00" }>, align 8
@alloc_546a48d82dbbd37bfd409d4513b73f46 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::swap_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_060c9902dd9c1943dd37aa261fd2cc25 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\E3\03\00\00\09\00\00\00" }>, align 8
@alloc_981fd9513041e1603a1d1d7b668a749d = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_b7474065d782af00c4610bb4ef55210b = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_20b3d155afd5c58c42e598b7e6d186ef = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc_cc91f7045aeea4ab0f301c62c00dba06 = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_4bcb15f15595c17bc1913134e3b35d04 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00E\06\00\00\1A\00\00\00" }>, align 8
@alloc_fad0cd83b7d1858a846a172eb260e593 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc_60ac762d06592b2ab3358175d7a7c295 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_fad0cd83b7d1858a846a172eb260e593, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_a5a2cefd12e4dcb74529f6c9c92f7a5b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00@\06\00\00\0D\00\00\00" }>, align 8
@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc_2da2f38e2890c713b5fd9b5d1b036a1b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\003\03\00\00\09\00\00\00" }>, align 8
@alloc_cb50775363ffdd1238910b6e9573721d = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"unsafe precondition(s) violated: ptr::sub_ptr requires `this >= origin`" }>, align 1
@alloc_fddaeef1fe1a23c45402ef8f58614acb = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc_9a72dc1c87ddefcce62e4b5ab68e5150 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\FF" }>, align 1
@alloc_0e767b22ac99e9123f3c482417f77f98 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc_2b33c20cb1fa00ea93074be2fc812778 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\EE\07\00\00M\00\00\00" }>, align 8
@alloc_3dc073651148de734d2593768efc16e9 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: slice::split_at_mut_unchecked requires the index to be within the slice" }>, align 1
@alloc_dd0dc542054f5a3bd5e0287046a20794 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: a.len() == n" }>, align 1
@alloc_836c1f4c9540fa2f34ab28165c323a7f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\D3\03\00\00\0D\00\00\00" }>, align 8
@alloc_deedf7aeab1a7c66b5420b58a4093bcc = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: b.len() == n" }>, align 1
@alloc_1bcf5bda9b6f611d7471636ca9d4f5f8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\D4\03\00\00\0D\00\00\00" }>, align 8
@alloc_15970d6f565ff3590815c28c16d091ab = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DA\03\00\00!\00\00\00" }>, align 8
@alloc_e23d6d556e995f13ab5be560c21bb8ad = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DA\03\00\00.\00\00\00" }>, align 8
@alloc_2874cd250a47eb024ff3ff4020dcadd3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DE\03\00\00 \00\00\00" }>, align 8
@alloc_d2f1f3114c13257ad7e839c193b3d246 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DE\03\00\00-\00\00\00" }>, align 8
@alloc_00177c75c1aa115210794fb278001f99 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DE\03\00\00+\00\00\00" }>, align 8
@alloc_1536545d74a155d07fdca49c5c38acad = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DF\03\00\00\11\00\00\00" }>, align 8
@alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_140877f72603b53a2926afdc5b6562c1 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: v.len() >= 2" }>, align 1
@alloc_d80990e1774d1c38795ebd415913ef0a = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs" }>, align 1
@alloc_6932146a2b5945f5118e7e865cb7ff4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\\\00\00\00\05\00\00\00" }>, align 8
@alloc_2b18b37ae84d61762f070ebc082ffd36 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\00\00\00F\00\00\00" }>, align 8
@alloc_141337dbddbbf875f1e651a897c1c26f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00'\00\00\00\05\00\00\00" }>, align 8
@alloc_90f4b6dda14e5cb7081926ef9c658315 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00*\00\00\00\0D\00\00\00" }>, align 8
@alloc_e41efc6332efd19972427a8ca6f9ac9d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00G\00\00\00\1A\00\00\00" }>, align 8
@alloc_58ad8f51a899855563824ecf5845da11 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E6\02\00\00\11\00\00\00" }>, align 8
@alloc_9c6c9ee901e1efe26abaab242c9efe33 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\02\00\00\11\00\00\00" }>, align 8
@alloc_414d4fde0aa22c5681d0a1d27912b5f7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E8\02\00\00\11\00\00\00" }>, align 8
@alloc_9c3bacaef2c1fb5b2110cb0126a29159 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\1A\03\00\00\0A\00\00\00" }>, align 8
@alloc_1798bf1890f8c6baef4715aa27e66302 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\F8\02\00\00\11\00\00\00" }>, align 8
@alloc_47ba91883958baca914cf8714181d6a0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\07\03\00\00\1C\00\00\00" }>, align 8
@alloc_c801dc3e2a99f41efc7ba62d664a8fc6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\07\03\00\00/\00\00\00" }>, align 8
@alloc_e78b6e8a10d683361143041a455ac9cc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\C4\02\00\00\13\00\00\00" }>, align 8
@alloc_d015b2e8e332fb0de0e3176594cf72c3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00+\00\00\00" }>, align 8
@alloc_a4d3ab5094767756661cb34f30f25f6a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CE\02\00\00\11\00\00\00" }>, align 8
@alloc_86ed8f525deb34bde392a8c7969d491a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D1\02\00\00\14\00\00\00" }>, align 8
@alloc_9de31c2f3e107da8643cdbb9cf5d3a37 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D1\02\00\00\0F\00\00\00" }>, align 8
@alloc_f8322b69080b1e19bc4df073038a414d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00l\02\00\00\07\00\00\00" }>, align 8
@alloc_23975e137ecce848c3167e283c742672 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00m\02\00\00\18\00\00\00" }>, align 8
@alloc_3ea9d353dbaea466ca156be00652f893 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00n\02\00\00\16\00\00\00" }>, align 8
@alloc_6b88286adc8b79b2ce0db9f94ea83bc3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\02\00\00\11\00\00\00" }>, align 8
@alloc_8e2427a08ca169cc6ff7005ac72ee42b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\8C\02\00\00\11\00\00\00" }>, align 8
@alloc_a3d74f0286c2085b92fea29554951deb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\9A\02\00\00\0D\00\00\00" }>, align 8
@alloc_ab04609f7a3d4db79cb07850600e7ebf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\9F\02\00\00\05\00\00\00" }>, align 8
@alloc_fe4e881dfa6c70f91499a9b97cada070 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00_\01\00\00&\00\00\00" }>, align 8
@alloc_2417cbaa5b767dc07fcb426311fbedcd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00e\01\00\00\11\00\00\00" }>, align 8
@alloc_7d4914bfaafcfa4692cc10dc5496d4e2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00s\01\00\00\1B\00\00\00" }>, align 8
@alloc_8221bdf38a3766feb9723f333c95dc9e = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"assertion failed: block_l <= BLOCK && block_r <= BLOCK" }>, align 1
@alloc_d98b9ce84085f5d91faa526ef2b40520 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00u\01\00\00\0D\00\00\00" }>, align 8
@alloc_5d32d2daaec9cf0d402f2dc37af0ea6f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00*\00\00\00" }>, align 8
@alloc_a3f9d5911d83d2dfd6ee66814bbe6049 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"assertion failed: width(l, r) == block_l + block_r" }>, align 1
@alloc_ea197cb372011b0fee90d7558b246bfb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00\0D\00\00\00" }>, align 8
@alloc_0a48b3a7e93a3fb66a7841c604466c03 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D2\01\00\00*\00\00\00" }>, align 8
@alloc_2107e90e8c7dda0adfd21e59e3b7e9ee = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\DB\01\00\000\00\00\00" }>, align 8
@alloc_fbd29d12e7b221b5790588e8407e814c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\19\02\00\00\09\00\00\00" }>, align 8
@alloc_0ba58876d11be66a75ed3c6ebb0e6bf5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\1E\02\00\00$\00\00\00" }>, align 8
@alloc_23d83fb97dc5ddd699c8f80f695d1b3b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\02\02\00\00\09\00\00\00" }>, align 8
@alloc_255f6db4d0c02746fb4a9b785ea6e516 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D6\01\00\007\00\00\00" }>, align 8
@alloc_3fa281490ed5627b0d5acda868d81af0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\01\00\00.\00\00\00" }>, align 8
@alloc_60cd9f07f649265b0b23f897aad9bad7 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: mem::size_of::<T>() > 0" }>, align 1
@alloc_9dd923649e31f13c3223b59f17507a2e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\01\00\00\09\00\00\00" }>, align 8
@alloc_c103c0ba323341afbed17e7fe7e651ca = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Y\01\00\00\09\00\00\00" }>, align 8
@alloc_bd81c17235b1444753a1935a813b485f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D7\00\00\00K\00\00\00" }>, align 8
@alloc_e743259f65f79dce5fdf7e439c96cb01 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\00\00\00\11\00\00\00" }>, align 8
@alloc_2300fc4e056106188d3f21c349fb8e76 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\10\00\00\00" }>, align 8
@alloc_0cd04c6390f55d83a74a72e18ad99930 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\0B\00\00\00" }>, align 8
@alloc_6375fc5b40a3eb23357cbfc852cbad46 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\00-\00\00\00" }>, align 8
@alloc_51848abd31708fd9bd4e978ad4e2fdf6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\004\00\00\00" }>, align 8
@alloc_f9be158d94973e224ba789cadbf1dedd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EE\00\00\00.\00\00\00" }>, align 8
@alloc_5429279aa16fa0cdfc25e6fc8726a06a = private unnamed_addr constant <{ [46 x i8] }> <{ [46 x i8] c"assertion failed: offset != 0 && offset <= len" }>, align 1
@alloc_99bb945c879f5888798b28005543a365 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\9B\00\00\00\05\00\00\00" }>, align 8
@alloc_84dd4b5e4fcf2936e5d9a464f68d21a0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\A3\00\00\00\1F\00\00\00" }>, align 8
@alloc_6973cb22fd5a814eff7046b5b9169c77 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"assertion failed: offset != 0 && offset <= len && len >= 2" }>, align 1
@alloc_15caf4948137b9f7be8cedfe4929bfd3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\B4\00\00\00\05\00\00\00" }>, align 8
@alloc_88ab3158e927e7ca4409979d22ea4cb2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\BD\00\00\00\1F\00\00\00" }>, align 8
@alloc_4dd2b64e82acc619552f668d34f29c8f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00F\03\00\00\0D\00\00\00" }>, align 8
@alloc_19f49682e04665ec7ede3a6ef54d1aee = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Z\03\00\00\1D\00\00\00" }>, align 8
@alloc_1b5a7ab33f31d7848ce2eba75dc6a5bc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\03\00\00\1B\00\00\00" }>, align 8
@alloc_a32e4fb3c0f6b64d94c2eaa96e2bfada = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00e\03\00\00&\00\00\00" }>, align 8
@alloc_0608174a0bc0666a7dcff4551d86b257 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00i\03\00\00\1F\00\00\00" }>, align 8
@alloc_650641bd47e89fd13d5dee5a5608b8cc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00j\03\00\00$\00\00\00" }>, align 8
@alloc_cf3cd18be6459960034efdfa6914a618 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00k\03\00\00\16\00\00\00" }>, align 8
@alloc_dc7cc06f65f47d89307805f9ed1e1cb4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00 \01\00\00\0B\00\00\00" }>, align 8
@alloc_db9d608c45a49896807e0b64559ac840 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00!\01\00\00\19\00\00\00" }>, align 8
@alloc_8c633453631874cfb45135c562495182 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\01\01\00\00\1D\00\00\00" }>, align 8
@alloc_cced75eb33ad0d231589a125c7f2c71e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\07\01\00\00\10\00\00\00" }>, align 8
@alloc_02d41e7169598a3cfcfd3f0d1c833ec2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00#\00\00\00" }>, align 8
@alloc_794be56d42be9995e3a84c84d26159ed = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\000\00\00\00" }>, align 8
@alloc_d32b57d7e285e3b164a125d44291af3f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00.\00\00\00" }>, align 8
@alloc_3f7ac4164e6f54924783af0ed6bc3c8d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00\11\00\00\00" }>, align 8
@alloc_5714221f35142e87516e8a17190398c5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00\1A\00\00\00" }>, align 8
@alloc_8b3b0b984669970c12a2c2d899b23d16 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00$\00\00\00" }>, align 8
@alloc_4685547f2c3cd5dc1819afd3ce6280d4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\14\01\00\00\0F\00\00\00" }>, align 8
@alloc_a32d8ca4e4d506b0d34a470e4dcb5cd1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\006\02\00\00\0B\00\00\00" }>, align 8
@alloc_e52ab9305e2b15d74c4e9ac02c87db27 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\007\02\00\00\1C\00\00\00" }>, align 8
@alloc_0b2a738361d208826a072b92b3acda46 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\008\02\00\00\1A\00\00\00" }>, align 8
@alloc_0b6e8a57da681e1fb7c4d0e2204e6a73 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Q\02\00\005\00\00\00" }>, align 8
@alloc_a38e39bd8e066eb11cb79be2a1a30355 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00R\02\00\00\11\00\00\00" }>, align 8
@alloc_cfd2041e9fc8e4305f94bb3b03723245 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00(\00\00\00" }>, align 8
@alloc_b173b94e8487e85973e5816a197e44e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00\0A\00\00\00" }>, align 8
@alloc_62f31cc339340f8d2589d3fbbff1b89f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\02\00\00\07\00\00\00" }>, align 8
@alloc_96c6545aa6432add279027414fe61766 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00M\02\00\00\11\00\00\00" }>, align 8
@alloc_6749a29ac1ba34852d860084123a9bad = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\86\03\00\00\11\00\00\00" }>, align 8
@alloc_b3b3c2a7efcea294ef431b7ed1abebea = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the index is within the slice" }>, align 1
@alloc_cb9e1adc7c2835de63b1ee25a132c405 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs" }>, align 1
@alloc_ea7ac5ae4966185c9a90e62c47f3114d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cb9e1adc7c2835de63b1ee25a132c405, [16 x i8] c"n\00\00\00\00\00\00\00\84\00\00\00\01\00\00\00" }>, align 8
@alloc_377fe4797e3690987ab15f0122f4880b = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"too many memory regions in memory map" }>, align 1
@alloc_7d15286e500c88a119425ae53316340e = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs" }>, align 1
@alloc_7196c88dea27a90737fe52164bfa6d4b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\1C\00\00\00\09\00\00\00" }>, align 8
@alloc_e65e0ba17a4d9de8b42e16f5ae86b726 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00 \00\00\00\09\00\00\00" }>, align 8
@alloc_6248fd711ab5313acabe549160484394 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00!\00\00\00\09\00\00\00" }>, align 8
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc_a9a5f479a6ab7535c0aea725524f514f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00H\00\00\00\16\00\00\00" }>, align 8
@alloc_122b717f2feef6dc36b614b35851cf3d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00O\00\00\00\1A\00\00\00" }>, align 8
@alloc_cad8f68633be23a5a8047bc131d14ec3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\85\00\00\00\19\00\00\00" }>, align 8
@alloc_9e0090e7731cd791b1d2228aa613acc1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\88\00\00\00\1F\00\00\00" }>, align 8
@alloc_57ce308cfbee0eeaa37d0e2ac37f242e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\93\00\00\00\09\00\00\00" }>, align 8
@alloc_4848cdfc410b3d9eebbe30a8648bbf6f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\98\00\00\00\09\00\00\00" }>, align 8
@alloc_67fee3923a1253e576603db2a7cc3769 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"FrameRange(" }>, align 1
@alloc_07656b3a0de61ce5c628545e169e4a19 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".." }>, align 1
@alloc_9e3f62b0e6490cc45676dc85f910c2d0 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc_b835a9d6c252fc7d7d9309678c4406b9 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_67fee3923a1253e576603db2a7cc3769, [8 x i8] c"\0B\00\00\00\00\00\00\00", ptr @alloc_07656b3a0de61ce5c628545e169e4a19, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_82eaa0d65834937aa85ffd9cf79e73a5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E4\00\00\007\00\00\00" }>, align 8
@alloc_4ca1ac426b102a9acc7fcf913cf4c660 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"invalid region type " }>, align 1
@alloc_0a0c8f921f96ace4b9d73a9fb1f3a7e8 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_4ca1ac426b102a9acc7fcf913cf4c660, [8 x i8] c"\14\00\00\00\00\00\00\00" }>, align 8
@alloc_7aa2ce3965daa798a811db4359705d8b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E1\00\00\00\12\00\00\00" }>, align 8
@alloc_2fa382d66c8b05cee83d1e636a456d83 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"MemoryRegion" }>, align 1
@alloc_c6d312f4fb2564cdde1868738b40e953 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"range" }>, align 1
@vtable.8 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h662fe180decc0f68E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h1312abfded4f318bE" }>, align 8, !dbg !44
@alloc_24a09d864e93eaea8a967d85ad5fb14b = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"region_type" }>, align 1
@vtable.9 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h398633e1e3945dc3E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h564186a1046fd108E" }>, align 8, !dbg !52
@alloc_3c5b86a9b7fa1d302afea08936e483c5 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Usable" }>, align 1
@alloc_3e93a37ed61282b1c76f7355bd470201 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"InUse" }>, align 1
@alloc_f09f4d0dabebc98449d61db8d60067bb = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Reserved" }>, align 1
@alloc_405580fa38aa12693d369698203e043e = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"AcpiReclaimable" }>, align 1
@alloc_497f8f871d9b9bd5767a37917b988618 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"AcpiNvs" }>, align 1
@alloc_2db2f360d33be2fea5593ededc5fb904 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"BadMemory" }>, align 1
@alloc_bfff067230aa23bc581d3ad54a803735 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Kernel" }>, align 1
@alloc_272cabb5c5fb66cc8e055c6a08dd5a38 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"KernelStack" }>, align 1
@alloc_84113867da1e74b2269b5cf897cae626 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"PageTable" }>, align 1
@alloc_88f77a4216025d9c2616c4e0631b580d = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"Bootloader" }>, align 1
@alloc_296c708f84ba4aacbf601faaf01ee90e = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"FrameZero" }>, align 1
@alloc_59ba7b9f7211443cd55a366616eef46a = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc_1f9c4cc73f4140a97f2cf1f721646a68 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"BootInfo" }>, align 1
@alloc_3faf0b3374c02c8ecbb0aba47045e793 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Package" }>, align 1
@alloc_4f458a5ac3a6382b3750f993ab870080 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"NonExhaustive" }>, align 1

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h83a596239b62a04fE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !92 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %new_len.dbg.spill = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !113, metadata !DIExpression()), !dbg !121
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !114, metadata !DIExpression()), !dbg !122
  call void @llvm.dbg.declare(metadata ptr %this, metadata !115, metadata !DIExpression()), !dbg !123
  store i64 %self.0, ptr %this, align 8, !dbg !124
  %4 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !124
  store i64 %self.1, ptr %4, align 8, !dbg !124
  br i1 true, label %bb1, label %bb2, !dbg !125

bb2:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hea570bbc3072774dE.exit", %start
  %new_len = sub nuw i64 %self.1, %self.0, !dbg !126
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !126
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !117, metadata !DIExpression()), !dbg !127
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_11 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbb1b5859ff6168a9E"(ptr %slice.0, i64 %slice.1) #10, !dbg !128
  store ptr %_11, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !129, metadata !DIExpression()), !dbg !140
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !139, metadata !DIExpression()), !dbg !142
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %self.0, !dbg !143
; call core::ptr::slice_from_raw_parts
  %5 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h0be5abcce6780766E(ptr %_0.i, i64 %new_len) #10, !dbg !144
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !144
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !144
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !145
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !145
  ret { ptr, i64 } %7, !dbg !145

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !125
  %9 = load i64, ptr %8, align 8, !dbg !125, !noundef !24
  %10 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !125
  %11 = load i64, ptr %10, align 8, !dbg !125, !noundef !24
  %12 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !125
  store i64 %9, ptr %12, align 8, !dbg !125
  %13 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !125
  store i64 %11, ptr %13, align 8, !dbg !125
  %14 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !125
  %15 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 0, !dbg !125
  store ptr %slice.0, ptr %15, align 8, !dbg !125
  %16 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 1, !dbg !125
  store i64 %slice.1, ptr %16, align 8, !dbg !125
  %17 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !125
  %18 = load i64, ptr %17, align 8, !dbg !125, !noundef !24
  %19 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !125
  %20 = load i64, ptr %19, align 8, !dbg !125, !noundef !24
  %21 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !125
  %22 = getelementptr inbounds { ptr, i64 }, ptr %21, i32 0, i32 0, !dbg !125
  %23 = load ptr, ptr %22, align 8, !dbg !125, !noundef !24
  %24 = getelementptr inbounds { ptr, i64 }, ptr %21, i32 0, i32 1, !dbg !125
  %25 = load i64, ptr %24, align 8, !dbg !125, !noundef !24
  store i64 %18, ptr %this.dbg.spill.i, align 8
  %26 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %20, ptr %26, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !146, metadata !DIExpression()), !dbg !154
  store ptr %23, ptr %slice.dbg.spill.i, align 8
  %27 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %25, ptr %27, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !153, metadata !DIExpression()), !dbg !154
  %_3.i = icmp uge i64 %20, %18, !dbg !156
  br i1 %_3.i, label %bb1.i, label %bb4.i, !dbg !156

bb4.i:                                            ; preds = %bb1.i, %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_fa017189c529f9a37ad81f1b7f28d734, i64 97) #11, !dbg !158
  unreachable, !dbg !158

bb1.i:                                            ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_8.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17ha47c303ab005f629E"(ptr %23, i64 %25) #10, !dbg !159
  %_6.i = icmp ule i64 %20, %_8.i, !dbg !160
  br i1 %_6.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hea570bbc3072774dE.exit", label %bb4.i, !dbg !160

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hea570bbc3072774dE.exit": ; preds = %bb1.i
  br label %bb2, !dbg !125
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc580f5cbc6732e7eE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !161 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %new_len.dbg.spill = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !169, metadata !DIExpression()), !dbg !175
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !170, metadata !DIExpression()), !dbg !176
  call void @llvm.dbg.declare(metadata ptr %this, metadata !171, metadata !DIExpression()), !dbg !177
  store i64 %self.0, ptr %this, align 8, !dbg !178
  %4 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !178
  store i64 %self.1, ptr %4, align 8, !dbg !178
  br i1 true, label %bb1, label %bb2, !dbg !179

bb2:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h988f3603c7e138a1E.exit", %start
  %new_len = sub nuw i64 %self.1, %self.0, !dbg !180
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !180
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !173, metadata !DIExpression()), !dbg !181
  store ptr %slice.0, ptr %self.dbg.spill.i1, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %slice.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !182, metadata !DIExpression()), !dbg !191
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !193, metadata !DIExpression()), !dbg !200
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !202
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %self.0, !dbg !203
; call core::ptr::slice_from_raw_parts_mut
  %6 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h8df01f0fcf924fd5E(ptr %_0.i, i64 %new_len) #10, !dbg !204
  %_0.0 = extractvalue { ptr, i64 } %6, 0, !dbg !204
  %_0.1 = extractvalue { ptr, i64 } %6, 1, !dbg !204
  %7 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !205
  %8 = insertvalue { ptr, i64 } %7, i64 %_0.1, 1, !dbg !205
  ret { ptr, i64 } %8, !dbg !205

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !179
  %10 = load i64, ptr %9, align 8, !dbg !179, !noundef !24
  %11 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !179
  %12 = load i64, ptr %11, align 8, !dbg !179, !noundef !24
  %13 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !179
  store i64 %10, ptr %13, align 8, !dbg !179
  %14 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !179
  store i64 %12, ptr %14, align 8, !dbg !179
  %15 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !179
  %16 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 0, !dbg !179
  store ptr %slice.0, ptr %16, align 8, !dbg !179
  %17 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 1, !dbg !179
  store i64 %slice.1, ptr %17, align 8, !dbg !179
  %18 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !179
  %19 = load i64, ptr %18, align 8, !dbg !179, !noundef !24
  %20 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !179
  %21 = load i64, ptr %20, align 8, !dbg !179, !noundef !24
  %22 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !179
  %23 = getelementptr inbounds { ptr, i64 }, ptr %22, i32 0, i32 0, !dbg !179
  %24 = load ptr, ptr %23, align 8, !dbg !179, !noundef !24
  %25 = getelementptr inbounds { ptr, i64 }, ptr %22, i32 0, i32 1, !dbg !179
  %26 = load i64, ptr %25, align 8, !dbg !179, !noundef !24
  store i64 %19, ptr %this.dbg.spill.i, align 8
  %27 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %21, ptr %27, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !206, metadata !DIExpression()), !dbg !213
  store ptr %24, ptr %slice.dbg.spill.i, align 8
  %28 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %26, ptr %28, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !212, metadata !DIExpression()), !dbg !213
  %_3.i = icmp uge i64 %21, %19, !dbg !215
  br i1 %_3.i, label %bb1.i, label %bb4.i, !dbg !215

bb4.i:                                            ; preds = %bb1.i, %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_e4c0784e4975da2173a354afd99193ad, i64 101) #11, !dbg !217
  unreachable, !dbg !217

bb1.i:                                            ; preds = %bb1
  store ptr %24, ptr %self.dbg.spill.i2, align 8
  %29 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %26, ptr %29, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !218, metadata !DIExpression()), !dbg !223
; call core::ptr::metadata::metadata
  %_0.i3 = call i64 @_ZN4core3ptr8metadata8metadata17hc8ef30a845d81c17E(ptr %24, i64 %26) #10, !dbg !225
  %_6.i = icmp ule i64 %21, %_0.i3, !dbg !226
  br i1 %_6.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h988f3603c7e138a1E.exit", label %bb4.i, !dbg !226

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h988f3603c7e138a1E.exit": ; preds = %bb1.i
  br label %bb2, !dbg !179
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc851aaff882244beE"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !227 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !248, metadata !DIExpression()), !dbg !250
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !249, metadata !DIExpression()), !dbg !251
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !252
  br i1 %_3, label %bb1, label %bb2, !dbg !252

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !253
  br i1 %_9, label %bb3, label %bb4, !dbg !253

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h3a2c64103d45f668E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !254
  unreachable, !dbg !254

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h83a596239b62a04fE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !255
  %_15.0 = extractvalue { ptr, i64 } %5, 0, !dbg !255
  %_15.1 = extractvalue { ptr, i64 } %5, 1, !dbg !255
  %6 = insertvalue { ptr, i64 } poison, ptr %_15.0, 0, !dbg !256
  %7 = insertvalue { ptr, i64 } %6, i64 %_15.1, 1, !dbg !256
  ret { ptr, i64 } %7, !dbg !256

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h87acba8518b3e71aE(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !257
  unreachable, !dbg !257
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h00dbb4f262465463E"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !258 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !266, metadata !DIExpression()), !dbg !268
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !267, metadata !DIExpression()), !dbg !269
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !270
  br i1 %_3, label %bb1, label %bb2, !dbg !270

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !271
  br i1 %_9, label %bb3, label %bb4, !dbg !271

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h3a2c64103d45f668E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !272
  unreachable, !dbg !272

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc580f5cbc6732e7eE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !273
  %_17.0 = extractvalue { ptr, i64 } %5, 0, !dbg !273
  %_17.1 = extractvalue { ptr, i64 } %5, 1, !dbg !273
  %6 = insertvalue { ptr, i64 } poison, ptr %_17.0, 0, !dbg !274
  %7 = insertvalue { ptr, i64 } %6, i64 %_17.1, 1, !dbg !274
  ret { ptr, i64 } %7, !dbg !274

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h87acba8518b3e71aE(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !275
  unreachable, !dbg !275
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3ecb26fdf4fda53eE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !276 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !284, metadata !DIExpression()), !dbg !286
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !285, metadata !DIExpression()), !dbg !287
  store i64 0, ptr %_3, align 8, !dbg !288
  %3 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !288
  store i64 %self, ptr %3, align 8, !dbg !288
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !288
  %5 = load i64, ptr %4, align 8, !dbg !288, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !288
  %7 = load i64, ptr %6, align 8, !dbg !288, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h00dbb4f262465463E"(i64 %5, i64 %7, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !288
  %_0.0 = extractvalue { ptr, i64 } %8, 0, !dbg !288
  %_0.1 = extractvalue { ptr, i64 } %8, 1, !dbg !288
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !289
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1, !dbg !289
  ret { ptr, i64 } %10, !dbg !289
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h6ee02f0487be30d8E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !290 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !298, metadata !DIExpression()), !dbg !300
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !299, metadata !DIExpression()), !dbg !301
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !218, metadata !DIExpression()), !dbg !302
; call core::ptr::metadata::metadata
  %_0.i = call i64 @_ZN4core3ptr8metadata8metadata17hc8ef30a845d81c17E(ptr %slice.0, i64 %slice.1) #10, !dbg !304
  store i64 %self, ptr %_3, align 8, !dbg !305
  %3 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !305
  store i64 %_0.i, ptr %3, align 8, !dbg !305
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !305
  %5 = load i64, ptr %4, align 8, !dbg !305, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !305
  %7 = load i64, ptr %6, align 8, !dbg !305, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc580f5cbc6732e7eE"(i64 %5, i64 %7, ptr %slice.0, i64 %slice.1) #10, !dbg !305
  %_0.0 = extractvalue { ptr, i64 } %8, 0, !dbg !305
  %_0.1 = extractvalue { ptr, i64 } %8, 1, !dbg !305
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !306
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1, !dbg !306
  ret { ptr, i64 } %10, !dbg !306
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3aad44e1dfa59307E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !307 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !311, metadata !DIExpression()), !dbg !313
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !312, metadata !DIExpression()), !dbg !314
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !315
  br i1 %_3, label %bb1, label %bb2, !dbg !315

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h6ee02f0487be30d8E"(i64 %self, ptr %slice.0, i64 %slice.1) #10, !dbg !316
  %_11.0 = extractvalue { ptr, i64 } %3, 0, !dbg !316
  %_11.1 = extractvalue { ptr, i64 } %3, 1, !dbg !316
  %4 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0, !dbg !317
  %5 = insertvalue { ptr, i64 } %4, i64 %_11.1, 1, !dbg !317
  ret { ptr, i64 } %5, !dbg !317

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h445216967f01bfb6E(i64 %self, i64 %slice.1, ptr align 8 %0) #11, !dbg !318
  unreachable, !dbg !318
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5cea7d7c0b96f9fdE"(ptr align 8 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !319 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %_9 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !330, metadata !DIExpression()), !dbg !332
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !331, metadata !DIExpression()), !dbg !333
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17ha8a49470ed902c72E"(ptr align 8 %self) #10, !dbg !334
  %_4 = load i64, ptr %_5, align 8, !dbg !335, !noundef !24
  %_3 = icmp eq i64 %_4, -1, !dbg !335
  br i1 %_3, label %bb2, label %bb3, !dbg !335

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %self, i64 24, i1 false), !dbg !336
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %3 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17haaa6229c426d1dc3E"(ptr align 8 %_9) #10, !dbg !336
  %_8.0 = extractvalue { i64, i64 } %3, 0, !dbg !336
  %_8.1 = extractvalue { i64, i64 } %3, 1, !dbg !336
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h00dbb4f262465463E"(i64 %_8.0, i64 %_8.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !336
  %_0.0 = extractvalue { ptr, i64 } %4, 0, !dbg !336
  %_0.1 = extractvalue { ptr, i64 } %4, 1, !dbg !336
  %5 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !337
  %6 = insertvalue { ptr, i64 } %5, i64 %_0.1, 1, !dbg !337
  ret { ptr, i64 } %6, !dbg !337

bb2:                                              ; preds = %start
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17heed0cd5537bda532E(ptr align 8 %0) #11, !dbg !338
  unreachable, !dbg !338
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3dd50a8bdf5b4973E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !339 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !347, metadata !DIExpression()), !dbg !349
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !348, metadata !DIExpression()), !dbg !350
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h1644b1a76684955dE"(ptr sret(%"core::ops::range::RangeInclusive<usize>") align 8 %_3, i64 0, i64 %self) #10, !dbg !351
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5cea7d7c0b96f9fdE"(ptr align 8 %_3, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !351
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !351
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !351
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !352
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !352
  ret { ptr, i64 } %5, !dbg !352
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h05876b06ccd65c5fE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !353 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !412, metadata !DIExpression()), !dbg !414
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !413, metadata !DIExpression()), !dbg !415
  %_3 = load ptr, ptr %self, align 8, !dbg !416, !nonnull !24, !align !417, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h3f8332eb316026afE"(ptr align 8 %_3, ptr align 8 %f) #10, !dbg !418
  ret i1 %_0, !dbg !419
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h564186a1046fd108E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !420 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !425, metadata !DIExpression()), !dbg !429
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !426, metadata !DIExpression()), !dbg !430
  %_3 = load ptr, ptr %self, align 8, !dbg !431, !nonnull !24, !align !432, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h92390aaa9d0166f9E"(ptr align 4 %_3, ptr align 8 %f) #10, !dbg !433
  ret i1 %_0, !dbg !434
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h2a00735316d394b7E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !435 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %diff.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !441, metadata !DIExpression()), !dbg !452
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !442, metadata !DIExpression()), !dbg !453
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !443, metadata !DIExpression()), !dbg !454
  store ptr %src, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !455, metadata !DIExpression()), !dbg !460
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !462, metadata !DIExpression()), !dbg !469
  %_0.i3 = ptrtoint ptr %src to i64, !dbg !471
  store i64 %_0.i3, ptr %src_usize.dbg.spill, align 8, !dbg !472
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !444, metadata !DIExpression()), !dbg !473
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !455, metadata !DIExpression()), !dbg !474
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !462, metadata !DIExpression()), !dbg !476
  %_0.i = ptrtoint ptr %dst to i64, !dbg !478
  store i64 %_0.i, ptr %dst_usize.dbg.spill, align 8, !dbg !479
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !446, metadata !DIExpression()), !dbg !480
; call core::num::<impl usize>::checked_mul
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h14f0c5f559c2357cE"(i64 8, i64 %count) #10, !dbg !481
  %_7.0 = extractvalue { i64, i64 } %0, 0, !dbg !481
  %_7.1 = extractvalue { i64, i64 } %0, 1, !dbg !481
; call core::option::Option<T>::expect
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h922d0a4f7aeac359E"(i64 %_7.0, i64 %_7.1, ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i64 61, ptr align 8 @alloc_4a2c03a9003a987502ff0d6c9c75c0f0) #10, !dbg !481
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !481
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !448, metadata !DIExpression()), !dbg !482
; call core::num::<impl usize>::abs_diff
  %diff = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17ha5fbc8b82b9f698cE"(i64 %_0.i3, i64 %_0.i) #10, !dbg !483
  store i64 %diff, ptr %diff.dbg.spill, align 8, !dbg !483
  call void @llvm.dbg.declare(metadata ptr %diff.dbg.spill, metadata !450, metadata !DIExpression()), !dbg !484
  %_0 = icmp uge i64 %diff, %size, !dbg !485
  ret i1 %_0, !dbg !486
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !487 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %diff.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !491, metadata !DIExpression()), !dbg !502
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !492, metadata !DIExpression()), !dbg !503
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !493, metadata !DIExpression()), !dbg !504
  store ptr %src, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !505, metadata !DIExpression()), !dbg !510
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !512, metadata !DIExpression()), !dbg !518
  %_0.i3 = ptrtoint ptr %src to i64, !dbg !520
  store i64 %_0.i3, ptr %src_usize.dbg.spill, align 8, !dbg !521
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !494, metadata !DIExpression()), !dbg !522
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !505, metadata !DIExpression()), !dbg !523
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !512, metadata !DIExpression()), !dbg !525
  %_0.i = ptrtoint ptr %dst to i64, !dbg !527
  store i64 %_0.i, ptr %dst_usize.dbg.spill, align 8, !dbg !528
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !496, metadata !DIExpression()), !dbg !529
; call core::num::<impl usize>::checked_mul
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h14f0c5f559c2357cE"(i64 24, i64 %count) #10, !dbg !530
  %_7.0 = extractvalue { i64, i64 } %0, 0, !dbg !530
  %_7.1 = extractvalue { i64, i64 } %0, 1, !dbg !530
; call core::option::Option<T>::expect
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h922d0a4f7aeac359E"(i64 %_7.0, i64 %_7.1, ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i64 61, ptr align 8 @alloc_4a2c03a9003a987502ff0d6c9c75c0f0) #10, !dbg !530
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !530
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !498, metadata !DIExpression()), !dbg !531
; call core::num::<impl usize>::abs_diff
  %diff = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17ha5fbc8b82b9f698cE"(i64 %_0.i3, i64 %_0.i) #10, !dbg !532
  store i64 %diff, ptr %diff.dbg.spill, align 8, !dbg !532
  call void @llvm.dbg.declare(metadata ptr %diff.dbg.spill, metadata !500, metadata !DIExpression()), !dbg !533
  %_0 = icmp uge i64 %diff, %size, !dbg !534
  ret i1 %_0, !dbg !535
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5500bd819355ffffE(ptr %ptr) unnamed_addr #0 !dbg !536 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !551, metadata !DIExpression()), !dbg !554
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hae8099c4d7ce6037E"(ptr %ptr) #10, !dbg !555
  br i1 %_2, label %bb2, label %bb3, !dbg !555

bb3:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hf4b0165c208499a6E"(ptr %ptr) #10, !dbg !556
  %1 = zext i1 %0 to i8, !dbg !556
  store i8 %1, ptr %_0, align 1, !dbg !556
  br label %bb4, !dbg !556

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !557
  br label %bb4, !dbg !557

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !558, !range !559, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !558
  ret i1 %3, !dbg !558
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %ptr) unnamed_addr #0 !dbg !560 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !564, metadata !DIExpression()), !dbg !565
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17he51a47d9649f975dE"(ptr %ptr) #10, !dbg !566
  br i1 %_2, label %bb2, label %bb3, !dbg !566

bb3:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17ha9aef0cb0ca5c960E"(ptr %ptr) #10, !dbg !567
  %1 = zext i1 %0 to i8, !dbg !567
  store i8 %1, ptr %_0, align 1, !dbg !567
  br label %bb4, !dbg !567

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !568
  br label %bb4, !dbg !568

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !569, !range !559, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !569
  ret i1 %3, !dbg !569
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hd3e5782687a36f3eE(ptr %ptr) unnamed_addr #0 !dbg !570 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !582, metadata !DIExpression()), !dbg !585
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf86344061e33e18fE"(ptr %ptr) #10, !dbg !586
  br i1 %_2, label %bb2, label %bb3, !dbg !586

bb3:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hcfdf559d3975f77eE"(ptr %ptr) #10, !dbg !587
  %1 = zext i1 %0 to i8, !dbg !587
  store i8 %1, ptr %_0, align 1, !dbg !587
  br label %bb4, !dbg !587

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !588
  br label %bb4, !dbg !588

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !589, !range !559, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !589
  ret i1 %3, !dbg !589
}

; core::intrinsics::is_valid_allocation_size
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17h301f7861db739a53E(i64 %len) unnamed_addr #0 !dbg !590 {
start:
  %len.dbg.spill = alloca i64, align 8
  %max_len.dbg.spill = alloca i64, align 8
  store i64 384307168202282325, ptr %max_len.dbg.spill, align 8, !dbg !597
  call void @llvm.dbg.declare(metadata ptr %max_len.dbg.spill, metadata !595, metadata !DIExpression()), !dbg !597
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !597
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !594, metadata !DIExpression()), !dbg !598
  %_0 = icmp ule i64 %len, 384307168202282325, !dbg !599
  ret i1 %_0, !dbg !600
}

; core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc4b9be0c1aea131eE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !601 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !609, metadata !DIExpression()), !dbg !611
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !610, metadata !DIExpression()), !dbg !612
  %_4 = load i64, ptr %self, align 8, !dbg !613, !noundef !24
  %_5 = load i64, ptr %other, align 8, !dbg !614, !noundef !24
  %_3 = icmp ult i64 %_4, %_5, !dbg !613
  br i1 %_3, label %bb1, label %bb2, !dbg !613

bb2:                                              ; preds = %start
  %_7 = load i64, ptr %self, align 8, !dbg !615, !noundef !24
  %_8 = load i64, ptr %other, align 8, !dbg !616, !noundef !24
  %_6 = icmp eq i64 %_7, %_8, !dbg !615
  br i1 %_6, label %bb3, label %bb4, !dbg !615

bb1:                                              ; preds = %start
  store i8 -1, ptr %_0, align 1, !dbg !617
  br label %bb5, !dbg !618

bb4:                                              ; preds = %bb2
  store i8 1, ptr %_0, align 1, !dbg !619
  br label %bb5, !dbg !620

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !621
  br label %bb5, !dbg !620

bb5:                                              ; preds = %bb1, %bb3, %bb4
  %0 = load i8, ptr %_0, align 1, !dbg !622, !range !623, !noundef !24
  ret i8 %0, !dbg !622
}

; core::fmt::builders::DebugList::entries
; Function Attrs: noredzone nounwind
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17he8e132cae72ff5e7E(ptr align 8 %self, ptr %entries.0, ptr %entries.1) unnamed_addr #1 !dbg !624 {
start:
  %entries.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %entry = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !657, metadata !DIExpression()), !dbg !663
  %0 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 0
  store ptr %entries.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 1
  store ptr %entries.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %entries.dbg.spill, metadata !658, metadata !DIExpression()), !dbg !664
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !659, metadata !DIExpression()), !dbg !665
  call void @llvm.dbg.declare(metadata ptr %entry, metadata !661, metadata !DIExpression()), !dbg !666
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h477917721b7c6dc4E"(ptr %entries.0, ptr %entries.1) #10, !dbg !667
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !667
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !667
  %3 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 0, !dbg !667
  store ptr %_3.0, ptr %3, align 8, !dbg !667
  %4 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 1, !dbg !667
  store ptr %_3.1, ptr %4, align 8, !dbg !667
  br label %bb2, !dbg !668

bb2:                                              ; preds = %bb4, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h97e7d93a19b9c705E"(ptr align 8 %iter) #10, !dbg !665
  store ptr %5, ptr %_5, align 8, !dbg !665
  %6 = load ptr, ptr %_5, align 8, !dbg !665, !noundef !24
  %7 = ptrtoint ptr %6 to i64, !dbg !665
  %8 = icmp eq i64 %7, 0, !dbg !665
  %_7 = select i1 %8, i64 0, i64 1, !dbg !665
  %9 = icmp eq i64 %_7, 0, !dbg !665
  br i1 %9, label %bb6, label %bb4, !dbg !665

bb6:                                              ; preds = %bb2
  ret ptr %self, !dbg !669

bb4:                                              ; preds = %bb2
  %10 = load ptr, ptr %_5, align 8, !dbg !670, !nonnull !24, !align !417, !noundef !24
  store ptr %10, ptr %entry, align 8, !dbg !670
; call core::fmt::builders::DebugList::entry
  %_9 = call align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h18b24eb2339a3ad0E(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.0) #10, !dbg !671
  br label %bb2, !dbg !672

bb5:                                              ; No predecessors!
  unreachable, !dbg !665
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17he7eb429bc025dec6E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1, ptr align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 !dbg !673 {
start:
  %_4.dbg.spill = alloca %"core::fmt::rt::UnsafeArg", align 1
  %fmt.dbg.spill = alloca { ptr, i64 }, align 8
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_5 = alloca { ptr, i64 }, align 8
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::rt::UnsafeArg", align 1
  call void @llvm.dbg.declare(metadata ptr %_unsafe_arg.dbg.spill, metadata !750, metadata !DIExpression()), !dbg !752
  %0 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0, !dbg !752
  store ptr %pieces.0, ptr %0, align 8, !dbg !752
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1, !dbg !752
  store i64 %pieces.1, ptr %1, align 8, !dbg !752
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !747, metadata !DIExpression()), !dbg !753
  %2 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0, !dbg !752
  store ptr %args.0, ptr %2, align 8, !dbg !752
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1, !dbg !752
  store i64 %args.1, ptr %3, align 8, !dbg !752
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !748, metadata !DIExpression()), !dbg !754
  %4 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 0, !dbg !752
  store ptr %fmt.0, ptr %4, align 8, !dbg !752
  %5 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 1, !dbg !752
  store i64 %fmt.1, ptr %5, align 8, !dbg !752
  call void @llvm.dbg.declare(metadata ptr %fmt.dbg.spill, metadata !749, metadata !DIExpression()), !dbg !755
  call void @llvm.dbg.declare(metadata ptr %_4.dbg.spill, metadata !751, metadata !DIExpression()), !dbg !752
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !756
  store ptr %fmt.0, ptr %6, align 8, !dbg !756
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !756
  store i64 %fmt.1, ptr %7, align 8, !dbg !756
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 0, !dbg !757
  store ptr %pieces.0, ptr %8, align 8, !dbg !757
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 1, !dbg !757
  store i64 %pieces.1, ptr %9, align 8, !dbg !757
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !757
  %11 = load ptr, ptr %10, align 8, !dbg !757, !align !417, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !757
  %13 = load i64, ptr %12, align 8, !dbg !757
  %14 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 2, !dbg !757
  %15 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 0, !dbg !757
  store ptr %11, ptr %15, align 8, !dbg !757
  %16 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 1, !dbg !757
  store i64 %13, ptr %16, align 8, !dbg !757
  %17 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 1, !dbg !757
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !757
  store ptr %args.0, ptr %18, align 8, !dbg !757
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !757
  store i64 %args.1, ptr %19, align 8, !dbg !757
  ret void, !dbg !758
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments6new_v117hf53c1fa005f20e71E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !759 {
start:
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_14 = alloca { ptr, i64 }, align 8
  %_12 = alloca %"core::fmt::Arguments<'_>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !764, metadata !DIExpression()), !dbg !766
  %2 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !765, metadata !DIExpression()), !dbg !767
  %_3 = icmp ult i64 %pieces.1, %args.1, !dbg !768
  br i1 %_3, label %bb3, label %bb1, !dbg !768

bb1:                                              ; preds = %start
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %args.1, i64 1), !dbg !769
  %_10.0 = extractvalue { i64, i1 } %4, 0, !dbg !769
  %_10.1 = extractvalue { i64, i1 } %4, 1, !dbg !769
  %5 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !769
  br i1 %5, label %panic, label %bb2, !dbg !769

bb3:                                              ; preds = %bb2, %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17hde10ce898de6c3e5E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_12, ptr align 8 @alloc_560206a49c61adca6f3f0639a12632eb, i64 1) #10, !dbg !770
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h86da5b04361eb664E(ptr align 8 %_12, ptr align 8 @alloc_29183d143b1e5214e3e66c35cbecd132) #11, !dbg !770
  unreachable, !dbg !770

bb2:                                              ; preds = %bb1
  %_6 = icmp ugt i64 %pieces.1, %_10.0, !dbg !771
  br i1 %_6, label %bb3, label %bb5, !dbg !771

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_4b40c6b3614ea02c5f31ead026cec0d4) #11, !dbg !769
  unreachable, !dbg !769

bb5:                                              ; preds = %bb2
  store ptr null, ptr %_14, align 8, !dbg !772
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 0, !dbg !773
  store ptr %pieces.0, ptr %6, align 8, !dbg !773
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 1, !dbg !773
  store i64 %pieces.1, ptr %7, align 8, !dbg !773
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_14, i32 0, i32 0, !dbg !773
  %9 = load ptr, ptr %8, align 8, !dbg !773, !align !417, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_14, i32 0, i32 1, !dbg !773
  %11 = load i64, ptr %10, align 8, !dbg !773
  %12 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 2, !dbg !773
  %13 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 0, !dbg !773
  store ptr %9, ptr %13, align 8, !dbg !773
  %14 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 1, !dbg !773
  store i64 %11, ptr %14, align 8, !dbg !773
  %15 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 1, !dbg !773
  %16 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 0, !dbg !773
  store ptr %args.0, ptr %16, align 8, !dbg !773
  %17 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 1, !dbg !773
  store i64 %args.1, ptr %17, align 8, !dbg !773
  ret void, !dbg !774
}

; core::fmt::Arguments::new_const
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments9new_const17hde10ce898de6c3e5E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1) unnamed_addr #0 !dbg !775 {
start:
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !780, metadata !DIExpression()), !dbg !781
  %_2 = icmp ugt i64 %pieces.1, 1, !dbg !782
  br i1 %_2, label %bb1, label %bb3, !dbg !782

bb3:                                              ; preds = %start
  store ptr null, ptr %_7, align 8, !dbg !783
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 0, !dbg !784
  store ptr %pieces.0, ptr %2, align 8, !dbg !784
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 1, !dbg !784
  store i64 %pieces.1, ptr %3, align 8, !dbg !784
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !784
  %5 = load ptr, ptr %4, align 8, !dbg !784, !align !417, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !784
  %7 = load i64, ptr %6, align 8, !dbg !784
  %8 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 2, !dbg !784
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !784
  store ptr %5, ptr %9, align 8, !dbg !784
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !784
  store i64 %7, ptr %10, align 8, !dbg !784
  %11 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 1, !dbg !784
  %12 = getelementptr inbounds { ptr, i64 }, ptr %11, i32 0, i32 0, !dbg !784
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %12, align 8, !dbg !784
  %13 = getelementptr inbounds { ptr, i64 }, ptr %11, i32 0, i32 1, !dbg !784
  store i64 0, ptr %13, align 8, !dbg !784
  ret void, !dbg !785

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17hde10ce898de6c3e5E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_560206a49c61adca6f3f0639a12632eb, i64 1) #10, !dbg !786
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h86da5b04361eb664E(ptr align 8 %_5, ptr align 8 @alloc_22bd94ddb1ad8522c31de2db3dc6d917) #11, !dbg !786
  unreachable, !dbg !786
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h258991975d1e9783E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !787 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %b = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %a = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !793, metadata !DIExpression()), !dbg !799
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !794, metadata !DIExpression()), !dbg !800
  call void @llvm.dbg.declare(metadata ptr %a, metadata !795, metadata !DIExpression()), !dbg !801
  call void @llvm.dbg.declare(metadata ptr %b, metadata !797, metadata !DIExpression()), !dbg !802
; call core::ptr::read
  call void @_ZN4core3ptr4read17h7789c400b36c2604E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") align 8 %a, ptr %x) #10, !dbg !803
; call core::ptr::read
  call void @_ZN4core3ptr4read17h7789c400b36c2604E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") align 8 %b, ptr %y) #10, !dbg !804
; call core::ptr::write
  call void @_ZN4core3ptr5write17h441935d3b6ac0554E(ptr %x, ptr align 8 %b) #10, !dbg !805
; call core::ptr::write
  call void @_ZN4core3ptr5write17h441935d3b6ac0554E(ptr %y, ptr align 8 %a) #10, !dbg !806
  ret void, !dbg !807
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h7ba293a90458ed06E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !808 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %b = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %a = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !813, metadata !DIExpression()), !dbg !819
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !814, metadata !DIExpression()), !dbg !820
  call void @llvm.dbg.declare(metadata ptr %a, metadata !815, metadata !DIExpression()), !dbg !821
  call void @llvm.dbg.declare(metadata ptr %b, metadata !817, metadata !DIExpression()), !dbg !822
; call core::ptr::read
  call void @_ZN4core3ptr4read17h8a7b025a440768baE(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %a, ptr %x) #10, !dbg !823
; call core::ptr::read
  call void @_ZN4core3ptr4read17h8a7b025a440768baE(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %b, ptr %y) #10, !dbg !824
; call core::ptr::write
  call void @_ZN4core3ptr5write17hd3776409b8a0c2c6E(ptr %x, ptr align 8 %b) #10, !dbg !825
; call core::ptr::write
  call void @_ZN4core3ptr5write17hd3776409b8a0c2c6E(ptr %y, ptr align 8 %a) #10, !dbg !826
  ret void, !dbg !827
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17he38bf9be57a366fdE(ptr align 1 %x, ptr align 1 %y) unnamed_addr #0 !dbg !828 {
start:
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i8, align 1
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !842, metadata !DIExpression()), !dbg !850
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !843, metadata !DIExpression()), !dbg !851
; call core::ptr::read
  %a = call i8 @_ZN4core3ptr4read17hbbcfc7757d0bbf6dE(ptr %x) #10, !dbg !852
  store i8 %a, ptr %a.dbg.spill, align 1, !dbg !852
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !844, metadata !DIExpression()), !dbg !853
; call core::ptr::read
  %b = call i8 @_ZN4core3ptr4read17hbbcfc7757d0bbf6dE(ptr %y) #10, !dbg !854
  store i8 %b, ptr %b.dbg.spill, align 1, !dbg !854
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !846, metadata !DIExpression()), !dbg !855
; call core::ptr::write
  call void @_ZN4core3ptr5write17h64e07bc1481c4f30E(ptr %x, i8 %b) #10, !dbg !856
; call core::ptr::write
  call void @_ZN4core3ptr5write17h64e07bc1481c4f30E(ptr %y, i8 %a) #10, !dbg !857
  ret void, !dbg !858
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17hf19aa68a6af32113E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !859 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !864, metadata !DIExpression()), !dbg !870
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !865, metadata !DIExpression()), !dbg !871
; call core::ptr::read
  %a = call i64 @_ZN4core3ptr4read17haea0bf519ac475edE(ptr %x) #10, !dbg !872
  store i64 %a, ptr %a.dbg.spill, align 8, !dbg !872
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !866, metadata !DIExpression()), !dbg !873
; call core::ptr::read
  %b = call i64 @_ZN4core3ptr4read17haea0bf519ac475edE(ptr %y) #10, !dbg !874
  store i64 %b, ptr %b.dbg.spill, align 8, !dbg !874
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !868, metadata !DIExpression()), !dbg !875
; call core::ptr::write
  call void @_ZN4core3ptr5write17hb85e195ed1884d82E(ptr %x, i64 %b) #10, !dbg !876
; call core::ptr::write
  call void @_ZN4core3ptr5write17hb85e195ed1884d82E(ptr %y, i64 %a) #10, !dbg !877
  ret void, !dbg !878
}

; core::mem::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem4swap17h3ce2190ae39ba15aE(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !879 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !881, metadata !DIExpression()), !dbg !883
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !882, metadata !DIExpression()), !dbg !884
  %_7 = icmp eq i64 8, 0, !dbg !885
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !885
  br i1 %0, label %panic, label %bb3, !dbg !885

bb3:                                              ; preds = %start
  %_4 = udiv i64 24, 8, !dbg !885
  %_3 = icmp ugt i64 %_4, 4, !dbg !885
  br i1 %_3, label %bb4, label %bb5, !dbg !885

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_5ec3decc36c5e739d2ee906473d1e146) #11, !dbg !885
  unreachable, !dbg !885

bb5:                                              ; preds = %bb3
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h7ba293a90458ed06E(ptr align 8 %x, ptr align 8 %y) #10, !dbg !886
  br label %bb6, !dbg !886

bb4:                                              ; preds = %bb3
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17ha0939527b63709b5E(ptr %x, ptr %y, i64 1) #10, !dbg !887
  br label %bb6, !dbg !887

bb6:                                              ; preds = %bb4, %bb5
  ret void, !dbg !888
}

; core::mem::forget
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem6forget17hd52909aaf3c1e60cE(ptr align 8 %t) unnamed_addr #0 !dbg !889 {
start:
  %_2 = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  call void @llvm.dbg.declare(metadata ptr %t, metadata !893, metadata !DIExpression()), !dbg !894
  call void @llvm.dbg.declare(metadata ptr %t, metadata !895, metadata !DIExpression()), !dbg !902
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %t, i64 24, i1 false), !dbg !904
  ret void, !dbg !905
}

; core::num::<impl i32>::abs
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$3abs17h2b3be683688f2f77E"(i32 %self) unnamed_addr #0 !dbg !906 {
start:
  %self.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill = alloca i32, align 4
  %_0 = alloca i32, align 4
  store i32 %self, ptr %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !914, metadata !DIExpression()), !dbg !915
  store i32 %self, ptr %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !916, metadata !DIExpression()), !dbg !921
  %_0.i = icmp slt i32 %self, 0, !dbg !923
  br i1 %_0.i, label %bb2, label %bb4, !dbg !924

bb4:                                              ; preds = %start
  store i32 %self, ptr %_0, align 4, !dbg !925
  br label %bb5, !dbg !926

bb2:                                              ; preds = %start
  %_3 = icmp eq i32 %self, -2147483648, !dbg !927
  %0 = call i1 @llvm.expect.i1(i1 %_3, i1 false), !dbg !927
  br i1 %0, label %panic, label %bb3, !dbg !927

bb5:                                              ; preds = %bb3, %bb4
  %1 = load i32, ptr %_0, align 4, !dbg !928, !noundef !24
  ret i32 %1, !dbg !928

bb3:                                              ; preds = %bb2
  %2 = sub i32 0, %self, !dbg !927
  store i32 %2, ptr %_0, align 4, !dbg !927
  br label %bb5, !dbg !926

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_a293008768a4943f020befa7eda6a4e3) #11, !dbg !927
  unreachable, !dbg !927
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h14f0c5f559c2357cE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !929 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %_0.i = alloca { i64, i8 }, align 8
  %0 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_0 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !935, metadata !DIExpression()), !dbg !940
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !936, metadata !DIExpression()), !dbg !941
  store i64 %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !942, metadata !DIExpression()), !dbg !955
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !951, metadata !DIExpression()), !dbg !957
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !958
  %_5.0.i = extractvalue { i64, i1 } %1, 0, !dbg !958
  %_5.1.i = extractvalue { i64, i1 } %1, 1, !dbg !958
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !959
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill.i, metadata !952, metadata !DIExpression()), !dbg !960
  %2 = zext i1 %_5.1.i to i8, !dbg !961
  store i8 %2, ptr %b.dbg.spill.i, align 1, !dbg !961
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill.i, metadata !954, metadata !DIExpression()), !dbg !962
  store i64 %_5.0.i, ptr %_0.i, align 8, !dbg !963
  %3 = getelementptr inbounds { i64, i8 }, ptr %_0.i, i32 0, i32 1, !dbg !963
  %4 = zext i1 %_5.1.i to i8, !dbg !963
  store i8 %4, ptr %3, align 8, !dbg !963
  %5 = load i64, ptr %_0.i, align 8, !dbg !964, !noundef !24
  %6 = getelementptr inbounds { i64, i8 }, ptr %_0.i, i32 0, i32 1, !dbg !964
  %7 = load i8, ptr %6, align 8, !dbg !964, !range !559, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !964
  %9 = zext i1 %8 to i8, !dbg !964
  %10 = insertvalue { i64, i8 } poison, i64 %5, 0, !dbg !964
  %11 = insertvalue { i64, i8 } %10, i8 %9, 1, !dbg !964
  %_5.0 = extractvalue { i64, i8 } %11, 0, !dbg !965
  %12 = extractvalue { i64, i8 } %11, 1, !dbg !965
  %_5.1 = trunc i8 %12 to i1, !dbg !965
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !966
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !937, metadata !DIExpression()), !dbg !967
  %13 = zext i1 %_5.1 to i8, !dbg !968
  store i8 %13, ptr %b.dbg.spill, align 1, !dbg !968
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !939, metadata !DIExpression()), !dbg !969
  %14 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !970
  %15 = zext i1 %14 to i8, !dbg !970
  store i8 %15, ptr %0, align 1, !dbg !970
  %16 = load i8, ptr %0, align 1, !dbg !970, !range !559, !noundef !24
  %_6 = trunc i8 %16 to i1, !dbg !970
  br i1 %_6, label %bb3, label %bb4, !dbg !970

bb4:                                              ; preds = %start
  %17 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !971
  store i64 %_5.0, ptr %17, align 8, !dbg !971
  store i64 1, ptr %_0, align 8, !dbg !971
  br label %bb5, !dbg !972

bb3:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !973
  br label %bb5, !dbg !972

bb5:                                              ; preds = %bb3, %bb4
  %18 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !974
  %19 = load i64, ptr %18, align 8, !dbg !974, !range !975, !noundef !24
  %20 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !974
  %21 = load i64, ptr %20, align 8, !dbg !974
  %22 = insertvalue { i64, i64 } poison, i64 %19, 0, !dbg !974
  %23 = insertvalue { i64, i64 } %22, i64 %21, 1, !dbg !974
  ret { i64, i64 } %23, !dbg !974
}

; core::num::<impl usize>::next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h511c6f23dfade785E"(i64 %self) unnamed_addr #0 !dbg !976 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !980, metadata !DIExpression()), !dbg !981
; call core::num::<impl usize>::one_less_than_next_power_of_two
  %_2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h6af6c7f48dc02a22E"(i64 %self) #10, !dbg !982
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_2, i64 1), !dbg !982
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !982
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !982
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !982
  br i1 %1, label %panic, label %bb2, !dbg !982

bb2:                                              ; preds = %start
  ret i64 %_3.0, !dbg !983

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_48ea3a20d67f003bf521503306070782) #11, !dbg !982
  unreachable, !dbg !982
}

; core::num::<impl usize>::one_less_than_next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h6af6c7f48dc02a22E"(i64 %self) unnamed_addr #0 !dbg !984 {
start:
  %z.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %p.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_0 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !986, metadata !DIExpression()), !dbg !991
  %_2 = icmp ule i64 %self, 1, !dbg !992
  br i1 %_2, label %bb1, label %bb2, !dbg !992

bb2:                                              ; preds = %start
  %_4.0 = sub i64 %self, 1, !dbg !993
  %_4.1 = icmp ult i64 %self, 1, !dbg !993
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !993
  br i1 %1, label %panic, label %bb3, !dbg !993

bb1:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !994
  br label %bb6, !dbg !995

bb3:                                              ; preds = %bb2
  store i64 %_4.0, ptr %p.dbg.spill, align 8, !dbg !993
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !987, metadata !DIExpression()), !dbg !996
  %2 = call i64 @llvm.ctlz.i64(i64 %_4.0, i1 true), !dbg !997
  store i64 %2, ptr %0, align 8, !dbg !997
  %z = load i64, ptr %0, align 8, !dbg !997, !noundef !24
  store i64 %z, ptr %z.dbg.spill, align 8, !dbg !997
  call void @llvm.dbg.declare(metadata ptr %z.dbg.spill, metadata !989, metadata !DIExpression()), !dbg !998
  %_6 = icmp ult i64 %z, 64, !dbg !999
  %3 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !999
  br i1 %3, label %bb5, label %panic1, !dbg !999

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_48ea3a20d67f003bf521503306070782) #11, !dbg !993
  unreachable, !dbg !993

bb5:                                              ; preds = %bb3
  %4 = and i64 %z, 63, !dbg !999
  %5 = lshr i64 -1, %4, !dbg !999
  store i64 %5, ptr %_0, align 8, !dbg !999
  br label %bb6, !dbg !995

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.5, i64 36, ptr align 8 @alloc_48ea3a20d67f003bf521503306070782) #11, !dbg !999
  unreachable, !dbg !999

bb6:                                              ; preds = %bb1, %bb5
  %6 = load i64, ptr %_0, align 8, !dbg !995, !noundef !24
  ret i64 %6, !dbg !995
}

; core::num::<impl usize>::abs_diff
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17ha5fbc8b82b9f698cE"(i64 %self, i64 %other) unnamed_addr #0 !dbg !1000 {
start:
  %rhs.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill.i = alloca i32, align 4
  %other.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_0 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1004, metadata !DIExpression()), !dbg !1006
  store i64 %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !1005, metadata !DIExpression()), !dbg !1007
  %0 = icmp eq i64 8, 1, !dbg !1008
  br i1 %0, label %bb2, label %bb5, !dbg !1008

bb2:                                              ; preds = %start
  %_6 = trunc i64 %self to i32, !dbg !1009
  %_7 = trunc i64 %other to i32, !dbg !1010
  store i32 %_6, ptr %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1011, metadata !DIExpression()), !dbg !1017
  store i32 %_7, ptr %rhs.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1016, metadata !DIExpression()), !dbg !1019
  %_0.i = sub i32 %_6, %_7, !dbg !1020
; call core::num::<impl i32>::abs
  %_4 = call i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$3abs17h2b3be683688f2f77E"(i32 %_0.i) #10, !dbg !1009
  %1 = sext i32 %_4 to i64, !dbg !1009
  store i64 %1, ptr %_0, align 8, !dbg !1009
  br label %bb10, !dbg !1021

bb5:                                              ; preds = %start
  %_8 = icmp ult i64 %self, %other, !dbg !1022
  br i1 %_8, label %bb6, label %bb8, !dbg !1022

bb10:                                             ; preds = %bb7, %bb9, %bb2
  %2 = load i64, ptr %_0, align 8, !dbg !1023, !noundef !24
  ret i64 %2, !dbg !1023

bb8:                                              ; preds = %bb5
  %_10.0 = sub i64 %self, %other, !dbg !1024
  %_10.1 = icmp ult i64 %self, %other, !dbg !1024
  %3 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !1024
  br i1 %3, label %panic, label %bb9, !dbg !1024

bb6:                                              ; preds = %bb5
  %_9.0 = sub i64 %other, %self, !dbg !1025
  %_9.1 = icmp ult i64 %other, %self, !dbg !1025
  %4 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !1025
  br i1 %4, label %panic1, label %bb7, !dbg !1025

bb9:                                              ; preds = %bb8
  store i64 %_10.0, ptr %_0, align 8, !dbg !1024
  br label %bb10, !dbg !1026

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_48ea3a20d67f003bf521503306070782) #11, !dbg !1024
  unreachable, !dbg !1024

bb7:                                              ; preds = %bb6
  store i64 %_9.0, ptr %_0, align 8, !dbg !1025
  br label %bb10, !dbg !1026

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_48ea3a20d67f003bf521503306070782) #11, !dbg !1025
  unreachable, !dbg !1025
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17haaa6229c426d1dc3E"(ptr align 8 %self) unnamed_addr #0 !dbg !1027 {
start:
  %exclusive_end.dbg.spill = alloca i64, align 8
  %start1 = alloca i64, align 8
  %_0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1033, metadata !DIExpression()), !dbg !1038
  call void @llvm.dbg.declare(metadata ptr %start1, metadata !1036, metadata !DIExpression()), !dbg !1039
  %0 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 1, !dbg !1040
  %_3 = load i64, ptr %0, align 8, !dbg !1040, !noundef !24
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_3, i64 1), !dbg !1040
  %_4.0 = extractvalue { i64, i1 } %1, 0, !dbg !1040
  %_4.1 = extractvalue { i64, i1 } %1, 1, !dbg !1040
  %2 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1040
  br i1 %2, label %panic, label %bb1, !dbg !1040

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %exclusive_end.dbg.spill, align 8, !dbg !1040
  call void @llvm.dbg.declare(metadata ptr %exclusive_end.dbg.spill, metadata !1034, metadata !DIExpression()), !dbg !1041
  %3 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 2, !dbg !1042
  %4 = load i8, ptr %3, align 8, !dbg !1042, !range !559, !noundef !24
  %_6 = trunc i8 %4 to i1, !dbg !1042
  br i1 %_6, label %bb2, label %bb3, !dbg !1042

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_50d1e257ccd56aaa3f8677a989ec63c7) #11, !dbg !1040
  unreachable, !dbg !1040

bb3:                                              ; preds = %bb1
  %5 = load i64, ptr %self, align 8, !dbg !1043, !noundef !24
  store i64 %5, ptr %start1, align 8, !dbg !1043
  br label %bb4, !dbg !1044

bb2:                                              ; preds = %bb1
  store i64 %_4.0, ptr %start1, align 8, !dbg !1045
  br label %bb4, !dbg !1044

bb4:                                              ; preds = %bb2, %bb3
  %_7 = load i64, ptr %start1, align 8, !dbg !1046, !noundef !24
  store i64 %_7, ptr %_0, align 8, !dbg !1046
  %6 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !1046
  store i64 %_4.0, ptr %6, align 8, !dbg !1046
  %7 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !1047
  %8 = load i64, ptr %7, align 8, !dbg !1047, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !1047
  %10 = load i64, ptr %9, align 8, !dbg !1047, !noundef !24
  %11 = insertvalue { i64, i64 } poison, i64 %8, 0, !dbg !1047
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !1047
  ret { i64, i64 } %12, !dbg !1047
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h76555a964f869907E"(ptr align 8 %self, ptr align 8 %0, ptr align 8 %1) unnamed_addr #1 !dbg !1048 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %args = alloca { ptr, ptr }, align 8
  store ptr %0, ptr %args, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1
  store ptr %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1067, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata ptr %args, metadata !1068, metadata !DIExpression()), !dbg !1077
  %_3 = load ptr, ptr %self, align 8, !dbg !1078, !nonnull !24, !align !417, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 0, !dbg !1078
  %4 = load ptr, ptr %3, align 8, !dbg !1078, !nonnull !24, !align !417, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1, !dbg !1078
  %6 = load ptr, ptr %5, align 8, !dbg !1078, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_0 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %_3, ptr align 8 %4, ptr align 8 %6) #10, !dbg !1078
  ret i1 %_0, !dbg !1079
}

; core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17ha01701ee024676caE"(ptr align 8 %_1) unnamed_addr #1 !dbg !1080 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1091, metadata !DIExpression()), !dbg !1094
; call <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc846d274995c2f97E"(ptr align 8 %_1) #10, !dbg !1094
  ret void, !dbg !1094
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr19swap_nonoverlapping17ha0939527b63709b5E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1095 {
start:
  %self.dbg.spill.i20 = alloca ptr, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %y.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill16 = alloca i64, align 8
  %y.dbg.spill13 = alloca ptr, align 8
  %x.dbg.spill11 = alloca ptr, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %y.dbg.spill5 = alloca ptr, align 8
  %x.dbg.spill3 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1099, metadata !DIExpression()), !dbg !1116
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1100, metadata !DIExpression()), !dbg !1117
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1101, metadata !DIExpression()), !dbg !1118
  br i1 true, label %bb1, label %bb2, !dbg !1119

bb2:                                              ; preds = %_ZN4core3ptr19swap_nonoverlapping7runtime17h8e8ae2515b2bb1d7E.exit, %start
  %_7 = icmp ule i64 8, 8, !dbg !1120
  br i1 %_7, label %bb5, label %bb40, !dbg !1120

bb1:                                              ; preds = %start
  store ptr %x, ptr %_6, align 8, !dbg !1119
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1119
  store ptr %y, ptr %1, align 8, !dbg !1119
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1119
  store i64 %count, ptr %2, align 8, !dbg !1119
  %3 = load ptr, ptr %_6, align 8, !dbg !1119, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1119
  %5 = load ptr, ptr %4, align 8, !dbg !1119, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1119
  %7 = load i64, ptr %6, align 8, !dbg !1119, !noundef !24
  store ptr %3, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !1121, metadata !DIExpression()), !dbg !1127
  store ptr %5, ptr %y.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill.i, metadata !1125, metadata !DIExpression()), !dbg !1127
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1126, metadata !DIExpression()), !dbg !1127
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %3) #10, !dbg !1129
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !1129

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_546a48d82dbbd37bfd409d4513b73f46, i64 166) #11, !dbg !1131
  unreachable, !dbg !1131

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %5) #10, !dbg !1132
  br i1 %_6.i, label %bb4.i, label %bb7.i, !dbg !1132

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_8.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %3, ptr %5, i64 %7) #10, !dbg !1133
  br i1 %_8.i, label %_ZN4core3ptr19swap_nonoverlapping7runtime17h8e8ae2515b2bb1d7E.exit, label %bb7.i, !dbg !1133

_ZN4core3ptr19swap_nonoverlapping7runtime17h8e8ae2515b2bb1d7E.exit: ; preds = %bb4.i
  br label %bb2, !dbg !1119

bb40:                                             ; preds = %bb32, %bb26, %bb11, %bb2
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h18c5a9e6b4cf4e8cE(ptr %x, ptr %y, i64 %count) #10, !dbg !1134
  br label %bb41, !dbg !1134

bb5:                                              ; preds = %bb2
  store i64 24, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1135, metadata !DIExpression()), !dbg !1138
  store i64 24, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1140, metadata !DIExpression()), !dbg !1145
  store i64 2, ptr %0, align 8, !dbg !1147
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1147, !noundef !24
  %_0.i.i = trunc i64 %_2.i.i to i32, !dbg !1147
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !1148
  br i1 %_0.i, label %bb8, label %bb12, !dbg !1149

bb12:                                             ; preds = %bb11, %bb5
  %_17 = icmp uge i64 8, 8, !dbg !1150
  br i1 %_17, label %bb15, label %bb26, !dbg !1150

bb8:                                              ; preds = %bb5
  %8 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 8, i64 2), !dbg !1151
  %_16.0 = extractvalue { i64, i1 } %8, 0, !dbg !1151
  %_16.1 = extractvalue { i64, i1 } %8, 1, !dbg !1151
  %9 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !1151
  br i1 %9, label %panic, label %bb11, !dbg !1151

bb11:                                             ; preds = %bb8
  %_12 = icmp ugt i64 24, %_16.0, !dbg !1152
  br i1 %_12, label %bb12, label %bb40, !dbg !1152

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_aa1e5897789d5224e95b74e3ee1cddd7) #11, !dbg !1151
  unreachable, !dbg !1151

bb26:                                             ; preds = %bb18, %bb12
  %_32 = icmp uge i64 8, 1, !dbg !1153
  br i1 %_32, label %bb29, label %bb40, !dbg !1153

bb15:                                             ; preds = %bb12
  %_23 = icmp eq i64 8, 0, !dbg !1150
  %10 = call i1 @llvm.expect.i1(i1 %_23, i1 false), !dbg !1150
  br i1 %10, label %panic1, label %bb18, !dbg !1150

bb18:                                             ; preds = %bb15
  %_20 = urem i64 24, 8, !dbg !1150
  %11 = icmp eq i64 %_20, 0, !dbg !1150
  br i1 %11, label %bb19, label %bb26, !dbg !1150

panic1:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.7, i64 57, ptr align 8 @alloc_8aeb7488dd45ec4f785c1b9d2864062e) #11, !dbg !1150
  unreachable, !dbg !1150

bb19:                                             ; preds = %bb18
  store ptr %x, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !1154, metadata !DIExpression()), !dbg !1161
  store ptr %x, ptr %x.dbg.spill3, align 8, !dbg !1150
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill3, metadata !1102, metadata !DIExpression()), !dbg !1163
  store ptr %y, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !1154, metadata !DIExpression()), !dbg !1164
  store ptr %y, ptr %y.dbg.spill5, align 8, !dbg !1163
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill5, metadata !1105, metadata !DIExpression()), !dbg !1166
  %_30 = icmp eq i64 8, 0, !dbg !1166
  %12 = call i1 @llvm.expect.i1(i1 %_30, i1 false), !dbg !1166
  br i1 %12, label %panic6, label %bb24, !dbg !1166

bb24:                                             ; preds = %bb19
  %_27 = udiv i64 24, 8, !dbg !1166
  %13 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_27), !dbg !1166
  %_31.0 = extractvalue { i64, i1 } %13, 0, !dbg !1166
  %_31.1 = extractvalue { i64, i1 } %13, 1, !dbg !1166
  %14 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !1166
  br i1 %14, label %panic7, label %bb25, !dbg !1166

panic6:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_8aeb7488dd45ec4f785c1b9d2864062e) #11, !dbg !1166
  unreachable, !dbg !1166

bb25:                                             ; preds = %bb24
  store i64 %_31.0, ptr %count.dbg.spill8, align 8, !dbg !1166
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill8, metadata !1107, metadata !DIExpression()), !dbg !1167
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h06df6f5d9abca47eE(ptr %x, ptr %y, i64 %_31.0) #10, !dbg !1167
  br label %bb41, !dbg !1167

panic7:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_8aeb7488dd45ec4f785c1b9d2864062e) #11, !dbg !1166
  unreachable, !dbg !1166

bb41:                                             ; preds = %bb40, %bb39, %bb25
  ret void, !dbg !1168

bb29:                                             ; preds = %bb26
  %_38 = icmp eq i64 1, 0, !dbg !1153
  %15 = call i1 @llvm.expect.i1(i1 %_38, i1 false), !dbg !1153
  br i1 %15, label %panic9, label %bb32, !dbg !1153

bb32:                                             ; preds = %bb29
  %_35 = urem i64 24, 1, !dbg !1153
  %16 = icmp eq i64 %_35, 0, !dbg !1153
  br i1 %16, label %bb33, label %bb40, !dbg !1153

panic9:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.7, i64 57, ptr align 8 @alloc_c29284cfeec3ebf1725665bca1c2de8c) #11, !dbg !1153
  unreachable, !dbg !1153

bb33:                                             ; preds = %bb32
  store ptr %x, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !1169, metadata !DIExpression()), !dbg !1176
  store ptr %x, ptr %x.dbg.spill11, align 8, !dbg !1153
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill11, metadata !1109, metadata !DIExpression()), !dbg !1178
  store ptr %y, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !1169, metadata !DIExpression()), !dbg !1179
  store ptr %y, ptr %y.dbg.spill13, align 8, !dbg !1178
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill13, metadata !1112, metadata !DIExpression()), !dbg !1181
  %_45 = icmp eq i64 1, 0, !dbg !1181
  %17 = call i1 @llvm.expect.i1(i1 %_45, i1 false), !dbg !1181
  br i1 %17, label %panic14, label %bb38, !dbg !1181

bb38:                                             ; preds = %bb33
  %_42 = udiv i64 24, 1, !dbg !1181
  %18 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_42), !dbg !1181
  %_46.0 = extractvalue { i64, i1 } %18, 0, !dbg !1181
  %_46.1 = extractvalue { i64, i1 } %18, 1, !dbg !1181
  %19 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !1181
  br i1 %19, label %panic15, label %bb39, !dbg !1181

panic14:                                          ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_c29284cfeec3ebf1725665bca1c2de8c) #11, !dbg !1181
  unreachable, !dbg !1181

bb39:                                             ; preds = %bb38
  store i64 %_46.0, ptr %count.dbg.spill16, align 8, !dbg !1181
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill16, metadata !1114, metadata !DIExpression()), !dbg !1182
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h8aa8bbe620da77c0E(ptr %x, ptr %y, i64 %_46.0) #10, !dbg !1182
  br label %bb41, !dbg !1182

panic15:                                          ; preds = %bb38
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_c29284cfeec3ebf1725665bca1c2de8c) #11, !dbg !1181
  unreachable, !dbg !1181
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h0be5abcce6780766E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1183 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1187, metadata !DIExpression()), !dbg !1189
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1188, metadata !DIExpression()), !dbg !1190
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !512, metadata !DIExpression()), !dbg !1191
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hf3c6b37c41e09fadE(ptr %data, i64 %len) #10, !dbg !1193
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !1193
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !1193
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1194
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !1194
  ret { ptr, i64 } %2, !dbg !1194
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h8df01f0fcf924fd5E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1195 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1199, metadata !DIExpression()), !dbg !1201
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1200, metadata !DIExpression()), !dbg !1202
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1203, metadata !DIExpression()), !dbg !1209
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h959d99cc4cce15feE(ptr %data, i64 %len) #10, !dbg !1211
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !1211
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !1211
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1212
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !1212
  ret { ptr, i64 } %2, !dbg !1212
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h06df6f5d9abca47eE(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1213 {
start:
  %self.dbg.spill.i11 = alloca ptr, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1217, metadata !DIExpression()), !dbg !1231
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1218, metadata !DIExpression()), !dbg !1232
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1219, metadata !DIExpression()), !dbg !1233
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1225, metadata !DIExpression()), !dbg !1234
  store ptr %x, ptr %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !1235, metadata !DIExpression()), !dbg !1242
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1244
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1220, metadata !DIExpression()), !dbg !1245
  store ptr %y, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1235, metadata !DIExpression()), !dbg !1246
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1248
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1223, metadata !DIExpression()), !dbg !1249
  store i64 0, ptr %i, align 8, !dbg !1250
  br label %bb3, !dbg !1251

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1252, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1252
  br i1 %_7, label %bb4, label %bb9, !dbg !1252

bb9:                                              ; preds = %bb3
  ret void, !dbg !1253

bb4:                                              ; preds = %bb3
  %_11 = load i64, ptr %i, align 8, !dbg !1254, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1255, metadata !DIExpression()), !dbg !1261
  store i64 %_11, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1260, metadata !DIExpression()), !dbg !1263
  %_0.i9 = getelementptr inbounds i64, ptr %x, i64 %_11, !dbg !1264
  store ptr %_0.i9, ptr %x.dbg.spill5, align 8, !dbg !1265
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1227, metadata !DIExpression()), !dbg !1266
  %_14 = load i64, ptr %i, align 8, !dbg !1267, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1255, metadata !DIExpression()), !dbg !1268
  store i64 %_14, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1260, metadata !DIExpression()), !dbg !1270
  %_0.i = getelementptr inbounds i64, ptr %y, i64 %_14, !dbg !1271
  store ptr %_0.i, ptr %y.dbg.spill6, align 8, !dbg !1272
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1229, metadata !DIExpression()), !dbg !1273
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17hf19aa68a6af32113E(ptr align 8 %_0.i9, ptr align 8 %_0.i) #10, !dbg !1274
  %0 = load i64, ptr %i, align 8, !dbg !1275, !noundef !24
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %0, i64 1), !dbg !1275
  %_16.0 = extractvalue { i64, i1 } %1, 0, !dbg !1275
  %_16.1 = extractvalue { i64, i1 } %1, 1, !dbg !1275
  %2 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !1275
  br i1 %2, label %panic, label %bb8, !dbg !1275

bb8:                                              ; preds = %bb4
  store i64 %_16.0, ptr %i, align 8, !dbg !1275
  br label %bb3, !dbg !1251

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_060c9902dd9c1943dd37aa261fd2cc25) #11, !dbg !1275
  unreachable, !dbg !1275
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h18c5a9e6b4cf4e8cE(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1276 {
start:
  %self.dbg.spill.i11 = alloca ptr, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1278, metadata !DIExpression()), !dbg !1292
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1279, metadata !DIExpression()), !dbg !1293
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1280, metadata !DIExpression()), !dbg !1294
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1286, metadata !DIExpression()), !dbg !1295
  store ptr %x, ptr %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !1296, metadata !DIExpression()), !dbg !1303
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1305
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1281, metadata !DIExpression()), !dbg !1306
  store ptr %y, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1296, metadata !DIExpression()), !dbg !1307
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1309
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1284, metadata !DIExpression()), !dbg !1310
  store i64 0, ptr %i, align 8, !dbg !1311
  br label %bb3, !dbg !1312

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1313, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1313
  br i1 %_7, label %bb4, label %bb9, !dbg !1313

bb9:                                              ; preds = %bb3
  ret void, !dbg !1314

bb4:                                              ; preds = %bb3
  %_11 = load i64, ptr %i, align 8, !dbg !1315, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1316, metadata !DIExpression()), !dbg !1322
  store i64 %_11, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1321, metadata !DIExpression()), !dbg !1324
  %_0.i9 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %x, i64 %_11, !dbg !1325
  store ptr %_0.i9, ptr %x.dbg.spill5, align 8, !dbg !1326
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1288, metadata !DIExpression()), !dbg !1327
  %_14 = load i64, ptr %i, align 8, !dbg !1328, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1316, metadata !DIExpression()), !dbg !1329
  store i64 %_14, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1321, metadata !DIExpression()), !dbg !1331
  %_0.i = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %y, i64 %_14, !dbg !1332
  store ptr %_0.i, ptr %y.dbg.spill6, align 8, !dbg !1333
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1290, metadata !DIExpression()), !dbg !1334
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h258991975d1e9783E(ptr align 8 %_0.i9, ptr align 8 %_0.i) #10, !dbg !1335
  %0 = load i64, ptr %i, align 8, !dbg !1336, !noundef !24
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %0, i64 1), !dbg !1336
  %_16.0 = extractvalue { i64, i1 } %1, 0, !dbg !1336
  %_16.1 = extractvalue { i64, i1 } %1, 1, !dbg !1336
  %2 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !1336
  br i1 %2, label %panic, label %bb8, !dbg !1336

bb8:                                              ; preds = %bb4
  store i64 %_16.0, ptr %i, align 8, !dbg !1336
  br label %bb3, !dbg !1312

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_060c9902dd9c1943dd37aa261fd2cc25) #11, !dbg !1336
  unreachable, !dbg !1336
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h8aa8bbe620da77c0E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1337 {
start:
  %self.dbg.spill.i11 = alloca ptr, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1341, metadata !DIExpression()), !dbg !1355
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1342, metadata !DIExpression()), !dbg !1356
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1343, metadata !DIExpression()), !dbg !1357
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1349, metadata !DIExpression()), !dbg !1358
  store ptr %x, ptr %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !1359, metadata !DIExpression()), !dbg !1366
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1368
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1344, metadata !DIExpression()), !dbg !1369
  store ptr %y, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1359, metadata !DIExpression()), !dbg !1370
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1372
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1347, metadata !DIExpression()), !dbg !1373
  store i64 0, ptr %i, align 8, !dbg !1374
  br label %bb3, !dbg !1375

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1376, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1376
  br i1 %_7, label %bb4, label %bb9, !dbg !1376

bb9:                                              ; preds = %bb3
  ret void, !dbg !1377

bb4:                                              ; preds = %bb3
  %_11 = load i64, ptr %i, align 8, !dbg !1378, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1379, metadata !DIExpression()), !dbg !1385
  store i64 %_11, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1384, metadata !DIExpression()), !dbg !1387
  %_0.i9 = getelementptr inbounds i8, ptr %x, i64 %_11, !dbg !1388
  store ptr %_0.i9, ptr %x.dbg.spill5, align 8, !dbg !1389
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1351, metadata !DIExpression()), !dbg !1390
  %_14 = load i64, ptr %i, align 8, !dbg !1391, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1379, metadata !DIExpression()), !dbg !1392
  store i64 %_14, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1384, metadata !DIExpression()), !dbg !1394
  %_0.i = getelementptr inbounds i8, ptr %y, i64 %_14, !dbg !1395
  store ptr %_0.i, ptr %y.dbg.spill6, align 8, !dbg !1396
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1353, metadata !DIExpression()), !dbg !1397
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17he38bf9be57a366fdE(ptr align 1 %_0.i9, ptr align 1 %_0.i) #10, !dbg !1398
  %0 = load i64, ptr %i, align 8, !dbg !1399, !noundef !24
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %0, i64 1), !dbg !1399
  %_16.0 = extractvalue { i64, i1 } %1, 0, !dbg !1399
  %_16.1 = extractvalue { i64, i1 } %1, 1, !dbg !1399
  %2 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !1399
  br i1 %2, label %panic, label %bb8, !dbg !1399

bb8:                                              ; preds = %bb4
  store i64 %_16.0, ptr %i, align 8, !dbg !1399
  br label %bb3, !dbg !1375

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_060c9902dd9c1943dd37aa261fd2cc25) #11, !dbg !1399
  unreachable, !dbg !1399
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h7789c400b36c2604E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") align 8 %_0, ptr %src) unnamed_addr #0 !dbg !1400 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1404, metadata !DIExpression()), !dbg !1405
  br i1 true, label %bb1, label %bb2, !dbg !1406

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h17d6a0c282286493E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %src, i64 24, i1 false), !dbg !1407
  ret void, !dbg !1408

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1406
  %0 = load ptr, ptr %_4, align 8, !dbg !1406, !noundef !24
  store ptr %0, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1409, metadata !DIExpression()), !dbg !1415
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5500bd819355ffffE(ptr %0) #10, !dbg !1417
  br i1 %_2.i, label %_ZN4core3ptr4read7runtime17h17d6a0c282286493E.exit, label %bb3.i, !dbg !1417

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1419
  unreachable, !dbg !1419

_ZN4core3ptr4read7runtime17h17d6a0c282286493E.exit: ; preds = %bb1
  br label %bb2, !dbg !1406
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h8a7b025a440768baE(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_0, ptr %src) unnamed_addr #0 !dbg !1420 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1424, metadata !DIExpression()), !dbg !1425
  br i1 true, label %bb1, label %bb2, !dbg !1426

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h7a8737ae22681425E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %src, i64 24, i1 false), !dbg !1427
  ret void, !dbg !1428

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1426
  %0 = load ptr, ptr %_4, align 8, !dbg !1426, !noundef !24
  store ptr %0, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1429, metadata !DIExpression()), !dbg !1434
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %0) #10, !dbg !1436
  br i1 %_2.i, label %_ZN4core3ptr4read7runtime17h7a8737ae22681425E.exit, label %bb3.i, !dbg !1436

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1438
  unreachable, !dbg !1438

_ZN4core3ptr4read7runtime17h7a8737ae22681425E.exit: ; preds = %bb1
  br label %bb2, !dbg !1426
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr4read17haea0bf519ac475edE(ptr %src) unnamed_addr #0 !dbg !1439 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1443, metadata !DIExpression()), !dbg !1444
  br i1 true, label %bb1, label %bb2, !dbg !1445

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h85910562b024e142E.exit, %start
  %_0 = load i64, ptr %src, align 8, !dbg !1446
  ret i64 %_0, !dbg !1447

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1445
  %0 = load ptr, ptr %_4, align 8, !dbg !1445, !noundef !24
  store ptr %0, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1448, metadata !DIExpression()), !dbg !1453
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hd3e5782687a36f3eE(ptr %0) #10, !dbg !1455
  br i1 %_2.i, label %_ZN4core3ptr4read7runtime17h85910562b024e142E.exit, label %bb3.i, !dbg !1455

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1457
  unreachable, !dbg !1457

_ZN4core3ptr4read7runtime17h85910562b024e142E.exit: ; preds = %bb1
  br label %bb2, !dbg !1445
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define i8 @_ZN4core3ptr4read17hbbcfc7757d0bbf6dE(ptr %src) unnamed_addr #0 !dbg !1458 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1463, metadata !DIExpression()), !dbg !1464
  br i1 true, label %bb1, label %bb2, !dbg !1465

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h3d7b1fa2b6f4b95dE.exit, %start
  %_0 = load i8, ptr %src, align 1, !dbg !1466
  ret i8 %_0, !dbg !1467

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1465
  %0 = load ptr, ptr %_4, align 8, !dbg !1465, !noundef !24
  store ptr %0, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1468, metadata !DIExpression()), !dbg !1473
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h7f0f60df0751b86aE(ptr %0) #10, !dbg !1475
  br i1 %_2.i, label %_ZN4core3ptr4read7runtime17h3d7b1fa2b6f4b95dE.exit, label %bb3.i, !dbg !1475

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1477
  unreachable, !dbg !1477

_ZN4core3ptr4read7runtime17h3d7b1fa2b6f4b95dE.exit: ; preds = %bb1
  br label %bb2, !dbg !1465
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h2f264edc6d2d6d71E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1478 {
start:
  %self.dbg.spill.i28 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill.i23 = alloca ptr, align 8
  %src.dbg.spill.i24 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %dst.dbg.spill.i19 = alloca ptr, align 8
  %src.dbg.spill.i20 = alloca ptr, align 8
  %_6.i21 = alloca { ptr, ptr }, align 8
  %count.dbg.spill.i8 = alloca i64, align 8
  %dst.dbg.spill.i9 = alloca ptr, align 8
  %src.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %dst.dbg.spill.i6 = alloca ptr, align 8
  %src.dbg.spill.i7 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %dst.dbg.spill.i2 = alloca ptr, align 8
  %src.dbg.spill.i3 = alloca ptr, align 8
  %_6.i4 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1482, metadata !DIExpression()), !dbg !1486
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1483, metadata !DIExpression()), !dbg !1487
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1484, metadata !DIExpression()), !dbg !1488
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1489, metadata !DIExpression()), !dbg !1496
  store ptr %x, ptr %src.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i3, metadata !1498, metadata !DIExpression()), !dbg !1505
  store ptr %tmp, ptr %dst.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i2, metadata !1503, metadata !DIExpression()), !dbg !1507
  store i64 1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !1504, metadata !DIExpression()), !dbg !1508
  store ptr %x, ptr %_6.i4, align 8, !dbg !1509
  %0 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !1509
  store ptr %tmp, ptr %0, align 8, !dbg !1509
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !1509
  store i64 1, ptr %1, align 8, !dbg !1509
  %2 = load ptr, ptr %_6.i4, align 8, !dbg !1509, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !1509
  %4 = load ptr, ptr %3, align 8, !dbg !1509, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !1509
  %6 = load i64, ptr %5, align 8, !dbg !1509, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i7, metadata !1510, metadata !DIExpression()), !dbg !1516
  store ptr %4, ptr %dst.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i6, metadata !1514, metadata !DIExpression()), !dbg !1516
  store i64 %6, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !1515, metadata !DIExpression()), !dbg !1516
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %2) #10, !dbg !1518
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !1518

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !1519
  unreachable, !dbg !1519

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %4) #10, !dbg !1520
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !1520

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %2, ptr %4, i64 %6) #10, !dbg !1521
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit, label %bb7.i, !dbg !1521

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %x, i64 24, i1 false), !dbg !1522
  store ptr %y, ptr %src.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i20, metadata !1523, metadata !DIExpression()), !dbg !1528
  store ptr %x, ptr %dst.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i19, metadata !1526, metadata !DIExpression()), !dbg !1530
  store i64 1, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !1527, metadata !DIExpression()), !dbg !1531
  store ptr %y, ptr %_6.i21, align 8, !dbg !1532
  %7 = getelementptr inbounds { ptr, ptr }, ptr %_6.i21, i32 0, i32 1, !dbg !1532
  store ptr %x, ptr %7, align 8, !dbg !1532
  %8 = load ptr, ptr %_6.i21, align 8, !dbg !1532, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_6.i21, i32 0, i32 1, !dbg !1532
  %10 = load ptr, ptr %9, align 8, !dbg !1532, !noundef !24
  store ptr %8, ptr %src.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i24, metadata !1533, metadata !DIExpression()), !dbg !1540
  store ptr %10, ptr %dst.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i23, metadata !1539, metadata !DIExpression()), !dbg !1540
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %8) #10, !dbg !1542
  br i1 %_3.i, label %bb2.i25, label %bb5.i, !dbg !1542

bb5.i:                                            ; preds = %bb2.i25, %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_2f5fae7ca9908dec8d13988b47dc9dc4, i64 104) #11, !dbg !1543
  unreachable, !dbg !1543

bb2.i25:                                          ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit
; call core::intrinsics::is_aligned_and_not_null
  %_4.i26 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %10) #10, !dbg !1544
  br i1 %_4.i26, label %_ZN4core10intrinsics4copy7runtime17ha20f8519d471f186E.exit, label %bb5.i, !dbg !1544

_ZN4core10intrinsics4copy7runtime17ha20f8519d471f186E.exit: ; preds = %bb2.i25
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %x, ptr align 8 %y, i64 24, i1 false), !dbg !1545
  store ptr %tmp, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !1546, metadata !DIExpression()), !dbg !1553
  store ptr %tmp, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1498, metadata !DIExpression()), !dbg !1555
  store ptr %y, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1503, metadata !DIExpression()), !dbg !1557
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1504, metadata !DIExpression()), !dbg !1558
  store ptr %tmp, ptr %_6.i, align 8, !dbg !1559
  %11 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !1559
  store ptr %y, ptr %11, align 8, !dbg !1559
  %12 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !1559
  store i64 1, ptr %12, align 8, !dbg !1559
  %13 = load ptr, ptr %_6.i, align 8, !dbg !1559, !noundef !24
  %14 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !1559
  %15 = load ptr, ptr %14, align 8, !dbg !1559, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !1559
  %17 = load i64, ptr %16, align 8, !dbg !1559, !noundef !24
  store ptr %13, ptr %src.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i10, metadata !1510, metadata !DIExpression()), !dbg !1560
  store ptr %15, ptr %dst.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i9, metadata !1514, metadata !DIExpression()), !dbg !1560
  store i64 %17, ptr %count.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i8, metadata !1515, metadata !DIExpression()), !dbg !1560
; call core::intrinsics::is_aligned_and_not_null
  %_4.i11 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %13) #10, !dbg !1562
  br i1 %_4.i11, label %bb2.i13, label %bb7.i12, !dbg !1562

bb7.i12:                                          ; preds = %bb4.i15, %bb2.i13, %_ZN4core10intrinsics4copy7runtime17ha20f8519d471f186E.exit
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !1563
  unreachable, !dbg !1563

bb2.i13:                                          ; preds = %_ZN4core10intrinsics4copy7runtime17ha20f8519d471f186E.exit
; call core::intrinsics::is_aligned_and_not_null
  %_5.i14 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %15) #10, !dbg !1564
  br i1 %_5.i14, label %bb4.i15, label %bb7.i12, !dbg !1564

bb4.i15:                                          ; preds = %bb2.i13
; call core::intrinsics::is_nonoverlapping
  %_7.i16 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %13, ptr %15, i64 %17) #10, !dbg !1565
  br i1 %_7.i16, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit17, label %bb7.i12, !dbg !1565

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit17: ; preds = %bb4.i15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %y, ptr align 8 %tmp, i64 24, i1 false), !dbg !1566
  ret void, !dbg !1567
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h30979ba0d8e47384E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1568 {
start:
  %_0.i = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill.i23 = alloca ptr, align 8
  %src.dbg.spill.i24 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %dst.dbg.spill.i19 = alloca ptr, align 8
  %src.dbg.spill.i20 = alloca ptr, align 8
  %_6.i21 = alloca { ptr, ptr }, align 8
  %count.dbg.spill.i8 = alloca i64, align 8
  %dst.dbg.spill.i9 = alloca ptr, align 8
  %src.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %dst.dbg.spill.i6 = alloca ptr, align 8
  %src.dbg.spill.i7 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %dst.dbg.spill.i2 = alloca ptr, align 8
  %src.dbg.spill.i3 = alloca ptr, align 8
  %_6.i4 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1572, metadata !DIExpression()), !dbg !1576
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1573, metadata !DIExpression()), !dbg !1577
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1574, metadata !DIExpression()), !dbg !1578
  %0 = load i64, ptr %_0.i, align 8, !dbg !1579
  store i64 %0, ptr %tmp, align 8, !dbg !1585
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1586, metadata !DIExpression()), !dbg !1592
  store ptr %x, ptr %src.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i3, metadata !1594, metadata !DIExpression()), !dbg !1601
  store ptr %tmp, ptr %dst.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i2, metadata !1599, metadata !DIExpression()), !dbg !1603
  store i64 1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !1600, metadata !DIExpression()), !dbg !1604
  store ptr %x, ptr %_6.i4, align 8, !dbg !1605
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !1605
  store ptr %tmp, ptr %1, align 8, !dbg !1605
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !1605
  store i64 1, ptr %2, align 8, !dbg !1605
  %3 = load ptr, ptr %_6.i4, align 8, !dbg !1605, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !1605
  %5 = load ptr, ptr %4, align 8, !dbg !1605, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !1605
  %7 = load i64, ptr %6, align 8, !dbg !1605, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i7, metadata !1606, metadata !DIExpression()), !dbg !1611
  store ptr %5, ptr %dst.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i6, metadata !1609, metadata !DIExpression()), !dbg !1611
  store i64 %7, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !1610, metadata !DIExpression()), !dbg !1611
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1612fbb90accac66E(ptr %3) #10, !dbg !1613
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !1613

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !1614
  unreachable, !dbg !1614

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1612fbb90accac66E(ptr %5) #10, !dbg !1615
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !1615

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h2a00735316d394b7E(ptr %3, ptr %5, i64 %7) #10, !dbg !1616
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hc65679eac91a17e4E.exit, label %bb7.i, !dbg !1616

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hc65679eac91a17e4E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %x, i64 8, i1 false), !dbg !1617
  store ptr %y, ptr %src.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i20, metadata !1618, metadata !DIExpression()), !dbg !1623
  store ptr %x, ptr %dst.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i19, metadata !1621, metadata !DIExpression()), !dbg !1625
  store i64 1, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !1622, metadata !DIExpression()), !dbg !1626
  store ptr %y, ptr %_6.i21, align 8, !dbg !1627
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_6.i21, i32 0, i32 1, !dbg !1627
  store ptr %x, ptr %8, align 8, !dbg !1627
  %9 = load ptr, ptr %_6.i21, align 8, !dbg !1627, !noundef !24
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_6.i21, i32 0, i32 1, !dbg !1627
  %11 = load ptr, ptr %10, align 8, !dbg !1627, !noundef !24
  store ptr %9, ptr %src.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i24, metadata !1628, metadata !DIExpression()), !dbg !1634
  store ptr %11, ptr %dst.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i23, metadata !1633, metadata !DIExpression()), !dbg !1634
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1612fbb90accac66E(ptr %9) #10, !dbg !1636
  br i1 %_3.i, label %bb2.i25, label %bb5.i, !dbg !1636

bb5.i:                                            ; preds = %bb2.i25, %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hc65679eac91a17e4E.exit
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_2f5fae7ca9908dec8d13988b47dc9dc4, i64 104) #11, !dbg !1637
  unreachable, !dbg !1637

bb2.i25:                                          ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hc65679eac91a17e4E.exit
; call core::intrinsics::is_aligned_and_not_null
  %_4.i26 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1612fbb90accac66E(ptr %11) #10, !dbg !1638
  br i1 %_4.i26, label %_ZN4core10intrinsics4copy7runtime17h6de5a8af59557247E.exit, label %bb5.i, !dbg !1638

_ZN4core10intrinsics4copy7runtime17h6de5a8af59557247E.exit: ; preds = %bb2.i25
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %x, ptr align 8 %y, i64 8, i1 false), !dbg !1639
  store ptr %tmp, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !1640, metadata !DIExpression()), !dbg !1647
  store ptr %tmp, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1594, metadata !DIExpression()), !dbg !1649
  store ptr %y, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1599, metadata !DIExpression()), !dbg !1651
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1600, metadata !DIExpression()), !dbg !1652
  store ptr %tmp, ptr %_6.i, align 8, !dbg !1653
  %12 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !1653
  store ptr %y, ptr %12, align 8, !dbg !1653
  %13 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !1653
  store i64 1, ptr %13, align 8, !dbg !1653
  %14 = load ptr, ptr %_6.i, align 8, !dbg !1653, !noundef !24
  %15 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !1653
  %16 = load ptr, ptr %15, align 8, !dbg !1653, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !1653
  %18 = load i64, ptr %17, align 8, !dbg !1653, !noundef !24
  store ptr %14, ptr %src.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i10, metadata !1606, metadata !DIExpression()), !dbg !1654
  store ptr %16, ptr %dst.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i9, metadata !1609, metadata !DIExpression()), !dbg !1654
  store i64 %18, ptr %count.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i8, metadata !1610, metadata !DIExpression()), !dbg !1654
; call core::intrinsics::is_aligned_and_not_null
  %_4.i11 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1612fbb90accac66E(ptr %14) #10, !dbg !1656
  br i1 %_4.i11, label %bb2.i13, label %bb7.i12, !dbg !1656

bb7.i12:                                          ; preds = %bb4.i15, %bb2.i13, %_ZN4core10intrinsics4copy7runtime17h6de5a8af59557247E.exit
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !1657
  unreachable, !dbg !1657

bb2.i13:                                          ; preds = %_ZN4core10intrinsics4copy7runtime17h6de5a8af59557247E.exit
; call core::intrinsics::is_aligned_and_not_null
  %_5.i14 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1612fbb90accac66E(ptr %16) #10, !dbg !1658
  br i1 %_5.i14, label %bb4.i15, label %bb7.i12, !dbg !1658

bb4.i15:                                          ; preds = %bb2.i13
; call core::intrinsics::is_nonoverlapping
  %_7.i16 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h2a00735316d394b7E(ptr %14, ptr %16, i64 %18) #10, !dbg !1659
  br i1 %_7.i16, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hc65679eac91a17e4E.exit17, label %bb7.i12, !dbg !1659

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hc65679eac91a17e4E.exit17: ; preds = %bb4.i15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %y, ptr align 8 %tmp, i64 8, i1 false), !dbg !1660
  ret void, !dbg !1661
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h441935d3b6ac0554E(ptr %dst, ptr align 8 %src) unnamed_addr #0 !dbg !1662 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1666, metadata !DIExpression()), !dbg !1668
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1667, metadata !DIExpression()), !dbg !1669
  br i1 true, label %bb1, label %bb2, !dbg !1670

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h3f687b0cf69634bcE.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1671
  ret void, !dbg !1672

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1670
  %0 = load ptr, ptr %_5, align 8, !dbg !1670, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1673, metadata !DIExpression()), !dbg !1679
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5500bd819355ffffE(ptr %0) #10, !dbg !1681
  br i1 %_2.i, label %_ZN4core3ptr5write7runtime17h3f687b0cf69634bcE.exit, label %bb3.i, !dbg !1681

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1683
  unreachable, !dbg !1683

_ZN4core3ptr5write7runtime17h3f687b0cf69634bcE.exit: ; preds = %bb1
  br label %bb2, !dbg !1670
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h64e07bc1481c4f30E(ptr %dst, i8 %src) unnamed_addr #0 !dbg !1684 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca i8, align 1
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1688, metadata !DIExpression()), !dbg !1690
  store i8 %src, ptr %src.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1689, metadata !DIExpression()), !dbg !1691
  br i1 true, label %bb1, label %bb2, !dbg !1692

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17hfe7c952dc41e9bc9E.exit, %start
  store i8 %src, ptr %dst, align 1, !dbg !1693
  ret void, !dbg !1694

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1692
  %0 = load ptr, ptr %_5, align 8, !dbg !1692, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1695, metadata !DIExpression()), !dbg !1700
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h7f0f60df0751b86aE(ptr %0) #10, !dbg !1702
  br i1 %_2.i, label %_ZN4core3ptr5write7runtime17hfe7c952dc41e9bc9E.exit, label %bb3.i, !dbg !1702

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1704
  unreachable, !dbg !1704

_ZN4core3ptr5write7runtime17hfe7c952dc41e9bc9E.exit: ; preds = %bb1
  br label %bb2, !dbg !1692
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hb85e195ed1884d82E(ptr %dst, i64 %src) unnamed_addr #0 !dbg !1705 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1709, metadata !DIExpression()), !dbg !1711
  store i64 %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1710, metadata !DIExpression()), !dbg !1712
  br i1 true, label %bb1, label %bb2, !dbg !1713

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17h44690ec1e4e1cf07E.exit, %start
  store i64 %src, ptr %dst, align 8, !dbg !1714
  ret void, !dbg !1715

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1713
  %0 = load ptr, ptr %_5, align 8, !dbg !1713, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1716, metadata !DIExpression()), !dbg !1721
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hd3e5782687a36f3eE(ptr %0) #10, !dbg !1723
  br i1 %_2.i, label %_ZN4core3ptr5write7runtime17h44690ec1e4e1cf07E.exit, label %bb3.i, !dbg !1723

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1725
  unreachable, !dbg !1725

_ZN4core3ptr5write7runtime17h44690ec1e4e1cf07E.exit: ; preds = %bb1
  br label %bb2, !dbg !1713
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hd3776409b8a0c2c6E(ptr %dst, ptr align 8 %src) unnamed_addr #0 !dbg !1726 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1730, metadata !DIExpression()), !dbg !1732
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1731, metadata !DIExpression()), !dbg !1733
  br i1 true, label %bb1, label %bb2, !dbg !1734

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17he771d886c72844a3E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1735
  ret void, !dbg !1736

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1734
  %0 = load ptr, ptr %_5, align 8, !dbg !1734, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1737, metadata !DIExpression()), !dbg !1742
; call core::intrinsics::is_aligned_and_not_null
  %_2.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %0) #10, !dbg !1744
  br i1 %_2.i, label %_ZN4core3ptr5write7runtime17he771d886c72844a3E.exit, label %bb3.i, !dbg !1744

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1746
  unreachable, !dbg !1746

_ZN4core3ptr5write7runtime17he771d886c72844a3E.exit: ; preds = %bb1
  br label %bb2, !dbg !1734
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::FrameRange>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h662fe180decc0f68E"(ptr align 8 %_1) unnamed_addr #0 !dbg !1747 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1752, metadata !DIExpression()), !dbg !1755
  ret void, !dbg !1755
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17hb941c6545ab6374fE"(ptr align 8 %_1) unnamed_addr #0 !dbg !1756 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1761, metadata !DIExpression()), !dbg !1762
  ret void, !dbg !1762
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h398633e1e3945dc3E"(ptr align 8 %_1) unnamed_addr #0 !dbg !1763 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1768, metadata !DIExpression()), !dbg !1771
  ret void, !dbg !1771
}

; core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17he8eed1947dbf4e99E"(ptr %ptr) unnamed_addr #0 !dbg !1772 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1777, metadata !DIExpression()), !dbg !1778
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1779, metadata !DIExpression()), !dbg !1784
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1786, metadata !DIExpression()), !dbg !1792
  %_0.i = ptrtoint ptr %ptr to i64, !dbg !1794
  %_0 = icmp eq i64 %_0.i, 0, !dbg !1795
  ret i1 %_0, !dbg !1796
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h040aa9b4bb00386bE"(ptr %self) unnamed_addr #0 !dbg !1797 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1801, metadata !DIExpression()), !dbg !1802
  store ptr %self, ptr %_2, align 8, !dbg !1803
  %0 = load ptr, ptr %_2, align 8, !dbg !1804, !noundef !24
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17he8eed1947dbf4e99E"(ptr %0) #10, !dbg !1804
  ret i1 %_0, !dbg !1805
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hf3c6b37c41e09fadE(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1806 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1812, metadata !DIExpression()), !dbg !1814
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1813, metadata !DIExpression()), !dbg !1815
  store ptr %data_address, ptr %_4, align 8, !dbg !1816
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1816
  store i64 %metadata, ptr %0, align 8, !dbg !1816
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1817
  %2 = load ptr, ptr %1, align 8, !dbg !1817, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1817
  %4 = load i64, ptr %3, align 8, !dbg !1817, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1817
  store ptr %2, ptr %5, align 8, !dbg !1817
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1817
  store i64 %4, ptr %6, align 8, !dbg !1817
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1817
  %_0.0 = load ptr, ptr %7, align 8, !dbg !1817, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1817
  %_0.1 = load i64, ptr %8, align 8, !dbg !1817, !noundef !24
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1818
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1, !dbg !1818
  ret { ptr, i64 } %10, !dbg !1818
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h959d99cc4cce15feE(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1819 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1823, metadata !DIExpression()), !dbg !1825
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1824, metadata !DIExpression()), !dbg !1826
  store ptr %data_address, ptr %_4, align 8, !dbg !1827
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1827
  store i64 %metadata, ptr %0, align 8, !dbg !1827
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1828
  %2 = load ptr, ptr %1, align 8, !dbg !1828, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1828
  %4 = load i64, ptr %3, align 8, !dbg !1828, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1828
  store ptr %2, ptr %5, align 8, !dbg !1828
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1828
  store i64 %4, ptr %6, align 8, !dbg !1828
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1828
  %_0.0 = load ptr, ptr %7, align 8, !dbg !1828, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1828
  %_0.1 = load i64, ptr %8, align 8, !dbg !1828, !noundef !24
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1829
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1, !dbg !1829
  ret { ptr, i64 } %10, !dbg !1829
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17he6b55a9cedbd3c40E(ptr %data_address) unnamed_addr #0 !dbg !1830 {
start:
  %metadata.dbg.spill = alloca {}, align 1
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1834, metadata !DIExpression()), !dbg !1836
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1835, metadata !DIExpression()), !dbg !1837
  store ptr %data_address, ptr %_4, align 8, !dbg !1838
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 8, i1 false), !dbg !1839
  %_0 = load ptr, ptr %_3, align 8, !dbg !1839, !noundef !24
  ret ptr %_0, !dbg !1840
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr8metadata8metadata17hc8ef30a845d81c17E(ptr %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1841 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1845, metadata !DIExpression()), !dbg !1846
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 0, !dbg !1847
  store ptr %ptr.0, ptr %2, align 8, !dbg !1847
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1847
  store i64 %ptr.1, ptr %3, align 8, !dbg !1847
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1847
  %_0 = load i64, ptr %4, align 8, !dbg !1847, !noundef !24
  ret i64 %_0, !dbg !1848
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc37420ae12594e56E"(ptr %ptr) unnamed_addr #0 !dbg !1849 {
start:
  %ptr.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %_0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1855, metadata !DIExpression()), !dbg !1856
  br i1 true, label %bb1, label %bb2, !dbg !1857

bb2:                                              ; preds = %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h2047a44b0be181cdE.exit", %start
  store ptr %ptr, ptr %_0, align 8, !dbg !1858
  %0 = load ptr, ptr %_0, align 8, !dbg !1859, !nonnull !24, !noundef !24
  ret ptr %0, !dbg !1859

bb1:                                              ; preds = %start
  store ptr %ptr, ptr %_4, align 8, !dbg !1857
  %1 = load ptr, ptr %_4, align 8, !dbg !1857, !noundef !24
  store ptr %1, ptr %ptr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !1860, metadata !DIExpression()), !dbg !1865
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_2.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h040aa9b4bb00386bE"(ptr %1) #10, !dbg !1867
  br i1 %_2.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h2047a44b0be181cdE.exit", !dbg !1867

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_20b3d155afd5c58c42e598b7e6d186ef, i64 93) #11, !dbg !1869
  unreachable, !dbg !1869

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h2047a44b0be181cdE.exit": ; preds = %bb1
  br label %bb2, !dbg !1857
}

; core::ptr::non_null::NonNull<T>::add
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17ha6d460848033116aE"(ptr %self, i64 %delta) unnamed_addr #0 !dbg !1870 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %delta.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_0 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1875, metadata !DIExpression()), !dbg !1877
  store i64 %delta, ptr %delta.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %delta.dbg.spill, metadata !1876, metadata !DIExpression()), !dbg !1878
  store ptr %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !129, metadata !DIExpression()), !dbg !1879
  store i64 %delta, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !139, metadata !DIExpression()), !dbg !1881
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self, i64 %delta, !dbg !1882
  store ptr %_0.i, ptr %_0, align 8, !dbg !1883
  %0 = load ptr, ptr %_0, align 8, !dbg !1884, !nonnull !24, !noundef !24
  ret ptr %0, !dbg !1884
}

; core::ptr::non_null::NonNull<T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hf2d2301368182478E"(ptr %self, ptr %subtrahend) unnamed_addr #0 !dbg !1885 {
start:
  %subtrahend.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1890, metadata !DIExpression()), !dbg !1892
  store ptr %subtrahend, ptr %subtrahend.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %subtrahend.dbg.spill, metadata !1891, metadata !DIExpression()), !dbg !1893
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %_0 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h2c9e785a47eeb35fE"(ptr %self, ptr %subtrahend) #10, !dbg !1894
  ret i64 %_0, !dbg !1895
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17ha9aef0cb0ca5c960E"(ptr %self) unnamed_addr #0 !dbg !1896 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1898, metadata !DIExpression()), !dbg !1899
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h51f6a682774a149dE"(ptr %self, i64 8) #10, !dbg !1900
  ret i1 %_0, !dbg !1901
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hcfdf559d3975f77eE"(ptr %self) unnamed_addr #0 !dbg !1902 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1904, metadata !DIExpression()), !dbg !1905
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h56f9a9f16f5b1a5fE"(ptr %self, i64 8) #10, !dbg !1906
  ret i1 %_0, !dbg !1907
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hf4b0165c208499a6E"(ptr %self) unnamed_addr #0 !dbg !1908 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1910, metadata !DIExpression()), !dbg !1911
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h7418fe3547edb813E"(ptr %self, i64 8) #10, !dbg !1912
  ret i1 %_0, !dbg !1913
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hfb66024206fdcccfE"(ptr %ptr, i64 %align) unnamed_addr #0 !dbg !1914 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %align.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1919, metadata !DIExpression()), !dbg !1921
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1920, metadata !DIExpression()), !dbg !1922
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1923, metadata !DIExpression()), !dbg !1929
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1931, metadata !DIExpression()), !dbg !1937
  %_0.i = ptrtoint ptr %ptr to i64, !dbg !1939
  %_6.0 = sub i64 %align, 1, !dbg !1940
  %_6.1 = icmp ult i64 %align, 1, !dbg !1940
  %0 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !1940
  br i1 %0, label %panic, label %bb2, !dbg !1940

bb2:                                              ; preds = %start
  %_3 = and i64 %_0.i, %_6.0, !dbg !1941
  %_0 = icmp eq i64 %_3, 0, !dbg !1941
  ret i1 %_0, !dbg !1942

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_4bcb15f15595c17bc1913134e3b35d04) #11, !dbg !1940
  unreachable, !dbg !1940
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h51f6a682774a149dE"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1943 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1947, metadata !DIExpression()), !dbg !1949
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1948, metadata !DIExpression()), !dbg !1950
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1135, metadata !DIExpression()), !dbg !1951
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1140, metadata !DIExpression()), !dbg !1953
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1955
  store i64 %1, ptr %0, align 8, !dbg !1955
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1955, !noundef !24
  %_0.i.i = trunc i64 %_2.i.i to i32, !dbg !1955
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !1956
  br i1 %_0.i, label %bb2, label %bb3, !dbg !1957

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17hde10ce898de6c3e5E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !1958
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h86da5b04361eb664E(ptr align 8 %_5, ptr align 8 @alloc_a5a2cefd12e4dcb74529f6c9c92f7a5b) #11, !dbg !1958
  unreachable, !dbg !1958

bb2:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !512, metadata !DIExpression()), !dbg !1959
  store ptr %self, ptr %_7, align 8, !dbg !1961
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1961
  store i64 %align, ptr %2, align 8, !dbg !1961
  %3 = load ptr, ptr %_7, align 8, !dbg !1962, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1962
  %5 = load i64, ptr %4, align 8, !dbg !1962, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hfb66024206fdcccfE"(ptr %3, i64 %5) #10, !dbg !1962
  ret i1 %_0, !dbg !1963
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h56f9a9f16f5b1a5fE"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1964 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1968, metadata !DIExpression()), !dbg !1970
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1969, metadata !DIExpression()), !dbg !1971
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1135, metadata !DIExpression()), !dbg !1972
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1140, metadata !DIExpression()), !dbg !1974
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1976
  store i64 %1, ptr %0, align 8, !dbg !1976
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1976, !noundef !24
  %_0.i.i = trunc i64 %_2.i.i to i32, !dbg !1976
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !1977
  br i1 %_0.i, label %bb2, label %bb3, !dbg !1978

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17hde10ce898de6c3e5E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !1979
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h86da5b04361eb664E(ptr align 8 %_5, ptr align 8 @alloc_a5a2cefd12e4dcb74529f6c9c92f7a5b) #11, !dbg !1979
  unreachable, !dbg !1979

bb2:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1980, metadata !DIExpression()), !dbg !1986
  store ptr %self, ptr %_7, align 8, !dbg !1988
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1988
  store i64 %align, ptr %2, align 8, !dbg !1988
  %3 = load ptr, ptr %_7, align 8, !dbg !1989, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !1989
  %5 = load i64, ptr %4, align 8, !dbg !1989, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hfb66024206fdcccfE"(ptr %3, i64 %5) #10, !dbg !1989
  ret i1 %_0, !dbg !1990
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h7418fe3547edb813E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1991 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1995, metadata !DIExpression()), !dbg !1997
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1996, metadata !DIExpression()), !dbg !1998
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1135, metadata !DIExpression()), !dbg !1999
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1140, metadata !DIExpression()), !dbg !2001
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !2003
  store i64 %1, ptr %0, align 8, !dbg !2003
  %_2.i.i = load i64, ptr %0, align 8, !dbg !2003, !noundef !24
  %_0.i.i = trunc i64 %_2.i.i to i32, !dbg !2003
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !2004
  br i1 %_0.i, label %bb2, label %bb3, !dbg !2005

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17hde10ce898de6c3e5E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !2006
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h86da5b04361eb664E(ptr align 8 %_5, ptr align 8 @alloc_a5a2cefd12e4dcb74529f6c9c92f7a5b) #11, !dbg !2006
  unreachable, !dbg !2006

bb2:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2007, metadata !DIExpression()), !dbg !2013
  store ptr %self, ptr %_7, align 8, !dbg !2015
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !2015
  store i64 %align, ptr %2, align 8, !dbg !2015
  %3 = load ptr, ptr %_7, align 8, !dbg !2016, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !2016
  %5 = load i64, ptr %4, align 8, !dbg !2016, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hfb66024206fdcccfE"(ptr %3, i64 %5) #10, !dbg !2016
  ret i1 %_0, !dbg !2017
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h5ae32a927416a94aE"(ptr %ptr) unnamed_addr #0 !dbg !2018 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2024, metadata !DIExpression()), !dbg !2025
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2026, metadata !DIExpression()), !dbg !2031
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2033, metadata !DIExpression()), !dbg !2038
  %_0.i = ptrtoint ptr %ptr to i64, !dbg !2040
  %_0 = icmp eq i64 %_0.i, 0, !dbg !2041
  ret i1 %_0, !dbg !2042
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hae8099c4d7ce6037E"(ptr %self) unnamed_addr #0 !dbg !2043 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2045, metadata !DIExpression()), !dbg !2046
  store ptr %self, ptr %_2, align 8, !dbg !2047
  %0 = load ptr, ptr %_2, align 8, !dbg !2048, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h5ae32a927416a94aE"(ptr %0) #10, !dbg !2048
  ret i1 %_0, !dbg !2049
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17he51a47d9649f975dE"(ptr %self) unnamed_addr #0 !dbg !2050 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2052, metadata !DIExpression()), !dbg !2053
  store ptr %self, ptr %_2, align 8, !dbg !2054
  %0 = load ptr, ptr %_2, align 8, !dbg !2055, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h5ae32a927416a94aE"(ptr %0) #10, !dbg !2055
  ret i1 %_0, !dbg !2056
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf86344061e33e18fE"(ptr %self) unnamed_addr #0 !dbg !2057 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2059, metadata !DIExpression()), !dbg !2060
  store ptr %self, ptr %_2, align 8, !dbg !2061
  %0 = load ptr, ptr %_2, align 8, !dbg !2062, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h5ae32a927416a94aE"(ptr %0) #10, !dbg !2062
  ret i1 %_0, !dbg !2063
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h2c9e785a47eeb35fE"(ptr %self, ptr %origin) unnamed_addr #0 !dbg !2064 {
start:
  %origin.dbg.spill.i = alloca ptr, align 8
  %this.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %pointee_size.dbg.spill = alloca i64, align 8
  %origin.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2068, metadata !DIExpression()), !dbg !2074
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2070, metadata !DIExpression()), !dbg !2075
  store ptr %origin, ptr %origin.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill, metadata !2069, metadata !DIExpression()), !dbg !2076
  br i1 true, label %bb1, label %bb2, !dbg !2077

bb2:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h4b86b34df969d7f3E.exit", %start
  store i64 24, ptr %pointee_size.dbg.spill, align 8, !dbg !2078
  call void @llvm.dbg.declare(metadata ptr %pointee_size.dbg.spill, metadata !2072, metadata !DIExpression()), !dbg !2079
  %_7 = icmp ult i64 0, 24, !dbg !2080
  br i1 %_7, label %bb4, label %bb6, !dbg !2080

bb1:                                              ; preds = %start
  store ptr %self, ptr %_5, align 8, !dbg !2077
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2077
  store ptr %origin, ptr %1, align 8, !dbg !2077
  %2 = load ptr, ptr %_5, align 8, !dbg !2077, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2077
  %4 = load ptr, ptr %3, align 8, !dbg !2077, !noundef !24
  store ptr %2, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !2081, metadata !DIExpression()), !dbg !2088
  store ptr %4, ptr %origin.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill.i, metadata !2087, metadata !DIExpression()), !dbg !2088
  %_3.i = icmp uge ptr %2, %4, !dbg !2090
  br i1 %_3.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h4b86b34df969d7f3E.exit", label %bb2.i, !dbg !2090

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_cb50775363ffdd1238910b6e9573721d, i64 71) #11, !dbg !2092
  unreachable, !dbg !2092

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h4b86b34df969d7f3E.exit": ; preds = %bb1
  br label %bb2, !dbg !2077

bb6:                                              ; preds = %bb4, %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_2da2f38e2890c713b5fd9b5d1b036a1b) #11, !dbg !2093
  unreachable, !dbg !2093

bb4:                                              ; preds = %bb2
  %_8 = icmp ule i64 24, 9223372036854775807, !dbg !2094
  br i1 %_8, label %bb5, label %bb6, !dbg !2094

bb5:                                              ; preds = %bb4
  %5 = ptrtoint ptr %self to i64, !dbg !2095
  %6 = ptrtoint ptr %origin to i64, !dbg !2095
  %7 = sub nuw i64 %5, %6, !dbg !2095
  %8 = udiv exact i64 %7, 24, !dbg !2095
  store i64 %8, ptr %0, align 8, !dbg !2095
  %_0 = load i64, ptr %0, align 8, !dbg !2095, !noundef !24
  ret i64 %_0, !dbg !2096
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17ha47c303ab005f629E"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !2097 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2100, metadata !DIExpression()), !dbg !2101
; call core::ptr::metadata::metadata
  %_0 = call i64 @_ZN4core3ptr8metadata8metadata17hc8ef30a845d81c17E(ptr %self.0, i64 %self.1) #10, !dbg !2102
  ret i64 %_0, !dbg !2103
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbb1b5859ff6168a9E"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !2104 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2108, metadata !DIExpression()), !dbg !2109
  ret ptr %self.0, !dbg !2110
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17ha1e54afdad5089e1E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !2111 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2122, metadata !DIExpression()), !dbg !2126
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !2123, metadata !DIExpression()), !dbg !2127
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5f700e7b114b712E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !2128
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2128
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2128
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !2129
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !2129
  ret { ptr, i64 } %5, !dbg !2129
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h86468e1593045ca2E"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !2130 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2136, metadata !DIExpression()), !dbg !2138
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !2137, metadata !DIExpression()), !dbg !2139
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h85a2628b90dfe8e1E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !2140
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2140
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2140
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !2141
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !2141
  ret { ptr, i64 } %5, !dbg !2141
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h1643ef83df19a1adE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_0, ptr align 8 %self.0, i64 %self.1, i64 %mid, ptr align 8 %0) unnamed_addr #0 !dbg !2142 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2151, metadata !DIExpression()), !dbg !2153
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !2152, metadata !DIExpression()), !dbg !2154
  %_3 = icmp ule i64 %mid, %self.1, !dbg !2155
  br i1 %_3, label %bb1, label %bb2, !dbg !2155

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_fddaeef1fe1a23c45402ef8f58614acb, i64 35, ptr align 8 %0) #11, !dbg !2156
  unreachable, !dbg !2156

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h1955424b01fba3b3E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_0, ptr align 8 %self.0, i64 %self.1, i64 %mid) #10, !dbg !2157
  ret void, !dbg !2158
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !2159 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2163, metadata !DIExpression()), !dbg !2167
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !2164, metadata !DIExpression()), !dbg !2168
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h54996780d583227eE"(i64 %index, ptr %self.0, i64 %self.1) #10, !dbg !2169
  ret ptr %_3, !dbg !2170
}

; core::slice::<impl [T]>::as_mut_ptr_range
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17ha59fea28b2dc194cE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2171 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_0 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2181, metadata !DIExpression()), !dbg !2186
  store ptr %self.0, ptr %self.dbg.spill.i2, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !2187, metadata !DIExpression()), !dbg !2192
  store ptr %self.0, ptr %start.dbg.spill, align 8, !dbg !2194
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2182, metadata !DIExpression()), !dbg !2195
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !193, metadata !DIExpression()), !dbg !2196
  store i64 %self.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !2198
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %self.1, !dbg !2199
  store ptr %_0.i, ptr %end.dbg.spill, align 8, !dbg !2200
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2184, metadata !DIExpression()), !dbg !2201
  store ptr %self.0, ptr %_0, align 8, !dbg !2202
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 1, !dbg !2202
  store ptr %_0.i, ptr %3, align 8, !dbg !2202
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 0, !dbg !2203
  %5 = load ptr, ptr %4, align 8, !dbg !2203, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 1, !dbg !2203
  %7 = load ptr, ptr %6, align 8, !dbg !2203, !noundef !24
  %8 = insertvalue { ptr, ptr } poison, ptr %5, 0, !dbg !2203
  %9 = insertvalue { ptr, ptr } %8, ptr %7, 1, !dbg !2203
  ret { ptr, ptr } %9, !dbg !2203
}

; core::slice::<impl [T]>::sort_unstable_by
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17heb695b36b9616ba4E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2204 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_4 = alloca ptr, align 8
  %compare = alloca %"{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}", align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2208, metadata !DIExpression()), !dbg !2212
  call void @llvm.dbg.declare(metadata ptr %compare, metadata !2209, metadata !DIExpression()), !dbg !2213
  store ptr %compare, ptr %_4, align 8, !dbg !2214
  %2 = load ptr, ptr %_4, align 8, !dbg !2215, !nonnull !24, !align !2216, !noundef !24
; call core::slice::sort::quicksort
  call void @_ZN4core5slice4sort9quicksort17h1fcea23794d9a678E(ptr align 8 %self.0, i64 %self.1, ptr align 1 %2) #10, !dbg !2215
  ret void, !dbg !2217
}

; core::slice::<impl [T]>::sort_unstable_by::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2218 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  %_5 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2224, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2225
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2222, metadata !DIExpression()), !dbg !2226
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2223, metadata !DIExpression()), !dbg !2227
  %_8 = load ptr, ptr %_1, align 8, !dbg !2228, !nonnull !24, !align !2216, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2228
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2228
  store ptr %b, ptr %0, align 8, !dbg !2228
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2228
  %2 = load ptr, ptr %1, align 8, !dbg !2228, !nonnull !24, !align !417, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2228
  %4 = load ptr, ptr %3, align 8, !dbg !2228, !nonnull !24, !align !417, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %5 = call i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17he8e951769960313fE"(ptr align 1 %_8, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2228, !range !623
  store i8 %5, ptr %_5, align 1, !dbg !2228
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7f77a1708ef0cb67E"(ptr align 1 %_5, ptr align 1 @alloc_9a72dc1c87ddefcce62e4b5ab68e5150) #10, !dbg !2228
  ret i1 %_0, !dbg !2229
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h1955424b01fba3b3E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_0, ptr align 8 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 !dbg !2230 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %mid.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2234, metadata !DIExpression()), !dbg !2240
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !2235, metadata !DIExpression()), !dbg !2241
  store i64 %self.1, ptr %len.dbg.spill, align 8, !dbg !2242
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2236, metadata !DIExpression()), !dbg !2243
  store ptr %self.0, ptr %self.dbg.spill.i1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2187, metadata !DIExpression()), !dbg !2244
  store ptr %self.0, ptr %ptr.dbg.spill, align 8, !dbg !2246
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2238, metadata !DIExpression()), !dbg !2247
  br i1 true, label %bb2, label %bb3, !dbg !2248

bb3:                                              ; preds = %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17hd086fbc44f47bfc9E.exit", %start
; call core::slice::raw::from_raw_parts_mut
  %3 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h8f3f46e736c16badE(ptr %self.0, i64 %mid) #10, !dbg !2249
  %_9.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2249
  %_9.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2249
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !193, metadata !DIExpression()), !dbg !2250
  store i64 %mid, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !2252
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %mid, !dbg !2253
  %_13.0 = sub i64 %self.1, %mid, !dbg !2254
  %_13.1 = icmp ult i64 %self.1, %mid, !dbg !2254
  %4 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !2254
  br i1 %4, label %panic, label %bb6, !dbg !2254

bb2:                                              ; preds = %start
  store i64 %mid, ptr %_8, align 8, !dbg !2248
  %5 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !2248
  store i64 %self.1, ptr %5, align 8, !dbg !2248
  %6 = load i64, ptr %_8, align 8, !dbg !2248, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !2248
  %8 = load i64, ptr %7, align 8, !dbg !2248, !noundef !24
  store i64 %6, ptr %mid.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill.i, metadata !2255, metadata !DIExpression()), !dbg !2262
  store i64 %8, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2261, metadata !DIExpression()), !dbg !2262
  %_3.i = icmp ule i64 %6, %8, !dbg !2264
  br i1 %_3.i, label %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17hd086fbc44f47bfc9E.exit", label %bb2.i, !dbg !2264

bb2.i:                                            ; preds = %bb2
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_3dc073651148de734d2593768efc16e9, i64 104) #11, !dbg !2266
  unreachable, !dbg !2266

"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17hd086fbc44f47bfc9E.exit": ; preds = %bb2
  br label %bb3, !dbg !2248

bb6:                                              ; preds = %bb3
; call core::slice::raw::from_raw_parts_mut
  %9 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h8f3f46e736c16badE(ptr %_0.i, i64 %_13.0) #10, !dbg !2267
  %_10.0 = extractvalue { ptr, i64 } %9, 0, !dbg !2267
  %_10.1 = extractvalue { ptr, i64 } %9, 1, !dbg !2267
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 0, !dbg !2268
  store ptr %_9.0, ptr %10, align 8, !dbg !2268
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_0, i32 0, i32 1, !dbg !2268
  store i64 %_9.1, ptr %11, align 8, !dbg !2268
  %12 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_0, i32 0, i32 1, !dbg !2268
  %13 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 0, !dbg !2268
  store ptr %_10.0, ptr %13, align 8, !dbg !2268
  %14 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 1, !dbg !2268
  store i64 %_10.1, ptr %14, align 8, !dbg !2268
  ret void, !dbg !2269

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_2b33c20cb1fa00ea93074be2fc812778) #11, !dbg !2254
  unreachable, !dbg !2254
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h32e552a6961cde6cE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2270 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2274, metadata !DIExpression()), !dbg !2275
; call core::slice::iter::Iter<T>::new
  %2 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h10550916002f3cb1E"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2276
  %_0.0 = extractvalue { ptr, ptr } %2, 0, !dbg !2276
  %_0.1 = extractvalue { ptr, ptr } %2, 1, !dbg !2276
  %3 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !2277
  %4 = insertvalue { ptr, ptr } %3, ptr %_0.1, 1, !dbg !2277
  ret { ptr, ptr } %4, !dbg !2277
}

; core::slice::<impl [T]>::swap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h992bdd3442f31a9fE"(ptr align 8 %self.0, i64 %self.1, i64 %a, i64 %b, ptr align 8 %0) unnamed_addr #0 !dbg !2278 {
start:
  %pb.dbg.spill = alloca ptr, align 8
  %pa.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2282, metadata !DIExpression()), !dbg !2289
  store i64 %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2283, metadata !DIExpression()), !dbg !2290
  store i64 %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2284, metadata !DIExpression()), !dbg !2291
  %_6 = icmp ult i64 %a, %self.1, !dbg !2292
  %3 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !2292
  br i1 %3, label %bb1, label %panic, !dbg !2292

bb1:                                              ; preds = %start
  %pa = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %a, !dbg !2293
  store ptr %pa, ptr %pa.dbg.spill, align 8, !dbg !2293
  call void @llvm.dbg.declare(metadata ptr %pa.dbg.spill, metadata !2285, metadata !DIExpression()), !dbg !2294
  %_9 = icmp ult i64 %b, %self.1, !dbg !2295
  %4 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !2295
  br i1 %4, label %bb2, label %panic1, !dbg !2295

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %a, i64 %self.1, ptr align 8 %0) #11, !dbg !2292
  unreachable, !dbg !2292

bb2:                                              ; preds = %bb1
  %pb = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %b, !dbg !2296
  store ptr %pb, ptr %pb.dbg.spill, align 8, !dbg !2296
  call void @llvm.dbg.declare(metadata ptr %pb.dbg.spill, metadata !2287, metadata !DIExpression()), !dbg !2297
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2f264edc6d2d6d71E(ptr %pa, ptr %pb) #10, !dbg !2298
  ret void, !dbg !2299

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %b, i64 %self.1, ptr align 8 %0) #11, !dbg !2295
  unreachable, !dbg !2295
}

; core::slice::<impl [T]>::reverse
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h2e669edfa5aee244E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2300 {
start:
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %_0.i = alloca ptr, align 8
  %back_half.dbg.spill = alloca { ptr, i64 }, align 8
  %front_half.dbg.spill = alloca { ptr, i64 }, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %half_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2304, metadata !DIExpression()), !dbg !2313
  %half_len = udiv i64 %self.1, 2, !dbg !2314
  store i64 %half_len, ptr %half_len.dbg.spill, align 8, !dbg !2314
  call void @llvm.dbg.declare(metadata ptr %half_len.dbg.spill, metadata !2305, metadata !DIExpression()), !dbg !2315
; call core::slice::<impl [T]>::as_mut_ptr_range
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17ha59fea28b2dc194cE"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2316
  %_8.0 = extractvalue { ptr, ptr } %2, 0, !dbg !2316
  %_8.1 = extractvalue { ptr, ptr } %2, 1, !dbg !2316
  store ptr %_8.0, ptr %start.dbg.spill, align 8, !dbg !2317
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2307, metadata !DIExpression()), !dbg !2318
  store ptr %_8.1, ptr %end.dbg.spill, align 8, !dbg !2319
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2309, metadata !DIExpression()), !dbg !2320
; call core::slice::raw::from_raw_parts_mut
  %3 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h8f3f46e736c16badE(ptr %_8.0, i64 %half_len) #10, !dbg !2321
  %_12.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2321
  %_12.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2321
  store ptr %_8.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2322, metadata !DIExpression()), !dbg !2326
  store i64 %half_len, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2325, metadata !DIExpression()), !dbg !2328
  %_4.i = sub nsw i64 0, %half_len, !dbg !2329
  store ptr %_8.1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !2330, metadata !DIExpression()), !dbg !2337
  store i64 %_4.i, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !2336, metadata !DIExpression()), !dbg !2339
  %_0.i3 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_8.1, i64 %_4.i, !dbg !2340
  store ptr %_0.i3, ptr %_0.i, align 8, !dbg !2341
  %4 = load ptr, ptr %_0.i, align 8, !dbg !2342, !noundef !24
; call core::slice::raw::from_raw_parts_mut
  %5 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h8f3f46e736c16badE(ptr %4, i64 %half_len) #10, !dbg !2343
  %_13.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2343
  %_13.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2343
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2344
  store ptr %_12.0, ptr %6, align 8, !dbg !2344
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2344
  store i64 %_12.1, ptr %7, align 8, !dbg !2344
  %8 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2344
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !2344
  store ptr %_13.0, ptr %9, align 8, !dbg !2344
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !2344
  store i64 %_13.1, ptr %10, align 8, !dbg !2344
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2345
  %front_half.0 = load ptr, ptr %11, align 8, !dbg !2345, !nonnull !24, !align !417, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2345
  %front_half.1 = load i64, ptr %12, align 8, !dbg !2345, !noundef !24
  %13 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 0, !dbg !2345
  store ptr %front_half.0, ptr %13, align 8, !dbg !2345
  %14 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 1, !dbg !2345
  store i64 %front_half.1, ptr %14, align 8, !dbg !2345
  call void @llvm.dbg.declare(metadata ptr %front_half.dbg.spill, metadata !2310, metadata !DIExpression()), !dbg !2346
  %15 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2347
  %16 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 0, !dbg !2347
  %back_half.0 = load ptr, ptr %16, align 8, !dbg !2347, !nonnull !24, !align !417, !noundef !24
  %17 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 1, !dbg !2347
  %back_half.1 = load i64, ptr %17, align 8, !dbg !2347, !noundef !24
  %18 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 0, !dbg !2347
  store ptr %back_half.0, ptr %18, align 8, !dbg !2347
  %19 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 1, !dbg !2347
  store i64 %back_half.1, ptr %19, align 8, !dbg !2347
  call void @llvm.dbg.declare(metadata ptr %back_half.dbg.spill, metadata !2312, metadata !DIExpression()), !dbg !2348
; call core::slice::<impl [T]>::reverse::revswap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17hfe440e9173f3e370E"(ptr align 8 %front_half.0, i64 %front_half.1, ptr align 8 %back_half.0, i64 %back_half.1, i64 %half_len) #10, !dbg !2349
  ret void, !dbg !2350
}

; core::slice::<impl [T]>::reverse::revswap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17hfe440e9173f3e370E"(ptr align 8 %a.0, i64 %a.1, ptr align 8 %b.0, i64 %b.1, i64 %n) unnamed_addr #0 !dbg !2351 {
start:
  %b.dbg.spill6 = alloca { ptr, i64 }, align 8
  %a.dbg.spill3 = alloca { ptr, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %a.dbg.spill = alloca { ptr, i64 }, align 8
  %i = alloca i64, align 8
  %_20 = alloca i64, align 8
  %_18 = alloca i64, align 8
  %_16 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 0
  store ptr %a.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 1
  store i64 %a.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2356, metadata !DIExpression()), !dbg !2364
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2357, metadata !DIExpression()), !dbg !2365
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !2358, metadata !DIExpression()), !dbg !2366
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2362, metadata !DIExpression()), !dbg !2367
  br i1 true, label %bb1, label %bb3, !dbg !2368

bb3:                                              ; preds = %bb1, %start
  br i1 true, label %bb4, label %bb6, !dbg !2369

bb1:                                              ; preds = %start
  %_5 = icmp eq i64 %a.1, %n, !dbg !2370
  br i1 %_5, label %bb3, label %bb2, !dbg !2370

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_dd0dc542054f5a3bd5e0287046a20794, i64 30, ptr align 8 @alloc_836c1f4c9540fa2f34ab28165c323a7f) #11, !dbg !2368
  unreachable, !dbg !2368

bb6:                                              ; preds = %bb4, %bb3
  store i64 %n, ptr %_18, align 8, !dbg !2371
  %4 = load i64, ptr %_18, align 8, !dbg !2372, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfb51a5192ad8a97dE"(ptr align 8 %a.0, i64 %a.1, i64 %4, ptr align 8 @alloc_15970d6f565ff3590815c28c16d091ab) #10, !dbg !2372
  %_17.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2372
  %_17.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2372
  store i64 %n, ptr %_20, align 8, !dbg !2373
  %6 = load i64, ptr %_20, align 8, !dbg !2374, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %7 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfb51a5192ad8a97dE"(ptr align 8 %b.0, i64 %b.1, i64 %6, ptr align 8 @alloc_e23d6d556e995f13ab5be560c21bb8ad) #10, !dbg !2374
  %_19.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2374
  %_19.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2374
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !2375
  store ptr %_17.0, ptr %8, align 8, !dbg !2375
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !2375
  store i64 %_17.1, ptr %9, align 8, !dbg !2375
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_16, i32 0, i32 1, !dbg !2375
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2375
  store ptr %_19.0, ptr %11, align 8, !dbg !2375
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2375
  store i64 %_19.1, ptr %12, align 8, !dbg !2375
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !2376
  %a.01 = load ptr, ptr %13, align 8, !dbg !2376, !nonnull !24, !align !417, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !2376
  %a.12 = load i64, ptr %14, align 8, !dbg !2376, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 0, !dbg !2376
  store ptr %a.01, ptr %15, align 8, !dbg !2376
  %16 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 1, !dbg !2376
  store i64 %a.12, ptr %16, align 8, !dbg !2376
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill3, metadata !2359, metadata !DIExpression()), !dbg !2377
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_16, i32 0, i32 1, !dbg !2378
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2378
  %b.04 = load ptr, ptr %18, align 8, !dbg !2378, !nonnull !24, !align !417, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2378
  %b.15 = load i64, ptr %19, align 8, !dbg !2378, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 0, !dbg !2378
  store ptr %b.04, ptr %20, align 8, !dbg !2378
  %21 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 1, !dbg !2378
  store i64 %b.15, ptr %21, align 8, !dbg !2378
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill6, metadata !2361, metadata !DIExpression()), !dbg !2379
  store i64 0, ptr %i, align 8, !dbg !2380
  br label %bb9, !dbg !2381

bb4:                                              ; preds = %bb3
  %_10 = icmp eq i64 %b.1, %n, !dbg !2382
  br i1 %_10, label %bb6, label %bb5, !dbg !2382

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_deedf7aeab1a7c66b5420b58a4093bcc, i64 30, ptr align 8 @alloc_1bcf5bda9b6f611d7471636ca9d4f5f8) #11, !dbg !2369
  unreachable, !dbg !2369

bb9:                                              ; preds = %bb16, %bb6
  %_23 = load i64, ptr %i, align 8, !dbg !2383, !noundef !24
  %_22 = icmp ult i64 %_23, %n, !dbg !2383
  br i1 %_22, label %bb10, label %bb17, !dbg !2383

bb17:                                             ; preds = %bb9
  ret void, !dbg !2384

bb10:                                             ; preds = %bb9
  %_26 = load i64, ptr %i, align 8, !dbg !2385, !noundef !24
  %_28 = icmp ult i64 %_26, %a.12, !dbg !2386
  %22 = call i1 @llvm.expect.i1(i1 %_28, i1 true), !dbg !2386
  br i1 %22, label %bb11, label %panic, !dbg !2386

bb11:                                             ; preds = %bb10
  %_25 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %a.01, i64 0, i64 %_26, !dbg !2387
  %_32.0 = sub i64 %n, 1, !dbg !2388
  %_32.1 = icmp ult i64 %n, 1, !dbg !2388
  %23 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !2388
  br i1 %23, label %panic7, label %bb12, !dbg !2388

panic:                                            ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %_26, i64 %a.12, ptr align 8 @alloc_2874cd250a47eb024ff3ff4020dcadd3) #11, !dbg !2386
  unreachable, !dbg !2386

bb12:                                             ; preds = %bb11
  %_33 = load i64, ptr %i, align 8, !dbg !2389, !noundef !24
  %_34.0 = sub i64 %_32.0, %_33, !dbg !2388
  %_34.1 = icmp ult i64 %_32.0, %_33, !dbg !2388
  %24 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !2388
  br i1 %24, label %panic8, label %bb13, !dbg !2388

panic7:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_d2f1f3114c13257ad7e839c193b3d246) #11, !dbg !2388
  unreachable, !dbg !2388

bb13:                                             ; preds = %bb12
  %_36 = icmp ult i64 %_34.0, %b.15, !dbg !2390
  %25 = call i1 @llvm.expect.i1(i1 %_36, i1 true), !dbg !2390
  br i1 %25, label %bb14, label %panic9, !dbg !2390

panic8:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_d2f1f3114c13257ad7e839c193b3d246) #11, !dbg !2388
  unreachable, !dbg !2388

bb14:                                             ; preds = %bb13
  %_29 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %b.04, i64 0, i64 %_34.0, !dbg !2391
; call core::mem::swap
  call void @_ZN4core3mem4swap17h3ce2190ae39ba15aE(ptr align 8 %_25, ptr align 8 %_29) #10, !dbg !2392
  %26 = load i64, ptr %i, align 8, !dbg !2393, !noundef !24
  %27 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %26, i64 1), !dbg !2393
  %_37.0 = extractvalue { i64, i1 } %27, 0, !dbg !2393
  %_37.1 = extractvalue { i64, i1 } %27, 1, !dbg !2393
  %28 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false), !dbg !2393
  br i1 %28, label %panic10, label %bb16, !dbg !2393

panic9:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %_34.0, i64 %b.15, ptr align 8 @alloc_00177c75c1aa115210794fb278001f99) #11, !dbg !2390
  unreachable, !dbg !2390

bb16:                                             ; preds = %bb14
  store i64 %_37.0, ptr %i, align 8, !dbg !2393
  br label %bb9, !dbg !2381

panic10:                                          ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_1536545d74a155d07fdca49c5c38acad) #11, !dbg !2393
  unreachable, !dbg !2393
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h8f3f46e736c16badE(ptr %data, i64 %len) unnamed_addr #0 !dbg !2394 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !2400, metadata !DIExpression()), !dbg !2402
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2401, metadata !DIExpression()), !dbg !2403
  br i1 true, label %bb1, label %bb2, !dbg !2404

bb2:                                              ; preds = %_ZN4core5slice3raw18from_raw_parts_mut7runtime17hf65fbde08bcbc372E.exit, %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h8df01f0fcf924fd5E(ptr %data, i64 %len) #10, !dbg !2405
  %_6.0 = extractvalue { ptr, i64 } %0, 0, !dbg !2405
  %_6.1 = extractvalue { ptr, i64 } %0, 1, !dbg !2405
  %1 = insertvalue { ptr, i64 } poison, ptr %_6.0, 0, !dbg !2406
  %2 = insertvalue { ptr, i64 } %1, i64 %_6.1, 1, !dbg !2406
  ret { ptr, i64 } %2, !dbg !2406

bb1:                                              ; preds = %start
  store ptr %data, ptr %_5, align 8, !dbg !2404
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2404
  store i64 %len, ptr %3, align 8, !dbg !2404
  %4 = load ptr, ptr %_5, align 8, !dbg !2404, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2404
  %6 = load i64, ptr %5, align 8, !dbg !2404, !noundef !24
  store ptr %4, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !2407, metadata !DIExpression()), !dbg !2414
  store i64 %6, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2413, metadata !DIExpression()), !dbg !2414
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %4) #10, !dbg !2416
  br i1 %_3.i, label %bb2.i, label %bb5.i, !dbg !2416

bb5.i:                                            ; preds = %bb2.i, %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a, i64 166) #11, !dbg !2418
  unreachable, !dbg !2418

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_valid_allocation_size
  %_5.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17h301f7861db739a53E(i64 %6) #10, !dbg !2419
  br i1 %_5.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17hf65fbde08bcbc372E.exit, label %bb5.i, !dbg !2419

_ZN4core5slice3raw18from_raw_parts_mut7runtime17hf65fbde08bcbc372E.exit: ; preds = %bb2.i
  br label %bb2, !dbg !2404
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h10550916002f3cb1E"(ptr align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2420 {
start:
  %self.dbg.spill.i2 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %addr.dbg.spill.i = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %end_or_len = alloca ptr, align 8
  %_0 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !2424, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.declare(metadata ptr %end_or_len, metadata !2427, metadata !DIExpression()), !dbg !2430
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i2, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !2431, metadata !DIExpression()), !dbg !2436
  store ptr %slice.0, ptr %ptr.dbg.spill, align 8, !dbg !2438
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2425, metadata !DIExpression()), !dbg !2439
  br i1 false, label %bb2, label %bb3, !dbg !2440

bb3:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !129, metadata !DIExpression()), !dbg !2441
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !139, metadata !DIExpression()), !dbg !2443
  %_0.i1 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %slice.1, !dbg !2444
  store ptr %_0.i1, ptr %end_or_len, align 8, !dbg !2445
  br label %bb4, !dbg !2445

bb2:                                              ; preds = %start
  store i64 %slice.1, ptr %addr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i, metadata !2446, metadata !DIExpression()), !dbg !2451
  %_0.i = inttoptr i64 %slice.1 to ptr, !dbg !2453
  store ptr %_0.i, ptr %end_or_len, align 8, !dbg !2454
  br label %bb4, !dbg !2454

bb4:                                              ; preds = %bb2, %bb3
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_7 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc37420ae12594e56E"(ptr %slice.0) #10, !dbg !2455
  %_9 = load ptr, ptr %end_or_len, align 8, !dbg !2456, !noundef !24
  store ptr %_7, ptr %_0, align 8, !dbg !2457
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 1, !dbg !2457
  store ptr %_9, ptr %3, align 8, !dbg !2457
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 0, !dbg !2458
  %5 = load ptr, ptr %4, align 8, !dbg !2458, !nonnull !24, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_0, i32 0, i32 1, !dbg !2458
  %7 = load ptr, ptr %6, align 8, !dbg !2458, !noundef !24
  %8 = insertvalue { ptr, ptr } poison, ptr %5, 0, !dbg !2458
  %9 = insertvalue { ptr, ptr } %8, ptr %7, 1, !dbg !2458
  ret { ptr, ptr } %9, !dbg !2458
}

; core::slice::sort::insert_head
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_head17h6f093c6415355f96E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2459 {
start:
  %self.dbg.spill.i35 = alloca ptr, align 8
  %self.dbg.spill.i34 = alloca ptr, align 8
  %self.dbg.spill.i33 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i30 = alloca i64, align 8
  %self.dbg.spill.i31 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca ptr, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i8 = alloca i64, align 8
  %dst.dbg.spill.i9 = alloca ptr, align 8
  %src.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %dst.dbg.spill.i6 = alloca ptr, align 8
  %src.dbg.spill.i7 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %dst.dbg.spill.i2 = alloca ptr, align 8
  %src.dbg.spill.i3 = alloca ptr, align 8
  %_6.i4 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_39 = alloca ptr, align 8
  %_37 = alloca { ptr, ptr }, align 8
  %_32 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_28 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_16 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_9 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2464, metadata !DIExpression()), !dbg !2477
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2465, metadata !DIExpression()), !dbg !2478
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2468, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2470, metadata !DIExpression()), !dbg !2480
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2472, metadata !DIExpression()), !dbg !2481
  br i1 true, label %bb1, label %bb3, !dbg !2482

bb3:                                              ; preds = %bb1, %start
; call core::slice::<impl [T]>::get_unchecked
  %_10 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %v.0, i64 %v.1, i64 1) #10, !dbg !2483
; call core::slice::<impl [T]>::get_unchecked
  %_12 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %v.0, i64 %v.1, i64 0) #10, !dbg !2484
  store ptr %_10, ptr %_9, align 8, !dbg !2485
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 1, !dbg !2485
  store ptr %_12, ptr %2, align 8, !dbg !2485
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 0, !dbg !2485
  %4 = load ptr, ptr %3, align 8, !dbg !2485, !nonnull !24, !align !417, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_9, i32 0, i32 1, !dbg !2485
  %6 = load ptr, ptr %5, align 8, !dbg !2485, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_8 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %4, ptr align 8 %6) #10, !dbg !2485
  br i1 %_8, label %bb7, label %bb31, !dbg !2485

bb1:                                              ; preds = %start
  %_4 = icmp uge i64 %v.1, 2, !dbg !2486
  br i1 %_4, label %bb3, label %bb2, !dbg !2486

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_6932146a2b5945f5118e7e865cb7ff4c) #11, !dbg !2482
  unreachable, !dbg !2482

bb31:                                             ; preds = %bb30, %bb3
  ret void, !dbg !2487

bb7:                                              ; preds = %bb3
  store ptr %v.0, ptr %self.dbg.spill.i33, align 8
  %7 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i33, i32 0, i32 1
  store i64 %v.1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i33, metadata !2187, metadata !DIExpression()), !dbg !2488
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2490
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2466, metadata !DIExpression()), !dbg !2491
; call core::ptr::read
  call void @_ZN4core3ptr4read17h8a7b025a440768baE(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_16, ptr %v.0) #10, !dbg !2492
  call void @llvm.dbg.declare(metadata ptr %_16, metadata !895, metadata !DIExpression()), !dbg !2493
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_16, i64 24, i1 false), !dbg !2495
  store ptr %tmp, ptr %self.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i35, metadata !2496, metadata !DIExpression()), !dbg !2503
  store ptr %v.0, ptr %self.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i31, metadata !193, metadata !DIExpression()), !dbg !2505
  store i64 1, ptr %count.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i30, metadata !199, metadata !DIExpression()), !dbg !2507
  %_0.i32 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2508
  store ptr %tmp, ptr %hole, align 8, !dbg !2509
  %8 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2509
  store ptr %_0.i32, ptr %8, align 8, !dbg !2509
  store ptr %v.0, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !193, metadata !DIExpression()), !dbg !2510
  store i64 1, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !199, metadata !DIExpression()), !dbg !2512
  %_0.i29 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2513
  store ptr %v.0, ptr %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i26, metadata !193, metadata !DIExpression()), !dbg !2514
  store i64 0, ptr %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i25, metadata !199, metadata !DIExpression()), !dbg !2516
  store ptr %_0.i29, ptr %src.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i3, metadata !1498, metadata !DIExpression()), !dbg !2517
  store ptr %v.0, ptr %dst.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i2, metadata !1503, metadata !DIExpression()), !dbg !2519
  store i64 1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !1504, metadata !DIExpression()), !dbg !2520
  store ptr %_0.i29, ptr %_6.i4, align 8, !dbg !2521
  %9 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !2521
  store ptr %v.0, ptr %9, align 8, !dbg !2521
  %10 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !2521
  store i64 1, ptr %10, align 8, !dbg !2521
  %11 = load ptr, ptr %_6.i4, align 8, !dbg !2521, !noundef !24
  %12 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 1, !dbg !2521
  %13 = load ptr, ptr %12, align 8, !dbg !2521, !noundef !24
  %14 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i4, i32 0, i32 2, !dbg !2521
  %15 = load i64, ptr %14, align 8, !dbg !2521, !noundef !24
  store ptr %11, ptr %src.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i7, metadata !1510, metadata !DIExpression()), !dbg !2522
  store ptr %13, ptr %dst.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i6, metadata !1514, metadata !DIExpression()), !dbg !2522
  store i64 %15, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !1515, metadata !DIExpression()), !dbg !2522
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %11) #10, !dbg !2524
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !2524

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %bb7
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !2525
  unreachable, !dbg !2525

bb2.i:                                            ; preds = %bb7
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %13) #10, !dbg !2526
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !2526

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %11, ptr %13, i64 %15) #10, !dbg !2527
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit, label %bb7.i, !dbg !2527

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v.0, ptr align 8 %_0.i29, i64 24, i1 false), !dbg !2528
  store i64 2, ptr %_28, align 8, !dbg !2529
  %16 = getelementptr inbounds { i64, i64 }, ptr %_28, i32 0, i32 1, !dbg !2529
  store i64 %v.1, ptr %16, align 8, !dbg !2529
  %17 = getelementptr inbounds { i64, i64 }, ptr %_28, i32 0, i32 0, !dbg !2529
  %18 = load i64, ptr %17, align 8, !dbg !2529, !noundef !24
  %19 = getelementptr inbounds { i64, i64 }, ptr %_28, i32 0, i32 1, !dbg !2529
  %20 = load i64, ptr %19, align 8, !dbg !2529, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %21 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9a58c267ff3ccf88E"(i64 %18, i64 %20) #10, !dbg !2529
  %_27.0 = extractvalue { i64, i64 } %21, 0, !dbg !2529
  %_27.1 = extractvalue { i64, i64 } %21, 1, !dbg !2529
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2529
  store i64 %_27.0, ptr %22, align 8, !dbg !2529
  %23 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2529
  store i64 %_27.1, ptr %23, align 8, !dbg !2529
  br label %bb17, !dbg !2530

bb17:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit17, %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %24 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30436e101c7f44ddE"(ptr align 8 %iter) #10, !dbg !2481
  store { i64, i64 } %24, ptr %_32, align 8, !dbg !2481
  %_34 = load i64, ptr %_32, align 8, !dbg !2481, !range !975, !noundef !24
  %25 = icmp eq i64 %_34, 0, !dbg !2481
  br i1 %25, label %bb30, label %bb19, !dbg !2481

bb30:                                             ; preds = %bb19, %bb17
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17ha01701ee024676caE"(ptr align 8 %hole) #10, !dbg !2531
  br label %bb31, !dbg !2531

bb19:                                             ; preds = %bb17
  %26 = getelementptr inbounds { i64, i64 }, ptr %_32, i32 0, i32 1, !dbg !2532
  %i = load i64, ptr %26, align 8, !dbg !2532, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2532
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2474, metadata !DIExpression()), !dbg !2533
; call core::slice::<impl [T]>::get_unchecked
  %27 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %v.0, i64 %v.1, i64 %i) #10, !dbg !2534
  store ptr %27, ptr %_39, align 8, !dbg !2534
  %_50 = load ptr, ptr %_39, align 8, !dbg !2535, !nonnull !24, !align !417, !noundef !24
  store ptr %tmp, ptr %self.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i34, metadata !2496, metadata !DIExpression()), !dbg !2536
  store ptr %_50, ptr %_37, align 8, !dbg !2538
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_37, i32 0, i32 1, !dbg !2538
  store ptr %tmp, ptr %28, align 8, !dbg !2538
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_37, i32 0, i32 0, !dbg !2538
  %30 = load ptr, ptr %29, align 8, !dbg !2538, !nonnull !24, !align !417, !noundef !24
  %31 = getelementptr inbounds { ptr, ptr }, ptr %_37, i32 0, i32 1, !dbg !2538
  %32 = load ptr, ptr %31, align 8, !dbg !2538, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_36 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %30, ptr align 8 %32) #10, !dbg !2538
  br i1 %_36, label %bb24, label %bb30, !dbg !2538

bb24:                                             ; preds = %bb19
  store ptr %v.0, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !193, metadata !DIExpression()), !dbg !2539
  store i64 %i, ptr %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i22, metadata !199, metadata !DIExpression()), !dbg !2541
  %_0.i24 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2542
  %_48.0 = sub i64 %i, 1, !dbg !2543
  %_48.1 = icmp ult i64 %i, 1, !dbg !2543
  %33 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false), !dbg !2543
  br i1 %33, label %panic, label %bb26, !dbg !2543

bb26:                                             ; preds = %bb24
  store ptr %v.0, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !193, metadata !DIExpression()), !dbg !2544
  store i64 %_48.0, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !199, metadata !DIExpression()), !dbg !2546
  %_0.i21 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_48.0, !dbg !2547
  store ptr %_0.i24, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1498, metadata !DIExpression()), !dbg !2548
  store ptr %_0.i21, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1503, metadata !DIExpression()), !dbg !2550
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1504, metadata !DIExpression()), !dbg !2551
  store ptr %_0.i24, ptr %_6.i, align 8, !dbg !2552
  %34 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !2552
  store ptr %_0.i21, ptr %34, align 8, !dbg !2552
  %35 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !2552
  store i64 1, ptr %35, align 8, !dbg !2552
  %36 = load ptr, ptr %_6.i, align 8, !dbg !2552, !noundef !24
  %37 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !2552
  %38 = load ptr, ptr %37, align 8, !dbg !2552, !noundef !24
  %39 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !2552
  %40 = load i64, ptr %39, align 8, !dbg !2552, !noundef !24
  store ptr %36, ptr %src.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i10, metadata !1510, metadata !DIExpression()), !dbg !2553
  store ptr %38, ptr %dst.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i9, metadata !1514, metadata !DIExpression()), !dbg !2553
  store i64 %40, ptr %count.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i8, metadata !1515, metadata !DIExpression()), !dbg !2553
; call core::intrinsics::is_aligned_and_not_null
  %_4.i11 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %36) #10, !dbg !2555
  br i1 %_4.i11, label %bb2.i13, label %bb7.i12, !dbg !2555

bb7.i12:                                          ; preds = %bb4.i15, %bb2.i13, %bb26
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !2556
  unreachable, !dbg !2556

bb2.i13:                                          ; preds = %bb26
; call core::intrinsics::is_aligned_and_not_null
  %_5.i14 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %38) #10, !dbg !2557
  br i1 %_5.i14, label %bb4.i15, label %bb7.i12, !dbg !2557

bb4.i15:                                          ; preds = %bb2.i13
; call core::intrinsics::is_nonoverlapping
  %_7.i16 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %36, ptr %38, i64 %40) #10, !dbg !2558
  br i1 %_7.i16, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit17, label %bb7.i12, !dbg !2558

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit17: ; preds = %bb4.i15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0.i21, ptr align 8 %_0.i24, i64 24, i1 false), !dbg !2559
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !193, metadata !DIExpression()), !dbg !2560
  store i64 %i, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !199, metadata !DIExpression()), !dbg !2562
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2563
  %41 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2564
  store ptr %_0.i, ptr %41, align 8, !dbg !2564
  br label %bb17, !dbg !2530

panic:                                            ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_2b18b37ae84d61762f070ebc082ffd36) #11, !dbg !2543
  unreachable, !dbg !2543

bb20:                                             ; No predecessors!
  unreachable, !dbg !2481
}

; core::slice::sort::insert_tail
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_tail17hf32a3c56e381204eE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2565 {
start:
  %self.dbg.spill.i39 = alloca ptr, align 8
  %self.dbg.spill.i38 = alloca ptr, align 8
  %self.dbg.spill.i37 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i34 = alloca i64, align 8
  %self.dbg.spill.i35 = alloca ptr, align 8
  %count.dbg.spill.i31 = alloca i64, align 8
  %self.dbg.spill.i32 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %_0.i29 = alloca ptr, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca ptr, align 8
  %_0.i25 = alloca ptr, align 8
  %count.dbg.spill.i20 = alloca i64, align 8
  %self.dbg.spill.i21 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %dst.dbg.spill.i10 = alloca ptr, align 8
  %src.dbg.spill.i11 = alloca ptr, align 8
  %count.dbg.spill.i6 = alloca i64, align 8
  %dst.dbg.spill.i7 = alloca ptr, align 8
  %src.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %dst.dbg.spill.i3 = alloca ptr, align 8
  %src.dbg.spill.i4 = alloca ptr, align 8
  %_6.i5 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %j_ptr.dbg.spill = alloca ptr, align 8
  %j.dbg.spill = alloca i64, align 8
  %i_ptr.dbg.spill = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_42 = alloca { ptr, ptr }, align 8
  %_36 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_32 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_20 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_15 = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2567, metadata !DIExpression()), !dbg !2593
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2568, metadata !DIExpression()), !dbg !2594
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2575, metadata !DIExpression()), !dbg !2595
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2577, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2579, metadata !DIExpression()), !dbg !2597
  br i1 true, label %bb1, label %bb3, !dbg !2598

bb3:                                              ; preds = %bb1, %start
  store ptr %v.0, ptr %self.dbg.spill.i37, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i37, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i37, metadata !2187, metadata !DIExpression()), !dbg !2599
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2601
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2569, metadata !DIExpression()), !dbg !2602
  %_12.0 = sub i64 %v.1, 1, !dbg !2603
  %_12.1 = icmp ult i64 %v.1, 1, !dbg !2603
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2603
  br i1 %3, label %panic, label %bb5, !dbg !2603

bb1:                                              ; preds = %start
  %_4 = icmp uge i64 %v.1, 2, !dbg !2604
  br i1 %_4, label %bb3, label %bb2, !dbg !2604

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_141337dbddbbf875f1e651a897c1c26f) #11, !dbg !2598
  unreachable, !dbg !2598

bb5:                                              ; preds = %bb3
  store i64 %_12.0, ptr %i.dbg.spill, align 8, !dbg !2603
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2571, metadata !DIExpression()), !dbg !2605
  store ptr %v.0, ptr %self.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i21, metadata !193, metadata !DIExpression()), !dbg !2606
  store i64 %_12.0, ptr %count.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i20, metadata !199, metadata !DIExpression()), !dbg !2608
  %_0.i22 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_12.0, !dbg !2609
  store ptr %_0.i22, ptr %i_ptr.dbg.spill, align 8, !dbg !2610
  call void @llvm.dbg.declare(metadata ptr %i_ptr.dbg.spill, metadata !2573, metadata !DIExpression()), !dbg !2611
  store ptr %_0.i22, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !2322, metadata !DIExpression()), !dbg !2612
  store i64 1, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !2325, metadata !DIExpression()), !dbg !2614
  store ptr %_0.i22, ptr %self.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i32, metadata !2330, metadata !DIExpression()), !dbg !2615
  store i64 -1, ptr %count.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i31, metadata !2336, metadata !DIExpression()), !dbg !2617
  %_0.i33 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_0.i22, i64 -1, !dbg !2618
  store ptr %_0.i33, ptr %_0.i29, align 8, !dbg !2619
  %4 = load ptr, ptr %_0.i29, align 8, !dbg !2620, !noundef !24
  store ptr %_0.i22, ptr %_15, align 8, !dbg !2621
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 1, !dbg !2621
  store ptr %4, ptr %5, align 8, !dbg !2621
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 0, !dbg !2621
  %7 = load ptr, ptr %6, align 8, !dbg !2621, !nonnull !24, !align !417, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 1, !dbg !2621
  %9 = load ptr, ptr %8, align 8, !dbg !2621, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_14 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2621
  br i1 %_14, label %bb9, label %bb28, !dbg !2621

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_90f4b6dda14e5cb7081926ef9c658315) #11, !dbg !2603
  unreachable, !dbg !2603

bb28:                                             ; preds = %bb27, %bb5
  ret void, !dbg !2622

bb9:                                              ; preds = %bb5
; call core::ptr::read
  call void @_ZN4core3ptr4read17h8a7b025a440768baE(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_20, ptr %_0.i22) #10, !dbg !2623
  call void @llvm.dbg.declare(metadata ptr %_20, metadata !895, metadata !DIExpression()), !dbg !2624
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_20, i64 24, i1 false), !dbg !2626
  store ptr %tmp, ptr %self.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i39, metadata !2496, metadata !DIExpression()), !dbg !2627
  store ptr %_0.i22, ptr %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i24, metadata !2322, metadata !DIExpression()), !dbg !2629
  store i64 1, ptr %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i23, metadata !2325, metadata !DIExpression()), !dbg !2631
  store ptr %_0.i22, ptr %self.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i35, metadata !2330, metadata !DIExpression()), !dbg !2632
  store i64 -1, ptr %count.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i34, metadata !2336, metadata !DIExpression()), !dbg !2634
  %_0.i36 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_0.i22, i64 -1, !dbg !2635
  store ptr %_0.i36, ptr %_0.i25, align 8, !dbg !2636
  %10 = load ptr, ptr %_0.i25, align 8, !dbg !2637, !noundef !24
  store ptr %tmp, ptr %hole, align 8, !dbg !2638
  %11 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2638
  store ptr %10, ptr %11, align 8, !dbg !2638
  %12 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2639
  %_29 = load ptr, ptr %12, align 8, !dbg !2639, !noundef !24
  store ptr %_29, ptr %src.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i4, metadata !1498, metadata !DIExpression()), !dbg !2640
  store ptr %_0.i22, ptr %dst.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i3, metadata !1503, metadata !DIExpression()), !dbg !2642
  store i64 1, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !1504, metadata !DIExpression()), !dbg !2643
  store ptr %_29, ptr %_6.i5, align 8, !dbg !2644
  %13 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i5, i32 0, i32 1, !dbg !2644
  store ptr %_0.i22, ptr %13, align 8, !dbg !2644
  %14 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i5, i32 0, i32 2, !dbg !2644
  store i64 1, ptr %14, align 8, !dbg !2644
  %15 = load ptr, ptr %_6.i5, align 8, !dbg !2644, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i5, i32 0, i32 1, !dbg !2644
  %17 = load ptr, ptr %16, align 8, !dbg !2644, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i5, i32 0, i32 2, !dbg !2644
  %19 = load i64, ptr %18, align 8, !dbg !2644, !noundef !24
  store ptr %15, ptr %src.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i8, metadata !1510, metadata !DIExpression()), !dbg !2645
  store ptr %17, ptr %dst.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i7, metadata !1514, metadata !DIExpression()), !dbg !2645
  store i64 %19, ptr %count.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i6, metadata !1515, metadata !DIExpression()), !dbg !2645
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %15) #10, !dbg !2647
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !2647

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %bb9
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !2648
  unreachable, !dbg !2648

bb2.i:                                            ; preds = %bb9
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %17) #10, !dbg !2649
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !2649

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %15, ptr %17, i64 %19) #10, !dbg !2650
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit, label %bb7.i, !dbg !2650

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0.i22, ptr align 8 %_29, i64 24, i1 false), !dbg !2651
  %_34.0 = sub i64 %_12.0, 1, !dbg !2652
  %_34.1 = icmp ult i64 %_12.0, 1, !dbg !2652
  %20 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !2652
  br i1 %20, label %panic1, label %bb15, !dbg !2652

bb15:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit
  store i64 0, ptr %_32, align 8, !dbg !2653
  %21 = getelementptr inbounds { i64, i64 }, ptr %_32, i32 0, i32 1, !dbg !2653
  store i64 %_34.0, ptr %21, align 8, !dbg !2653
  %22 = getelementptr inbounds { i64, i64 }, ptr %_32, i32 0, i32 0, !dbg !2653
  %23 = load i64, ptr %22, align 8, !dbg !2653, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_32, i32 0, i32 1, !dbg !2653
  %25 = load i64, ptr %24, align 8, !dbg !2653, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %26 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hbd0ef64810c3739bE(i64 %23, i64 %25) #10, !dbg !2653
  %_31.0 = extractvalue { i64, i64 } %26, 0, !dbg !2653
  %_31.1 = extractvalue { i64, i64 } %26, 1, !dbg !2653
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %27 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdd9f5a1a0d3c7e32E"(i64 %_31.0, i64 %_31.1) #10, !dbg !2653
  %_30.0 = extractvalue { i64, i64 } %27, 0, !dbg !2653
  %_30.1 = extractvalue { i64, i64 } %27, 1, !dbg !2653
  %28 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2653
  store i64 %_30.0, ptr %28, align 8, !dbg !2653
  %29 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2653
  store i64 %_30.1, ptr %29, align 8, !dbg !2653
  br label %bb18, !dbg !2654

panic1:                                           ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_e41efc6332efd19972427a8ca6f9ac9d) #11, !dbg !2652
  unreachable, !dbg !2652

bb18:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit18, %bb15
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %30 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4fe22b5b7081441cE"(ptr align 8 %iter) #10, !dbg !2597
  store { i64, i64 } %30, ptr %_36, align 8, !dbg !2597
  %_38 = load i64, ptr %_36, align 8, !dbg !2597, !range !975, !noundef !24
  %31 = icmp eq i64 %_38, 0, !dbg !2597
  br i1 %31, label %bb27, label %bb20, !dbg !2597

bb27:                                             ; preds = %bb20, %bb18
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17ha01701ee024676caE"(ptr align 8 %hole) #10, !dbg !2655
  br label %bb28, !dbg !2655

bb20:                                             ; preds = %bb18
  %32 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 1, !dbg !2656
  %j = load i64, ptr %32, align 8, !dbg !2656, !noundef !24
  store i64 %j, ptr %j.dbg.spill, align 8, !dbg !2656
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !2589, metadata !DIExpression()), !dbg !2657
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !193, metadata !DIExpression()), !dbg !2658
  store i64 %j, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !199, metadata !DIExpression()), !dbg !2660
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %j, !dbg !2661
  store ptr %_0.i, ptr %j_ptr.dbg.spill, align 8, !dbg !2662
  call void @llvm.dbg.declare(metadata ptr %j_ptr.dbg.spill, metadata !2591, metadata !DIExpression()), !dbg !2663
  store ptr %tmp, ptr %self.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i38, metadata !2496, metadata !DIExpression()), !dbg !2664
  store ptr %tmp, ptr %_42, align 8, !dbg !2666
  %33 = getelementptr inbounds { ptr, ptr }, ptr %_42, i32 0, i32 1, !dbg !2666
  store ptr %_0.i, ptr %33, align 8, !dbg !2666
  %34 = getelementptr inbounds { ptr, ptr }, ptr %_42, i32 0, i32 0, !dbg !2666
  %35 = load ptr, ptr %34, align 8, !dbg !2666, !nonnull !24, !align !417, !noundef !24
  %36 = getelementptr inbounds { ptr, ptr }, ptr %_42, i32 0, i32 1, !dbg !2666
  %37 = load ptr, ptr %36, align 8, !dbg !2666, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_41 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %35, ptr align 8 %37) #10, !dbg !2666
  br i1 %_41, label %bb25, label %bb27, !dbg !2666

bb25:                                             ; preds = %bb20
  %38 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2667
  %_48 = load ptr, ptr %38, align 8, !dbg !2667, !noundef !24
  store ptr %_0.i, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1498, metadata !DIExpression()), !dbg !2668
  store ptr %_48, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1503, metadata !DIExpression()), !dbg !2670
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1504, metadata !DIExpression()), !dbg !2671
  store ptr %_0.i, ptr %_6.i, align 8, !dbg !2672
  %39 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !2672
  store ptr %_48, ptr %39, align 8, !dbg !2672
  %40 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !2672
  store i64 1, ptr %40, align 8, !dbg !2672
  %41 = load ptr, ptr %_6.i, align 8, !dbg !2672, !noundef !24
  %42 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !2672
  %43 = load ptr, ptr %42, align 8, !dbg !2672, !noundef !24
  %44 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !2672
  %45 = load i64, ptr %44, align 8, !dbg !2672, !noundef !24
  store ptr %41, ptr %src.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i11, metadata !1510, metadata !DIExpression()), !dbg !2673
  store ptr %43, ptr %dst.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i10, metadata !1514, metadata !DIExpression()), !dbg !2673
  store i64 %45, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !1515, metadata !DIExpression()), !dbg !2673
; call core::intrinsics::is_aligned_and_not_null
  %_4.i12 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %41) #10, !dbg !2675
  br i1 %_4.i12, label %bb2.i14, label %bb7.i13, !dbg !2675

bb7.i13:                                          ; preds = %bb4.i16, %bb2.i14, %bb25
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !2676
  unreachable, !dbg !2676

bb2.i14:                                          ; preds = %bb25
; call core::intrinsics::is_aligned_and_not_null
  %_5.i15 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %43) #10, !dbg !2677
  br i1 %_5.i15, label %bb4.i16, label %bb7.i13, !dbg !2677

bb4.i16:                                          ; preds = %bb2.i14
; call core::intrinsics::is_nonoverlapping
  %_7.i17 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %41, ptr %43, i64 %45) #10, !dbg !2678
  br i1 %_7.i17, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit18, label %bb7.i13, !dbg !2678

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit18: ; preds = %bb4.i16
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_48, ptr align 8 %_0.i, i64 24, i1 false), !dbg !2679
  %46 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2680
  store ptr %_0.i, ptr %46, align 8, !dbg !2680
  br label %bb18, !dbg !2654

bb21:                                             ; No predecessors!
  unreachable, !dbg !2597
}

; core::slice::sort::choose_pivot
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort12choose_pivot17h810d14f53abfcfceE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2681 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_41 = alloca { ptr, ptr, ptr }, align 8
  %_37 = alloca ptr, align 8
  %_33 = alloca ptr, align 8
  %_29 = alloca ptr, align 8
  %sort_adjacent = alloca ptr, align 8
  %sort3 = alloca ptr, align 8
  %sort2 = alloca %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", align 8
  %swaps = alloca i64, align 8
  %c = alloca i64, align 8
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %_0 = alloca { i64, i8 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2685, metadata !DIExpression()), !dbg !2718
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2686, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.declare(metadata ptr %a, metadata !2689, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.declare(metadata ptr %b, metadata !2691, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata ptr %c, metadata !2693, metadata !DIExpression()), !dbg !2722
  call void @llvm.dbg.declare(metadata ptr %swaps, metadata !2695, metadata !DIExpression()), !dbg !2723
  call void @llvm.dbg.declare(metadata ptr %sort2, metadata !2697, metadata !DIExpression()), !dbg !2724
  call void @llvm.dbg.declare(metadata ptr %sort3, metadata !2706, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.declare(metadata ptr %sort_adjacent, metadata !2712, metadata !DIExpression()), !dbg !2726
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2727
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2687, metadata !DIExpression()), !dbg !2728
  %_6 = udiv i64 %v.1, 4, !dbg !2729
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_6, i64 1), !dbg !2729
  %_8.0 = extractvalue { i64, i1 } %2, 0, !dbg !2729
  %_8.1 = extractvalue { i64, i1 } %2, 1, !dbg !2729
  %3 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2729
  br i1 %3, label %panic, label %bb2, !dbg !2729

bb2:                                              ; preds = %start
  store i64 %_8.0, ptr %a, align 8, !dbg !2729
  %_10 = udiv i64 %v.1, 4, !dbg !2730
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2730
  %_12.0 = extractvalue { i64, i1 } %4, 0, !dbg !2730
  %_12.1 = extractvalue { i64, i1 } %4, 1, !dbg !2730
  %5 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2730
  br i1 %5, label %panic1, label %bb4, !dbg !2730

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_58ad8f51a899855563824ecf5845da11) #11, !dbg !2729
  unreachable, !dbg !2729

bb4:                                              ; preds = %bb2
  store i64 %_12.0, ptr %b, align 8, !dbg !2730
  %_14 = udiv i64 %v.1, 4, !dbg !2731
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_14, i64 3), !dbg !2731
  %_16.0 = extractvalue { i64, i1 } %6, 0, !dbg !2731
  %_16.1 = extractvalue { i64, i1 } %6, 1, !dbg !2731
  %7 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !2731
  br i1 %7, label %panic2, label %bb6, !dbg !2731

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_9c6c9ee901e1efe26abaab242c9efe33) #11, !dbg !2730
  unreachable, !dbg !2730

bb6:                                              ; preds = %bb4
  store i64 %_16.0, ptr %c, align 8, !dbg !2731
  store i64 0, ptr %swaps, align 8, !dbg !2732
  %_18 = icmp uge i64 %v.1, 8, !dbg !2733
  br i1 %_18, label %bb7, label %bb12, !dbg !2733

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_414d4fde0aa22c5681d0a1d27912b5f7) #11, !dbg !2731
  unreachable, !dbg !2731

bb12:                                             ; preds = %bb11, %bb6
  %_46 = load i64, ptr %swaps, align 8, !dbg !2734, !noundef !24
  %_45 = icmp ult i64 %_46, 12, !dbg !2734
  br i1 %_45, label %bb13, label %bb14, !dbg !2734

bb7:                                              ; preds = %bb6
  store ptr %is_less, ptr %sort2, align 8, !dbg !2735
  %8 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %sort2, i32 0, i32 1, !dbg !2735
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !2735
  store ptr %v.0, ptr %9, align 8, !dbg !2735
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !2735
  store i64 %v.1, ptr %10, align 8, !dbg !2735
  %11 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %sort2, i32 0, i32 2, !dbg !2735
  store ptr %swaps, ptr %11, align 8, !dbg !2735
  store ptr %sort2, ptr %sort3, align 8, !dbg !2736
  %_24 = icmp uge i64 %v.1, 50, !dbg !2737
  br i1 %_24, label %bb8, label %bb11, !dbg !2737

bb11:                                             ; preds = %bb8, %bb7
  store ptr %a, ptr %_41, align 8, !dbg !2738
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2738
  store ptr %b, ptr %12, align 8, !dbg !2738
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2738
  store ptr %c, ptr %13, align 8, !dbg !2738
  %14 = load ptr, ptr %_41, align 8, !dbg !2738, !nonnull !24, !align !417, !noundef !24
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2738
  %16 = load ptr, ptr %15, align 8, !dbg !2738, !nonnull !24, !align !417, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2738
  %18 = load ptr, ptr %17, align 8, !dbg !2738, !nonnull !24, !align !417, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17ha5281664a412382dE"(ptr align 8 %sort3, ptr align 8 %14, ptr align 8 %16, ptr align 8 %18) #10, !dbg !2738
  br label %bb12, !dbg !2738

bb8:                                              ; preds = %bb7
  store ptr %sort3, ptr %sort_adjacent, align 8, !dbg !2739
  store ptr %a, ptr %_29, align 8, !dbg !2740
  %19 = load ptr, ptr %_29, align 8, !dbg !2740, !nonnull !24, !align !417, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc82fcb66791eab56E"(ptr align 8 %sort_adjacent, ptr align 8 %19) #10, !dbg !2740
  store ptr %b, ptr %_33, align 8, !dbg !2741
  %20 = load ptr, ptr %_33, align 8, !dbg !2741, !nonnull !24, !align !417, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc82fcb66791eab56E"(ptr align 8 %sort_adjacent, ptr align 8 %20) #10, !dbg !2741
  store ptr %c, ptr %_37, align 8, !dbg !2742
  %21 = load ptr, ptr %_37, align 8, !dbg !2742, !nonnull !24, !align !417, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc82fcb66791eab56E"(ptr align 8 %sort_adjacent, ptr align 8 %21) #10, !dbg !2742
  br label %bb11, !dbg !2742

bb14:                                             ; preds = %bb12
; call core::slice::<impl [T]>::reverse
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h2e669edfa5aee244E"(ptr align 8 %v.0, i64 %v.1) #10, !dbg !2743
  %_53.0 = sub i64 %v.1, 1, !dbg !2744
  %_53.1 = icmp ult i64 %v.1, 1, !dbg !2744
  %22 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !2744
  br i1 %22, label %panic3, label %bb16, !dbg !2744

bb13:                                             ; preds = %bb12
  %_47 = load i64, ptr %b, align 8, !dbg !2745, !noundef !24
  %_49 = load i64, ptr %swaps, align 8, !dbg !2746, !noundef !24
  %_48 = icmp eq i64 %_49, 0, !dbg !2746
  store i64 %_47, ptr %_0, align 8, !dbg !2747
  %23 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !2747
  %24 = zext i1 %_48 to i8, !dbg !2747
  store i8 %24, ptr %23, align 8, !dbg !2747
  br label %bb18, !dbg !2748

bb16:                                             ; preds = %bb14
  %_54 = load i64, ptr %b, align 8, !dbg !2749, !noundef !24
  %_55.0 = sub i64 %_53.0, %_54, !dbg !2744
  %_55.1 = icmp ult i64 %_53.0, %_54, !dbg !2744
  %25 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2744
  br i1 %25, label %panic4, label %bb17, !dbg !2744

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_9c3bacaef2c1fb5b2110cb0126a29159) #11, !dbg !2744
  unreachable, !dbg !2744

bb17:                                             ; preds = %bb16
  store i64 %_55.0, ptr %_0, align 8, !dbg !2750
  %26 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !2750
  store i8 1, ptr %26, align 8, !dbg !2750
  br label %bb18, !dbg !2748

panic4:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_9c3bacaef2c1fb5b2110cb0126a29159) #11, !dbg !2744
  unreachable, !dbg !2744

bb18:                                             ; preds = %bb13, %bb17
  %27 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 0, !dbg !2751
  %28 = load i64, ptr %27, align 8, !dbg !2751, !noundef !24
  %29 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !2751
  %30 = load i8, ptr %29, align 8, !dbg !2751, !range !559, !noundef !24
  %31 = trunc i8 %30 to i1, !dbg !2751
  %32 = zext i1 %31 to i8, !dbg !2751
  %33 = insertvalue { i64, i8 } poison, i64 %28, 0, !dbg !2751
  %34 = insertvalue { i64, i8 } %33, i8 %32, 1, !dbg !2751
  ret { i64, i8 } %34, !dbg !2751
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0c2bbbc1549897eaE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2752 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2758, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2761
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2759, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8, DW_OP_deref)), !dbg !2762
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2760, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 24, DW_OP_deref)), !dbg !2763
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2756, metadata !DIExpression()), !dbg !2764
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2757, metadata !DIExpression()), !dbg !2765
  %_14 = load ptr, ptr %_1, align 8, !dbg !2766, !nonnull !24, !align !417, !noundef !24
  %0 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 1, !dbg !2767
  %1 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2767
  %_15.0 = load ptr, ptr %1, align 8, !dbg !2767, !nonnull !24, !align !417, !noundef !24
  %2 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2767
  %_15.1 = load i64, ptr %2, align 8, !dbg !2767, !noundef !24
  %_7 = load i64, ptr %b, align 8, !dbg !2768, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_6 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %_15.0, i64 %_15.1, i64 %_7) #10, !dbg !2767
  %3 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 1, !dbg !2769
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !2769
  %_16.0 = load ptr, ptr %4, align 8, !dbg !2769, !nonnull !24, !align !417, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !2769
  %_16.1 = load i64, ptr %5, align 8, !dbg !2769, !noundef !24
  %_9 = load i64, ptr %a, align 8, !dbg !2770, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_8 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %_16.0, i64 %_16.1, i64 %_9) #10, !dbg !2769
  store ptr %_6, ptr %_5, align 8, !dbg !2766
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2766
  store ptr %_8, ptr %6, align 8, !dbg !2766
  %7 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 0, !dbg !2766
  %8 = load ptr, ptr %7, align 8, !dbg !2766, !nonnull !24, !align !417, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2766
  %10 = load ptr, ptr %9, align 8, !dbg !2766, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %_14, ptr align 8 %8, ptr align 8 %10) #10, !dbg !2766
  br i1 %_4, label %bb4, label %bb7, !dbg !2766

bb7:                                              ; preds = %bb6, %start
  ret void, !dbg !2771

bb4:                                              ; preds = %start
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h30979ba0d8e47384E(ptr %a, ptr %b) #10, !dbg !2772
  %11 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 2, !dbg !2773
  %_17 = load ptr, ptr %11, align 8, !dbg !2773, !nonnull !24, !align !417, !noundef !24
  %12 = load i64, ptr %_17, align 8, !dbg !2773, !noundef !24
  %13 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %12, i64 1), !dbg !2773
  %_13.0 = extractvalue { i64, i1 } %13, 0, !dbg !2773
  %_13.1 = extractvalue { i64, i1 } %13, 1, !dbg !2773
  %14 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 2, !dbg !2773
  %_18 = load ptr, ptr %14, align 8, !dbg !2773, !nonnull !24, !align !417, !noundef !24
  %15 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !2773
  br i1 %15, label %panic, label %bb6, !dbg !2773

bb6:                                              ; preds = %bb4
  %16 = getelementptr inbounds %"{closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, {closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 2, !dbg !2773
  %_19 = load ptr, ptr %16, align 8, !dbg !2773, !nonnull !24, !align !417, !noundef !24
  store i64 %_13.0, ptr %_19, align 8, !dbg !2773
  br label %bb7, !dbg !2774

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_1798bf1890f8c6baef4715aa27e66302) #11, !dbg !2773
  unreachable, !dbg !2773
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17ha5281664a412382dE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b, ptr align 8 %c) unnamed_addr #0 !dbg !2775 {
start:
  %c.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca { ptr, ptr }, align 8
  %_8 = alloca { ptr, ptr }, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2782, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2783
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2779, metadata !DIExpression()), !dbg !2784
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2780, metadata !DIExpression()), !dbg !2785
  store ptr %c, ptr %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !2781, metadata !DIExpression()), !dbg !2786
  %_11 = load ptr, ptr %_1, align 8, !dbg !2787, !nonnull !24, !align !417, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2787
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2787
  store ptr %b, ptr %0, align 8, !dbg !2787
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2787
  %2 = load ptr, ptr %1, align 8, !dbg !2787, !nonnull !24, !align !417, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2787
  %4 = load ptr, ptr %3, align 8, !dbg !2787, !nonnull !24, !align !417, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0c2bbbc1549897eaE"(ptr align 8 %_11, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2787
  %_12 = load ptr, ptr %_1, align 8, !dbg !2788, !nonnull !24, !align !417, !noundef !24
  store ptr %b, ptr %_8, align 8, !dbg !2788
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2788
  store ptr %c, ptr %5, align 8, !dbg !2788
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 0, !dbg !2788
  %7 = load ptr, ptr %6, align 8, !dbg !2788, !nonnull !24, !align !417, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2788
  %9 = load ptr, ptr %8, align 8, !dbg !2788, !nonnull !24, !align !417, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0c2bbbc1549897eaE"(ptr align 8 %_12, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2788
  %_13 = load ptr, ptr %_1, align 8, !dbg !2789, !nonnull !24, !align !417, !noundef !24
  store ptr %a, ptr %_10, align 8, !dbg !2789
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2789
  store ptr %b, ptr %10, align 8, !dbg !2789
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2789
  %12 = load ptr, ptr %11, align 8, !dbg !2789, !nonnull !24, !align !417, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2789
  %14 = load ptr, ptr %13, align 8, !dbg !2789, !nonnull !24, !align !417, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0c2bbbc1549897eaE"(ptr align 8 %_13, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2789
  ret void, !dbg !2790
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc82fcb66791eab56E"(ptr align 8 %_1, ptr align 8 %a) unnamed_addr #0 !dbg !2791 {
start:
  %tmp.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca i64, align 8
  %_5 = alloca { ptr, ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2797, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2800
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2796, metadata !DIExpression()), !dbg !2801
  %tmp = load i64, ptr %a, align 8, !dbg !2802, !noundef !24
  store i64 %tmp, ptr %tmp.dbg.spill, align 8, !dbg !2802
  call void @llvm.dbg.declare(metadata ptr %tmp.dbg.spill, metadata !2798, metadata !DIExpression()), !dbg !2803
  %_12 = load ptr, ptr %_1, align 8, !dbg !2804, !nonnull !24, !align !417, !noundef !24
  %_8.0 = sub i64 %tmp, 1, !dbg !2805
  %_8.1 = icmp ult i64 %tmp, 1, !dbg !2805
  %0 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2805
  br i1 %0, label %panic, label %bb1, !dbg !2805

bb1:                                              ; preds = %start
  store i64 %_8.0, ptr %_7, align 8, !dbg !2805
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %tmp, i64 1), !dbg !2806
  %_11.0 = extractvalue { i64, i1 } %1, 0, !dbg !2806
  %_11.1 = extractvalue { i64, i1 } %1, 1, !dbg !2806
  %2 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !2806
  br i1 %2, label %panic1, label %bb2, !dbg !2806

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_47ba91883958baca914cf8714181d6a0) #11, !dbg !2805
  unreachable, !dbg !2805

bb2:                                              ; preds = %bb1
  store i64 %_11.0, ptr %_10, align 8, !dbg !2806
  store ptr %_7, ptr %_5, align 8, !dbg !2804
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2804
  store ptr %a, ptr %3, align 8, !dbg !2804
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2804
  store ptr %_10, ptr %4, align 8, !dbg !2804
  %5 = load ptr, ptr %_5, align 8, !dbg !2804, !nonnull !24, !align !417, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2804
  %7 = load ptr, ptr %6, align 8, !dbg !2804, !nonnull !24, !align !417, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2804
  %9 = load ptr, ptr %8, align 8, !dbg !2804, !nonnull !24, !align !417, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17ha5281664a412382dE"(ptr align 8 %_12, ptr align 8 %5, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2804
  ret void, !dbg !2807

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_c801dc3e2a99f41efc7ba62d664a8fc6) #11, !dbg !2806
  unreachable, !dbg !2806
}

; core::slice::sort::break_patterns
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort14break_patterns17h264fc3afee5c2e5aE(ptr align 8 %v.0, i64 %v.1) unnamed_addr #2 !dbg !2808 {
start:
  %i.dbg.spill = alloca i64, align 8
  %pos.dbg.spill = alloca i64, align 8
  %modulus.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %other = alloca i64, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %gen_usize = alloca ptr, align 8
  %seed = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2810, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.declare(metadata ptr %seed, metadata !2813, metadata !DIExpression()), !dbg !2832
  call void @llvm.dbg.declare(metadata ptr %gen_usize, metadata !2815, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2825, metadata !DIExpression()), !dbg !2834
  call void @llvm.dbg.declare(metadata ptr %other, metadata !2829, metadata !DIExpression()), !dbg !2835
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2836
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2811, metadata !DIExpression()), !dbg !2837
  %_4 = icmp uge i64 %v.1, 8, !dbg !2838
  br i1 %_4, label %bb1, label %bb17, !dbg !2838

bb17:                                             ; preds = %bb6, %start
  ret void, !dbg !2839

bb1:                                              ; preds = %start
  store i64 %v.1, ptr %seed, align 8, !dbg !2840
  store ptr %seed, ptr %gen_usize, align 8, !dbg !2841
; call core::num::<impl usize>::next_power_of_two
  %modulus = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h511c6f23dfade785E"(i64 %v.1) #10, !dbg !2842
  store i64 %modulus, ptr %modulus.dbg.spill, align 8, !dbg !2842
  call void @llvm.dbg.declare(metadata ptr %modulus.dbg.spill, metadata !2821, metadata !DIExpression()), !dbg !2843
  %_10 = udiv i64 %v.1, 4, !dbg !2844
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2844
  %_12.0 = extractvalue { i64, i1 } %2, 0, !dbg !2844
  %_12.1 = extractvalue { i64, i1 } %2, 1, !dbg !2844
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2844
  br i1 %3, label %panic, label %bb4, !dbg !2844

bb4:                                              ; preds = %bb1
  store i64 %_12.0, ptr %pos.dbg.spill, align 8, !dbg !2844
  call void @llvm.dbg.declare(metadata ptr %pos.dbg.spill, metadata !2823, metadata !DIExpression()), !dbg !2845
  store i64 0, ptr %_14, align 8, !dbg !2846
  %4 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2846
  store i64 3, ptr %4, align 8, !dbg !2846
  %5 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !2846
  %6 = load i64, ptr %5, align 8, !dbg !2846, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2846
  %8 = load i64, ptr %7, align 8, !dbg !2846, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9a58c267ff3ccf88E"(i64 %6, i64 %8) #10, !dbg !2846
  %_13.0 = extractvalue { i64, i64 } %9, 0, !dbg !2846
  %_13.1 = extractvalue { i64, i64 } %9, 1, !dbg !2846
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2846
  store i64 %_13.0, ptr %10, align 8, !dbg !2846
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2846
  store i64 %_13.1, ptr %11, align 8, !dbg !2846
  br label %bb6, !dbg !2847

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_e78b6e8a10d683361143041a455ac9cc) #11, !dbg !2844
  unreachable, !dbg !2844

bb6:                                              ; preds = %bb16, %bb4
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %12 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30436e101c7f44ddE"(ptr align 8 %iter) #10, !dbg !2834
  store { i64, i64 } %12, ptr %_16, align 8, !dbg !2834
  %_18 = load i64, ptr %_16, align 8, !dbg !2834, !range !975, !noundef !24
  %13 = icmp eq i64 %_18, 0, !dbg !2834
  br i1 %13, label %bb17, label %bb8, !dbg !2834

bb8:                                              ; preds = %bb6
  %14 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !2848
  %i = load i64, ptr %14, align 8, !dbg !2848, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2848
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2827, metadata !DIExpression()), !dbg !2849
; call core::slice::sort::break_patterns::{{closure}}
  %_21 = call i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h2c914f8b1ca250d4E"(ptr align 8 %gen_usize) #10, !dbg !2850
  %_24.0 = sub i64 %modulus, 1, !dbg !2851
  %_24.1 = icmp ult i64 %modulus, 1, !dbg !2851
  %15 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !2851
  br i1 %15, label %panic1, label %bb11, !dbg !2851

bb11:                                             ; preds = %bb8
  %16 = and i64 %_21, %_24.0, !dbg !2850
  store i64 %16, ptr %other, align 8, !dbg !2850
  %_26 = load i64, ptr %other, align 8, !dbg !2852, !noundef !24
  %_25 = icmp uge i64 %_26, %v.1, !dbg !2852
  br i1 %_25, label %bb12, label %bb14, !dbg !2852

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_d015b2e8e332fb0de0e3176594cf72c3) #11, !dbg !2851
  unreachable, !dbg !2851

bb14:                                             ; preds = %bb13, %bb11
  %_31.0 = sub i64 %_12.0, 1, !dbg !2853
  %_31.1 = icmp ult i64 %_12.0, 1, !dbg !2853
  %17 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !2853
  br i1 %17, label %panic3, label %bb15, !dbg !2853

bb12:                                             ; preds = %bb11
  %18 = load i64, ptr %other, align 8, !dbg !2854, !noundef !24
  %_27.0 = sub i64 %18, %v.1, !dbg !2854
  %_27.1 = icmp ult i64 %18, %v.1, !dbg !2854
  %19 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !2854
  br i1 %19, label %panic2, label %bb13, !dbg !2854

bb13:                                             ; preds = %bb12
  store i64 %_27.0, ptr %other, align 8, !dbg !2854
  br label %bb14, !dbg !2855

panic2:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_a4d3ab5094767756661cb34f30f25f6a) #11, !dbg !2854
  unreachable, !dbg !2854

bb15:                                             ; preds = %bb14
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_31.0, i64 %i), !dbg !2853
  %_32.0 = extractvalue { i64, i1 } %20, 0, !dbg !2853
  %_32.1 = extractvalue { i64, i1 } %20, 1, !dbg !2853
  %21 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !2853
  br i1 %21, label %panic4, label %bb16, !dbg !2853

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_86ed8f525deb34bde392a8c7969d491a) #11, !dbg !2853
  unreachable, !dbg !2853

bb16:                                             ; preds = %bb15
  %_33 = load i64, ptr %other, align 8, !dbg !2856, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h992bdd3442f31a9fE"(ptr align 8 %v.0, i64 %v.1, i64 %_32.0, i64 %_33, ptr align 8 @alloc_9de31c2f3e107da8643cdbb9cf5d3a37) #10, !dbg !2857
  br label %bb6, !dbg !2857

panic4:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_86ed8f525deb34bde392a8c7969d491a) #11, !dbg !2853
  unreachable, !dbg !2853

bb9:                                              ; No predecessors!
  unreachable, !dbg !2834
}

; core::slice::sort::break_patterns::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h2c914f8b1ca250d4E"(ptr align 8 %_1) unnamed_addr #0 !dbg !2858 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  %r1 = alloca i64, align 8
  %r = alloca i32, align 4
  %_0 = alloca i64, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2863, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2868
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2864, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.declare(metadata ptr %r1, metadata !2866, metadata !DIExpression()), !dbg !2870
  br i1 false, label %bb1, label %bb5, !dbg !2871

bb5:                                              ; preds = %start
  %_36 = load ptr, ptr %_1, align 8, !dbg !2872, !nonnull !24, !align !417, !noundef !24
  %_19 = load i64, ptr %_36, align 8, !dbg !2872, !noundef !24
  store i64 %_19, ptr %r1, align 8, !dbg !2872
  %_21 = load i64, ptr %r1, align 8, !dbg !2873, !noundef !24
  %_20 = shl i64 %_21, 13, !dbg !2873
  %0 = load i64, ptr %r1, align 8, !dbg !2874, !noundef !24
  %1 = xor i64 %0, %_20, !dbg !2874
  store i64 %1, ptr %r1, align 8, !dbg !2874
  %_25 = load i64, ptr %r1, align 8, !dbg !2875, !noundef !24
  %_24 = lshr i64 %_25, 7, !dbg !2875
  %2 = load i64, ptr %r1, align 8, !dbg !2876, !noundef !24
  %3 = xor i64 %2, %_24, !dbg !2876
  store i64 %3, ptr %r1, align 8, !dbg !2876
  %_29 = load i64, ptr %r1, align 8, !dbg !2877, !noundef !24
  %_28 = shl i64 %_29, 17, !dbg !2877
  %4 = load i64, ptr %r1, align 8, !dbg !2878, !noundef !24
  %5 = xor i64 %4, %_28, !dbg !2878
  store i64 %5, ptr %r1, align 8, !dbg !2878
  %_32 = load i64, ptr %r1, align 8, !dbg !2879, !noundef !24
  %_37 = load ptr, ptr %_1, align 8, !dbg !2880, !nonnull !24, !align !417, !noundef !24
  store i64 %_32, ptr %_37, align 8, !dbg !2880
  %_38 = load ptr, ptr %_1, align 8, !dbg !2881, !nonnull !24, !align !417, !noundef !24
  %6 = load i64, ptr %_38, align 8, !dbg !2881, !noundef !24
  store i64 %6, ptr %_0, align 8, !dbg !2881
  br label %bb9, !dbg !2882

bb1:                                              ; preds = %start
  %_33 = load ptr, ptr %_1, align 8, !dbg !2883, !nonnull !24, !align !417, !noundef !24
  %_4 = load i64, ptr %_33, align 8, !dbg !2883, !noundef !24
  %7 = trunc i64 %_4 to i32, !dbg !2883
  store i32 %7, ptr %r, align 4, !dbg !2883
  %_6 = load i32, ptr %r, align 4, !dbg !2884, !noundef !24
  %_5 = shl i32 %_6, 13, !dbg !2884
  %8 = load i32, ptr %r, align 4, !dbg !2885, !noundef !24
  %9 = xor i32 %8, %_5, !dbg !2885
  store i32 %9, ptr %r, align 4, !dbg !2885
  %_10 = load i32, ptr %r, align 4, !dbg !2886, !noundef !24
  %_9 = lshr i32 %_10, 17, !dbg !2886
  %10 = load i32, ptr %r, align 4, !dbg !2887, !noundef !24
  %11 = xor i32 %10, %_9, !dbg !2887
  store i32 %11, ptr %r, align 4, !dbg !2887
  %_14 = load i32, ptr %r, align 4, !dbg !2888, !noundef !24
  %_13 = shl i32 %_14, 5, !dbg !2888
  %12 = load i32, ptr %r, align 4, !dbg !2889, !noundef !24
  %13 = xor i32 %12, %_13, !dbg !2889
  store i32 %13, ptr %r, align 4, !dbg !2889
  %_17 = load i32, ptr %r, align 4, !dbg !2890, !noundef !24
  %_34 = load ptr, ptr %_1, align 8, !dbg !2891, !nonnull !24, !align !417, !noundef !24
  %14 = zext i32 %_17 to i64, !dbg !2891
  store i64 %14, ptr %_34, align 8, !dbg !2891
  %_35 = load ptr, ptr %_1, align 8, !dbg !2892, !nonnull !24, !align !417, !noundef !24
  %15 = load i64, ptr %_35, align 8, !dbg !2892, !noundef !24
  store i64 %15, ptr %_0, align 8, !dbg !2892
  br label %bb9, !dbg !2882

bb9:                                              ; preds = %bb1, %bb5
  %16 = load i64, ptr %_0, align 8, !dbg !2893, !noundef !24
  ret i64 %16, !dbg !2893
}

; core::slice::sort::partition_equal
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort15partition_equal17h97707e80885f28baE(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2894 {
start:
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %self.dbg.spill.i16 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %pivot.dbg.spill8 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_40 = alloca { ptr, ptr }, align 8
  %_30 = alloca { ptr, ptr }, align 8
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_13 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_7 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_0 = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2898, metadata !DIExpression()), !dbg !2920
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2899, metadata !DIExpression()), !dbg !2921
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2900, metadata !DIExpression()), !dbg !2922
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2906, metadata !DIExpression()), !dbg !2923
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !2908, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2914, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2916, metadata !DIExpression()), !dbg !2926
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h992bdd3442f31a9fE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_f8322b69080b1e19bc4df073038a414d) #10, !dbg !2927
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h1643ef83df19a1adE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_7, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_23975e137ecce848c3167e283c742672) #10, !dbg !2928
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !2929
  %pivot.0 = load ptr, ptr %2, align 8, !dbg !2929, !nonnull !24, !align !417, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !2929
  %pivot.1 = load i64, ptr %3, align 8, !dbg !2929, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !2929
  store ptr %pivot.0, ptr %4, align 8, !dbg !2929
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !2929
  store i64 %pivot.1, ptr %5, align 8, !dbg !2929
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !2901, metadata !DIExpression()), !dbg !2930
  %6 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !2931
  %7 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 0, !dbg !2931
  %v.02 = load ptr, ptr %7, align 8, !dbg !2931, !nonnull !24, !align !417, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 1, !dbg !2931
  %v.13 = load i64, ptr %8, align 8, !dbg !2931, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !2931
  store ptr %v.02, ptr %9, align 8, !dbg !2931
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !2931
  store i64 %v.13, ptr %10, align 8, !dbg !2931
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !2903, metadata !DIExpression()), !dbg !2932
  %_11 = icmp ult i64 0, %pivot.1, !dbg !2933
  %11 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !2933
  br i1 %11, label %bb3, label %panic, !dbg !2933

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !2934
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !2934
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !2904, metadata !DIExpression()), !dbg !2935
; call core::ptr::read
  call void @_ZN4core3ptr4read17h8a7b025a440768baE(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_13, ptr %pivot5) #10, !dbg !2936
  call void @llvm.dbg.declare(metadata ptr %_13, metadata !895, metadata !DIExpression()), !dbg !2937
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_13, i64 24, i1 false), !dbg !2939
  store ptr %tmp, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !2496, metadata !DIExpression()), !dbg !2940
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !2942
  %12 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !2942
  store ptr %pivot5, ptr %12, align 8, !dbg !2942
  store ptr %tmp, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !2496, metadata !DIExpression()), !dbg !2943
  store ptr %tmp, ptr %pivot.dbg.spill8, align 8, !dbg !2945
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill8, metadata !2910, metadata !DIExpression()), !dbg !2946
  store i64 %v.13, ptr %len.dbg.spill, align 8, !dbg !2947
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2912, metadata !DIExpression()), !dbg !2948
  %13 = icmp eq i64 %v.13, 0, !dbg !2949
  br i1 %13, label %bb8, label %bb9, !dbg !2949

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 0, i64 %pivot.1, ptr align 8 @alloc_3ea9d353dbaea466ca156be00652f893) #11, !dbg !2933
  unreachable, !dbg !2933

bb8:                                              ; preds = %bb3
  store i64 0, ptr %_0, align 8, !dbg !2950
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17ha01701ee024676caE"(ptr align 8 %_pivot_guard) #10, !dbg !2951
  br label %bb30, !dbg !2951

bb9:                                              ; preds = %bb3
  store i64 0, ptr %l, align 8, !dbg !2952
  store i64 %v.13, ptr %r, align 8, !dbg !2953
  br label %bb10, !dbg !2954

bb30:                                             ; preds = %bb29, %bb8
  %14 = load i64, ptr %_0, align 8, !dbg !2955, !noundef !24
  ret i64 %14, !dbg !2955

bb10:                                             ; preds = %bb28, %bb15, %bb9
  %_27 = load i64, ptr %l, align 8, !dbg !2956, !noundef !24
  %_28 = load i64, ptr %r, align 8, !dbg !2957, !noundef !24
  %_26 = icmp ult i64 %_27, %_28, !dbg !2956
  br i1 %_26, label %bb11, label %bb16, !dbg !2956

bb16:                                             ; preds = %bb18, %bb11, %bb10
  %15 = load i64, ptr %r, align 8, !dbg !2958, !noundef !24
  %_35.0 = sub i64 %15, 1, !dbg !2958
  %_35.1 = icmp ult i64 %15, 1, !dbg !2958
  %16 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !2958
  br i1 %16, label %panic10, label %bb17, !dbg !2958

bb11:                                             ; preds = %bb10
  %_33 = load i64, ptr %l, align 8, !dbg !2959, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_31 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %v.02, i64 %v.13, i64 %_33) #10, !dbg !2960
  store ptr %tmp, ptr %_30, align 8, !dbg !2961
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_30, i32 0, i32 1, !dbg !2961
  store ptr %_31, ptr %17, align 8, !dbg !2961
  %18 = getelementptr inbounds { ptr, ptr }, ptr %_30, i32 0, i32 0, !dbg !2961
  %19 = load ptr, ptr %18, align 8, !dbg !2961, !nonnull !24, !align !417, !noundef !24
  %20 = getelementptr inbounds { ptr, ptr }, ptr %_30, i32 0, i32 1, !dbg !2961
  %21 = load ptr, ptr %20, align 8, !dbg !2961, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_29 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %19, ptr align 8 %21) #10, !dbg !2961
  br i1 %_29, label %bb16, label %bb14, !dbg !2961

bb14:                                             ; preds = %bb11
  %22 = load i64, ptr %l, align 8, !dbg !2962, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !2962
  %_34.0 = extractvalue { i64, i1 } %23, 0, !dbg !2962
  %_34.1 = extractvalue { i64, i1 } %23, 1, !dbg !2962
  %24 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !2962
  br i1 %24, label %panic9, label %bb15, !dbg !2962

bb15:                                             ; preds = %bb14
  store i64 %_34.0, ptr %l, align 8, !dbg !2962
  br label %bb10, !dbg !2963

panic9:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_6b88286adc8b79b2ce0db9f94ea83bc3) #11, !dbg !2962
  unreachable, !dbg !2962

bb17:                                             ; preds = %bb16
  store i64 %_35.0, ptr %r, align 8, !dbg !2958
  %_37 = load i64, ptr %l, align 8, !dbg !2964, !noundef !24
  %_38 = load i64, ptr %r, align 8, !dbg !2965, !noundef !24
  %_36 = icmp uge i64 %_37, %_38, !dbg !2964
  br i1 %_36, label %bb21, label %bb18, !dbg !2964

panic10:                                          ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_8e2427a08ca169cc6ff7005ac72ee42b) #11, !dbg !2958
  unreachable, !dbg !2958

bb18:                                             ; preds = %bb17
  %_43 = load i64, ptr %r, align 8, !dbg !2966, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_41 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %v.02, i64 %v.13, i64 %_43) #10, !dbg !2967
  store ptr %tmp, ptr %_40, align 8, !dbg !2968
  %25 = getelementptr inbounds { ptr, ptr }, ptr %_40, i32 0, i32 1, !dbg !2968
  store ptr %_41, ptr %25, align 8, !dbg !2968
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_40, i32 0, i32 0, !dbg !2968
  %27 = load ptr, ptr %26, align 8, !dbg !2968, !nonnull !24, !align !417, !noundef !24
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_40, i32 0, i32 1, !dbg !2968
  %29 = load ptr, ptr %28, align 8, !dbg !2968, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_39 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %27, ptr align 8 %29) #10, !dbg !2968
  br i1 %_39, label %bb16, label %bb21, !dbg !2968

bb21:                                             ; preds = %bb18, %bb17
  %_45 = load i64, ptr %l, align 8, !dbg !2969, !noundef !24
  %_46 = load i64, ptr %r, align 8, !dbg !2970, !noundef !24
  %_44 = icmp uge i64 %_45, %_46, !dbg !2969
  br i1 %_44, label %bb22, label %bb23, !dbg !2969

bb23:                                             ; preds = %bb21
  store ptr %v.02, ptr %self.dbg.spill.i16, align 8
  %30 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i16, i32 0, i32 1
  store i64 %v.13, ptr %30, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i16, metadata !2187, metadata !DIExpression()), !dbg !2971
  store ptr %v.02, ptr %ptr.dbg.spill, align 8, !dbg !2973
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2918, metadata !DIExpression()), !dbg !2974
  %_50 = load i64, ptr %l, align 8, !dbg !2975, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !193, metadata !DIExpression()), !dbg !2976
  store i64 %_50, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !199, metadata !DIExpression()), !dbg !2978
  %_0.i15 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_50, !dbg !2979
  %_52 = load i64, ptr %r, align 8, !dbg !2980, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !193, metadata !DIExpression()), !dbg !2981
  store i64 %_52, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !199, metadata !DIExpression()), !dbg !2983
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_52, !dbg !2984
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2f264edc6d2d6d71E(ptr %_0.i15, ptr %_0.i) #10, !dbg !2985
  %31 = load i64, ptr %l, align 8, !dbg !2986, !noundef !24
  %32 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %31, i64 1), !dbg !2986
  %_53.0 = extractvalue { i64, i1 } %32, 0, !dbg !2986
  %_53.1 = extractvalue { i64, i1 } %32, 1, !dbg !2986
  %33 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !2986
  br i1 %33, label %panic11, label %bb28, !dbg !2986

bb22:                                             ; preds = %bb21
  %_54 = load i64, ptr %l, align 8, !dbg !2987, !noundef !24
  %34 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_54, i64 1), !dbg !2987
  %_55.0 = extractvalue { i64, i1 } %34, 0, !dbg !2987
  %_55.1 = extractvalue { i64, i1 } %34, 1, !dbg !2987
  %35 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2987
  br i1 %35, label %panic12, label %bb29, !dbg !2987

bb28:                                             ; preds = %bb23
  store i64 %_53.0, ptr %l, align 8, !dbg !2986
  br label %bb10, !dbg !2954

panic11:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_a3d74f0286c2085b92fea29554951deb) #11, !dbg !2986
  unreachable, !dbg !2986

bb29:                                             ; preds = %bb22
  store i64 %_55.0, ptr %_0, align 8, !dbg !2987
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17ha01701ee024676caE"(ptr align 8 %_pivot_guard) #10, !dbg !2951
  br label %bb30, !dbg !2951

panic12:                                          ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_ab04609f7a3d4db79cb07850600e7ebf) #11, !dbg !2987
  unreachable, !dbg !2987
}

; core::slice::sort::partition_in_blocks
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks17hbc649a6abd17b02fE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2988 {
start:
  %small.dbg.spill.i224 = alloca i8, align 1
  %small.dbg.spill.i222 = alloca i8, align 1
  %small.dbg.spill.i220 = alloca i8, align 1
  %small.dbg.spill.i218 = alloca i8, align 1
  %small.dbg.spill.i216 = alloca i8, align 1
  %small.dbg.spill.i214 = alloca i8, align 1
  %small.dbg.spill.i212 = alloca i8, align 1
  %small.dbg.spill.i210 = alloca i8, align 1
  %small.dbg.spill.i208 = alloca i8, align 1
  %small.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i206 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i205 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i204 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i203 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i202 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i201 = alloca { ptr, i64 }, align 8
  %addr.dbg.spill.i.i199 = alloca i64, align 8
  %addr.dbg.spill.i.i197 = alloca i64, align 8
  %addr.dbg.spill.i.i195 = alloca i64, align 8
  %addr.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i191 = alloca i64, align 8
  %self.dbg.spill.i192 = alloca ptr, align 8
  %count.dbg.spill.i188 = alloca i64, align 8
  %self.dbg.spill.i189 = alloca ptr, align 8
  %count.dbg.spill.i185 = alloca i64, align 8
  %self.dbg.spill.i186 = alloca ptr, align 8
  %count.dbg.spill.i182 = alloca i64, align 8
  %self.dbg.spill.i183 = alloca ptr, align 8
  %count.dbg.spill.i179 = alloca i64, align 8
  %self.dbg.spill.i180 = alloca ptr, align 8
  %count.dbg.spill.i176 = alloca i64, align 8
  %self.dbg.spill.i177 = alloca ptr, align 8
  %count.dbg.spill.i173 = alloca i64, align 8
  %self.dbg.spill.i174 = alloca ptr, align 8
  %count.dbg.spill.i170 = alloca i64, align 8
  %self.dbg.spill.i171 = alloca ptr, align 8
  %count.dbg.spill.i167 = alloca i64, align 8
  %self.dbg.spill.i168 = alloca ptr, align 8
  %count.dbg.spill.i164 = alloca i64, align 8
  %self.dbg.spill.i165 = alloca ptr, align 8
  %count.dbg.spill.i161 = alloca i64, align 8
  %self.dbg.spill.i162 = alloca ptr, align 8
  %count.dbg.spill.i157 = alloca i64, align 8
  %self.dbg.spill.i158 = alloca ptr, align 8
  %_0.i159 = alloca ptr, align 8
  %count.dbg.spill.i153 = alloca i64, align 8
  %self.dbg.spill.i154 = alloca ptr, align 8
  %_0.i155 = alloca ptr, align 8
  %count.dbg.spill.i148 = alloca i64, align 8
  %self.dbg.spill.i149 = alloca ptr, align 8
  %_0.i150 = alloca ptr, align 8
  %count.dbg.spill.i143 = alloca i64, align 8
  %self.dbg.spill.i144 = alloca ptr, align 8
  %_0.i145 = alloca ptr, align 8
  %count.dbg.spill.i138 = alloca i64, align 8
  %self.dbg.spill.i139 = alloca ptr, align 8
  %_0.i140 = alloca ptr, align 8
  %count.dbg.spill.i133 = alloca i64, align 8
  %self.dbg.spill.i134 = alloca ptr, align 8
  %_0.i135 = alloca ptr, align 8
  %count.dbg.spill.i129 = alloca i64, align 8
  %self.dbg.spill.i130 = alloca ptr, align 8
  %_0.i131 = alloca ptr, align 8
  %count.dbg.spill.i125 = alloca i64, align 8
  %self.dbg.spill.i126 = alloca ptr, align 8
  %_0.i127 = alloca ptr, align 8
  %count.dbg.spill.i120 = alloca i64, align 8
  %self.dbg.spill.i121 = alloca ptr, align 8
  %_0.i122 = alloca ptr, align 8
  %count.dbg.spill.i115 = alloca i64, align 8
  %self.dbg.spill.i116 = alloca ptr, align 8
  %_0.i117 = alloca ptr, align 8
  %count.dbg.spill.i111 = alloca i64, align 8
  %self.dbg.spill.i112 = alloca ptr, align 8
  %_0.i113 = alloca ptr, align 8
  %count.dbg.spill.i108 = alloca i64, align 8
  %self.dbg.spill.i109 = alloca ptr, align 8
  %count.dbg.spill.i105 = alloca i64, align 8
  %self.dbg.spill.i106 = alloca ptr, align 8
  %count.dbg.spill.i102 = alloca i64, align 8
  %self.dbg.spill.i103 = alloca ptr, align 8
  %count.dbg.spill.i99 = alloca i64, align 8
  %self.dbg.spill.i100 = alloca ptr, align 8
  %count.dbg.spill.i96 = alloca i64, align 8
  %self.dbg.spill.i97 = alloca ptr, align 8
  %count.dbg.spill.i93 = alloca i64, align 8
  %self.dbg.spill.i94 = alloca ptr, align 8
  %count.dbg.spill.i90 = alloca i64, align 8
  %self.dbg.spill.i91 = alloca ptr, align 8
  %count.dbg.spill.i87 = alloca i64, align 8
  %self.dbg.spill.i88 = alloca ptr, align 8
  %count.dbg.spill.i84 = alloca i64, align 8
  %self.dbg.spill.i85 = alloca ptr, align 8
  %count.dbg.spill.i81 = alloca i64, align 8
  %self.dbg.spill.i82 = alloca ptr, align 8
  %count.dbg.spill.i78 = alloca i64, align 8
  %self.dbg.spill.i79 = alloca ptr, align 8
  %count.dbg.spill.i75 = alloca i64, align 8
  %self.dbg.spill.i76 = alloca ptr, align 8
  %count.dbg.spill.i72 = alloca i64, align 8
  %self.dbg.spill.i73 = alloca ptr, align 8
  %count.dbg.spill.i69 = alloca i64, align 8
  %self.dbg.spill.i70 = alloca ptr, align 8
  %count.dbg.spill.i67 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %_0.i66 = alloca i8, align 1
  %_0.i = alloca i8, align 1
  %this.dbg.spill.i64 = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i54 = alloca i64, align 8
  %dst.dbg.spill.i55 = alloca ptr, align 8
  %src.dbg.spill.i56 = alloca ptr, align 8
  %count.dbg.spill.i44 = alloca i64, align 8
  %dst.dbg.spill.i45 = alloca ptr, align 8
  %src.dbg.spill.i46 = alloca ptr, align 8
  %count.dbg.spill.i34 = alloca i64, align 8
  %dst.dbg.spill.i35 = alloca ptr, align 8
  %src.dbg.spill.i36 = alloca ptr, align 8
  %count.dbg.spill.i31 = alloca i64, align 8
  %dst.dbg.spill.i32 = alloca ptr, align 8
  %src.dbg.spill.i33 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %dst.dbg.spill.i28 = alloca ptr, align 8
  %src.dbg.spill.i29 = alloca ptr, align 8
  %_6.i30 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %dst.dbg.spill.i24 = alloca ptr, align 8
  %src.dbg.spill.i25 = alloca ptr, align 8
  %_6.i26 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %dst.dbg.spill.i20 = alloca ptr, align 8
  %src.dbg.spill.i21 = alloca ptr, align 8
  %_6.i22 = alloca { ptr, ptr, i64 }, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %i.dbg.spill18 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %right_val.dbg.spill14 = alloca ptr, align 8
  %left_val.dbg.spill12 = alloca ptr, align 8
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %is_done.dbg.spill = alloca i8, align 1
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_251 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind4 = alloca i8, align 1
  %_240 = alloca i64, align 8
  %_238 = alloca { ptr, ptr }, align 8
  %_217 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind = alloca i8, align 1
  %_206 = alloca i64, align 8
  %_204 = alloca { ptr, ptr }, align 8
  %_183 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_142 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_140 = alloca { i64, i64 }, align 8
  %tmp = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_111 = alloca { ptr, ptr }, align 8
  %_101 = alloca { i64, i64 }, align 8
  %iter2 = alloca { i64, i64 }, align 8
  %_98 = alloca { i64, i64 }, align 8
  %elem1 = alloca ptr, align 8
  %_85 = alloca { ptr, ptr }, align 8
  %_76 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_73 = alloca { i64, i64 }, align 8
  %elem = alloca ptr, align 8
  %rem = alloca i64, align 8
  %offsets_r = alloca [128 x i8], align 1
  %end_r = alloca ptr, align 8
  %start_r = alloca ptr, align 8
  %block_r = alloca i64, align 8
  %r = alloca ptr, align 8
  %offsets_l = alloca [128 x i8], align 1
  %end_l = alloca ptr, align 8
  %start_l = alloca ptr, align 8
  %block_l = alloca i64, align 8
  %l = alloca ptr, align 8
  %_0 = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2992, metadata !DIExpression()), !dbg !3056
  store ptr %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2993, metadata !DIExpression()), !dbg !3057
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2994, metadata !DIExpression()), !dbg !3058
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2995, metadata !DIExpression()), !dbg !3059
  call void @llvm.dbg.declare(metadata ptr %block_l, metadata !2997, metadata !DIExpression()), !dbg !3060
  call void @llvm.dbg.declare(metadata ptr %start_l, metadata !2999, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.declare(metadata ptr %end_l, metadata !3001, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.declare(metadata ptr %offsets_l, metadata !3003, metadata !DIExpression()), !dbg !3063
  call void @llvm.dbg.declare(metadata ptr %r, metadata !3008, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.declare(metadata ptr %block_r, metadata !3010, metadata !DIExpression()), !dbg !3065
  call void @llvm.dbg.declare(metadata ptr %start_r, metadata !3012, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.declare(metadata ptr %end_r, metadata !3014, metadata !DIExpression()), !dbg !3067
  call void @llvm.dbg.declare(metadata ptr %offsets_r, metadata !3016, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.declare(metadata ptr %rem, metadata !3020, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.declare(metadata ptr %elem, metadata !3022, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3024, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.declare(metadata ptr %elem1, metadata !3028, metadata !DIExpression()), !dbg !3072
  call void @llvm.dbg.declare(metadata ptr %iter2, metadata !3030, metadata !DIExpression()), !dbg !3073
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3036, metadata !DIExpression()), !dbg !3074
  call void @llvm.dbg.declare(metadata ptr %iter3, metadata !3038, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.declare(metadata ptr %kind, metadata !3046, metadata !DIExpression()), !dbg !3076
  call void @llvm.dbg.declare(metadata ptr %kind4, metadata !3053, metadata !DIExpression()), !dbg !3077
  store ptr %v.0, ptr %self.dbg.spill.i204, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i204, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i204, metadata !2187, metadata !DIExpression()), !dbg !3078
  store ptr %v.0, ptr %l, align 8, !dbg !3080
  store i64 128, ptr %block_l, align 8, !dbg !3081
  store i64 0, ptr %addr.dbg.spill.i.i199, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i199, metadata !3082, metadata !DIExpression()), !dbg !3087
; call core::ptr::metadata::from_raw_parts_mut
  %_0.i200 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17he6b55a9cedbd3c40E(ptr null) #10, !dbg !3093
  store ptr %_0.i200, ptr %start_l, align 8, !dbg !3094
  store i64 0, ptr %addr.dbg.spill.i.i197, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i197, metadata !3082, metadata !DIExpression()), !dbg !3095
; call core::ptr::metadata::from_raw_parts_mut
  %_0.i198 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17he6b55a9cedbd3c40E(ptr null) #10, !dbg !3098
  store ptr %_0.i198, ptr %end_l, align 8, !dbg !3099
  %3 = load i8, ptr %_0.i66, align 1, !dbg !3100
  %4 = getelementptr inbounds [128 x i8], ptr %offsets_l, i64 0, i64 0, !dbg !3106
  call void @llvm.memset.p0.i64(ptr align 1 %4, i8 %3, i64 128, i1 false), !dbg !3106
  %_11 = load ptr, ptr %l, align 8, !dbg !3107, !noundef !24
  store ptr %_11, ptr %self.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i109, metadata !193, metadata !DIExpression()), !dbg !3108
  store i64 %v.1, ptr %count.dbg.spill.i108, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i108, metadata !199, metadata !DIExpression()), !dbg !3110
  %_0.i110 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %v.1, !dbg !3111
  store ptr %_0.i110, ptr %r, align 8, !dbg !3107
  store i64 128, ptr %block_r, align 8, !dbg !3112
  store i64 0, ptr %addr.dbg.spill.i.i195, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i195, metadata !3082, metadata !DIExpression()), !dbg !3113
; call core::ptr::metadata::from_raw_parts_mut
  %_0.i196 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17he6b55a9cedbd3c40E(ptr null) #10, !dbg !3116
  store ptr %_0.i196, ptr %start_r, align 8, !dbg !3117
  store i64 0, ptr %addr.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i, metadata !3082, metadata !DIExpression()), !dbg !3118
; call core::ptr::metadata::from_raw_parts_mut
  %_0.i194 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17he6b55a9cedbd3c40E(ptr null) #10, !dbg !3121
  store ptr %_0.i194, ptr %end_r, align 8, !dbg !3122
  %5 = load i8, ptr %_0.i, align 1, !dbg !3123
  %6 = getelementptr inbounds [128 x i8], ptr %offsets_r, i64 0, i64 0, !dbg !3125
  call void @llvm.memset.p0.i64(ptr align 1 %6, i8 %5, i64 128, i1 false), !dbg !3125
  br label %bb9, !dbg !3126

bb9:                                              ; preds = %bb99, %start
  %_21 = load ptr, ptr %l, align 8, !dbg !3127, !noundef !24
  %_22 = load ptr, ptr %r, align 8, !dbg !3128, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_20 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E(ptr %_21, ptr %_22) #10, !dbg !3129
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 128), !dbg !3130
  %_24.0 = extractvalue { i64, i1 } %7, 0, !dbg !3130
  %_24.1 = extractvalue { i64, i1 } %7, 1, !dbg !3130
  %8 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !3130
  br i1 %8, label %panic, label %bb11, !dbg !3130

bb11:                                             ; preds = %bb9
  %is_done = icmp ule i64 %_20, %_24.0, !dbg !3129
  %9 = zext i1 %is_done to i8, !dbg !3129
  store i8 %9, ptr %is_done.dbg.spill, align 1, !dbg !3129
  call void @llvm.dbg.declare(metadata ptr %is_done.dbg.spill, metadata !3018, metadata !DIExpression()), !dbg !3131
  br i1 %is_done, label %bb12, label %bb33, !dbg !3132

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_fe4e881dfa6c70f91499a9b97cada070) #11, !dbg !3130
  unreachable, !dbg !3130

bb33:                                             ; preds = %bb31, %bb28, %bb11
  %_65 = load ptr, ptr %start_l, align 8, !dbg !3133, !noundef !24
  %_66 = load ptr, ptr %end_l, align 8, !dbg !3134, !noundef !24
  %_64 = icmp eq ptr %_65, %_66, !dbg !3133
  br i1 %_64, label %bb34, label %bb44, !dbg !3133

bb12:                                             ; preds = %bb11
  %_26 = load ptr, ptr %l, align 8, !dbg !3135, !noundef !24
  %_27 = load ptr, ptr %r, align 8, !dbg !3136, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %10 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E(ptr %_26, ptr %_27) #10, !dbg !3137
  store i64 %10, ptr %rem, align 8, !dbg !3137
  %_29 = load ptr, ptr %start_l, align 8, !dbg !3138, !noundef !24
  %_30 = load ptr, ptr %end_l, align 8, !dbg !3139, !noundef !24
  %_28 = icmp ult ptr %_29, %_30, !dbg !3138
  br i1 %_28, label %bb15, label %bb14, !dbg !3138

bb14:                                             ; preds = %bb12
  %_32 = load ptr, ptr %start_r, align 8, !dbg !3140, !noundef !24
  %_33 = load ptr, ptr %end_r, align 8, !dbg !3141, !noundef !24
  %_31 = icmp ult ptr %_32, %_33, !dbg !3140
  br i1 %_31, label %bb15, label %bb17, !dbg !3140

bb15:                                             ; preds = %bb14, %bb12
  %11 = load i64, ptr %rem, align 8, !dbg !3142, !noundef !24
  %_34.0 = sub i64 %11, 128, !dbg !3142
  %_34.1 = icmp ult i64 %11, 128, !dbg !3142
  %12 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false), !dbg !3142
  br i1 %12, label %panic5, label %bb16, !dbg !3142

bb17:                                             ; preds = %bb16, %bb14
  %_36 = load ptr, ptr %start_l, align 8, !dbg !3143, !noundef !24
  %_37 = load ptr, ptr %end_l, align 8, !dbg !3144, !noundef !24
  %_35 = icmp ult ptr %_36, %_37, !dbg !3143
  br i1 %_35, label %bb18, label %bb19, !dbg !3143

bb16:                                             ; preds = %bb15
  store i64 %_34.0, ptr %rem, align 8, !dbg !3142
  br label %bb17, !dbg !3145

panic5:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_2417cbaa5b767dc07fcb426311fbedcd) #11, !dbg !3142
  unreachable, !dbg !3142

bb19:                                             ; preds = %bb17
  %_40 = load ptr, ptr %start_r, align 8, !dbg !3146, !noundef !24
  %_41 = load ptr, ptr %end_r, align 8, !dbg !3147, !noundef !24
  %_39 = icmp ult ptr %_40, %_41, !dbg !3146
  br i1 %_39, label %bb20, label %bb21, !dbg !3146

bb18:                                             ; preds = %bb17
  %_38 = load i64, ptr %rem, align 8, !dbg !3148, !noundef !24
  store i64 %_38, ptr %block_r, align 8, !dbg !3149
  br label %bb24, !dbg !3150

bb21:                                             ; preds = %bb19
  %_43 = load i64, ptr %rem, align 8, !dbg !3151, !noundef !24
  %13 = udiv i64 %_43, 2, !dbg !3152
  store i64 %13, ptr %block_l, align 8, !dbg !3152
  %_45 = load i64, ptr %rem, align 8, !dbg !3153, !noundef !24
  %_46 = load i64, ptr %block_l, align 8, !dbg !3154, !noundef !24
  %_47.0 = sub i64 %_45, %_46, !dbg !3153
  %_47.1 = icmp ult i64 %_45, %_46, !dbg !3153
  %14 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false), !dbg !3153
  br i1 %14, label %panic6, label %bb23, !dbg !3153

bb20:                                             ; preds = %bb19
  %_42 = load i64, ptr %rem, align 8, !dbg !3155, !noundef !24
  store i64 %_42, ptr %block_l, align 8, !dbg !3156
  br label %bb24, !dbg !3157

bb23:                                             ; preds = %bb21
  store i64 %_47.0, ptr %block_r, align 8, !dbg !3158
  br label %bb24, !dbg !3157

panic6:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_7d4914bfaafcfa4692cc10dc5496d4e2) #11, !dbg !3153
  unreachable, !dbg !3153

bb24:                                             ; preds = %bb18, %bb20, %bb23
  br i1 true, label %bb25, label %bb28, !dbg !3159

bb28:                                             ; preds = %bb26, %bb24
  br i1 true, label %bb29, label %bb33, !dbg !3160

bb25:                                             ; preds = %bb24
  %_50 = load i64, ptr %block_l, align 8, !dbg !3161, !noundef !24
  %_49 = icmp ule i64 %_50, 128, !dbg !3161
  br i1 %_49, label %bb26, label %bb27, !dbg !3161

bb27:                                             ; preds = %bb26, %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_8221bdf38a3766feb9723f333c95dc9e, i64 54, ptr align 8 @alloc_d98b9ce84085f5d91faa526ef2b40520) #11, !dbg !3159
  unreachable, !dbg !3159

bb26:                                             ; preds = %bb25
  %_52 = load i64, ptr %block_r, align 8, !dbg !3162, !noundef !24
  %_51 = icmp ule i64 %_52, 128, !dbg !3162
  br i1 %_51, label %bb28, label %bb27, !dbg !3162

bb29:                                             ; preds = %bb28
  %_57 = load ptr, ptr %l, align 8, !dbg !3163, !noundef !24
  %_58 = load ptr, ptr %r, align 8, !dbg !3164, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_56 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E(ptr %_57, ptr %_58) #10, !dbg !3165
  %_60 = load i64, ptr %block_l, align 8, !dbg !3166, !noundef !24
  %_61 = load i64, ptr %block_r, align 8, !dbg !3167, !noundef !24
  %15 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_60, i64 %_61), !dbg !3166
  %_62.0 = extractvalue { i64, i1 } %15, 0, !dbg !3166
  %_62.1 = extractvalue { i64, i1 } %15, 1, !dbg !3166
  %16 = call i1 @llvm.expect.i1(i1 %_62.1, i1 false), !dbg !3166
  br i1 %16, label %panic7, label %bb31, !dbg !3166

bb31:                                             ; preds = %bb29
  %_55 = icmp eq i64 %_56, %_62.0, !dbg !3165
  br i1 %_55, label %bb33, label %bb32, !dbg !3165

panic7:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_5d32d2daaec9cf0d402f2dc37af0ea6f) #11, !dbg !3166
  unreachable, !dbg !3166

bb32:                                             ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_a3f9d5911d83d2dfd6ee66814bbe6049, i64 50, ptr align 8 @alloc_ea197cb372011b0fee90d7558b246bfb) #11, !dbg !3160
  unreachable, !dbg !3160

bb44:                                             ; preds = %bb37, %bb33
  %_90 = load ptr, ptr %start_r, align 8, !dbg !3168, !noundef !24
  %_91 = load ptr, ptr %end_r, align 8, !dbg !3169, !noundef !24
  %_89 = icmp eq ptr %_90, %_91, !dbg !3168
  br i1 %_89, label %bb45, label %bb54, !dbg !3168

bb34:                                             ; preds = %bb33
  store ptr %offsets_l, ptr %this.dbg.spill.i64, align 8
  %17 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i64, i32 0, i32 1
  store i64 128, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i64, metadata !3170, metadata !DIExpression()), !dbg !3181
  store ptr %offsets_l, ptr %self.dbg.spill.i205, align 8
  %18 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i205, i32 0, i32 1
  store i64 128, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i205, metadata !3183, metadata !DIExpression()), !dbg !3188
  store ptr %offsets_l, ptr %start_l, align 8, !dbg !3190
  %_70 = load ptr, ptr %start_l, align 8, !dbg !3191, !noundef !24
  store ptr %_70, ptr %end_l, align 8, !dbg !3192
  %19 = load ptr, ptr %l, align 8, !dbg !3193, !noundef !24
  store ptr %19, ptr %elem, align 8, !dbg !3193
  %_74 = load i64, ptr %block_l, align 8, !dbg !3194, !noundef !24
  store i64 0, ptr %_73, align 8, !dbg !3195
  %20 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 1, !dbg !3195
  store i64 %_74, ptr %20, align 8, !dbg !3195
  %21 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 0, !dbg !3195
  %22 = load i64, ptr %21, align 8, !dbg !3195, !noundef !24
  %23 = getelementptr inbounds { i64, i64 }, ptr %_73, i32 0, i32 1, !dbg !3195
  %24 = load i64, ptr %23, align 8, !dbg !3195, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %25 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9a58c267ff3ccf88E"(i64 %22, i64 %24) #10, !dbg !3195
  %_72.0 = extractvalue { i64, i64 } %25, 0, !dbg !3195
  %_72.1 = extractvalue { i64, i64 } %25, 1, !dbg !3195
  %26 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3195
  store i64 %_72.0, ptr %26, align 8, !dbg !3195
  %27 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3195
  store i64 %_72.1, ptr %27, align 8, !dbg !3195
  br label %bb37, !dbg !3196

bb37:                                             ; preds = %bb39, %bb34
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %28 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30436e101c7f44ddE"(ptr align 8 %iter) #10, !dbg !3071
  store { i64, i64 } %28, ptr %_76, align 8, !dbg !3071
  %_78 = load i64, ptr %_76, align 8, !dbg !3071, !range !975, !noundef !24
  %29 = icmp eq i64 %_78, 0, !dbg !3071
  br i1 %29, label %bb44, label %bb39, !dbg !3071

bb39:                                             ; preds = %bb37
  %30 = getelementptr inbounds { i64, i64 }, ptr %_76, i32 0, i32 1, !dbg !3197
  %i17 = load i64, ptr %30, align 8, !dbg !3197, !noundef !24
  store i64 %i17, ptr %i.dbg.spill18, align 8, !dbg !3197
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill18, metadata !3026, metadata !DIExpression()), !dbg !3198
  %31 = load ptr, ptr %end_l, align 8, !dbg !3199, !noundef !24
  %32 = trunc i64 %i17 to i8, !dbg !3199
  store i8 %32, ptr %31, align 1, !dbg !3199
  %_81 = load ptr, ptr %end_l, align 8, !dbg !3200, !noundef !24
  %_86 = load ptr, ptr %elem, align 8, !dbg !3201, !noundef !24
  store ptr %_86, ptr %_85, align 8, !dbg !3202
  %33 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 1, !dbg !3202
  store ptr %pivot, ptr %33, align 8, !dbg !3202
  %34 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 0, !dbg !3202
  %35 = load ptr, ptr %34, align 8, !dbg !3202, !nonnull !24, !align !417, !noundef !24
  %36 = getelementptr inbounds { ptr, ptr }, ptr %_85, i32 0, i32 1, !dbg !3202
  %37 = load ptr, ptr %36, align 8, !dbg !3202, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_84 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %35, ptr align 8 %37) #10, !dbg !3202
  %_83 = xor i1 %_84, true, !dbg !3203
  %_82 = zext i1 %_83 to i64, !dbg !3203
  store ptr %_81, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3204, metadata !DIExpression()), !dbg !3210
  store i64 %_82, ptr %count.dbg.spill.i67, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i67, metadata !3209, metadata !DIExpression()), !dbg !3212
  %_0.i68 = getelementptr inbounds i8, ptr %_81, i64 %_82, !dbg !3213
  store ptr %_0.i68, ptr %end_l, align 8, !dbg !3214
  %_88 = load ptr, ptr %elem, align 8, !dbg !3215, !noundef !24
  store ptr %_88, ptr %self.dbg.spill.i85, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i85, metadata !193, metadata !DIExpression()), !dbg !3216
  store i64 1, ptr %count.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i84, metadata !199, metadata !DIExpression()), !dbg !3218
  %_0.i86 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_88, i64 1, !dbg !3219
  store ptr %_0.i86, ptr %elem, align 8, !dbg !3220
  br label %bb37, !dbg !3196

bb54:                                             ; preds = %bb48, %bb44
  %_115 = load ptr, ptr %start_l, align 8, !dbg !3221, !noundef !24
  %_116 = load ptr, ptr %end_l, align 8, !dbg !3222, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_114 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h2489786a8313f546E(ptr %_115, ptr %_116) #10, !dbg !3223
  %_118 = load ptr, ptr %start_r, align 8, !dbg !3224, !noundef !24
  %_119 = load ptr, ptr %end_r, align 8, !dbg !3225, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_117 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h2489786a8313f546E(ptr %_118, ptr %_119) #10, !dbg !3226
; call core::cmp::min
  %count = call i64 @_ZN4core3cmp3min17h8501c1cbcfddf070E(i64 %_114, i64 %_117) #10, !dbg !3227
  store i64 %count, ptr %count.dbg.spill, align 8, !dbg !3227
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !3034, metadata !DIExpression()), !dbg !3228
  %_120 = icmp ugt i64 %count, 0, !dbg !3229
  br i1 %_120, label %bb58, label %bb93, !dbg !3229

bb45:                                             ; preds = %bb44
  store ptr %offsets_r, ptr %this.dbg.spill.i, align 8
  %38 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 128, ptr %38, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !3170, metadata !DIExpression()), !dbg !3230
  store ptr %offsets_r, ptr %self.dbg.spill.i206, align 8
  %39 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i206, i32 0, i32 1
  store i64 128, ptr %39, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i206, metadata !3183, metadata !DIExpression()), !dbg !3232
  store ptr %offsets_r, ptr %start_r, align 8, !dbg !3234
  %_95 = load ptr, ptr %start_r, align 8, !dbg !3235, !noundef !24
  store ptr %_95, ptr %end_r, align 8, !dbg !3236
  %40 = load ptr, ptr %r, align 8, !dbg !3237, !noundef !24
  store ptr %40, ptr %elem1, align 8, !dbg !3237
  %_99 = load i64, ptr %block_r, align 8, !dbg !3238, !noundef !24
  store i64 0, ptr %_98, align 8, !dbg !3239
  %41 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 1, !dbg !3239
  store i64 %_99, ptr %41, align 8, !dbg !3239
  %42 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 0, !dbg !3239
  %43 = load i64, ptr %42, align 8, !dbg !3239, !noundef !24
  %44 = getelementptr inbounds { i64, i64 }, ptr %_98, i32 0, i32 1, !dbg !3239
  %45 = load i64, ptr %44, align 8, !dbg !3239, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %46 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9a58c267ff3ccf88E"(i64 %43, i64 %45) #10, !dbg !3239
  %_97.0 = extractvalue { i64, i64 } %46, 0, !dbg !3239
  %_97.1 = extractvalue { i64, i64 } %46, 1, !dbg !3239
  %47 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 0, !dbg !3239
  store i64 %_97.0, ptr %47, align 8, !dbg !3239
  %48 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 1, !dbg !3239
  store i64 %_97.1, ptr %48, align 8, !dbg !3239
  br label %bb48, !dbg !3240

bb48:                                             ; preds = %bb50, %bb45
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %49 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30436e101c7f44ddE"(ptr align 8 %iter2) #10, !dbg !3073
  store { i64, i64 } %49, ptr %_101, align 8, !dbg !3073
  %_103 = load i64, ptr %_101, align 8, !dbg !3073, !range !975, !noundef !24
  %50 = icmp eq i64 %_103, 0, !dbg !3073
  br i1 %50, label %bb54, label %bb50, !dbg !3073

bb50:                                             ; preds = %bb48
  %51 = getelementptr inbounds { i64, i64 }, ptr %_101, i32 0, i32 1, !dbg !3241
  %i = load i64, ptr %51, align 8, !dbg !3241, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3241
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3032, metadata !DIExpression()), !dbg !3242
  %_106 = load ptr, ptr %elem1, align 8, !dbg !3243, !noundef !24
  store ptr %_106, ptr %self.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i112, metadata !2322, metadata !DIExpression()), !dbg !3244
  store i64 1, ptr %count.dbg.spill.i111, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i111, metadata !2325, metadata !DIExpression()), !dbg !3246
  store ptr %_106, ptr %self.dbg.spill.i186, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i186, metadata !2330, metadata !DIExpression()), !dbg !3247
  store i64 -1, ptr %count.dbg.spill.i185, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i185, metadata !2336, metadata !DIExpression()), !dbg !3249
  %_0.i187 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_106, i64 -1, !dbg !3250
  store ptr %_0.i187, ptr %_0.i113, align 8, !dbg !3251
  %52 = load ptr, ptr %_0.i113, align 8, !dbg !3252, !noundef !24
  store ptr %52, ptr %elem1, align 8, !dbg !3253
  %53 = load ptr, ptr %end_r, align 8, !dbg !3254, !noundef !24
  %54 = trunc i64 %i to i8, !dbg !3254
  store i8 %54, ptr %53, align 1, !dbg !3254
  %_108 = load ptr, ptr %end_r, align 8, !dbg !3255, !noundef !24
  %_112 = load ptr, ptr %elem1, align 8, !dbg !3256, !noundef !24
  store ptr %_112, ptr %_111, align 8, !dbg !3257
  %55 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 1, !dbg !3257
  store ptr %pivot, ptr %55, align 8, !dbg !3257
  %56 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 0, !dbg !3257
  %57 = load ptr, ptr %56, align 8, !dbg !3257, !nonnull !24, !align !417, !noundef !24
  %58 = getelementptr inbounds { ptr, ptr }, ptr %_111, i32 0, i32 1, !dbg !3257
  %59 = load ptr, ptr %58, align 8, !dbg !3257, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_110 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %57, ptr align 8 %59) #10, !dbg !3257
  %_109 = zext i1 %_110 to i64, !dbg !3257
  store ptr %_108, ptr %self.dbg.spill.i70, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i70, metadata !3204, metadata !DIExpression()), !dbg !3258
  store i64 %_109, ptr %count.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i69, metadata !3209, metadata !DIExpression()), !dbg !3260
  %_0.i71 = getelementptr inbounds i8, ptr %_108, i64 %_109, !dbg !3261
  store ptr %_0.i71, ptr %end_r, align 8, !dbg !3262
  br label %bb48, !dbg !3240

bb93:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit43, %bb54
  %_189 = load ptr, ptr %start_l, align 8, !dbg !3263, !noundef !24
  %_190 = load ptr, ptr %end_l, align 8, !dbg !3264, !noundef !24
  %_188 = icmp eq ptr %_189, %_190, !dbg !3263
  br i1 %_188, label %bb94, label %bb96, !dbg !3263

bb58:                                             ; preds = %bb54
  %_124 = load ptr, ptr %l, align 8, !dbg !3265, !noundef !24
  %60 = load ptr, ptr %start_l, align 8, !dbg !3265, !noundef !24
  %_126 = load i8, ptr %60, align 1, !dbg !3265, !noundef !24
  store i8 %_126, ptr %small.dbg.spill.i224, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i224, metadata !3266, metadata !DIExpression()), !dbg !3275
  %_0.i225 = zext i8 %_126 to i64, !dbg !3277
  store ptr %_124, ptr %self.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i106, metadata !193, metadata !DIExpression()), !dbg !3278
  store i64 %_0.i225, ptr %count.dbg.spill.i105, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i105, metadata !199, metadata !DIExpression()), !dbg !3280
  %_0.i107 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_124, i64 %_0.i225, !dbg !3281
; call core::ptr::read
  call void @_ZN4core3ptr4read17h8a7b025a440768baE(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %tmp, ptr %_0.i107) #10, !dbg !3282
  %_130 = load ptr, ptr %r, align 8, !dbg !3283, !noundef !24
  %61 = load ptr, ptr %start_r, align 8, !dbg !3283, !noundef !24
  %_133 = load i8, ptr %61, align 1, !dbg !3283, !noundef !24
  store i8 %_133, ptr %small.dbg.spill.i222, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i222, metadata !3266, metadata !DIExpression()), !dbg !3284
  %_0.i223 = zext i8 %_133 to i64, !dbg !3286
  %62 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i223, i64 1), !dbg !3283
  %_134.0 = extractvalue { i64, i1 } %62, 0, !dbg !3283
  %_134.1 = extractvalue { i64, i1 } %62, 1, !dbg !3283
  %63 = call i1 @llvm.expect.i1(i1 %_134.1, i1 false), !dbg !3283
  br i1 %63, label %panic8, label %bb63, !dbg !3283

bb63:                                             ; preds = %bb58
  store ptr %_130, ptr %self.dbg.spill.i149, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i149, metadata !2322, metadata !DIExpression()), !dbg !3287
  store i64 %_134.0, ptr %count.dbg.spill.i148, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i148, metadata !2325, metadata !DIExpression()), !dbg !3289
  %_4.i152 = sub nsw i64 0, %_134.0, !dbg !3290
  store ptr %_130, ptr %self.dbg.spill.i162, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i162, metadata !2330, metadata !DIExpression()), !dbg !3291
  store i64 %_4.i152, ptr %count.dbg.spill.i161, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i161, metadata !2336, metadata !DIExpression()), !dbg !3293
  %_0.i163 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_130, i64 %_4.i152, !dbg !3294
  store ptr %_0.i163, ptr %_0.i150, align 8, !dbg !3295
  %64 = load ptr, ptr %_0.i150, align 8, !dbg !3296, !noundef !24
  %_136 = load ptr, ptr %l, align 8, !dbg !3297, !noundef !24
  %65 = load ptr, ptr %start_l, align 8, !dbg !3297, !noundef !24
  %_138 = load i8, ptr %65, align 1, !dbg !3297, !noundef !24
  store i8 %_138, ptr %small.dbg.spill.i220, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i220, metadata !3266, metadata !DIExpression()), !dbg !3298
  %_0.i221 = zext i8 %_138 to i64, !dbg !3300
  store ptr %_136, ptr %self.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i103, metadata !193, metadata !DIExpression()), !dbg !3301
  store i64 %_0.i221, ptr %count.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i102, metadata !199, metadata !DIExpression()), !dbg !3303
  %_0.i104 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_136, i64 %_0.i221, !dbg !3304
  store ptr %64, ptr %src.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i29, metadata !1498, metadata !DIExpression()), !dbg !3305
  store ptr %_0.i104, ptr %dst.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i28, metadata !1503, metadata !DIExpression()), !dbg !3307
  store i64 1, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !1504, metadata !DIExpression()), !dbg !3308
  store ptr %64, ptr %_6.i30, align 8, !dbg !3309
  %66 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i30, i32 0, i32 1, !dbg !3309
  store ptr %_0.i104, ptr %66, align 8, !dbg !3309
  %67 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i30, i32 0, i32 2, !dbg !3309
  store i64 1, ptr %67, align 8, !dbg !3309
  %68 = load ptr, ptr %_6.i30, align 8, !dbg !3309, !noundef !24
  %69 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i30, i32 0, i32 1, !dbg !3309
  %70 = load ptr, ptr %69, align 8, !dbg !3309, !noundef !24
  %71 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i30, i32 0, i32 2, !dbg !3309
  %72 = load i64, ptr %71, align 8, !dbg !3309, !noundef !24
  store ptr %68, ptr %src.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i33, metadata !1510, metadata !DIExpression()), !dbg !3310
  store ptr %70, ptr %dst.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i32, metadata !1514, metadata !DIExpression()), !dbg !3310
  store i64 %72, ptr %count.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i31, metadata !1515, metadata !DIExpression()), !dbg !3310
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %68) #10, !dbg !3312
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !3312

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %bb63
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !3313
  unreachable, !dbg !3313

bb2.i:                                            ; preds = %bb63
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %70) #10, !dbg !3314
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !3314

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %68, ptr %70, i64 %72) #10, !dbg !3315
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit, label %bb7.i, !dbg !3315

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0.i104, ptr align 8 %64, i64 24, i1 false), !dbg !3316
  store i64 1, ptr %_140, align 8, !dbg !3317
  %73 = getelementptr inbounds { i64, i64 }, ptr %_140, i32 0, i32 1, !dbg !3317
  store i64 %count, ptr %73, align 8, !dbg !3317
  %74 = getelementptr inbounds { i64, i64 }, ptr %_140, i32 0, i32 0, !dbg !3317
  %75 = load i64, ptr %74, align 8, !dbg !3317, !noundef !24
  %76 = getelementptr inbounds { i64, i64 }, ptr %_140, i32 0, i32 1, !dbg !3317
  %77 = load i64, ptr %76, align 8, !dbg !3317, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %78 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9a58c267ff3ccf88E"(i64 %75, i64 %77) #10, !dbg !3317
  %_139.0 = extractvalue { i64, i64 } %78, 0, !dbg !3317
  %_139.1 = extractvalue { i64, i64 } %78, 1, !dbg !3317
  %79 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 0, !dbg !3317
  store i64 %_139.0, ptr %79, align 8, !dbg !3317
  %80 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 1, !dbg !3317
  store i64 %_139.1, ptr %80, align 8, !dbg !3317
  br label %bb69, !dbg !3318

panic8:                                           ; preds = %bb58
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_0a48b3a7e93a3fb66a7841c604466c03) #11, !dbg !3283
  unreachable, !dbg !3283

bb69:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit63, %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %81 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30436e101c7f44ddE"(ptr align 8 %iter3) #10, !dbg !3075
  store { i64, i64 } %81, ptr %_142, align 8, !dbg !3075
  %_144 = load i64, ptr %_142, align 8, !dbg !3075, !range !975, !noundef !24
  %82 = icmp eq i64 %_144, 0, !dbg !3075
  br i1 %82, label %bb72, label %bb71, !dbg !3075

bb72:                                             ; preds = %bb69
  %_177 = load ptr, ptr %r, align 8, !dbg !3319, !noundef !24
  %83 = load ptr, ptr %start_r, align 8, !dbg !3319, !noundef !24
  %_180 = load i8, ptr %83, align 1, !dbg !3319, !noundef !24
  store i8 %_180, ptr %small.dbg.spill.i218, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i218, metadata !3266, metadata !DIExpression()), !dbg !3320
  %_0.i219 = zext i8 %_180 to i64, !dbg !3322
  %84 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i219, i64 1), !dbg !3319
  %_181.0 = extractvalue { i64, i1 } %84, 0, !dbg !3319
  %_181.1 = extractvalue { i64, i1 } %84, 1, !dbg !3319
  %85 = call i1 @llvm.expect.i1(i1 %_181.1, i1 false), !dbg !3319
  br i1 %85, label %panic9, label %bb87, !dbg !3319

bb71:                                             ; preds = %bb69
  %_146 = load ptr, ptr %start_l, align 8, !dbg !3323, !noundef !24
  store ptr %_146, ptr %self.dbg.spill.i76, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i76, metadata !3204, metadata !DIExpression()), !dbg !3324
  store i64 1, ptr %count.dbg.spill.i75, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i75, metadata !3209, metadata !DIExpression()), !dbg !3326
  %_0.i77 = getelementptr inbounds i8, ptr %_146, i64 1, !dbg !3327
  store ptr %_0.i77, ptr %start_l, align 8, !dbg !3328
  %_150 = load ptr, ptr %l, align 8, !dbg !3329, !noundef !24
  %86 = load ptr, ptr %start_l, align 8, !dbg !3329, !noundef !24
  %_152 = load i8, ptr %86, align 1, !dbg !3329, !noundef !24
  store i8 %_152, ptr %small.dbg.spill.i212, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i212, metadata !3266, metadata !DIExpression()), !dbg !3330
  %_0.i213 = zext i8 %_152 to i64, !dbg !3332
  store ptr %_150, ptr %self.dbg.spill.i91, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i91, metadata !193, metadata !DIExpression()), !dbg !3333
  store i64 %_0.i213, ptr %count.dbg.spill.i90, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i90, metadata !199, metadata !DIExpression()), !dbg !3335
  %_0.i92 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_150, i64 %_0.i213, !dbg !3336
  %_154 = load ptr, ptr %r, align 8, !dbg !3337, !noundef !24
  %87 = load ptr, ptr %start_r, align 8, !dbg !3337, !noundef !24
  %_157 = load i8, ptr %87, align 1, !dbg !3337, !noundef !24
  store i8 %_157, ptr %small.dbg.spill.i210, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i210, metadata !3266, metadata !DIExpression()), !dbg !3338
  %_0.i211 = zext i8 %_157 to i64, !dbg !3340
  %88 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i211, i64 1), !dbg !3337
  %_158.0 = extractvalue { i64, i1 } %88, 0, !dbg !3337
  %_158.1 = extractvalue { i64, i1 } %88, 1, !dbg !3337
  %89 = call i1 @llvm.expect.i1(i1 %_158.1, i1 false), !dbg !3337
  br i1 %89, label %panic15, label %bb77, !dbg !3337

bb87:                                             ; preds = %bb72
  store ptr %_177, ptr %self.dbg.spill.i144, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i144, metadata !2322, metadata !DIExpression()), !dbg !3341
  store i64 %_181.0, ptr %count.dbg.spill.i143, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i143, metadata !2325, metadata !DIExpression()), !dbg !3343
  %_4.i147 = sub nsw i64 0, %_181.0, !dbg !3344
  store ptr %_177, ptr %self.dbg.spill.i165, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i165, metadata !2330, metadata !DIExpression()), !dbg !3345
  store i64 %_4.i147, ptr %count.dbg.spill.i164, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i164, metadata !2336, metadata !DIExpression()), !dbg !3347
  %_0.i166 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_177, i64 %_4.i147, !dbg !3348
  store ptr %_0.i166, ptr %_0.i145, align 8, !dbg !3349
  %90 = load ptr, ptr %_0.i145, align 8, !dbg !3350, !noundef !24
  store ptr %tmp, ptr %src.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i25, metadata !1498, metadata !DIExpression()), !dbg !3351
  store ptr %90, ptr %dst.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i24, metadata !1503, metadata !DIExpression()), !dbg !3353
  store i64 1, ptr %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i23, metadata !1504, metadata !DIExpression()), !dbg !3354
  store ptr %tmp, ptr %_6.i26, align 8, !dbg !3355
  %91 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i26, i32 0, i32 1, !dbg !3355
  store ptr %90, ptr %91, align 8, !dbg !3355
  %92 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i26, i32 0, i32 2, !dbg !3355
  store i64 1, ptr %92, align 8, !dbg !3355
  %93 = load ptr, ptr %_6.i26, align 8, !dbg !3355, !noundef !24
  %94 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i26, i32 0, i32 1, !dbg !3355
  %95 = load ptr, ptr %94, align 8, !dbg !3355, !noundef !24
  %96 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i26, i32 0, i32 2, !dbg !3355
  %97 = load i64, ptr %96, align 8, !dbg !3355, !noundef !24
  store ptr %93, ptr %src.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i36, metadata !1510, metadata !DIExpression()), !dbg !3356
  store ptr %95, ptr %dst.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i35, metadata !1514, metadata !DIExpression()), !dbg !3356
  store i64 %97, ptr %count.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i34, metadata !1515, metadata !DIExpression()), !dbg !3356
; call core::intrinsics::is_aligned_and_not_null
  %_4.i37 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %93) #10, !dbg !3358
  br i1 %_4.i37, label %bb2.i39, label %bb7.i38, !dbg !3358

bb7.i38:                                          ; preds = %bb4.i41, %bb2.i39, %bb87
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !3359
  unreachable, !dbg !3359

bb2.i39:                                          ; preds = %bb87
; call core::intrinsics::is_aligned_and_not_null
  %_5.i40 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %95) #10, !dbg !3360
  br i1 %_5.i40, label %bb4.i41, label %bb7.i38, !dbg !3360

bb4.i41:                                          ; preds = %bb2.i39
; call core::intrinsics::is_nonoverlapping
  %_7.i42 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %93, ptr %95, i64 %97) #10, !dbg !3361
  br i1 %_7.i42, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit43, label %bb7.i38, !dbg !3361

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit43: ; preds = %bb4.i41
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %90, ptr align 8 %tmp, i64 24, i1 false), !dbg !3362
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_183, ptr align 8 %tmp, i64 24, i1 false), !dbg !3363
; call core::mem::forget
  call void @_ZN4core3mem6forget17hd52909aaf3c1e60cE(ptr align 8 %_183) #10, !dbg !3364
  %_185 = load ptr, ptr %start_l, align 8, !dbg !3365, !noundef !24
  store ptr %_185, ptr %self.dbg.spill.i82, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i82, metadata !3204, metadata !DIExpression()), !dbg !3366
  store i64 1, ptr %count.dbg.spill.i81, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i81, metadata !3209, metadata !DIExpression()), !dbg !3368
  %_0.i83 = getelementptr inbounds i8, ptr %_185, i64 1, !dbg !3369
  store ptr %_0.i83, ptr %start_l, align 8, !dbg !3370
  %_187 = load ptr, ptr %start_r, align 8, !dbg !3371, !noundef !24
  store ptr %_187, ptr %self.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i79, metadata !3204, metadata !DIExpression()), !dbg !3372
  store i64 1, ptr %count.dbg.spill.i78, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i78, metadata !3209, metadata !DIExpression()), !dbg !3374
  %_0.i80 = getelementptr inbounds i8, ptr %_187, i64 1, !dbg !3375
  store ptr %_0.i80, ptr %start_r, align 8, !dbg !3376
  br label %bb93, !dbg !3377

panic9:                                           ; preds = %bb72
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_2107e90e8c7dda0adfd21e59e3b7e9ee) #11, !dbg !3319
  unreachable, !dbg !3319

bb96:                                             ; preds = %bb94, %bb93
  %_195 = load ptr, ptr %start_r, align 8, !dbg !3378, !noundef !24
  %_196 = load ptr, ptr %end_r, align 8, !dbg !3379, !noundef !24
  %_194 = icmp eq ptr %_195, %_196, !dbg !3378
  br i1 %_194, label %bb97, label %bb99, !dbg !3378

bb94:                                             ; preds = %bb93
  %_192 = load ptr, ptr %l, align 8, !dbg !3380, !noundef !24
  %_193 = load i64, ptr %block_l, align 8, !dbg !3381, !noundef !24
  store ptr %_192, ptr %self.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i100, metadata !193, metadata !DIExpression()), !dbg !3382
  store i64 %_193, ptr %count.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i99, metadata !199, metadata !DIExpression()), !dbg !3384
  %_0.i101 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_192, i64 %_193, !dbg !3385
  store ptr %_0.i101, ptr %l, align 8, !dbg !3386
  br label %bb96, !dbg !3387

bb99:                                             ; preds = %bb97, %bb96
  br i1 %is_done, label %bb100, label %bb9, !dbg !3388

bb97:                                             ; preds = %bb96
  %_198 = load ptr, ptr %r, align 8, !dbg !3389, !noundef !24
  %_199 = load i64, ptr %block_r, align 8, !dbg !3390, !noundef !24
  store ptr %_198, ptr %self.dbg.spill.i139, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i139, metadata !2322, metadata !DIExpression()), !dbg !3391
  store i64 %_199, ptr %count.dbg.spill.i138, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i138, metadata !2325, metadata !DIExpression()), !dbg !3393
  %_4.i142 = sub nsw i64 0, %_199, !dbg !3394
  store ptr %_198, ptr %self.dbg.spill.i168, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i168, metadata !2330, metadata !DIExpression()), !dbg !3395
  store i64 %_4.i142, ptr %count.dbg.spill.i167, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i167, metadata !2336, metadata !DIExpression()), !dbg !3397
  %_0.i169 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_198, i64 %_4.i142, !dbg !3398
  store ptr %_0.i169, ptr %_0.i140, align 8, !dbg !3399
  %98 = load ptr, ptr %_0.i140, align 8, !dbg !3400, !noundef !24
  store ptr %98, ptr %r, align 8, !dbg !3401
  br label %bb99, !dbg !3402

bb100:                                            ; preds = %bb99
  %_201 = load ptr, ptr %start_l, align 8, !dbg !3403, !noundef !24
  %_202 = load ptr, ptr %end_l, align 8, !dbg !3404, !noundef !24
  %_200 = icmp ult ptr %_201, %_202, !dbg !3403
  br i1 %_200, label %bb101, label %bb102, !dbg !3403

bb102:                                            ; preds = %bb100
  %_235 = load ptr, ptr %start_r, align 8, !dbg !3405, !noundef !24
  %_236 = load ptr, ptr %end_r, align 8, !dbg !3406, !noundef !24
  %_234 = icmp ult ptr %_235, %_236, !dbg !3405
  br i1 %_234, label %bb116, label %bb117, !dbg !3405

bb101:                                            ; preds = %bb100
  br i1 true, label %bb103, label %bb106, !dbg !3407

bb117:                                            ; preds = %bb102
  store ptr %v.0, ptr %self.dbg.spill.i203, align 8
  %99 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i203, i32 0, i32 1
  store i64 %v.1, ptr %99, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i203, metadata !2187, metadata !DIExpression()), !dbg !3408
  %_270 = load ptr, ptr %l, align 8, !dbg !3410, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %100 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E(ptr %v.0, ptr %_270) #10, !dbg !3411
  store i64 %100, ptr %_0, align 8, !dbg !3411
  br label %bb132, !dbg !3411

bb116:                                            ; preds = %bb102
  br i1 true, label %bb118, label %bb121, !dbg !3412

bb132:                                            ; preds = %bb114, %bb129, %bb117
  %101 = load i64, ptr %_0, align 8, !dbg !3413, !noundef !24
  ret i64 %101, !dbg !3413

bb121:                                            ; preds = %bb125, %bb118, %bb116
  %_253 = load ptr, ptr %start_r, align 8, !dbg !3414, !noundef !24
  %_254 = load ptr, ptr %end_r, align 8, !dbg !3415, !noundef !24
  %_252 = icmp ult ptr %_253, %_254, !dbg !3414
  br i1 %_252, label %bb122, label %bb129, !dbg !3414

bb118:                                            ; preds = %bb116
  %_241 = load ptr, ptr %l, align 8, !dbg !3416, !noundef !24
  %_242 = load ptr, ptr %r, align 8, !dbg !3417, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %102 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E(ptr %_241, ptr %_242) #10, !dbg !3418
  store i64 %102, ptr %_240, align 8, !dbg !3418
  store ptr %_240, ptr %_238, align 8, !dbg !3412
  %103 = getelementptr inbounds { ptr, ptr }, ptr %_238, i32 0, i32 1, !dbg !3412
  store ptr %block_r, ptr %103, align 8, !dbg !3412
  %left_val = load ptr, ptr %_238, align 8, !dbg !3412, !nonnull !24, !align !417, !noundef !24
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !3412
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !3049, metadata !DIExpression()), !dbg !3419
  %104 = getelementptr inbounds { ptr, ptr }, ptr %_238, i32 0, i32 1, !dbg !3412
  %right_val = load ptr, ptr %104, align 8, !dbg !3412, !nonnull !24, !align !417, !noundef !24
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !3412
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !3052, metadata !DIExpression()), !dbg !3419
  %_247 = load i64, ptr %left_val, align 8, !dbg !3419, !noundef !24
  %_248 = load i64, ptr %right_val, align 8, !dbg !3419, !noundef !24
  %_246 = icmp eq i64 %_247, %_248, !dbg !3419
  br i1 %_246, label %bb121, label %bb120, !dbg !3419

bb120:                                            ; preds = %bb118
  store i8 0, ptr %kind4, align 1, !dbg !3419
  store ptr null, ptr %_251, align 8, !dbg !3077
  %105 = load i8, ptr %kind4, align 1, !dbg !3077, !range !3420, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h4af24d267985d1beE(i8 %105, ptr align 8 %left_val, ptr align 8 %right_val, ptr align 8 %_251, ptr align 8 @alloc_fbd29d12e7b221b5790588e8407e814c) #11, !dbg !3077
  unreachable, !dbg !3077

bb129:                                            ; preds = %bb121
  store ptr %v.0, ptr %self.dbg.spill.i202, align 8
  %106 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i202, i32 0, i32 1
  store i64 %v.1, ptr %106, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i202, metadata !2187, metadata !DIExpression()), !dbg !3421
  %_268 = load ptr, ptr %l, align 8, !dbg !3423, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %107 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E(ptr %v.0, ptr %_268) #10, !dbg !3424
  store i64 %107, ptr %_0, align 8, !dbg !3424
  br label %bb132, !dbg !3424

bb122:                                            ; preds = %bb121
  %_256 = load ptr, ptr %end_r, align 8, !dbg !3425, !noundef !24
  store ptr %_256, ptr %self.dbg.spill.i158, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i158, metadata !3426, metadata !DIExpression()), !dbg !3430
  store i64 1, ptr %count.dbg.spill.i157, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i157, metadata !3429, metadata !DIExpression()), !dbg !3432
  store ptr %_256, ptr %self.dbg.spill.i189, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i189, metadata !3433, metadata !DIExpression()), !dbg !3439
  store i64 -1, ptr %count.dbg.spill.i188, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i188, metadata !3438, metadata !DIExpression()), !dbg !3441
  %_0.i190 = getelementptr inbounds i8, ptr %_256, i64 -1, !dbg !3442
  store ptr %_0.i190, ptr %_0.i159, align 8, !dbg !3443
  %108 = load ptr, ptr %_0.i159, align 8, !dbg !3444, !noundef !24
  store ptr %108, ptr %end_r, align 8, !dbg !3445
  %_258 = load ptr, ptr %l, align 8, !dbg !3446, !noundef !24
  %_260 = load ptr, ptr %r, align 8, !dbg !3447, !noundef !24
  %109 = load ptr, ptr %end_r, align 8, !dbg !3448, !noundef !24
  %_263 = load i8, ptr %109, align 1, !dbg !3448, !noundef !24
  store i8 %_263, ptr %small.dbg.spill.i216, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i216, metadata !3266, metadata !DIExpression()), !dbg !3449
  %_0.i217 = zext i8 %_263 to i64, !dbg !3451
  %110 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i217, i64 1), !dbg !3452
  %_264.0 = extractvalue { i64, i1 } %110, 0, !dbg !3452
  %_264.1 = extractvalue { i64, i1 } %110, 1, !dbg !3452
  %111 = call i1 @llvm.expect.i1(i1 %_264.1, i1 false), !dbg !3452
  br i1 %111, label %panic10, label %bb125, !dbg !3452

bb125:                                            ; preds = %bb122
  store ptr %_260, ptr %self.dbg.spill.i134, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i134, metadata !2322, metadata !DIExpression()), !dbg !3453
  store i64 %_264.0, ptr %count.dbg.spill.i133, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i133, metadata !2325, metadata !DIExpression()), !dbg !3455
  %_4.i137 = sub nsw i64 0, %_264.0, !dbg !3456
  store ptr %_260, ptr %self.dbg.spill.i171, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i171, metadata !2330, metadata !DIExpression()), !dbg !3457
  store i64 %_4.i137, ptr %count.dbg.spill.i170, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i170, metadata !2336, metadata !DIExpression()), !dbg !3459
  %_0.i172 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_260, i64 %_4.i137, !dbg !3460
  store ptr %_0.i172, ptr %_0.i135, align 8, !dbg !3461
  %112 = load ptr, ptr %_0.i135, align 8, !dbg !3462, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2f264edc6d2d6d71E(ptr %_258, ptr %112) #10, !dbg !3463
  %_266 = load ptr, ptr %l, align 8, !dbg !3464, !noundef !24
  store ptr %_266, ptr %self.dbg.spill.i97, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i97, metadata !193, metadata !DIExpression()), !dbg !3465
  store i64 1, ptr %count.dbg.spill.i96, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i96, metadata !199, metadata !DIExpression()), !dbg !3467
  %_0.i98 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_266, i64 1, !dbg !3468
  store ptr %_0.i98, ptr %l, align 8, !dbg !3469
  br label %bb121, !dbg !3470

panic10:                                          ; preds = %bb122
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_0ba58876d11be66a75ed3c6ebb0e6bf5) #11, !dbg !3452
  unreachable, !dbg !3452

bb106:                                            ; preds = %bb107, %bb103, %bb101
  %_219 = load ptr, ptr %start_l, align 8, !dbg !3471, !noundef !24
  %_220 = load ptr, ptr %end_l, align 8, !dbg !3472, !noundef !24
  %_218 = icmp ult ptr %_219, %_220, !dbg !3471
  br i1 %_218, label %bb107, label %bb114, !dbg !3471

bb103:                                            ; preds = %bb101
  %_207 = load ptr, ptr %l, align 8, !dbg !3473, !noundef !24
  %_208 = load ptr, ptr %r, align 8, !dbg !3474, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %113 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E(ptr %_207, ptr %_208) #10, !dbg !3475
  store i64 %113, ptr %_206, align 8, !dbg !3475
  store ptr %_206, ptr %_204, align 8, !dbg !3407
  %114 = getelementptr inbounds { ptr, ptr }, ptr %_204, i32 0, i32 1, !dbg !3407
  store ptr %block_l, ptr %114, align 8, !dbg !3407
  %left_val11 = load ptr, ptr %_204, align 8, !dbg !3407, !nonnull !24, !align !417, !noundef !24
  store ptr %left_val11, ptr %left_val.dbg.spill12, align 8, !dbg !3407
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill12, metadata !3040, metadata !DIExpression()), !dbg !3476
  %115 = getelementptr inbounds { ptr, ptr }, ptr %_204, i32 0, i32 1, !dbg !3407
  %right_val13 = load ptr, ptr %115, align 8, !dbg !3407, !nonnull !24, !align !417, !noundef !24
  store ptr %right_val13, ptr %right_val.dbg.spill14, align 8, !dbg !3407
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill14, metadata !3045, metadata !DIExpression()), !dbg !3476
  %_213 = load i64, ptr %left_val11, align 8, !dbg !3476, !noundef !24
  %_214 = load i64, ptr %right_val13, align 8, !dbg !3476, !noundef !24
  %_212 = icmp eq i64 %_213, %_214, !dbg !3476
  br i1 %_212, label %bb106, label %bb105, !dbg !3476

bb105:                                            ; preds = %bb103
  store i8 0, ptr %kind, align 1, !dbg !3476
  store ptr null, ptr %_217, align 8, !dbg !3076
  %116 = load i8, ptr %kind, align 1, !dbg !3076, !range !3420, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h4af24d267985d1beE(i8 %116, ptr align 8 %left_val11, ptr align 8 %right_val13, ptr align 8 %_217, ptr align 8 @alloc_23d83fb97dc5ddd699c8f80f695d1b3b) #11, !dbg !3076
  unreachable, !dbg !3076

bb114:                                            ; preds = %bb106
  store ptr %v.0, ptr %self.dbg.spill.i201, align 8
  %117 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i201, i32 0, i32 1
  store i64 %v.1, ptr %117, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i201, metadata !2187, metadata !DIExpression()), !dbg !3477
  %_233 = load ptr, ptr %r, align 8, !dbg !3479, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %118 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E(ptr %v.0, ptr %_233) #10, !dbg !3480
  store i64 %118, ptr %_0, align 8, !dbg !3480
  br label %bb132, !dbg !3480

bb107:                                            ; preds = %bb106
  %_222 = load ptr, ptr %end_l, align 8, !dbg !3481, !noundef !24
  store ptr %_222, ptr %self.dbg.spill.i154, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i154, metadata !3426, metadata !DIExpression()), !dbg !3482
  store i64 1, ptr %count.dbg.spill.i153, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i153, metadata !3429, metadata !DIExpression()), !dbg !3484
  store ptr %_222, ptr %self.dbg.spill.i192, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i192, metadata !3433, metadata !DIExpression()), !dbg !3485
  store i64 -1, ptr %count.dbg.spill.i191, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i191, metadata !3438, metadata !DIExpression()), !dbg !3487
  %_0.i193 = getelementptr inbounds i8, ptr %_222, i64 -1, !dbg !3488
  store ptr %_0.i193, ptr %_0.i155, align 8, !dbg !3489
  %119 = load ptr, ptr %_0.i155, align 8, !dbg !3490, !noundef !24
  store ptr %119, ptr %end_l, align 8, !dbg !3491
  %_225 = load ptr, ptr %l, align 8, !dbg !3492, !noundef !24
  %120 = load ptr, ptr %end_l, align 8, !dbg !3493, !noundef !24
  %_227 = load i8, ptr %120, align 1, !dbg !3493, !noundef !24
  store i8 %_227, ptr %small.dbg.spill.i214, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i214, metadata !3266, metadata !DIExpression()), !dbg !3494
  %_0.i215 = zext i8 %_227 to i64, !dbg !3496
  store ptr %_225, ptr %self.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i94, metadata !193, metadata !DIExpression()), !dbg !3497
  store i64 %_0.i215, ptr %count.dbg.spill.i93, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i93, metadata !199, metadata !DIExpression()), !dbg !3499
  %_0.i95 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_225, i64 %_0.i215, !dbg !3500
  %_229 = load ptr, ptr %r, align 8, !dbg !3501, !noundef !24
  store ptr %_229, ptr %self.dbg.spill.i130, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i130, metadata !2322, metadata !DIExpression()), !dbg !3502
  store i64 1, ptr %count.dbg.spill.i129, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i129, metadata !2325, metadata !DIExpression()), !dbg !3504
  store ptr %_229, ptr %self.dbg.spill.i174, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i174, metadata !2330, metadata !DIExpression()), !dbg !3505
  store i64 -1, ptr %count.dbg.spill.i173, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i173, metadata !2336, metadata !DIExpression()), !dbg !3507
  %_0.i175 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_229, i64 -1, !dbg !3508
  store ptr %_0.i175, ptr %_0.i131, align 8, !dbg !3509
  %121 = load ptr, ptr %_0.i131, align 8, !dbg !3510, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h2f264edc6d2d6d71E(ptr %_0.i95, ptr %121) #10, !dbg !3511
  %_231 = load ptr, ptr %r, align 8, !dbg !3512, !noundef !24
  store ptr %_231, ptr %self.dbg.spill.i126, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i126, metadata !2322, metadata !DIExpression()), !dbg !3513
  store i64 1, ptr %count.dbg.spill.i125, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i125, metadata !2325, metadata !DIExpression()), !dbg !3515
  store ptr %_231, ptr %self.dbg.spill.i177, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i177, metadata !2330, metadata !DIExpression()), !dbg !3516
  store i64 -1, ptr %count.dbg.spill.i176, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i176, metadata !2336, metadata !DIExpression()), !dbg !3518
  %_0.i178 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_231, i64 -1, !dbg !3519
  store ptr %_0.i178, ptr %_0.i127, align 8, !dbg !3520
  %122 = load ptr, ptr %_0.i127, align 8, !dbg !3521, !noundef !24
  store ptr %122, ptr %r, align 8, !dbg !3522
  br label %bb106, !dbg !3523

bb77:                                             ; preds = %bb71
  store ptr %_154, ptr %self.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i121, metadata !2322, metadata !DIExpression()), !dbg !3524
  store i64 %_158.0, ptr %count.dbg.spill.i120, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i120, metadata !2325, metadata !DIExpression()), !dbg !3526
  %_4.i124 = sub nsw i64 0, %_158.0, !dbg !3527
  store ptr %_154, ptr %self.dbg.spill.i180, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i180, metadata !2330, metadata !DIExpression()), !dbg !3528
  store i64 %_4.i124, ptr %count.dbg.spill.i179, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i179, metadata !2336, metadata !DIExpression()), !dbg !3530
  %_0.i181 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_154, i64 %_4.i124, !dbg !3531
  store ptr %_0.i181, ptr %_0.i122, align 8, !dbg !3532
  %123 = load ptr, ptr %_0.i122, align 8, !dbg !3533, !noundef !24
  store ptr %_0.i92, ptr %src.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i21, metadata !1498, metadata !DIExpression()), !dbg !3534
  store ptr %123, ptr %dst.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i20, metadata !1503, metadata !DIExpression()), !dbg !3536
  store i64 1, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !1504, metadata !DIExpression()), !dbg !3537
  store ptr %_0.i92, ptr %_6.i22, align 8, !dbg !3538
  %124 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i22, i32 0, i32 1, !dbg !3538
  store ptr %123, ptr %124, align 8, !dbg !3538
  %125 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i22, i32 0, i32 2, !dbg !3538
  store i64 1, ptr %125, align 8, !dbg !3538
  %126 = load ptr, ptr %_6.i22, align 8, !dbg !3538, !noundef !24
  %127 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i22, i32 0, i32 1, !dbg !3538
  %128 = load ptr, ptr %127, align 8, !dbg !3538, !noundef !24
  %129 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i22, i32 0, i32 2, !dbg !3538
  %130 = load i64, ptr %129, align 8, !dbg !3538, !noundef !24
  store ptr %126, ptr %src.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i46, metadata !1510, metadata !DIExpression()), !dbg !3539
  store ptr %128, ptr %dst.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i45, metadata !1514, metadata !DIExpression()), !dbg !3539
  store i64 %130, ptr %count.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i44, metadata !1515, metadata !DIExpression()), !dbg !3539
; call core::intrinsics::is_aligned_and_not_null
  %_4.i47 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %126) #10, !dbg !3541
  br i1 %_4.i47, label %bb2.i49, label %bb7.i48, !dbg !3541

bb7.i48:                                          ; preds = %bb4.i51, %bb2.i49, %bb77
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !3542
  unreachable, !dbg !3542

bb2.i49:                                          ; preds = %bb77
; call core::intrinsics::is_aligned_and_not_null
  %_5.i50 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %128) #10, !dbg !3543
  br i1 %_5.i50, label %bb4.i51, label %bb7.i48, !dbg !3543

bb4.i51:                                          ; preds = %bb2.i49
; call core::intrinsics::is_nonoverlapping
  %_7.i52 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %126, ptr %128, i64 %130) #10, !dbg !3544
  br i1 %_7.i52, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit53, label %bb7.i48, !dbg !3544

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit53: ; preds = %bb4.i51
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %123, ptr align 8 %_0.i92, i64 24, i1 false), !dbg !3545
  %_160 = load ptr, ptr %start_r, align 8, !dbg !3546, !noundef !24
  store ptr %_160, ptr %self.dbg.spill.i73, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i73, metadata !3204, metadata !DIExpression()), !dbg !3547
  store i64 1, ptr %count.dbg.spill.i72, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i72, metadata !3209, metadata !DIExpression()), !dbg !3549
  %_0.i74 = getelementptr inbounds i8, ptr %_160, i64 1, !dbg !3550
  store ptr %_0.i74, ptr %start_r, align 8, !dbg !3551
  %_164 = load ptr, ptr %r, align 8, !dbg !3552, !noundef !24
  %131 = load ptr, ptr %start_r, align 8, !dbg !3552, !noundef !24
  %_167 = load i8, ptr %131, align 1, !dbg !3552, !noundef !24
  store i8 %_167, ptr %small.dbg.spill.i208, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i208, metadata !3266, metadata !DIExpression()), !dbg !3553
  %_0.i209 = zext i8 %_167 to i64, !dbg !3555
  %132 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i209, i64 1), !dbg !3552
  %_168.0 = extractvalue { i64, i1 } %132, 0, !dbg !3552
  %_168.1 = extractvalue { i64, i1 } %132, 1, !dbg !3552
  %133 = call i1 @llvm.expect.i1(i1 %_168.1, i1 false), !dbg !3552
  br i1 %133, label %panic16, label %bb82, !dbg !3552

panic15:                                          ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_255f6db4d0c02746fb4a9b785ea6e516) #11, !dbg !3337
  unreachable, !dbg !3337

bb82:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit53
  store ptr %_164, ptr %self.dbg.spill.i116, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i116, metadata !2322, metadata !DIExpression()), !dbg !3556
  store i64 %_168.0, ptr %count.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i115, metadata !2325, metadata !DIExpression()), !dbg !3558
  %_4.i119 = sub nsw i64 0, %_168.0, !dbg !3559
  store ptr %_164, ptr %self.dbg.spill.i183, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i183, metadata !2330, metadata !DIExpression()), !dbg !3560
  store i64 %_4.i119, ptr %count.dbg.spill.i182, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i182, metadata !2336, metadata !DIExpression()), !dbg !3562
  %_0.i184 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_164, i64 %_4.i119, !dbg !3563
  store ptr %_0.i184, ptr %_0.i117, align 8, !dbg !3564
  %134 = load ptr, ptr %_0.i117, align 8, !dbg !3565, !noundef !24
  %_170 = load ptr, ptr %l, align 8, !dbg !3566, !noundef !24
  %135 = load ptr, ptr %start_l, align 8, !dbg !3566, !noundef !24
  %_172 = load i8, ptr %135, align 1, !dbg !3566, !noundef !24
  store i8 %_172, ptr %small.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i, metadata !3266, metadata !DIExpression()), !dbg !3567
  %_0.i207 = zext i8 %_172 to i64, !dbg !3569
  store ptr %_170, ptr %self.dbg.spill.i88, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i88, metadata !193, metadata !DIExpression()), !dbg !3570
  store i64 %_0.i207, ptr %count.dbg.spill.i87, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i87, metadata !199, metadata !DIExpression()), !dbg !3572
  %_0.i89 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_170, i64 %_0.i207, !dbg !3573
  store ptr %134, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1498, metadata !DIExpression()), !dbg !3574
  store ptr %_0.i89, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1503, metadata !DIExpression()), !dbg !3576
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1504, metadata !DIExpression()), !dbg !3577
  store ptr %134, ptr %_6.i, align 8, !dbg !3578
  %136 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !3578
  store ptr %_0.i89, ptr %136, align 8, !dbg !3578
  %137 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !3578
  store i64 1, ptr %137, align 8, !dbg !3578
  %138 = load ptr, ptr %_6.i, align 8, !dbg !3578, !noundef !24
  %139 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !3578
  %140 = load ptr, ptr %139, align 8, !dbg !3578, !noundef !24
  %141 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !3578
  %142 = load i64, ptr %141, align 8, !dbg !3578, !noundef !24
  store ptr %138, ptr %src.dbg.spill.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i56, metadata !1510, metadata !DIExpression()), !dbg !3579
  store ptr %140, ptr %dst.dbg.spill.i55, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i55, metadata !1514, metadata !DIExpression()), !dbg !3579
  store i64 %142, ptr %count.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i54, metadata !1515, metadata !DIExpression()), !dbg !3579
; call core::intrinsics::is_aligned_and_not_null
  %_4.i57 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %138) #10, !dbg !3581
  br i1 %_4.i57, label %bb2.i59, label %bb7.i58, !dbg !3581

bb7.i58:                                          ; preds = %bb4.i61, %bb2.i59, %bb82
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !3582
  unreachable, !dbg !3582

bb2.i59:                                          ; preds = %bb82
; call core::intrinsics::is_aligned_and_not_null
  %_5.i60 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %140) #10, !dbg !3583
  br i1 %_5.i60, label %bb4.i61, label %bb7.i58, !dbg !3583

bb4.i61:                                          ; preds = %bb2.i59
; call core::intrinsics::is_nonoverlapping
  %_7.i62 = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %138, ptr %140, i64 %142) #10, !dbg !3584
  br i1 %_7.i62, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit63, label %bb7.i58, !dbg !3584

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit63: ; preds = %bb4.i61
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0.i89, ptr align 8 %134, i64 24, i1 false), !dbg !3585
  br label %bb69, !dbg !3586

panic16:                                          ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_3fa281490ed5627b0d5acda868d81af0) #11, !dbg !3552
  unreachable, !dbg !3552

bb40:                                             ; No predecessors!
  unreachable, !dbg !3071
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h2489786a8313f546E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3587 {
start:
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3592, metadata !DIExpression()), !dbg !3594
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3593, metadata !DIExpression()), !dbg !3595
  %_3 = icmp ugt i64 1, 0, !dbg !3596
  br i1 %_3, label %bb2, label %bb3, !dbg !3596

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_9dd923649e31f13c3223b59f17507a2e) #11, !dbg !3597
  unreachable, !dbg !3597

bb2:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !1779, metadata !DIExpression()), !dbg !3598
  store ptr %r, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1786, metadata !DIExpression()), !dbg !3600
  %_0.i4 = ptrtoint ptr %r to i64, !dbg !3602
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1779, metadata !DIExpression()), !dbg !3603
  store ptr %l, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !1786, metadata !DIExpression()), !dbg !3605
  %_0.i = ptrtoint ptr %l to i64, !dbg !3607
  %_9.0 = sub i64 %_0.i4, %_0.i, !dbg !3608
  %_9.1 = icmp ult i64 %_0.i4, %_0.i, !dbg !3608
  %0 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !3608
  br i1 %0, label %panic, label %bb6, !dbg !3608

bb6:                                              ; preds = %bb2
  %_11 = icmp eq i64 1, 0, !dbg !3608
  %1 = call i1 @llvm.expect.i1(i1 %_11, i1 false), !dbg !3608
  br i1 %1, label %panic1, label %bb8, !dbg !3608

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3608
  unreachable, !dbg !3608

bb8:                                              ; preds = %bb6
  %_0 = udiv i64 %_9.0, 1, !dbg !3608
  ret i64 %_0, !dbg !3609

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3608
  unreachable, !dbg !3608
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E(ptr %l, ptr %r) unnamed_addr #1 !dbg !3610 {
start:
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3614, metadata !DIExpression()), !dbg !3616
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3615, metadata !DIExpression()), !dbg !3617
  %_3 = icmp ugt i64 24, 0, !dbg !3618
  br i1 %_3, label %bb2, label %bb3, !dbg !3618

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_9dd923649e31f13c3223b59f17507a2e) #11, !dbg !3619
  unreachable, !dbg !3619

bb2:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3620, metadata !DIExpression()), !dbg !3625
  store ptr %r, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1203, metadata !DIExpression()), !dbg !3627
  %_0.i4 = ptrtoint ptr %r to i64, !dbg !3629
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3620, metadata !DIExpression()), !dbg !3630
  store ptr %l, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !1203, metadata !DIExpression()), !dbg !3632
  %_0.i = ptrtoint ptr %l to i64, !dbg !3634
  %_9.0 = sub i64 %_0.i4, %_0.i, !dbg !3635
  %_9.1 = icmp ult i64 %_0.i4, %_0.i, !dbg !3635
  %0 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !3635
  br i1 %0, label %panic, label %bb6, !dbg !3635

bb6:                                              ; preds = %bb2
  %_11 = icmp eq i64 24, 0, !dbg !3635
  %1 = call i1 @llvm.expect.i1(i1 %_11, i1 false), !dbg !3635
  br i1 %1, label %panic1, label %bb8, !dbg !3635

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3635
  unreachable, !dbg !3635

bb8:                                              ; preds = %bb6
  %_0 = udiv i64 %_9.0, 24, !dbg !3635
  ret i64 %_0, !dbg !3636

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.2, i64 25, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3635
  unreachable, !dbg !3635
}

; core::slice::sort::partial_insertion_sort
; Function Attrs: cold noredzone nounwind
define zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17h123b4d3bb587d2bdE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #2 !dbg !3637 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_44 = alloca i64, align 8
  %_37 = alloca i64, align 8
  %_15 = alloca { ptr, ptr }, align 8
  %_9 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %i = alloca i64, align 8
  %_0 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3641, metadata !DIExpression()), !dbg !3649
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3642, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.declare(metadata ptr %i, metadata !3645, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3647, metadata !DIExpression()), !dbg !3652
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3653
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3643, metadata !DIExpression()), !dbg !3654
  store i64 1, ptr %i, align 8, !dbg !3655
  store i64 0, ptr %_7, align 8, !dbg !3656
  %2 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3656
  store i64 5, ptr %2, align 8, !dbg !3656
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3656
  %4 = load i64, ptr %3, align 8, !dbg !3656, !noundef !24
  %5 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3656
  %6 = load i64, ptr %5, align 8, !dbg !3656, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %7 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9a58c267ff3ccf88E"(i64 %4, i64 %6) #10, !dbg !3656
  %_6.0 = extractvalue { i64, i64 } %7, 0, !dbg !3656
  %_6.1 = extractvalue { i64, i64 } %7, 1, !dbg !3656
  %8 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3656
  store i64 %_6.0, ptr %8, align 8, !dbg !3656
  %9 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3656
  store i64 %_6.1, ptr %9, align 8, !dbg !3656
  br label %bb2, !dbg !3657

bb2:                                              ; preds = %bb23, %bb19, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %10 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30436e101c7f44ddE"(ptr align 8 %iter) #10, !dbg !3652
  store { i64, i64 } %10, ptr %_9, align 8, !dbg !3652
  %_11 = load i64, ptr %_9, align 8, !dbg !3652, !range !975, !noundef !24
  %11 = icmp eq i64 %_11, 0, !dbg !3652
  br i1 %11, label %bb5, label %bb6, !dbg !3652

bb5:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !3658
  br label %bb26, !dbg !3659

bb6:                                              ; preds = %bb13, %bb2
  %_13 = load i64, ptr %i, align 8, !dbg !3660, !noundef !24
  %_12 = icmp ult i64 %_13, %v.1, !dbg !3660
  br i1 %_12, label %bb7, label %bb14, !dbg !3660

bb26:                                             ; preds = %bb15, %bb17, %bb5
  %12 = load i8, ptr %_0, align 1, !dbg !3659, !range !559, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !3659
  ret i1 %13, !dbg !3659

bb14:                                             ; preds = %bb9, %bb6
  %_26 = load i64, ptr %i, align 8, !dbg !3661, !noundef !24
  %_25 = icmp eq i64 %_26, %v.1, !dbg !3661
  br i1 %_25, label %bb15, label %bb16, !dbg !3661

bb7:                                              ; preds = %bb6
  %_18 = load i64, ptr %i, align 8, !dbg !3662, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_16 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %v.0, i64 %v.1, i64 %_18) #10, !dbg !3663
  %_22 = load i64, ptr %i, align 8, !dbg !3664, !noundef !24
  %_23.0 = sub i64 %_22, 1, !dbg !3664
  %_23.1 = icmp ult i64 %_22, 1, !dbg !3664
  %14 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false), !dbg !3664
  br i1 %14, label %panic, label %bb9, !dbg !3664

bb9:                                              ; preds = %bb7
; call core::slice::<impl [T]>::get_unchecked
  %_19 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %v.0, i64 %v.1, i64 %_23.0) #10, !dbg !3665
  store ptr %_16, ptr %_15, align 8, !dbg !3666
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 1, !dbg !3666
  store ptr %_19, ptr %15, align 8, !dbg !3666
  %16 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 0, !dbg !3666
  %17 = load ptr, ptr %16, align 8, !dbg !3666, !nonnull !24, !align !417, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr }, ptr %_15, i32 0, i32 1, !dbg !3666
  %19 = load ptr, ptr %18, align 8, !dbg !3666, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_14 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %17, ptr align 8 %19) #10, !dbg !3666
  br i1 %_14, label %bb14, label %bb12, !dbg !3666

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_bd81c17235b1444753a1935a813b485f) #11, !dbg !3664
  unreachable, !dbg !3664

bb12:                                             ; preds = %bb9
  %20 = load i64, ptr %i, align 8, !dbg !3667, !noundef !24
  %21 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 1), !dbg !3667
  %_24.0 = extractvalue { i64, i1 } %21, 0, !dbg !3667
  %_24.1 = extractvalue { i64, i1 } %21, 1, !dbg !3667
  %22 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !3667
  br i1 %22, label %panic1, label %bb13, !dbg !3667

bb13:                                             ; preds = %bb12
  store i64 %_24.0, ptr %i, align 8, !dbg !3667
  br label %bb6, !dbg !3668

panic1:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_e743259f65f79dce5fdf7e439c96cb01) #11, !dbg !3667
  unreachable, !dbg !3667

bb16:                                             ; preds = %bb14
  %_27 = icmp ult i64 %v.1, 50, !dbg !3669
  br i1 %_27, label %bb17, label %bb18, !dbg !3669

bb15:                                             ; preds = %bb14
  store i8 1, ptr %_0, align 1, !dbg !3670
  br label %bb26, !dbg !3671

bb18:                                             ; preds = %bb16
  %_30 = load i64, ptr %i, align 8, !dbg !3674, !noundef !24
  %_31.0 = sub i64 %_30, 1, !dbg !3674
  %_31.1 = icmp ult i64 %_30, 1, !dbg !3674
  %23 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !3674
  br i1 %23, label %panic2, label %bb19, !dbg !3674

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_0, align 1, !dbg !3675
  br label %bb26, !dbg !3671

bb19:                                             ; preds = %bb18
  %_32 = load i64, ptr %i, align 8, !dbg !3676, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h992bdd3442f31a9fE"(ptr align 8 %v.0, i64 %v.1, i64 %_31.0, i64 %_32, ptr align 8 @alloc_0cd04c6390f55d83a74a72e18ad99930) #10, !dbg !3677
  %_34 = load i64, ptr %i, align 8, !dbg !3678, !noundef !24
  %_33 = icmp uge i64 %_34, 2, !dbg !3678
  br i1 %_33, label %bb21, label %bb2, !dbg !3678

panic2:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_2300fc4e056106188d3f21c349fb8e76) #11, !dbg !3674
  unreachable, !dbg !3674

bb21:                                             ; preds = %bb19
  %_38 = load i64, ptr %i, align 8, !dbg !3679, !noundef !24
  store i64 %_38, ptr %_37, align 8, !dbg !3680
  %24 = load i64, ptr %_37, align 8, !dbg !3681, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %25 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfb51a5192ad8a97dE"(ptr align 8 %v.0, i64 %v.1, i64 %24, ptr align 8 @alloc_6375fc5b40a3eb23357cbfc852cbad46) #10, !dbg !3681
  %_36.0 = extractvalue { ptr, i64 } %25, 0, !dbg !3681
  %_36.1 = extractvalue { ptr, i64 } %25, 1, !dbg !3681
  %_40 = load i64, ptr %i, align 8, !dbg !3682, !noundef !24
  %_41.0 = sub i64 %_40, 1, !dbg !3682
  %_41.1 = icmp ult i64 %_40, 1, !dbg !3682
  %26 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !3682
  br i1 %26, label %panic3, label %bb23, !dbg !3682

bb23:                                             ; preds = %bb21
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17ha93585d6555467a2E(ptr align 8 %_36.0, i64 %_36.1, i64 %_41.0, ptr align 8 %is_less) #10, !dbg !3683
  %_45 = load i64, ptr %i, align 8, !dbg !3684, !noundef !24
  store i64 %_45, ptr %_44, align 8, !dbg !3685
  %27 = load i64, ptr %_44, align 8, !dbg !3686, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %28 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfb51a5192ad8a97dE"(ptr align 8 %v.0, i64 %v.1, i64 %27, ptr align 8 @alloc_f9be158d94973e224ba789cadbf1dedd) #10, !dbg !3686
  %_43.0 = extractvalue { ptr, i64 } %28, 0, !dbg !3686
  %_43.1 = extractvalue { ptr, i64 } %28, 1, !dbg !3686
; call core::slice::sort::insertion_sort_shift_right
  call void @_ZN4core5slice4sort26insertion_sort_shift_right17hdc7f2629abfa3366E(ptr align 8 %_43.0, i64 %_43.1, i64 1, ptr align 8 %is_less) #10, !dbg !3687
  br label %bb2, !dbg !3687

panic3:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_51848abd31708fd9bd4e978ad4e2fdf6) #11, !dbg !3682
  unreachable, !dbg !3682

bb4:                                              ; No predecessors!
  unreachable, !dbg !3652
}

; core::slice::sort::insertion_sort_shift_left
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort25insertion_sort_shift_left17ha93585d6555467a2E(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3688 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_17 = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_9 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3692, metadata !DIExpression()), !dbg !3701
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3693, metadata !DIExpression()), !dbg !3702
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3694, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3697, metadata !DIExpression()), !dbg !3704
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3705
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3695, metadata !DIExpression()), !dbg !3706
  %2 = icmp eq i64 %offset, 0, !dbg !3707
  br i1 %2, label %bb3, label %bb1, !dbg !3707

bb3:                                              ; preds = %bb1, %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_5429279aa16fa0cdfc25e6fc8726a06a, i64 46, ptr align 8 @alloc_99bb945c879f5888798b28005543a365) #11, !dbg !3708
  unreachable, !dbg !3708

bb1:                                              ; preds = %start
  %_6 = icmp ule i64 %offset, %v.1, !dbg !3709
  br i1 %_6, label %bb2, label %bb3, !dbg !3709

bb2:                                              ; preds = %bb1
  store i64 %offset, ptr %_9, align 8, !dbg !3710
  %3 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 1, !dbg !3710
  store i64 %v.1, ptr %3, align 8, !dbg !3710
  %4 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 0, !dbg !3710
  %5 = load i64, ptr %4, align 8, !dbg !3710, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 1, !dbg !3710
  %7 = load i64, ptr %6, align 8, !dbg !3710, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9a58c267ff3ccf88E"(i64 %5, i64 %7) #10, !dbg !3710
  %_8.0 = extractvalue { i64, i64 } %8, 0, !dbg !3710
  %_8.1 = extractvalue { i64, i64 } %8, 1, !dbg !3710
  %9 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3710
  store i64 %_8.0, ptr %9, align 8, !dbg !3710
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3710
  store i64 %_8.1, ptr %10, align 8, !dbg !3710
  br label %bb5, !dbg !3711

bb5:                                              ; preds = %bb7, %bb2
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %11 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30436e101c7f44ddE"(ptr align 8 %iter) #10, !dbg !3704
  store { i64, i64 } %11, ptr %_11, align 8, !dbg !3704
  %_13 = load i64, ptr %_11, align 8, !dbg !3704, !range !975, !noundef !24
  %12 = icmp eq i64 %_13, 0, !dbg !3704
  br i1 %12, label %bb9, label %bb7, !dbg !3704

bb9:                                              ; preds = %bb5
  ret void, !dbg !3712

bb7:                                              ; preds = %bb5
  %13 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3713
  %i = load i64, ptr %13, align 8, !dbg !3713, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3713
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3699, metadata !DIExpression()), !dbg !3714
  store i64 %i, ptr %_17, align 8, !dbg !3715
  %14 = load i64, ptr %_17, align 8, !dbg !3716, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %15 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17ha790b300f578cd28E"(ptr align 8 %v.0, i64 %v.1, i64 %14, ptr align 8 @alloc_84dd4b5e4fcf2936e5d9a464f68d21a0) #10, !dbg !3716
  %_16.0 = extractvalue { ptr, i64 } %15, 0, !dbg !3716
  %_16.1 = extractvalue { ptr, i64 } %15, 1, !dbg !3716
; call core::slice::sort::insert_tail
  call void @_ZN4core5slice4sort11insert_tail17hf32a3c56e381204eE(ptr align 8 %_16.0, i64 %_16.1, ptr align 8 %is_less) #10, !dbg !3717
  br label %bb5, !dbg !3717

bb8:                                              ; No predecessors!
  unreachable, !dbg !3704
}

; core::slice::sort::insertion_sort_shift_right
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort26insertion_sort_shift_right17hdc7f2629abfa3366E(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3718 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3720, metadata !DIExpression()), !dbg !3729
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3721, metadata !DIExpression()), !dbg !3730
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3722, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3725, metadata !DIExpression()), !dbg !3732
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3733
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3723, metadata !DIExpression()), !dbg !3734
  %2 = icmp eq i64 %offset, 0, !dbg !3735
  br i1 %2, label %bb4, label %bb1, !dbg !3735

bb4:                                              ; preds = %bb2, %bb1, %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_6973cb22fd5a814eff7046b5b9169c77, i64 58, ptr align 8 @alloc_15caf4948137b9f7be8cedfe4929bfd3) #11, !dbg !3736
  unreachable, !dbg !3736

bb1:                                              ; preds = %start
  %_6 = icmp ule i64 %offset, %v.1, !dbg !3737
  br i1 %_6, label %bb2, label %bb4, !dbg !3737

bb2:                                              ; preds = %bb1
  %_7 = icmp uge i64 %v.1, 2, !dbg !3738
  br i1 %_7, label %bb3, label %bb4, !dbg !3738

bb3:                                              ; preds = %bb2
  store i64 0, ptr %_11, align 8, !dbg !3739
  %3 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3739
  store i64 %offset, ptr %3, align 8, !dbg !3739
  %4 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 0, !dbg !3739
  %5 = load i64, ptr %4, align 8, !dbg !3739, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3739
  %7 = load i64, ptr %6, align 8, !dbg !3739, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %8 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hbd0ef64810c3739bE(i64 %5, i64 %7) #10, !dbg !3739
  %_10.0 = extractvalue { i64, i64 } %8, 0, !dbg !3739
  %_10.1 = extractvalue { i64, i64 } %8, 1, !dbg !3739
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdd9f5a1a0d3c7e32E"(i64 %_10.0, i64 %_10.1) #10, !dbg !3739
  %_9.0 = extractvalue { i64, i64 } %9, 0, !dbg !3739
  %_9.1 = extractvalue { i64, i64 } %9, 1, !dbg !3739
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3739
  store i64 %_9.0, ptr %10, align 8, !dbg !3739
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3739
  store i64 %_9.1, ptr %11, align 8, !dbg !3739
  br label %bb7, !dbg !3740

bb7:                                              ; preds = %bb9, %bb3
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4fe22b5b7081441cE"(ptr align 8 %iter) #10, !dbg !3732
  store { i64, i64 } %12, ptr %_13, align 8, !dbg !3732
  %_15 = load i64, ptr %_13, align 8, !dbg !3732, !range !975, !noundef !24
  %13 = icmp eq i64 %_15, 0, !dbg !3732
  br i1 %13, label %bb11, label %bb9, !dbg !3732

bb11:                                             ; preds = %bb7
  ret void, !dbg !3741

bb9:                                              ; preds = %bb7
  %14 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3742
  %i = load i64, ptr %14, align 8, !dbg !3742, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3742
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3727, metadata !DIExpression()), !dbg !3743
  store i64 %i, ptr %_19, align 8, !dbg !3744
  %15 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !3744
  store i64 %v.1, ptr %15, align 8, !dbg !3744
  %16 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !3745
  %17 = load i64, ptr %16, align 8, !dbg !3745, !noundef !24
  %18 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !3745
  %19 = load i64, ptr %18, align 8, !dbg !3745, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %20 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h85a2628b90dfe8e1E"(ptr align 8 %v.0, i64 %v.1, i64 %17, i64 %19, ptr align 8 @alloc_88ab3158e927e7ca4409979d22ea4cb2) #10, !dbg !3745
  %_18.0 = extractvalue { ptr, i64 } %20, 0, !dbg !3745
  %_18.1 = extractvalue { ptr, i64 } %20, 1, !dbg !3745
; call core::slice::sort::insert_head
  call void @_ZN4core5slice4sort11insert_head17h6f093c6415355f96E(ptr align 8 %_18.0, i64 %_18.1, ptr align 8 %is_less) #10, !dbg !3746
  br label %bb7, !dbg !3746

bb10:                                             ; No predecessors!
  unreachable, !dbg !3732
}

; core::slice::sort::recurse
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort7recurse17h03a05f5c5f118806E(ptr align 8 %0, i64 %1, ptr align 8 %is_less, ptr align 8 %2, i32 %3) unnamed_addr #1 !dbg !3747 {
start:
  %pivot.dbg.spill9 = alloca ptr, align 8
  %right.dbg.spill7 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill4 = alloca { ptr, i64 }, align 8
  %right.dbg.spill = alloca { ptr, i64 }, align 8
  %left.dbg.spill = alloca { ptr, i64 }, align 8
  %was_p.dbg.spill = alloca i8, align 1
  %mid.dbg.spill2 = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %p.dbg.spill = alloca ptr, align 8
  %likely_sorted.dbg.spill = alloca i8, align 1
  %pivot.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %_70 = alloca ptr, align 8
  %_68 = alloca ptr, align 8
  %_55 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_51 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_39 = alloca i64, align 8
  %_31 = alloca { ptr, ptr }, align 8
  %was_partitioned = alloca i8, align 1
  %was_balanced = alloca i8, align 1
  %limit = alloca i32, align 4
  %pred = alloca ptr, align 8
  %v = alloca { ptr, i64 }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %pred, align 8
  store i32 %3, ptr %limit, align 4
  call void @llvm.dbg.declare(metadata ptr %v, metadata !3762, metadata !DIExpression()), !dbg !3790
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3763, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.declare(metadata ptr %pred, metadata !3764, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.declare(metadata ptr %limit, metadata !3765, metadata !DIExpression()), !dbg !3793
  call void @llvm.dbg.declare(metadata ptr %was_balanced, metadata !3766, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.declare(metadata ptr %was_partitioned, metadata !3768, metadata !DIExpression()), !dbg !3795
  store i8 1, ptr %was_balanced, align 1, !dbg !3796
  store i8 1, ptr %was_partitioned, align 1, !dbg !3797
  br label %bb1, !dbg !3798

bb1:                                              ; preds = %bb31, %bb33, %bb20, %start
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3799
  %_8.0 = load ptr, ptr %6, align 8, !dbg !3799, !nonnull !24, !align !417, !noundef !24
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3799
  %_8.1 = load i64, ptr %7, align 8, !dbg !3799, !noundef !24
  store i64 %_8.1, ptr %len.dbg.spill, align 8, !dbg !3799
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3770, metadata !DIExpression()), !dbg !3800
  %_9 = icmp ule i64 %_8.1, 20, !dbg !3801
  br i1 %_9, label %bb2, label %bb4, !dbg !3801

bb4:                                              ; preds = %bb1
  %_13 = load i32, ptr %limit, align 4, !dbg !3802, !noundef !24
  %8 = icmp eq i32 %_13, 0, !dbg !3802
  br i1 %8, label %bb5, label %bb6, !dbg !3802

bb2:                                              ; preds = %bb1
  %_10 = icmp uge i64 %_8.1, 2, !dbg !3803
  br i1 %_10, label %bb3, label %bb35, !dbg !3803

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3804
  %_15.0 = load ptr, ptr %9, align 8, !dbg !3804, !nonnull !24, !align !417, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3804
  %_15.1 = load i64, ptr %10, align 8, !dbg !3804, !noundef !24
; call core::slice::sort::heapsort
  call void @_ZN4core5slice4sort8heapsort17h6f120594df3add9aE(ptr align 8 %_15.0, i64 %_15.1, ptr align 8 %is_less) #10, !dbg !3805
  br label %bb35, !dbg !3805

bb6:                                              ; preds = %bb4
  %11 = load i8, ptr %was_balanced, align 1, !dbg !3806, !range !559, !noundef !24
  %_16 = trunc i8 %11 to i1, !dbg !3806
  br i1 %_16, label %bb10, label %bb7, !dbg !3806

bb35:                                             ; preds = %bb3, %bb2, %bb14, %bb5
  ret void, !dbg !3807

bb7:                                              ; preds = %bb6
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3808
  %_18.0 = load ptr, ptr %12, align 8, !dbg !3808, !nonnull !24, !align !417, !noundef !24
  %13 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3808
  %_18.1 = load i64, ptr %13, align 8, !dbg !3808, !noundef !24
; call core::slice::sort::break_patterns
  call void @_ZN4core5slice4sort14break_patterns17h264fc3afee5c2e5aE(ptr align 8 %_18.0, i64 %_18.1) #10, !dbg !3809
  %14 = load i32, ptr %limit, align 4, !dbg !3810, !noundef !24
  %_19.0 = sub i32 %14, 1, !dbg !3810
  %_19.1 = icmp ult i32 %14, 1, !dbg !3810
  %15 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !3810
  br i1 %15, label %panic, label %bb9, !dbg !3810

bb10:                                             ; preds = %bb9, %bb6
  %16 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3811
  %_23.0 = load ptr, ptr %16, align 8, !dbg !3811, !nonnull !24, !align !417, !noundef !24
  %17 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3811
  %_23.1 = load i64, ptr %17, align 8, !dbg !3811, !noundef !24
; call core::slice::sort::choose_pivot
  %18 = call { i64, i8 } @_ZN4core5slice4sort12choose_pivot17h810d14f53abfcfceE(ptr align 8 %_23.0, i64 %_23.1, ptr align 8 %is_less) #10, !dbg !3812
  %_22.0 = extractvalue { i64, i8 } %18, 0, !dbg !3812
  %19 = extractvalue { i64, i8 } %18, 1, !dbg !3812
  %_22.1 = trunc i8 %19 to i1, !dbg !3812
  store i64 %_22.0, ptr %pivot.dbg.spill, align 8, !dbg !3813
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3772, metadata !DIExpression()), !dbg !3814
  %20 = zext i1 %_22.1 to i8, !dbg !3815
  store i8 %20, ptr %likely_sorted.dbg.spill, align 1, !dbg !3815
  call void @llvm.dbg.declare(metadata ptr %likely_sorted.dbg.spill, metadata !3774, metadata !DIExpression()), !dbg !3816
  %21 = load i8, ptr %was_balanced, align 1, !dbg !3817, !range !559, !noundef !24
  %_24 = trunc i8 %21 to i1, !dbg !3817
  br i1 %_24, label %bb12, label %bb16, !dbg !3817

bb9:                                              ; preds = %bb7
  store i32 %_19.0, ptr %limit, align 4, !dbg !3810
  br label %bb10, !dbg !3818

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_4dd2b64e82acc619552f668d34f29c8f) #11, !dbg !3810
  unreachable, !dbg !3810

bb16:                                             ; preds = %bb14, %bb13, %bb12, %bb10
  %22 = load ptr, ptr %pred, align 8, !dbg !3819, !noundef !24
  %23 = ptrtoint ptr %22 to i64, !dbg !3819
  %24 = icmp eq i64 %23, 0, !dbg !3819
  %_28 = select i1 %24, i64 0, i64 1, !dbg !3819
  %25 = icmp eq i64 %_28, 1, !dbg !3819
  br i1 %25, label %bb17, label %bb23, !dbg !3819

bb12:                                             ; preds = %bb10
  %26 = load i8, ptr %was_partitioned, align 1, !dbg !3820, !range !559, !noundef !24
  %_25 = trunc i8 %26 to i1, !dbg !3820
  br i1 %_25, label %bb13, label %bb16, !dbg !3820

bb13:                                             ; preds = %bb12
  br i1 %_22.1, label %bb14, label %bb16, !dbg !3821

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3822
  %_27.0 = load ptr, ptr %27, align 8, !dbg !3822, !nonnull !24, !align !417, !noundef !24
  %28 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3822
  %_27.1 = load i64, ptr %28, align 8, !dbg !3822, !noundef !24
; call core::slice::sort::partial_insertion_sort
  %_26 = call zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17h123b4d3bb587d2bdE(ptr align 8 %_27.0, i64 %_27.1, ptr align 8 %is_less) #10, !dbg !3823
  br i1 %_26, label %bb35, label %bb16, !dbg !3823

bb17:                                             ; preds = %bb16
  %p = load ptr, ptr %pred, align 8, !dbg !3824, !nonnull !24, !align !417, !noundef !24
  store ptr %p, ptr %p.dbg.spill, align 8, !dbg !3824
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !3775, metadata !DIExpression()), !dbg !3824
  %29 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3825
  %30 = load ptr, ptr %29, align 8, !dbg !3825, !nonnull !24, !align !417, !noundef !24
  %31 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3825
  %_33 = load i64, ptr %31, align 8, !dbg !3825, !noundef !24
  %_34 = icmp ult i64 %_22.0, %_33, !dbg !3825
  %32 = call i1 @llvm.expect.i1(i1 %_34, i1 true), !dbg !3825
  br i1 %32, label %bb18, label %panic1, !dbg !3825

bb23:                                             ; preds = %bb18, %bb16
  %33 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3826
  %_43.0 = load ptr, ptr %33, align 8, !dbg !3826, !nonnull !24, !align !417, !noundef !24
  %34 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3826
  %_43.1 = load i64, ptr %34, align 8, !dbg !3826, !noundef !24
; call core::slice::sort::partition
  %35 = call { i64, i8 } @_ZN4core5slice4sort9partition17hec306af8b214dcd6E(ptr align 8 %_43.0, i64 %_43.1, i64 %_22.0, ptr align 8 %is_less) #10, !dbg !3827
  %_42.0 = extractvalue { i64, i8 } %35, 0, !dbg !3827
  %36 = extractvalue { i64, i8 } %35, 1, !dbg !3827
  %_42.1 = trunc i8 %36 to i1, !dbg !3827
  store i64 %_42.0, ptr %mid.dbg.spill2, align 8, !dbg !3828
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill2, metadata !3779, metadata !DIExpression()), !dbg !3829
  %37 = zext i1 %_42.1 to i8, !dbg !3830
  store i8 %37, ptr %was_p.dbg.spill, align 1, !dbg !3830
  call void @llvm.dbg.declare(metadata ptr %was_p.dbg.spill, metadata !3781, metadata !DIExpression()), !dbg !3831
  %_46.0 = sub i64 %_8.1, %_42.0, !dbg !3832
  %_46.1 = icmp ult i64 %_8.1, %_42.0, !dbg !3832
  %38 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3832
  br i1 %38, label %panic3, label %bb25, !dbg !3832

bb18:                                             ; preds = %bb17
  %39 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3833
  %40 = load ptr, ptr %39, align 8, !dbg !3833, !nonnull !24, !align !417, !noundef !24
  %41 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3833
  %42 = load i64, ptr %41, align 8, !dbg !3833, !noundef !24
  %_32 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %40, i64 0, i64 %_22.0, !dbg !3833
  store ptr %p, ptr %_31, align 8, !dbg !3834
  %43 = getelementptr inbounds { ptr, ptr }, ptr %_31, i32 0, i32 1, !dbg !3834
  store ptr %_32, ptr %43, align 8, !dbg !3834
  %44 = getelementptr inbounds { ptr, ptr }, ptr %_31, i32 0, i32 0, !dbg !3834
  %45 = load ptr, ptr %44, align 8, !dbg !3834, !nonnull !24, !align !417, !noundef !24
  %46 = getelementptr inbounds { ptr, ptr }, ptr %_31, i32 0, i32 1, !dbg !3834
  %47 = load ptr, ptr %46, align 8, !dbg !3834, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_30 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %45, ptr align 8 %47) #10, !dbg !3834
  br i1 %_30, label %bb23, label %bb20, !dbg !3834

panic1:                                           ; preds = %bb17
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %_22.0, i64 %_33, ptr align 8 @alloc_19f49682e04665ec7ede3a6ef54d1aee) #11, !dbg !3825
  unreachable, !dbg !3825

bb20:                                             ; preds = %bb18
  %48 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3835
  %_36.0 = load ptr, ptr %48, align 8, !dbg !3835, !nonnull !24, !align !417, !noundef !24
  %49 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3835
  %_36.1 = load i64, ptr %49, align 8, !dbg !3835, !noundef !24
; call core::slice::sort::partition_equal
  %mid = call i64 @_ZN4core5slice4sort15partition_equal17h97707e80885f28baE(ptr align 8 %_36.0, i64 %_36.1, i64 %_22.0, ptr align 8 %is_less) #10, !dbg !3836
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3836
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3777, metadata !DIExpression()), !dbg !3837
  %50 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3838
  %_38.0 = load ptr, ptr %50, align 8, !dbg !3838, !nonnull !24, !align !417, !noundef !24
  %51 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3838
  %_38.1 = load i64, ptr %51, align 8, !dbg !3838, !noundef !24
  store i64 %mid, ptr %_39, align 8, !dbg !3839
  %52 = load i64, ptr %_39, align 8, !dbg !3840, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %53 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h29a639d44f5cb99dE"(ptr align 8 %_38.0, i64 %_38.1, i64 %52, ptr align 8 @alloc_1b5a7ab33f31d7848ce2eba75dc6a5bc) #10, !dbg !3840
  %_37.0 = extractvalue { ptr, i64 } %53, 0, !dbg !3840
  %_37.1 = extractvalue { ptr, i64 } %53, 1, !dbg !3840
  %54 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3841
  store ptr %_37.0, ptr %54, align 8, !dbg !3841
  %55 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3841
  store i64 %_37.1, ptr %55, align 8, !dbg !3841
  br label %bb1, !dbg !3842

bb25:                                             ; preds = %bb23
; call core::cmp::min
  %_44 = call i64 @_ZN4core3cmp3min17h8501c1cbcfddf070E(i64 %_42.0, i64 %_46.0) #10, !dbg !3844
  %_47 = udiv i64 %_8.1, 8, !dbg !3845
  %56 = icmp uge i64 %_44, %_47, !dbg !3846
  %57 = zext i1 %56 to i8, !dbg !3846
  store i8 %57, ptr %was_balanced, align 1, !dbg !3846
  %58 = zext i1 %_42.1 to i8, !dbg !3847
  store i8 %58, ptr %was_partitioned, align 1, !dbg !3847
  %59 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3848
  %_52.0 = load ptr, ptr %59, align 8, !dbg !3848, !nonnull !24, !align !417, !noundef !24
  %60 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3848
  %_52.1 = load i64, ptr %60, align 8, !dbg !3848, !noundef !24
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h1643ef83df19a1adE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_51, ptr align 8 %_52.0, i64 %_52.1, i64 %_42.0, ptr align 8 @alloc_0608174a0bc0666a7dcff4551d86b257) #10, !dbg !3848
  %61 = getelementptr inbounds { ptr, i64 }, ptr %_51, i32 0, i32 0, !dbg !3849
  %left.0 = load ptr, ptr %61, align 8, !dbg !3849, !nonnull !24, !align !417, !noundef !24
  %62 = getelementptr inbounds { ptr, i64 }, ptr %_51, i32 0, i32 1, !dbg !3849
  %left.1 = load i64, ptr %62, align 8, !dbg !3849, !noundef !24
  %63 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 0, !dbg !3849
  store ptr %left.0, ptr %63, align 8, !dbg !3849
  %64 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 1, !dbg !3849
  store i64 %left.1, ptr %64, align 8, !dbg !3849
  call void @llvm.dbg.declare(metadata ptr %left.dbg.spill, metadata !3782, metadata !DIExpression()), !dbg !3850
  %65 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_51, i32 0, i32 1, !dbg !3851
  %66 = getelementptr inbounds { ptr, i64 }, ptr %65, i32 0, i32 0, !dbg !3851
  %right.0 = load ptr, ptr %66, align 8, !dbg !3851, !nonnull !24, !align !417, !noundef !24
  %67 = getelementptr inbounds { ptr, i64 }, ptr %65, i32 0, i32 1, !dbg !3851
  %right.1 = load i64, ptr %67, align 8, !dbg !3851, !noundef !24
  %68 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 0, !dbg !3851
  store ptr %right.0, ptr %68, align 8, !dbg !3851
  %69 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 1, !dbg !3851
  store i64 %right.1, ptr %69, align 8, !dbg !3851
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill, metadata !3784, metadata !DIExpression()), !dbg !3852
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h1643ef83df19a1adE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_55, ptr align 8 %right.0, i64 %right.1, i64 1, ptr align 8 @alloc_650641bd47e89fd13d5dee5a5608b8cc) #10, !dbg !3853
  %70 = getelementptr inbounds { ptr, i64 }, ptr %_55, i32 0, i32 0, !dbg !3854
  %pivot.0 = load ptr, ptr %70, align 8, !dbg !3854, !nonnull !24, !align !417, !noundef !24
  %71 = getelementptr inbounds { ptr, i64 }, ptr %_55, i32 0, i32 1, !dbg !3854
  %pivot.1 = load i64, ptr %71, align 8, !dbg !3854, !noundef !24
  %72 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 0, !dbg !3854
  store ptr %pivot.0, ptr %72, align 8, !dbg !3854
  %73 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 1, !dbg !3854
  store i64 %pivot.1, ptr %73, align 8, !dbg !3854
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill4, metadata !3785, metadata !DIExpression()), !dbg !3855
  %74 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_55, i32 0, i32 1, !dbg !3856
  %75 = getelementptr inbounds { ptr, i64 }, ptr %74, i32 0, i32 0, !dbg !3856
  %right.05 = load ptr, ptr %75, align 8, !dbg !3856, !nonnull !24, !align !417, !noundef !24
  %76 = getelementptr inbounds { ptr, i64 }, ptr %74, i32 0, i32 1, !dbg !3856
  %right.16 = load i64, ptr %76, align 8, !dbg !3856, !noundef !24
  %77 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 0, !dbg !3856
  store ptr %right.05, ptr %77, align 8, !dbg !3856
  %78 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 1, !dbg !3856
  store i64 %right.16, ptr %78, align 8, !dbg !3856
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill7, metadata !3787, metadata !DIExpression()), !dbg !3857
  %_59 = icmp ult i64 0, %pivot.1, !dbg !3858
  %79 = call i1 @llvm.expect.i1(i1 %_59, i1 true), !dbg !3858
  br i1 %79, label %bb30, label %panic8, !dbg !3858

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_a32e4fb3c0f6b64d94c2eaa96e2bfada) #11, !dbg !3832
  unreachable, !dbg !3832

bb30:                                             ; preds = %bb25
  %pivot = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3859
  store ptr %pivot, ptr %pivot.dbg.spill9, align 8, !dbg !3859
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill9, metadata !3788, metadata !DIExpression()), !dbg !3860
  %_60 = icmp ult i64 %left.1, %right.16, !dbg !3861
  br i1 %_60, label %bb31, label %bb33, !dbg !3861

panic8:                                           ; preds = %bb25
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 0, i64 %pivot.1, ptr align 8 @alloc_cf3cd18be6459960034efdfa6914a618) #11, !dbg !3858
  unreachable, !dbg !3858

bb33:                                             ; preds = %bb30
  store ptr %pivot, ptr %_70, align 8, !dbg !3862
  %_71 = load i32, ptr %limit, align 4, !dbg !3863, !noundef !24
  %80 = load ptr, ptr %_70, align 8, !dbg !3864, !align !417, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h03a05f5c5f118806E(ptr align 8 %right.05, i64 %right.16, ptr align 8 %is_less, ptr align 8 %80, i32 %_71) #10, !dbg !3864
  %81 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3865
  store ptr %left.0, ptr %81, align 8, !dbg !3865
  %82 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3865
  store i64 %left.1, ptr %82, align 8, !dbg !3865
  br label %bb1, !dbg !3866

bb31:                                             ; preds = %bb30
  %_66 = load ptr, ptr %pred, align 8, !dbg !3867, !align !417, !noundef !24
  %_67 = load i32, ptr %limit, align 4, !dbg !3868, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h03a05f5c5f118806E(ptr align 8 %left.0, i64 %left.1, ptr align 8 %is_less, ptr align 8 %_66, i32 %_67) #10, !dbg !3869
  %83 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3870
  store ptr %right.05, ptr %83, align 8, !dbg !3870
  %84 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3870
  store i64 %right.16, ptr %84, align 8, !dbg !3870
  store ptr %pivot, ptr %_68, align 8, !dbg !3871
  %85 = load ptr, ptr %_68, align 8, !dbg !3872, !align !417, !noundef !24
  store ptr %85, ptr %pred, align 8, !dbg !3872
  br label %bb1, !dbg !3866

bb3:                                              ; preds = %bb2
  %86 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3873
  %_12.0 = load ptr, ptr %86, align 8, !dbg !3873, !nonnull !24, !align !417, !noundef !24
  %87 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3873
  %_12.1 = load i64, ptr %87, align 8, !dbg !3873, !noundef !24
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17ha93585d6555467a2E(ptr align 8 %_12.0, i64 %_12.1, i64 1, ptr align 8 %is_less) #10, !dbg !3874
  br label %bb35, !dbg !3874
}

; core::slice::sort::heapsort
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort8heapsort17h6f120594df3add9aE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %0) unnamed_addr #2 !dbg !3875 {
start:
  %i.dbg.spill3 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_35 = alloca i64, align 8
  %_33 = alloca { { ptr, i64 }, i64 }, align 8
  %_26 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_22 = alloca { i64, i64 }, align 8
  %_19 = alloca { { ptr, i64 }, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %sift_down = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3877, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3878, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.declare(metadata ptr %sift_down, metadata !3879, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3885, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !3889, metadata !DIExpression()), !dbg !3899
  store ptr %is_less, ptr %sift_down, align 8, !dbg !3900
  %_8 = udiv i64 %v.1, 2, !dbg !3901
  store i64 0, ptr %_7, align 8, !dbg !3902
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3902
  store i64 %_8, ptr %3, align 8, !dbg !3902
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3902
  %5 = load i64, ptr %4, align 8, !dbg !3902, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3902
  %7 = load i64, ptr %6, align 8, !dbg !3902, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %8 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hbd0ef64810c3739bE(i64 %5, i64 %7) #10, !dbg !3902
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3902
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3902
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdd9f5a1a0d3c7e32E"(i64 %_6.0, i64 %_6.1) #10, !dbg !3902
  %_5.0 = extractvalue { i64, i64 } %9, 0, !dbg !3902
  %_5.1 = extractvalue { i64, i64 } %9, 1, !dbg !3902
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3902
  store i64 %_5.0, ptr %10, align 8, !dbg !3902
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3902
  store i64 %_5.1, ptr %11, align 8, !dbg !3902
  br label %bb4, !dbg !3903

bb4:                                              ; preds = %bb6, %start
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4fe22b5b7081441cE"(ptr align 8 %iter) #10, !dbg !3898
  store { i64, i64 } %12, ptr %_13, align 8, !dbg !3898
  %_15 = load i64, ptr %_13, align 8, !dbg !3898, !range !975, !noundef !24
  %13 = icmp eq i64 %_15, 0, !dbg !3898
  br i1 %13, label %bb8, label %bb6, !dbg !3898

bb8:                                              ; preds = %bb4
  store i64 1, ptr %_22, align 8, !dbg !3904
  %14 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3904
  store i64 %v.1, ptr %14, align 8, !dbg !3904
  %15 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 0, !dbg !3904
  %16 = load i64, ptr %15, align 8, !dbg !3904, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3904
  %18 = load i64, ptr %17, align 8, !dbg !3904, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %19 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hbd0ef64810c3739bE(i64 %16, i64 %18) #10, !dbg !3904
  %_21.0 = extractvalue { i64, i64 } %19, 0, !dbg !3904
  %_21.1 = extractvalue { i64, i64 } %19, 1, !dbg !3904
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdd9f5a1a0d3c7e32E"(i64 %_21.0, i64 %_21.1) #10, !dbg !3904
  %_20.0 = extractvalue { i64, i64 } %20, 0, !dbg !3904
  %_20.1 = extractvalue { i64, i64 } %20, 1, !dbg !3904
  %21 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 0, !dbg !3904
  store i64 %_20.0, ptr %21, align 8, !dbg !3904
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 1, !dbg !3904
  store i64 %_20.1, ptr %22, align 8, !dbg !3904
  br label %bb11, !dbg !3905

bb6:                                              ; preds = %bb4
  %23 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3906
  %i2 = load i64, ptr %23, align 8, !dbg !3906, !noundef !24
  store i64 %i2, ptr %i.dbg.spill3, align 8, !dbg !3906
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill3, metadata !3887, metadata !DIExpression()), !dbg !3907
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3908
  store ptr %v.0, ptr %24, align 8, !dbg !3908
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3908
  store i64 %v.1, ptr %25, align 8, !dbg !3908
  %26 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3908
  store i64 %i2, ptr %26, align 8, !dbg !3908
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3908
  %28 = load ptr, ptr %27, align 8, !dbg !3908, !nonnull !24, !align !417, !noundef !24
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3908
  %30 = load i64, ptr %29, align 8, !dbg !3908, !noundef !24
  %31 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3908
  %32 = load i64, ptr %31, align 8, !dbg !3908, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hdc8000f888c52ed2E"(ptr align 8 %sift_down, ptr align 8 %28, i64 %30, i64 %32) #10, !dbg !3908
  br label %bb4, !dbg !3908

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %33 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4fe22b5b7081441cE"(ptr align 8 %iter1) #10, !dbg !3899
  store { i64, i64 } %33, ptr %_26, align 8, !dbg !3899
  %_28 = load i64, ptr %_26, align 8, !dbg !3899, !range !975, !noundef !24
  %34 = icmp eq i64 %_28, 0, !dbg !3899
  br i1 %34, label %bb14, label %bb13, !dbg !3899

bb14:                                             ; preds = %bb11
  ret void, !dbg !3909

bb13:                                             ; preds = %bb11
  %35 = getelementptr inbounds { i64, i64 }, ptr %_26, i32 0, i32 1, !dbg !3910
  %i = load i64, ptr %35, align 8, !dbg !3910, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3910
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3891, metadata !DIExpression()), !dbg !3911
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h992bdd3442f31a9fE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %i, ptr align 8 @alloc_dc7cc06f65f47d89307805f9ed1e1cb4) #10, !dbg !3912
  store i64 %i, ptr %_35, align 8, !dbg !3913
  %36 = load i64, ptr %_35, align 8, !dbg !3914, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %37 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfb51a5192ad8a97dE"(ptr align 8 %v.0, i64 %v.1, i64 %36, ptr align 8 @alloc_db9d608c45a49896807e0b64559ac840) #10, !dbg !3914
  %_34.0 = extractvalue { ptr, i64 } %37, 0, !dbg !3914
  %_34.1 = extractvalue { ptr, i64 } %37, 1, !dbg !3914
  %38 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3915
  store ptr %_34.0, ptr %38, align 8, !dbg !3915
  %39 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3915
  store i64 %_34.1, ptr %39, align 8, !dbg !3915
  %40 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3915
  store i64 0, ptr %40, align 8, !dbg !3915
  %41 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3915
  %42 = load ptr, ptr %41, align 8, !dbg !3915, !nonnull !24, !align !417, !noundef !24
  %43 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3915
  %44 = load i64, ptr %43, align 8, !dbg !3915, !noundef !24
  %45 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3915
  %46 = load i64, ptr %45, align 8, !dbg !3915, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hdc8000f888c52ed2E"(ptr align 8 %sift_down, ptr align 8 %42, i64 %44, i64 %46) #10, !dbg !3915
  br label %bb11, !dbg !3915

bb7:                                              ; No predecessors!
  unreachable, !dbg !3898
}

; core::slice::sort::heapsort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hdc8000f888c52ed2E"(ptr align 8 %_1, ptr align 8 %v.0, i64 %v.1, i64 %0) unnamed_addr #0 !dbg !3916 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_34 = alloca { ptr, ptr }, align 8
  %_21 = alloca { ptr, ptr }, align 8
  %child = alloca i64, align 8
  %node = alloca i64, align 8
  store i64 %0, ptr %node, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !3923, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !3926
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3921, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.declare(metadata ptr %node, metadata !3922, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.declare(metadata ptr %child, metadata !3924, metadata !DIExpression()), !dbg !3929
  br label %bb1, !dbg !3930

bb1:                                              ; preds = %bb16, %start
  %_6 = load i64, ptr %node, align 8, !dbg !3931, !noundef !24
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 %_6), !dbg !3932
  %_7.0 = extractvalue { i64, i1 } %3, 0, !dbg !3932
  %_7.1 = extractvalue { i64, i1 } %3, 1, !dbg !3932
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !3932
  br i1 %4, label %panic, label %bb2, !dbg !3932

bb2:                                              ; preds = %bb1
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7.0, i64 1), !dbg !3932
  %_8.0 = extractvalue { i64, i1 } %5, 0, !dbg !3932
  %_8.1 = extractvalue { i64, i1 } %5, 1, !dbg !3932
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3932
  br i1 %6, label %panic1, label %bb3, !dbg !3932

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_8c633453631874cfb45135c562495182) #11, !dbg !3932
  unreachable, !dbg !3932

bb3:                                              ; preds = %bb2
  store i64 %_8.0, ptr %child, align 8, !dbg !3932
  %_10 = load i64, ptr %child, align 8, !dbg !3933, !noundef !24
  %_9 = icmp uge i64 %_10, %v.1, !dbg !3933
  br i1 %_9, label %bb18, label %bb4, !dbg !3933

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_8c633453631874cfb45135c562495182) #11, !dbg !3932
  unreachable, !dbg !3932

bb4:                                              ; preds = %bb3
  %_15 = load i64, ptr %child, align 8, !dbg !3934, !noundef !24
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 1), !dbg !3934
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !3934
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !3934
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !3934
  br i1 %8, label %panic2, label %bb5, !dbg !3934

bb18:                                             ; preds = %bb14, %bb3
  ret void, !dbg !3935

bb5:                                              ; preds = %bb4
  %_13 = icmp ult i64 %_16.0, %v.1, !dbg !3934
  br i1 %_13, label %bb6, label %bb12, !dbg !3934

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_cced75eb33ad0d231589a125c7f2c71e) #11, !dbg !3934
  unreachable, !dbg !3934

bb12:                                             ; preds = %bb11, %bb5
  %_48 = load ptr, ptr %_1, align 8, !dbg !3936, !nonnull !24, !align !417, !noundef !24
  %_36 = load i64, ptr %node, align 8, !dbg !3937, !noundef !24
  %_38 = icmp ult i64 %_36, %v.1, !dbg !3938
  %9 = call i1 @llvm.expect.i1(i1 %_38, i1 true), !dbg !3938
  br i1 %9, label %bb13, label %panic7, !dbg !3938

bb6:                                              ; preds = %bb5
  %_47 = load ptr, ptr %_1, align 8, !dbg !3939, !nonnull !24, !align !417, !noundef !24
  %_23 = load i64, ptr %child, align 8, !dbg !3940, !noundef !24
  %_25 = icmp ult i64 %_23, %v.1, !dbg !3941
  %10 = call i1 @llvm.expect.i1(i1 %_25, i1 true), !dbg !3941
  br i1 %10, label %bb7, label %panic3, !dbg !3941

bb7:                                              ; preds = %bb6
  %_22 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_23, !dbg !3942
  %_28 = load i64, ptr %child, align 8, !dbg !3943, !noundef !24
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_28, i64 1), !dbg !3943
  %_29.0 = extractvalue { i64, i1 } %11, 0, !dbg !3943
  %_29.1 = extractvalue { i64, i1 } %11, 1, !dbg !3943
  %12 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !3943
  br i1 %12, label %panic4, label %bb8, !dbg !3943

panic3:                                           ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %_23, i64 %v.1, ptr align 8 @alloc_02d41e7169598a3cfcfd3f0d1c833ec2) #11, !dbg !3941
  unreachable, !dbg !3941

bb8:                                              ; preds = %bb7
  %_31 = icmp ult i64 %_29.0, %v.1, !dbg !3944
  %13 = call i1 @llvm.expect.i1(i1 %_31, i1 true), !dbg !3944
  br i1 %13, label %bb9, label %panic5, !dbg !3944

panic4:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_794be56d42be9995e3a84c84d26159ed) #11, !dbg !3943
  unreachable, !dbg !3943

bb9:                                              ; preds = %bb8
  %_26 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_29.0, !dbg !3945
  store ptr %_22, ptr %_21, align 8, !dbg !3939
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3939
  store ptr %_26, ptr %14, align 8, !dbg !3939
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 0, !dbg !3939
  %16 = load ptr, ptr %15, align 8, !dbg !3939, !nonnull !24, !align !417, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3939
  %18 = load ptr, ptr %17, align 8, !dbg !3939, !nonnull !24, !align !417, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_20 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h76555a964f869907E"(ptr align 8 %_47, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3939
  %_19 = zext i1 %_20 to i64, !dbg !3939
  %19 = load i64, ptr %child, align 8, !dbg !3946, !noundef !24
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 %_19), !dbg !3946
  %_32.0 = extractvalue { i64, i1 } %20, 0, !dbg !3946
  %_32.1 = extractvalue { i64, i1 } %20, 1, !dbg !3946
  %21 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !3946
  br i1 %21, label %panic6, label %bb11, !dbg !3946

panic5:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %_29.0, i64 %v.1, ptr align 8 @alloc_d32b57d7e285e3b164a125d44291af3f) #11, !dbg !3944
  unreachable, !dbg !3944

bb11:                                             ; preds = %bb9
  store i64 %_32.0, ptr %child, align 8, !dbg !3946
  br label %bb12, !dbg !3947

panic6:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_3f7ac4164e6f54924783af0ed6bc3c8d) #11, !dbg !3946
  unreachable, !dbg !3946

bb13:                                             ; preds = %bb12
  %_35 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_36, !dbg !3948
  %_40 = load i64, ptr %child, align 8, !dbg !3949, !noundef !24
  %_42 = icmp ult i64 %_40, %v.1, !dbg !3950
  %22 = call i1 @llvm.expect.i1(i1 %_42, i1 true), !dbg !3950
  br i1 %22, label %bb14, label %panic8, !dbg !3950

panic7:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %_36, i64 %v.1, ptr align 8 @alloc_5714221f35142e87516e8a17190398c5) #11, !dbg !3938
  unreachable, !dbg !3938

bb14:                                             ; preds = %bb13
  %_39 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_40, !dbg !3951
  store ptr %_35, ptr %_34, align 8, !dbg !3936
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_34, i32 0, i32 1, !dbg !3936
  store ptr %_39, ptr %23, align 8, !dbg !3936
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_34, i32 0, i32 0, !dbg !3936
  %25 = load ptr, ptr %24, align 8, !dbg !3936, !nonnull !24, !align !417, !noundef !24
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_34, i32 0, i32 1, !dbg !3936
  %27 = load ptr, ptr %26, align 8, !dbg !3936, !nonnull !24, !align !417, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_33 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h76555a964f869907E"(ptr align 8 %_48, ptr align 8 %25, ptr align 8 %27) #10, !dbg !3936
  br i1 %_33, label %bb16, label %bb18, !dbg !3936

panic8:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %_40, i64 %v.1, ptr align 8 @alloc_8b3b0b984669970c12a2c2d899b23d16) #11, !dbg !3950
  unreachable, !dbg !3950

bb16:                                             ; preds = %bb14
  %_44 = load i64, ptr %node, align 8, !dbg !3952, !noundef !24
  %_45 = load i64, ptr %child, align 8, !dbg !3953, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h992bdd3442f31a9fE"(ptr align 8 %v.0, i64 %v.1, i64 %_44, i64 %_45, ptr align 8 @alloc_4685547f2c3cd5dc1819afd3ce6280d4) #10, !dbg !3954
  %_46 = load i64, ptr %child, align 8, !dbg !3955, !noundef !24
  store i64 %_46, ptr %node, align 8, !dbg !3956
  br label %bb1, !dbg !3930
}

; core::slice::sort::partition
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort9partition17hec306af8b214dcd6E(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !3957 {
start:
  %self.dbg.spill.i13 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %was_partitioned.dbg.spill = alloca i8, align 1
  %mid.dbg.spill = alloca i64, align 8
  %pivot.dbg.spill8 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_41 = alloca { ptr, ptr }, align 8
  %_32 = alloca { ptr, ptr }, align 8
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_16 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_6 = alloca { i64, i8 }, align 8
  %_0 = alloca { i64, i8 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3961, metadata !DIExpression()), !dbg !3982
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3962, metadata !DIExpression()), !dbg !3983
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3963, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3972, metadata !DIExpression()), !dbg !3985
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !3974, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.declare(metadata ptr %l, metadata !3978, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.declare(metadata ptr %r, metadata !3980, metadata !DIExpression()), !dbg !3988
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h992bdd3442f31a9fE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_a32d8ca4e4d506b0d34a470e4dcb5cd1) #10, !dbg !3989
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h1643ef83df19a1adE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_10, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_e52ab9305e2b15d74c4e9ac02c87db27) #10, !dbg !3990
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !3991
  %pivot.0 = load ptr, ptr %2, align 8, !dbg !3991, !nonnull !24, !align !417, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !3991
  %pivot.1 = load i64, ptr %3, align 8, !dbg !3991, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !3991
  store ptr %pivot.0, ptr %4, align 8, !dbg !3991
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !3991
  store i64 %pivot.1, ptr %5, align 8, !dbg !3991
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !3967, metadata !DIExpression()), !dbg !3992
  %6 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !3993
  %7 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 0, !dbg !3993
  %v.02 = load ptr, ptr %7, align 8, !dbg !3993, !nonnull !24, !align !417, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 1, !dbg !3993
  %v.13 = load i64, ptr %8, align 8, !dbg !3993, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !3993
  store ptr %v.02, ptr %9, align 8, !dbg !3993
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !3993
  store i64 %v.13, ptr %10, align 8, !dbg !3993
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !3969, metadata !DIExpression()), !dbg !3994
  %_14 = icmp ult i64 0, %pivot.1, !dbg !3995
  %11 = call i1 @llvm.expect.i1(i1 %_14, i1 true), !dbg !3995
  br i1 %11, label %bb3, label %panic, !dbg !3995

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3996
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !3996
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !3970, metadata !DIExpression()), !dbg !3997
; call core::ptr::read
  call void @_ZN4core3ptr4read17h8a7b025a440768baE(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_16, ptr %pivot5) #10, !dbg !3998
  call void @llvm.dbg.declare(metadata ptr %_16, metadata !895, metadata !DIExpression()), !dbg !3999
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_16, i64 24, i1 false), !dbg !4001
  store ptr %tmp, ptr %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i13, metadata !2496, metadata !DIExpression()), !dbg !4002
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !4004
  %12 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !4004
  store ptr %pivot5, ptr %12, align 8, !dbg !4004
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2496, metadata !DIExpression()), !dbg !4005
  store ptr %tmp, ptr %pivot.dbg.spill8, align 8, !dbg !4007
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill8, metadata !3976, metadata !DIExpression()), !dbg !4008
  store i64 0, ptr %l, align 8, !dbg !4009
  store i64 %v.13, ptr %r, align 8, !dbg !4010
  br label %bb8, !dbg !4011

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 0, i64 %pivot.1, ptr align 8 @alloc_0b2a738361d208826a072b92b3acda46) #11, !dbg !3995
  unreachable, !dbg !3995

bb8:                                              ; preds = %bb13, %bb3
  %_29 = load i64, ptr %l, align 8, !dbg !4012, !noundef !24
  %_30 = load i64, ptr %r, align 8, !dbg !4013, !noundef !24
  %_28 = icmp ult i64 %_29, %_30, !dbg !4012
  br i1 %_28, label %bb9, label %bb14, !dbg !4012

bb14:                                             ; preds = %bb20, %bb9, %bb8
  %_38 = load i64, ptr %l, align 8, !dbg !4014, !noundef !24
  %_39 = load i64, ptr %r, align 8, !dbg !4015, !noundef !24
  %_37 = icmp ult i64 %_38, %_39, !dbg !4014
  br i1 %_37, label %bb15, label %bb21, !dbg !4014

bb9:                                              ; preds = %bb8
  %_35 = load i64, ptr %l, align 8, !dbg !4016, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_33 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %v.02, i64 %v.13, i64 %_35) #10, !dbg !4017
  store ptr %_33, ptr %_32, align 8, !dbg !4018
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_32, i32 0, i32 1, !dbg !4018
  store ptr %tmp, ptr %13, align 8, !dbg !4018
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_32, i32 0, i32 0, !dbg !4018
  %15 = load ptr, ptr %14, align 8, !dbg !4018, !nonnull !24, !align !417, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr }, ptr %_32, i32 0, i32 1, !dbg !4018
  %17 = load ptr, ptr %16, align 8, !dbg !4018, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_31 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %15, ptr align 8 %17) #10, !dbg !4018
  br i1 %_31, label %bb12, label %bb14, !dbg !4018

bb12:                                             ; preds = %bb9
  %18 = load i64, ptr %l, align 8, !dbg !4019, !noundef !24
  %19 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %18, i64 1), !dbg !4019
  %_36.0 = extractvalue { i64, i1 } %19, 0, !dbg !4019
  %_36.1 = extractvalue { i64, i1 } %19, 1, !dbg !4019
  %20 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !4019
  br i1 %20, label %panic12, label %bb13, !dbg !4019

bb21:                                             ; preds = %bb16, %bb14
  %_49 = load i64, ptr %l, align 8, !dbg !4020, !noundef !24
  %_53 = load i64, ptr %l, align 8, !dbg !4021, !noundef !24
  %_54 = load i64, ptr %r, align 8, !dbg !4022, !noundef !24
  store i64 %_53, ptr %_52, align 8, !dbg !4021
  %21 = getelementptr inbounds { i64, i64 }, ptr %_52, i32 0, i32 1, !dbg !4021
  store i64 %_54, ptr %21, align 8, !dbg !4021
  %22 = getelementptr inbounds { i64, i64 }, ptr %_52, i32 0, i32 0, !dbg !4023
  %23 = load i64, ptr %22, align 8, !dbg !4023, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_52, i32 0, i32 1, !dbg !4023
  %25 = load i64, ptr %24, align 8, !dbg !4023, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %26 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h85a2628b90dfe8e1E"(ptr align 8 %v.02, i64 %v.13, i64 %23, i64 %25, ptr align 8 @alloc_cfd2041e9fc8e4305f94bb3b03723245) #10, !dbg !4023
  %_51.0 = extractvalue { ptr, i64 } %26, 0, !dbg !4023
  %_51.1 = extractvalue { ptr, i64 } %26, 1, !dbg !4023
; call core::slice::sort::partition_in_blocks
  %_50 = call i64 @_ZN4core5slice4sort19partition_in_blocks17hbc649a6abd17b02fE(ptr align 8 %_51.0, i64 %_51.1, ptr align 8 %tmp, ptr align 8 %is_less) #10, !dbg !4024
  %27 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_49, i64 %_50), !dbg !4020
  %_55.0 = extractvalue { i64, i1 } %27, 0, !dbg !4020
  %_55.1 = extractvalue { i64, i1 } %27, 1, !dbg !4020
  %28 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !4020
  br i1 %28, label %panic11, label %bb24, !dbg !4020

bb15:                                             ; preds = %bb14
  %_45 = load i64, ptr %r, align 8, !dbg !4025, !noundef !24
  %_46.0 = sub i64 %_45, 1, !dbg !4025
  %_46.1 = icmp ult i64 %_45, 1, !dbg !4025
  %29 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !4025
  br i1 %29, label %panic9, label %bb16, !dbg !4025

bb16:                                             ; preds = %bb15
; call core::slice::<impl [T]>::get_unchecked
  %_42 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE"(ptr align 8 %v.02, i64 %v.13, i64 %_46.0) #10, !dbg !4026
  store ptr %_42, ptr %_41, align 8, !dbg !4027
  %30 = getelementptr inbounds { ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !4027
  store ptr %tmp, ptr %30, align 8, !dbg !4027
  %31 = getelementptr inbounds { ptr, ptr }, ptr %_41, i32 0, i32 0, !dbg !4027
  %32 = load ptr, ptr %31, align 8, !dbg !4027, !nonnull !24, !align !417, !noundef !24
  %33 = getelementptr inbounds { ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !4027
  %34 = load ptr, ptr %33, align 8, !dbg !4027, !nonnull !24, !align !417, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_40 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE"(ptr align 8 %is_less, ptr align 8 %32, ptr align 8 %34) #10, !dbg !4027
  br i1 %_40, label %bb21, label %bb19, !dbg !4027

panic9:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_0b6e8a57da681e1fb7c4d0e2204e6a73) #11, !dbg !4025
  unreachable, !dbg !4025

bb19:                                             ; preds = %bb16
  %35 = load i64, ptr %r, align 8, !dbg !4028, !noundef !24
  %_47.0 = sub i64 %35, 1, !dbg !4028
  %_47.1 = icmp ult i64 %35, 1, !dbg !4028
  %36 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false), !dbg !4028
  br i1 %36, label %panic10, label %bb20, !dbg !4028

bb20:                                             ; preds = %bb19
  store i64 %_47.0, ptr %r, align 8, !dbg !4028
  br label %bb14, !dbg !4029

panic10:                                          ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_a38e39bd8e066eb11cb79be2a1a30355) #11, !dbg !4028
  unreachable, !dbg !4028

bb24:                                             ; preds = %bb21
  %_57 = load i64, ptr %l, align 8, !dbg !4030, !noundef !24
  %_58 = load i64, ptr %r, align 8, !dbg !4031, !noundef !24
  %_56 = icmp uge i64 %_57, %_58, !dbg !4030
  store i64 %_55.0, ptr %_6, align 8, !dbg !4032
  %37 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !4032
  %38 = zext i1 %_56 to i8, !dbg !4032
  store i8 %38, ptr %37, align 8, !dbg !4032
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17ha01701ee024676caE"(ptr align 8 %_pivot_guard) #10, !dbg !4033
  %mid = load i64, ptr %_6, align 8, !dbg !4034, !noundef !24
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !4034
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3964, metadata !DIExpression()), !dbg !4035
  %39 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !4036
  %40 = load i8, ptr %39, align 8, !dbg !4036, !range !559, !noundef !24
  %was_partitioned = trunc i8 %40 to i1, !dbg !4036
  %41 = zext i1 %was_partitioned to i8, !dbg !4036
  store i8 %41, ptr %was_partitioned.dbg.spill, align 1, !dbg !4036
  call void @llvm.dbg.declare(metadata ptr %was_partitioned.dbg.spill, metadata !3966, metadata !DIExpression()), !dbg !4037
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h992bdd3442f31a9fE"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %mid, ptr align 8 @alloc_62f31cc339340f8d2589d3fbbff1b89f) #10, !dbg !4038
  store i64 %mid, ptr %_0, align 8, !dbg !4039
  %42 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !4039
  %43 = zext i1 %was_partitioned to i8, !dbg !4039
  store i8 %43, ptr %42, align 8, !dbg !4039
  %44 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 0, !dbg !4040
  %45 = load i64, ptr %44, align 8, !dbg !4040, !noundef !24
  %46 = getelementptr inbounds { i64, i8 }, ptr %_0, i32 0, i32 1, !dbg !4040
  %47 = load i8, ptr %46, align 8, !dbg !4040, !range !559, !noundef !24
  %48 = trunc i8 %47 to i1, !dbg !4040
  %49 = zext i1 %48 to i8, !dbg !4040
  %50 = insertvalue { i64, i8 } poison, i64 %45, 0, !dbg !4040
  %51 = insertvalue { i64, i8 } %50, i8 %49, 1, !dbg !4040
  ret { i64, i8 } %51, !dbg !4040

panic11:                                          ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_b173b94e8487e85973e5816a197e44e8) #11, !dbg !4020
  unreachable, !dbg !4020

bb13:                                             ; preds = %bb12
  store i64 %_36.0, ptr %l, align 8, !dbg !4019
  br label %bb8, !dbg !4011

panic12:                                          ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_96c6545aa6432add279027414fe61766) #11, !dbg !4019
  unreachable, !dbg !4019
}

; core::slice::sort::quicksort
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort9quicksort17h1fcea23794d9a678E(ptr align 8 %v.0, i64 %v.1, ptr align 1 %0) unnamed_addr #1 !dbg !4041 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %limit.dbg.spill = alloca i32, align 4
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !4045, metadata !DIExpression()), !dbg !4049
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !4046, metadata !DIExpression()), !dbg !4050
  br i1 false, label %bb1, label %bb2, !dbg !4051

bb2:                                              ; preds = %start
  store i64 %v.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4052, metadata !DIExpression()), !dbg !4055
  %4 = call i64 @llvm.ctlz.i64(i64 %v.1, i1 false), !dbg !4057
  store i64 %4, ptr %1, align 8, !dbg !4057
  %_2.i = load i64, ptr %1, align 8, !dbg !4057, !noundef !24
  %_0.i = trunc i64 %_2.i to i32, !dbg !4057
  %_8.0 = sub i32 64, %_0.i, !dbg !4058
  %_8.1 = icmp ult i32 64, %_0.i, !dbg !4058
  %5 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !4058
  br i1 %5, label %panic, label %bb4, !dbg !4058

bb1:                                              ; preds = %start
  br label %bb6, !dbg !4059

bb4:                                              ; preds = %bb2
  store i32 %_8.0, ptr %limit.dbg.spill, align 4, !dbg !4058
  call void @llvm.dbg.declare(metadata ptr %limit.dbg.spill, metadata !4047, metadata !DIExpression()), !dbg !4060
  store ptr null, ptr %_11, align 8, !dbg !4061
  %6 = load ptr, ptr %_11, align 8, !dbg !4062, !align !417, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h03a05f5c5f118806E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less, ptr align 8 %6, i32 %_8.0) #10, !dbg !4062
  br label %bb6, !dbg !4059

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_6749a29ac1ba34852d860084123a9bad) #11, !dbg !4058
  unreachable, !dbg !4058

bb6:                                              ; preds = %bb1, %bb4
  ret void, !dbg !4063
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5f700e7b114b712E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !4064 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4069, metadata !DIExpression()), !dbg !4071
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4070, metadata !DIExpression()), !dbg !4072
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc851aaff882244beE"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4073
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4073
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4073
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4074
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !4074
  ret { ptr, i64 } %7, !dbg !4074
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h29a639d44f5cb99dE"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4075 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4080, metadata !DIExpression()), !dbg !4084
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4081, metadata !DIExpression()), !dbg !4085
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3aad44e1dfa59307E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4086
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4086
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4086
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4087
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !4087
  ret { ptr, i64 } %5, !dbg !4087
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h85a2628b90dfe8e1E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !4088 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4092, metadata !DIExpression()), !dbg !4094
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4093, metadata !DIExpression()), !dbg !4095
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h00dbb4f262465463E"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4096
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4096
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4096
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4097
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !4097
  ret { ptr, i64 } %7, !dbg !4097
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17ha790b300f578cd28E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4098 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4102, metadata !DIExpression()), !dbg !4106
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4103, metadata !DIExpression()), !dbg !4107
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3dd50a8bdf5b4973E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4108
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4108
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4108
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4109
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !4109
  ret { ptr, i64 } %5, !dbg !4109
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfb51a5192ad8a97dE"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !4110 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4114, metadata !DIExpression()), !dbg !4118
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4115, metadata !DIExpression()), !dbg !4119
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3ecb26fdf4fda53eE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !4120
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4120
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4120
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4121
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !4121
  ret { ptr, i64 } %5, !dbg !4121
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h4627a3a7bfe75154E"(ptr sret(%"bootinfo::TlsTemplate") align 8 %_0, ptr align 8 %self, ptr align 8 %default) unnamed_addr #0 !dbg !4122 {
start:
  %_5 = alloca i8, align 1
  %x = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4146, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.declare(metadata ptr %default, metadata !4147, metadata !DIExpression()), !dbg !4151
  call void @llvm.dbg.declare(metadata ptr %x, metadata !4148, metadata !DIExpression()), !dbg !4152
  store i8 0, ptr %_5, align 1, !dbg !4153
  store i8 1, ptr %_5, align 1, !dbg !4153
  %_3 = load i64, ptr %self, align 8, !dbg !4153, !range !975, !noundef !24
  %0 = icmp eq i64 %_3, 0, !dbg !4154
  br i1 %0, label %bb1, label %bb3, !dbg !4154

bb1:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !4155
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %default, i64 24, i1 false), !dbg !4155
  br label %bb6, !dbg !4155

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %self, i32 0, i32 1, !dbg !4156
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %1, i64 24, i1 false), !dbg !4156
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %x, i64 24, i1 false), !dbg !4157
  br label %bb6, !dbg !4158

bb6:                                              ; preds = %bb3, %bb1
  %2 = load i8, ptr %_5, align 1, !dbg !4159, !range !559, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !4159
  br i1 %3, label %bb5, label %bb4, !dbg !4159

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !4160

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !4159

bb2:                                              ; No predecessors!
  unreachable, !dbg !4153
}

; <core::cmp::Ordering as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7f77a1708ef0cb67E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !4161 {
start:
  %__arg1_tag.dbg.spill = alloca i8, align 1
  %__self_tag.dbg.spill = alloca i8, align 1
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4167, metadata !DIExpression()), !dbg !4173
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !4168, metadata !DIExpression()), !dbg !4173
  %__self_tag = load i8, ptr %self, align 1, !dbg !4173, !range !623, !noundef !24
  store i8 %__self_tag, ptr %__self_tag.dbg.spill, align 1, !dbg !4173
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill, metadata !4169, metadata !DIExpression()), !dbg !4174
  %__arg1_tag = load i8, ptr %other, align 1, !dbg !4174, !range !623, !noundef !24
  store i8 %__arg1_tag, ptr %__arg1_tag.dbg.spill, align 1, !dbg !4174
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill, metadata !4171, metadata !DIExpression()), !dbg !4175
  %_0 = icmp eq i8 %__self_tag, %__arg1_tag, !dbg !4175
  ret i1 %_0, !dbg !4176
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h477917721b7c6dc4E"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !4177 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4185, metadata !DIExpression()), !dbg !4187
  %2 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !4188
  %3 = insertvalue { ptr, ptr } %2, ptr %self.1, 1, !dbg !4188
  ret { ptr, ptr } %3, !dbg !4188
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h54996780d583227eE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !4189 {
start:
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, { ptr, i64 } }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4194, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4196, metadata !DIExpression()), !dbg !4199
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !4195, metadata !DIExpression()), !dbg !4200
  br i1 true, label %bb1, label %bb2, !dbg !4201

bb2:                                              ; preds = %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17he72970f9fe8c07a1E.exit", %start
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbb1b5859ff6168a9E"(ptr %slice.0, i64 %slice.1) #10, !dbg !4202
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !129, metadata !DIExpression()), !dbg !4203
  store i64 %self, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !139, metadata !DIExpression()), !dbg !4205
  %_0.i = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_6, i64 %self, !dbg !4206
  ret ptr %_0.i, !dbg !4207

bb1:                                              ; preds = %start
  store i64 %self, ptr %_5, align 8, !dbg !4201
  %2 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !4201
  %3 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !4201
  store ptr %slice.0, ptr %3, align 8, !dbg !4201
  %4 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !4201
  store i64 %slice.1, ptr %4, align 8, !dbg !4201
  %5 = load i64, ptr %_5, align 8, !dbg !4201, !noundef !24
  %6 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !4201
  %7 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 0, !dbg !4201
  %8 = load ptr, ptr %7, align 8, !dbg !4201, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 1, !dbg !4201
  %10 = load i64, ptr %9, align 8, !dbg !4201, !noundef !24
  store i64 %5, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !4208, metadata !DIExpression()), !dbg !4215
  store ptr %8, ptr %slice.dbg.spill.i, align 8
  %11 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %10, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !4214, metadata !DIExpression()), !dbg !4215
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_4.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17ha47c303ab005f629E"(ptr %8, i64 %10) #10, !dbg !4217
  %_3.i = icmp ult i64 %5, %_4.i, !dbg !4219
  br i1 %_3.i, label %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17he72970f9fe8c07a1E.exit", label %bb3.i, !dbg !4219

bb3.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_b3b3c2a7efcea294ef431b7ed1abebea, i64 97) #11, !dbg !4220
  unreachable, !dbg !4220

"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17he72970f9fe8c07a1E.exit": ; preds = %bb1
  br label %bb2, !dbg !4201
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9a9a90a8c6e9a90bE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !4221 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4227, metadata !DIExpression()), !dbg !4229
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !4228, metadata !DIExpression()), !dbg !4230
  %_4 = load ptr, ptr %self, align 8, !dbg !4231, !nonnull !24, !noundef !24
  store ptr %_4, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !4232, metadata !DIExpression()), !dbg !4238
  %_6 = load ptr, ptr %other, align 8, !dbg !4240, !nonnull !24, !noundef !24
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4232, metadata !DIExpression()), !dbg !4241
  %_0 = icmp eq ptr %_4, %_6, !dbg !4231
  ret i1 %_0, !dbg !4243
}

; <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc846d274995c2f97E"(ptr align 8 %self) unnamed_addr #1 !dbg !4244 {
start:
  %count.dbg.spill.i1 = alloca i64, align 8
  %dst.dbg.spill.i2 = alloca ptr, align 8
  %src.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca { ptr, ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4250, metadata !DIExpression()), !dbg !4251
  %_3 = load ptr, ptr %self, align 8, !dbg !4252, !noundef !24
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4253
  %_4 = load ptr, ptr %0, align 8, !dbg !4253, !noundef !24
  store ptr %_3, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1498, metadata !DIExpression()), !dbg !4254
  store ptr %_4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1503, metadata !DIExpression()), !dbg !4256
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1504, metadata !DIExpression()), !dbg !4257
  store ptr %_3, ptr %_6.i, align 8, !dbg !4258
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !4258
  store ptr %_4, ptr %1, align 8, !dbg !4258
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !4258
  store i64 1, ptr %2, align 8, !dbg !4258
  %3 = load ptr, ptr %_6.i, align 8, !dbg !4258, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 1, !dbg !4258
  %5 = load ptr, ptr %4, align 8, !dbg !4258, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6.i, i32 0, i32 2, !dbg !4258
  %7 = load i64, ptr %6, align 8, !dbg !4258, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i3, metadata !1510, metadata !DIExpression()), !dbg !4259
  store ptr %5, ptr %dst.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i2, metadata !1514, metadata !DIExpression()), !dbg !4259
  store i64 %7, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !1515, metadata !DIExpression()), !dbg !4259
; call core::intrinsics::is_aligned_and_not_null
  %_4.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %3) #10, !dbg !4261
  br i1 %_4.i, label %bb2.i, label %bb7.i, !dbg !4261

bb7.i:                                            ; preds = %bb4.i, %bb2.i, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !4262
  unreachable, !dbg !4262

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE(ptr %5) #10, !dbg !4263
  br i1 %_5.i, label %bb4.i, label %bb7.i, !dbg !4263

bb4.i:                                            ; preds = %bb2.i
; call core::intrinsics::is_nonoverlapping
  %_7.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E(ptr %3, ptr %5, i64 %7) #10, !dbg !4264
  br i1 %_7.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit, label %bb7.i, !dbg !4264

_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E.exit: ; preds = %bb4.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %_3, i64 24, i1 false), !dbg !4265
  ret void, !dbg !4266
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h97e7d93a19b9c705E"(ptr align 8 %self) unnamed_addr #0 !dbg !4267 {
start:
  %self.dbg.spill.i1.i4 = alloca ptr, align 8
  %_end.dbg.spill.i = alloca ptr, align 8
  %old.dbg.spill.i = alloca ptr, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i1.i = alloca ptr, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  %end = alloca ptr, align 8
  %_2 = alloca i8, align 1
  %_0 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4274, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.declare(metadata ptr %end, metadata !4277, metadata !DIExpression()), !dbg !4280
  br i1 false, label %bb1, label %bb3, !dbg !4281

bb3:                                              ; preds = %start
  %_8 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4281
  store ptr %_8, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !4282, metadata !DIExpression()), !dbg !4292
  %0 = load ptr, ptr %_8, align 8, !dbg !4281, !nonnull !24, !noundef !24
  store ptr %0, ptr %end, align 8, !dbg !4281
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %1 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9a9a90a8c6e9a90bE"(ptr align 8 %self, ptr align 8 %end) #10, !dbg !4280
  %2 = zext i1 %1 to i8, !dbg !4280
  store i8 %2, ptr %_2, align 1, !dbg !4280
  br label %bb5, !dbg !4280

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4281
  %_5 = load ptr, ptr %3, align 8, !dbg !4281, !noundef !24
  store ptr %_5, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !505, metadata !DIExpression()), !dbg !4294
  store ptr %_5, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !512, metadata !DIExpression()), !dbg !4296
  %_0.i = ptrtoint ptr %_5 to i64, !dbg !4298
  store i64 %_0.i, ptr %len.dbg.spill, align 8, !dbg !4281
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !4275, metadata !DIExpression()), !dbg !4299
  %4 = icmp eq i64 %_0.i, 0, !dbg !4299
  %5 = zext i1 %4 to i8, !dbg !4299
  store i8 %5, ptr %_2, align 1, !dbg !4299
  br label %bb5, !dbg !4281

bb5:                                              ; preds = %bb1, %bb3
  %6 = load i8, ptr %_2, align 1, !dbg !4281, !range !559, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !4281
  br i1 %7, label %bb6, label %bb7, !dbg !4281

bb7:                                              ; preds = %bb5
  store ptr %self, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !4300, metadata !DIExpression()), !dbg !4314
  store i64 1, ptr %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill.i, metadata !4306, metadata !DIExpression()), !dbg !4316
  %old.i = load ptr, ptr %self, align 8, !dbg !4317, !nonnull !24, !noundef !24
  store ptr %old.i, ptr %old.dbg.spill.i, align 8, !dbg !4317
  call void @llvm.dbg.declare(metadata ptr %old.dbg.spill.i, metadata !4307, metadata !DIExpression()), !dbg !4318
  %_11.i = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4319
  store ptr %_11.i, ptr %self.dbg.spill.i1.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i4, metadata !4320, metadata !DIExpression()), !dbg !4327
  store ptr %_11.i, ptr %_end.dbg.spill.i, align 8, !dbg !4319
  call void @llvm.dbg.declare(metadata ptr %_end.dbg.spill.i, metadata !4311, metadata !DIExpression()), !dbg !4329
  %_13.i = load ptr, ptr %self, align 8, !dbg !4330, !nonnull !24, !noundef !24
; call core::ptr::non_null::NonNull<T>::add
  %_12.i = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17ha6d460848033116aE"(ptr %_13.i, i64 1) #10, !dbg !4330
  store ptr %_12.i, ptr %self, align 8, !dbg !4331
  store ptr %old.i, ptr %_13, align 8, !dbg !4332
  store ptr %_13, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4333, metadata !DIExpression()), !dbg !4339
  %_4.i = load ptr, ptr %_13, align 8, !dbg !4341, !nonnull !24, !noundef !24
  store ptr %_4.i, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !4232, metadata !DIExpression()), !dbg !4342
  store ptr %_4.i, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !4344, metadata !DIExpression()), !dbg !4349
  store ptr %_4.i, ptr %_0, align 8, !dbg !4351
  br label %bb10, !dbg !4352

bb6:                                              ; preds = %bb5
  store ptr null, ptr %_0, align 8, !dbg !4353
  br label %bb10, !dbg !4352

bb10:                                             ; preds = %bb6, %bb7
  %8 = load ptr, ptr %_0, align 8, !dbg !4354, !align !417, !noundef !24
  ret ptr %8, !dbg !4354
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h08697ebb8c2e59cdE"(ptr align 8 %self) unnamed_addr #0 !dbg !4355 {
start:
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %end.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_17 = alloca ptr, align 8
  %_12 = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %_0 = alloca { i64, i64 }, align 8
  %predicate = alloca %"{closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73}", align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4360, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.declare(metadata ptr %predicate, metadata !4361, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4362, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.declare(metadata ptr %i, metadata !4368, metadata !DIExpression()), !dbg !4377
  br i1 false, label %bb1, label %bb3, !dbg !4378

bb3:                                              ; preds = %start
  %_9 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4378
  store ptr %_9, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !4282, metadata !DIExpression()), !dbg !4379
  %end = load ptr, ptr %_9, align 8, !dbg !4378, !nonnull !24, !noundef !24
  store ptr %end, ptr %end.dbg.spill, align 8, !dbg !4378
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !4366, metadata !DIExpression()), !dbg !4381
  %_10 = load ptr, ptr %self, align 8, !dbg !4381, !nonnull !24, !noundef !24
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hf2d2301368182478E"(ptr %end, ptr %_10) #10, !dbg !4381
  store i64 %0, ptr %n, align 8, !dbg !4381
  br label %bb5, !dbg !4381

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4378
  %_6 = load ptr, ptr %1, align 8, !dbg !4378, !noundef !24
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !505, metadata !DIExpression()), !dbg !4382
  store ptr %_6, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !512, metadata !DIExpression()), !dbg !4384
  %_0.i = ptrtoint ptr %_6 to i64, !dbg !4386
  store i64 %_0.i, ptr %len.dbg.spill, align 8, !dbg !4378
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !4364, metadata !DIExpression()), !dbg !4387
  store i64 %_0.i, ptr %n, align 8, !dbg !4387
  br label %bb5, !dbg !4378

bb5:                                              ; preds = %bb1, %bb3
  store i64 0, ptr %i, align 8, !dbg !4388
  br label %bb6, !dbg !4389

bb6:                                              ; preds = %bb12, %bb5
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h97e7d93a19b9c705E"(ptr align 8 %self) #10, !dbg !4390
  store ptr %2, ptr %_12, align 8, !dbg !4390
  %3 = load ptr, ptr %_12, align 8, !dbg !4391, !noundef !24
  %4 = ptrtoint ptr %3 to i64, !dbg !4391
  %5 = icmp eq i64 %4, 0, !dbg !4391
  %_13 = select i1 %5, i64 0, i64 1, !dbg !4391
  %6 = icmp eq i64 %_13, 1, !dbg !4391
  br i1 %6, label %bb8, label %bb13, !dbg !4391

bb8:                                              ; preds = %bb6
  %x = load ptr, ptr %_12, align 8, !dbg !4392, !nonnull !24, !align !417, !noundef !24
  store ptr %x, ptr %x.dbg.spill, align 8, !dbg !4392
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4370, metadata !DIExpression()), !dbg !4392
  store ptr %x, ptr %_17, align 8, !dbg !4393
  %7 = load ptr, ptr %_17, align 8, !dbg !4393, !nonnull !24, !align !417, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %_15 = call zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h8a1cf4f84702360cE"(ptr align 1 %predicate, ptr align 8 %7) #10, !dbg !4393
  br i1 %_15, label %bb10, label %bb11, !dbg !4393

bb13:                                             ; preds = %bb6
  store i64 0, ptr %_0, align 8, !dbg !4394
  br label %bb14, !dbg !4395

bb11:                                             ; preds = %bb8
  %8 = load i64, ptr %i, align 8, !dbg !4396, !noundef !24
  %9 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 1), !dbg !4396
  %_22.0 = extractvalue { i64, i1 } %9, 0, !dbg !4396
  %_22.1 = extractvalue { i64, i1 } %9, 1, !dbg !4396
  %10 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !4396
  br i1 %10, label %panic, label %bb12, !dbg !4396

bb10:                                             ; preds = %bb8
  %_19 = load i64, ptr %i, align 8, !dbg !4397, !noundef !24
  %_20 = load i64, ptr %n, align 8, !dbg !4398, !noundef !24
  %_18 = icmp ult i64 %_19, %_20, !dbg !4397
  call void @llvm.assume(i1 %_18), !dbg !4399
  %_21 = load i64, ptr %i, align 8, !dbg !4400, !noundef !24
  %11 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4401
  store i64 %_21, ptr %11, align 8, !dbg !4401
  store i64 1, ptr %_0, align 8, !dbg !4401
  br label %bb14, !dbg !4395

bb12:                                             ; preds = %bb11
  store i64 %_22.0, ptr %i, align 8, !dbg !4396
  br label %bb6, !dbg !4389

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_ea7ac5ae4966185c9a90e62c47f3114d) #11, !dbg !4396
  unreachable, !dbg !4396

bb14:                                             ; preds = %bb13, %bb10
  %12 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !4402
  %13 = load i64, ptr %12, align 8, !dbg !4402, !range !975, !noundef !24
  %14 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4402
  %15 = load i64, ptr %14, align 8, !dbg !4402
  %16 = insertvalue { i64, i64 } poison, i64 %13, 0, !dbg !4402
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1, !dbg !4402
  ret { i64, i64 } %17, !dbg !4402
}

; bootloader::bootinfo::memory_map::MemoryMap::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h76c992570e472a86E(ptr sret(%"bootinfo::memory_map::MemoryMap") align 8 %_0) unnamed_addr #1 !dbg !4403 {
start:
  %_2 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_1 = alloca [64 x %"bootinfo::memory_map::MemoryRegion"], align 8
; call bootloader::bootinfo::memory_map::MemoryRegion::empty
  call void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17hd9078b7c7db73b08E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_2) #10, !dbg !4412
  br label %repeat_loop_header, !dbg !4413

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %0 = phi i64 [ 0, %start ], [ %3, %repeat_loop_body ]
  %1 = icmp ult i64 %0, 64
  br i1 %1, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %2 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 %0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_2, i64 24, i1 false)
  %3 = add nuw i64 %0, 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 1536, i1 false), !dbg !4414
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %_0, i32 0, i32 1, !dbg !4414
  store i64 0, ptr %4, align 8, !dbg !4414
  ret void, !dbg !4415
}

; bootloader::bootinfo::memory_map::MemoryMap::add_region
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h9cd58d57d20af052E(ptr align 8 %self, ptr align 8 %region) unnamed_addr #1 !dbg !4416 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4422, metadata !DIExpression()), !dbg !4424
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4423, metadata !DIExpression()), !dbg !4425
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_4 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf9b97491bed6a1d5E(ptr align 8 %self) #10, !dbg !4426
  %_3 = icmp ult i64 %_4, 64, !dbg !4426
  br i1 %_3, label %bb2, label %bb3, !dbg !4426

bb3:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @alloc_377fe4797e3690987ab15f0122f4880b, i64 37, ptr align 8 @alloc_7196c88dea27a90737fe52164bfa6d4b) #11, !dbg !4427
  unreachable, !dbg !4427

bb2:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_7 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf9b97491bed6a1d5E(ptr align 8 %self) #10, !dbg !4428
  %_10 = icmp ult i64 %_7, 64, !dbg !4429
  %0 = call i1 @llvm.expect.i1(i1 %_10, i1 true), !dbg !4429
  br i1 %0, label %bb5, label %panic, !dbg !4429

bb5:                                              ; preds = %bb2
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %self, i64 0, i64 %_7, !dbg !4429
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %region, i64 24, i1 false), !dbg !4429
  %2 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4430
  %3 = load i64, ptr %2, align 8, !dbg !4430, !noundef !24
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %3, i64 1), !dbg !4430
  %_11.0 = extractvalue { i64, i1 } %4, 0, !dbg !4430
  %_11.1 = extractvalue { i64, i1 } %4, 1, !dbg !4430
  %5 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !4430
  br i1 %5, label %panic1, label %bb6, !dbg !4430

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64 %_7, i64 64, ptr align 8 @alloc_e65e0ba17a4d9de8b42e16f5ae86b726) #11, !dbg !4429
  unreachable, !dbg !4429

bb6:                                              ; preds = %bb5
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4430
  store i64 %_11.0, ptr %6, align 8, !dbg !4430
; call bootloader::bootinfo::memory_map::MemoryMap::sort
  call void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h6069cf93aa468d71E(ptr align 8 %self) #10, !dbg !4431
  ret void, !dbg !4432

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_6248fd711ab5313acabe549160484394) #11, !dbg !4430
  unreachable, !dbg !4430
}

; bootloader::bootinfo::memory_map::MemoryMap::sort
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h6069cf93aa468d71E(ptr align 8 %self) unnamed_addr #1 !dbg !4433 {
start:
  %first_zero_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, ptr }, align 8
  %_5 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4438, metadata !DIExpression()), !dbg !4441
; call core::slice::<impl [T]>::sort_unstable_by
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17heb695b36b9616ba4E"(ptr align 8 %self, i64 64) #10, !dbg !4442
; call core::slice::<impl [T]>::iter
  %0 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h32e552a6961cde6cE"(ptr align 8 %self, i64 64) #10, !dbg !4443
  store { ptr, ptr } %0, ptr %_7, align 8, !dbg !4443
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %1 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h08697ebb8c2e59cdE"(ptr align 8 %_7) #10, !dbg !4443
  store { i64, i64 } %1, ptr %_5, align 8, !dbg !4443
  %_10 = load i64, ptr %_5, align 8, !dbg !4444, !range !975, !noundef !24
  %2 = icmp eq i64 %_10, 1, !dbg !4444
  br i1 %2, label %bb4, label %bb5, !dbg !4444

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4445
  %first_zero_index = load i64, ptr %3, align 8, !dbg !4445, !noundef !24
  store i64 %first_zero_index, ptr %first_zero_index.dbg.spill, align 8, !dbg !4445
  call void @llvm.dbg.declare(metadata ptr %first_zero_index.dbg.spill, metadata !4439, metadata !DIExpression()), !dbg !4445
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4446
  store i64 %first_zero_index, ptr %4, align 8, !dbg !4446
  br label %bb5, !dbg !4447

bb5:                                              ; preds = %bb4, %start
  ret void, !dbg !4448
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17he8e951769960313fE"(ptr align 1 %_1, ptr align 8 %r1, ptr align 8 %r2) unnamed_addr #0 !dbg !4449 {
start:
  %r2.dbg.spill = alloca ptr, align 8
  %r1.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %ordering = alloca i8, align 1
  %_0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4457, metadata !DIExpression()), !dbg !4458
  store ptr %r1, ptr %r1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r1.dbg.spill, metadata !4453, metadata !DIExpression()), !dbg !4459
  store ptr %r2, ptr %r2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r2.dbg.spill, metadata !4454, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.declare(metadata ptr %ordering, metadata !4455, metadata !DIExpression()), !dbg !4461
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_4 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hd615813517ce551aE(ptr align 8 %r1) #10, !dbg !4462
  br i1 %_4, label %bb2, label %bb3, !dbg !4462

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_6 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hd615813517ce551aE(ptr align 8 %r2) #10, !dbg !4463
  br i1 %_6, label %bb5, label %bb6, !dbg !4463

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !4464
  br label %bb11, !dbg !4465

bb6:                                              ; preds = %bb3
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %0 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc4b9be0c1aea131eE"(ptr align 8 %r1, ptr align 8 %r2) #10, !dbg !4466, !range !623
  store i8 %0, ptr %ordering, align 1, !dbg !4466
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %_11 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7f77a1708ef0cb67E"(ptr align 1 %ordering, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #10, !dbg !4467
  br i1 %_11, label %bb9, label %bb10, !dbg !4467

bb5:                                              ; preds = %bb3
  store i8 -1, ptr %_0, align 1, !dbg !4468
  br label %bb11, !dbg !4469

bb10:                                             ; preds = %bb6
  %1 = load i8, ptr %ordering, align 1, !dbg !4470, !range !623, !noundef !24
  store i8 %1, ptr %_0, align 1, !dbg !4470
  br label %bb11, !dbg !4471

bb9:                                              ; preds = %bb6
  %_13 = getelementptr inbounds { i64, i64 }, ptr %r1, i32 0, i32 1, !dbg !4472
  %_14 = getelementptr inbounds { i64, i64 }, ptr %r2, i32 0, i32 1, !dbg !4473
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %2 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc4b9be0c1aea131eE"(ptr align 8 %_13, ptr align 8 %_14) #10, !dbg !4472, !range !623
  store i8 %2, ptr %_0, align 1, !dbg !4472
  br label %bb11, !dbg !4472

bb11:                                             ; preds = %bb2, %bb5, %bb9, %bb10
  %3 = load i8, ptr %_0, align 1, !dbg !4474, !range !623, !noundef !24
  ret i8 %3, !dbg !4474
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h8a1cf4f84702360cE"(ptr align 1 %_1, ptr align 8 %r) unnamed_addr #0 !dbg !4475 {
start:
  %r.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4481, metadata !DIExpression()), !dbg !4482
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !4480, metadata !DIExpression()), !dbg !4483
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_0 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hd615813517ce551aE(ptr align 8 %r) #10, !dbg !4484
  ret i1 %_0, !dbg !4485
}

; bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
; Function Attrs: noredzone nounwind
define internal i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf9b97491bed6a1d5E(ptr align 8 %self) unnamed_addr #1 !dbg !4486 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4492, metadata !DIExpression()), !dbg !4493
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4494
  %_2 = load i64, ptr %0, align 8, !dbg !4494, !noundef !24
  ret i64 %_2, !dbg !4495
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc3598e2966df9e9fE"(ptr align 8 %self) unnamed_addr #1 !dbg !4496 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_3 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4501, metadata !DIExpression()), !dbg !4502
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_4 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf9b97491bed6a1d5E(ptr align 8 %self) #10, !dbg !4503
  store i64 0, ptr %_3, align 8, !dbg !4504
  %0 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !4504
  store i64 %_4, ptr %0, align 8, !dbg !4504
  %1 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !4505
  %2 = load i64, ptr %1, align 8, !dbg !4505, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !4505
  %4 = load i64, ptr %3, align 8, !dbg !4505, !noundef !24
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %5 = call { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17ha1e54afdad5089e1E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_a9a5f479a6ab7535c0aea725524f514f) #10, !dbg !4505
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4505
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4505
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4506
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !4506
  ret { ptr, i64 } %7, !dbg !4506
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7d3840432d4b1d38E"(ptr align 8 %self) unnamed_addr #1 !dbg !4507 {
start:
  %next_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_5 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4512, metadata !DIExpression()), !dbg !4515
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %next_index = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf9b97491bed6a1d5E(ptr align 8 %self) #10, !dbg !4516
  store i64 %next_index, ptr %next_index.dbg.spill, align 8, !dbg !4516
  call void @llvm.dbg.declare(metadata ptr %next_index.dbg.spill, metadata !4513, metadata !DIExpression()), !dbg !4517
  store i64 0, ptr %_5, align 8, !dbg !4518
  %0 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4518
  store i64 %next_index, ptr %0, align 8, !dbg !4518
  %1 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !4519
  %2 = load i64, ptr %1, align 8, !dbg !4519, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4519
  %4 = load i64, ptr %3, align 8, !dbg !4519, !noundef !24
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h86468e1593045ca2E"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_122b717f2feef6dc36b614b35851cf3d) #10, !dbg !4519
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4519
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4519
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4520
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !4520
  ret { ptr, i64 } %7, !dbg !4520
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17hf1b5de1707c0d38cE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4521 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_5 = alloca %"core::fmt::builders::DebugList<'_, '_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4526, metadata !DIExpression()), !dbg !4528
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4527, metadata !DIExpression()), !dbg !4529
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17h21583441ebb19dffE(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") align 8 %_5, ptr align 8 %f) #10, !dbg !4530
; call <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc3598e2966df9e9fE"(ptr align 8 %self) #10, !dbg !4531
  %_7.0 = extractvalue { ptr, i64 } %0, 0, !dbg !4531
  %_7.1 = extractvalue { ptr, i64 } %0, 1, !dbg !4531
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h32e552a6961cde6cE"(ptr align 8 %_7.0, i64 %_7.1) #10, !dbg !4531
  %_6.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4531
  %_6.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4531
; call core::fmt::builders::DebugList::entries
  %_3 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17he8e132cae72ff5e7E(ptr align 8 %_5, ptr %_6.0, ptr %_6.1) #10, !dbg !4530
; call core::fmt::builders::DebugList::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17haa5812aae32592ccE(ptr align 8 %_3) #10, !dbg !4530
  ret i1 %_0, !dbg !4532
}

; bootloader::bootinfo::memory_map::MemoryRegion::empty
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17hd9078b7c7db73b08E(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_0) unnamed_addr #1 !dbg !4533 {
start:
  %_2 = alloca i32, align 4
  %_1 = alloca { i64, i64 }, align 8
  store i64 0, ptr %_1, align 8, !dbg !4537
  %0 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4537
  store i64 0, ptr %0, align 8, !dbg !4537
  store i32 11, ptr %_2, align 4, !dbg !4538
  %1 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 0, !dbg !4539
  %2 = load i64, ptr %1, align 8, !dbg !4539, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4539
  %4 = load i64, ptr %3, align 8, !dbg !4539, !noundef !24
  %5 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !4539
  store i64 %2, ptr %5, align 8, !dbg !4539
  %6 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4539
  store i64 %4, ptr %6, align 8, !dbg !4539
  %7 = load i32, ptr %_2, align 4, !dbg !4539, !range !4540, !noundef !24
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_0, i32 0, i32 1, !dbg !4539
  store i32 %7, ptr %8, align 8, !dbg !4539
  ret void, !dbg !4541
}

; bootloader::bootinfo::memory_map::FrameRange::new
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h3e97744cf5f76a75E(i64 %start_addr, i64 %end_addr) unnamed_addr #1 !dbg !4542 {
start:
  %last_byte.dbg.spill = alloca i64, align 8
  %end_addr.dbg.spill = alloca i64, align 8
  %start_addr.dbg.spill = alloca i64, align 8
  %_0 = alloca { i64, i64 }, align 8
  store i64 %start_addr, ptr %start_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %start_addr.dbg.spill, metadata !4547, metadata !DIExpression()), !dbg !4551
  store i64 %end_addr, ptr %end_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %end_addr.dbg.spill, metadata !4548, metadata !DIExpression()), !dbg !4552
  %_4.0 = sub i64 %end_addr, 1, !dbg !4553
  %_4.1 = icmp ult i64 %end_addr, 1, !dbg !4553
  %0 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !4553
  br i1 %0, label %panic, label %bb1, !dbg !4553

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %last_byte.dbg.spill, align 8, !dbg !4553
  call void @llvm.dbg.declare(metadata ptr %last_byte.dbg.spill, metadata !4549, metadata !DIExpression()), !dbg !4554
  %_5 = udiv i64 %start_addr, 4096, !dbg !4555
  %_8 = udiv i64 %_4.0, 4096, !dbg !4556
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_8, i64 1), !dbg !4556
  %_10.0 = extractvalue { i64, i1 } %1, 0, !dbg !4556
  %_10.1 = extractvalue { i64, i1 } %1, 1, !dbg !4556
  %2 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !4556
  br i1 %2, label %panic1, label %bb4, !dbg !4556

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.4, i64 33, ptr align 8 @alloc_cad8f68633be23a5a8047bc131d14ec3) #11, !dbg !4553
  unreachable, !dbg !4553

bb4:                                              ; preds = %bb1
  store i64 %_5, ptr %_0, align 8, !dbg !4557
  %3 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4557
  store i64 %_10.0, ptr %3, align 8, !dbg !4557
  %4 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !4558
  %5 = load i64, ptr %4, align 8, !dbg !4558, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4558
  %7 = load i64, ptr %6, align 8, !dbg !4558, !noundef !24
  %8 = insertvalue { i64, i64 } poison, i64 %5, 0, !dbg !4558
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !4558
  ret { i64, i64 } %9, !dbg !4558

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_9e0090e7731cd791b1d2228aa613acc1) #11, !dbg !4556
  unreachable, !dbg !4556
}

; bootloader::bootinfo::memory_map::FrameRange::is_empty
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hd615813517ce551aE(ptr align 8 %self) unnamed_addr #1 !dbg !4559 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4565, metadata !DIExpression()), !dbg !4566
  %_2 = load i64, ptr %self, align 8, !dbg !4567, !noundef !24
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4568
  %_3 = load i64, ptr %0, align 8, !dbg !4568, !noundef !24
  %_0 = icmp eq i64 %_2, %_3, !dbg !4567
  ret i1 %_0, !dbg !4569
}

; bootloader::bootinfo::memory_map::FrameRange::start_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17hdd1cf47dfe31224aE(ptr align 8 %self) unnamed_addr #1 !dbg !4570 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4575, metadata !DIExpression()), !dbg !4576
  %_2 = load i64, ptr %self, align 8, !dbg !4577, !noundef !24
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4577
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !4577
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !4577
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4577
  br i1 %1, label %panic, label %bb1, !dbg !4577

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4578

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_57ce308cfbee0eeaa37d0e2ac37f242e) #11, !dbg !4577
  unreachable, !dbg !4577
}

; bootloader::bootinfo::memory_map::FrameRange::end_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h22495d8bed64fc2cE(ptr align 8 %self) unnamed_addr #1 !dbg !4579 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4582, metadata !DIExpression()), !dbg !4583
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4584
  %_2 = load i64, ptr %0, align 8, !dbg !4584, !noundef !24
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4584
  %_3.0 = extractvalue { i64, i1 } %1, 0, !dbg !4584
  %_3.1 = extractvalue { i64, i1 } %1, 1, !dbg !4584
  %2 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4584
  br i1 %2, label %panic, label %bb1, !dbg !4584

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4585

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.6, i64 33, ptr align 8 @alloc_4848cdfc410b3d9eebbe30a8648bbf6f) #11, !dbg !4584
  unreachable, !dbg !4584
}

; <bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h1312abfded4f318bE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4586 {
start:
  %f.dbg.spill.i11 = alloca ptr, align 8
  %x.dbg.spill.i12 = alloca ptr, align 8
  %_0.i13 = alloca { ptr, ptr }, align 8
  %f.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i10 = alloca ptr, align 8
  %_0.i = alloca { ptr, ptr }, align 8
  %x.dbg.spill.i7 = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %width.dbg.spill.i1 = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i2 = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i3 = alloca i32, align 4
  %align.dbg.spill.i4 = alloca i8, align 1
  %fill.dbg.spill.i5 = alloca i32, align 4
  %position.dbg.spill.i6 = alloca i64, align 8
  %width.dbg.spill.i = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i = alloca i32, align 4
  %align.dbg.spill.i = alloca i8, align 1
  %fill.dbg.spill.i = alloca i32, align 4
  %position.dbg.spill.i = alloca i64, align 8
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_24 = alloca { i64, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_22 = alloca i8, align 1
  %_21 = alloca %"core::fmt::rt::Placeholder", align 8
  %_20 = alloca { i64, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_18 = alloca i8, align 1
  %_17 = alloca %"core::fmt::rt::Placeholder", align 8
  %_16 = alloca [2 x %"core::fmt::rt::Placeholder"], align 8
  %_13 = alloca i64, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca [2 x { ptr, ptr }], align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4591, metadata !DIExpression()), !dbg !4593
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4592, metadata !DIExpression()), !dbg !4594
; call bootloader::bootinfo::memory_map::FrameRange::start_addr
  %0 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17hdd1cf47dfe31224aE(ptr align 8 %self) #10, !dbg !4595
  store i64 %0, ptr %_10, align 8, !dbg !4595
  store ptr %_10, ptr %x.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i7, metadata !4596, metadata !DIExpression()), !dbg !4605
  store ptr %_10, ptr %x.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i10, metadata !4607, metadata !DIExpression()), !dbg !4617
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h7785b79be3621ff5E", ptr %f.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i, metadata !4616, metadata !DIExpression()), !dbg !4619
  store ptr %_10, ptr %_0.i, align 8, !dbg !4620
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_0.i, i32 0, i32 1, !dbg !4620
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h7785b79be3621ff5E", ptr %1, align 8, !dbg !4620
  %2 = load ptr, ptr %_0.i, align 8, !dbg !4621, !nonnull !24, !align !2216, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_0.i, i32 0, i32 1, !dbg !4621
  %4 = load ptr, ptr %3, align 8, !dbg !4621, !nonnull !24, !noundef !24
  %5 = insertvalue { ptr, ptr } poison, ptr %2, 0, !dbg !4621
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !4621
  %_0.0.i8 = extractvalue { ptr, ptr } %6, 0, !dbg !4622
  %_0.1.i9 = extractvalue { ptr, ptr } %6, 1, !dbg !4622
  %_8.0 = extractvalue { ptr, ptr } %6, 0, !dbg !4623
  %_8.1 = extractvalue { ptr, ptr } %6, 1, !dbg !4623
; call bootloader::bootinfo::memory_map::FrameRange::end_addr
  %7 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h22495d8bed64fc2cE(ptr align 8 %self) #10, !dbg !4624
  store i64 %7, ptr %_13, align 8, !dbg !4624
  store ptr %_13, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !4596, metadata !DIExpression()), !dbg !4625
  store ptr %_13, ptr %x.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i12, metadata !4607, metadata !DIExpression()), !dbg !4627
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h7785b79be3621ff5E", ptr %f.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i11, metadata !4616, metadata !DIExpression()), !dbg !4629
  store ptr %_13, ptr %_0.i13, align 8, !dbg !4630
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_0.i13, i32 0, i32 1, !dbg !4630
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h7785b79be3621ff5E", ptr %8, align 8, !dbg !4630
  %9 = load ptr, ptr %_0.i13, align 8, !dbg !4631, !nonnull !24, !align !2216, !noundef !24
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_0.i13, i32 0, i32 1, !dbg !4631
  %11 = load ptr, ptr %10, align 8, !dbg !4631, !nonnull !24, !noundef !24
  %12 = insertvalue { ptr, ptr } poison, ptr %9, 0, !dbg !4631
  %13 = insertvalue { ptr, ptr } %12, ptr %11, 1, !dbg !4631
  %_0.0.i = extractvalue { ptr, ptr } %13, 0, !dbg !4632
  %_0.1.i = extractvalue { ptr, ptr } %13, 1, !dbg !4632
  %_11.0 = extractvalue { ptr, ptr } %13, 0, !dbg !4623
  %_11.1 = extractvalue { ptr, ptr } %13, 1, !dbg !4623
  %14 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 0, !dbg !4623
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0, !dbg !4623
  store ptr %_8.0, ptr %15, align 8, !dbg !4623
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1, !dbg !4623
  store ptr %_8.1, ptr %16, align 8, !dbg !4623
  %17 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 1, !dbg !4623
  %18 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 0, !dbg !4623
  store ptr %_11.0, ptr %18, align 8, !dbg !4623
  %19 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 1, !dbg !4623
  store ptr %_11.1, ptr %19, align 8, !dbg !4623
  store i8 3, ptr %_18, align 1, !dbg !4623
  store i64 2, ptr %_19, align 8, !dbg !4623
  store i64 2, ptr %_20, align 8, !dbg !4623
  %20 = load i8, ptr %_18, align 1, !dbg !4623, !range !4633, !noundef !24
  %21 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !4623
  %22 = load i64, ptr %21, align 8, !dbg !4623, !range !4634, !noundef !24
  %23 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !4623
  %24 = load i64, ptr %23, align 8, !dbg !4623
  %25 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 0, !dbg !4623
  %26 = load i64, ptr %25, align 8, !dbg !4623, !range !4634, !noundef !24
  %27 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !4623
  %28 = load i64, ptr %27, align 8, !dbg !4623
  store i64 0, ptr %position.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i6, metadata !4635, metadata !DIExpression()), !dbg !4646
  store i32 32, ptr %fill.dbg.spill.i5, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i5, metadata !4641, metadata !DIExpression()), !dbg !4648
  store i8 %20, ptr %align.dbg.spill.i4, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i4, metadata !4642, metadata !DIExpression()), !dbg !4649
  store i32 4, ptr %flags.dbg.spill.i3, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i3, metadata !4643, metadata !DIExpression()), !dbg !4650
  store i64 %22, ptr %precision.dbg.spill.i2, align 8
  %29 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i2, i32 0, i32 1
  store i64 %24, ptr %29, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i2, metadata !4644, metadata !DIExpression()), !dbg !4651
  store i64 %26, ptr %width.dbg.spill.i1, align 8
  %30 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i1, i32 0, i32 1
  store i64 %28, ptr %30, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i1, metadata !4645, metadata !DIExpression()), !dbg !4652
  %31 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 2, !dbg !4653
  store i64 0, ptr %31, align 8, !dbg !4653
  %32 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 3, !dbg !4653
  store i32 32, ptr %32, align 8, !dbg !4653
  %33 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 5, !dbg !4653
  store i8 %20, ptr %33, align 8, !dbg !4653
  %34 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 4, !dbg !4653
  store i32 4, ptr %34, align 4, !dbg !4653
  store i64 %22, ptr %_17, align 8, !dbg !4653
  %35 = getelementptr inbounds { i64, i64 }, ptr %_17, i32 0, i32 1, !dbg !4653
  store i64 %24, ptr %35, align 8, !dbg !4653
  %36 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_17, i32 0, i32 1, !dbg !4653
  store i64 %26, ptr %36, align 8, !dbg !4653
  %37 = getelementptr inbounds { i64, i64 }, ptr %36, i32 0, i32 1, !dbg !4653
  store i64 %28, ptr %37, align 8, !dbg !4653
  store i8 3, ptr %_22, align 1, !dbg !4623
  store i64 2, ptr %_23, align 8, !dbg !4623
  store i64 2, ptr %_24, align 8, !dbg !4623
  %38 = load i8, ptr %_22, align 1, !dbg !4623, !range !4633, !noundef !24
  %39 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !4623
  %40 = load i64, ptr %39, align 8, !dbg !4623, !range !4634, !noundef !24
  %41 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !4623
  %42 = load i64, ptr %41, align 8, !dbg !4623
  %43 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 0, !dbg !4623
  %44 = load i64, ptr %43, align 8, !dbg !4623, !range !4634, !noundef !24
  %45 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 1, !dbg !4623
  %46 = load i64, ptr %45, align 8, !dbg !4623
  store i64 1, ptr %position.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i, metadata !4635, metadata !DIExpression()), !dbg !4654
  store i32 32, ptr %fill.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i, metadata !4641, metadata !DIExpression()), !dbg !4656
  store i8 %38, ptr %align.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !4642, metadata !DIExpression()), !dbg !4657
  store i32 4, ptr %flags.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i, metadata !4643, metadata !DIExpression()), !dbg !4658
  store i64 %40, ptr %precision.dbg.spill.i, align 8
  %47 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i, i32 0, i32 1
  store i64 %42, ptr %47, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i, metadata !4644, metadata !DIExpression()), !dbg !4659
  store i64 %44, ptr %width.dbg.spill.i, align 8
  %48 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i, i32 0, i32 1
  store i64 %46, ptr %48, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i, metadata !4645, metadata !DIExpression()), !dbg !4660
  %49 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 2, !dbg !4661
  store i64 1, ptr %49, align 8, !dbg !4661
  %50 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 3, !dbg !4661
  store i32 32, ptr %50, align 8, !dbg !4661
  %51 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 5, !dbg !4661
  store i8 %38, ptr %51, align 8, !dbg !4661
  %52 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 4, !dbg !4661
  store i32 4, ptr %52, align 4, !dbg !4661
  store i64 %40, ptr %_21, align 8, !dbg !4661
  %53 = getelementptr inbounds { i64, i64 }, ptr %_21, i32 0, i32 1, !dbg !4661
  store i64 %42, ptr %53, align 8, !dbg !4661
  %54 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_21, i32 0, i32 1, !dbg !4661
  store i64 %44, ptr %54, align 8, !dbg !4661
  %55 = getelementptr inbounds { i64, i64 }, ptr %54, i32 0, i32 1, !dbg !4661
  store i64 %46, ptr %55, align 8, !dbg !4661
  %56 = getelementptr inbounds [2 x %"core::fmt::rt::Placeholder"], ptr %_16, i64 0, i64 0, !dbg !4623
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %56, ptr align 8 %_17, i64 56, i1 false), !dbg !4623
  %57 = getelementptr inbounds [2 x %"core::fmt::rt::Placeholder"], ptr %_16, i64 0, i64 1, !dbg !4623
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %57, ptr align 8 %_21, i64 56, i1 false), !dbg !4623
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17he7eb429bc025dec6E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_3, ptr align 8 @alloc_b835a9d6c252fc7d7d9309678c4406b9, i64 3, ptr align 8 %_7, i64 2, ptr align 8 %_16, i64 2) #10, !dbg !4623
; call core::fmt::Formatter::write_fmt
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h8c3ad4cbee8d7481E(ptr align 8 %f, ptr align 8 %_3) #10, !dbg !4623
  ret i1 %_0, !dbg !4662
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::convert::From<bootloader::bootinfo::memory_map::E820MemoryRegion>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17heb393fbd0dfdf33cE"(ptr sret(%"bootinfo::memory_map::MemoryRegion") align 8 %_0, ptr align 8 %region) unnamed_addr #1 !dbg !4663 {
start:
  %f.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i1 = alloca ptr, align 8
  %_0.i = alloca { ptr, ptr }, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %_9 = alloca [1 x { ptr, ptr }], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %t = alloca i32, align 4
  %region_type = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4674, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.declare(metadata ptr %region_type, metadata !4675, metadata !DIExpression()), !dbg !4680
  call void @llvm.dbg.declare(metadata ptr %t, metadata !4677, metadata !DIExpression()), !dbg !4681
  %0 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4682
  %1 = load i32, ptr %0, align 8, !dbg !4682, !noundef !24
  switch i32 %1, label %bb1 [
    i32 1, label %bb2
    i32 2, label %bb3
    i32 3, label %bb4
    i32 4, label %bb5
    i32 5, label %bb6
  ], !dbg !4682

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4683
  %3 = load i32, ptr %2, align 8, !dbg !4683, !noundef !24
  store i32 %3, ptr %t, align 4, !dbg !4683
  store ptr %t, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !4684, metadata !DIExpression()), !dbg !4693
  store ptr %t, ptr %x.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i1, metadata !4695, metadata !DIExpression()), !dbg !4705
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17ha0fe94e56a803d71E", ptr %f.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill.i, metadata !4704, metadata !DIExpression()), !dbg !4707
  store ptr %t, ptr %_0.i, align 8, !dbg !4708
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_0.i, i32 0, i32 1, !dbg !4708
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17ha0fe94e56a803d71E", ptr %4, align 8, !dbg !4708
  %5 = load ptr, ptr %_0.i, align 8, !dbg !4709, !nonnull !24, !align !2216, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_0.i, i32 0, i32 1, !dbg !4709
  %7 = load ptr, ptr %6, align 8, !dbg !4709, !nonnull !24, !noundef !24
  %8 = insertvalue { ptr, ptr } poison, ptr %5, 0, !dbg !4709
  %9 = insertvalue { ptr, ptr } %8, ptr %7, 1, !dbg !4709
  %_0.0.i = extractvalue { ptr, ptr } %9, 0, !dbg !4710
  %_0.1.i = extractvalue { ptr, ptr } %9, 1, !dbg !4710
  %_10.0 = extractvalue { ptr, ptr } %9, 0, !dbg !4711
  %_10.1 = extractvalue { ptr, ptr } %9, 1, !dbg !4711
  %10 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_9, i64 0, i64 0, !dbg !4711
  %11 = getelementptr inbounds { ptr, ptr }, ptr %10, i32 0, i32 0, !dbg !4711
  store ptr %_10.0, ptr %11, align 8, !dbg !4711
  %12 = getelementptr inbounds { ptr, ptr }, ptr %10, i32 0, i32 1, !dbg !4711
  store ptr %_10.1, ptr %12, align 8, !dbg !4711
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hf53c1fa005f20e71E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_0a0c8f921f96ace4b9d73a9fb1f3a7e8, i64 1, ptr align 8 %_9, i64 1) #10, !dbg !4711
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h86da5b04361eb664E(ptr align 8 %_5, ptr align 8 @alloc_7aa2ce3965daa798a811db4359705d8b) #11, !dbg !4711
  unreachable, !dbg !4711

bb2:                                              ; preds = %start
  store i32 0, ptr %region_type, align 4, !dbg !4712
  br label %bb9, !dbg !4712

bb3:                                              ; preds = %start
  store i32 2, ptr %region_type, align 4, !dbg !4713
  br label %bb9, !dbg !4713

bb4:                                              ; preds = %start
  store i32 3, ptr %region_type, align 4, !dbg !4714
  br label %bb9, !dbg !4714

bb5:                                              ; preds = %start
  store i32 4, ptr %region_type, align 4, !dbg !4715
  br label %bb9, !dbg !4715

bb6:                                              ; preds = %start
  store i32 5, ptr %region_type, align 4, !dbg !4716
  br label %bb9, !dbg !4716

bb9:                                              ; preds = %bb6, %bb5, %bb4, %bb3, %bb2
  %_13 = load i64, ptr %region, align 8, !dbg !4717, !noundef !24
  %_15 = load i64, ptr %region, align 8, !dbg !4718, !noundef !24
  %13 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 1, !dbg !4719
  %_16 = load i64, ptr %13, align 8, !dbg !4719, !noundef !24
  %14 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 %_16), !dbg !4718
  %_17.0 = extractvalue { i64, i1 } %14, 0, !dbg !4718
  %_17.1 = extractvalue { i64, i1 } %14, 1, !dbg !4718
  %15 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !4718
  br i1 %15, label %panic, label %bb10, !dbg !4718

bb10:                                             ; preds = %bb9
; call bootloader::bootinfo::memory_map::FrameRange::new
  %16 = call { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h3e97744cf5f76a75E(i64 %_13, i64 %_17.0) #10, !dbg !4720
  %_12.0 = extractvalue { i64, i64 } %16, 0, !dbg !4720
  %_12.1 = extractvalue { i64, i64 } %16, 1, !dbg !4720
  %_18 = load i32, ptr %region_type, align 4, !dbg !4721, !range !4540, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 0, !dbg !4722
  store i64 %_12.0, ptr %17, align 8, !dbg !4722
  %18 = getelementptr inbounds { i64, i64 }, ptr %_0, i32 0, i32 1, !dbg !4722
  store i64 %_12.1, ptr %18, align 8, !dbg !4722
  %19 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_0, i32 0, i32 1, !dbg !4722
  store i32 %_18, ptr %19, align 8, !dbg !4722
  ret void, !dbg !4723

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_82eaa0d65834937aa85ffd9cf79e73a5) #11, !dbg !4718
  unreachable, !dbg !4718
}

; bootloader::bootinfo::BootInfo::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo3new17h70c3250ecad5e398E(ptr sret(%"bootinfo::BootInfo") align 8 %_0, ptr align 8 %memory_map, ptr align 8 %tls_template, i64 %recursive_page_table_addr, i64 %physical_memory_offset) unnamed_addr #1 !dbg !4724 {
start:
  %0 = alloca %"core::option::Option<bootinfo::TlsTemplate>", align 8
  %physical_memory_offset.dbg.spill = alloca i64, align 8
  %recursive_page_table_addr.dbg.spill = alloca i64, align 8
  %_6 = alloca %"bootinfo::TlsTemplate", align 8
  %tls_template1 = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %memory_map, metadata !4735, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.declare(metadata ptr %tls_template, metadata !4736, metadata !DIExpression()), !dbg !4742
  store i64 %recursive_page_table_addr, ptr %recursive_page_table_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %recursive_page_table_addr.dbg.spill, metadata !4737, metadata !DIExpression()), !dbg !4743
  store i64 %physical_memory_offset, ptr %physical_memory_offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %physical_memory_offset.dbg.spill, metadata !4738, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.declare(metadata ptr %tls_template1, metadata !4739, metadata !DIExpression()), !dbg !4745
  store i64 0, ptr %_6, align 8, !dbg !4746
  %1 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 1, !dbg !4746
  store i64 0, ptr %1, align 8, !dbg !4746
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 2, !dbg !4746
  store i64 0, ptr %2, align 8, !dbg !4746
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %tls_template, i64 32, i1 false), !dbg !4747
; call core::option::Option<T>::unwrap_or
  call void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h4627a3a7bfe75154E"(ptr sret(%"bootinfo::TlsTemplate") align 8 %tls_template1, ptr align 8 %0, ptr align 8 %_6) #10, !dbg !4747
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %memory_map, i64 1544, i1 false), !dbg !4748
  %3 = getelementptr inbounds %"bootinfo::BootInfo", ptr %_0, i32 0, i32 1, !dbg !4748
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %tls_template1, i64 24, i1 false), !dbg !4748
  %4 = getelementptr inbounds %"bootinfo::BootInfo", ptr %_0, i32 0, i32 2, !dbg !4748
  store i8 0, ptr %4, align 8, !dbg !4748
  ret void, !dbg !4749
}

; bootloader::bootinfo::BootInfo::tls_template
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo12tls_template17h08099e5180a5ef15E(ptr sret(%"core::option::Option<bootinfo::TlsTemplate>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !4750 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"bootinfo::TlsTemplate", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4756, metadata !DIExpression()), !dbg !4757
  %0 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4758
  %1 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %0, i32 0, i32 2, !dbg !4758
  %_3 = load i64, ptr %1, align 8, !dbg !4758, !noundef !24
  %_2 = icmp ugt i64 %_3, 0, !dbg !4758
  br i1 %_2, label %bb1, label %bb2, !dbg !4758

bb2:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !4759
  br label %bb3, !dbg !4760

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4761
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %2, i64 24, i1 false), !dbg !4761
  %3 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %_0, i32 0, i32 1, !dbg !4762
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_4, i64 24, i1 false), !dbg !4762
  store i64 1, ptr %_0, align 8, !dbg !4762
  br label %bb3, !dbg !4760

bb3:                                              ; preds = %bb1, %bb2
  ret void, !dbg !4763
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h3f8332eb316026afE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !4764 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4769, metadata !DIExpression()), !dbg !4771
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4770, metadata !DIExpression()), !dbg !4771
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4772
  store ptr %0, ptr %_10, align 8, !dbg !4772
; call core::fmt::Formatter::debug_struct_field2_finish
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h60e0e5bf97902c0cE(ptr align 8 %f, ptr align 1 @alloc_2fa382d66c8b05cee83d1e636a456d83, i64 12, ptr align 1 @alloc_c6d312f4fb2564cdde1868738b40e953, i64 5, ptr align 1 %self, ptr align 8 @vtable.8, ptr align 1 @alloc_24a09d864e93eaea8a967d85ad5fb14b, i64 11, ptr align 1 %_10, ptr align 8 @vtable.9) #10, !dbg !4771
  ret i1 %_0, !dbg !4773
}

; <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h92390aaa9d0166f9E"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #0 !dbg !4774 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_3 = alloca { ptr, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4779, metadata !DIExpression()), !dbg !4781
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4780, metadata !DIExpression()), !dbg !4781
  %0 = load i32, ptr %self, align 4, !dbg !4781, !range !4540, !noundef !24
  %_4 = zext i32 %0 to i64, !dbg !4781
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
    i64 10, label %bb13
    i64 11, label %bb14
    i64 12, label %bb15
    i64 13, label %bb16
    i64 14, label %bb1
  ], !dbg !4781

bb2:                                              ; preds = %start
  unreachable, !dbg !4781

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_3c5b86a9b7fa1d302afea08936e483c5, ptr %1, align 8, !dbg !4781
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 6, ptr %2, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_3e93a37ed61282b1c76f7355bd470201, ptr %3, align 8, !dbg !4781
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 5, ptr %4, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb5:                                              ; preds = %start
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_f09f4d0dabebc98449d61db8d60067bb, ptr %5, align 8, !dbg !4781
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 8, ptr %6, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb6:                                              ; preds = %start
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_405580fa38aa12693d369698203e043e, ptr %7, align 8, !dbg !4781
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 15, ptr %8, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb7:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_497f8f871d9b9bd5767a37917b988618, ptr %9, align 8, !dbg !4781
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 7, ptr %10, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb8:                                              ; preds = %start
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_2db2f360d33be2fea5593ededc5fb904, ptr %11, align 8, !dbg !4781
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 9, ptr %12, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb9:                                              ; preds = %start
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_bfff067230aa23bc581d3ad54a803735, ptr %13, align 8, !dbg !4781
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 6, ptr %14, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb10:                                             ; preds = %start
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_272cabb5c5fb66cc8e055c6a08dd5a38, ptr %15, align 8, !dbg !4781
  %16 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 11, ptr %16, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb11:                                             ; preds = %start
  %17 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_84113867da1e74b2269b5cf897cae626, ptr %17, align 8, !dbg !4781
  %18 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 9, ptr %18, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb12:                                             ; preds = %start
  %19 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_88f77a4216025d9c2616c4e0631b580d, ptr %19, align 8, !dbg !4781
  %20 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 10, ptr %20, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb13:                                             ; preds = %start
  %21 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_296c708f84ba4aacbf601faaf01ee90e, ptr %21, align 8, !dbg !4781
  %22 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 9, ptr %22, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb14:                                             ; preds = %start
  %23 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_59ba7b9f7211443cd55a366616eef46a, ptr %23, align 8, !dbg !4781
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 5, ptr %24, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb15:                                             ; preds = %start
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_1f9c4cc73f4140a97f2cf1f721646a68, ptr %25, align 8, !dbg !4781
  %26 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 8, ptr %26, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb16:                                             ; preds = %start
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_3faf0b3374c02c8ecbb0aba47045e793, ptr %27, align 8, !dbg !4781
  %28 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 7, ptr %28, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb1:                                              ; preds = %start
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  store ptr @alloc_4f458a5ac3a6382b3750f993ab870080, ptr %29, align 8, !dbg !4781
  %30 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  store i64 13, ptr %30, align 8, !dbg !4781
  br label %bb17, !dbg !4782

bb17:                                             ; preds = %bb1, %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3
  %31 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4781
  %32 = load ptr, ptr %31, align 8, !dbg !4781, !nonnull !24, !align !2216, !noundef !24
  %33 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4781
  %34 = load i64, ptr %33, align 8, !dbg !4781, !noundef !24
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17hecaca9dd3db43caaE(ptr align 8 %f, ptr align 1 %32, i64 %34) #10, !dbg !4781
  ret i1 %_0, !dbg !4783
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking14panic_nounwind17hafa7bbc5aebd387aE(ptr align 1, i64) unnamed_addr #5

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h87acba8518b3e71aE(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17h3a2c64103d45f668E(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h445216967f01bfb6E(i64, i64, ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint noredzone nounwind
declare align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17ha8a49470ed902c72E"(ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #6

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17heed0cd5537bda532E(ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint noredzone nounwind
declare void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h1644b1a76684955dE"(ptr sret(%"core::ops::range::RangeInclusive<usize>") align 8, i64, i64) unnamed_addr #0

; core::option::Option<T>::expect
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h922d0a4f7aeac359E"(i64, i64, ptr align 1, i64, ptr align 8) unnamed_addr #0

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h1612fbb90accac66E(ptr) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #6

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17ha0fe94e56a803d71E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h7785b79be3621ff5E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: noredzone nounwind
declare align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h18b24eb2339a3ad0E(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #7

; core::panicking::panic
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking5panic17hda2e7db96ada8c25E(ptr align 1, i64, ptr align 8) unnamed_addr #5

; core::panicking::panic_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking9panic_fmt17h86da5b04361eb664E(ptr align 8, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h7f0f60df0751b86aE(ptr) unnamed_addr #0

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17hf00e40cf33ae0c1fE(i64, i64, ptr align 8) unnamed_addr #5

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9a58c267ff3ccf88E"(i64, i64) unnamed_addr #0

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30436e101c7f44ddE"(ptr align 8) unnamed_addr #0

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17hbd0ef64810c3739bE(i64, i64) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdd9f5a1a0d3c7e32E"(i64, i64) unnamed_addr #0

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4fe22b5b7081441cE"(ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #8

; core::cmp::min
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3cmp3min17h8501c1cbcfddf070E(i64, i64) unnamed_addr #0

; core::panicking::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking13assert_failed17h4af24d267985d1beE(i8, ptr align 8, ptr align 8, ptr align 8, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #9

; core::fmt::Formatter::debug_list
; Function Attrs: noredzone nounwind
declare void @_ZN4core3fmt9Formatter10debug_list17h21583441ebb19dffE(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17haa5812aae32592ccE(ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h8c3ad4cbee8d7481E(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h60e0e5bf97902c0cE(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17hecaca9dd3db43caaE(ptr align 8, ptr align 1, i64) unnamed_addr #1

attributes #0 = { inlinehint noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #1 = { noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #2 = { cold noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #3 = { noinline noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { cold noinline noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #9 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!61, !62, !63}
!llvm.ident = !{!64}
!llvm.dbg.cu = !{!65}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !24, identifier: "4ea614e78a84b03a48f5689a9576f2e7")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !17, templateParams: !24, identifier: "ae73bbcc7df23a56faa74eac13fda099")
!14 = !DINamespace(name: "memory_map", scope: !15)
!15 = !DINamespace(name: "bootinfo", scope: !16)
!16 = !DINamespace(name: "bootloader", scope: null)
!17 = !{!18, !25}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !13, file: !2, baseType: !19, size: 128, align: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "FrameRange", scope: !14, file: !2, size: 128, align: 64, elements: !20, templateParams: !24, identifier: "79890155457c8a3b17db160f9ca95bbd")
!20 = !{!21, !23}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64)
!22 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!24 = !{}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !13, file: !2, baseType: !26, size: 32, align: 32, offset: 128)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MemoryRegionType", scope: !14, file: !2, baseType: !27, size: 32, align: 32, flags: DIFlagEnumClass, elements: !28)
!27 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43}
!29 = !DIEnumerator(name: "Usable", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "InUse", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "Reserved", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "AcpiReclaimable", value: 3, isUnsigned: true)
!33 = !DIEnumerator(name: "AcpiNvs", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "BadMemory", value: 5, isUnsigned: true)
!35 = !DIEnumerator(name: "Kernel", value: 6, isUnsigned: true)
!36 = !DIEnumerator(name: "KernelStack", value: 7, isUnsigned: true)
!37 = !DIEnumerator(name: "PageTable", value: 8, isUnsigned: true)
!38 = !DIEnumerator(name: "Bootloader", value: 9, isUnsigned: true)
!39 = !DIEnumerator(name: "FrameZero", value: 10, isUnsigned: true)
!40 = !DIEnumerator(name: "Empty", value: 11, isUnsigned: true)
!41 = !DIEnumerator(name: "BootInfo", value: 12, isUnsigned: true)
!42 = !DIEnumerator(name: "Package", value: 13, isUnsigned: true)
!43 = !DIEnumerator(name: "NonExhaustive", value: 14, isUnsigned: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !46, isLocal: true, isDefinition: true)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !47, vtableHolder: !19, templateParams: !24, identifier: "a0ed9f650882e04597190d6f8d1fc28d")
!47 = !{!48, !49, !50, !51}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !46, file: !2, baseType: !6, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !46, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !54, isLocal: true, isDefinition: true)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !55, vtableHolder: !60, templateParams: !24, identifier: "7c7ebcd05fc298f491462fb1c0af074")
!55 = !{!56, !57, !58, !59}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !54, file: !2, baseType: !6, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !54, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !26, size: 64, align: 64, dwarfAddressSpace: 0)
!61 = !{i32 8, !"PIC Level", i32 2}
!62 = !{i32 2, !"Dwarf Version", i32 4}
!63 = !{i32 2, !"Debug Info Version", i32 3}
!64 = !{!"rustc version 1.76.0-nightly (ba7c7a301 2023-11-13)"}
!65 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !66, producer: "clang LLVM (rustc version 1.76.0-nightly (ba7c7a301 2023-11-13))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !67, globals: !91, splitDebugInlining: false)
!66 = !DIFile(filename: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/lib.rs/@/bootloader.85e3987a0f8903c2-cgu.0", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23")
!67 = !{!26, !68, !78, !85}
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !69, file: !2, baseType: !72, size: 8, align: 8, flags: DIFlagEnumClass, elements: !73)
!69 = !DINamespace(name: "rt", scope: !70)
!70 = !DINamespace(name: "fmt", scope: !71)
!71 = !DINamespace(name: "core", scope: null)
!72 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!73 = !{!74, !75, !76, !77}
!74 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !79, file: !2, baseType: !80, size: 8, align: 8, flags: DIFlagEnumClass, elements: !81)
!79 = !DINamespace(name: "cmp", scope: !71)
!80 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!81 = !{!82, !83, !84}
!82 = !DIEnumerator(name: "Less", value: -1)
!83 = !DIEnumerator(name: "Equal", value: 0)
!84 = !DIEnumerator(name: "Greater", value: 1)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !86, file: !2, baseType: !72, size: 8, align: 8, flags: DIFlagEnumClass, elements: !87)
!86 = !DINamespace(name: "panicking", scope: !71)
!87 = !{!88, !89, !90}
!88 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!91 = !{!0, !44, !52}
!92 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h83a596239b62a04fE", scope: !94, file: !93, line: 371, type: !97, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !112)
!93 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "3c840ce7d2a4111e928814fb891a2983")
!94 = !DINamespace(name: "{impl#4}", scope: !95)
!95 = !DINamespace(name: "index", scope: !96)
!96 = !DINamespace(name: "slice", scope: !71)
!97 = !DISubroutineType(types: !98)
!98 = !{!99, !104, !99}
!99 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !100, templateParams: !24, identifier: "a0e3225902b339a6981bf9d9afa8f72e")
!100 = !{!101, !103}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !99, file: !2, baseType: !102, size: 64, align: 64)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !99, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!104 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !105, file: !2, size: 128, align: 64, elements: !107, templateParams: !110, identifier: "2e7c9f637610f7c8bcd4f8b8c5394da6")
!105 = !DINamespace(name: "range", scope: !106)
!106 = !DINamespace(name: "ops", scope: !71)
!107 = !{!108, !109}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !104, file: !2, baseType: !9, size: 64, align: 64)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !104, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!110 = !{!111}
!111 = !DITemplateTypeParameter(name: "Idx", type: !9)
!112 = !{!113, !114, !115, !117}
!113 = !DILocalVariable(name: "self", arg: 1, scope: !92, file: !93, line: 371, type: !104)
!114 = !DILocalVariable(name: "slice", arg: 2, scope: !92, file: !93, line: 371, type: !99)
!115 = !DILocalVariable(name: "this", scope: !116, file: !93, line: 372, type: !104, align: 8)
!116 = distinct !DILexicalBlock(scope: !92, file: !93, line: 372, column: 9)
!117 = !DILocalVariable(name: "new_len", scope: !118, file: !93, line: 383, type: !9, align: 8)
!118 = distinct !DILexicalBlock(scope: !116, file: !93, line: 383, column: 13)
!119 = !{!120}
!120 = !DITemplateTypeParameter(name: "T", type: !13)
!121 = !DILocation(line: 371, column: 29, scope: !92)
!122 = !DILocation(line: 371, column: 35, scope: !92)
!123 = !DILocation(line: 372, column: 13, scope: !116)
!124 = !DILocation(line: 372, column: 20, scope: !92)
!125 = !DILocation(line: 378, column: 13, scope: !116)
!126 = !DILocation(line: 383, column: 27, scope: !116)
!127 = !DILocation(line: 383, column: 17, scope: !118)
!128 = !DILocation(line: 384, column: 39, scope: !118)
!129 = !DILocalVariable(name: "self", arg: 1, scope: !130, file: !131, line: 938, type: !137)
!130 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17ha08adbeae6a2e8f8E", scope: !132, file: !131, line: 938, type: !135, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !138)
!131 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6623bc274bdcb4062d6d45b0018b7eff")
!132 = !DINamespace(name: "{impl#0}", scope: !133)
!133 = !DINamespace(name: "const_ptr", scope: !134)
!134 = !DINamespace(name: "ptr", scope: !71)
!135 = !DISubroutineType(types: !136)
!136 = !{!137, !137, !9}
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!138 = !{!129, !139}
!139 = !DILocalVariable(name: "count", arg: 2, scope: !130, file: !131, line: 938, type: !9)
!140 = !DILocation(line: 938, column: 29, scope: !130, inlinedAt: !141)
!141 = distinct !DILocation(line: 384, column: 39, scope: !118)
!142 = !DILocation(line: 938, column: 35, scope: !130, inlinedAt: !141)
!143 = !DILocation(line: 943, column: 18, scope: !130, inlinedAt: !141)
!144 = !DILocation(line: 384, column: 13, scope: !118)
!145 = !DILocation(line: 386, column: 6, scope: !92)
!146 = !DILocalVariable(name: "this", arg: 1, scope: !147, file: !148, line: 2530, type: !104)
!147 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hea570bbc3072774dE", scope: !149, file: !148, line: 2530, type: !150, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !152)
!148 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "e8aa50174eef049401f78bfc3f128d62")
!149 = !DINamespace(name: "get_unchecked", scope: !94)
!150 = !DISubroutineType(types: !151)
!151 = !{null, !104, !99}
!152 = !{!146, !153}
!153 = !DILocalVariable(name: "slice", arg: 2, scope: !147, file: !148, line: 2530, type: !99)
!154 = !DILocation(line: 2530, column: 39, scope: !147, inlinedAt: !155)
!155 = distinct !DILocation(line: 378, column: 13, scope: !116)
!156 = !DILocation(line: 381, column: 17, scope: !157, inlinedAt: !155)
!157 = !DILexicalBlockFile(scope: !147, file: !93, discriminator: 0)
!158 = !DILocation(line: 2533, column: 21, scope: !147, inlinedAt: !155)
!159 = !DILocation(line: 381, column: 55, scope: !157, inlinedAt: !155)
!160 = !DILocation(line: 381, column: 43, scope: !157, inlinedAt: !155)
!161 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc580f5cbc6732e7eE", scope: !94, file: !93, line: 389, type: !162, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !168)
!162 = !DISubroutineType(types: !163)
!163 = !{!164, !104, !164}
!164 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !165, templateParams: !24, identifier: "b6a4f591be40aa77bbacbcf6e243c6ae")
!165 = !{!166, !167}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !164, file: !2, baseType: !102, size: 64, align: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !164, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!168 = !{!169, !170, !171, !173}
!169 = !DILocalVariable(name: "self", arg: 1, scope: !161, file: !93, line: 389, type: !104)
!170 = !DILocalVariable(name: "slice", arg: 2, scope: !161, file: !93, line: 389, type: !164)
!171 = !DILocalVariable(name: "this", scope: !172, file: !93, line: 390, type: !104, align: 8)
!172 = distinct !DILexicalBlock(scope: !161, file: !93, line: 390, column: 9)
!173 = !DILocalVariable(name: "new_len", scope: !174, file: !93, line: 398, type: !9, align: 8)
!174 = distinct !DILexicalBlock(scope: !172, file: !93, line: 398, column: 13)
!175 = !DILocation(line: 389, column: 33, scope: !161)
!176 = !DILocation(line: 389, column: 39, scope: !161)
!177 = !DILocation(line: 390, column: 13, scope: !172)
!178 = !DILocation(line: 390, column: 20, scope: !161)
!179 = !DILocation(line: 393, column: 13, scope: !172)
!180 = !DILocation(line: 398, column: 27, scope: !172)
!181 = !DILocation(line: 398, column: 17, scope: !174)
!182 = !DILocalVariable(name: "self", arg: 1, scope: !183, file: !184, line: 2049, type: !164)
!183 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hb3437042e7801383E", scope: !185, file: !184, line: 2049, type: !187, scopeLine: 2049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !190)
!184 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "922304d1f6a37760708bafbc903597a3")
!185 = !DINamespace(name: "{impl#1}", scope: !186)
!186 = !DINamespace(name: "mut_ptr", scope: !134)
!187 = !DISubroutineType(types: !188)
!188 = !{!189, !164}
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!190 = !{!182}
!191 = !DILocation(line: 2049, column: 29, scope: !183, inlinedAt: !192)
!192 = distinct !DILocation(line: 399, column: 43, scope: !174)
!193 = !DILocalVariable(name: "self", arg: 1, scope: !194, file: !184, line: 1039, type: !189)
!194 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hc409ca25dde5d324E", scope: !195, file: !184, line: 1039, type: !196, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !198)
!195 = !DINamespace(name: "{impl#0}", scope: !186)
!196 = !DISubroutineType(types: !197)
!197 = !{!189, !189, !9}
!198 = !{!193, !199}
!199 = !DILocalVariable(name: "count", arg: 2, scope: !194, file: !184, line: 1039, type: !9)
!200 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !201)
!201 = distinct !DILocation(line: 399, column: 43, scope: !174)
!202 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !201)
!203 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !201)
!204 = !DILocation(line: 399, column: 13, scope: !174)
!205 = !DILocation(line: 401, column: 6, scope: !161)
!206 = !DILocalVariable(name: "this", arg: 1, scope: !207, file: !148, line: 2530, type: !104)
!207 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h988f3603c7e138a1E", scope: !208, file: !148, line: 2530, type: !209, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !211)
!208 = !DINamespace(name: "get_unchecked_mut", scope: !94)
!209 = !DISubroutineType(types: !210)
!210 = !{null, !104, !164}
!211 = !{!206, !212}
!212 = !DILocalVariable(name: "slice", arg: 2, scope: !207, file: !148, line: 2530, type: !164)
!213 = !DILocation(line: 2530, column: 39, scope: !207, inlinedAt: !214)
!214 = distinct !DILocation(line: 393, column: 13, scope: !172)
!215 = !DILocation(line: 396, column: 17, scope: !216, inlinedAt: !214)
!216 = !DILexicalBlockFile(scope: !207, file: !93, discriminator: 0)
!217 = !DILocation(line: 2533, column: 21, scope: !207, inlinedAt: !214)
!218 = !DILocalVariable(name: "self", arg: 1, scope: !219, file: !184, line: 1913, type: !164)
!219 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17hb338e75c3798b085E", scope: !185, file: !184, line: 1913, type: !220, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !222)
!220 = !DISubroutineType(types: !221)
!221 = !{!9, !164}
!222 = !{!218}
!223 = !DILocation(line: 1913, column: 22, scope: !219, inlinedAt: !224)
!224 = distinct !DILocation(line: 396, column: 55, scope: !216, inlinedAt: !214)
!225 = !DILocation(line: 1914, column: 9, scope: !219, inlinedAt: !224)
!226 = !DILocation(line: 396, column: 43, scope: !216, inlinedAt: !214)
!227 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc851aaff882244beE", scope: !94, file: !93, line: 404, type: !228, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !247)
!228 = !DISubroutineType(types: !229)
!229 = !{!230, !104, !230, !234}
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !231, templateParams: !24, identifier: "60d1d92566e533ee584123a582a833e")
!231 = !{!232, !233}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !230, file: !2, baseType: !102, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !230, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !235, size: 64, align: 64, dwarfAddressSpace: 0)
!235 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !236, file: !2, size: 192, align: 64, elements: !238, templateParams: !24, identifier: "a68ef39517a8f6a18b92c5cef289207f")
!236 = !DINamespace(name: "location", scope: !237)
!237 = !DINamespace(name: "panic", scope: !71)
!238 = !{!239, !245, !246}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !235, file: !2, baseType: !240, size: 128, align: 64)
!240 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !241, templateParams: !24, identifier: "857c99401054bcaa39f98e6e0c6d74b")
!241 = !{!242, !244}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !240, file: !2, baseType: !243, size: 64, align: 64)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64, align: 64, dwarfAddressSpace: 0)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !240, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !235, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !235, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!247 = !{!248, !249}
!248 = !DILocalVariable(name: "self", arg: 1, scope: !227, file: !93, line: 404, type: !104)
!249 = !DILocalVariable(name: "slice", arg: 2, scope: !227, file: !93, line: 404, type: !230)
!250 = !DILocation(line: 404, column: 14, scope: !227)
!251 = !DILocation(line: 404, column: 20, scope: !227)
!252 = !DILocation(line: 405, column: 12, scope: !227)
!253 = !DILocation(line: 407, column: 19, scope: !227)
!254 = !DILocation(line: 406, column: 13, scope: !227)
!255 = !DILocation(line: 411, column: 20, scope: !227)
!256 = !DILocation(line: 412, column: 6, scope: !227)
!257 = !DILocation(line: 408, column: 13, scope: !227)
!258 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h00dbb4f262465463E", scope: !94, file: !93, line: 415, type: !259, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !265)
!259 = !DISubroutineType(types: !260)
!260 = !{!261, !104, !261, !234}
!261 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !262, templateParams: !24, identifier: "64972fd5f24aed6a4e5c01517b741601")
!262 = !{!263, !264}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !261, file: !2, baseType: !102, size: 64, align: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !261, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!265 = !{!266, !267}
!266 = !DILocalVariable(name: "self", arg: 1, scope: !258, file: !93, line: 415, type: !104)
!267 = !DILocalVariable(name: "slice", arg: 2, scope: !258, file: !93, line: 415, type: !261)
!268 = !DILocation(line: 415, column: 18, scope: !258)
!269 = !DILocation(line: 415, column: 24, scope: !258)
!270 = !DILocation(line: 416, column: 12, scope: !258)
!271 = !DILocation(line: 418, column: 19, scope: !258)
!272 = !DILocation(line: 417, column: 13, scope: !258)
!273 = !DILocation(line: 422, column: 24, scope: !258)
!274 = !DILocation(line: 423, column: 6, scope: !258)
!275 = !DILocation(line: 419, column: 13, scope: !258)
!276 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3ecb26fdf4fda53eE", scope: !277, file: !93, line: 459, type: !278, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !283)
!277 = !DINamespace(name: "{impl#5}", scope: !95)
!278 = !DISubroutineType(types: !279)
!279 = !{!261, !280, !261, !234}
!280 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !105, file: !2, size: 64, align: 64, elements: !281, templateParams: !110, identifier: "85d1b0995cf38c861ce0b27bf4f70b14")
!281 = !{!282}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !280, file: !2, baseType: !9, size: 64, align: 64)
!283 = !{!284, !285}
!284 = !DILocalVariable(name: "self", arg: 1, scope: !276, file: !93, line: 459, type: !280)
!285 = !DILocalVariable(name: "slice", arg: 2, scope: !276, file: !93, line: 459, type: !261)
!286 = !DILocation(line: 459, column: 18, scope: !276)
!287 = !DILocation(line: 459, column: 24, scope: !276)
!288 = !DILocation(line: 460, column: 9, scope: !276)
!289 = !DILocation(line: 461, column: 6, scope: !276)
!290 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h6ee02f0487be30d8E", scope: !291, file: !93, line: 486, type: !292, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !297)
!291 = !DINamespace(name: "{impl#6}", scope: !95)
!292 = !DISubroutineType(types: !293)
!293 = !{!164, !294, !164}
!294 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !105, file: !2, size: 64, align: 64, elements: !295, templateParams: !110, identifier: "b027d8f1ff87064a6e8f2281ec1e6042")
!295 = !{!296}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !294, file: !2, baseType: !9, size: 64, align: 64)
!297 = !{!298, !299}
!298 = !DILocalVariable(name: "self", arg: 1, scope: !290, file: !93, line: 486, type: !294)
!299 = !DILocalVariable(name: "slice", arg: 2, scope: !290, file: !93, line: 486, type: !164)
!300 = !DILocation(line: 486, column: 33, scope: !290)
!301 = !DILocation(line: 486, column: 39, scope: !290)
!302 = !DILocation(line: 1913, column: 22, scope: !219, inlinedAt: !303)
!303 = distinct !DILocation(line: 488, column: 31, scope: !290)
!304 = !DILocation(line: 1914, column: 9, scope: !219, inlinedAt: !303)
!305 = !DILocation(line: 488, column: 18, scope: !290)
!306 = !DILocation(line: 489, column: 6, scope: !290)
!307 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3aad44e1dfa59307E", scope: !291, file: !93, line: 501, type: !308, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !310)
!308 = !DISubroutineType(types: !309)
!309 = !{!261, !294, !261, !234}
!310 = !{!311, !312}
!311 = !DILocalVariable(name: "self", arg: 1, scope: !307, file: !93, line: 501, type: !294)
!312 = !DILocalVariable(name: "slice", arg: 2, scope: !307, file: !93, line: 501, type: !261)
!313 = !DILocation(line: 501, column: 18, scope: !307)
!314 = !DILocation(line: 501, column: 24, scope: !307)
!315 = !DILocation(line: 502, column: 12, scope: !307)
!316 = !DILocation(line: 506, column: 24, scope: !307)
!317 = !DILocation(line: 507, column: 6, scope: !307)
!318 = !DILocation(line: 503, column: 13, scope: !307)
!319 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5cea7d7c0b96f9fdE", scope: !320, file: !93, line: 582, type: !321, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !329)
!320 = !DINamespace(name: "{impl#8}", scope: !95)
!321 = !DISubroutineType(types: !322)
!322 = !{!261, !323, !261, !234}
!323 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !105, file: !2, size: 192, align: 64, elements: !324, templateParams: !110, identifier: "4e9d3a9151679b7673d68faeccdc6f41")
!324 = !{!325, !326, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !323, file: !2, baseType: !9, size: 64, align: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !323, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !323, file: !2, baseType: !328, size: 8, align: 8, offset: 128)
!328 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!329 = !{!330, !331}
!330 = !DILocalVariable(name: "self", arg: 1, scope: !319, file: !93, line: 582, type: !323)
!331 = !DILocalVariable(name: "slice", arg: 2, scope: !319, file: !93, line: 582, type: !261)
!332 = !DILocation(line: 582, column: 18, scope: !319)
!333 = !DILocation(line: 582, column: 24, scope: !319)
!334 = !DILocation(line: 583, column: 13, scope: !319)
!335 = !DILocation(line: 583, column: 12, scope: !319)
!336 = !DILocation(line: 586, column: 9, scope: !319)
!337 = !DILocation(line: 587, column: 6, scope: !319)
!338 = !DILocation(line: 584, column: 13, scope: !319)
!339 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3dd50a8bdf5b4973E", scope: !340, file: !93, line: 623, type: !341, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !346)
!340 = !DINamespace(name: "{impl#9}", scope: !95)
!341 = !DISubroutineType(types: !342)
!342 = !{!261, !343, !261, !234}
!343 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeToInclusive<usize>", scope: !105, file: !2, size: 64, align: 64, elements: !344, templateParams: !110, identifier: "d281d0fb246265d83669bc94236a9acd")
!344 = !{!345}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !343, file: !2, baseType: !9, size: 64, align: 64)
!346 = !{!347, !348}
!347 = !DILocalVariable(name: "self", arg: 1, scope: !339, file: !93, line: 623, type: !343)
!348 = !DILocalVariable(name: "slice", arg: 2, scope: !339, file: !93, line: 623, type: !261)
!349 = !DILocation(line: 623, column: 18, scope: !339)
!350 = !DILocation(line: 623, column: 24, scope: !339)
!351 = !DILocation(line: 624, column: 9, scope: !339)
!352 = !DILocation(line: 625, column: 6, scope: !339)
!353 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h05876b06ccd65c5fE", scope: !355, file: !354, line: 2294, type: !356, scopeLine: 2294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !411)
!354 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "f2f9e528240e472a11f8ea13e1ff6e2a")
!355 = !DINamespace(name: "{impl#53}", scope: !70)
!356 = !DISubroutineType(types: !357)
!357 = !{!358, !376, !377}
!358 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !359, file: !2, size: 8, align: 8, elements: !360, templateParams: !24, identifier: "5906980ec2ccb3af508e25734fbaa418")
!359 = !DINamespace(name: "result", scope: !71)
!360 = !{!361}
!361 = !DICompositeType(tag: DW_TAG_variant_part, scope: !358, file: !2, size: 8, align: 8, elements: !362, templateParams: !24, identifier: "2c5b4413825924499a56ad4a433d0021", discriminator: !375)
!362 = !{!363, !371}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !361, file: !2, baseType: !364, size: 8, align: 8, extraData: i128 0)
!364 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !358, file: !2, size: 8, align: 8, elements: !365, templateParams: !367, identifier: "70d6e79ec069b99f31e01d9377a553df")
!365 = !{!366}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !364, file: !2, baseType: !7, align: 8, offset: 8)
!367 = !{!368, !369}
!368 = !DITemplateTypeParameter(name: "T", type: !7)
!369 = !DITemplateTypeParameter(name: "E", type: !370)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !70, file: !2, align: 8, elements: !24, identifier: "7cf1d36f9f5530ad90fe20120d4add11")
!371 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !361, file: !2, baseType: !372, size: 8, align: 8, extraData: i128 1)
!372 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !358, file: !2, size: 8, align: 8, elements: !373, templateParams: !367, identifier: "be467791cc63661846c3afad316d5207")
!373 = !{!374}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !372, file: !2, baseType: !370, align: 8, offset: 8)
!375 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !2, baseType: !72, size: 8, align: 8, flags: DIFlagArtificial)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !378, size: 64, align: 64, dwarfAddressSpace: 0)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !70, file: !2, size: 512, align: 64, elements: !379, templateParams: !24, identifier: "ed4a662b402d031f445599da2c616ab4")
!379 = !{!380, !381, !383, !384, !399, !400}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !378, file: !2, baseType: !27, size: 32, align: 32, offset: 416)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !378, file: !2, baseType: !382, size: 32, align: 32, offset: 384)
!382 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !378, file: !2, baseType: !68, size: 8, align: 8, offset: 448)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !378, file: !2, baseType: !385, size: 128, align: 64)
!385 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !386, file: !2, size: 128, align: 64, elements: !387, templateParams: !24, identifier: "f3292132f78c3f758153a6fec94906eb")
!386 = !DINamespace(name: "option", scope: !71)
!387 = !{!388}
!388 = !DICompositeType(tag: DW_TAG_variant_part, scope: !385, file: !2, size: 128, align: 64, elements: !389, templateParams: !24, identifier: "235b53a376875e355595925d79f90f5", discriminator: !398)
!389 = !{!390, !394}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !388, file: !2, baseType: !391, size: 128, align: 64, extraData: i128 0)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !385, file: !2, size: 128, align: 64, elements: !24, templateParams: !392, identifier: "e1fa595885c4b1e1111e41f04327bb63")
!392 = !{!393}
!393 = !DITemplateTypeParameter(name: "T", type: !9)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !388, file: !2, baseType: !395, size: 128, align: 64, extraData: i128 1)
!395 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !385, file: !2, size: 128, align: 64, elements: !396, templateParams: !392, identifier: "f8b7ab10848a3bce778f6027cbe197c")
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !395, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, scope: !385, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !378, file: !2, baseType: !385, size: 128, align: 64, offset: 128)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !378, file: !2, baseType: !401, size: 128, align: 64, offset: 256)
!401 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !402, templateParams: !24, identifier: "45a523bb8347e310abf3ef4b1db60355")
!402 = !{!403, !406}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !401, file: !2, baseType: !404, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64, dwarfAddressSpace: 0)
!405 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !24, identifier: "e9530a1d4a400337edd68c537c611404")
!406 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !401, file: !2, baseType: !407, size: 64, align: 64, offset: 64)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !408, size: 64, align: 64, dwarfAddressSpace: 0)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !409)
!409 = !{!410}
!410 = !DISubrange(count: 3, lowerBound: 0)
!411 = !{!412, !413}
!412 = !DILocalVariable(name: "self", arg: 1, scope: !353, file: !354, line: 2294, type: !376)
!413 = !DILocalVariable(name: "f", arg: 2, scope: !353, file: !354, line: 2294, type: !377)
!414 = !DILocation(line: 2294, column: 20, scope: !353)
!415 = !DILocation(line: 2294, column: 27, scope: !353)
!416 = !DILocation(line: 2294, column: 71, scope: !353)
!417 = !{i64 8}
!418 = !DILocation(line: 2294, column: 62, scope: !353)
!419 = !DILocation(line: 2294, column: 84, scope: !353)
!420 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h564186a1046fd108E", scope: !355, file: !354, line: 2294, type: !421, scopeLine: 2294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !427, retainedNodes: !424)
!421 = !DISubroutineType(types: !422)
!422 = !{!358, !423, !377}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!424 = !{!425, !426}
!425 = !DILocalVariable(name: "self", arg: 1, scope: !420, file: !354, line: 2294, type: !423)
!426 = !DILocalVariable(name: "f", arg: 2, scope: !420, file: !354, line: 2294, type: !377)
!427 = !{!428}
!428 = !DITemplateTypeParameter(name: "T", type: !26)
!429 = !DILocation(line: 2294, column: 20, scope: !420)
!430 = !DILocation(line: 2294, column: 27, scope: !420)
!431 = !DILocation(line: 2294, column: 71, scope: !420)
!432 = !{i64 4}
!433 = !DILocation(line: 2294, column: 62, scope: !420)
!434 = !DILocation(line: 2294, column: 84, scope: !420)
!435 = distinct !DISubprogram(name: "is_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17h2a00735316d394b7E", scope: !436, file: !148, line: 2569, type: !437, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, retainedNodes: !440)
!436 = !DINamespace(name: "intrinsics", scope: !71)
!437 = !DISubroutineType(types: !438)
!438 = !{!328, !439, !439, !9}
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!440 = !{!441, !442, !443, !444, !446, !448, !450}
!441 = !DILocalVariable(name: "src", arg: 1, scope: !435, file: !148, line: 2569, type: !439)
!442 = !DILocalVariable(name: "dst", arg: 2, scope: !435, file: !148, line: 2569, type: !439)
!443 = !DILocalVariable(name: "count", arg: 3, scope: !435, file: !148, line: 2569, type: !9)
!444 = !DILocalVariable(name: "src_usize", scope: !445, file: !148, line: 2570, type: !9, align: 8)
!445 = distinct !DILexicalBlock(scope: !435, file: !148, line: 2570, column: 5)
!446 = !DILocalVariable(name: "dst_usize", scope: !447, file: !148, line: 2571, type: !9, align: 8)
!447 = distinct !DILexicalBlock(scope: !445, file: !148, line: 2571, column: 5)
!448 = !DILocalVariable(name: "size", scope: !449, file: !148, line: 2572, type: !9, align: 8)
!449 = distinct !DILexicalBlock(scope: !447, file: !148, line: 2572, column: 5)
!450 = !DILocalVariable(name: "diff", scope: !451, file: !148, line: 2575, type: !9, align: 8)
!451 = distinct !DILexicalBlock(scope: !449, file: !148, line: 2575, column: 5)
!452 = !DILocation(line: 2569, column: 36, scope: !435)
!453 = !DILocation(line: 2569, column: 51, scope: !435)
!454 = !DILocation(line: 2569, column: 66, scope: !435)
!455 = !DILocalVariable(name: "self", arg: 1, scope: !456, file: !131, line: 206, type: !439)
!456 = distinct !DISubprogram(name: "addr<usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h37e905645c87bceeE", scope: !132, file: !131, line: 206, type: !457, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, retainedNodes: !459)
!457 = !DISubroutineType(types: !458)
!458 = !{!9, !439}
!459 = !{!455}
!460 = !DILocation(line: 206, column: 17, scope: !456, inlinedAt: !461)
!461 = distinct !DILocation(line: 2570, column: 21, scope: !435)
!462 = !DILocalVariable(name: "self", arg: 1, scope: !463, file: !131, line: 60, type: !439)
!463 = distinct !DISubprogram(name: "cast<usize, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h4a6ed1e5b38b1fecE", scope: !132, file: !131, line: 60, type: !464, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !467, retainedNodes: !466)
!464 = !DISubroutineType(types: !465)
!465 = !{!6, !439}
!466 = !{!462}
!467 = !{!393, !468}
!468 = !DITemplateTypeParameter(name: "U", type: !7)
!469 = !DILocation(line: 60, column: 26, scope: !463, inlinedAt: !470)
!470 = distinct !DILocation(line: 210, column: 33, scope: !456, inlinedAt: !461)
!471 = !DILocation(line: 210, column: 18, scope: !456, inlinedAt: !461)
!472 = !DILocation(line: 2570, column: 21, scope: !435)
!473 = !DILocation(line: 2570, column: 9, scope: !445)
!474 = !DILocation(line: 206, column: 17, scope: !456, inlinedAt: !475)
!475 = distinct !DILocation(line: 2571, column: 21, scope: !445)
!476 = !DILocation(line: 60, column: 26, scope: !463, inlinedAt: !477)
!477 = distinct !DILocation(line: 210, column: 33, scope: !456, inlinedAt: !475)
!478 = !DILocation(line: 210, column: 18, scope: !456, inlinedAt: !475)
!479 = !DILocation(line: 2571, column: 21, scope: !445)
!480 = !DILocation(line: 2571, column: 9, scope: !447)
!481 = !DILocation(line: 2572, column: 16, scope: !447)
!482 = !DILocation(line: 2572, column: 9, scope: !449)
!483 = !DILocation(line: 2575, column: 16, scope: !449)
!484 = !DILocation(line: 2575, column: 9, scope: !451)
!485 = !DILocation(line: 2578, column: 5, scope: !451)
!486 = !DILocation(line: 2579, column: 2, scope: !435)
!487 = distinct !DISubprogram(name: "is_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17h4f829229d2573128E", scope: !436, file: !148, line: 2569, type: !488, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !490)
!488 = !DISubroutineType(types: !489)
!489 = !{!328, !137, !137, !9}
!490 = !{!491, !492, !493, !494, !496, !498, !500}
!491 = !DILocalVariable(name: "src", arg: 1, scope: !487, file: !148, line: 2569, type: !137)
!492 = !DILocalVariable(name: "dst", arg: 2, scope: !487, file: !148, line: 2569, type: !137)
!493 = !DILocalVariable(name: "count", arg: 3, scope: !487, file: !148, line: 2569, type: !9)
!494 = !DILocalVariable(name: "src_usize", scope: !495, file: !148, line: 2570, type: !9, align: 8)
!495 = distinct !DILexicalBlock(scope: !487, file: !148, line: 2570, column: 5)
!496 = !DILocalVariable(name: "dst_usize", scope: !497, file: !148, line: 2571, type: !9, align: 8)
!497 = distinct !DILexicalBlock(scope: !495, file: !148, line: 2571, column: 5)
!498 = !DILocalVariable(name: "size", scope: !499, file: !148, line: 2572, type: !9, align: 8)
!499 = distinct !DILexicalBlock(scope: !497, file: !148, line: 2572, column: 5)
!500 = !DILocalVariable(name: "diff", scope: !501, file: !148, line: 2575, type: !9, align: 8)
!501 = distinct !DILexicalBlock(scope: !499, file: !148, line: 2575, column: 5)
!502 = !DILocation(line: 2569, column: 36, scope: !487)
!503 = !DILocation(line: 2569, column: 51, scope: !487)
!504 = !DILocation(line: 2569, column: 66, scope: !487)
!505 = !DILocalVariable(name: "self", arg: 1, scope: !506, file: !131, line: 206, type: !137)
!506 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0d4c48a2c884c23bE", scope: !132, file: !131, line: 206, type: !507, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !509)
!507 = !DISubroutineType(types: !508)
!508 = !{!9, !137}
!509 = !{!505}
!510 = !DILocation(line: 206, column: 17, scope: !506, inlinedAt: !511)
!511 = distinct !DILocation(line: 2570, column: 21, scope: !487)
!512 = !DILocalVariable(name: "self", arg: 1, scope: !513, file: !131, line: 60, type: !137)
!513 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc5b9e19526cdfdfaE", scope: !132, file: !131, line: 60, type: !514, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !517, retainedNodes: !516)
!514 = !DISubroutineType(types: !515)
!515 = !{!6, !137}
!516 = !{!512}
!517 = !{!120, !468}
!518 = !DILocation(line: 60, column: 26, scope: !513, inlinedAt: !519)
!519 = distinct !DILocation(line: 210, column: 33, scope: !506, inlinedAt: !511)
!520 = !DILocation(line: 210, column: 18, scope: !506, inlinedAt: !511)
!521 = !DILocation(line: 2570, column: 21, scope: !487)
!522 = !DILocation(line: 2570, column: 9, scope: !495)
!523 = !DILocation(line: 206, column: 17, scope: !506, inlinedAt: !524)
!524 = distinct !DILocation(line: 2571, column: 21, scope: !495)
!525 = !DILocation(line: 60, column: 26, scope: !513, inlinedAt: !526)
!526 = distinct !DILocation(line: 210, column: 33, scope: !506, inlinedAt: !524)
!527 = !DILocation(line: 210, column: 18, scope: !506, inlinedAt: !524)
!528 = !DILocation(line: 2571, column: 21, scope: !495)
!529 = !DILocation(line: 2571, column: 9, scope: !497)
!530 = !DILocation(line: 2572, column: 16, scope: !497)
!531 = !DILocation(line: 2572, column: 9, scope: !499)
!532 = !DILocation(line: 2575, column: 16, scope: !499)
!533 = !DILocation(line: 2575, column: 9, scope: !501)
!534 = !DILocation(line: 2578, column: 5, scope: !501)
!535 = !DILocation(line: 2579, column: 2, scope: !487)
!536 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h5500bd819355ffffE", scope: !436, file: !148, line: 2551, type: !537, scopeLine: 2551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !550)
!537 = !DISubroutineType(types: !538)
!538 = !{!328, !539}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !540, size: 64, align: 64, dwarfAddressSpace: 0)
!540 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !541, file: !2, size: 192, align: 64, elements: !543, templateParams: !119, identifier: "2b6b87cad82c5312c6247840b68bffc4")
!541 = !DINamespace(name: "maybe_uninit", scope: !542)
!542 = !DINamespace(name: "mem", scope: !71)
!543 = !{!544, !545}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !540, file: !2, baseType: !7, align: 8)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !540, file: !2, baseType: !546, size: 192, align: 64)
!546 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !547, file: !2, size: 192, align: 64, elements: !548, templateParams: !119, identifier: "6cfe3b56765c84d634fe24cb797a0ce6")
!547 = !DINamespace(name: "manually_drop", scope: !542)
!548 = !{!549}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !546, file: !2, baseType: !13, size: 192, align: 64)
!550 = !{!551}
!551 = !DILocalVariable(name: "ptr", arg: 1, scope: !536, file: !148, line: 2551, type: !539)
!552 = !{!553}
!553 = !DITemplateTypeParameter(name: "T", type: !540)
!554 = !DILocation(line: 2551, column: 42, scope: !536)
!555 = !DILocation(line: 2552, column: 6, scope: !536)
!556 = !DILocation(line: 2552, column: 23, scope: !536)
!557 = !DILocation(line: 2552, column: 5, scope: !536)
!558 = !DILocation(line: 2553, column: 2, scope: !536)
!559 = !{i8 0, i8 2}
!560 = distinct !DISubprogram(name: "is_aligned_and_not_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17haca68ba98430679eE", scope: !436, file: !148, line: 2551, type: !561, scopeLine: 2551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !563)
!561 = !DISubroutineType(types: !562)
!562 = !{!328, !137}
!563 = !{!564}
!564 = !DILocalVariable(name: "ptr", arg: 1, scope: !560, file: !148, line: 2551, type: !137)
!565 = !DILocation(line: 2551, column: 42, scope: !560)
!566 = !DILocation(line: 2552, column: 6, scope: !560)
!567 = !DILocation(line: 2552, column: 23, scope: !560)
!568 = !DILocation(line: 2552, column: 5, scope: !560)
!569 = !DILocation(line: 2553, column: 2, scope: !560)
!570 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17hd3e5782687a36f3eE", scope: !436, file: !148, line: 2551, type: !571, scopeLine: 2551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !581)
!571 = !DISubroutineType(types: !572)
!572 = !{!328, !573}
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !574, size: 64, align: 64, dwarfAddressSpace: 0)
!574 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !541, file: !2, size: 64, align: 64, elements: !575, templateParams: !392, identifier: "eebf1b271dff33d5d8f2003477f768e2")
!575 = !{!576, !577}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !574, file: !2, baseType: !7, align: 8)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !574, file: !2, baseType: !578, size: 64, align: 64)
!578 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !547, file: !2, size: 64, align: 64, elements: !579, templateParams: !392, identifier: "7cc42ca9cd7caa9e7f4d4731f096f291")
!579 = !{!580}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !578, file: !2, baseType: !9, size: 64, align: 64)
!581 = !{!582}
!582 = !DILocalVariable(name: "ptr", arg: 1, scope: !570, file: !148, line: 2551, type: !573)
!583 = !{!584}
!584 = !DITemplateTypeParameter(name: "T", type: !574)
!585 = !DILocation(line: 2551, column: 42, scope: !570)
!586 = !DILocation(line: 2552, column: 6, scope: !570)
!587 = !DILocation(line: 2552, column: 23, scope: !570)
!588 = !DILocation(line: 2552, column: 5, scope: !570)
!589 = !DILocation(line: 2553, column: 2, scope: !570)
!590 = distinct !DISubprogram(name: "is_valid_allocation_size<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics24is_valid_allocation_size17h301f7861db739a53E", scope: !436, file: !148, line: 2558, type: !591, scopeLine: 2558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !593)
!591 = !DISubroutineType(types: !592)
!592 = !{!328, !9}
!593 = !{!594, !595}
!594 = !DILocalVariable(name: "len", arg: 1, scope: !590, file: !148, line: 2558, type: !9)
!595 = !DILocalVariable(name: "max_len", scope: !596, file: !148, line: 2559, type: !9, align: 8)
!596 = distinct !DILexicalBlock(scope: !590, file: !148, line: 2559, column: 5)
!597 = !DILocation(line: 2559, column: 9, scope: !596)
!598 = !DILocation(line: 2558, column: 43, scope: !590)
!599 = !DILocation(line: 2563, column: 5, scope: !596)
!600 = !DILocation(line: 2564, column: 2, scope: !590)
!601 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17hc4b9be0c1aea131eE", scope: !603, file: !602, line: 1515, type: !605, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !608)
!602 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "0596876c8495a985e0a54f9e45f18ad0")
!603 = !DINamespace(name: "{impl#63}", scope: !604)
!604 = !DINamespace(name: "impls", scope: !79)
!605 = !DISubroutineType(types: !606)
!606 = !{!78, !607, !607}
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!608 = !{!609, !610}
!609 = !DILocalVariable(name: "self", arg: 1, scope: !601, file: !602, line: 1515, type: !607)
!610 = !DILocalVariable(name: "other", arg: 2, scope: !601, file: !602, line: 1515, type: !607)
!611 = !DILocation(line: 1515, column: 24, scope: !601)
!612 = !DILocation(line: 1515, column: 31, scope: !601)
!613 = !DILocation(line: 1518, column: 24, scope: !601)
!614 = !DILocation(line: 1518, column: 32, scope: !601)
!615 = !DILocation(line: 1519, column: 29, scope: !601)
!616 = !DILocation(line: 1519, column: 38, scope: !601)
!617 = !DILocation(line: 1518, column: 41, scope: !601)
!618 = !DILocation(line: 1518, column: 21, scope: !601)
!619 = !DILocation(line: 1520, column: 28, scope: !601)
!620 = !DILocation(line: 1519, column: 26, scope: !601)
!621 = !DILocation(line: 1519, column: 47, scope: !601)
!622 = !DILocation(line: 1521, column: 18, scope: !601)
!623 = !{i8 -1, i8 2}
!624 = distinct !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17he8e132cae72ff5e7E", scope: !626, file: !625, line: 689, type: !635, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !653, declaration: !652, retainedNodes: !656)
!625 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "e001ddbb6a5d5667cffdfcedcee2dd35")
!626 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !627, file: !2, size: 128, align: 64, elements: !628, templateParams: !24, identifier: "74d5d3e6d218f5272efa2b45d7bc52f4")
!627 = !DINamespace(name: "builders", scope: !70)
!628 = !{!629}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !626, file: !2, baseType: !630, size: 128, align: 64)
!630 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !627, file: !2, size: 128, align: 64, elements: !631, templateParams: !24, identifier: "cd630aaa3551d36050b9d3ba66c1626c")
!631 = !{!632, !633, !634}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !630, file: !2, baseType: !377, size: 64, align: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !630, file: !2, baseType: !358, size: 8, align: 8, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !630, file: !2, baseType: !328, size: 8, align: 8, offset: 72)
!635 = !DISubroutineType(types: !636)
!636 = !{!637, !637, !638}
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !626, size: 64, align: 64, dwarfAddressSpace: 0)
!638 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !639, file: !2, size: 128, align: 64, elements: !640, templateParams: !119, identifier: "e98057ae4378f7d49178483274f7130d")
!639 = !DINamespace(name: "iter", scope: !96)
!640 = !{!641, !646, !647}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !638, file: !2, baseType: !642, size: 64, align: 64)
!642 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !643, file: !2, size: 64, align: 64, elements: !644, templateParams: !119, identifier: "f2eef9a0908b7099116361927974cd2e")
!643 = !DINamespace(name: "non_null", scope: !134)
!644 = !{!645}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !642, file: !2, baseType: !137, size: 64, align: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !638, file: !2, baseType: !137, size: 64, align: 64, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !638, file: !2, baseType: !648, align: 8, offset: 128)
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !649, file: !2, align: 8, elements: !24, templateParams: !650, identifier: "f9e9eaa6ec228ec96099675436af31aa")
!649 = !DINamespace(name: "marker", scope: !71)
!650 = !{!651}
!651 = !DITemplateTypeParameter(name: "T", type: !12)
!652 = !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17he8e132cae72ff5e7E", scope: !626, file: !625, line: 689, type: !635, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !653)
!653 = !{!654, !655}
!654 = !DITemplateTypeParameter(name: "D", type: !12)
!655 = !DITemplateTypeParameter(name: "I", type: !638)
!656 = !{!657, !658, !659, !661}
!657 = !DILocalVariable(name: "self", arg: 1, scope: !624, file: !625, line: 689, type: !637)
!658 = !DILocalVariable(name: "entries", arg: 2, scope: !624, file: !625, line: 689, type: !638)
!659 = !DILocalVariable(name: "iter", scope: !660, file: !625, line: 694, type: !638, align: 8)
!660 = distinct !DILexicalBlock(scope: !624, file: !625, line: 694, column: 9)
!661 = !DILocalVariable(name: "entry", scope: !662, file: !625, line: 694, type: !12, align: 8)
!662 = distinct !DILexicalBlock(scope: !660, file: !625, line: 694, column: 30)
!663 = !DILocation(line: 689, column: 26, scope: !624)
!664 = !DILocation(line: 689, column: 37, scope: !624)
!665 = !DILocation(line: 694, column: 22, scope: !660)
!666 = !DILocation(line: 694, column: 13, scope: !662)
!667 = !DILocation(line: 694, column: 22, scope: !624)
!668 = !DILocation(line: 694, column: 9, scope: !660)
!669 = !DILocation(line: 698, column: 6, scope: !624)
!670 = !DILocation(line: 694, column: 13, scope: !660)
!671 = !DILocation(line: 695, column: 13, scope: !662)
!672 = !DILocation(line: 696, column: 9, scope: !660)
!673 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17he7eb429bc025dec6E", scope: !674, file: !354, line: 346, type: !740, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !745, retainedNodes: !746)
!674 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !70, file: !2, size: 384, align: 64, elements: !675, templateParams: !24, identifier: "29d77776b5eeaa5787f6686b536dabcd")
!675 = !{!676, !682, !724}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !674, file: !2, baseType: !677, size: 128, align: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !678, templateParams: !24, identifier: "d76b83877ddcb5cca61caf6bdca727ac")
!678 = !{!679, !681}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !677, file: !2, baseType: !680, size: 64, align: 64)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64, dwarfAddressSpace: 0)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !677, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !674, file: !2, baseType: !683, size: 128, align: 64, offset: 256)
!683 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::Placeholder]>", scope: !386, file: !2, size: 128, align: 64, elements: !684, templateParams: !24, identifier: "dbc008f239d38d5a2b0d65c09ad511eb")
!684 = !{!685}
!685 = !DICompositeType(tag: DW_TAG_variant_part, scope: !683, file: !2, size: 128, align: 64, elements: !686, templateParams: !24, identifier: "d8cbb791f01bd83aadd129e7c33d2902", discriminator: !723)
!686 = !{!687, !719}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !685, file: !2, baseType: !688, size: 128, align: 64, extraData: i128 0)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !683, file: !2, size: 128, align: 64, elements: !24, templateParams: !689, identifier: "9d5326c345af3989c3616152c1c18680")
!689 = !{!690}
!690 = !DITemplateTypeParameter(name: "T", type: !691)
!691 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Placeholder]", file: !2, size: 128, align: 64, elements: !692, templateParams: !24, identifier: "99f06d3095a71b448ddb8c239a6c18a7")
!692 = !{!693, !718}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !691, file: !2, baseType: !694, size: 64, align: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64, align: 64, dwarfAddressSpace: 0)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !69, file: !2, size: 448, align: 64, elements: !696, templateParams: !24, identifier: "9f72193236329857c54aa79ea29f91b9")
!696 = !{!697, !698, !699, !700, !701, !717}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !695, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !695, file: !2, baseType: !382, size: 32, align: 32, offset: 320)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !695, file: !2, baseType: !68, size: 8, align: 8, offset: 384)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !695, file: !2, baseType: !27, size: 32, align: 32, offset: 352)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !695, file: !2, baseType: !702, size: 128, align: 64)
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !69, file: !2, size: 128, align: 64, elements: !703, templateParams: !24, identifier: "9ca9e78afbef434435e02fcc00636f1b")
!703 = !{!704}
!704 = !DICompositeType(tag: DW_TAG_variant_part, scope: !702, file: !2, size: 128, align: 64, elements: !705, templateParams: !24, identifier: "237cbc7914887164aaf62f3e838f1bc8", discriminator: !716)
!705 = !{!706, !710, !714}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !704, file: !2, baseType: !707, size: 128, align: 64, extraData: i128 0)
!707 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !702, file: !2, size: 128, align: 64, elements: !708, templateParams: !24, identifier: "a810797a776fbeb7b8f2698d8072a0f5")
!708 = !{!709}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !707, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !704, file: !2, baseType: !711, size: 128, align: 64, extraData: i128 1)
!711 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !702, file: !2, size: 128, align: 64, elements: !712, templateParams: !24, identifier: "199fdbcd45df80cde39fbdcab18c13b0")
!712 = !{!713}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !711, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !704, file: !2, baseType: !715, size: 128, align: 64, extraData: i128 2)
!715 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !702, file: !2, size: 128, align: 64, elements: !24, identifier: "d1d69858300428be68613f1b1b1592f1")
!716 = !DIDerivedType(tag: DW_TAG_member, scope: !702, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !695, file: !2, baseType: !702, size: 128, align: 64, offset: 128)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !691, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !685, file: !2, baseType: !720, size: 128, align: 64)
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !683, file: !2, size: 128, align: 64, elements: !721, templateParams: !689, identifier: "bc36249fdd314efe31da7f66b9da4d62")
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !720, file: !2, baseType: !691, size: 128, align: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, scope: !683, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !674, file: !2, baseType: !725, size: 128, align: 64, offset: 128)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Argument]", file: !2, size: 128, align: 64, elements: !726, templateParams: !24, identifier: "4acc0bde51d5d32f83a091a1ecc1dee9")
!726 = !{!727, !739}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !725, file: !2, baseType: !728, size: 64, align: 64)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64, align: 64, dwarfAddressSpace: 0)
!729 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !69, file: !2, size: 128, align: 64, elements: !730, templateParams: !24, identifier: "2c4a5444e0d92b53869b40f69d3ffaed")
!730 = !{!731, !735}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !729, file: !2, baseType: !732, size: 64, align: 64)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::rt::{extern#0}::Opaque", baseType: !733, size: 64, align: 64, dwarfAddressSpace: 0)
!733 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !734, file: !2, align: 8, elements: !24, identifier: "b70c68e913ae9173605580beea0d245c")
!734 = !DINamespace(name: "{extern#0}", scope: !69)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !729, file: !2, baseType: !736, size: 64, align: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::rt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !737, size: 64, align: 64, dwarfAddressSpace: 0)
!737 = !DISubroutineType(types: !738)
!738 = !{!358, !732, !377}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !725, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!740 = !DISubroutineType(types: !741)
!741 = !{!674, !677, !725, !691, !742}
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !69, file: !2, align: 8, elements: !743, templateParams: !24, identifier: "8e2bc1214e89b0fcd357527fa24aca72")
!743 = !{!744}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !742, file: !2, baseType: !7, align: 8)
!745 = !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17he7eb429bc025dec6E", scope: !674, file: !354, line: 346, type: !740, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!746 = !{!747, !748, !749, !750, !751}
!747 = !DILocalVariable(name: "pieces", arg: 1, scope: !673, file: !354, line: 347, type: !677)
!748 = !DILocalVariable(name: "args", arg: 2, scope: !673, file: !354, line: 348, type: !725)
!749 = !DILocalVariable(name: "fmt", arg: 3, scope: !673, file: !354, line: 349, type: !691)
!750 = !DILocalVariable(name: "_unsafe_arg", scope: !673, file: !354, line: 350, type: !742, align: 1)
!751 = !DILocalVariable(arg: 4, scope: !673, file: !354, line: 350, type: !742)
!752 = !DILocation(line: 350, column: 9, scope: !673)
!753 = !DILocation(line: 347, column: 9, scope: !673)
!754 = !DILocation(line: 348, column: 9, scope: !673)
!755 = !DILocation(line: 349, column: 9, scope: !673)
!756 = !DILocation(line: 352, column: 34, scope: !673)
!757 = !DILocation(line: 352, column: 9, scope: !673)
!758 = !DILocation(line: 353, column: 6, scope: !673)
!759 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117hf53c1fa005f20e71E", scope: !674, file: !354, line: 331, type: !760, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !762, retainedNodes: !763)
!760 = !DISubroutineType(types: !761)
!761 = !{!674, !677, !725}
!762 = !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117hf53c1fa005f20e71E", scope: !674, file: !354, line: 331, type: !760, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!763 = !{!764, !765}
!764 = !DILocalVariable(name: "pieces", arg: 1, scope: !759, file: !354, line: 331, type: !677)
!765 = !DILocalVariable(name: "args", arg: 2, scope: !759, file: !354, line: 331, type: !725)
!766 = !DILocation(line: 331, column: 19, scope: !759)
!767 = !DILocation(line: 331, column: 47, scope: !759)
!768 = !DILocation(line: 332, column: 12, scope: !759)
!769 = !DILocation(line: 332, column: 56, scope: !759)
!770 = !DILocation(line: 333, column: 13, scope: !759)
!771 = !DILocation(line: 332, column: 41, scope: !759)
!772 = !DILocation(line: 335, column: 34, scope: !759)
!773 = !DILocation(line: 335, column: 9, scope: !759)
!774 = !DILocation(line: 336, column: 6, scope: !759)
!775 = distinct !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17hde10ce898de6c3e5E", scope: !674, file: !354, line: 321, type: !776, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !778, retainedNodes: !779)
!776 = !DISubroutineType(types: !777)
!777 = !{!674, !677}
!778 = !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17hde10ce898de6c3e5E", scope: !674, file: !354, line: 321, type: !776, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!779 = !{!780}
!780 = !DILocalVariable(name: "pieces", arg: 1, scope: !775, file: !354, line: 321, type: !677)
!781 = !DILocation(line: 321, column: 28, scope: !775)
!782 = !DILocation(line: 322, column: 12, scope: !775)
!783 = !DILocation(line: 325, column: 34, scope: !775)
!784 = !DILocation(line: 325, column: 9, scope: !775)
!785 = !DILocation(line: 326, column: 6, scope: !775)
!786 = !DILocation(line: 323, column: 13, scope: !775)
!787 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem11swap_simple17h258991975d1e9783E", scope: !542, file: !788, line: 761, type: !789, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !792)
!788 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "656f053b68cae45770b515e270bad139")
!789 = !DISubroutineType(types: !790)
!790 = !{null, !791, !791}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !540, size: 64, align: 64, dwarfAddressSpace: 0)
!792 = !{!793, !794, !795, !797}
!793 = !DILocalVariable(name: "x", arg: 1, scope: !787, file: !788, line: 761, type: !791)
!794 = !DILocalVariable(name: "y", arg: 2, scope: !787, file: !788, line: 761, type: !791)
!795 = !DILocalVariable(name: "a", scope: !796, file: !788, line: 781, type: !540, align: 8)
!796 = distinct !DILexicalBlock(scope: !787, file: !788, line: 781, column: 9)
!797 = !DILocalVariable(name: "b", scope: !798, file: !788, line: 782, type: !540, align: 8)
!798 = distinct !DILexicalBlock(scope: !796, file: !788, line: 782, column: 9)
!799 = !DILocation(line: 761, column: 36, scope: !787)
!800 = !DILocation(line: 761, column: 47, scope: !787)
!801 = !DILocation(line: 781, column: 13, scope: !796)
!802 = !DILocation(line: 782, column: 13, scope: !798)
!803 = !DILocation(line: 781, column: 17, scope: !787)
!804 = !DILocation(line: 782, column: 17, scope: !796)
!805 = !DILocation(line: 783, column: 9, scope: !798)
!806 = !DILocation(line: 784, column: 9, scope: !798)
!807 = !DILocation(line: 786, column: 2, scope: !787)
!808 = distinct !DISubprogram(name: "swap_simple<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem11swap_simple17h7ba293a90458ed06E", scope: !542, file: !788, line: 761, type: !809, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !812)
!809 = !DISubroutineType(types: !810)
!810 = !{null, !811, !811}
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!812 = !{!813, !814, !815, !817}
!813 = !DILocalVariable(name: "x", arg: 1, scope: !808, file: !788, line: 761, type: !811)
!814 = !DILocalVariable(name: "y", arg: 2, scope: !808, file: !788, line: 761, type: !811)
!815 = !DILocalVariable(name: "a", scope: !816, file: !788, line: 781, type: !13, align: 8)
!816 = distinct !DILexicalBlock(scope: !808, file: !788, line: 781, column: 9)
!817 = !DILocalVariable(name: "b", scope: !818, file: !788, line: 782, type: !13, align: 8)
!818 = distinct !DILexicalBlock(scope: !816, file: !788, line: 782, column: 9)
!819 = !DILocation(line: 761, column: 36, scope: !808)
!820 = !DILocation(line: 761, column: 47, scope: !808)
!821 = !DILocation(line: 781, column: 13, scope: !816)
!822 = !DILocation(line: 782, column: 13, scope: !818)
!823 = !DILocation(line: 781, column: 17, scope: !808)
!824 = !DILocation(line: 782, column: 17, scope: !816)
!825 = !DILocation(line: 783, column: 9, scope: !818)
!826 = !DILocation(line: 784, column: 9, scope: !818)
!827 = !DILocation(line: 786, column: 2, scope: !808)
!828 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3mem11swap_simple17he38bf9be57a366fdE", scope: !542, file: !788, line: 761, type: !829, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !848, retainedNodes: !841)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !831, !831}
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !832, size: 64, align: 64, dwarfAddressSpace: 0)
!832 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !541, file: !2, size: 8, align: 8, elements: !833, templateParams: !839, identifier: "e098042bec0fb6fe5d5eca5535aee8ce")
!833 = !{!834, !835}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !832, file: !2, baseType: !7, align: 8)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !832, file: !2, baseType: !836, size: 8, align: 8)
!836 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !547, file: !2, size: 8, align: 8, elements: !837, templateParams: !839, identifier: "6a27e59555de8a58becbe28feefb292")
!837 = !{!838}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !836, file: !2, baseType: !72, size: 8, align: 8)
!839 = !{!840}
!840 = !DITemplateTypeParameter(name: "T", type: !72)
!841 = !{!842, !843, !844, !846}
!842 = !DILocalVariable(name: "x", arg: 1, scope: !828, file: !788, line: 761, type: !831)
!843 = !DILocalVariable(name: "y", arg: 2, scope: !828, file: !788, line: 761, type: !831)
!844 = !DILocalVariable(name: "a", scope: !845, file: !788, line: 781, type: !832, align: 1)
!845 = distinct !DILexicalBlock(scope: !828, file: !788, line: 781, column: 9)
!846 = !DILocalVariable(name: "b", scope: !847, file: !788, line: 782, type: !832, align: 1)
!847 = distinct !DILexicalBlock(scope: !845, file: !788, line: 782, column: 9)
!848 = !{!849}
!849 = !DITemplateTypeParameter(name: "T", type: !832)
!850 = !DILocation(line: 761, column: 36, scope: !828)
!851 = !DILocation(line: 761, column: 47, scope: !828)
!852 = !DILocation(line: 781, column: 17, scope: !828)
!853 = !DILocation(line: 781, column: 13, scope: !845)
!854 = !DILocation(line: 782, column: 17, scope: !845)
!855 = !DILocation(line: 782, column: 13, scope: !847)
!856 = !DILocation(line: 783, column: 9, scope: !847)
!857 = !DILocation(line: 784, column: 9, scope: !847)
!858 = !DILocation(line: 786, column: 2, scope: !828)
!859 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3mem11swap_simple17hf19aa68a6af32113E", scope: !542, file: !788, line: 761, type: !860, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !863)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !862, !862}
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !574, size: 64, align: 64, dwarfAddressSpace: 0)
!863 = !{!864, !865, !866, !868}
!864 = !DILocalVariable(name: "x", arg: 1, scope: !859, file: !788, line: 761, type: !862)
!865 = !DILocalVariable(name: "y", arg: 2, scope: !859, file: !788, line: 761, type: !862)
!866 = !DILocalVariable(name: "a", scope: !867, file: !788, line: 781, type: !574, align: 8)
!867 = distinct !DILexicalBlock(scope: !859, file: !788, line: 781, column: 9)
!868 = !DILocalVariable(name: "b", scope: !869, file: !788, line: 782, type: !574, align: 8)
!869 = distinct !DILexicalBlock(scope: !867, file: !788, line: 782, column: 9)
!870 = !DILocation(line: 761, column: 36, scope: !859)
!871 = !DILocation(line: 761, column: 47, scope: !859)
!872 = !DILocation(line: 781, column: 17, scope: !859)
!873 = !DILocation(line: 781, column: 13, scope: !867)
!874 = !DILocation(line: 782, column: 17, scope: !867)
!875 = !DILocation(line: 782, column: 13, scope: !869)
!876 = !DILocation(line: 783, column: 9, scope: !869)
!877 = !DILocation(line: 784, column: 9, scope: !869)
!878 = !DILocation(line: 786, column: 2, scope: !859)
!879 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem4swap17h3ce2190ae39ba15aE", scope: !542, file: !788, line: 728, type: !809, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !880)
!880 = !{!881, !882}
!881 = !DILocalVariable(name: "x", arg: 1, scope: !879, file: !788, line: 728, type: !811)
!882 = !DILocalVariable(name: "y", arg: 2, scope: !879, file: !788, line: 728, type: !811)
!883 = !DILocation(line: 728, column: 22, scope: !879)
!884 = !DILocation(line: 728, column: 33, scope: !879)
!885 = !DILocation(line: 739, column: 12, scope: !879)
!886 = !DILocation(line: 753, column: 5, scope: !879)
!887 = !DILocation(line: 742, column: 29, scope: !879)
!888 = !DILocation(line: 754, column: 2, scope: !879)
!889 = distinct !DISubprogram(name: "forget<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem6forget17hd52909aaf3c1e60cE", scope: !542, file: !788, line: 148, type: !890, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !892)
!890 = !DISubroutineType(types: !891)
!891 = !{null, !13}
!892 = !{!893}
!893 = !DILocalVariable(name: "t", arg: 1, scope: !889, file: !788, line: 148, type: !13)
!894 = !DILocation(line: 148, column: 24, scope: !889)
!895 = !DILocalVariable(name: "value", arg: 1, scope: !896, file: !897, line: 70, type: !13)
!896 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hc0555ed8e4e1b95bE", scope: !546, file: !897, line: 70, type: !898, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !900, retainedNodes: !901)
!897 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "db150196ad24cbd302765ce40020defd")
!898 = !DISubroutineType(types: !899)
!899 = !{!546, !13}
!900 = !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hc0555ed8e4e1b95bE", scope: !546, file: !897, line: 70, type: !898, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!901 = !{!895}
!902 = !DILocation(line: 70, column: 22, scope: !896, inlinedAt: !903)
!903 = distinct !DILocation(line: 149, column: 13, scope: !889)
!904 = !DILocation(line: 71, column: 9, scope: !896, inlinedAt: !903)
!905 = !DILocation(line: 150, column: 2, scope: !889)
!906 = distinct !DISubprogram(name: "abs", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$3abs17h2b3be683688f2f77E", scope: !908, file: !907, line: 2651, type: !910, scopeLine: 2651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !913)
!907 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "5f83529a42afed089f403de0715bd78b")
!908 = !DINamespace(name: "{impl#2}", scope: !909)
!909 = !DINamespace(name: "num", scope: !71)
!910 = !DISubroutineType(types: !911)
!911 = !{!912, !912}
!912 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!913 = !{!914}
!914 = !DILocalVariable(name: "self", arg: 1, scope: !906, file: !907, line: 2651, type: !912)
!915 = !DILocation(line: 2651, column: 26, scope: !906)
!916 = !DILocalVariable(name: "self", arg: 1, scope: !917, file: !907, line: 2768, type: !912)
!917 = distinct !DISubprogram(name: "is_negative", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$11is_negative17h29e18b5b077b85a8E", scope: !908, file: !907, line: 2768, type: !918, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !920)
!918 = !DISubroutineType(types: !919)
!919 = !{!328, !912}
!920 = !{!916}
!921 = !DILocation(line: 2768, column: 34, scope: !917, inlinedAt: !922)
!922 = distinct !DILocation(line: 2655, column: 16, scope: !906)
!923 = !DILocation(line: 2768, column: 50, scope: !917, inlinedAt: !922)
!924 = !DILocation(line: 2655, column: 16, scope: !906)
!925 = !DILocation(line: 2658, column: 17, scope: !906)
!926 = !DILocation(line: 2655, column: 13, scope: !906)
!927 = !DILocation(line: 2656, column: 17, scope: !906)
!928 = !DILocation(line: 2660, column: 10, scope: !906)
!929 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h14f0c5f559c2357cE", scope: !931, file: !930, line: 576, type: !932, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !934)
!930 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "77985b69d8b96d3837a96dc7438f1392")
!931 = !DINamespace(name: "{impl#11}", scope: !909)
!932 = !DISubroutineType(types: !933)
!933 = !{!385, !9, !9}
!934 = !{!935, !936, !937, !939}
!935 = !DILocalVariable(name: "self", arg: 1, scope: !929, file: !930, line: 576, type: !9)
!936 = !DILocalVariable(name: "rhs", arg: 2, scope: !929, file: !930, line: 576, type: !9)
!937 = !DILocalVariable(name: "a", scope: !938, file: !930, line: 577, type: !9, align: 8)
!938 = distinct !DILexicalBlock(scope: !929, file: !930, line: 577, column: 13)
!939 = !DILocalVariable(name: "b", scope: !938, file: !930, line: 577, type: !328, align: 1)
!940 = !DILocation(line: 576, column: 34, scope: !929)
!941 = !DILocation(line: 576, column: 40, scope: !929)
!942 = !DILocalVariable(name: "self", arg: 1, scope: !943, file: !930, line: 1718, type: !9)
!943 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h08ab99a125115a16E", scope: !931, file: !930, line: 1718, type: !944, scopeLine: 1718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !950)
!944 = !DISubroutineType(types: !945)
!945 = !{!946, !9, !9}
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !947, templateParams: !24, identifier: "3455e5ba91d322de931b901b9c5e965e")
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !946, file: !2, baseType: !9, size: 64, align: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !946, file: !2, baseType: !328, size: 8, align: 8, offset: 64)
!950 = !{!942, !951, !952, !954}
!951 = !DILocalVariable(name: "rhs", arg: 2, scope: !943, file: !930, line: 1718, type: !9)
!952 = !DILocalVariable(name: "a", scope: !953, file: !930, line: 1719, type: !22, align: 8)
!953 = distinct !DILexicalBlock(scope: !943, file: !930, line: 1719, column: 13)
!954 = !DILocalVariable(name: "b", scope: !953, file: !930, line: 1719, type: !328, align: 1)
!955 = !DILocation(line: 1718, column: 38, scope: !943, inlinedAt: !956)
!956 = distinct !DILocation(line: 577, column: 26, scope: !929)
!957 = !DILocation(line: 1718, column: 44, scope: !943, inlinedAt: !956)
!958 = !DILocation(line: 1719, column: 26, scope: !943, inlinedAt: !956)
!959 = !DILocation(line: 1719, column: 18, scope: !943, inlinedAt: !956)
!960 = !DILocation(line: 1719, column: 18, scope: !953, inlinedAt: !956)
!961 = !DILocation(line: 1719, column: 21, scope: !943, inlinedAt: !956)
!962 = !DILocation(line: 1719, column: 21, scope: !953, inlinedAt: !956)
!963 = !DILocation(line: 1720, column: 13, scope: !953, inlinedAt: !956)
!964 = !DILocation(line: 1721, column: 10, scope: !943, inlinedAt: !956)
!965 = !DILocation(line: 577, column: 26, scope: !929)
!966 = !DILocation(line: 577, column: 18, scope: !929)
!967 = !DILocation(line: 577, column: 18, scope: !938)
!968 = !DILocation(line: 577, column: 21, scope: !929)
!969 = !DILocation(line: 577, column: 21, scope: !938)
!970 = !DILocation(line: 578, column: 16, scope: !938)
!971 = !DILocation(line: 578, column: 42, scope: !938)
!972 = !DILocation(line: 578, column: 13, scope: !938)
!973 = !DILocation(line: 578, column: 30, scope: !938)
!974 = !DILocation(line: 579, column: 10, scope: !929)
!975 = !{i64 0, i64 2}
!976 = distinct !DISubprogram(name: "next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h511c6f23dfade785E", scope: !931, file: !930, line: 2281, type: !977, scopeLine: 2281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !979)
!977 = !DISubroutineType(types: !978)
!978 = !{!9, !9}
!979 = !{!980}
!980 = !DILocalVariable(name: "self", arg: 1, scope: !976, file: !930, line: 2281, type: !9)
!981 = !DILocation(line: 2281, column: 40, scope: !976)
!982 = !DILocation(line: 2282, column: 13, scope: !976)
!983 = !DILocation(line: 2283, column: 10, scope: !976)
!984 = distinct !DISubprogram(name: "one_less_than_next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h6af6c7f48dc02a22E", scope: !931, file: !930, line: 2249, type: !977, scopeLine: 2249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !985)
!985 = !{!986, !987, !989}
!986 = !DILocalVariable(name: "self", arg: 1, scope: !984, file: !930, line: 2249, type: !9)
!987 = !DILocalVariable(name: "p", scope: !988, file: !930, line: 2252, type: !9, align: 8)
!988 = distinct !DILexicalBlock(scope: !984, file: !930, line: 2252, column: 13)
!989 = !DILocalVariable(name: "z", scope: !990, file: !930, line: 2257, type: !9, align: 8)
!990 = distinct !DILexicalBlock(scope: !988, file: !930, line: 2257, column: 13)
!991 = !DILocation(line: 2249, column: 50, scope: !984)
!992 = !DILocation(line: 2250, column: 16, scope: !984)
!993 = !DILocation(line: 2252, column: 21, scope: !984)
!994 = !DILocation(line: 2250, column: 35, scope: !984)
!995 = !DILocation(line: 2259, column: 10, scope: !984)
!996 = !DILocation(line: 2252, column: 17, scope: !988)
!997 = !DILocation(line: 2257, column: 30, scope: !988)
!998 = !DILocation(line: 2257, column: 17, scope: !990)
!999 = !DILocation(line: 2258, column: 13, scope: !990)
!1000 = distinct !DISubprogram(name: "abs_diff", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17ha5fbc8b82b9f698cE", scope: !931, file: !930, line: 1682, type: !1001, scopeLine: 1682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1003)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!9, !9, !9}
!1003 = !{!1004, !1005}
!1004 = !DILocalVariable(name: "self", arg: 1, scope: !1000, file: !930, line: 1682, type: !9)
!1005 = !DILocalVariable(name: "other", arg: 2, scope: !1000, file: !930, line: 1682, type: !9)
!1006 = !DILocation(line: 1682, column: 31, scope: !1000)
!1007 = !DILocation(line: 1682, column: 37, scope: !1000)
!1008 = !DILocation(line: 1683, column: 16, scope: !1000)
!1009 = !DILocation(line: 1686, column: 17, scope: !1000)
!1010 = !DILocation(line: 1686, column: 44, scope: !1000)
!1011 = !DILocalVariable(name: "self", arg: 1, scope: !1012, file: !907, line: 1232, type: !912)
!1012 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_sub17h18455ffe98904da4E", scope: !908, file: !907, line: 1232, type: !1013, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1015)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!912, !912, !912}
!1015 = !{!1011, !1016}
!1016 = !DILocalVariable(name: "rhs", arg: 2, scope: !1012, file: !907, line: 1232, type: !912)
!1017 = !DILocation(line: 1232, column: 35, scope: !1012, inlinedAt: !1018)
!1018 = distinct !DILocation(line: 1686, column: 17, scope: !1000)
!1019 = !DILocation(line: 1232, column: 41, scope: !1012, inlinedAt: !1018)
!1020 = !DILocation(line: 1233, column: 13, scope: !1012, inlinedAt: !1018)
!1021 = !DILocation(line: 1683, column: 13, scope: !1000)
!1022 = !DILocation(line: 1688, column: 20, scope: !1000)
!1023 = !DILocation(line: 1694, column: 10, scope: !1000)
!1024 = !DILocation(line: 1691, column: 21, scope: !1000)
!1025 = !DILocation(line: 1689, column: 21, scope: !1000)
!1026 = !DILocation(line: 1688, column: 17, scope: !1000)
!1027 = distinct !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17haaa6229c426d1dc3E", scope: !323, file: !1028, line: 454, type: !1029, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !1031, retainedNodes: !1032)
!1028 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "9ecd4c63827da4e86dbe561ed4b5264c")
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!104, !323}
!1031 = !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17haaa6229c426d1dc3E", scope: !323, file: !1028, line: 454, type: !1029, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!1032 = !{!1033, !1034, !1036}
!1033 = !DILocalVariable(name: "self", arg: 1, scope: !1027, file: !1028, line: 454, type: !323)
!1034 = !DILocalVariable(name: "exclusive_end", scope: !1035, file: !1028, line: 458, type: !9, align: 8)
!1035 = distinct !DILexicalBlock(scope: !1027, file: !1028, line: 458, column: 9)
!1036 = !DILocalVariable(name: "start", scope: !1037, file: !1028, line: 459, type: !9, align: 8)
!1037 = distinct !DILexicalBlock(scope: !1035, file: !1028, line: 459, column: 9)
!1038 = !DILocation(line: 454, column: 42, scope: !1027)
!1039 = !DILocation(line: 459, column: 13, scope: !1037)
!1040 = !DILocation(line: 458, column: 29, scope: !1027)
!1041 = !DILocation(line: 458, column: 13, scope: !1035)
!1042 = !DILocation(line: 459, column: 24, scope: !1035)
!1043 = !DILocation(line: 459, column: 64, scope: !1035)
!1044 = !DILocation(line: 459, column: 21, scope: !1035)
!1045 = !DILocation(line: 459, column: 41, scope: !1035)
!1046 = !DILocation(line: 460, column: 9, scope: !1037)
!1047 = !DILocation(line: 461, column: 6, scope: !1027)
!1048 = distinct !DISubprogram(name: "call_mut<(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion), core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h76555a964f869907E", scope: !1050, file: !1049, line: 293, type: !1053, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1073, retainedNodes: !1066)
!1049 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "db68b539450092c8a1401d96fd9a9e80")
!1050 = !DINamespace(name: "{impl#3}", scope: !1051)
!1051 = !DINamespace(name: "impls", scope: !1052)
!1052 = !DINamespace(name: "function", scope: !106)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!328, !1055, !12, !12}
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1056, size: 64, align: 64, dwarfAddressSpace: 0)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1057, size: 64, align: 64, dwarfAddressSpace: 0)
!1057 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", scope: !1058, file: !2, size: 64, align: 64, elements: !1060, templateParams: !24, identifier: "41a6138e68a36b4ae02610f3d031eaed")
!1058 = !DINamespace(name: "sort_unstable_by", scope: !1059)
!1059 = !DINamespace(name: "{impl#0}", scope: !96)
!1060 = !{!1061}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__compare", scope: !1057, file: !2, baseType: !1062, size: 64, align: 64)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}", baseType: !1063, size: 64, align: 64, dwarfAddressSpace: 0)
!1063 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1064, file: !2, align: 8, elements: !24, identifier: "b0e15d3781f1cd0bbe119cbb12475f73")
!1064 = !DINamespace(name: "sort", scope: !1065)
!1065 = !DINamespace(name: "{impl#0}", scope: !14)
!1066 = !{!1067, !1068}
!1067 = !DILocalVariable(name: "self", arg: 1, scope: !1048, file: !1049, line: 293, type: !1055)
!1068 = !DILocalVariable(name: "args", arg: 2, scope: !1048, file: !1049, line: 293, type: !1069)
!1069 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion)", file: !2, size: 128, align: 64, elements: !1070, templateParams: !24, identifier: "f3f2c36e9f9aee94b9429266161374a8")
!1070 = !{!1071, !1072}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1069, file: !2, baseType: !12, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1069, file: !2, baseType: !12, size: 64, align: 64, offset: 64)
!1073 = !{!1074, !1075}
!1074 = !DITemplateTypeParameter(name: "A", type: !1069)
!1075 = !DITemplateTypeParameter(name: "F", type: !1057)
!1076 = !DILocation(line: 293, column: 40, scope: !1048)
!1077 = !DILocation(line: 293, column: 51, scope: !1048)
!1078 = !DILocation(line: 294, column: 13, scope: !1048)
!1079 = !DILocation(line: 295, column: 10, scope: !1048)
!1080 = distinct !DISubprogram(name: "drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17ha01701ee024676caE", scope: !134, file: !1081, line: 498, type: !1082, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1092, retainedNodes: !1090)
!1081 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "438238c3f27b7b9e70a8eb6743e94def")
!1082 = !DISubroutineType(types: !1083)
!1083 = !{null, !1084}
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1085, size: 64, align: 64, dwarfAddressSpace: 0)
!1085 = !DICompositeType(tag: DW_TAG_structure_type, name: "InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !1086, file: !2, size: 128, align: 64, elements: !1087, templateParams: !119, identifier: "ff3cb79fba7388623d8e7f8ac8d8d1e6")
!1086 = !DINamespace(name: "sort", scope: !96)
!1087 = !{!1088, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1085, file: !2, baseType: !137, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1085, file: !2, baseType: !189, size: 64, align: 64, offset: 64)
!1090 = !{!1091}
!1091 = !DILocalVariable(arg: 1, scope: !1080, file: !1081, line: 498, type: !1084)
!1092 = !{!1093}
!1093 = !DITemplateTypeParameter(name: "T", type: !1085)
!1094 = !DILocation(line: 498, column: 1, scope: !1080)
!1095 = distinct !DISubprogram(name: "swap_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping17ha0939527b63709b5E", scope: !134, file: !1081, line: 929, type: !1096, scopeLine: 929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1098)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{null, !189, !189, !9}
!1098 = !{!1099, !1100, !1101, !1102, !1105, !1107, !1109, !1112, !1114}
!1099 = !DILocalVariable(name: "x", arg: 1, scope: !1095, file: !1081, line: 929, type: !189)
!1100 = !DILocalVariable(name: "y", arg: 2, scope: !1095, file: !1081, line: 929, type: !189)
!1101 = !DILocalVariable(name: "count", arg: 3, scope: !1095, file: !1081, line: 929, type: !9)
!1102 = !DILocalVariable(name: "x", scope: !1103, file: !1081, line: 969, type: !1104, align: 8)
!1103 = distinct !DILexicalBlock(scope: !1095, file: !1081, line: 936, column: 17)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!1105 = !DILocalVariable(name: "y", scope: !1106, file: !1081, line: 969, type: !1104, align: 8)
!1106 = distinct !DILexicalBlock(scope: !1103, file: !1081, line: 937, column: 17)
!1107 = !DILocalVariable(name: "count", scope: !1108, file: !1081, line: 969, type: !9, align: 8)
!1108 = distinct !DILexicalBlock(scope: !1106, file: !1081, line: 938, column: 17)
!1109 = !DILocalVariable(name: "x", scope: !1110, file: !1081, line: 970, type: !1111, align: 8)
!1110 = distinct !DILexicalBlock(scope: !1095, file: !1081, line: 936, column: 17)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !72, size: 64, align: 64, dwarfAddressSpace: 0)
!1112 = !DILocalVariable(name: "y", scope: !1113, file: !1081, line: 970, type: !1111, align: 8)
!1113 = distinct !DILexicalBlock(scope: !1110, file: !1081, line: 937, column: 17)
!1114 = !DILocalVariable(name: "count", scope: !1115, file: !1081, line: 970, type: !9, align: 8)
!1115 = distinct !DILexicalBlock(scope: !1113, file: !1081, line: 938, column: 17)
!1116 = !DILocation(line: 929, column: 44, scope: !1095)
!1117 = !DILocation(line: 929, column: 55, scope: !1095)
!1118 = !DILocation(line: 929, column: 66, scope: !1095)
!1119 = !DILocation(line: 952, column: 9, scope: !1095)
!1120 = !DILocation(line: 965, column: 8, scope: !1095)
!1121 = !DILocalVariable(name: "x", arg: 1, scope: !1122, file: !148, line: 2530, type: !189)
!1122 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping7runtime17h8e8ae2515b2bb1d7E", scope: !1123, file: !148, line: 2530, type: !1096, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1124)
!1123 = !DINamespace(name: "swap_nonoverlapping", scope: !134)
!1124 = !{!1121, !1125, !1126}
!1125 = !DILocalVariable(name: "y", arg: 2, scope: !1122, file: !148, line: 2530, type: !189)
!1126 = !DILocalVariable(name: "count", arg: 3, scope: !1122, file: !148, line: 2530, type: !9)
!1127 = !DILocation(line: 2530, column: 39, scope: !1122, inlinedAt: !1128)
!1128 = distinct !DILocation(line: 952, column: 9, scope: !1095)
!1129 = !DILocation(line: 956, column: 13, scope: !1130, inlinedAt: !1128)
!1130 = !DILexicalBlockFile(scope: !1122, file: !1081, discriminator: 0)
!1131 = !DILocation(line: 2533, column: 21, scope: !1122, inlinedAt: !1128)
!1132 = !DILocation(line: 957, column: 20, scope: !1130, inlinedAt: !1128)
!1133 = !DILocation(line: 958, column: 20, scope: !1130, inlinedAt: !1128)
!1134 = !DILocation(line: 974, column: 14, scope: !1095)
!1135 = !DILocalVariable(name: "self", arg: 1, scope: !1136, file: !930, line: 2234, type: !9)
!1136 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h89d50fe622b87ab3E", scope: !931, file: !930, line: 2234, type: !591, scopeLine: 2234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1137)
!1137 = !{!1135}
!1138 = !DILocation(line: 2234, column: 38, scope: !1136, inlinedAt: !1139)
!1139 = distinct !DILocation(line: 966, column: 14, scope: !1095)
!1140 = !DILocalVariable(name: "self", arg: 1, scope: !1141, file: !930, line: 106, type: !9)
!1141 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hf511e55f203c8435E", scope: !931, file: !930, line: 106, type: !1142, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1144)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!27, !9}
!1144 = !{!1140}
!1145 = !DILocation(line: 106, column: 33, scope: !1141, inlinedAt: !1146)
!1146 = distinct !DILocation(line: 2235, column: 13, scope: !1136, inlinedAt: !1139)
!1147 = !DILocation(line: 107, column: 13, scope: !1141, inlinedAt: !1146)
!1148 = !DILocation(line: 2235, column: 13, scope: !1136, inlinedAt: !1139)
!1149 = !DILocation(line: 966, column: 14, scope: !1095)
!1150 = !DILocation(line: 969, column: 9, scope: !1095)
!1151 = !DILocation(line: 967, column: 38, scope: !1095)
!1152 = !DILocation(line: 967, column: 16, scope: !1095)
!1153 = !DILocation(line: 970, column: 9, scope: !1095)
!1154 = !DILocalVariable(name: "self", arg: 1, scope: !1155, file: !184, line: 60, type: !189)
!1155 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h014e1176e9c39b14E", scope: !195, file: !184, line: 60, type: !1156, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1159, retainedNodes: !1158)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!1104, !189}
!1158 = !{!1154}
!1159 = !{!120, !1160}
!1160 = !DITemplateTypeParameter(name: "U", type: !9)
!1161 = !DILocation(line: 60, column: 26, scope: !1155, inlinedAt: !1162)
!1162 = distinct !DILocation(line: 969, column: 9, scope: !1095)
!1163 = !DILocation(line: 969, column: 9, scope: !1103)
!1164 = !DILocation(line: 60, column: 26, scope: !1155, inlinedAt: !1165)
!1165 = distinct !DILocation(line: 969, column: 9, scope: !1103)
!1166 = !DILocation(line: 969, column: 9, scope: !1106)
!1167 = !DILocation(line: 969, column: 9, scope: !1108)
!1168 = !DILocation(line: 975, column: 2, scope: !1095)
!1169 = !DILocalVariable(name: "self", arg: 1, scope: !1170, file: !184, line: 60, type: !189)
!1170 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h48bbd9f559359731E", scope: !195, file: !184, line: 60, type: !1171, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1174, retainedNodes: !1173)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!1111, !189}
!1173 = !{!1169}
!1174 = !{!120, !1175}
!1175 = !DITemplateTypeParameter(name: "U", type: !72)
!1176 = !DILocation(line: 60, column: 26, scope: !1170, inlinedAt: !1177)
!1177 = distinct !DILocation(line: 970, column: 9, scope: !1095)
!1178 = !DILocation(line: 970, column: 9, scope: !1110)
!1179 = !DILocation(line: 60, column: 26, scope: !1170, inlinedAt: !1180)
!1180 = distinct !DILocation(line: 970, column: 9, scope: !1110)
!1181 = !DILocation(line: 970, column: 9, scope: !1113)
!1182 = !DILocation(line: 970, column: 9, scope: !1115)
!1183 = distinct !DISubprogram(name: "slice_from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h0be5abcce6780766E", scope: !134, file: !1081, line: 755, type: !1184, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1186)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!99, !137, !9}
!1186 = !{!1187, !1188}
!1187 = !DILocalVariable(name: "data", arg: 1, scope: !1183, file: !1081, line: 755, type: !137)
!1188 = !DILocalVariable(name: "len", arg: 2, scope: !1183, file: !1081, line: 755, type: !9)
!1189 = !DILocation(line: 755, column: 38, scope: !1183)
!1190 = !DILocation(line: 755, column: 54, scope: !1183)
!1191 = !DILocation(line: 60, column: 26, scope: !513, inlinedAt: !1192)
!1192 = distinct !DILocation(line: 756, column: 20, scope: !1183)
!1193 = !DILocation(line: 756, column: 5, scope: !1183)
!1194 = !DILocation(line: 757, column: 2, scope: !1183)
!1195 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h8df01f0fcf924fd5E", scope: !134, file: !1081, line: 788, type: !1196, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1198)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!164, !189, !9}
!1198 = !{!1199, !1200}
!1199 = !DILocalVariable(name: "data", arg: 1, scope: !1195, file: !1081, line: 788, type: !189)
!1200 = !DILocalVariable(name: "len", arg: 2, scope: !1195, file: !1081, line: 788, type: !9)
!1201 = !DILocation(line: 788, column: 42, scope: !1195)
!1202 = !DILocation(line: 788, column: 56, scope: !1195)
!1203 = !DILocalVariable(name: "self", arg: 1, scope: !1204, file: !184, line: 60, type: !189)
!1204 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hef6f1af912f69d3aE", scope: !195, file: !184, line: 60, type: !1205, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !517, retainedNodes: !1208)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!1207, !189}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1208 = !{!1203}
!1209 = !DILocation(line: 60, column: 26, scope: !1204, inlinedAt: !1210)
!1210 = distinct !DILocation(line: 789, column: 24, scope: !1195)
!1211 = !DILocation(line: 789, column: 5, scope: !1195)
!1212 = !DILocation(line: 790, column: 2, scope: !1195)
!1213 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<usize>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h06df6f5d9abca47eE", scope: !134, file: !1081, line: 983, type: !1214, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, retainedNodes: !1216)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{null, !1104, !1104, !9}
!1216 = !{!1217, !1218, !1219, !1220, !1223, !1225, !1227, !1229}
!1217 = !DILocalVariable(name: "x", arg: 1, scope: !1213, file: !1081, line: 983, type: !1104)
!1218 = !DILocalVariable(name: "y", arg: 2, scope: !1213, file: !1081, line: 983, type: !1104)
!1219 = !DILocalVariable(name: "count", arg: 3, scope: !1213, file: !1081, line: 983, type: !9)
!1220 = !DILocalVariable(name: "x", scope: !1221, file: !1081, line: 984, type: !1222, align: 8)
!1221 = distinct !DILexicalBlock(scope: !1213, file: !1081, line: 984, column: 5)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !574, size: 64, align: 64, dwarfAddressSpace: 0)
!1223 = !DILocalVariable(name: "y", scope: !1224, file: !1081, line: 985, type: !1222, align: 8)
!1224 = distinct !DILexicalBlock(scope: !1221, file: !1081, line: 985, column: 5)
!1225 = !DILocalVariable(name: "i", scope: !1226, file: !1081, line: 986, type: !9, align: 8)
!1226 = distinct !DILexicalBlock(scope: !1224, file: !1081, line: 986, column: 5)
!1227 = !DILocalVariable(name: "x", scope: !1228, file: !1081, line: 989, type: !862, align: 8)
!1228 = distinct !DILexicalBlock(scope: !1226, file: !1081, line: 989, column: 9)
!1229 = !DILocalVariable(name: "y", scope: !1230, file: !1081, line: 992, type: !862, align: 8)
!1230 = distinct !DILexicalBlock(scope: !1228, file: !1081, line: 992, column: 9)
!1231 = !DILocation(line: 983, column: 55, scope: !1213)
!1232 = !DILocation(line: 983, column: 66, scope: !1213)
!1233 = !DILocation(line: 983, column: 77, scope: !1213)
!1234 = !DILocation(line: 986, column: 9, scope: !1226)
!1235 = !DILocalVariable(name: "self", arg: 1, scope: !1236, file: !184, line: 60, type: !1104)
!1236 = distinct !DISubprogram(name: "cast<usize, core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hbc01e35e2c6dd8dcE", scope: !195, file: !184, line: 60, type: !1237, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1240, retainedNodes: !1239)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!1222, !1104}
!1239 = !{!1235}
!1240 = !{!393, !1241}
!1241 = !DITemplateTypeParameter(name: "U", type: !574)
!1242 = !DILocation(line: 60, column: 26, scope: !1236, inlinedAt: !1243)
!1243 = distinct !DILocation(line: 984, column: 13, scope: !1213)
!1244 = !DILocation(line: 984, column: 13, scope: !1213)
!1245 = !DILocation(line: 984, column: 9, scope: !1221)
!1246 = !DILocation(line: 60, column: 26, scope: !1236, inlinedAt: !1247)
!1247 = distinct !DILocation(line: 985, column: 13, scope: !1221)
!1248 = !DILocation(line: 985, column: 13, scope: !1221)
!1249 = !DILocation(line: 985, column: 9, scope: !1224)
!1250 = !DILocation(line: 986, column: 17, scope: !1224)
!1251 = !DILocation(line: 987, column: 5, scope: !1226)
!1252 = !DILocation(line: 987, column: 11, scope: !1226)
!1253 = !DILocation(line: 997, column: 2, scope: !1213)
!1254 = !DILocation(line: 989, column: 38, scope: !1226)
!1255 = !DILocalVariable(name: "self", arg: 1, scope: !1256, file: !184, line: 1039, type: !1222)
!1256 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h8ccd1113d47823faE", scope: !195, file: !184, line: 1039, type: !1257, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !1259)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!1222, !1222, !9}
!1259 = !{!1255, !1260}
!1260 = !DILocalVariable(name: "count", arg: 2, scope: !1256, file: !184, line: 1039, type: !9)
!1261 = !DILocation(line: 1039, column: 29, scope: !1256, inlinedAt: !1262)
!1262 = distinct !DILocation(line: 989, column: 32, scope: !1226)
!1263 = !DILocation(line: 1039, column: 35, scope: !1256, inlinedAt: !1262)
!1264 = !DILocation(line: 1044, column: 18, scope: !1256, inlinedAt: !1262)
!1265 = !DILocation(line: 989, column: 26, scope: !1226)
!1266 = !DILocation(line: 989, column: 13, scope: !1228)
!1267 = !DILocation(line: 992, column: 38, scope: !1228)
!1268 = !DILocation(line: 1039, column: 29, scope: !1256, inlinedAt: !1269)
!1269 = distinct !DILocation(line: 992, column: 32, scope: !1228)
!1270 = !DILocation(line: 1039, column: 35, scope: !1256, inlinedAt: !1269)
!1271 = !DILocation(line: 1044, column: 18, scope: !1256, inlinedAt: !1269)
!1272 = !DILocation(line: 992, column: 26, scope: !1228)
!1273 = !DILocation(line: 992, column: 13, scope: !1230)
!1274 = !DILocation(line: 993, column: 9, scope: !1230)
!1275 = !DILocation(line: 995, column: 9, scope: !1230)
!1276 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h18c5a9e6b4cf4e8cE", scope: !134, file: !1081, line: 983, type: !1096, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1277)
!1277 = !{!1278, !1279, !1280, !1281, !1284, !1286, !1288, !1290}
!1278 = !DILocalVariable(name: "x", arg: 1, scope: !1276, file: !1081, line: 983, type: !189)
!1279 = !DILocalVariable(name: "y", arg: 2, scope: !1276, file: !1081, line: 983, type: !189)
!1280 = !DILocalVariable(name: "count", arg: 3, scope: !1276, file: !1081, line: 983, type: !9)
!1281 = !DILocalVariable(name: "x", scope: !1282, file: !1081, line: 984, type: !1283, align: 8)
!1282 = distinct !DILexicalBlock(scope: !1276, file: !1081, line: 984, column: 5)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !540, size: 64, align: 64, dwarfAddressSpace: 0)
!1284 = !DILocalVariable(name: "y", scope: !1285, file: !1081, line: 985, type: !1283, align: 8)
!1285 = distinct !DILexicalBlock(scope: !1282, file: !1081, line: 985, column: 5)
!1286 = !DILocalVariable(name: "i", scope: !1287, file: !1081, line: 986, type: !9, align: 8)
!1287 = distinct !DILexicalBlock(scope: !1285, file: !1081, line: 986, column: 5)
!1288 = !DILocalVariable(name: "x", scope: !1289, file: !1081, line: 989, type: !791, align: 8)
!1289 = distinct !DILexicalBlock(scope: !1287, file: !1081, line: 989, column: 9)
!1290 = !DILocalVariable(name: "y", scope: !1291, file: !1081, line: 992, type: !791, align: 8)
!1291 = distinct !DILexicalBlock(scope: !1289, file: !1081, line: 992, column: 9)
!1292 = !DILocation(line: 983, column: 55, scope: !1276)
!1293 = !DILocation(line: 983, column: 66, scope: !1276)
!1294 = !DILocation(line: 983, column: 77, scope: !1276)
!1295 = !DILocation(line: 986, column: 9, scope: !1287)
!1296 = !DILocalVariable(name: "self", arg: 1, scope: !1297, file: !184, line: 60, type: !189)
!1297 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h9113cbe2341144b5E", scope: !195, file: !184, line: 60, type: !1298, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1301, retainedNodes: !1300)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!1283, !189}
!1300 = !{!1296}
!1301 = !{!120, !1302}
!1302 = !DITemplateTypeParameter(name: "U", type: !540)
!1303 = !DILocation(line: 60, column: 26, scope: !1297, inlinedAt: !1304)
!1304 = distinct !DILocation(line: 984, column: 13, scope: !1276)
!1305 = !DILocation(line: 984, column: 13, scope: !1276)
!1306 = !DILocation(line: 984, column: 9, scope: !1282)
!1307 = !DILocation(line: 60, column: 26, scope: !1297, inlinedAt: !1308)
!1308 = distinct !DILocation(line: 985, column: 13, scope: !1282)
!1309 = !DILocation(line: 985, column: 13, scope: !1282)
!1310 = !DILocation(line: 985, column: 9, scope: !1285)
!1311 = !DILocation(line: 986, column: 17, scope: !1285)
!1312 = !DILocation(line: 987, column: 5, scope: !1287)
!1313 = !DILocation(line: 987, column: 11, scope: !1287)
!1314 = !DILocation(line: 997, column: 2, scope: !1276)
!1315 = !DILocation(line: 989, column: 38, scope: !1287)
!1316 = !DILocalVariable(name: "self", arg: 1, scope: !1317, file: !184, line: 1039, type: !1283)
!1317 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h722c56b18d27687bE", scope: !195, file: !184, line: 1039, type: !1318, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !1320)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!1283, !1283, !9}
!1320 = !{!1316, !1321}
!1321 = !DILocalVariable(name: "count", arg: 2, scope: !1317, file: !184, line: 1039, type: !9)
!1322 = !DILocation(line: 1039, column: 29, scope: !1317, inlinedAt: !1323)
!1323 = distinct !DILocation(line: 989, column: 32, scope: !1287)
!1324 = !DILocation(line: 1039, column: 35, scope: !1317, inlinedAt: !1323)
!1325 = !DILocation(line: 1044, column: 18, scope: !1317, inlinedAt: !1323)
!1326 = !DILocation(line: 989, column: 26, scope: !1287)
!1327 = !DILocation(line: 989, column: 13, scope: !1289)
!1328 = !DILocation(line: 992, column: 38, scope: !1289)
!1329 = !DILocation(line: 1039, column: 29, scope: !1317, inlinedAt: !1330)
!1330 = distinct !DILocation(line: 992, column: 32, scope: !1289)
!1331 = !DILocation(line: 1039, column: 35, scope: !1317, inlinedAt: !1330)
!1332 = !DILocation(line: 1044, column: 18, scope: !1317, inlinedAt: !1330)
!1333 = !DILocation(line: 992, column: 26, scope: !1289)
!1334 = !DILocation(line: 992, column: 13, scope: !1291)
!1335 = !DILocation(line: 993, column: 9, scope: !1291)
!1336 = !DILocation(line: 995, column: 9, scope: !1291)
!1337 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<u8>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h8aa8bbe620da77c0E", scope: !134, file: !1081, line: 983, type: !1338, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, retainedNodes: !1340)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{null, !1111, !1111, !9}
!1340 = !{!1341, !1342, !1343, !1344, !1347, !1349, !1351, !1353}
!1341 = !DILocalVariable(name: "x", arg: 1, scope: !1337, file: !1081, line: 983, type: !1111)
!1342 = !DILocalVariable(name: "y", arg: 2, scope: !1337, file: !1081, line: 983, type: !1111)
!1343 = !DILocalVariable(name: "count", arg: 3, scope: !1337, file: !1081, line: 983, type: !9)
!1344 = !DILocalVariable(name: "x", scope: !1345, file: !1081, line: 984, type: !1346, align: 8)
!1345 = distinct !DILexicalBlock(scope: !1337, file: !1081, line: 984, column: 5)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !832, size: 64, align: 64, dwarfAddressSpace: 0)
!1347 = !DILocalVariable(name: "y", scope: !1348, file: !1081, line: 985, type: !1346, align: 8)
!1348 = distinct !DILexicalBlock(scope: !1345, file: !1081, line: 985, column: 5)
!1349 = !DILocalVariable(name: "i", scope: !1350, file: !1081, line: 986, type: !9, align: 8)
!1350 = distinct !DILexicalBlock(scope: !1348, file: !1081, line: 986, column: 5)
!1351 = !DILocalVariable(name: "x", scope: !1352, file: !1081, line: 989, type: !831, align: 8)
!1352 = distinct !DILexicalBlock(scope: !1350, file: !1081, line: 989, column: 9)
!1353 = !DILocalVariable(name: "y", scope: !1354, file: !1081, line: 992, type: !831, align: 8)
!1354 = distinct !DILexicalBlock(scope: !1352, file: !1081, line: 992, column: 9)
!1355 = !DILocation(line: 983, column: 55, scope: !1337)
!1356 = !DILocation(line: 983, column: 66, scope: !1337)
!1357 = !DILocation(line: 983, column: 77, scope: !1337)
!1358 = !DILocation(line: 986, column: 9, scope: !1350)
!1359 = !DILocalVariable(name: "self", arg: 1, scope: !1360, file: !184, line: 60, type: !1111)
!1360 = distinct !DISubprogram(name: "cast<u8, core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hd25e7c7ae84ab08cE", scope: !195, file: !184, line: 60, type: !1361, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1364, retainedNodes: !1363)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{!1346, !1111}
!1363 = !{!1359}
!1364 = !{!840, !1365}
!1365 = !DITemplateTypeParameter(name: "U", type: !832)
!1366 = !DILocation(line: 60, column: 26, scope: !1360, inlinedAt: !1367)
!1367 = distinct !DILocation(line: 984, column: 13, scope: !1337)
!1368 = !DILocation(line: 984, column: 13, scope: !1337)
!1369 = !DILocation(line: 984, column: 9, scope: !1345)
!1370 = !DILocation(line: 60, column: 26, scope: !1360, inlinedAt: !1371)
!1371 = distinct !DILocation(line: 985, column: 13, scope: !1345)
!1372 = !DILocation(line: 985, column: 13, scope: !1345)
!1373 = !DILocation(line: 985, column: 9, scope: !1348)
!1374 = !DILocation(line: 986, column: 17, scope: !1348)
!1375 = !DILocation(line: 987, column: 5, scope: !1350)
!1376 = !DILocation(line: 987, column: 11, scope: !1350)
!1377 = !DILocation(line: 997, column: 2, scope: !1337)
!1378 = !DILocation(line: 989, column: 38, scope: !1350)
!1379 = !DILocalVariable(name: "self", arg: 1, scope: !1380, file: !184, line: 1039, type: !1346)
!1380 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h2f2c870c0702c96eE", scope: !195, file: !184, line: 1039, type: !1381, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !848, retainedNodes: !1383)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{!1346, !1346, !9}
!1383 = !{!1379, !1384}
!1384 = !DILocalVariable(name: "count", arg: 2, scope: !1380, file: !184, line: 1039, type: !9)
!1385 = !DILocation(line: 1039, column: 29, scope: !1380, inlinedAt: !1386)
!1386 = distinct !DILocation(line: 989, column: 32, scope: !1350)
!1387 = !DILocation(line: 1039, column: 35, scope: !1380, inlinedAt: !1386)
!1388 = !DILocation(line: 1044, column: 18, scope: !1380, inlinedAt: !1386)
!1389 = !DILocation(line: 989, column: 26, scope: !1350)
!1390 = !DILocation(line: 989, column: 13, scope: !1352)
!1391 = !DILocation(line: 992, column: 38, scope: !1352)
!1392 = !DILocation(line: 1039, column: 29, scope: !1380, inlinedAt: !1393)
!1393 = distinct !DILocation(line: 992, column: 32, scope: !1352)
!1394 = !DILocation(line: 1039, column: 35, scope: !1380, inlinedAt: !1393)
!1395 = !DILocation(line: 1044, column: 18, scope: !1380, inlinedAt: !1393)
!1396 = !DILocation(line: 992, column: 26, scope: !1352)
!1397 = !DILocation(line: 992, column: 13, scope: !1354)
!1398 = !DILocation(line: 993, column: 9, scope: !1354)
!1399 = !DILocation(line: 995, column: 9, scope: !1354)
!1400 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read17h7789c400b36c2604E", scope: !134, file: !1081, line: 1167, type: !1401, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !1403)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!540, !539}
!1403 = !{!1404}
!1404 = !DILocalVariable(name: "src", arg: 1, scope: !1400, file: !1081, line: 1167, type: !539)
!1405 = !DILocation(line: 1167, column: 29, scope: !1400)
!1406 = !DILocation(line: 1196, column: 9, scope: !1400)
!1407 = !DILocation(line: 1200, column: 9, scope: !1400)
!1408 = !DILocation(line: 1202, column: 2, scope: !1400)
!1409 = !DILocalVariable(name: "src", arg: 1, scope: !1410, file: !148, line: 2530, type: !539)
!1410 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read7runtime17h17d6a0c282286493E", scope: !1411, file: !148, line: 2530, type: !1412, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !1414)
!1411 = !DINamespace(name: "read", scope: !134)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{null, !539}
!1414 = !{!1409}
!1415 = !DILocation(line: 2530, column: 39, scope: !1410, inlinedAt: !1416)
!1416 = distinct !DILocation(line: 1196, column: 9, scope: !1400)
!1417 = !DILocation(line: 1198, column: 35, scope: !1418, inlinedAt: !1416)
!1418 = !DILexicalBlockFile(scope: !1410, file: !1081, discriminator: 0)
!1419 = !DILocation(line: 2533, column: 21, scope: !1410, inlinedAt: !1416)
!1420 = distinct !DISubprogram(name: "read<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read17h8a7b025a440768baE", scope: !134, file: !1081, line: 1167, type: !1421, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1423)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!13, !137}
!1423 = !{!1424}
!1424 = !DILocalVariable(name: "src", arg: 1, scope: !1420, file: !1081, line: 1167, type: !137)
!1425 = !DILocation(line: 1167, column: 29, scope: !1420)
!1426 = !DILocation(line: 1196, column: 9, scope: !1420)
!1427 = !DILocation(line: 1200, column: 9, scope: !1420)
!1428 = !DILocation(line: 1202, column: 2, scope: !1420)
!1429 = !DILocalVariable(name: "src", arg: 1, scope: !1430, file: !148, line: 2530, type: !137)
!1430 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read7runtime17h7a8737ae22681425E", scope: !1411, file: !148, line: 2530, type: !1431, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1433)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{null, !137}
!1433 = !{!1429}
!1434 = !DILocation(line: 2530, column: 39, scope: !1430, inlinedAt: !1435)
!1435 = distinct !DILocation(line: 1196, column: 9, scope: !1420)
!1436 = !DILocation(line: 1198, column: 35, scope: !1437, inlinedAt: !1435)
!1437 = !DILexicalBlockFile(scope: !1430, file: !1081, discriminator: 0)
!1438 = !DILocation(line: 2533, column: 21, scope: !1430, inlinedAt: !1435)
!1439 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr4read17haea0bf519ac475edE", scope: !134, file: !1081, line: 1167, type: !1440, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !1442)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!574, !573}
!1442 = !{!1443}
!1443 = !DILocalVariable(name: "src", arg: 1, scope: !1439, file: !1081, line: 1167, type: !573)
!1444 = !DILocation(line: 1167, column: 29, scope: !1439)
!1445 = !DILocation(line: 1196, column: 9, scope: !1439)
!1446 = !DILocation(line: 1200, column: 9, scope: !1439)
!1447 = !DILocation(line: 1202, column: 2, scope: !1439)
!1448 = !DILocalVariable(name: "src", arg: 1, scope: !1449, file: !148, line: 2530, type: !573)
!1449 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr4read7runtime17h85910562b024e142E", scope: !1411, file: !148, line: 2530, type: !1450, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !1452)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{null, !573}
!1452 = !{!1448}
!1453 = !DILocation(line: 2530, column: 39, scope: !1449, inlinedAt: !1454)
!1454 = distinct !DILocation(line: 1196, column: 9, scope: !1439)
!1455 = !DILocation(line: 1198, column: 35, scope: !1456, inlinedAt: !1454)
!1456 = !DILexicalBlockFile(scope: !1449, file: !1081, discriminator: 0)
!1457 = !DILocation(line: 2533, column: 21, scope: !1449, inlinedAt: !1454)
!1458 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr4read17hbbcfc7757d0bbf6dE", scope: !134, file: !1081, line: 1167, type: !1459, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !848, retainedNodes: !1462)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!832, !1461}
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !832, size: 64, align: 64, dwarfAddressSpace: 0)
!1462 = !{!1463}
!1463 = !DILocalVariable(name: "src", arg: 1, scope: !1458, file: !1081, line: 1167, type: !1461)
!1464 = !DILocation(line: 1167, column: 29, scope: !1458)
!1465 = !DILocation(line: 1196, column: 9, scope: !1458)
!1466 = !DILocation(line: 1200, column: 9, scope: !1458)
!1467 = !DILocation(line: 1202, column: 2, scope: !1458)
!1468 = !DILocalVariable(name: "src", arg: 1, scope: !1469, file: !148, line: 2530, type: !1461)
!1469 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr4read7runtime17h3d7b1fa2b6f4b95dE", scope: !1411, file: !148, line: 2530, type: !1470, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !848, retainedNodes: !1472)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{null, !1461}
!1472 = !{!1468}
!1473 = !DILocation(line: 2530, column: 39, scope: !1469, inlinedAt: !1474)
!1474 = distinct !DILocation(line: 1196, column: 9, scope: !1458)
!1475 = !DILocation(line: 1198, column: 35, scope: !1476, inlinedAt: !1474)
!1476 = !DILexicalBlockFile(scope: !1469, file: !1081, discriminator: 0)
!1477 = !DILocation(line: 2533, column: 21, scope: !1469, inlinedAt: !1474)
!1478 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4swap17h2f264edc6d2d6d71E", scope: !134, file: !1081, line: 867, type: !1479, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1481)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{null, !189, !189}
!1481 = !{!1482, !1483, !1484}
!1482 = !DILocalVariable(name: "x", arg: 1, scope: !1478, file: !1081, line: 867, type: !189)
!1483 = !DILocalVariable(name: "y", arg: 2, scope: !1478, file: !1081, line: 867, type: !189)
!1484 = !DILocalVariable(name: "tmp", scope: !1485, file: !1081, line: 870, type: !540, align: 8)
!1485 = distinct !DILexicalBlock(scope: !1478, file: !1081, line: 870, column: 5)
!1486 = !DILocation(line: 867, column: 29, scope: !1478)
!1487 = !DILocation(line: 867, column: 40, scope: !1478)
!1488 = !DILocation(line: 870, column: 9, scope: !1485)
!1489 = !DILocalVariable(name: "self", arg: 1, scope: !1490, file: !1491, line: 572, type: !791)
!1490 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hdc1fa31b626225a7E", scope: !540, file: !1491, line: 572, type: !1492, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !1494, retainedNodes: !1495)
!1491 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "a2080165dc47eac4836a9708be499285")
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!189, !791}
!1494 = !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hdc1fa31b626225a7E", scope: !540, file: !1491, line: 572, type: !1492, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!1495 = !{!1489}
!1496 = !DILocation(line: 572, column: 29, scope: !1490, inlinedAt: !1497)
!1497 = distinct !DILocation(line: 878, column: 32, scope: !1485)
!1498 = !DILocalVariable(name: "src", arg: 1, scope: !1499, file: !148, line: 2672, type: !137)
!1499 = distinct !DISubprogram(name: "copy_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h7b52db60dcf7a5bfE", scope: !436, file: !148, line: 2672, type: !1500, scopeLine: 2672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1502)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{null, !137, !189, !9}
!1502 = !{!1498, !1503, !1504}
!1503 = !DILocalVariable(name: "dst", arg: 2, scope: !1499, file: !148, line: 2672, type: !189)
!1504 = !DILocalVariable(name: "count", arg: 3, scope: !1499, file: !148, line: 2672, type: !9)
!1505 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !1506)
!1506 = distinct !DILocation(line: 878, column: 9, scope: !1485)
!1507 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !1506)
!1508 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !1506)
!1509 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !1506)
!1510 = !DILocalVariable(name: "src", arg: 1, scope: !1511, file: !148, line: 2530, type: !137)
!1511 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17hcb11c97342ee30f8E", scope: !1512, file: !148, line: 2530, type: !1500, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1513)
!1512 = !DINamespace(name: "copy_nonoverlapping", scope: !436)
!1513 = !{!1510, !1514, !1515}
!1514 = !DILocalVariable(name: "dst", arg: 2, scope: !1511, file: !148, line: 2530, type: !189)
!1515 = !DILocalVariable(name: "count", arg: 3, scope: !1511, file: !148, line: 2530, type: !9)
!1516 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !1517)
!1517 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !1506)
!1518 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !1517)
!1519 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !1517)
!1520 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !1517)
!1521 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !1517)
!1522 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !1506)
!1523 = !DILocalVariable(name: "src", arg: 1, scope: !1524, file: !148, line: 2768, type: !137)
!1524 = distinct !DISubprogram(name: "copy<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy17h5eaf16bdf46aed51E", scope: !436, file: !148, line: 2768, type: !1500, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1525)
!1525 = !{!1523, !1526, !1527}
!1526 = !DILocalVariable(name: "dst", arg: 2, scope: !1524, file: !148, line: 2768, type: !189)
!1527 = !DILocalVariable(name: "count", arg: 3, scope: !1524, file: !148, line: 2768, type: !9)
!1528 = !DILocation(line: 2768, column: 29, scope: !1524, inlinedAt: !1529)
!1529 = distinct !DILocation(line: 879, column: 9, scope: !1485)
!1530 = !DILocation(line: 2768, column: 44, scope: !1524, inlinedAt: !1529)
!1531 = !DILocation(line: 2768, column: 57, scope: !1524, inlinedAt: !1529)
!1532 = !DILocation(line: 2777, column: 9, scope: !1524, inlinedAt: !1529)
!1533 = !DILocalVariable(name: "src", arg: 1, scope: !1534, file: !148, line: 2530, type: !137)
!1534 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy7runtime17ha20f8519d471f186E", scope: !1535, file: !148, line: 2530, type: !1536, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1538)
!1535 = !DINamespace(name: "copy", scope: !436)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{null, !137, !189}
!1538 = !{!1533, !1539}
!1539 = !DILocalVariable(name: "dst", arg: 2, scope: !1534, file: !148, line: 2530, type: !189)
!1540 = !DILocation(line: 2530, column: 39, scope: !1534, inlinedAt: !1541)
!1541 = distinct !DILocation(line: 2777, column: 9, scope: !1524, inlinedAt: !1529)
!1542 = !DILocation(line: 2780, column: 13, scope: !1534, inlinedAt: !1541)
!1543 = !DILocation(line: 2533, column: 21, scope: !1534, inlinedAt: !1541)
!1544 = !DILocation(line: 2780, column: 45, scope: !1534, inlinedAt: !1541)
!1545 = !DILocation(line: 2782, column: 9, scope: !1524, inlinedAt: !1529)
!1546 = !DILocalVariable(name: "self", arg: 1, scope: !1547, file: !1491, line: 533, type: !1550)
!1547 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17ha013edad6290bae0E", scope: !540, file: !1491, line: 533, type: !1548, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !1551, retainedNodes: !1552)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!137, !1550}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !540, size: 64, align: 64, dwarfAddressSpace: 0)
!1551 = !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17ha013edad6290bae0E", scope: !540, file: !1491, line: 533, type: !1548, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!1552 = !{!1546}
!1553 = !DILocation(line: 533, column: 25, scope: !1547, inlinedAt: !1554)
!1554 = distinct !DILocation(line: 880, column: 29, scope: !1485)
!1555 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !1556)
!1556 = distinct !DILocation(line: 880, column: 9, scope: !1485)
!1557 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !1556)
!1558 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !1556)
!1559 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !1556)
!1560 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !1561)
!1561 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !1556)
!1562 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !1561)
!1563 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !1561)
!1564 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !1561)
!1565 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !1561)
!1566 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !1556)
!1567 = !DILocation(line: 882, column: 2, scope: !1478)
!1568 = distinct !DISubprogram(name: "swap<usize>", linkageName: "_ZN4core3ptr4swap17h30979ba0d8e47384E", scope: !134, file: !1081, line: 867, type: !1569, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, retainedNodes: !1571)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{null, !1104, !1104}
!1571 = !{!1572, !1573, !1574}
!1572 = !DILocalVariable(name: "x", arg: 1, scope: !1568, file: !1081, line: 867, type: !1104)
!1573 = !DILocalVariable(name: "y", arg: 2, scope: !1568, file: !1081, line: 867, type: !1104)
!1574 = !DILocalVariable(name: "tmp", scope: !1575, file: !1081, line: 870, type: !574, align: 8)
!1575 = distinct !DILexicalBlock(scope: !1568, file: !1081, line: 870, column: 5)
!1576 = !DILocation(line: 867, column: 29, scope: !1568)
!1577 = !DILocation(line: 867, column: 40, scope: !1568)
!1578 = !DILocation(line: 870, column: 9, scope: !1575)
!1579 = !DILocation(line: 315, column: 6, scope: !1580, inlinedAt: !1584)
!1580 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h244adcb69972a597E", scope: !574, file: !1491, line: 313, type: !1581, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, declaration: !1583)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!574}
!1583 = !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h244adcb69972a597E", scope: !574, file: !1491, line: 313, type: !1581, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !392)
!1584 = distinct !DILocation(line: 870, column: 19, scope: !1568)
!1585 = !DILocation(line: 870, column: 19, scope: !1568)
!1586 = !DILocalVariable(name: "self", arg: 1, scope: !1587, file: !1491, line: 572, type: !862)
!1587 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h4237c18ae247260bE", scope: !574, file: !1491, line: 572, type: !1588, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, declaration: !1590, retainedNodes: !1591)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!1104, !862}
!1590 = !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h4237c18ae247260bE", scope: !574, file: !1491, line: 572, type: !1588, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !392)
!1591 = !{!1586}
!1592 = !DILocation(line: 572, column: 29, scope: !1587, inlinedAt: !1593)
!1593 = distinct !DILocation(line: 878, column: 32, scope: !1575)
!1594 = !DILocalVariable(name: "src", arg: 1, scope: !1595, file: !148, line: 2672, type: !439)
!1595 = distinct !DISubprogram(name: "copy_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h87f6c24a7c2b5327E", scope: !436, file: !148, line: 2672, type: !1596, scopeLine: 2672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, retainedNodes: !1598)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{null, !439, !1104, !9}
!1598 = !{!1594, !1599, !1600}
!1599 = !DILocalVariable(name: "dst", arg: 2, scope: !1595, file: !148, line: 2672, type: !1104)
!1600 = !DILocalVariable(name: "count", arg: 3, scope: !1595, file: !148, line: 2672, type: !9)
!1601 = !DILocation(line: 2672, column: 44, scope: !1595, inlinedAt: !1602)
!1602 = distinct !DILocation(line: 878, column: 9, scope: !1575)
!1603 = !DILocation(line: 2672, column: 59, scope: !1595, inlinedAt: !1602)
!1604 = !DILocation(line: 2672, column: 72, scope: !1595, inlinedAt: !1602)
!1605 = !DILocation(line: 2682, column: 9, scope: !1595, inlinedAt: !1602)
!1606 = !DILocalVariable(name: "src", arg: 1, scope: !1607, file: !148, line: 2530, type: !439)
!1607 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17hc65679eac91a17e4E", scope: !1512, file: !148, line: 2530, type: !1596, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, retainedNodes: !1608)
!1608 = !{!1606, !1609, !1610}
!1609 = !DILocalVariable(name: "dst", arg: 2, scope: !1607, file: !148, line: 2530, type: !1104)
!1610 = !DILocalVariable(name: "count", arg: 3, scope: !1607, file: !148, line: 2530, type: !9)
!1611 = !DILocation(line: 2530, column: 39, scope: !1607, inlinedAt: !1612)
!1612 = distinct !DILocation(line: 2682, column: 9, scope: !1595, inlinedAt: !1602)
!1613 = !DILocation(line: 2686, column: 13, scope: !1607, inlinedAt: !1612)
!1614 = !DILocation(line: 2533, column: 21, scope: !1607, inlinedAt: !1612)
!1615 = !DILocation(line: 2687, column: 20, scope: !1607, inlinedAt: !1612)
!1616 = !DILocation(line: 2688, column: 20, scope: !1607, inlinedAt: !1612)
!1617 = !DILocation(line: 2690, column: 9, scope: !1595, inlinedAt: !1602)
!1618 = !DILocalVariable(name: "src", arg: 1, scope: !1619, file: !148, line: 2768, type: !439)
!1619 = distinct !DISubprogram(name: "copy<usize>", linkageName: "_ZN4core10intrinsics4copy17he2b9ee6640365ad8E", scope: !436, file: !148, line: 2768, type: !1596, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, retainedNodes: !1620)
!1620 = !{!1618, !1621, !1622}
!1621 = !DILocalVariable(name: "dst", arg: 2, scope: !1619, file: !148, line: 2768, type: !1104)
!1622 = !DILocalVariable(name: "count", arg: 3, scope: !1619, file: !148, line: 2768, type: !9)
!1623 = !DILocation(line: 2768, column: 29, scope: !1619, inlinedAt: !1624)
!1624 = distinct !DILocation(line: 879, column: 9, scope: !1575)
!1625 = !DILocation(line: 2768, column: 44, scope: !1619, inlinedAt: !1624)
!1626 = !DILocation(line: 2768, column: 57, scope: !1619, inlinedAt: !1624)
!1627 = !DILocation(line: 2777, column: 9, scope: !1619, inlinedAt: !1624)
!1628 = !DILocalVariable(name: "src", arg: 1, scope: !1629, file: !148, line: 2530, type: !439)
!1629 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics4copy7runtime17h6de5a8af59557247E", scope: !1535, file: !148, line: 2530, type: !1630, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, retainedNodes: !1632)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{null, !439, !1104}
!1632 = !{!1628, !1633}
!1633 = !DILocalVariable(name: "dst", arg: 2, scope: !1629, file: !148, line: 2530, type: !1104)
!1634 = !DILocation(line: 2530, column: 39, scope: !1629, inlinedAt: !1635)
!1635 = distinct !DILocation(line: 2777, column: 9, scope: !1619, inlinedAt: !1624)
!1636 = !DILocation(line: 2780, column: 13, scope: !1629, inlinedAt: !1635)
!1637 = !DILocation(line: 2533, column: 21, scope: !1629, inlinedAt: !1635)
!1638 = !DILocation(line: 2780, column: 45, scope: !1629, inlinedAt: !1635)
!1639 = !DILocation(line: 2782, column: 9, scope: !1619, inlinedAt: !1624)
!1640 = !DILocalVariable(name: "self", arg: 1, scope: !1641, file: !1491, line: 533, type: !1644)
!1641 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hb7e1cfb572d280c0E", scope: !574, file: !1491, line: 533, type: !1642, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !392, declaration: !1645, retainedNodes: !1646)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!439, !1644}
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !574, size: 64, align: 64, dwarfAddressSpace: 0)
!1645 = !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hb7e1cfb572d280c0E", scope: !574, file: !1491, line: 533, type: !1642, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !392)
!1646 = !{!1640}
!1647 = !DILocation(line: 533, column: 25, scope: !1641, inlinedAt: !1648)
!1648 = distinct !DILocation(line: 880, column: 29, scope: !1575)
!1649 = !DILocation(line: 2672, column: 44, scope: !1595, inlinedAt: !1650)
!1650 = distinct !DILocation(line: 880, column: 9, scope: !1575)
!1651 = !DILocation(line: 2672, column: 59, scope: !1595, inlinedAt: !1650)
!1652 = !DILocation(line: 2672, column: 72, scope: !1595, inlinedAt: !1650)
!1653 = !DILocation(line: 2682, column: 9, scope: !1595, inlinedAt: !1650)
!1654 = !DILocation(line: 2530, column: 39, scope: !1607, inlinedAt: !1655)
!1655 = distinct !DILocation(line: 2682, column: 9, scope: !1595, inlinedAt: !1650)
!1656 = !DILocation(line: 2686, column: 13, scope: !1607, inlinedAt: !1655)
!1657 = !DILocation(line: 2533, column: 21, scope: !1607, inlinedAt: !1655)
!1658 = !DILocation(line: 2687, column: 20, scope: !1607, inlinedAt: !1655)
!1659 = !DILocation(line: 2688, column: 20, scope: !1607, inlinedAt: !1655)
!1660 = !DILocation(line: 2690, column: 9, scope: !1595, inlinedAt: !1650)
!1661 = !DILocation(line: 882, column: 2, scope: !1568)
!1662 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write17h441935d3b6ac0554E", scope: !134, file: !1081, line: 1383, type: !1663, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !1665)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{null, !1283, !540}
!1665 = !{!1666, !1667}
!1666 = !DILocalVariable(name: "dst", arg: 1, scope: !1662, file: !1081, line: 1383, type: !1283)
!1667 = !DILocalVariable(name: "src", arg: 2, scope: !1662, file: !1081, line: 1383, type: !540)
!1668 = !DILocation(line: 1383, column: 30, scope: !1662)
!1669 = !DILocation(line: 1383, column: 43, scope: !1662)
!1670 = !DILocation(line: 1396, column: 9, scope: !1662)
!1671 = !DILocation(line: 1400, column: 9, scope: !1662)
!1672 = !DILocation(line: 1402, column: 2, scope: !1662)
!1673 = !DILocalVariable(name: "dst", arg: 1, scope: !1674, file: !148, line: 2530, type: !1283)
!1674 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write7runtime17h3f687b0cf69634bcE", scope: !1675, file: !148, line: 2530, type: !1676, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !1678)
!1675 = !DINamespace(name: "write", scope: !134)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{null, !1283}
!1678 = !{!1673}
!1679 = !DILocation(line: 2530, column: 39, scope: !1674, inlinedAt: !1680)
!1680 = distinct !DILocation(line: 1396, column: 9, scope: !1662)
!1681 = !DILocation(line: 1398, column: 33, scope: !1682, inlinedAt: !1680)
!1682 = !DILexicalBlockFile(scope: !1674, file: !1081, discriminator: 0)
!1683 = !DILocation(line: 2533, column: 21, scope: !1674, inlinedAt: !1680)
!1684 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr5write17h64e07bc1481c4f30E", scope: !134, file: !1081, line: 1383, type: !1685, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !848, retainedNodes: !1687)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{null, !1346, !832}
!1687 = !{!1688, !1689}
!1688 = !DILocalVariable(name: "dst", arg: 1, scope: !1684, file: !1081, line: 1383, type: !1346)
!1689 = !DILocalVariable(name: "src", arg: 2, scope: !1684, file: !1081, line: 1383, type: !832)
!1690 = !DILocation(line: 1383, column: 30, scope: !1684)
!1691 = !DILocation(line: 1383, column: 43, scope: !1684)
!1692 = !DILocation(line: 1396, column: 9, scope: !1684)
!1693 = !DILocation(line: 1400, column: 9, scope: !1684)
!1694 = !DILocation(line: 1402, column: 2, scope: !1684)
!1695 = !DILocalVariable(name: "dst", arg: 1, scope: !1696, file: !148, line: 2530, type: !1346)
!1696 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr5write7runtime17hfe7c952dc41e9bc9E", scope: !1675, file: !148, line: 2530, type: !1697, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !848, retainedNodes: !1699)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1346}
!1699 = !{!1695}
!1700 = !DILocation(line: 2530, column: 39, scope: !1696, inlinedAt: !1701)
!1701 = distinct !DILocation(line: 1396, column: 9, scope: !1684)
!1702 = !DILocation(line: 1398, column: 33, scope: !1703, inlinedAt: !1701)
!1703 = !DILexicalBlockFile(scope: !1696, file: !1081, discriminator: 0)
!1704 = !DILocation(line: 2533, column: 21, scope: !1696, inlinedAt: !1701)
!1705 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr5write17hb85e195ed1884d82E", scope: !134, file: !1081, line: 1383, type: !1706, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !1708)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{null, !1222, !574}
!1708 = !{!1709, !1710}
!1709 = !DILocalVariable(name: "dst", arg: 1, scope: !1705, file: !1081, line: 1383, type: !1222)
!1710 = !DILocalVariable(name: "src", arg: 2, scope: !1705, file: !1081, line: 1383, type: !574)
!1711 = !DILocation(line: 1383, column: 30, scope: !1705)
!1712 = !DILocation(line: 1383, column: 43, scope: !1705)
!1713 = !DILocation(line: 1396, column: 9, scope: !1705)
!1714 = !DILocation(line: 1400, column: 9, scope: !1705)
!1715 = !DILocation(line: 1402, column: 2, scope: !1705)
!1716 = !DILocalVariable(name: "dst", arg: 1, scope: !1717, file: !148, line: 2530, type: !1222)
!1717 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr5write7runtime17h44690ec1e4e1cf07E", scope: !1675, file: !148, line: 2530, type: !1718, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !1720)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{null, !1222}
!1720 = !{!1716}
!1721 = !DILocation(line: 2530, column: 39, scope: !1717, inlinedAt: !1722)
!1722 = distinct !DILocation(line: 1396, column: 9, scope: !1705)
!1723 = !DILocation(line: 1398, column: 33, scope: !1724, inlinedAt: !1722)
!1724 = !DILexicalBlockFile(scope: !1717, file: !1081, discriminator: 0)
!1725 = !DILocation(line: 2533, column: 21, scope: !1717, inlinedAt: !1722)
!1726 = distinct !DISubprogram(name: "write<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write17hd3776409b8a0c2c6E", scope: !134, file: !1081, line: 1383, type: !1727, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1729)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{null, !189, !13}
!1729 = !{!1730, !1731}
!1730 = !DILocalVariable(name: "dst", arg: 1, scope: !1726, file: !1081, line: 1383, type: !189)
!1731 = !DILocalVariable(name: "src", arg: 2, scope: !1726, file: !1081, line: 1383, type: !13)
!1732 = !DILocation(line: 1383, column: 30, scope: !1726)
!1733 = !DILocation(line: 1383, column: 43, scope: !1726)
!1734 = !DILocation(line: 1396, column: 9, scope: !1726)
!1735 = !DILocation(line: 1400, column: 9, scope: !1726)
!1736 = !DILocation(line: 1402, column: 2, scope: !1726)
!1737 = !DILocalVariable(name: "dst", arg: 1, scope: !1738, file: !148, line: 2530, type: !189)
!1738 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write7runtime17he771d886c72844a3E", scope: !1675, file: !148, line: 2530, type: !1739, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1741)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{null, !189}
!1741 = !{!1737}
!1742 = !DILocation(line: 2530, column: 39, scope: !1738, inlinedAt: !1743)
!1743 = distinct !DILocation(line: 1396, column: 9, scope: !1726)
!1744 = !DILocation(line: 1398, column: 33, scope: !1745, inlinedAt: !1743)
!1745 = !DILexicalBlockFile(scope: !1738, file: !1081, discriminator: 0)
!1746 = !DILocation(line: 2533, column: 21, scope: !1738, inlinedAt: !1743)
!1747 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::FrameRange>", linkageName: "_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17h662fe180decc0f68E", scope: !134, file: !1081, line: 498, type: !1748, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1753, retainedNodes: !1751)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{null, !1750}
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!1751 = !{!1752}
!1752 = !DILocalVariable(arg: 1, scope: !1747, file: !1081, line: 498, type: !1750)
!1753 = !{!1754}
!1754 = !DITemplateTypeParameter(name: "T", type: !19)
!1755 = !DILocation(line: 498, column: 1, scope: !1747)
!1756 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17hb941c6545ab6374fE", scope: !134, file: !1081, line: 498, type: !1757, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !650, retainedNodes: !1760)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{null, !1759}
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!1760 = !{!1761}
!1761 = !DILocalVariable(arg: 1, scope: !1756, file: !1081, line: 498, type: !1759)
!1762 = !DILocation(line: 498, column: 1, scope: !1756)
!1763 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h398633e1e3945dc3E", scope: !134, file: !1081, line: 498, type: !1764, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1769, retainedNodes: !1767)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{null, !1766}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!1767 = !{!1768}
!1768 = !DILocalVariable(arg: 1, scope: !1763, file: !1081, line: 498, type: !1766)
!1769 = !{!1770}
!1770 = !DITemplateTypeParameter(name: "T", type: !60)
!1771 = !DILocation(line: 498, column: 1, scope: !1763)
!1772 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17he8eed1947dbf4e99E", scope: !1773, file: !184, line: 37, type: !1774, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1776)
!1773 = !DINamespace(name: "is_null", scope: !195)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!328, !1111}
!1776 = !{!1777}
!1777 = !DILocalVariable(name: "ptr", arg: 1, scope: !1772, file: !184, line: 37, type: !1111)
!1778 = !DILocation(line: 37, column: 25, scope: !1772)
!1779 = !DILocalVariable(name: "self", arg: 1, scope: !1780, file: !184, line: 213, type: !1111)
!1780 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hd55f56320dc79ce6E", scope: !195, file: !184, line: 213, type: !1781, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, retainedNodes: !1783)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!9, !1111}
!1783 = !{!1779}
!1784 = !DILocation(line: 213, column: 17, scope: !1780, inlinedAt: !1785)
!1785 = distinct !DILocation(line: 38, column: 13, scope: !1772)
!1786 = !DILocalVariable(name: "self", arg: 1, scope: !1787, file: !184, line: 60, type: !1111)
!1787 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h952390dc26aa903cE", scope: !195, file: !184, line: 60, type: !1788, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1791, retainedNodes: !1790)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!1207, !1111}
!1790 = !{!1786}
!1791 = !{!840, !468}
!1792 = !DILocation(line: 60, column: 26, scope: !1787, inlinedAt: !1793)
!1793 = distinct !DILocation(line: 217, column: 33, scope: !1780, inlinedAt: !1785)
!1794 = !DILocation(line: 217, column: 18, scope: !1780, inlinedAt: !1785)
!1795 = !DILocation(line: 38, column: 13, scope: !1772)
!1796 = !DILocation(line: 39, column: 10, scope: !1772)
!1797 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h040aa9b4bb00386bE", scope: !195, file: !184, line: 35, type: !1798, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1800)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!328, !189}
!1800 = !{!1801}
!1801 = !DILocalVariable(name: "self", arg: 1, scope: !1797, file: !184, line: 35, type: !189)
!1802 = !DILocation(line: 35, column: 26, scope: !1797)
!1803 = !DILocation(line: 52, column: 36, scope: !1797)
!1804 = !DILocation(line: 52, column: 18, scope: !1797)
!1805 = !DILocation(line: 53, column: 6, scope: !1797)
!1806 = distinct !DISubprogram(name: "from_raw_parts<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hf3c6b37c41e09fadE", scope: !1808, file: !1807, line: 111, type: !1809, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1811)
!1807 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "02a0aa93591cf45ea40bc18b5bf8fc0d")
!1808 = !DINamespace(name: "metadata", scope: !134)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!99, !6, !9}
!1811 = !{!1812, !1813}
!1812 = !DILocalVariable(name: "data_address", arg: 1, scope: !1806, file: !1807, line: 112, type: !6)
!1813 = !DILocalVariable(name: "metadata", arg: 2, scope: !1806, file: !1807, line: 113, type: !9)
!1814 = !DILocation(line: 112, column: 5, scope: !1806)
!1815 = !DILocation(line: 113, column: 5, scope: !1806)
!1816 = !DILocation(line: 118, column: 36, scope: !1806)
!1817 = !DILocation(line: 118, column: 14, scope: !1806)
!1818 = !DILocation(line: 119, column: 2, scope: !1806)
!1819 = distinct !DISubprogram(name: "from_raw_parts_mut<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h959d99cc4cce15feE", scope: !1808, file: !1807, line: 128, type: !1820, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1822)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!164, !1207, !9}
!1822 = !{!1823, !1824}
!1823 = !DILocalVariable(name: "data_address", arg: 1, scope: !1819, file: !1807, line: 129, type: !1207)
!1824 = !DILocalVariable(name: "metadata", arg: 2, scope: !1819, file: !1807, line: 130, type: !9)
!1825 = !DILocation(line: 129, column: 5, scope: !1819)
!1826 = !DILocation(line: 130, column: 5, scope: !1819)
!1827 = !DILocation(line: 135, column: 36, scope: !1819)
!1828 = !DILocation(line: 135, column: 14, scope: !1819)
!1829 = !DILocation(line: 136, column: 2, scope: !1819)
!1830 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17he6b55a9cedbd3c40E", scope: !1808, file: !1807, line: 128, type: !1831, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, retainedNodes: !1833)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{!1111, !1207, !7}
!1833 = !{!1834, !1835}
!1834 = !DILocalVariable(name: "data_address", arg: 1, scope: !1830, file: !1807, line: 129, type: !1207)
!1835 = !DILocalVariable(name: "metadata", arg: 2, scope: !1830, file: !1807, line: 130, type: !7)
!1836 = !DILocation(line: 129, column: 5, scope: !1830)
!1837 = !DILocation(line: 130, column: 5, scope: !1830)
!1838 = !DILocation(line: 135, column: 36, scope: !1830)
!1839 = !DILocation(line: 135, column: 14, scope: !1830)
!1840 = !DILocation(line: 136, column: 2, scope: !1830)
!1841 = distinct !DISubprogram(name: "metadata<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata8metadata17hc8ef30a845d81c17E", scope: !1808, file: !1807, line: 94, type: !1842, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1844)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{!9, !99}
!1844 = !{!1845}
!1845 = !DILocalVariable(name: "ptr", arg: 1, scope: !1841, file: !1807, line: 94, type: !99)
!1846 = !DILocation(line: 94, column: 34, scope: !1841)
!1847 = !DILocation(line: 98, column: 14, scope: !1841)
!1848 = !DILocation(line: 99, column: 2, scope: !1841)
!1849 = distinct !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc37420ae12594e56E", scope: !642, file: !1850, line: 216, type: !1851, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !1853, retainedNodes: !1854)
!1850 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "3ede4b3c7e84a70f91b995c1e7cbbf91")
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!642, !189}
!1853 = !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc37420ae12594e56E", scope: !642, file: !1850, line: 216, type: !1851, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!1854 = !{!1855}
!1855 = !DILocalVariable(name: "ptr", arg: 1, scope: !1849, file: !1850, line: 216, type: !189)
!1856 = !DILocation(line: 216, column: 39, scope: !1849)
!1857 = !DILocation(line: 219, column: 13, scope: !1849)
!1858 = !DILocation(line: 220, column: 13, scope: !1849)
!1859 = !DILocation(line: 222, column: 6, scope: !1849)
!1860 = !DILocalVariable(name: "ptr", arg: 1, scope: !1861, file: !148, line: 2530, type: !189)
!1861 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h2047a44b0be181cdE", scope: !1862, file: !148, line: 2530, type: !1739, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1864)
!1862 = !DINamespace(name: "new_unchecked", scope: !1863)
!1863 = !DINamespace(name: "{impl#3}", scope: !643)
!1864 = !{!1860}
!1865 = !DILocation(line: 2530, column: 39, scope: !1861, inlinedAt: !1866)
!1866 = distinct !DILocation(line: 219, column: 13, scope: !1849)
!1867 = !DILocation(line: 219, column: 134, scope: !1868, inlinedAt: !1866)
!1868 = !DILexicalBlockFile(scope: !1861, file: !1850, discriminator: 0)
!1869 = !DILocation(line: 2533, column: 21, scope: !1861, inlinedAt: !1866)
!1870 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17ha6d460848033116aE", scope: !642, file: !1850, line: 476, type: !1871, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !1873, retainedNodes: !1874)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!642, !642, !9}
!1873 = !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17ha6d460848033116aE", scope: !642, file: !1850, line: 476, type: !1871, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!1874 = !{!1875, !1876}
!1875 = !DILocalVariable(name: "self", arg: 1, scope: !1870, file: !1850, line: 476, type: !642)
!1876 = !DILocalVariable(name: "delta", arg: 2, scope: !1870, file: !1850, line: 476, type: !9)
!1877 = !DILocation(line: 476, column: 36, scope: !1870)
!1878 = !DILocation(line: 476, column: 42, scope: !1870)
!1879 = !DILocation(line: 938, column: 29, scope: !130, inlinedAt: !1880)
!1880 = distinct !DILocation(line: 484, column: 37, scope: !1870)
!1881 = !DILocation(line: 938, column: 35, scope: !130, inlinedAt: !1880)
!1882 = !DILocation(line: 943, column: 18, scope: !130, inlinedAt: !1880)
!1883 = !DILocation(line: 484, column: 18, scope: !1870)
!1884 = !DILocation(line: 485, column: 6, scope: !1870)
!1885 = distinct !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hf2d2301368182478E", scope: !642, file: !1850, line: 502, type: !1886, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !1888, retainedNodes: !1889)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!9, !642, !642}
!1888 = !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hf2d2301368182478E", scope: !642, file: !1850, line: 502, type: !1886, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!1889 = !{!1890, !1891}
!1890 = !DILocalVariable(name: "self", arg: 1, scope: !1885, file: !1850, line: 502, type: !642)
!1891 = !DILocalVariable(name: "subtrahend", arg: 2, scope: !1885, file: !1850, line: 502, type: !642)
!1892 = !DILocation(line: 502, column: 40, scope: !1885)
!1893 = !DILocation(line: 502, column: 46, scope: !1885)
!1894 = !DILocation(line: 508, column: 18, scope: !1885)
!1895 = !DILocation(line: 509, column: 6, scope: !1885)
!1896 = distinct !DISubprogram(name: "is_aligned<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17ha9aef0cb0ca5c960E", scope: !132, file: !131, line: 1483, type: !561, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1897)
!1897 = !{!1898}
!1898 = !DILocalVariable(name: "self", arg: 1, scope: !1896, file: !131, line: 1483, type: !137)
!1899 = !DILocation(line: 1483, column: 29, scope: !1896)
!1900 = !DILocation(line: 1487, column: 9, scope: !1896)
!1901 = !DILocation(line: 1488, column: 6, scope: !1896)
!1902 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hcfdf559d3975f77eE", scope: !132, file: !131, line: 1483, type: !571, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !1903)
!1903 = !{!1904}
!1904 = !DILocalVariable(name: "self", arg: 1, scope: !1902, file: !131, line: 1483, type: !573)
!1905 = !DILocation(line: 1483, column: 29, scope: !1902)
!1906 = !DILocation(line: 1487, column: 9, scope: !1902)
!1907 = !DILocation(line: 1488, column: 6, scope: !1902)
!1908 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hf4b0165c208499a6E", scope: !132, file: !131, line: 1483, type: !537, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !1909)
!1909 = !{!1910}
!1910 = !DILocalVariable(name: "self", arg: 1, scope: !1908, file: !131, line: 1483, type: !539)
!1911 = !DILocation(line: 1483, column: 29, scope: !1908)
!1912 = !DILocation(line: 1487, column: 9, scope: !1908)
!1913 = !DILocation(line: 1488, column: 6, scope: !1908)
!1914 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hfb66024206fdcccfE", scope: !1915, file: !131, line: 1604, type: !1916, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !1918)
!1915 = !DINamespace(name: "is_aligned_to", scope: !132)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!328, !6, !9}
!1918 = !{!1919, !1920}
!1919 = !DILocalVariable(name: "ptr", arg: 1, scope: !1914, file: !131, line: 1604, type: !6)
!1920 = !DILocalVariable(name: "align", arg: 2, scope: !1914, file: !131, line: 1604, type: !9)
!1921 = !DILocation(line: 1604, column: 25, scope: !1914)
!1922 = !DILocation(line: 1604, column: 41, scope: !1914)
!1923 = !DILocalVariable(name: "self", arg: 1, scope: !1924, file: !131, line: 206, type: !6)
!1924 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hc23677aca575357eE", scope: !132, file: !131, line: 206, type: !1925, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1928, retainedNodes: !1927)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{!9, !6}
!1927 = !{!1923}
!1928 = !{!368}
!1929 = !DILocation(line: 206, column: 17, scope: !1924, inlinedAt: !1930)
!1930 = distinct !DILocation(line: 1605, column: 13, scope: !1914)
!1931 = !DILocalVariable(name: "self", arg: 1, scope: !1932, file: !131, line: 60, type: !6)
!1932 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h47d7d01228169b9fE", scope: !132, file: !131, line: 60, type: !1933, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1936, retainedNodes: !1935)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!6, !6}
!1935 = !{!1931}
!1936 = !{!368, !468}
!1937 = !DILocation(line: 60, column: 26, scope: !1932, inlinedAt: !1938)
!1938 = distinct !DILocation(line: 210, column: 33, scope: !1924, inlinedAt: !1930)
!1939 = !DILocation(line: 210, column: 18, scope: !1924, inlinedAt: !1930)
!1940 = !DILocation(line: 1605, column: 26, scope: !1914)
!1941 = !DILocation(line: 1605, column: 13, scope: !1914)
!1942 = !DILocation(line: 1606, column: 10, scope: !1914)
!1943 = distinct !DISubprogram(name: "is_aligned_to<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h51f6a682774a149dE", scope: !132, file: !131, line: 1598, type: !1944, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !1946)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!328, !137, !9}
!1946 = !{!1947, !1948}
!1947 = !DILocalVariable(name: "self", arg: 1, scope: !1943, file: !131, line: 1598, type: !137)
!1948 = !DILocalVariable(name: "align", arg: 2, scope: !1943, file: !131, line: 1598, type: !9)
!1949 = !DILocation(line: 1598, column: 32, scope: !1943)
!1950 = !DILocation(line: 1598, column: 38, scope: !1943)
!1951 = !DILocation(line: 2234, column: 38, scope: !1136, inlinedAt: !1952)
!1952 = distinct !DILocation(line: 1599, column: 13, scope: !1943)
!1953 = !DILocation(line: 106, column: 33, scope: !1141, inlinedAt: !1954)
!1954 = distinct !DILocation(line: 2235, column: 13, scope: !1136, inlinedAt: !1952)
!1955 = !DILocation(line: 107, column: 13, scope: !1141, inlinedAt: !1954)
!1956 = !DILocation(line: 2235, column: 13, scope: !1136, inlinedAt: !1952)
!1957 = !DILocation(line: 1599, column: 13, scope: !1943)
!1958 = !DILocation(line: 1600, column: 13, scope: !1943)
!1959 = !DILocation(line: 60, column: 26, scope: !513, inlinedAt: !1960)
!1960 = distinct !DILocation(line: 1618, column: 37, scope: !1943)
!1961 = !DILocation(line: 1618, column: 36, scope: !1943)
!1962 = !DILocation(line: 1618, column: 18, scope: !1943)
!1963 = !DILocation(line: 1619, column: 6, scope: !1943)
!1964 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h56f9a9f16f5b1a5fE", scope: !132, file: !131, line: 1598, type: !1965, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !1967)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!328, !573, !9}
!1967 = !{!1968, !1969}
!1968 = !DILocalVariable(name: "self", arg: 1, scope: !1964, file: !131, line: 1598, type: !573)
!1969 = !DILocalVariable(name: "align", arg: 2, scope: !1964, file: !131, line: 1598, type: !9)
!1970 = !DILocation(line: 1598, column: 32, scope: !1964)
!1971 = !DILocation(line: 1598, column: 38, scope: !1964)
!1972 = !DILocation(line: 2234, column: 38, scope: !1136, inlinedAt: !1973)
!1973 = distinct !DILocation(line: 1599, column: 13, scope: !1964)
!1974 = !DILocation(line: 106, column: 33, scope: !1141, inlinedAt: !1975)
!1975 = distinct !DILocation(line: 2235, column: 13, scope: !1136, inlinedAt: !1973)
!1976 = !DILocation(line: 107, column: 13, scope: !1141, inlinedAt: !1975)
!1977 = !DILocation(line: 2235, column: 13, scope: !1136, inlinedAt: !1973)
!1978 = !DILocation(line: 1599, column: 13, scope: !1964)
!1979 = !DILocation(line: 1600, column: 13, scope: !1964)
!1980 = !DILocalVariable(name: "self", arg: 1, scope: !1981, file: !131, line: 60, type: !573)
!1981 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<usize>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h4fcf7489a17abf37E", scope: !132, file: !131, line: 60, type: !1982, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1985, retainedNodes: !1984)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{!6, !573}
!1984 = !{!1980}
!1985 = !{!584, !468}
!1986 = !DILocation(line: 60, column: 26, scope: !1981, inlinedAt: !1987)
!1987 = distinct !DILocation(line: 1618, column: 37, scope: !1964)
!1988 = !DILocation(line: 1618, column: 36, scope: !1964)
!1989 = !DILocation(line: 1618, column: 18, scope: !1964)
!1990 = !DILocation(line: 1619, column: 6, scope: !1964)
!1991 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h7418fe3547edb813E", scope: !132, file: !131, line: 1598, type: !1992, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !1994)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!328, !539, !9}
!1994 = !{!1995, !1996}
!1995 = !DILocalVariable(name: "self", arg: 1, scope: !1991, file: !131, line: 1598, type: !539)
!1996 = !DILocalVariable(name: "align", arg: 2, scope: !1991, file: !131, line: 1598, type: !9)
!1997 = !DILocation(line: 1598, column: 32, scope: !1991)
!1998 = !DILocation(line: 1598, column: 38, scope: !1991)
!1999 = !DILocation(line: 2234, column: 38, scope: !1136, inlinedAt: !2000)
!2000 = distinct !DILocation(line: 1599, column: 13, scope: !1991)
!2001 = !DILocation(line: 106, column: 33, scope: !1141, inlinedAt: !2002)
!2002 = distinct !DILocation(line: 2235, column: 13, scope: !1136, inlinedAt: !2000)
!2003 = !DILocation(line: 107, column: 13, scope: !1141, inlinedAt: !2002)
!2004 = !DILocation(line: 2235, column: 13, scope: !1136, inlinedAt: !2000)
!2005 = !DILocation(line: 1599, column: 13, scope: !1991)
!2006 = !DILocation(line: 1600, column: 13, scope: !1991)
!2007 = !DILocalVariable(name: "self", arg: 1, scope: !2008, file: !131, line: 60, type: !539)
!2008 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb68a54ac0cd4a2baE", scope: !132, file: !131, line: 60, type: !2009, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2012, retainedNodes: !2011)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!6, !539}
!2011 = !{!2007}
!2012 = !{!553, !468}
!2013 = !DILocation(line: 60, column: 26, scope: !2008, inlinedAt: !2014)
!2014 = distinct !DILocation(line: 1618, column: 37, scope: !1991)
!2015 = !DILocation(line: 1618, column: 36, scope: !1991)
!2016 = !DILocation(line: 1618, column: 18, scope: !1991)
!2017 = !DILocation(line: 1619, column: 6, scope: !1991)
!2018 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h5ae32a927416a94aE", scope: !2019, file: !131, line: 37, type: !2020, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !2023)
!2019 = !DINamespace(name: "is_null", scope: !132)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!328, !2022}
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !72, size: 64, align: 64, dwarfAddressSpace: 0)
!2023 = !{!2024}
!2024 = !DILocalVariable(name: "ptr", arg: 1, scope: !2018, file: !131, line: 37, type: !2022)
!2025 = !DILocation(line: 37, column: 25, scope: !2018)
!2026 = !DILocalVariable(name: "self", arg: 1, scope: !2027, file: !131, line: 206, type: !2022)
!2027 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h06047b715130a534E", scope: !132, file: !131, line: 206, type: !2028, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, retainedNodes: !2030)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!9, !2022}
!2030 = !{!2026}
!2031 = !DILocation(line: 206, column: 17, scope: !2027, inlinedAt: !2032)
!2032 = distinct !DILocation(line: 38, column: 13, scope: !2018)
!2033 = !DILocalVariable(name: "self", arg: 1, scope: !2034, file: !131, line: 60, type: !2022)
!2034 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h623de6ec57e0dbacE", scope: !132, file: !131, line: 60, type: !2035, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1791, retainedNodes: !2037)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!6, !2022}
!2037 = !{!2033}
!2038 = !DILocation(line: 60, column: 26, scope: !2034, inlinedAt: !2039)
!2039 = distinct !DILocation(line: 210, column: 33, scope: !2027, inlinedAt: !2032)
!2040 = !DILocation(line: 210, column: 18, scope: !2027, inlinedAt: !2032)
!2041 = !DILocation(line: 38, column: 13, scope: !2018)
!2042 = !DILocation(line: 39, column: 10, scope: !2018)
!2043 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hae8099c4d7ce6037E", scope: !132, file: !131, line: 35, type: !537, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !552, retainedNodes: !2044)
!2044 = !{!2045}
!2045 = !DILocalVariable(name: "self", arg: 1, scope: !2043, file: !131, line: 35, type: !539)
!2046 = !DILocation(line: 35, column: 26, scope: !2043)
!2047 = !DILocation(line: 52, column: 36, scope: !2043)
!2048 = !DILocation(line: 52, column: 18, scope: !2043)
!2049 = !DILocation(line: 53, column: 6, scope: !2043)
!2050 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17he51a47d9649f975dE", scope: !132, file: !131, line: 35, type: !561, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2051)
!2051 = !{!2052}
!2052 = !DILocalVariable(name: "self", arg: 1, scope: !2050, file: !131, line: 35, type: !137)
!2053 = !DILocation(line: 35, column: 26, scope: !2050)
!2054 = !DILocation(line: 52, column: 36, scope: !2050)
!2055 = !DILocation(line: 52, column: 18, scope: !2050)
!2056 = !DILocation(line: 53, column: 6, scope: !2050)
!2057 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<usize>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf86344061e33e18fE", scope: !132, file: !131, line: 35, type: !571, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !583, retainedNodes: !2058)
!2058 = !{!2059}
!2059 = !DILocalVariable(name: "self", arg: 1, scope: !2057, file: !131, line: 35, type: !573)
!2060 = !DILocation(line: 35, column: 26, scope: !2057)
!2061 = !DILocation(line: 52, column: 36, scope: !2057)
!2062 = !DILocation(line: 52, column: 18, scope: !2057)
!2063 = !DILocation(line: 53, column: 6, scope: !2057)
!2064 = distinct !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h2c9e785a47eeb35fE", scope: !132, file: !131, line: 804, type: !2065, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2067)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!9, !137, !137}
!2067 = !{!2068, !2069, !2070, !2072}
!2068 = !DILocalVariable(name: "self", arg: 1, scope: !2064, file: !131, line: 804, type: !137)
!2069 = !DILocalVariable(name: "origin", arg: 2, scope: !2064, file: !131, line: 804, type: !137)
!2070 = !DILocalVariable(name: "this", scope: !2071, file: !131, line: 808, type: !137, align: 8)
!2071 = distinct !DILexicalBlock(scope: !2064, file: !131, line: 808, column: 9)
!2072 = !DILocalVariable(name: "pointee_size", scope: !2073, file: !131, line: 818, type: !9, align: 8)
!2073 = distinct !DILexicalBlock(scope: !2071, file: !131, line: 818, column: 9)
!2074 = !DILocation(line: 804, column: 33, scope: !2064)
!2075 = !DILocation(line: 808, column: 13, scope: !2071)
!2076 = !DILocation(line: 804, column: 39, scope: !2064)
!2077 = !DILocation(line: 812, column: 13, scope: !2071)
!2078 = !DILocation(line: 818, column: 28, scope: !2071)
!2079 = !DILocation(line: 818, column: 13, scope: !2073)
!2080 = !DILocation(line: 819, column: 17, scope: !2073)
!2081 = !DILocalVariable(name: "this", arg: 1, scope: !2082, file: !148, line: 2530, type: !137)
!2082 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17h4b86b34df969d7f3E", scope: !2083, file: !148, line: 2530, type: !2084, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2086)
!2083 = !DINamespace(name: "sub_ptr", scope: !132)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{null, !137, !137}
!2086 = !{!2081, !2087}
!2087 = !DILocalVariable(name: "origin", arg: 2, scope: !2082, file: !148, line: 2530, type: !137)
!2088 = !DILocation(line: 2530, column: 39, scope: !2082, inlinedAt: !2089)
!2089 = distinct !DILocation(line: 812, column: 13, scope: !2071)
!2090 = !DILocation(line: 814, column: 58, scope: !2091, inlinedAt: !2089)
!2091 = !DILexicalBlockFile(scope: !2082, file: !131, discriminator: 0)
!2092 = !DILocation(line: 2533, column: 21, scope: !2082, inlinedAt: !2089)
!2093 = !DILocation(line: 819, column: 9, scope: !2073)
!2094 = !DILocation(line: 819, column: 37, scope: !2073)
!2095 = !DILocation(line: 821, column: 18, scope: !2073)
!2096 = !DILocation(line: 822, column: 6, scope: !2064)
!2097 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17ha47c303ab005f629E", scope: !2098, file: !131, line: 1643, type: !1842, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2099)
!2098 = !DINamespace(name: "{impl#1}", scope: !133)
!2099 = !{!2100}
!2100 = !DILocalVariable(name: "self", arg: 1, scope: !2097, file: !131, line: 1643, type: !99)
!2101 = !DILocation(line: 1643, column: 22, scope: !2097)
!2102 = !DILocation(line: 1644, column: 9, scope: !2097)
!2103 = !DILocation(line: 1645, column: 6, scope: !2097)
!2104 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbb1b5859ff6168a9E", scope: !2098, file: !131, line: 1663, type: !2105, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2107)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{!137, !99}
!2107 = !{!2108}
!2108 = !DILocalVariable(name: "self", arg: 1, scope: !2104, file: !131, line: 1663, type: !99)
!2109 = !DILocation(line: 1663, column: 25, scope: !2104)
!2110 = !DILocation(line: 1665, column: 6, scope: !2104)
!2111 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17ha1e54afdad5089e1E", scope: !2113, file: !2112, line: 347, type: !2115, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2124, retainedNodes: !2121)
!2112 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "32a48f896ae047ce64f0f67e3f5c17d0")
!2113 = !DINamespace(name: "{impl#15}", scope: !2114)
!2114 = !DINamespace(name: "array", scope: !71)
!2115 = !DISubroutineType(types: !2116)
!2116 = !{!230, !2117, !104, !234}
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !2118, size: 64, align: 64, dwarfAddressSpace: 0)
!2118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 12288, align: 64, elements: !2119)
!2119 = !{!2120}
!2120 = !DISubrange(count: 64, lowerBound: 0)
!2121 = !{!2122, !2123}
!2122 = !DILocalVariable(name: "self", arg: 1, scope: !2111, file: !2112, line: 347, type: !2117)
!2123 = !DILocalVariable(name: "index", arg: 2, scope: !2111, file: !2112, line: 347, type: !104)
!2124 = !{!120, !2125}
!2125 = !DITemplateTypeParameter(name: "I", type: !104)
!2126 = !DILocation(line: 347, column: 14, scope: !2111)
!2127 = !DILocation(line: 347, column: 21, scope: !2111)
!2128 = !DILocation(line: 348, column: 9, scope: !2111)
!2129 = !DILocation(line: 349, column: 6, scope: !2111)
!2130 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h86468e1593045ca2E", scope: !2131, file: !2112, line: 358, type: !2132, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2124, retainedNodes: !2135)
!2131 = !DINamespace(name: "{impl#16}", scope: !2114)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{!261, !2134, !104, !234}
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !2118, size: 64, align: 64, dwarfAddressSpace: 0)
!2135 = !{!2136, !2137}
!2136 = !DILocalVariable(name: "self", arg: 1, scope: !2130, file: !2112, line: 358, type: !2134)
!2137 = !DILocalVariable(name: "index", arg: 2, scope: !2130, file: !2112, line: 358, type: !104)
!2138 = !DILocation(line: 358, column: 18, scope: !2130)
!2139 = !DILocation(line: 358, column: 29, scope: !2130)
!2140 = !DILocation(line: 359, column: 9, scope: !2130)
!2141 = !DILocation(line: 360, column: 6, scope: !2130)
!2142 = distinct !DISubprogram(name: "split_at_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h1643ef83df19a1adE", scope: !1059, file: !2143, line: 1909, type: !2144, scopeLine: 1909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2150)
!2143 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e4bb61a1fb9377ffecbd189e660ae110")
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!2146, !261, !9, !234}
!2146 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut [bootloader::bootinfo::memory_map::MemoryRegion], &mut [bootloader::bootinfo::memory_map::MemoryRegion])", file: !2, size: 256, align: 64, elements: !2147, templateParams: !24, identifier: "94e90d7b5ec2cf3b4e741ea15b8b7f2c")
!2147 = !{!2148, !2149}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2146, file: !2, baseType: !261, size: 128, align: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2146, file: !2, baseType: !261, size: 128, align: 64, offset: 128)
!2150 = !{!2151, !2152}
!2151 = !DILocalVariable(name: "self", arg: 1, scope: !2142, file: !2143, line: 1909, type: !261)
!2152 = !DILocalVariable(name: "mid", arg: 2, scope: !2142, file: !2143, line: 1909, type: !9)
!2153 = !DILocation(line: 1909, column: 31, scope: !2142)
!2154 = !DILocation(line: 1909, column: 42, scope: !2142)
!2155 = !DILocation(line: 1910, column: 17, scope: !2142)
!2156 = !DILocation(line: 1910, column: 9, scope: !2142)
!2157 = !DILocation(line: 1913, column: 18, scope: !2142)
!2158 = !DILocation(line: 1914, column: 6, scope: !2142)
!2159 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h3923b533230fadbeE", scope: !1059, file: !2143, line: 663, type: !2160, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2165, retainedNodes: !2162)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!12, !230, !9}
!2162 = !{!2163, !2164}
!2163 = !DILocalVariable(name: "self", arg: 1, scope: !2159, file: !2143, line: 663, type: !230)
!2164 = !DILocalVariable(name: "index", arg: 2, scope: !2159, file: !2143, line: 663, type: !9)
!2165 = !{!120, !2166}
!2166 = !DITemplateTypeParameter(name: "I", type: !9)
!2167 = !DILocation(line: 663, column: 36, scope: !2159)
!2168 = !DILocation(line: 663, column: 43, scope: !2159)
!2169 = !DILocation(line: 670, column: 20, scope: !2159)
!2170 = !DILocation(line: 671, column: 6, scope: !2159)
!2171 = distinct !DISubprogram(name: "as_mut_ptr_range<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17ha59fea28b2dc194cE", scope: !1059, file: !2143, line: 857, type: !2172, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2180)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!2174, !261}
!2174 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<*mut bootloader::bootinfo::memory_map::MemoryRegion>", scope: !105, file: !2, size: 128, align: 64, elements: !2175, templateParams: !2178, identifier: "cca2bef5ea95f6b17f2eeaa15b4c15b7")
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2174, file: !2, baseType: !189, size: 64, align: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2174, file: !2, baseType: !189, size: 64, align: 64, offset: 64)
!2178 = !{!2179}
!2179 = !DITemplateTypeParameter(name: "Idx", type: !189)
!2180 = !{!2181, !2182, !2184}
!2181 = !DILocalVariable(name: "self", arg: 1, scope: !2171, file: !2143, line: 857, type: !261)
!2182 = !DILocalVariable(name: "start", scope: !2183, file: !2143, line: 858, type: !189, align: 8)
!2183 = distinct !DILexicalBlock(scope: !2171, file: !2143, line: 858, column: 9)
!2184 = !DILocalVariable(name: "end", scope: !2185, file: !2143, line: 860, type: !189, align: 8)
!2185 = distinct !DILexicalBlock(scope: !2183, file: !2143, line: 860, column: 9)
!2186 = !DILocation(line: 857, column: 35, scope: !2171)
!2187 = !DILocalVariable(name: "self", arg: 1, scope: !2188, file: !2143, line: 777, type: !261)
!2188 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h01d1540dc4bed241E", scope: !1059, file: !2143, line: 777, type: !2189, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2191)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!189, !261}
!2191 = !{!2187}
!2192 = !DILocation(line: 777, column: 29, scope: !2188, inlinedAt: !2193)
!2193 = distinct !DILocation(line: 858, column: 21, scope: !2171)
!2194 = !DILocation(line: 858, column: 21, scope: !2171)
!2195 = !DILocation(line: 858, column: 13, scope: !2183)
!2196 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2197)
!2197 = distinct !DILocation(line: 860, column: 28, scope: !2183)
!2198 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2197)
!2199 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2197)
!2200 = !DILocation(line: 860, column: 28, scope: !2183)
!2201 = !DILocation(line: 860, column: 13, scope: !2185)
!2202 = !DILocation(line: 861, column: 9, scope: !2185)
!2203 = !DILocation(line: 862, column: 6, scope: !2171)
!2204 = distinct !DISubprogram(name: "sort_unstable_by<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17heb695b36b9616ba4E", scope: !1059, file: !2143, line: 3017, type: !2205, scopeLine: 3017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2210, retainedNodes: !2207)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{null, !261, !1063}
!2207 = !{!2208, !2209}
!2208 = !DILocalVariable(name: "self", arg: 1, scope: !2204, file: !2143, line: 3017, type: !261)
!2209 = !DILocalVariable(name: "compare", arg: 2, scope: !2204, file: !2143, line: 3017, type: !1063)
!2210 = !{!120, !2211}
!2211 = !DITemplateTypeParameter(name: "F", type: !1063)
!2212 = !DILocation(line: 3017, column: 32, scope: !2204)
!2213 = !DILocation(line: 3017, column: 43, scope: !2204)
!2214 = !DILocation(line: 3021, column: 31, scope: !2204)
!2215 = !DILocation(line: 3021, column: 9, scope: !2204)
!2216 = !{i64 1}
!2217 = !DILocation(line: 3022, column: 6, scope: !2204)
!2218 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17hab0f490273e500dcE", scope: !1058, file: !2143, line: 3021, type: !2219, scopeLine: 3021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2210, retainedNodes: !2221)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!328, !1056, !12, !12}
!2221 = !{!2222, !2223, !2224}
!2222 = !DILocalVariable(name: "a", arg: 2, scope: !2218, file: !2143, line: 3021, type: !12)
!2223 = !DILocalVariable(name: "b", arg: 3, scope: !2218, file: !2143, line: 3021, type: !12)
!2224 = !DILocalVariable(name: "compare", scope: !2218, file: !2143, line: 3017, type: !1063, align: 1)
!2225 = !DILocation(line: 3017, column: 47, scope: !2218)
!2226 = !DILocation(line: 3021, column: 32, scope: !2218)
!2227 = !DILocation(line: 3021, column: 35, scope: !2218)
!2228 = !DILocation(line: 3021, column: 38, scope: !2218)
!2229 = !DILocation(line: 3021, column: 69, scope: !2218)
!2230 = distinct !DISubprogram(name: "split_at_mut_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h1955424b01fba3b3E", scope: !1059, file: !2143, line: 2017, type: !2231, scopeLine: 2017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2233)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!2146, !261, !9}
!2233 = !{!2234, !2235, !2236, !2238}
!2234 = !DILocalVariable(name: "self", arg: 1, scope: !2230, file: !2143, line: 2017, type: !261)
!2235 = !DILocalVariable(name: "mid", arg: 2, scope: !2230, file: !2143, line: 2017, type: !9)
!2236 = !DILocalVariable(name: "len", scope: !2237, file: !2143, line: 2018, type: !9, align: 8)
!2237 = distinct !DILexicalBlock(scope: !2230, file: !2143, line: 2018, column: 9)
!2238 = !DILocalVariable(name: "ptr", scope: !2239, file: !2143, line: 2019, type: !189, align: 8)
!2239 = distinct !DILexicalBlock(scope: !2237, file: !2143, line: 2019, column: 9)
!2240 = !DILocation(line: 2017, column: 48, scope: !2230)
!2241 = !DILocation(line: 2017, column: 59, scope: !2230)
!2242 = !DILocation(line: 2018, column: 19, scope: !2230)
!2243 = !DILocation(line: 2018, column: 13, scope: !2237)
!2244 = !DILocation(line: 777, column: 29, scope: !2188, inlinedAt: !2245)
!2245 = distinct !DILocation(line: 2019, column: 19, scope: !2237)
!2246 = !DILocation(line: 2019, column: 19, scope: !2237)
!2247 = !DILocation(line: 2019, column: 13, scope: !2239)
!2248 = !DILocation(line: 2026, column: 13, scope: !2239)
!2249 = !DILocation(line: 2030, column: 14, scope: !2239)
!2250 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2251)
!2251 = distinct !DILocation(line: 2030, column: 63, scope: !2239)
!2252 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2251)
!2253 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2251)
!2254 = !DILocation(line: 2030, column: 77, scope: !2239)
!2255 = !DILocalVariable(name: "mid", arg: 1, scope: !2256, file: !148, line: 2530, type: !9)
!2256 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17hd086fbc44f47bfc9E", scope: !2257, file: !148, line: 2530, type: !2258, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !2260)
!2257 = !DINamespace(name: "split_at_mut_unchecked", scope: !1059)
!2258 = !DISubroutineType(types: !2259)
!2259 = !{null, !9, !9}
!2260 = !{!2255, !2261}
!2261 = !DILocalVariable(name: "len", arg: 2, scope: !2256, file: !148, line: 2530, type: !9)
!2262 = !DILocation(line: 2530, column: 39, scope: !2256, inlinedAt: !2263)
!2263 = distinct !DILocation(line: 2026, column: 13, scope: !2239)
!2264 = !DILocation(line: 2028, column: 45, scope: !2265, inlinedAt: !2263)
!2265 = !DILexicalBlockFile(scope: !2256, file: !2143, discriminator: 0)
!2266 = !DILocation(line: 2533, column: 21, scope: !2256, inlinedAt: !2263)
!2267 = !DILocation(line: 2030, column: 44, scope: !2239)
!2268 = !DILocation(line: 2030, column: 13, scope: !2239)
!2269 = !DILocation(line: 2032, column: 6, scope: !2230)
!2270 = distinct !DISubprogram(name: "iter<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h32e552a6961cde6cE", scope: !1059, file: !2143, line: 1013, type: !2271, scopeLine: 1013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2273)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!638, !230}
!2273 = !{!2274}
!2274 = !DILocalVariable(name: "self", arg: 1, scope: !2270, file: !2143, line: 1013, type: !230)
!2275 = !DILocation(line: 1013, column: 17, scope: !2270)
!2276 = !DILocation(line: 1014, column: 9, scope: !2270)
!2277 = !DILocation(line: 1015, column: 6, scope: !2270)
!2278 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h992bdd3442f31a9fE", scope: !1059, file: !2143, line: 888, type: !2279, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2281)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{null, !261, !9, !9, !234}
!2281 = !{!2282, !2283, !2284, !2285, !2287}
!2282 = !DILocalVariable(name: "self", arg: 1, scope: !2278, file: !2143, line: 888, type: !261)
!2283 = !DILocalVariable(name: "a", arg: 2, scope: !2278, file: !2143, line: 888, type: !9)
!2284 = !DILocalVariable(name: "b", arg: 3, scope: !2278, file: !2143, line: 888, type: !9)
!2285 = !DILocalVariable(name: "pa", scope: !2286, file: !2143, line: 891, type: !189, align: 8)
!2286 = distinct !DILexicalBlock(scope: !2278, file: !2143, line: 891, column: 9)
!2287 = !DILocalVariable(name: "pb", scope: !2288, file: !2143, line: 892, type: !189, align: 8)
!2288 = distinct !DILexicalBlock(scope: !2286, file: !2143, line: 892, column: 9)
!2289 = !DILocation(line: 888, column: 23, scope: !2278)
!2290 = !DILocation(line: 888, column: 34, scope: !2278)
!2291 = !DILocation(line: 888, column: 44, scope: !2278)
!2292 = !DILocation(line: 891, column: 36, scope: !2278)
!2293 = !DILocation(line: 891, column: 18, scope: !2278)
!2294 = !DILocation(line: 891, column: 13, scope: !2286)
!2295 = !DILocation(line: 892, column: 36, scope: !2286)
!2296 = !DILocation(line: 892, column: 18, scope: !2286)
!2297 = !DILocation(line: 892, column: 13, scope: !2288)
!2298 = !DILocation(line: 898, column: 13, scope: !2288)
!2299 = !DILocation(line: 900, column: 6, scope: !2278)
!2300 = distinct !DISubprogram(name: "reverse<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h2e669edfa5aee244E", scope: !1059, file: !2143, line: 955, type: !2301, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2303)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{null, !261}
!2303 = !{!2304, !2305, !2307, !2309, !2310, !2312}
!2304 = !DILocalVariable(name: "self", arg: 1, scope: !2300, file: !2143, line: 955, type: !261)
!2305 = !DILocalVariable(name: "half_len", scope: !2306, file: !2143, line: 956, type: !9, align: 8)
!2306 = distinct !DILexicalBlock(scope: !2300, file: !2143, line: 956, column: 9)
!2307 = !DILocalVariable(name: "start", scope: !2308, file: !2143, line: 957, type: !189, align: 8)
!2308 = distinct !DILexicalBlock(scope: !2306, file: !2143, line: 957, column: 9)
!2309 = !DILocalVariable(name: "end", scope: !2308, file: !2143, line: 957, type: !189, align: 8)
!2310 = !DILocalVariable(name: "front_half", scope: !2311, file: !2143, line: 961, type: !261, align: 8)
!2311 = distinct !DILexicalBlock(scope: !2308, file: !2143, line: 961, column: 9)
!2312 = !DILocalVariable(name: "back_half", scope: !2311, file: !2143, line: 961, type: !261, align: 8)
!2313 = !DILocation(line: 955, column: 20, scope: !2300)
!2314 = !DILocation(line: 956, column: 24, scope: !2300)
!2315 = !DILocation(line: 956, column: 13, scope: !2306)
!2316 = !DILocation(line: 957, column: 36, scope: !2306)
!2317 = !DILocation(line: 957, column: 21, scope: !2306)
!2318 = !DILocation(line: 957, column: 21, scope: !2308)
!2319 = !DILocation(line: 957, column: 28, scope: !2306)
!2320 = !DILocation(line: 957, column: 28, scope: !2308)
!2321 = !DILocation(line: 967, column: 21, scope: !2308)
!2322 = !DILocalVariable(name: "self", arg: 1, scope: !2323, file: !184, line: 1125, type: !189)
!2323 = distinct !DISubprogram(name: "sub<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17had82d0a6d5c6f655E", scope: !195, file: !184, line: 1125, type: !196, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2324)
!2324 = !{!2322, !2325}
!2325 = !DILocalVariable(name: "count", arg: 2, scope: !2323, file: !184, line: 1125, type: !9)
!2326 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !2327)
!2327 = distinct !DILocation(line: 968, column: 47, scope: !2308)
!2328 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !2327)
!2329 = !DILocation(line: 1136, column: 34, scope: !2323, inlinedAt: !2327)
!2330 = !DILocalVariable(name: "self", arg: 1, scope: !2331, file: !184, line: 476, type: !189)
!2331 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha9c03002dd980136E", scope: !195, file: !184, line: 476, type: !2332, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2335)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!189, !189, !2334}
!2334 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!2335 = !{!2330, !2336}
!2336 = !DILocalVariable(name: "count", arg: 2, scope: !2331, file: !184, line: 476, type: !2334)
!2337 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !2338)
!2338 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !2327)
!2339 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !2338)
!2340 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !2338)
!2341 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !2327)
!2342 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !2327)
!2343 = !DILocation(line: 968, column: 21, scope: !2308)
!2344 = !DILocation(line: 966, column: 17, scope: !2308)
!2345 = !DILocation(line: 961, column: 14, scope: !2308)
!2346 = !DILocation(line: 961, column: 14, scope: !2311)
!2347 = !DILocation(line: 961, column: 26, scope: !2308)
!2348 = !DILocation(line: 961, column: 26, scope: !2311)
!2349 = !DILocation(line: 975, column: 9, scope: !2311)
!2350 = !DILocation(line: 994, column: 6, scope: !2300)
!2351 = distinct !DISubprogram(name: "revswap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17hfe440e9173f3e370E", scope: !2352, file: !2143, line: 978, type: !2353, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2355)
!2352 = !DINamespace(name: "reverse", scope: !1059)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{null, !261, !261, !9}
!2355 = !{!2356, !2357, !2358, !2359, !2361, !2362}
!2356 = !DILocalVariable(name: "a", arg: 1, scope: !2351, file: !2143, line: 978, type: !261)
!2357 = !DILocalVariable(name: "b", arg: 2, scope: !2351, file: !2143, line: 978, type: !261)
!2358 = !DILocalVariable(name: "n", arg: 3, scope: !2351, file: !2143, line: 978, type: !9)
!2359 = !DILocalVariable(name: "a", scope: !2360, file: !2143, line: 986, type: !261, align: 8)
!2360 = distinct !DILexicalBlock(scope: !2351, file: !2143, line: 986, column: 13)
!2361 = !DILocalVariable(name: "b", scope: !2360, file: !2143, line: 986, type: !261, align: 8)
!2362 = !DILocalVariable(name: "i", scope: !2363, file: !2143, line: 988, type: !9, align: 8)
!2363 = distinct !DILexicalBlock(scope: !2360, file: !2143, line: 988, column: 13)
!2364 = !DILocation(line: 978, column: 23, scope: !2351)
!2365 = !DILocation(line: 978, column: 36, scope: !2351)
!2366 = !DILocation(line: 978, column: 49, scope: !2351)
!2367 = !DILocation(line: 988, column: 17, scope: !2363)
!2368 = !DILocation(line: 979, column: 13, scope: !2351)
!2369 = !DILocation(line: 980, column: 13, scope: !2351)
!2370 = !DILocation(line: 979, column: 27, scope: !2351)
!2371 = !DILocation(line: 986, column: 34, scope: !2351)
!2372 = !DILocation(line: 986, column: 33, scope: !2351)
!2373 = !DILocation(line: 986, column: 47, scope: !2351)
!2374 = !DILocation(line: 986, column: 46, scope: !2351)
!2375 = !DILocation(line: 986, column: 26, scope: !2351)
!2376 = !DILocation(line: 986, column: 18, scope: !2351)
!2377 = !DILocation(line: 986, column: 18, scope: !2360)
!2378 = !DILocation(line: 986, column: 21, scope: !2351)
!2379 = !DILocation(line: 986, column: 21, scope: !2360)
!2380 = !DILocation(line: 988, column: 25, scope: !2360)
!2381 = !DILocation(line: 989, column: 13, scope: !2363)
!2382 = !DILocation(line: 980, column: 27, scope: !2351)
!2383 = !DILocation(line: 989, column: 19, scope: !2363)
!2384 = !DILocation(line: 993, column: 10, scope: !2351)
!2385 = !DILocation(line: 990, column: 34, scope: !2363)
!2386 = !DILocation(line: 990, column: 32, scope: !2363)
!2387 = !DILocation(line: 990, column: 27, scope: !2363)
!2388 = !DILocation(line: 990, column: 45, scope: !2363)
!2389 = !DILocation(line: 990, column: 53, scope: !2363)
!2390 = !DILocation(line: 990, column: 43, scope: !2363)
!2391 = !DILocation(line: 990, column: 38, scope: !2363)
!2392 = !DILocation(line: 990, column: 17, scope: !2363)
!2393 = !DILocation(line: 991, column: 17, scope: !2363)
!2394 = distinct !DISubprogram(name: "from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h8f3f46e736c16badE", scope: !2396, file: !2395, line: 141, type: !2397, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2399)
!2395 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "503b19e16c498622a7ca460c2aab934c")
!2396 = !DINamespace(name: "raw", scope: !96)
!2397 = !DISubroutineType(types: !2398)
!2398 = !{!261, !189, !9}
!2399 = !{!2400, !2401}
!2400 = !DILocalVariable(name: "data", arg: 1, scope: !2394, file: !2395, line: 141, type: !189)
!2401 = !DILocalVariable(name: "len", arg: 2, scope: !2394, file: !2395, line: 141, type: !9)
!2402 = !DILocation(line: 141, column: 47, scope: !2394)
!2403 = !DILocation(line: 141, column: 61, scope: !2394)
!2404 = !DILocation(line: 144, column: 9, scope: !2394)
!2405 = !DILocation(line: 149, column: 15, scope: !2394)
!2406 = !DILocation(line: 151, column: 2, scope: !2394)
!2407 = !DILocalVariable(name: "data", arg: 1, scope: !2408, file: !148, line: 2530, type: !189)
!2408 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17hf65fbde08bcbc372E", scope: !2409, file: !148, line: 2530, type: !2410, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2412)
!2409 = !DINamespace(name: "from_raw_parts_mut", scope: !2396)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{null, !189, !9}
!2412 = !{!2407, !2413}
!2413 = !DILocalVariable(name: "len", arg: 2, scope: !2408, file: !148, line: 2530, type: !9)
!2414 = !DILocation(line: 2530, column: 39, scope: !2408, inlinedAt: !2415)
!2415 = distinct !DILocation(line: 144, column: 9, scope: !2394)
!2416 = !DILocation(line: 146, column: 46, scope: !2417, inlinedAt: !2415)
!2417 = !DILexicalBlockFile(scope: !2408, file: !2395, discriminator: 0)
!2418 = !DILocation(line: 2533, column: 21, scope: !2408, inlinedAt: !2415)
!2419 = !DILocation(line: 147, column: 20, scope: !2417, inlinedAt: !2415)
!2420 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h10550916002f3cb1E", scope: !638, file: !2421, line: 90, type: !2271, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !2422, retainedNodes: !2423)
!2421 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "f39b9ecf73b0b60c9a0331a0526162e9")
!2422 = !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h10550916002f3cb1E", scope: !638, file: !2421, line: 90, type: !2271, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!2423 = !{!2424, !2425, !2427}
!2424 = !DILocalVariable(name: "slice", arg: 1, scope: !2420, file: !2421, line: 90, type: !230)
!2425 = !DILocalVariable(name: "ptr", scope: !2426, file: !2421, line: 91, type: !137, align: 8)
!2426 = distinct !DILexicalBlock(scope: !2420, file: !2421, line: 91, column: 9)
!2427 = !DILocalVariable(name: "end_or_len", scope: !2428, file: !2421, line: 94, type: !137, align: 8)
!2428 = distinct !DILexicalBlock(scope: !2426, file: !2421, line: 94, column: 13)
!2429 = !DILocation(line: 90, column: 23, scope: !2420)
!2430 = !DILocation(line: 94, column: 17, scope: !2428)
!2431 = !DILocalVariable(name: "self", arg: 1, scope: !2432, file: !2143, line: 746, type: !230)
!2432 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hfcdd4f192be65365E", scope: !1059, file: !2143, line: 746, type: !2433, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2435)
!2433 = !DISubroutineType(types: !2434)
!2434 = !{!137, !230}
!2435 = !{!2431}
!2436 = !DILocation(line: 746, column: 25, scope: !2432, inlinedAt: !2437)
!2437 = distinct !DILocation(line: 91, column: 19, scope: !2420)
!2438 = !DILocation(line: 91, column: 19, scope: !2420)
!2439 = !DILocation(line: 91, column: 13, scope: !2426)
!2440 = !DILocation(line: 94, column: 33, scope: !2426)
!2441 = !DILocation(line: 938, column: 29, scope: !130, inlinedAt: !2442)
!2442 = distinct !DILocation(line: 94, column: 75, scope: !2426)
!2443 = !DILocation(line: 938, column: 35, scope: !130, inlinedAt: !2442)
!2444 = !DILocation(line: 943, column: 18, scope: !130, inlinedAt: !2442)
!2445 = !DILocation(line: 94, column: 75, scope: !2426)
!2446 = !DILocalVariable(name: "addr", arg: 1, scope: !2447, file: !1081, line: 580, type: !9)
!2447 = distinct !DISubprogram(name: "invalid<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7invalid17h75f31f2257b8fda2E", scope: !134, file: !1081, line: 580, type: !2448, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2450)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!137, !9}
!2450 = !{!2446}
!2451 = !DILocation(line: 580, column: 25, scope: !2447, inlinedAt: !2452)
!2452 = distinct !DILocation(line: 94, column: 45, scope: !2426)
!2453 = !DILocation(line: 586, column: 14, scope: !2447, inlinedAt: !2452)
!2454 = !DILocation(line: 94, column: 45, scope: !2426)
!2455 = !DILocation(line: 96, column: 25, scope: !2428)
!2456 = !DILocation(line: 96, column: 64, scope: !2428)
!2457 = !DILocation(line: 96, column: 13, scope: !2428)
!2458 = !DILocation(line: 98, column: 6, scope: !2420)
!2459 = distinct !DISubprogram(name: "insert_head<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_head17h6f093c6415355f96E", scope: !1086, file: !2460, line: 88, type: !2461, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !2463)
!2460 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs", directory: "", checksumkind: CSK_MD5, checksum: "bacea7f85e49a838318ba203700f7521")
!2461 = !DISubroutineType(types: !2462)
!2462 = !{null, !261, !1056}
!2463 = !{!2464, !2465, !2466, !2468, !2470, !2472, !2474}
!2464 = !DILocalVariable(name: "v", arg: 1, scope: !2459, file: !2460, line: 88, type: !261)
!2465 = !DILocalVariable(name: "is_less", arg: 2, scope: !2459, file: !2460, line: 88, type: !1056)
!2466 = !DILocalVariable(name: "arr_ptr", scope: !2467, file: !2460, line: 97, type: !189, align: 8)
!2467 = distinct !DILexicalBlock(scope: !2459, file: !2460, line: 97, column: 13)
!2468 = !DILocalVariable(name: "tmp", scope: !2469, file: !2460, line: 116, type: !546, align: 8)
!2469 = distinct !DILexicalBlock(scope: !2467, file: !2460, line: 116, column: 13)
!2470 = !DILocalVariable(name: "hole", scope: !2471, file: !2460, line: 128, type: !1085, align: 8)
!2471 = distinct !DILexicalBlock(scope: !2469, file: !2460, line: 128, column: 13)
!2472 = !DILocalVariable(name: "iter", scope: !2473, file: !2460, line: 131, type: !104, align: 8)
!2473 = distinct !DILexicalBlock(scope: !2471, file: !2460, line: 131, column: 13)
!2474 = !DILocalVariable(name: "i", scope: !2475, file: !2460, line: 131, type: !9, align: 8)
!2475 = distinct !DILexicalBlock(scope: !2473, file: !2460, line: 131, column: 33)
!2476 = !{!120, !1075}
!2477 = !DILocation(line: 88, column: 29, scope: !2459)
!2478 = !DILocation(line: 88, column: 42, scope: !2459)
!2479 = !DILocation(line: 116, column: 17, scope: !2469)
!2480 = !DILocation(line: 128, column: 17, scope: !2471)
!2481 = !DILocation(line: 131, column: 22, scope: !2473)
!2482 = !DILocation(line: 92, column: 5, scope: !2459)
!2483 = !DILocation(line: 96, column: 20, scope: !2459)
!2484 = !DILocation(line: 96, column: 40, scope: !2459)
!2485 = !DILocation(line: 96, column: 12, scope: !2459)
!2486 = !DILocation(line: 92, column: 19, scope: !2459)
!2487 = !DILocation(line: 141, column: 2, scope: !2459)
!2488 = !DILocation(line: 777, column: 29, scope: !2188, inlinedAt: !2489)
!2489 = distinct !DILocation(line: 97, column: 27, scope: !2459)
!2490 = !DILocation(line: 97, column: 27, scope: !2459)
!2491 = !DILocation(line: 97, column: 17, scope: !2467)
!2492 = !DILocation(line: 116, column: 46, scope: !2467)
!2493 = !DILocation(line: 70, column: 22, scope: !896, inlinedAt: !2494)
!2494 = distinct !DILocation(line: 116, column: 23, scope: !2467)
!2495 = !DILocation(line: 71, column: 9, scope: !896, inlinedAt: !2494)
!2496 = !DILocalVariable(name: "self", arg: 1, scope: !2497, file: !897, line: 152, type: !2501)
!2497 = distinct !DISubprogram(name: "deref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h31cca1b59e81389bE", scope: !2498, file: !897, line: 152, type: !2499, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2502)
!2498 = !DINamespace(name: "{impl#2}", scope: !547)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{!12, !2501}
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !546, size: 64, align: 64, dwarfAddressSpace: 0)
!2502 = !{!2496}
!2503 = !DILocation(line: 152, column: 14, scope: !2497, inlinedAt: !2504)
!2504 = distinct !DILocation(line: 128, column: 50, scope: !2469)
!2505 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2506)
!2506 = distinct !DILocation(line: 128, column: 62, scope: !2469)
!2507 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2506)
!2508 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2506)
!2509 = !DILocation(line: 128, column: 28, scope: !2469)
!2510 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2511)
!2511 = distinct !DILocation(line: 129, column: 38, scope: !2471)
!2512 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2511)
!2513 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2511)
!2514 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2515)
!2515 = distinct !DILocation(line: 129, column: 54, scope: !2471)
!2516 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2515)
!2517 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !2518)
!2518 = distinct !DILocation(line: 129, column: 13, scope: !2471)
!2519 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !2518)
!2520 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !2518)
!2521 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !2518)
!2522 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !2523)
!2523 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !2518)
!2524 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !2523)
!2525 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !2523)
!2526 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !2523)
!2527 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !2523)
!2528 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !2518)
!2529 = !DILocation(line: 131, column: 22, scope: !2471)
!2530 = !DILocation(line: 131, column: 13, scope: !2473)
!2531 = !DILocation(line: 139, column: 9, scope: !2469)
!2532 = !DILocation(line: 131, column: 17, scope: !2473)
!2533 = !DILocation(line: 131, column: 17, scope: !2475)
!2534 = !DILocation(line: 132, column: 30, scope: !2475)
!2535 = !DILocation(line: 132, column: 29, scope: !2475)
!2536 = !DILocation(line: 152, column: 14, scope: !2497, inlinedAt: !2537)
!2537 = distinct !DILocation(line: 132, column: 51, scope: !2475)
!2538 = !DILocation(line: 132, column: 21, scope: !2475)
!2539 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2540)
!2540 = distinct !DILocation(line: 135, column: 42, scope: !2475)
!2541 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2540)
!2542 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2540)
!2543 = !DILocation(line: 135, column: 70, scope: !2475)
!2544 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2545)
!2545 = distinct !DILocation(line: 135, column: 58, scope: !2475)
!2546 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2545)
!2547 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2545)
!2548 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !2549)
!2549 = distinct !DILocation(line: 135, column: 17, scope: !2475)
!2550 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !2549)
!2551 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !2549)
!2552 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !2549)
!2553 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !2554)
!2554 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !2549)
!2555 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !2554)
!2556 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !2554)
!2557 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !2554)
!2558 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !2554)
!2559 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !2549)
!2560 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2561)
!2561 = distinct !DILocation(line: 136, column: 29, scope: !2475)
!2562 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2561)
!2563 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2561)
!2564 = !DILocation(line: 136, column: 17, scope: !2475)
!2565 = distinct !DISubprogram(name: "insert_tail<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_tail17hf32a3c56e381204eE", scope: !1086, file: !2460, line: 35, type: !2461, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !2566)
!2566 = !{!2567, !2568, !2569, !2571, !2573, !2575, !2577, !2579, !2589, !2591}
!2567 = !DILocalVariable(name: "v", arg: 1, scope: !2565, file: !2460, line: 35, type: !261)
!2568 = !DILocalVariable(name: "is_less", arg: 2, scope: !2565, file: !2460, line: 35, type: !1056)
!2569 = !DILocalVariable(name: "arr_ptr", scope: !2570, file: !2460, line: 41, type: !189, align: 8)
!2570 = distinct !DILexicalBlock(scope: !2565, file: !2460, line: 41, column: 5)
!2571 = !DILocalVariable(name: "i", scope: !2572, file: !2460, line: 42, type: !9, align: 8)
!2572 = distinct !DILexicalBlock(scope: !2570, file: !2460, line: 42, column: 5)
!2573 = !DILocalVariable(name: "i_ptr", scope: !2574, file: !2460, line: 47, type: !189, align: 8)
!2574 = distinct !DILexicalBlock(scope: !2572, file: !2460, line: 47, column: 9)
!2575 = !DILocalVariable(name: "tmp", scope: !2576, file: !2460, line: 56, type: !546, align: 8)
!2576 = distinct !DILexicalBlock(scope: !2574, file: !2460, line: 56, column: 13)
!2577 = !DILocalVariable(name: "hole", scope: !2578, file: !2460, line: 67, type: !1085, align: 8)
!2578 = distinct !DILexicalBlock(scope: !2576, file: !2460, line: 67, column: 13)
!2579 = !DILocalVariable(name: "iter", scope: !2580, file: !2460, line: 71, type: !2581, align: 8)
!2580 = distinct !DILexicalBlock(scope: !2578, file: !2460, line: 71, column: 13)
!2581 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !2582, file: !2, size: 128, align: 64, elements: !2585, templateParams: !2587, identifier: "7d15f93882dbf9bbf27a91d97a6d4ea5")
!2582 = !DINamespace(name: "rev", scope: !2583)
!2583 = !DINamespace(name: "adapters", scope: !2584)
!2584 = !DINamespace(name: "iter", scope: !71)
!2585 = !{!2586}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2581, file: !2, baseType: !104, size: 128, align: 64)
!2587 = !{!2588}
!2588 = !DITemplateTypeParameter(name: "T", type: !104)
!2589 = !DILocalVariable(name: "j", scope: !2590, file: !2460, line: 71, type: !9, align: 8)
!2590 = distinct !DILexicalBlock(scope: !2580, file: !2460, line: 71, column: 41)
!2591 = !DILocalVariable(name: "j_ptr", scope: !2592, file: !2460, line: 72, type: !189, align: 8)
!2592 = distinct !DILexicalBlock(scope: !2590, file: !2460, line: 72, column: 17)
!2593 = !DILocation(line: 35, column: 29, scope: !2565)
!2594 = !DILocation(line: 35, column: 42, scope: !2565)
!2595 = !DILocation(line: 56, column: 17, scope: !2576)
!2596 = !DILocation(line: 67, column: 17, scope: !2578)
!2597 = !DILocation(line: 71, column: 22, scope: !2580)
!2598 = !DILocation(line: 39, column: 5, scope: !2565)
!2599 = !DILocation(line: 777, column: 29, scope: !2188, inlinedAt: !2600)
!2600 = distinct !DILocation(line: 41, column: 19, scope: !2565)
!2601 = !DILocation(line: 41, column: 19, scope: !2565)
!2602 = !DILocation(line: 41, column: 9, scope: !2570)
!2603 = !DILocation(line: 42, column: 13, scope: !2570)
!2604 = !DILocation(line: 39, column: 19, scope: !2565)
!2605 = !DILocation(line: 42, column: 9, scope: !2572)
!2606 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2607)
!2607 = distinct !DILocation(line: 47, column: 21, scope: !2572)
!2608 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2607)
!2609 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2607)
!2610 = !DILocation(line: 47, column: 21, scope: !2572)
!2611 = !DILocation(line: 47, column: 13, scope: !2574)
!2612 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !2613)
!2613 = distinct !DILocation(line: 52, column: 31, scope: !2574)
!2614 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !2613)
!2615 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !2616)
!2616 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !2613)
!2617 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !2616)
!2618 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !2616)
!2619 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !2613)
!2620 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !2613)
!2621 = !DILocation(line: 52, column: 12, scope: !2574)
!2622 = !DILocation(line: 83, column: 2, scope: !2565)
!2623 = !DILocation(line: 56, column: 46, scope: !2574)
!2624 = !DILocation(line: 70, column: 22, scope: !896, inlinedAt: !2625)
!2625 = distinct !DILocation(line: 56, column: 23, scope: !2574)
!2626 = !DILocation(line: 71, column: 9, scope: !896, inlinedAt: !2625)
!2627 = !DILocation(line: 152, column: 14, scope: !2497, inlinedAt: !2628)
!2628 = distinct !DILocation(line: 67, column: 50, scope: !2576)
!2629 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !2630)
!2630 = distinct !DILocation(line: 67, column: 62, scope: !2576)
!2631 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !2630)
!2632 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !2633)
!2633 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !2630)
!2634 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !2633)
!2635 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !2633)
!2636 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !2630)
!2637 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !2630)
!2638 = !DILocation(line: 67, column: 28, scope: !2576)
!2639 = !DILocation(line: 68, column: 38, scope: !2578)
!2640 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !2641)
!2641 = distinct !DILocation(line: 68, column: 13, scope: !2578)
!2642 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !2641)
!2643 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !2641)
!2644 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !2641)
!2645 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !2646)
!2646 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !2641)
!2647 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !2646)
!2648 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !2646)
!2649 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !2646)
!2650 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !2646)
!2651 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !2641)
!2652 = !DILocation(line: 71, column: 26, scope: !2578)
!2653 = !DILocation(line: 71, column: 22, scope: !2578)
!2654 = !DILocation(line: 71, column: 13, scope: !2580)
!2655 = !DILocation(line: 81, column: 9, scope: !2576)
!2656 = !DILocation(line: 71, column: 17, scope: !2580)
!2657 = !DILocation(line: 71, column: 17, scope: !2590)
!2658 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2659)
!2659 = distinct !DILocation(line: 72, column: 29, scope: !2590)
!2660 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2659)
!2661 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2659)
!2662 = !DILocation(line: 72, column: 29, scope: !2590)
!2663 = !DILocation(line: 72, column: 21, scope: !2592)
!2664 = !DILocation(line: 152, column: 14, scope: !2497, inlinedAt: !2665)
!2665 = distinct !DILocation(line: 73, column: 30, scope: !2592)
!2666 = !DILocation(line: 73, column: 21, scope: !2592)
!2667 = !DILocation(line: 77, column: 49, scope: !2592)
!2668 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !2669)
!2669 = distinct !DILocation(line: 77, column: 17, scope: !2592)
!2670 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !2669)
!2671 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !2669)
!2672 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !2669)
!2673 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !2674)
!2674 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !2669)
!2675 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !2674)
!2676 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !2674)
!2677 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !2674)
!2678 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !2674)
!2679 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !2669)
!2680 = !DILocation(line: 78, column: 17, scope: !2592)
!2681 = distinct !DISubprogram(name: "choose_pivot<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot17h810d14f53abfcfceE", scope: !1086, file: !2460, line: 729, type: !2682, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !2684)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!946, !261, !1056}
!2684 = !{!2685, !2686, !2687, !2689, !2691, !2693, !2695, !2697, !2706, !2712}
!2685 = !DILocalVariable(name: "v", arg: 1, scope: !2681, file: !2460, line: 729, type: !261)
!2686 = !DILocalVariable(name: "is_less", arg: 2, scope: !2681, file: !2460, line: 729, type: !1056)
!2687 = !DILocalVariable(name: "len", scope: !2688, file: !2460, line: 739, type: !9, align: 8)
!2688 = distinct !DILexicalBlock(scope: !2681, file: !2460, line: 739, column: 5)
!2689 = !DILocalVariable(name: "a", scope: !2690, file: !2460, line: 742, type: !9, align: 8)
!2690 = distinct !DILexicalBlock(scope: !2688, file: !2460, line: 742, column: 5)
!2691 = !DILocalVariable(name: "b", scope: !2692, file: !2460, line: 743, type: !9, align: 8)
!2692 = distinct !DILexicalBlock(scope: !2690, file: !2460, line: 743, column: 5)
!2693 = !DILocalVariable(name: "c", scope: !2694, file: !2460, line: 744, type: !9, align: 8)
!2694 = distinct !DILexicalBlock(scope: !2692, file: !2460, line: 744, column: 5)
!2695 = !DILocalVariable(name: "swaps", scope: !2696, file: !2460, line: 747, type: !9, align: 8)
!2696 = distinct !DILexicalBlock(scope: !2694, file: !2460, line: 747, column: 5)
!2697 = !DILocalVariable(name: "sort2", scope: !2698, file: !2460, line: 757, type: !2699, align: 8)
!2698 = distinct !DILexicalBlock(scope: !2696, file: !2460, line: 757, column: 9)
!2699 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2700, file: !2, size: 256, align: 64, elements: !2701, templateParams: !24, identifier: "62f9e441da6b2aee60899558052eee4c")
!2700 = !DINamespace(name: "choose_pivot", scope: !1086)
!2701 = !{!2702, !2703, !2704}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !2699, file: !2, baseType: !1056, size: 64, align: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__v", scope: !2699, file: !2, baseType: !230, size: 128, align: 64, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__swaps", scope: !2699, file: !2, baseType: !2705, size: 64, align: 64, offset: 192)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2706 = !DILocalVariable(name: "sort3", scope: !2707, file: !2460, line: 765, type: !2708, align: 8)
!2707 = distinct !DILexicalBlock(scope: !2698, file: !2460, line: 765, column: 9)
!2708 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2700, file: !2, size: 64, align: 64, elements: !2709, templateParams: !24, identifier: "e9eba71f99be95cd2815c0c93464efc3")
!2709 = !{!2710}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort2", scope: !2708, file: !2, baseType: !2711, size: 64, align: 64)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2699, size: 64, align: 64, dwarfAddressSpace: 0)
!2712 = !DILocalVariable(name: "sort_adjacent", scope: !2713, file: !2460, line: 773, type: !2714, align: 8)
!2713 = distinct !DILexicalBlock(scope: !2707, file: !2460, line: 773, column: 13)
!2714 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2700, file: !2, size: 64, align: 64, elements: !2715, templateParams: !24, identifier: "d44d0da23ea5fb472324cc1d43dbf105")
!2715 = !{!2716}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort3", scope: !2714, file: !2, baseType: !2717, size: 64, align: 64)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2708, size: 64, align: 64, dwarfAddressSpace: 0)
!2718 = !DILocation(line: 729, column: 34, scope: !2681)
!2719 = !DILocation(line: 729, column: 47, scope: !2681)
!2720 = !DILocation(line: 742, column: 9, scope: !2690)
!2721 = !DILocation(line: 743, column: 9, scope: !2692)
!2722 = !DILocation(line: 744, column: 9, scope: !2694)
!2723 = !DILocation(line: 747, column: 9, scope: !2696)
!2724 = !DILocation(line: 757, column: 13, scope: !2698)
!2725 = !DILocation(line: 765, column: 13, scope: !2707)
!2726 = !DILocation(line: 773, column: 17, scope: !2713)
!2727 = !DILocation(line: 739, column: 15, scope: !2681)
!2728 = !DILocation(line: 739, column: 9, scope: !2688)
!2729 = !DILocation(line: 742, column: 17, scope: !2688)
!2730 = !DILocation(line: 743, column: 17, scope: !2690)
!2731 = !DILocation(line: 744, column: 17, scope: !2692)
!2732 = !DILocation(line: 747, column: 21, scope: !2694)
!2733 = !DILocation(line: 749, column: 8, scope: !2696)
!2734 = !DILocation(line: 788, column: 8, scope: !2696)
!2735 = !DILocation(line: 757, column: 25, scope: !2696)
!2736 = !DILocation(line: 765, column: 25, scope: !2698)
!2737 = !DILocation(line: 771, column: 12, scope: !2707)
!2738 = !DILocation(line: 785, column: 9, scope: !2707)
!2739 = !DILocation(line: 773, column: 37, scope: !2707)
!2740 = !DILocation(line: 779, column: 13, scope: !2713)
!2741 = !DILocation(line: 780, column: 13, scope: !2713)
!2742 = !DILocation(line: 781, column: 13, scope: !2713)
!2743 = !DILocation(line: 793, column: 9, scope: !2696)
!2744 = !DILocation(line: 794, column: 10, scope: !2696)
!2745 = !DILocation(line: 789, column: 10, scope: !2696)
!2746 = !DILocation(line: 789, column: 13, scope: !2696)
!2747 = !DILocation(line: 789, column: 9, scope: !2696)
!2748 = !DILocation(line: 788, column: 5, scope: !2696)
!2749 = !DILocation(line: 794, column: 20, scope: !2696)
!2750 = !DILocation(line: 794, column: 9, scope: !2696)
!2751 = !DILocation(line: 796, column: 2, scope: !2681)
!2752 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h0c2bbbc1549897eaE", scope: !2700, file: !2460, line: 757, type: !2753, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !2755)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{null, !2711, !2705, !2705}
!2755 = !{!2756, !2757, !2758, !2759, !2760}
!2756 = !DILocalVariable(name: "a", arg: 2, scope: !2752, file: !2460, line: 757, type: !2705)
!2757 = !DILocalVariable(name: "b", arg: 3, scope: !2752, file: !2460, line: 757, type: !2705)
!2758 = !DILocalVariable(name: "is_less", scope: !2752, file: !2460, line: 729, type: !1057, align: 8)
!2759 = !DILocalVariable(name: "v", scope: !2752, file: !2460, line: 729, type: !13, align: 8)
!2760 = !DILocalVariable(name: "swaps", scope: !2752, file: !2460, line: 747, type: !9, align: 8)
!2761 = !DILocation(line: 729, column: 47, scope: !2752)
!2762 = !DILocation(line: 729, column: 34, scope: !2752)
!2763 = !DILocation(line: 747, column: 13, scope: !2752)
!2764 = !DILocation(line: 757, column: 26, scope: !2752)
!2765 = !DILocation(line: 757, column: 41, scope: !2752)
!2766 = !DILocation(line: 758, column: 16, scope: !2752)
!2767 = !DILocation(line: 758, column: 24, scope: !2752)
!2768 = !DILocation(line: 758, column: 40, scope: !2752)
!2769 = !DILocation(line: 758, column: 45, scope: !2752)
!2770 = !DILocation(line: 758, column: 61, scope: !2752)
!2771 = !DILocation(line: 762, column: 10, scope: !2752)
!2772 = !DILocation(line: 759, column: 17, scope: !2752)
!2773 = !DILocation(line: 760, column: 17, scope: !2752)
!2774 = !DILocation(line: 758, column: 13, scope: !2752)
!2775 = distinct !DISubprogram(name: "{closure#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17ha5281664a412382dE", scope: !2700, file: !2460, line: 765, type: !2776, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !2778)
!2776 = !DISubroutineType(types: !2777)
!2777 = !{null, !2717, !2705, !2705, !2705}
!2778 = !{!2779, !2780, !2781, !2782}
!2779 = !DILocalVariable(name: "a", arg: 2, scope: !2775, file: !2460, line: 765, type: !2705)
!2780 = !DILocalVariable(name: "b", arg: 3, scope: !2775, file: !2460, line: 765, type: !2705)
!2781 = !DILocalVariable(name: "c", arg: 4, scope: !2775, file: !2460, line: 765, type: !2705)
!2782 = !DILocalVariable(name: "sort2", scope: !2775, file: !2460, line: 757, type: !2699, align: 8)
!2783 = !DILocation(line: 757, column: 17, scope: !2775)
!2784 = !DILocation(line: 765, column: 26, scope: !2775)
!2785 = !DILocation(line: 765, column: 41, scope: !2775)
!2786 = !DILocation(line: 765, column: 56, scope: !2775)
!2787 = !DILocation(line: 766, column: 13, scope: !2775)
!2788 = !DILocation(line: 767, column: 13, scope: !2775)
!2789 = !DILocation(line: 768, column: 13, scope: !2775)
!2790 = !DILocation(line: 769, column: 10, scope: !2775)
!2791 = distinct !DISubprogram(name: "{closure#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hc82fcb66791eab56E", scope: !2700, file: !2460, line: 773, type: !2792, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !2795)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{null, !2794, !2705}
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2714, size: 64, align: 64, dwarfAddressSpace: 0)
!2795 = !{!2796, !2797, !2798}
!2796 = !DILocalVariable(name: "a", arg: 2, scope: !2791, file: !2460, line: 773, type: !2705)
!2797 = !DILocalVariable(name: "sort3", scope: !2791, file: !2460, line: 765, type: !2708, align: 8)
!2798 = !DILocalVariable(name: "tmp", scope: !2799, file: !2460, line: 774, type: !9, align: 8)
!2799 = distinct !DILexicalBlock(scope: !2791, file: !2460, line: 774, column: 17)
!2800 = !DILocation(line: 765, column: 17, scope: !2791)
!2801 = !DILocation(line: 773, column: 38, scope: !2791)
!2802 = !DILocation(line: 774, column: 27, scope: !2791)
!2803 = !DILocation(line: 774, column: 21, scope: !2799)
!2804 = !DILocation(line: 775, column: 17, scope: !2799)
!2805 = !DILocation(line: 775, column: 28, scope: !2799)
!2806 = !DILocation(line: 775, column: 47, scope: !2799)
!2807 = !DILocation(line: 776, column: 14, scope: !2791)
!2808 = distinct !DISubprogram(name: "break_patterns<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns17h264fc3afee5c2e5aE", scope: !1086, file: !2460, line: 680, type: !2301, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2809)
!2809 = !{!2810, !2811, !2813, !2815, !2821, !2823, !2825, !2827, !2829}
!2810 = !DILocalVariable(name: "v", arg: 1, scope: !2808, file: !2460, line: 680, type: !261)
!2811 = !DILocalVariable(name: "len", scope: !2812, file: !2460, line: 681, type: !9, align: 8)
!2812 = distinct !DILexicalBlock(scope: !2808, file: !2460, line: 681, column: 5)
!2813 = !DILocalVariable(name: "seed", scope: !2814, file: !2460, line: 683, type: !9, align: 8)
!2814 = distinct !DILexicalBlock(scope: !2812, file: !2460, line: 683, column: 9)
!2815 = !DILocalVariable(name: "gen_usize", scope: !2816, file: !2460, line: 684, type: !2817, align: 8)
!2816 = distinct !DILexicalBlock(scope: !2814, file: !2460, line: 684, column: 9)
!2817 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !2818, file: !2, size: 64, align: 64, elements: !2819, templateParams: !24, identifier: "5a16a080648c9d7b7686b156bb924330")
!2818 = !DINamespace(name: "break_patterns", scope: !1086)
!2819 = !{!2820}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__seed", scope: !2817, file: !2, baseType: !2705, size: 64, align: 64)
!2821 = !DILocalVariable(name: "modulus", scope: !2822, file: !2460, line: 705, type: !9, align: 8)
!2822 = distinct !DILexicalBlock(scope: !2816, file: !2460, line: 705, column: 9)
!2823 = !DILocalVariable(name: "pos", scope: !2824, file: !2460, line: 708, type: !9, align: 8)
!2824 = distinct !DILexicalBlock(scope: !2822, file: !2460, line: 708, column: 9)
!2825 = !DILocalVariable(name: "iter", scope: !2826, file: !2460, line: 710, type: !104, align: 8)
!2826 = distinct !DILexicalBlock(scope: !2824, file: !2460, line: 710, column: 9)
!2827 = !DILocalVariable(name: "i", scope: !2828, file: !2460, line: 710, type: !9, align: 8)
!2828 = distinct !DILexicalBlock(scope: !2826, file: !2460, line: 710, column: 23)
!2829 = !DILocalVariable(name: "other", scope: !2830, file: !2460, line: 714, type: !9, align: 8)
!2830 = distinct !DILexicalBlock(scope: !2828, file: !2460, line: 714, column: 13)
!2831 = !DILocation(line: 680, column: 33, scope: !2808)
!2832 = !DILocation(line: 683, column: 13, scope: !2814)
!2833 = !DILocation(line: 684, column: 13, scope: !2816)
!2834 = !DILocation(line: 710, column: 18, scope: !2826)
!2835 = !DILocation(line: 714, column: 17, scope: !2830)
!2836 = !DILocation(line: 681, column: 15, scope: !2808)
!2837 = !DILocation(line: 681, column: 9, scope: !2812)
!2838 = !DILocation(line: 682, column: 8, scope: !2812)
!2839 = !DILocation(line: 724, column: 2, scope: !2808)
!2840 = !DILocation(line: 683, column: 24, scope: !2812)
!2841 = !DILocation(line: 684, column: 29, scope: !2814)
!2842 = !DILocation(line: 705, column: 23, scope: !2816)
!2843 = !DILocation(line: 705, column: 13, scope: !2822)
!2844 = !DILocation(line: 708, column: 19, scope: !2822)
!2845 = !DILocation(line: 708, column: 13, scope: !2824)
!2846 = !DILocation(line: 710, column: 18, scope: !2824)
!2847 = !DILocation(line: 710, column: 9, scope: !2826)
!2848 = !DILocation(line: 710, column: 13, scope: !2826)
!2849 = !DILocation(line: 710, column: 13, scope: !2828)
!2850 = !DILocation(line: 714, column: 29, scope: !2828)
!2851 = !DILocation(line: 714, column: 43, scope: !2828)
!2852 = !DILocation(line: 717, column: 16, scope: !2830)
!2853 = !DILocation(line: 721, column: 20, scope: !2830)
!2854 = !DILocation(line: 718, column: 17, scope: !2830)
!2855 = !DILocation(line: 717, column: 13, scope: !2830)
!2856 = !DILocation(line: 721, column: 33, scope: !2830)
!2857 = !DILocation(line: 721, column: 13, scope: !2830)
!2858 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h2c914f8b1ca250d4E", scope: !2818, file: !2460, line: 684, type: !2859, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !2862)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!9, !2861}
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::break_patterns::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !2817, size: 64, align: 64, dwarfAddressSpace: 0)
!2862 = !{!2863, !2864, !2866}
!2863 = !DILocalVariable(name: "seed", scope: !2858, file: !2460, line: 683, type: !9, align: 8)
!2864 = !DILocalVariable(name: "r", scope: !2865, file: !2460, line: 687, type: !27, align: 4)
!2865 = distinct !DILexicalBlock(scope: !2858, file: !2460, line: 687, column: 17)
!2866 = !DILocalVariable(name: "r", scope: !2867, file: !2460, line: 694, type: !22, align: 8)
!2867 = distinct !DILexicalBlock(scope: !2858, file: !2460, line: 694, column: 17)
!2868 = !DILocation(line: 683, column: 17, scope: !2858)
!2869 = !DILocation(line: 687, column: 21, scope: !2865)
!2870 = !DILocation(line: 694, column: 21, scope: !2867)
!2871 = !DILocation(line: 686, column: 16, scope: !2858)
!2872 = !DILocation(line: 694, column: 29, scope: !2858)
!2873 = !DILocation(line: 695, column: 22, scope: !2867)
!2874 = !DILocation(line: 695, column: 17, scope: !2867)
!2875 = !DILocation(line: 696, column: 22, scope: !2867)
!2876 = !DILocation(line: 696, column: 17, scope: !2867)
!2877 = !DILocation(line: 697, column: 22, scope: !2867)
!2878 = !DILocation(line: 697, column: 17, scope: !2867)
!2879 = !DILocation(line: 698, column: 24, scope: !2867)
!2880 = !DILocation(line: 698, column: 17, scope: !2867)
!2881 = !DILocation(line: 699, column: 17, scope: !2867)
!2882 = !DILocation(line: 686, column: 13, scope: !2858)
!2883 = !DILocation(line: 687, column: 29, scope: !2858)
!2884 = !DILocation(line: 688, column: 22, scope: !2865)
!2885 = !DILocation(line: 688, column: 17, scope: !2865)
!2886 = !DILocation(line: 689, column: 22, scope: !2865)
!2887 = !DILocation(line: 689, column: 17, scope: !2865)
!2888 = !DILocation(line: 690, column: 22, scope: !2865)
!2889 = !DILocation(line: 690, column: 17, scope: !2865)
!2890 = !DILocation(line: 691, column: 24, scope: !2865)
!2891 = !DILocation(line: 691, column: 17, scope: !2865)
!2892 = !DILocation(line: 692, column: 17, scope: !2865)
!2893 = !DILocation(line: 701, column: 10, scope: !2858)
!2894 = distinct !DISubprogram(name: "partition_equal<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort15partition_equal17h97707e80885f28baE", scope: !1086, file: !2460, line: 615, type: !2895, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !2897)
!2895 = !DISubroutineType(types: !2896)
!2896 = !{!9, !261, !9, !1056}
!2897 = !{!2898, !2899, !2900, !2901, !2903, !2904, !2906, !2908, !2910, !2912, !2914, !2916, !2918}
!2898 = !DILocalVariable(name: "v", arg: 1, scope: !2894, file: !2460, line: 615, type: !261)
!2899 = !DILocalVariable(name: "pivot", arg: 2, scope: !2894, file: !2460, line: 615, type: !9)
!2900 = !DILocalVariable(name: "is_less", arg: 3, scope: !2894, file: !2460, line: 615, type: !1056)
!2901 = !DILocalVariable(name: "pivot", scope: !2902, file: !2460, line: 621, type: !261, align: 8)
!2902 = distinct !DILexicalBlock(scope: !2894, file: !2460, line: 621, column: 5)
!2903 = !DILocalVariable(name: "v", scope: !2902, file: !2460, line: 621, type: !261, align: 8)
!2904 = !DILocalVariable(name: "pivot", scope: !2905, file: !2460, line: 622, type: !811, align: 8)
!2905 = distinct !DILexicalBlock(scope: !2902, file: !2460, line: 622, column: 5)
!2906 = !DILocalVariable(name: "tmp", scope: !2907, file: !2460, line: 627, type: !546, align: 8)
!2907 = distinct !DILexicalBlock(scope: !2905, file: !2460, line: 627, column: 5)
!2908 = !DILocalVariable(name: "_pivot_guard", scope: !2909, file: !2460, line: 628, type: !1085, align: 8)
!2909 = distinct !DILexicalBlock(scope: !2907, file: !2460, line: 628, column: 5)
!2910 = !DILocalVariable(name: "pivot", scope: !2911, file: !2460, line: 629, type: !12, align: 8)
!2911 = distinct !DILexicalBlock(scope: !2909, file: !2460, line: 629, column: 5)
!2912 = !DILocalVariable(name: "len", scope: !2913, file: !2460, line: 631, type: !9, align: 8)
!2913 = distinct !DILexicalBlock(scope: !2911, file: !2460, line: 631, column: 5)
!2914 = !DILocalVariable(name: "l", scope: !2915, file: !2460, line: 637, type: !9, align: 8)
!2915 = distinct !DILexicalBlock(scope: !2913, file: !2460, line: 637, column: 5)
!2916 = !DILocalVariable(name: "r", scope: !2917, file: !2460, line: 638, type: !9, align: 8)
!2917 = distinct !DILexicalBlock(scope: !2915, file: !2460, line: 638, column: 5)
!2918 = !DILocalVariable(name: "ptr", scope: !2919, file: !2460, line: 664, type: !189, align: 8)
!2919 = distinct !DILexicalBlock(scope: !2917, file: !2460, line: 664, column: 13)
!2920 = !DILocation(line: 615, column: 37, scope: !2894)
!2921 = !DILocation(line: 615, column: 50, scope: !2894)
!2922 = !DILocation(line: 615, column: 64, scope: !2894)
!2923 = !DILocation(line: 627, column: 9, scope: !2907)
!2924 = !DILocation(line: 628, column: 9, scope: !2909)
!2925 = !DILocation(line: 637, column: 9, scope: !2915)
!2926 = !DILocation(line: 638, column: 9, scope: !2917)
!2927 = !DILocation(line: 620, column: 5, scope: !2894)
!2928 = !DILocation(line: 621, column: 22, scope: !2894)
!2929 = !DILocation(line: 621, column: 10, scope: !2894)
!2930 = !DILocation(line: 621, column: 10, scope: !2902)
!2931 = !DILocation(line: 621, column: 17, scope: !2894)
!2932 = !DILocation(line: 621, column: 17, scope: !2902)
!2933 = !DILocation(line: 622, column: 22, scope: !2902)
!2934 = !DILocation(line: 622, column: 17, scope: !2902)
!2935 = !DILocation(line: 622, column: 9, scope: !2905)
!2936 = !DILocation(line: 627, column: 47, scope: !2905)
!2937 = !DILocation(line: 70, column: 22, scope: !896, inlinedAt: !2938)
!2938 = distinct !DILocation(line: 627, column: 15, scope: !2905)
!2939 = !DILocation(line: 71, column: 9, scope: !896, inlinedAt: !2938)
!2940 = !DILocation(line: 152, column: 14, scope: !2497, inlinedAt: !2941)
!2941 = distinct !DILocation(line: 628, column: 46, scope: !2907)
!2942 = !DILocation(line: 628, column: 24, scope: !2907)
!2943 = !DILocation(line: 152, column: 14, scope: !2497, inlinedAt: !2944)
!2944 = distinct !DILocation(line: 629, column: 18, scope: !2909)
!2945 = !DILocation(line: 629, column: 18, scope: !2909)
!2946 = !DILocation(line: 629, column: 9, scope: !2911)
!2947 = !DILocation(line: 631, column: 15, scope: !2911)
!2948 = !DILocation(line: 631, column: 9, scope: !2913)
!2949 = !DILocation(line: 632, column: 8, scope: !2913)
!2950 = !DILocation(line: 633, column: 16, scope: !2913)
!2951 = !DILocation(line: 675, column: 1, scope: !2907)
!2952 = !DILocation(line: 637, column: 17, scope: !2913)
!2953 = !DILocation(line: 638, column: 17, scope: !2915)
!2954 = !DILocation(line: 639, column: 5, scope: !2917)
!2955 = !DILocation(line: 675, column: 2, scope: !2894)
!2956 = !DILocation(line: 646, column: 19, scope: !2917)
!2957 = !DILocation(line: 646, column: 23, scope: !2917)
!2958 = !DILocation(line: 652, column: 17, scope: !2917)
!2959 = !DILocation(line: 646, column: 60, scope: !2917)
!2960 = !DILocation(line: 646, column: 44, scope: !2917)
!2961 = !DILocation(line: 646, column: 29, scope: !2917)
!2962 = !DILocation(line: 647, column: 17, scope: !2917)
!2963 = !DILocation(line: 646, column: 13, scope: !2917)
!2964 = !DILocation(line: 653, column: 20, scope: !2917)
!2965 = !DILocation(line: 653, column: 25, scope: !2917)
!2966 = !DILocation(line: 653, column: 62, scope: !2917)
!2967 = !DILocation(line: 653, column: 46, scope: !2917)
!2968 = !DILocation(line: 653, column: 31, scope: !2917)
!2969 = !DILocation(line: 659, column: 16, scope: !2917)
!2970 = !DILocation(line: 659, column: 21, scope: !2917)
!2971 = !DILocation(line: 777, column: 29, scope: !2188, inlinedAt: !2972)
!2972 = distinct !DILocation(line: 664, column: 23, scope: !2917)
!2973 = !DILocation(line: 664, column: 23, scope: !2917)
!2974 = !DILocation(line: 664, column: 17, scope: !2919)
!2975 = !DILocation(line: 665, column: 31, scope: !2919)
!2976 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2977)
!2977 = distinct !DILocation(line: 665, column: 23, scope: !2919)
!2978 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2977)
!2979 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2977)
!2980 = !DILocation(line: 665, column: 43, scope: !2919)
!2981 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !2982)
!2982 = distinct !DILocation(line: 665, column: 35, scope: !2919)
!2983 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !2982)
!2984 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !2982)
!2985 = !DILocation(line: 665, column: 13, scope: !2919)
!2986 = !DILocation(line: 666, column: 13, scope: !2919)
!2987 = !DILocation(line: 671, column: 5, scope: !2917)
!2988 = distinct !DISubprogram(name: "partition_in_blocks<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort19partition_in_blocks17hbc649a6abd17b02fE", scope: !1086, file: !2460, line: 302, type: !2989, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !2991)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!9, !261, !12, !1056}
!2991 = !{!2992, !2993, !2994, !2995, !2997, !2999, !3001, !3003, !3008, !3010, !3012, !3014, !3016, !3018, !3020, !3022, !3024, !3026, !3028, !3030, !3032, !3034, !3036, !3038, !3040, !3045, !3046, !3049, !3052, !3053}
!2992 = !DILocalVariable(name: "v", arg: 1, scope: !2988, file: !2460, line: 302, type: !261)
!2993 = !DILocalVariable(name: "pivot", arg: 2, scope: !2988, file: !2460, line: 302, type: !12)
!2994 = !DILocalVariable(name: "is_less", arg: 3, scope: !2988, file: !2460, line: 302, type: !1056)
!2995 = !DILocalVariable(name: "l", scope: !2996, file: !2460, line: 323, type: !189, align: 8)
!2996 = distinct !DILexicalBlock(scope: !2988, file: !2460, line: 323, column: 5)
!2997 = !DILocalVariable(name: "block_l", scope: !2998, file: !2460, line: 324, type: !9, align: 8)
!2998 = distinct !DILexicalBlock(scope: !2996, file: !2460, line: 324, column: 5)
!2999 = !DILocalVariable(name: "start_l", scope: !3000, file: !2460, line: 325, type: !1111, align: 8)
!3000 = distinct !DILexicalBlock(scope: !2998, file: !2460, line: 325, column: 5)
!3001 = !DILocalVariable(name: "end_l", scope: !3002, file: !2460, line: 326, type: !1111, align: 8)
!3002 = distinct !DILexicalBlock(scope: !3000, file: !2460, line: 326, column: 5)
!3003 = !DILocalVariable(name: "offsets_l", scope: !3004, file: !2460, line: 327, type: !3005, align: 1)
!3004 = distinct !DILexicalBlock(scope: !3002, file: !2460, line: 327, column: 5)
!3005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !832, size: 1024, align: 8, elements: !3006)
!3006 = !{!3007}
!3007 = !DISubrange(count: 128, lowerBound: 0)
!3008 = !DILocalVariable(name: "r", scope: !3009, file: !2460, line: 331, type: !189, align: 8)
!3009 = distinct !DILexicalBlock(scope: !3004, file: !2460, line: 331, column: 5)
!3010 = !DILocalVariable(name: "block_r", scope: !3011, file: !2460, line: 332, type: !9, align: 8)
!3011 = distinct !DILexicalBlock(scope: !3009, file: !2460, line: 332, column: 5)
!3012 = !DILocalVariable(name: "start_r", scope: !3013, file: !2460, line: 333, type: !1111, align: 8)
!3013 = distinct !DILexicalBlock(scope: !3011, file: !2460, line: 333, column: 5)
!3014 = !DILocalVariable(name: "end_r", scope: !3015, file: !2460, line: 334, type: !1111, align: 8)
!3015 = distinct !DILexicalBlock(scope: !3013, file: !2460, line: 334, column: 5)
!3016 = !DILocalVariable(name: "offsets_r", scope: !3017, file: !2460, line: 335, type: !3005, align: 1)
!3017 = distinct !DILexicalBlock(scope: !3015, file: !2460, line: 335, column: 5)
!3018 = !DILocalVariable(name: "is_done", scope: !3019, file: !2460, line: 351, type: !328, align: 1)
!3019 = distinct !DILexicalBlock(scope: !3017, file: !2460, line: 351, column: 9)
!3020 = !DILocalVariable(name: "rem", scope: !3021, file: !2460, line: 355, type: !9, align: 8)
!3021 = distinct !DILexicalBlock(scope: !3019, file: !2460, line: 355, column: 13)
!3022 = !DILocalVariable(name: "elem", scope: !3023, file: !2460, line: 381, type: !189, align: 8)
!3023 = distinct !DILexicalBlock(scope: !3019, file: !2460, line: 381, column: 13)
!3024 = !DILocalVariable(name: "iter", scope: !3025, file: !2460, line: 383, type: !104, align: 8)
!3025 = distinct !DILexicalBlock(scope: !3023, file: !2460, line: 383, column: 13)
!3026 = !DILocalVariable(name: "i", scope: !3027, file: !2460, line: 383, type: !9, align: 8)
!3027 = distinct !DILexicalBlock(scope: !3025, file: !2460, line: 383, column: 33)
!3028 = !DILocalVariable(name: "elem", scope: !3029, file: !2460, line: 407, type: !189, align: 8)
!3029 = distinct !DILexicalBlock(scope: !3019, file: !2460, line: 407, column: 13)
!3030 = !DILocalVariable(name: "iter", scope: !3031, file: !2460, line: 409, type: !104, align: 8)
!3031 = distinct !DILexicalBlock(scope: !3029, file: !2460, line: 409, column: 13)
!3032 = !DILocalVariable(name: "i", scope: !3033, file: !2460, line: 409, type: !9, align: 8)
!3033 = distinct !DILexicalBlock(scope: !3031, file: !2460, line: 409, column: 33)
!3034 = !DILocalVariable(name: "count", scope: !3035, file: !2460, line: 431, type: !9, align: 8)
!3035 = distinct !DILexicalBlock(scope: !3019, file: !2460, line: 431, column: 9)
!3036 = !DILocalVariable(name: "tmp", scope: !3037, file: !2460, line: 465, type: !13, align: 8)
!3037 = distinct !DILexicalBlock(scope: !3035, file: !2460, line: 465, column: 17)
!3038 = !DILocalVariable(name: "iter", scope: !3039, file: !2460, line: 468, type: !104, align: 8)
!3039 = distinct !DILexicalBlock(scope: !3037, file: !2460, line: 468, column: 17)
!3040 = !DILocalVariable(name: "left_val", scope: !3041, file: !2460, line: 514, type: !3044, align: 8)
!3041 = !DILexicalBlockFile(scope: !3042, file: !2460, discriminator: 0)
!3042 = distinct !DILexicalBlock(scope: !3017, file: !3043, line: 39, column: 13)
!3043 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "a57e716e54c372a351d6511c0663e58d")
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3045 = !DILocalVariable(name: "right_val", scope: !3041, file: !2460, line: 514, type: !3044, align: 8)
!3046 = !DILocalVariable(name: "kind", scope: !3047, file: !2460, line: 514, type: !85, align: 1)
!3047 = !DILexicalBlockFile(scope: !3048, file: !2460, discriminator: 0)
!3048 = distinct !DILexicalBlock(scope: !3042, file: !3043, line: 41, column: 21)
!3049 = !DILocalVariable(name: "left_val", scope: !3050, file: !2460, line: 537, type: !3044, align: 8)
!3050 = !DILexicalBlockFile(scope: !3051, file: !2460, discriminator: 0)
!3051 = distinct !DILexicalBlock(scope: !3017, file: !3043, line: 39, column: 13)
!3052 = !DILocalVariable(name: "right_val", scope: !3050, file: !2460, line: 537, type: !3044, align: 8)
!3053 = !DILocalVariable(name: "kind", scope: !3054, file: !2460, line: 537, type: !85, align: 1)
!3054 = !DILexicalBlockFile(scope: !3055, file: !2460, discriminator: 0)
!3055 = distinct !DILexicalBlock(scope: !3051, file: !3043, line: 41, column: 21)
!3056 = !DILocation(line: 302, column: 30, scope: !2988)
!3057 = !DILocation(line: 302, column: 43, scope: !2988)
!3058 = !DILocation(line: 302, column: 54, scope: !2988)
!3059 = !DILocation(line: 323, column: 9, scope: !2996)
!3060 = !DILocation(line: 324, column: 9, scope: !2998)
!3061 = !DILocation(line: 325, column: 9, scope: !3000)
!3062 = !DILocation(line: 326, column: 9, scope: !3002)
!3063 = !DILocation(line: 327, column: 9, scope: !3004)
!3064 = !DILocation(line: 331, column: 9, scope: !3009)
!3065 = !DILocation(line: 332, column: 9, scope: !3011)
!3066 = !DILocation(line: 333, column: 9, scope: !3013)
!3067 = !DILocation(line: 334, column: 9, scope: !3015)
!3068 = !DILocation(line: 335, column: 9, scope: !3017)
!3069 = !DILocation(line: 355, column: 17, scope: !3021)
!3070 = !DILocation(line: 381, column: 17, scope: !3023)
!3071 = !DILocation(line: 383, column: 22, scope: !3025)
!3072 = !DILocation(line: 407, column: 17, scope: !3029)
!3073 = !DILocation(line: 409, column: 22, scope: !3031)
!3074 = !DILocation(line: 465, column: 21, scope: !3037)
!3075 = !DILocation(line: 468, column: 26, scope: !3039)
!3076 = !DILocation(line: 514, column: 9, scope: !3047)
!3077 = !DILocation(line: 537, column: 9, scope: !3054)
!3078 = !DILocation(line: 777, column: 29, scope: !2188, inlinedAt: !3079)
!3079 = distinct !DILocation(line: 323, column: 17, scope: !2988)
!3080 = !DILocation(line: 323, column: 17, scope: !2988)
!3081 = !DILocation(line: 324, column: 23, scope: !2996)
!3082 = !DILocalVariable(name: "addr", arg: 1, scope: !3083, file: !1081, line: 611, type: !9)
!3083 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h54e61e39d89e0bc1E", scope: !134, file: !1081, line: 611, type: !3084, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !1928, retainedNodes: !3086)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!1207, !9}
!3086 = !{!3082}
!3087 = !DILocation(line: 611, column: 29, scope: !3083, inlinedAt: !3088)
!3088 = distinct !DILocation(line: 555, column: 24, scope: !3089, inlinedAt: !3092)
!3089 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h49d8a81ffe7193adE", scope: !134, file: !1081, line: 554, type: !3090, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{!1111}
!3092 = distinct !DILocation(line: 325, column: 23, scope: !2998)
!3093 = !DILocation(line: 555, column: 5, scope: !3089, inlinedAt: !3092)
!3094 = !DILocation(line: 325, column: 23, scope: !2998)
!3095 = !DILocation(line: 611, column: 29, scope: !3083, inlinedAt: !3096)
!3096 = distinct !DILocation(line: 555, column: 24, scope: !3089, inlinedAt: !3097)
!3097 = distinct !DILocation(line: 326, column: 21, scope: !3000)
!3098 = !DILocation(line: 555, column: 5, scope: !3089, inlinedAt: !3097)
!3099 = !DILocation(line: 326, column: 21, scope: !3000)
!3100 = !DILocation(line: 315, column: 6, scope: !3101, inlinedAt: !3105)
!3101 = distinct !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h0c6342dabe57e4cbE", scope: !832, file: !1491, line: 313, type: !3102, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, declaration: !3104)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{!832}
!3104 = !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h0c6342dabe57e4cbE", scope: !832, file: !1491, line: 313, type: !3102, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !839)
!3105 = distinct !DILocation(line: 327, column: 26, scope: !3002)
!3106 = !DILocation(line: 327, column: 25, scope: !3002)
!3107 = !DILocation(line: 331, column: 26, scope: !3004)
!3108 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !3109)
!3109 = distinct !DILocation(line: 331, column: 26, scope: !3004)
!3110 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !3109)
!3111 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !3109)
!3112 = !DILocation(line: 332, column: 23, scope: !3009)
!3113 = !DILocation(line: 611, column: 29, scope: !3083, inlinedAt: !3114)
!3114 = distinct !DILocation(line: 555, column: 24, scope: !3089, inlinedAt: !3115)
!3115 = distinct !DILocation(line: 333, column: 23, scope: !3011)
!3116 = !DILocation(line: 555, column: 5, scope: !3089, inlinedAt: !3115)
!3117 = !DILocation(line: 333, column: 23, scope: !3011)
!3118 = !DILocation(line: 611, column: 29, scope: !3083, inlinedAt: !3119)
!3119 = distinct !DILocation(line: 555, column: 24, scope: !3089, inlinedAt: !3120)
!3120 = distinct !DILocation(line: 334, column: 21, scope: !3013)
!3121 = !DILocation(line: 555, column: 5, scope: !3089, inlinedAt: !3120)
!3122 = !DILocation(line: 334, column: 21, scope: !3013)
!3123 = !DILocation(line: 315, column: 6, scope: !3101, inlinedAt: !3124)
!3124 = distinct !DILocation(line: 335, column: 26, scope: !3015)
!3125 = !DILocation(line: 335, column: 25, scope: !3015)
!3126 = !DILocation(line: 348, column: 5, scope: !3017)
!3127 = !DILocation(line: 351, column: 29, scope: !3017)
!3128 = !DILocation(line: 351, column: 32, scope: !3017)
!3129 = !DILocation(line: 351, column: 23, scope: !3017)
!3130 = !DILocation(line: 351, column: 38, scope: !3017)
!3131 = !DILocation(line: 351, column: 13, scope: !3019)
!3132 = !DILocation(line: 353, column: 12, scope: !3019)
!3133 = !DILocation(line: 377, column: 12, scope: !3019)
!3134 = !DILocation(line: 377, column: 23, scope: !3019)
!3135 = !DILocation(line: 355, column: 33, scope: !3019)
!3136 = !DILocation(line: 355, column: 36, scope: !3019)
!3137 = !DILocation(line: 355, column: 27, scope: !3019)
!3138 = !DILocation(line: 356, column: 16, scope: !3021)
!3139 = !DILocation(line: 356, column: 26, scope: !3021)
!3140 = !DILocation(line: 356, column: 35, scope: !3021)
!3141 = !DILocation(line: 356, column: 45, scope: !3021)
!3142 = !DILocation(line: 357, column: 17, scope: !3021)
!3143 = !DILocation(line: 362, column: 16, scope: !3021)
!3144 = !DILocation(line: 362, column: 26, scope: !3021)
!3145 = !DILocation(line: 356, column: 13, scope: !3021)
!3146 = !DILocation(line: 364, column: 23, scope: !3021)
!3147 = !DILocation(line: 364, column: 33, scope: !3021)
!3148 = !DILocation(line: 363, column: 27, scope: !3021)
!3149 = !DILocation(line: 363, column: 17, scope: !3021)
!3150 = !DILocation(line: 362, column: 13, scope: !3021)
!3151 = !DILocation(line: 370, column: 27, scope: !3021)
!3152 = !DILocation(line: 370, column: 17, scope: !3021)
!3153 = !DILocation(line: 371, column: 27, scope: !3021)
!3154 = !DILocation(line: 371, column: 33, scope: !3021)
!3155 = !DILocation(line: 365, column: 27, scope: !3021)
!3156 = !DILocation(line: 365, column: 17, scope: !3021)
!3157 = !DILocation(line: 364, column: 20, scope: !3021)
!3158 = !DILocation(line: 371, column: 17, scope: !3021)
!3159 = !DILocation(line: 373, column: 13, scope: !3021)
!3160 = !DILocation(line: 374, column: 13, scope: !3021)
!3161 = !DILocation(line: 373, column: 27, scope: !3021)
!3162 = !DILocation(line: 373, column: 47, scope: !3021)
!3163 = !DILocation(line: 374, column: 33, scope: !3021)
!3164 = !DILocation(line: 374, column: 36, scope: !3021)
!3165 = !DILocation(line: 374, column: 27, scope: !3021)
!3166 = !DILocation(line: 374, column: 42, scope: !3021)
!3167 = !DILocation(line: 374, column: 52, scope: !3021)
!3168 = !DILocation(line: 403, column: 12, scope: !3019)
!3169 = !DILocation(line: 403, column: 23, scope: !3019)
!3170 = !DILocalVariable(name: "this", arg: 1, scope: !3171, file: !1491, line: 1016, type: !3174)
!3171 = distinct !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17hc1840c066426b05bE", scope: !832, file: !1491, line: 1016, type: !3172, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, declaration: !3179, retainedNodes: !3180)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{!1111, !3174}
!3174 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !3175, templateParams: !24, identifier: "8d15577c4973d8b94070ccd62e922d9f")
!3175 = !{!3176, !3178}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3174, file: !2, baseType: !3177, size: 64, align: 64)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64, align: 64, dwarfAddressSpace: 0)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3174, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3179 = !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17hc1840c066426b05bE", scope: !832, file: !1491, line: 1016, type: !3172, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !839)
!3180 = !{!3170}
!3181 = !DILocation(line: 1016, column: 35, scope: !3171, inlinedAt: !3182)
!3182 = distinct !DILocation(line: 379, column: 23, scope: !3019)
!3183 = !DILocalVariable(name: "self", arg: 1, scope: !3184, file: !2143, line: 777, type: !3174)
!3184 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h975cc3e2156fd179E", scope: !1059, file: !2143, line: 777, type: !3185, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !848, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!1346, !3174}
!3187 = !{!3183}
!3188 = !DILocation(line: 777, column: 29, scope: !3184, inlinedAt: !3189)
!3189 = distinct !DILocation(line: 1017, column: 9, scope: !3171, inlinedAt: !3182)
!3190 = !DILocation(line: 379, column: 13, scope: !3019)
!3191 = !DILocation(line: 380, column: 21, scope: !3019)
!3192 = !DILocation(line: 380, column: 13, scope: !3019)
!3193 = !DILocation(line: 381, column: 28, scope: !3019)
!3194 = !DILocation(line: 383, column: 25, scope: !3023)
!3195 = !DILocation(line: 383, column: 22, scope: !3023)
!3196 = !DILocation(line: 383, column: 13, scope: !3025)
!3197 = !DILocation(line: 383, column: 17, scope: !3025)
!3198 = !DILocation(line: 383, column: 17, scope: !3027)
!3199 = !DILocation(line: 396, column: 21, scope: !3027)
!3200 = !DILocation(line: 397, column: 29, scope: !3027)
!3201 = !DILocation(line: 397, column: 48, scope: !3027)
!3202 = !DILocation(line: 397, column: 40, scope: !3027)
!3203 = !DILocation(line: 397, column: 39, scope: !3027)
!3204 = !DILocalVariable(name: "self", arg: 1, scope: !3205, file: !184, line: 1039, type: !1111)
!3205 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h6ca82211fe1edde4E", scope: !195, file: !184, line: 1039, type: !3206, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, retainedNodes: !3208)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{!1111, !1111, !9}
!3208 = !{!3204, !3209}
!3209 = !DILocalVariable(name: "count", arg: 2, scope: !3205, file: !184, line: 1039, type: !9)
!3210 = !DILocation(line: 1039, column: 29, scope: !3205, inlinedAt: !3211)
!3211 = distinct !DILocation(line: 397, column: 29, scope: !3027)
!3212 = !DILocation(line: 1039, column: 35, scope: !3205, inlinedAt: !3211)
!3213 = !DILocation(line: 1044, column: 18, scope: !3205, inlinedAt: !3211)
!3214 = !DILocation(line: 397, column: 21, scope: !3027)
!3215 = !DILocation(line: 398, column: 28, scope: !3027)
!3216 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !3217)
!3217 = distinct !DILocation(line: 398, column: 28, scope: !3027)
!3218 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !3217)
!3219 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !3217)
!3220 = !DILocation(line: 398, column: 21, scope: !3027)
!3221 = !DILocation(line: 431, column: 36, scope: !3019)
!3222 = !DILocation(line: 431, column: 45, scope: !3019)
!3223 = !DILocation(line: 431, column: 30, scope: !3019)
!3224 = !DILocation(line: 431, column: 59, scope: !3019)
!3225 = !DILocation(line: 431, column: 68, scope: !3019)
!3226 = !DILocation(line: 431, column: 53, scope: !3019)
!3227 = !DILocation(line: 431, column: 21, scope: !3019)
!3228 = !DILocation(line: 431, column: 13, scope: !3035)
!3229 = !DILocation(line: 433, column: 12, scope: !3035)
!3230 = !DILocation(line: 1016, column: 35, scope: !3171, inlinedAt: !3231)
!3231 = distinct !DILocation(line: 405, column: 23, scope: !3019)
!3232 = !DILocation(line: 777, column: 29, scope: !3184, inlinedAt: !3233)
!3233 = distinct !DILocation(line: 1017, column: 9, scope: !3171, inlinedAt: !3231)
!3234 = !DILocation(line: 405, column: 13, scope: !3019)
!3235 = !DILocation(line: 406, column: 21, scope: !3019)
!3236 = !DILocation(line: 406, column: 13, scope: !3019)
!3237 = !DILocation(line: 407, column: 28, scope: !3019)
!3238 = !DILocation(line: 409, column: 25, scope: !3029)
!3239 = !DILocation(line: 409, column: 22, scope: !3029)
!3240 = !DILocation(line: 409, column: 13, scope: !3031)
!3241 = !DILocation(line: 409, column: 17, scope: !3031)
!3242 = !DILocation(line: 409, column: 17, scope: !3033)
!3243 = !DILocation(line: 423, column: 28, scope: !3033)
!3244 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !3245)
!3245 = distinct !DILocation(line: 423, column: 28, scope: !3033)
!3246 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !3245)
!3247 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !3248)
!3248 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3245)
!3249 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !3248)
!3250 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !3248)
!3251 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3245)
!3252 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !3245)
!3253 = !DILocation(line: 423, column: 21, scope: !3033)
!3254 = !DILocation(line: 424, column: 21, scope: !3033)
!3255 = !DILocation(line: 425, column: 29, scope: !3033)
!3256 = !DILocation(line: 425, column: 47, scope: !3033)
!3257 = !DILocation(line: 425, column: 39, scope: !3033)
!3258 = !DILocation(line: 1039, column: 29, scope: !3205, inlinedAt: !3259)
!3259 = distinct !DILocation(line: 425, column: 29, scope: !3033)
!3260 = !DILocation(line: 1039, column: 35, scope: !3205, inlinedAt: !3259)
!3261 = !DILocation(line: 1044, column: 18, scope: !3205, inlinedAt: !3259)
!3262 = !DILocation(line: 425, column: 21, scope: !3033)
!3263 = !DILocation(line: 482, column: 12, scope: !3035)
!3264 = !DILocation(line: 482, column: 23, scope: !3035)
!3265 = !DILocation(line: 465, column: 37, scope: !3035)
!3266 = !DILocalVariable(name: "small", arg: 1, scope: !3267, file: !3268, line: 52, type: !72)
!3267 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h4c19d6bd38fcd6c3E", scope: !3269, file: !3268, line: 52, type: !3272, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !3274)
!3268 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "da56f58fdf1b2122778ef70b98afbc15")
!3269 = !DINamespace(name: "{impl#44}", scope: !3270)
!3270 = !DINamespace(name: "num", scope: !3271)
!3271 = !DINamespace(name: "convert", scope: !71)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!9, !72}
!3274 = !{!3266}
!3275 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3276)
!3276 = distinct !DILocation(line: 465, column: 37, scope: !3035)
!3277 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3276)
!3278 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !3279)
!3279 = distinct !DILocation(line: 465, column: 37, scope: !3035)
!3280 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !3279)
!3281 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !3279)
!3282 = !DILocation(line: 465, column: 27, scope: !3035)
!3283 = !DILocation(line: 466, column: 42, scope: !3037)
!3284 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3285)
!3285 = distinct !DILocation(line: 466, column: 42, scope: !3037)
!3286 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3285)
!3287 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !3288)
!3288 = distinct !DILocation(line: 466, column: 42, scope: !3037)
!3289 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !3288)
!3290 = !DILocation(line: 1136, column: 34, scope: !2323, inlinedAt: !3288)
!3291 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !3292)
!3292 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3288)
!3293 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !3292)
!3294 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !3292)
!3295 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3288)
!3296 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !3288)
!3297 = !DILocation(line: 466, column: 52, scope: !3037)
!3298 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3299)
!3299 = distinct !DILocation(line: 466, column: 52, scope: !3037)
!3300 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3299)
!3301 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !3302)
!3302 = distinct !DILocation(line: 466, column: 52, scope: !3037)
!3303 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !3302)
!3304 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !3302)
!3305 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !3306)
!3306 = distinct !DILocation(line: 466, column: 17, scope: !3037)
!3307 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !3306)
!3308 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !3306)
!3309 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !3306)
!3310 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !3311)
!3311 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !3306)
!3312 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !3311)
!3313 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !3311)
!3314 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !3311)
!3315 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !3311)
!3316 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !3306)
!3317 = !DILocation(line: 468, column: 26, scope: !3037)
!3318 = !DILocation(line: 468, column: 17, scope: !3039)
!3319 = !DILocation(line: 475, column: 48, scope: !3037)
!3320 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3321)
!3321 = distinct !DILocation(line: 475, column: 48, scope: !3037)
!3322 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3321)
!3323 = !DILocation(line: 469, column: 31, scope: !3039)
!3324 = !DILocation(line: 1039, column: 29, scope: !3205, inlinedAt: !3325)
!3325 = distinct !DILocation(line: 469, column: 31, scope: !3039)
!3326 = !DILocation(line: 1039, column: 35, scope: !3205, inlinedAt: !3325)
!3327 = !DILocation(line: 1044, column: 18, scope: !3205, inlinedAt: !3325)
!3328 = !DILocation(line: 469, column: 21, scope: !3039)
!3329 = !DILocation(line: 470, column: 46, scope: !3039)
!3330 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3331)
!3331 = distinct !DILocation(line: 470, column: 46, scope: !3039)
!3332 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3331)
!3333 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !3334)
!3334 = distinct !DILocation(line: 470, column: 46, scope: !3039)
!3335 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !3334)
!3336 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !3334)
!3337 = !DILocation(line: 470, column: 55, scope: !3039)
!3338 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3339)
!3339 = distinct !DILocation(line: 470, column: 55, scope: !3039)
!3340 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3339)
!3341 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !3342)
!3342 = distinct !DILocation(line: 475, column: 48, scope: !3037)
!3343 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !3342)
!3344 = !DILocation(line: 1136, column: 34, scope: !2323, inlinedAt: !3342)
!3345 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !3346)
!3346 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3342)
!3347 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !3346)
!3348 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !3346)
!3349 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3342)
!3350 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !3342)
!3351 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !3352)
!3352 = distinct !DILocation(line: 475, column: 17, scope: !3037)
!3353 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !3352)
!3354 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !3352)
!3355 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !3352)
!3356 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !3357)
!3357 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !3352)
!3358 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !3357)
!3359 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !3357)
!3360 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !3357)
!3361 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !3357)
!3362 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !3352)
!3363 = !DILocation(line: 476, column: 29, scope: !3037)
!3364 = !DILocation(line: 476, column: 17, scope: !3037)
!3365 = !DILocation(line: 477, column: 27, scope: !3037)
!3366 = !DILocation(line: 1039, column: 29, scope: !3205, inlinedAt: !3367)
!3367 = distinct !DILocation(line: 477, column: 27, scope: !3037)
!3368 = !DILocation(line: 1039, column: 35, scope: !3205, inlinedAt: !3367)
!3369 = !DILocation(line: 1044, column: 18, scope: !3205, inlinedAt: !3367)
!3370 = !DILocation(line: 477, column: 17, scope: !3037)
!3371 = !DILocation(line: 478, column: 27, scope: !3037)
!3372 = !DILocation(line: 1039, column: 29, scope: !3205, inlinedAt: !3373)
!3373 = distinct !DILocation(line: 478, column: 27, scope: !3037)
!3374 = !DILocation(line: 1039, column: 35, scope: !3205, inlinedAt: !3373)
!3375 = !DILocation(line: 1044, column: 18, scope: !3205, inlinedAt: !3373)
!3376 = !DILocation(line: 478, column: 17, scope: !3037)
!3377 = !DILocation(line: 433, column: 9, scope: !3035)
!3378 = !DILocation(line: 494, column: 12, scope: !3035)
!3379 = !DILocation(line: 494, column: 23, scope: !3035)
!3380 = !DILocation(line: 491, column: 26, scope: !3035)
!3381 = !DILocation(line: 491, column: 32, scope: !3035)
!3382 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !3383)
!3383 = distinct !DILocation(line: 491, column: 26, scope: !3035)
!3384 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !3383)
!3385 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !3383)
!3386 = !DILocation(line: 491, column: 13, scope: !3035)
!3387 = !DILocation(line: 482, column: 9, scope: !3035)
!3388 = !DILocation(line: 502, column: 12, scope: !3035)
!3389 = !DILocation(line: 499, column: 26, scope: !3035)
!3390 = !DILocation(line: 499, column: 32, scope: !3035)
!3391 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !3392)
!3392 = distinct !DILocation(line: 499, column: 26, scope: !3035)
!3393 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !3392)
!3394 = !DILocation(line: 1136, column: 34, scope: !2323, inlinedAt: !3392)
!3395 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !3396)
!3396 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3392)
!3397 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !3396)
!3398 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !3396)
!3399 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3392)
!3400 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !3392)
!3401 = !DILocation(line: 499, column: 13, scope: !3035)
!3402 = !DILocation(line: 494, column: 9, scope: !3035)
!3403 = !DILocation(line: 511, column: 8, scope: !3017)
!3404 = !DILocation(line: 511, column: 18, scope: !3017)
!3405 = !DILocation(line: 534, column: 15, scope: !3017)
!3406 = !DILocation(line: 534, column: 25, scope: !3017)
!3407 = !DILocation(line: 514, column: 9, scope: !3017)
!3408 = !DILocation(line: 777, column: 29, scope: !2188, inlinedAt: !3409)
!3409 = distinct !DILocation(line: 549, column: 15, scope: !3017)
!3410 = !DILocation(line: 549, column: 31, scope: !3017)
!3411 = !DILocation(line: 549, column: 9, scope: !3017)
!3412 = !DILocation(line: 537, column: 9, scope: !3017)
!3413 = !DILocation(line: 551, column: 2, scope: !2988)
!3414 = !DILocation(line: 538, column: 15, scope: !3017)
!3415 = !DILocation(line: 538, column: 25, scope: !3017)
!3416 = !DILocation(line: 537, column: 32, scope: !3017)
!3417 = !DILocation(line: 537, column: 35, scope: !3017)
!3418 = !DILocation(line: 537, column: 26, scope: !3017)
!3419 = !DILocation(line: 537, column: 9, scope: !3050)
!3420 = !{i8 0, i8 3}
!3421 = !DILocation(line: 777, column: 29, scope: !2188, inlinedAt: !3422)
!3422 = distinct !DILocation(line: 546, column: 15, scope: !3017)
!3423 = !DILocation(line: 546, column: 31, scope: !3017)
!3424 = !DILocation(line: 546, column: 9, scope: !3017)
!3425 = !DILocation(line: 541, column: 25, scope: !3017)
!3426 = !DILocalVariable(name: "self", arg: 1, scope: !3427, file: !184, line: 1125, type: !1111)
!3427 = distinct !DISubprogram(name: "sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17hbf7a3f0e6ce909a8E", scope: !195, file: !184, line: 1125, type: !3206, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, retainedNodes: !3428)
!3428 = !{!3426, !3429}
!3429 = !DILocalVariable(name: "count", arg: 2, scope: !3427, file: !184, line: 1125, type: !9)
!3430 = !DILocation(line: 1125, column: 29, scope: !3427, inlinedAt: !3431)
!3431 = distinct !DILocation(line: 541, column: 25, scope: !3017)
!3432 = !DILocation(line: 1125, column: 35, scope: !3427, inlinedAt: !3431)
!3433 = !DILocalVariable(name: "self", arg: 1, scope: !3434, file: !184, line: 476, type: !1111)
!3434 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hff4d7779c69a8451E", scope: !195, file: !184, line: 476, type: !3435, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, retainedNodes: !3437)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!1111, !1111, !2334}
!3437 = !{!3433, !3438}
!3438 = !DILocalVariable(name: "count", arg: 2, scope: !3434, file: !184, line: 476, type: !2334)
!3439 = !DILocation(line: 476, column: 32, scope: !3434, inlinedAt: !3440)
!3440 = distinct !DILocation(line: 1136, column: 22, scope: !3427, inlinedAt: !3431)
!3441 = !DILocation(line: 476, column: 38, scope: !3434, inlinedAt: !3440)
!3442 = !DILocation(line: 483, column: 18, scope: !3434, inlinedAt: !3440)
!3443 = !DILocation(line: 1136, column: 22, scope: !3427, inlinedAt: !3431)
!3444 = !DILocation(line: 1138, column: 6, scope: !3427, inlinedAt: !3431)
!3445 = !DILocation(line: 541, column: 17, scope: !3017)
!3446 = !DILocation(line: 542, column: 27, scope: !3017)
!3447 = !DILocation(line: 542, column: 30, scope: !3017)
!3448 = !DILocation(line: 542, column: 48, scope: !3017)
!3449 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3450)
!3450 = distinct !DILocation(line: 542, column: 36, scope: !3017)
!3451 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3450)
!3452 = !DILocation(line: 542, column: 36, scope: !3017)
!3453 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !3454)
!3454 = distinct !DILocation(line: 542, column: 30, scope: !3017)
!3455 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !3454)
!3456 = !DILocation(line: 1136, column: 34, scope: !2323, inlinedAt: !3454)
!3457 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !3458)
!3458 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3454)
!3459 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !3458)
!3460 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !3458)
!3461 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3454)
!3462 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !3454)
!3463 = !DILocation(line: 542, column: 17, scope: !3017)
!3464 = !DILocation(line: 543, column: 21, scope: !3017)
!3465 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !3466)
!3466 = distinct !DILocation(line: 543, column: 21, scope: !3017)
!3467 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !3466)
!3468 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !3466)
!3469 = !DILocation(line: 543, column: 17, scope: !3017)
!3470 = !DILocation(line: 538, column: 9, scope: !3017)
!3471 = !DILocation(line: 515, column: 15, scope: !3017)
!3472 = !DILocation(line: 515, column: 25, scope: !3017)
!3473 = !DILocation(line: 514, column: 32, scope: !3017)
!3474 = !DILocation(line: 514, column: 35, scope: !3017)
!3475 = !DILocation(line: 514, column: 26, scope: !3017)
!3476 = !DILocation(line: 514, column: 9, scope: !3041)
!3477 = !DILocation(line: 777, column: 29, scope: !2188, inlinedAt: !3478)
!3478 = distinct !DILocation(line: 533, column: 15, scope: !3017)
!3479 = !DILocation(line: 533, column: 31, scope: !3017)
!3480 = !DILocation(line: 533, column: 9, scope: !3017)
!3481 = !DILocation(line: 528, column: 25, scope: !3017)
!3482 = !DILocation(line: 1125, column: 29, scope: !3427, inlinedAt: !3483)
!3483 = distinct !DILocation(line: 528, column: 25, scope: !3017)
!3484 = !DILocation(line: 1125, column: 35, scope: !3427, inlinedAt: !3483)
!3485 = !DILocation(line: 476, column: 32, scope: !3434, inlinedAt: !3486)
!3486 = distinct !DILocation(line: 1136, column: 22, scope: !3427, inlinedAt: !3483)
!3487 = !DILocation(line: 476, column: 38, scope: !3434, inlinedAt: !3486)
!3488 = !DILocation(line: 483, column: 18, scope: !3434, inlinedAt: !3486)
!3489 = !DILocation(line: 1136, column: 22, scope: !3427, inlinedAt: !3483)
!3490 = !DILocation(line: 1138, column: 6, scope: !3427, inlinedAt: !3483)
!3491 = !DILocation(line: 528, column: 17, scope: !3017)
!3492 = !DILocation(line: 529, column: 27, scope: !3017)
!3493 = !DILocation(line: 529, column: 45, scope: !3017)
!3494 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3495)
!3495 = distinct !DILocation(line: 529, column: 33, scope: !3017)
!3496 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3495)
!3497 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !3498)
!3498 = distinct !DILocation(line: 529, column: 27, scope: !3017)
!3499 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !3498)
!3500 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !3498)
!3501 = !DILocation(line: 529, column: 55, scope: !3017)
!3502 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !3503)
!3503 = distinct !DILocation(line: 529, column: 55, scope: !3017)
!3504 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !3503)
!3505 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !3506)
!3506 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3503)
!3507 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !3506)
!3508 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !3506)
!3509 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3503)
!3510 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !3503)
!3511 = !DILocation(line: 529, column: 17, scope: !3017)
!3512 = !DILocation(line: 530, column: 21, scope: !3017)
!3513 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !3514)
!3514 = distinct !DILocation(line: 530, column: 21, scope: !3017)
!3515 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !3514)
!3516 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !3517)
!3517 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3514)
!3518 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !3517)
!3519 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !3517)
!3520 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3514)
!3521 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !3514)
!3522 = !DILocation(line: 530, column: 17, scope: !3017)
!3523 = !DILocation(line: 515, column: 9, scope: !3017)
!3524 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !3525)
!3525 = distinct !DILocation(line: 470, column: 55, scope: !3039)
!3526 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !3525)
!3527 = !DILocation(line: 1136, column: 34, scope: !2323, inlinedAt: !3525)
!3528 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !3529)
!3529 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3525)
!3530 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !3529)
!3531 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !3529)
!3532 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3525)
!3533 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !3525)
!3534 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !3535)
!3535 = distinct !DILocation(line: 470, column: 21, scope: !3039)
!3536 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !3535)
!3537 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !3535)
!3538 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !3535)
!3539 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !3540)
!3540 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !3535)
!3541 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !3540)
!3542 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !3540)
!3543 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !3540)
!3544 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !3540)
!3545 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !3535)
!3546 = !DILocation(line: 471, column: 31, scope: !3039)
!3547 = !DILocation(line: 1039, column: 29, scope: !3205, inlinedAt: !3548)
!3548 = distinct !DILocation(line: 471, column: 31, scope: !3039)
!3549 = !DILocation(line: 1039, column: 35, scope: !3205, inlinedAt: !3548)
!3550 = !DILocation(line: 1044, column: 18, scope: !3205, inlinedAt: !3548)
!3551 = !DILocation(line: 471, column: 21, scope: !3039)
!3552 = !DILocation(line: 472, column: 46, scope: !3039)
!3553 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3554)
!3554 = distinct !DILocation(line: 472, column: 46, scope: !3039)
!3555 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3554)
!3556 = !DILocation(line: 1125, column: 29, scope: !2323, inlinedAt: !3557)
!3557 = distinct !DILocation(line: 472, column: 46, scope: !3039)
!3558 = !DILocation(line: 1125, column: 35, scope: !2323, inlinedAt: !3557)
!3559 = !DILocation(line: 1136, column: 34, scope: !2323, inlinedAt: !3557)
!3560 = !DILocation(line: 476, column: 32, scope: !2331, inlinedAt: !3561)
!3561 = distinct !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3557)
!3562 = !DILocation(line: 476, column: 38, scope: !2331, inlinedAt: !3561)
!3563 = !DILocation(line: 483, column: 18, scope: !2331, inlinedAt: !3561)
!3564 = !DILocation(line: 1136, column: 22, scope: !2323, inlinedAt: !3557)
!3565 = !DILocation(line: 1138, column: 6, scope: !2323, inlinedAt: !3557)
!3566 = !DILocation(line: 472, column: 56, scope: !3039)
!3567 = !DILocation(line: 52, column: 21, scope: !3267, inlinedAt: !3568)
!3568 = distinct !DILocation(line: 472, column: 56, scope: !3039)
!3569 = !DILocation(line: 53, column: 17, scope: !3267, inlinedAt: !3568)
!3570 = !DILocation(line: 1039, column: 29, scope: !194, inlinedAt: !3571)
!3571 = distinct !DILocation(line: 472, column: 56, scope: !3039)
!3572 = !DILocation(line: 1039, column: 35, scope: !194, inlinedAt: !3571)
!3573 = !DILocation(line: 1044, column: 18, scope: !194, inlinedAt: !3571)
!3574 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !3575)
!3575 = distinct !DILocation(line: 472, column: 21, scope: !3039)
!3576 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !3575)
!3577 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !3575)
!3578 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !3575)
!3579 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !3580)
!3580 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !3575)
!3581 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !3580)
!3582 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !3580)
!3583 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !3580)
!3584 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !3580)
!3585 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !3575)
!3586 = !DILocation(line: 472, column: 21, scope: !3039)
!3587 = distinct !DISubprogram(name: "width<u8>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h2489786a8313f546E", scope: !3588, file: !2460, line: 341, type: !3589, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !839, retainedNodes: !3591)
!3588 = !DINamespace(name: "partition_in_blocks", scope: !1086)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{!9, !1111, !1111}
!3591 = !{!3592, !3593}
!3592 = !DILocalVariable(name: "l", arg: 1, scope: !3587, file: !2460, line: 341, type: !1111)
!3593 = !DILocalVariable(name: "r", arg: 2, scope: !3587, file: !2460, line: 341, type: !1111)
!3594 = !DILocation(line: 341, column: 17, scope: !3587)
!3595 = !DILocation(line: 341, column: 28, scope: !3587)
!3596 = !DILocation(line: 342, column: 17, scope: !3587)
!3597 = !DILocation(line: 342, column: 9, scope: !3587)
!3598 = !DILocation(line: 213, column: 17, scope: !1780, inlinedAt: !3599)
!3599 = distinct !DILocation(line: 345, column: 10, scope: !3587)
!3600 = !DILocation(line: 60, column: 26, scope: !1787, inlinedAt: !3601)
!3601 = distinct !DILocation(line: 217, column: 33, scope: !1780, inlinedAt: !3599)
!3602 = !DILocation(line: 217, column: 18, scope: !1780, inlinedAt: !3599)
!3603 = !DILocation(line: 213, column: 17, scope: !1780, inlinedAt: !3604)
!3604 = distinct !DILocation(line: 345, column: 21, scope: !3587)
!3605 = !DILocation(line: 60, column: 26, scope: !1787, inlinedAt: !3606)
!3606 = distinct !DILocation(line: 217, column: 33, scope: !1780, inlinedAt: !3604)
!3607 = !DILocation(line: 217, column: 18, scope: !1780, inlinedAt: !3604)
!3608 = !DILocation(line: 345, column: 9, scope: !3587)
!3609 = !DILocation(line: 346, column: 6, scope: !3587)
!3610 = distinct !DISubprogram(name: "width<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17hb8d50cdc262a3cc3E", scope: !3588, file: !2460, line: 341, type: !3611, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !3613)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!9, !189, !189}
!3613 = !{!3614, !3615}
!3614 = !DILocalVariable(name: "l", arg: 1, scope: !3610, file: !2460, line: 341, type: !189)
!3615 = !DILocalVariable(name: "r", arg: 2, scope: !3610, file: !2460, line: 341, type: !189)
!3616 = !DILocation(line: 341, column: 17, scope: !3610)
!3617 = !DILocation(line: 341, column: 28, scope: !3610)
!3618 = !DILocation(line: 342, column: 17, scope: !3610)
!3619 = !DILocation(line: 342, column: 9, scope: !3610)
!3620 = !DILocalVariable(name: "self", arg: 1, scope: !3621, file: !184, line: 213, type: !189)
!3621 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hea605d7d0ca9a174E", scope: !195, file: !184, line: 213, type: !3622, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !3624)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!9, !189}
!3624 = !{!3620}
!3625 = !DILocation(line: 213, column: 17, scope: !3621, inlinedAt: !3626)
!3626 = distinct !DILocation(line: 345, column: 10, scope: !3610)
!3627 = !DILocation(line: 60, column: 26, scope: !1204, inlinedAt: !3628)
!3628 = distinct !DILocation(line: 217, column: 33, scope: !3621, inlinedAt: !3626)
!3629 = !DILocation(line: 217, column: 18, scope: !3621, inlinedAt: !3626)
!3630 = !DILocation(line: 213, column: 17, scope: !3621, inlinedAt: !3631)
!3631 = distinct !DILocation(line: 345, column: 21, scope: !3610)
!3632 = !DILocation(line: 60, column: 26, scope: !1204, inlinedAt: !3633)
!3633 = distinct !DILocation(line: 217, column: 33, scope: !3621, inlinedAt: !3631)
!3634 = !DILocation(line: 217, column: 18, scope: !3621, inlinedAt: !3631)
!3635 = !DILocation(line: 345, column: 9, scope: !3610)
!3636 = !DILocation(line: 346, column: 6, scope: !3610)
!3637 = distinct !DISubprogram(name: "partial_insertion_sort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort22partial_insertion_sort17h123b4d3bb587d2bdE", scope: !1086, file: !2460, line: 198, type: !3638, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !3640)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!328, !261, !1056}
!3640 = !{!3641, !3642, !3643, !3645, !3647}
!3641 = !DILocalVariable(name: "v", arg: 1, scope: !3637, file: !2460, line: 198, type: !261)
!3642 = !DILocalVariable(name: "is_less", arg: 2, scope: !3637, file: !2460, line: 198, type: !1056)
!3643 = !DILocalVariable(name: "len", scope: !3644, file: !2460, line: 207, type: !9, align: 8)
!3644 = distinct !DILexicalBlock(scope: !3637, file: !2460, line: 207, column: 5)
!3645 = !DILocalVariable(name: "i", scope: !3646, file: !2460, line: 208, type: !9, align: 8)
!3646 = distinct !DILexicalBlock(scope: !3644, file: !2460, line: 208, column: 5)
!3647 = !DILocalVariable(name: "iter", scope: !3648, file: !2460, line: 210, type: !104, align: 8)
!3648 = distinct !DILexicalBlock(scope: !3646, file: !2460, line: 210, column: 5)
!3649 = !DILocation(line: 198, column: 33, scope: !3637)
!3650 = !DILocation(line: 198, column: 46, scope: !3637)
!3651 = !DILocation(line: 208, column: 9, scope: !3646)
!3652 = !DILocation(line: 210, column: 14, scope: !3648)
!3653 = !DILocation(line: 207, column: 15, scope: !3637)
!3654 = !DILocation(line: 207, column: 9, scope: !3644)
!3655 = !DILocation(line: 208, column: 17, scope: !3644)
!3656 = !DILocation(line: 210, column: 14, scope: !3646)
!3657 = !DILocation(line: 210, column: 5, scope: !3648)
!3658 = !DILocation(line: 243, column: 5, scope: !3646)
!3659 = !DILocation(line: 244, column: 2, scope: !3637)
!3660 = !DILocation(line: 215, column: 19, scope: !3648)
!3661 = !DILocation(line: 221, column: 12, scope: !3648)
!3662 = !DILocation(line: 215, column: 55, scope: !3648)
!3663 = !DILocation(line: 215, column: 39, scope: !3648)
!3664 = !DILocation(line: 215, column: 75, scope: !3648)
!3665 = !DILocation(line: 215, column: 59, scope: !3648)
!3666 = !DILocation(line: 215, column: 31, scope: !3648)
!3667 = !DILocation(line: 216, column: 17, scope: !3648)
!3668 = !DILocation(line: 215, column: 13, scope: !3648)
!3669 = !DILocation(line: 226, column: 12, scope: !3648)
!3670 = !DILocation(line: 222, column: 20, scope: !3648)
!3671 = !DILocation(line: 1, column: 1, scope: !3672)
!3672 = !DILexicalBlockFile(scope: !3648, file: !3673, discriminator: 0)
!3673 = !DIFile(filename: "src/lib.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "ef3e180ca1e13bae3e0904cdd600c8e7")
!3674 = !DILocation(line: 231, column: 16, scope: !3648)
!3675 = !DILocation(line: 227, column: 20, scope: !3648)
!3676 = !DILocation(line: 231, column: 23, scope: !3648)
!3677 = !DILocation(line: 231, column: 9, scope: !3648)
!3678 = !DILocation(line: 233, column: 12, scope: !3648)
!3679 = !DILocation(line: 235, column: 48, scope: !3648)
!3680 = !DILocation(line: 235, column: 46, scope: !3648)
!3681 = !DILocation(line: 235, column: 45, scope: !3648)
!3682 = !DILocation(line: 235, column: 52, scope: !3648)
!3683 = !DILocation(line: 235, column: 13, scope: !3648)
!3684 = !DILocation(line: 238, column: 49, scope: !3648)
!3685 = !DILocation(line: 238, column: 47, scope: !3648)
!3686 = !DILocation(line: 238, column: 46, scope: !3648)
!3687 = !DILocation(line: 238, column: 13, scope: !3648)
!3688 = distinct !DISubprogram(name: "insertion_sort_shift_left<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort25insertion_sort_shift_left17ha93585d6555467a2E", scope: !1086, file: !2460, line: 148, type: !3689, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !3691)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{null, !261, !9, !1056}
!3691 = !{!3692, !3693, !3694, !3695, !3697, !3699}
!3692 = !DILocalVariable(name: "v", arg: 1, scope: !3688, file: !2460, line: 148, type: !261)
!3693 = !DILocalVariable(name: "offset", arg: 2, scope: !3688, file: !2460, line: 148, type: !9)
!3694 = !DILocalVariable(name: "is_less", arg: 3, scope: !3688, file: !2460, line: 148, type: !1056)
!3695 = !DILocalVariable(name: "len", scope: !3696, file: !2460, line: 152, type: !9, align: 8)
!3696 = distinct !DILexicalBlock(scope: !3688, file: !2460, line: 152, column: 5)
!3697 = !DILocalVariable(name: "iter", scope: !3698, file: !2460, line: 158, type: !104, align: 8)
!3698 = distinct !DILexicalBlock(scope: !3696, file: !2460, line: 158, column: 5)
!3699 = !DILocalVariable(name: "i", scope: !3700, file: !2460, line: 158, type: !9, align: 8)
!3700 = distinct !DILexicalBlock(scope: !3698, file: !2460, line: 158, column: 26)
!3701 = !DILocation(line: 148, column: 47, scope: !3688)
!3702 = !DILocation(line: 148, column: 60, scope: !3688)
!3703 = !DILocation(line: 148, column: 75, scope: !3688)
!3704 = !DILocation(line: 158, column: 14, scope: !3698)
!3705 = !DILocation(line: 152, column: 15, scope: !3688)
!3706 = !DILocation(line: 152, column: 9, scope: !3696)
!3707 = !DILocation(line: 155, column: 13, scope: !3696)
!3708 = !DILocation(line: 155, column: 5, scope: !3696)
!3709 = !DILocation(line: 155, column: 28, scope: !3696)
!3710 = !DILocation(line: 158, column: 14, scope: !3696)
!3711 = !DILocation(line: 158, column: 5, scope: !3698)
!3712 = !DILocation(line: 166, column: 2, scope: !3688)
!3713 = !DILocation(line: 158, column: 9, scope: !3698)
!3714 = !DILocation(line: 158, column: 9, scope: !3700)
!3715 = !DILocation(line: 163, column: 32, scope: !3700)
!3716 = !DILocation(line: 163, column: 31, scope: !3700)
!3717 = !DILocation(line: 163, column: 13, scope: !3700)
!3718 = distinct !DISubprogram(name: "insertion_sort_shift_right<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort26insertion_sort_shift_right17hdc7f2629abfa3366E", scope: !1086, file: !2460, line: 173, type: !3689, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !3719)
!3719 = !{!3720, !3721, !3722, !3723, !3725, !3727}
!3720 = !DILocalVariable(name: "v", arg: 1, scope: !3718, file: !2460, line: 173, type: !261)
!3721 = !DILocalVariable(name: "offset", arg: 2, scope: !3718, file: !2460, line: 173, type: !9)
!3722 = !DILocalVariable(name: "is_less", arg: 3, scope: !3718, file: !2460, line: 173, type: !1056)
!3723 = !DILocalVariable(name: "len", scope: !3724, file: !2460, line: 177, type: !9, align: 8)
!3724 = distinct !DILexicalBlock(scope: !3718, file: !2460, line: 177, column: 5)
!3725 = !DILocalVariable(name: "iter", scope: !3726, file: !2460, line: 183, type: !2581, align: 8)
!3726 = distinct !DILexicalBlock(scope: !3724, file: !2460, line: 183, column: 5)
!3727 = !DILocalVariable(name: "i", scope: !3728, file: !2460, line: 183, type: !9, align: 8)
!3728 = distinct !DILexicalBlock(scope: !3726, file: !2460, line: 183, column: 32)
!3729 = !DILocation(line: 173, column: 37, scope: !3718)
!3730 = !DILocation(line: 173, column: 50, scope: !3718)
!3731 = !DILocation(line: 173, column: 65, scope: !3718)
!3732 = !DILocation(line: 183, column: 14, scope: !3726)
!3733 = !DILocation(line: 177, column: 15, scope: !3718)
!3734 = !DILocation(line: 177, column: 9, scope: !3724)
!3735 = !DILocation(line: 180, column: 13, scope: !3724)
!3736 = !DILocation(line: 180, column: 5, scope: !3724)
!3737 = !DILocation(line: 180, column: 28, scope: !3724)
!3738 = !DILocation(line: 180, column: 45, scope: !3724)
!3739 = !DILocation(line: 183, column: 14, scope: !3724)
!3740 = !DILocation(line: 183, column: 5, scope: !3726)
!3741 = !DILocation(line: 192, column: 2, scope: !3718)
!3742 = !DILocation(line: 183, column: 9, scope: !3726)
!3743 = !DILocation(line: 183, column: 9, scope: !3728)
!3744 = !DILocation(line: 189, column: 32, scope: !3728)
!3745 = !DILocation(line: 189, column: 31, scope: !3728)
!3746 = !DILocation(line: 189, column: 13, scope: !3728)
!3747 = distinct !DISubprogram(name: "recurse<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort7recurse17h03a05f5c5f118806E", scope: !1086, file: !2460, line: 804, type: !3748, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !3761)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{null, !261, !1056, !3750, !27}
!3750 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !386, file: !2, size: 64, align: 64, elements: !3751, templateParams: !24, identifier: "6c5c6b108dcabe5a22510cffd500f8e")
!3751 = !{!3752}
!3752 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3750, file: !2, size: 64, align: 64, elements: !3753, templateParams: !24, identifier: "9c35b9faf0eda314343249e75b409f34", discriminator: !3760)
!3753 = !{!3754, !3756}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3752, file: !2, baseType: !3755, size: 64, align: 64, extraData: i128 0)
!3755 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3750, file: !2, size: 64, align: 64, elements: !24, templateParams: !650, identifier: "7919be81d56e17764d2138afa675f7f7")
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3752, file: !2, baseType: !3757, size: 64, align: 64)
!3757 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3750, file: !2, size: 64, align: 64, elements: !3758, templateParams: !650, identifier: "e4dd8f6afce4be5dda287519d9a1be0d")
!3758 = !{!3759}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3757, file: !2, baseType: !12, size: 64, align: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, scope: !3750, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!3761 = !{!3762, !3763, !3764, !3765, !3766, !3768, !3770, !3772, !3774, !3775, !3777, !3779, !3781, !3782, !3784, !3785, !3787, !3788}
!3762 = !DILocalVariable(name: "v", arg: 1, scope: !3747, file: !2460, line: 804, type: !261)
!3763 = !DILocalVariable(name: "is_less", arg: 2, scope: !3747, file: !2460, line: 804, type: !1056)
!3764 = !DILocalVariable(name: "pred", arg: 3, scope: !3747, file: !2460, line: 804, type: !3750)
!3765 = !DILocalVariable(name: "limit", arg: 4, scope: !3747, file: !2460, line: 804, type: !27)
!3766 = !DILocalVariable(name: "was_balanced", scope: !3767, file: !2460, line: 812, type: !328, align: 1)
!3767 = distinct !DILexicalBlock(scope: !3747, file: !2460, line: 812, column: 5)
!3768 = !DILocalVariable(name: "was_partitioned", scope: !3769, file: !2460, line: 814, type: !328, align: 1)
!3769 = distinct !DILexicalBlock(scope: !3767, file: !2460, line: 814, column: 5)
!3770 = !DILocalVariable(name: "len", scope: !3771, file: !2460, line: 817, type: !9, align: 8)
!3771 = distinct !DILexicalBlock(scope: !3769, file: !2460, line: 817, column: 9)
!3772 = !DILocalVariable(name: "pivot", scope: !3773, file: !2460, line: 842, type: !9, align: 8)
!3773 = distinct !DILexicalBlock(scope: !3771, file: !2460, line: 842, column: 9)
!3774 = !DILocalVariable(name: "likely_sorted", scope: !3773, file: !2460, line: 842, type: !328, align: 1)
!3775 = !DILocalVariable(name: "p", scope: !3776, file: !2460, line: 857, type: !12, align: 8)
!3776 = distinct !DILexicalBlock(scope: !3773, file: !2460, line: 857, column: 31)
!3777 = !DILocalVariable(name: "mid", scope: !3778, file: !2460, line: 859, type: !9, align: 8)
!3778 = distinct !DILexicalBlock(scope: !3776, file: !2460, line: 859, column: 17)
!3779 = !DILocalVariable(name: "mid", scope: !3780, file: !2460, line: 868, type: !9, align: 8)
!3780 = distinct !DILexicalBlock(scope: !3773, file: !2460, line: 868, column: 9)
!3781 = !DILocalVariable(name: "was_p", scope: !3780, file: !2460, line: 868, type: !328, align: 1)
!3782 = !DILocalVariable(name: "left", scope: !3783, file: !2460, line: 873, type: !261, align: 8)
!3783 = distinct !DILexicalBlock(scope: !3780, file: !2460, line: 873, column: 9)
!3784 = !DILocalVariable(name: "right", scope: !3783, file: !2460, line: 873, type: !261, align: 8)
!3785 = !DILocalVariable(name: "pivot", scope: !3786, file: !2460, line: 874, type: !261, align: 8)
!3786 = distinct !DILexicalBlock(scope: !3783, file: !2460, line: 874, column: 9)
!3787 = !DILocalVariable(name: "right", scope: !3786, file: !2460, line: 874, type: !261, align: 8)
!3788 = !DILocalVariable(name: "pivot", scope: !3789, file: !2460, line: 875, type: !12, align: 8)
!3789 = distinct !DILexicalBlock(scope: !3786, file: !2460, line: 875, column: 9)
!3790 = !DILocation(line: 804, column: 22, scope: !3747)
!3791 = !DILocation(line: 804, column: 42, scope: !3747)
!3792 = !DILocation(line: 804, column: 59, scope: !3747)
!3793 = !DILocation(line: 804, column: 84, scope: !3747)
!3794 = !DILocation(line: 812, column: 9, scope: !3767)
!3795 = !DILocation(line: 814, column: 9, scope: !3769)
!3796 = !DILocation(line: 812, column: 28, scope: !3747)
!3797 = !DILocation(line: 814, column: 31, scope: !3767)
!3798 = !DILocation(line: 816, column: 5, scope: !3769)
!3799 = !DILocation(line: 817, column: 19, scope: !3769)
!3800 = !DILocation(line: 817, column: 13, scope: !3771)
!3801 = !DILocation(line: 820, column: 12, scope: !3771)
!3802 = !DILocation(line: 829, column: 12, scope: !3771)
!3803 = !DILocation(line: 821, column: 16, scope: !3771)
!3804 = !DILocation(line: 830, column: 22, scope: !3771)
!3805 = !DILocation(line: 830, column: 13, scope: !3771)
!3806 = !DILocation(line: 836, column: 13, scope: !3771)
!3807 = !DILocation(line: 889, column: 2, scope: !3747)
!3808 = !DILocation(line: 837, column: 28, scope: !3771)
!3809 = !DILocation(line: 837, column: 13, scope: !3771)
!3810 = !DILocation(line: 838, column: 13, scope: !3771)
!3811 = !DILocation(line: 842, column: 51, scope: !3771)
!3812 = !DILocation(line: 842, column: 38, scope: !3771)
!3813 = !DILocation(line: 842, column: 14, scope: !3771)
!3814 = !DILocation(line: 842, column: 14, scope: !3773)
!3815 = !DILocation(line: 842, column: 21, scope: !3771)
!3816 = !DILocation(line: 842, column: 21, scope: !3773)
!3817 = !DILocation(line: 846, column: 12, scope: !3773)
!3818 = !DILocation(line: 836, column: 9, scope: !3771)
!3819 = !DILocation(line: 857, column: 16, scope: !3776)
!3820 = !DILocation(line: 846, column: 28, scope: !3773)
!3821 = !DILocation(line: 846, column: 47, scope: !3773)
!3822 = !DILocation(line: 849, column: 39, scope: !3773)
!3823 = !DILocation(line: 849, column: 16, scope: !3773)
!3824 = !DILocation(line: 857, column: 21, scope: !3776)
!3825 = !DILocation(line: 858, column: 29, scope: !3776)
!3826 = !DILocation(line: 868, column: 38, scope: !3773)
!3827 = !DILocation(line: 868, column: 28, scope: !3773)
!3828 = !DILocation(line: 868, column: 14, scope: !3773)
!3829 = !DILocation(line: 868, column: 14, scope: !3780)
!3830 = !DILocation(line: 868, column: 19, scope: !3773)
!3831 = !DILocation(line: 868, column: 19, scope: !3780)
!3832 = !DILocation(line: 869, column: 38, scope: !3780)
!3833 = !DILocation(line: 858, column: 28, scope: !3776)
!3834 = !DILocation(line: 858, column: 17, scope: !3776)
!3835 = !DILocation(line: 859, column: 43, scope: !3776)
!3836 = !DILocation(line: 859, column: 27, scope: !3776)
!3837 = !DILocation(line: 859, column: 21, scope: !3778)
!3838 = !DILocation(line: 862, column: 26, scope: !3778)
!3839 = !DILocation(line: 862, column: 28, scope: !3778)
!3840 = !DILocation(line: 862, column: 27, scope: !3778)
!3841 = !DILocation(line: 862, column: 17, scope: !3778)
!3842 = !DILocation(line: 1, column: 1, scope: !3843)
!3843 = !DILexicalBlockFile(scope: !3769, file: !3673, discriminator: 0)
!3844 = !DILocation(line: 869, column: 24, scope: !3780)
!3845 = !DILocation(line: 869, column: 52, scope: !3780)
!3846 = !DILocation(line: 869, column: 9, scope: !3780)
!3847 = !DILocation(line: 870, column: 9, scope: !3780)
!3848 = !DILocation(line: 873, column: 29, scope: !3780)
!3849 = !DILocation(line: 873, column: 14, scope: !3780)
!3850 = !DILocation(line: 873, column: 14, scope: !3783)
!3851 = !DILocation(line: 873, column: 20, scope: !3780)
!3852 = !DILocation(line: 873, column: 20, scope: !3783)
!3853 = !DILocation(line: 874, column: 30, scope: !3783)
!3854 = !DILocation(line: 874, column: 14, scope: !3783)
!3855 = !DILocation(line: 874, column: 14, scope: !3786)
!3856 = !DILocation(line: 874, column: 21, scope: !3783)
!3857 = !DILocation(line: 874, column: 21, scope: !3786)
!3858 = !DILocation(line: 875, column: 22, scope: !3786)
!3859 = !DILocation(line: 875, column: 21, scope: !3786)
!3860 = !DILocation(line: 875, column: 13, scope: !3789)
!3861 = !DILocation(line: 880, column: 12, scope: !3789)
!3862 = !DILocation(line: 885, column: 37, scope: !3789)
!3863 = !DILocation(line: 885, column: 50, scope: !3789)
!3864 = !DILocation(line: 885, column: 13, scope: !3789)
!3865 = !DILocation(line: 886, column: 13, scope: !3789)
!3866 = !DILocation(line: 880, column: 9, scope: !3789)
!3867 = !DILocation(line: 881, column: 36, scope: !3789)
!3868 = !DILocation(line: 881, column: 42, scope: !3789)
!3869 = !DILocation(line: 881, column: 13, scope: !3789)
!3870 = !DILocation(line: 882, column: 13, scope: !3789)
!3871 = !DILocation(line: 883, column: 20, scope: !3789)
!3872 = !DILocation(line: 883, column: 13, scope: !3789)
!3873 = !DILocation(line: 822, column: 43, scope: !3771)
!3874 = !DILocation(line: 822, column: 17, scope: !3771)
!3875 = distinct !DISubprogram(name: "heapsort<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort17h6f120594df3add9aE", scope: !1086, file: !2460, line: 249, type: !2461, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !3893, retainedNodes: !3876)
!3876 = !{!3877, !3878, !3879, !3885, !3887, !3889, !3891}
!3877 = !DILocalVariable(name: "v", arg: 1, scope: !3875, file: !2460, line: 249, type: !261)
!3878 = !DILocalVariable(name: "is_less", arg: 2, scope: !3875, file: !2460, line: 249, type: !1056)
!3879 = !DILocalVariable(name: "sift_down", scope: !3880, file: !2460, line: 254, type: !3881, align: 8)
!3880 = distinct !DILexicalBlock(scope: !3875, file: !2460, line: 254, column: 5)
!3881 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !3882, file: !2, size: 64, align: 64, elements: !3883, templateParams: !24, identifier: "35e970f9d1463b65101bdc86679feccb")
!3882 = !DINamespace(name: "heapsort", scope: !1086)
!3883 = !{!3884}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !3881, file: !2, baseType: !1055, size: 64, align: 64)
!3885 = !DILocalVariable(name: "iter", scope: !3886, file: !2460, line: 282, type: !2581, align: 8)
!3886 = distinct !DILexicalBlock(scope: !3880, file: !2460, line: 282, column: 5)
!3887 = !DILocalVariable(name: "i", scope: !3888, file: !2460, line: 282, type: !9, align: 8)
!3888 = distinct !DILexicalBlock(scope: !3886, file: !2460, line: 282, column: 37)
!3889 = !DILocalVariable(name: "iter", scope: !3890, file: !2460, line: 287, type: !2581, align: 8)
!3890 = distinct !DILexicalBlock(scope: !3880, file: !2460, line: 287, column: 5)
!3891 = !DILocalVariable(name: "i", scope: !3892, file: !2460, line: 287, type: !9, align: 8)
!3892 = distinct !DILexicalBlock(scope: !3890, file: !2460, line: 287, column: 33)
!3893 = !{!120, !3894}
!3894 = !DITemplateTypeParameter(name: "F", type: !1056)
!3895 = !DILocation(line: 249, column: 23, scope: !3875)
!3896 = !DILocation(line: 249, column: 36, scope: !3875)
!3897 = !DILocation(line: 254, column: 9, scope: !3880)
!3898 = !DILocation(line: 282, column: 14, scope: !3886)
!3899 = !DILocation(line: 287, column: 14, scope: !3890)
!3900 = !DILocation(line: 254, column: 25, scope: !3875)
!3901 = !DILocation(line: 282, column: 18, scope: !3880)
!3902 = !DILocation(line: 282, column: 14, scope: !3880)
!3903 = !DILocation(line: 282, column: 5, scope: !3886)
!3904 = !DILocation(line: 287, column: 14, scope: !3880)
!3905 = !DILocation(line: 287, column: 5, scope: !3890)
!3906 = !DILocation(line: 282, column: 9, scope: !3886)
!3907 = !DILocation(line: 282, column: 9, scope: !3888)
!3908 = !DILocation(line: 283, column: 9, scope: !3888)
!3909 = !DILocation(line: 291, column: 2, scope: !3875)
!3910 = !DILocation(line: 287, column: 9, scope: !3890)
!3911 = !DILocation(line: 287, column: 9, scope: !3892)
!3912 = !DILocation(line: 288, column: 9, scope: !3892)
!3913 = !DILocation(line: 289, column: 26, scope: !3892)
!3914 = !DILocation(line: 289, column: 25, scope: !3892)
!3915 = !DILocation(line: 289, column: 9, scope: !3892)
!3916 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17hdc8000f888c52ed2E", scope: !3882, file: !2460, line: 254, type: !3917, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !3893, retainedNodes: !3920)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{null, !3919, !261, !9}
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::heapsort::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !3881, size: 64, align: 64, dwarfAddressSpace: 0)
!3920 = !{!3921, !3922, !3923, !3924}
!3921 = !DILocalVariable(name: "v", arg: 2, scope: !3916, file: !2460, line: 254, type: !261)
!3922 = !DILocalVariable(name: "node", arg: 3, scope: !3916, file: !2460, line: 254, type: !9)
!3923 = !DILocalVariable(name: "is_less", scope: !3916, file: !2460, line: 249, type: !1056, align: 8)
!3924 = !DILocalVariable(name: "child", scope: !3925, file: !2460, line: 257, type: !9, align: 8)
!3925 = distinct !DILexicalBlock(scope: !3916, file: !2460, line: 257, column: 13)
!3926 = !DILocation(line: 249, column: 40, scope: !3916)
!3927 = !DILocation(line: 254, column: 26, scope: !3916)
!3928 = !DILocation(line: 254, column: 39, scope: !3916)
!3929 = !DILocation(line: 257, column: 17, scope: !3925)
!3930 = !DILocation(line: 255, column: 9, scope: !3916)
!3931 = !DILocation(line: 257, column: 33, scope: !3916)
!3932 = !DILocation(line: 257, column: 29, scope: !3916)
!3933 = !DILocation(line: 258, column: 16, scope: !3925)
!3934 = !DILocation(line: 263, column: 16, scope: !3925)
!3935 = !DILocation(line: 279, column: 6, scope: !3916)
!3936 = !DILocation(line: 271, column: 17, scope: !3925)
!3937 = !DILocation(line: 271, column: 28, scope: !3925)
!3938 = !DILocation(line: 271, column: 26, scope: !3925)
!3939 = !DILocation(line: 267, column: 26, scope: !3925)
!3940 = !DILocation(line: 267, column: 37, scope: !3925)
!3941 = !DILocation(line: 267, column: 35, scope: !3925)
!3942 = !DILocation(line: 267, column: 34, scope: !3925)
!3943 = !DILocation(line: 267, column: 48, scope: !3925)
!3944 = !DILocation(line: 267, column: 46, scope: !3925)
!3945 = !DILocation(line: 267, column: 45, scope: !3925)
!3946 = !DILocation(line: 267, column: 17, scope: !3925)
!3947 = !DILocation(line: 263, column: 13, scope: !3925)
!3948 = !DILocation(line: 271, column: 25, scope: !3925)
!3949 = !DILocation(line: 271, column: 38, scope: !3925)
!3950 = !DILocation(line: 271, column: 36, scope: !3925)
!3951 = !DILocation(line: 271, column: 35, scope: !3925)
!3952 = !DILocation(line: 276, column: 20, scope: !3925)
!3953 = !DILocation(line: 276, column: 26, scope: !3925)
!3954 = !DILocation(line: 276, column: 13, scope: !3925)
!3955 = !DILocation(line: 277, column: 20, scope: !3925)
!3956 = !DILocation(line: 277, column: 13, scope: !3925)
!3957 = distinct !DISubprogram(name: "partition<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9partition17hec306af8b214dcd6E", scope: !1086, file: !2460, line: 560, type: !3958, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !3960)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!946, !261, !9, !1056}
!3960 = !{!3961, !3962, !3963, !3964, !3966, !3967, !3969, !3970, !3972, !3974, !3976, !3978, !3980}
!3961 = !DILocalVariable(name: "v", arg: 1, scope: !3957, file: !2460, line: 560, type: !261)
!3962 = !DILocalVariable(name: "pivot", arg: 2, scope: !3957, file: !2460, line: 560, type: !9)
!3963 = !DILocalVariable(name: "is_less", arg: 3, scope: !3957, file: !2460, line: 560, type: !1056)
!3964 = !DILocalVariable(name: "mid", scope: !3965, file: !2460, line: 564, type: !9, align: 8)
!3965 = distinct !DILexicalBlock(scope: !3957, file: !2460, line: 564, column: 5)
!3966 = !DILocalVariable(name: "was_partitioned", scope: !3965, file: !2460, line: 564, type: !328, align: 1)
!3967 = !DILocalVariable(name: "pivot", scope: !3968, file: !2460, line: 567, type: !261, align: 8)
!3968 = distinct !DILexicalBlock(scope: !3957, file: !2460, line: 567, column: 9)
!3969 = !DILocalVariable(name: "v", scope: !3968, file: !2460, line: 567, type: !261, align: 8)
!3970 = !DILocalVariable(name: "pivot", scope: !3971, file: !2460, line: 568, type: !811, align: 8)
!3971 = distinct !DILexicalBlock(scope: !3968, file: !2460, line: 568, column: 9)
!3972 = !DILocalVariable(name: "tmp", scope: !3973, file: !2460, line: 574, type: !546, align: 8)
!3973 = distinct !DILexicalBlock(scope: !3971, file: !2460, line: 574, column: 9)
!3974 = !DILocalVariable(name: "_pivot_guard", scope: !3975, file: !2460, line: 575, type: !1085, align: 8)
!3975 = distinct !DILexicalBlock(scope: !3973, file: !2460, line: 575, column: 9)
!3976 = !DILocalVariable(name: "pivot", scope: !3977, file: !2460, line: 576, type: !12, align: 8)
!3977 = distinct !DILexicalBlock(scope: !3975, file: !2460, line: 576, column: 9)
!3978 = !DILocalVariable(name: "l", scope: !3979, file: !2460, line: 579, type: !9, align: 8)
!3979 = distinct !DILexicalBlock(scope: !3977, file: !2460, line: 579, column: 9)
!3980 = !DILocalVariable(name: "r", scope: !3981, file: !2460, line: 580, type: !9, align: 8)
!3981 = distinct !DILexicalBlock(scope: !3979, file: !2460, line: 580, column: 9)
!3982 = !DILocation(line: 560, column: 31, scope: !3957)
!3983 = !DILocation(line: 560, column: 44, scope: !3957)
!3984 = !DILocation(line: 560, column: 58, scope: !3957)
!3985 = !DILocation(line: 574, column: 13, scope: !3973)
!3986 = !DILocation(line: 575, column: 13, scope: !3975)
!3987 = !DILocation(line: 579, column: 13, scope: !3979)
!3988 = !DILocation(line: 580, column: 13, scope: !3981)
!3989 = !DILocation(line: 566, column: 9, scope: !3957)
!3990 = !DILocation(line: 567, column: 26, scope: !3957)
!3991 = !DILocation(line: 567, column: 14, scope: !3957)
!3992 = !DILocation(line: 567, column: 14, scope: !3968)
!3993 = !DILocation(line: 567, column: 21, scope: !3957)
!3994 = !DILocation(line: 567, column: 21, scope: !3968)
!3995 = !DILocation(line: 568, column: 26, scope: !3968)
!3996 = !DILocation(line: 568, column: 21, scope: !3968)
!3997 = !DILocation(line: 568, column: 13, scope: !3971)
!3998 = !DILocation(line: 574, column: 51, scope: !3971)
!3999 = !DILocation(line: 70, column: 22, scope: !896, inlinedAt: !4000)
!4000 = distinct !DILocation(line: 574, column: 19, scope: !3971)
!4001 = !DILocation(line: 71, column: 9, scope: !896, inlinedAt: !4000)
!4002 = !DILocation(line: 152, column: 14, scope: !2497, inlinedAt: !4003)
!4003 = distinct !DILocation(line: 575, column: 50, scope: !3973)
!4004 = !DILocation(line: 575, column: 28, scope: !3973)
!4005 = !DILocation(line: 152, column: 14, scope: !2497, inlinedAt: !4006)
!4006 = distinct !DILocation(line: 576, column: 22, scope: !3975)
!4007 = !DILocation(line: 576, column: 22, scope: !3975)
!4008 = !DILocation(line: 576, column: 13, scope: !3977)
!4009 = !DILocation(line: 579, column: 21, scope: !3977)
!4010 = !DILocation(line: 580, column: 21, scope: !3979)
!4011 = !DILocation(line: 588, column: 13, scope: !3981)
!4012 = !DILocation(line: 588, column: 19, scope: !3981)
!4013 = !DILocation(line: 588, column: 23, scope: !3981)
!4014 = !DILocation(line: 593, column: 19, scope: !3981)
!4015 = !DILocation(line: 593, column: 23, scope: !3981)
!4016 = !DILocation(line: 588, column: 52, scope: !3981)
!4017 = !DILocation(line: 588, column: 36, scope: !3981)
!4018 = !DILocation(line: 588, column: 28, scope: !3981)
!4019 = !DILocation(line: 589, column: 17, scope: !3981)
!4020 = !DILocation(line: 598, column: 10, scope: !3981)
!4021 = !DILocation(line: 598, column: 41, scope: !3981)
!4022 = !DILocation(line: 598, column: 44, scope: !3981)
!4023 = !DILocation(line: 598, column: 40, scope: !3981)
!4024 = !DILocation(line: 598, column: 14, scope: !3981)
!4025 = !DILocation(line: 593, column: 53, scope: !3981)
!4026 = !DILocation(line: 593, column: 37, scope: !3981)
!4027 = !DILocation(line: 593, column: 29, scope: !3981)
!4028 = !DILocation(line: 594, column: 17, scope: !3981)
!4029 = !DILocation(line: 593, column: 13, scope: !3981)
!4030 = !DILocation(line: 598, column: 65, scope: !3981)
!4031 = !DILocation(line: 598, column: 70, scope: !3981)
!4032 = !DILocation(line: 598, column: 9, scope: !3981)
!4033 = !DILocation(line: 603, column: 5, scope: !3973)
!4034 = !DILocation(line: 564, column: 10, scope: !3957)
!4035 = !DILocation(line: 564, column: 10, scope: !3965)
!4036 = !DILocation(line: 564, column: 15, scope: !3957)
!4037 = !DILocation(line: 564, column: 15, scope: !3965)
!4038 = !DILocation(line: 606, column: 5, scope: !3965)
!4039 = !DILocation(line: 608, column: 5, scope: !3965)
!4040 = !DILocation(line: 609, column: 2, scope: !3957)
!4041 = distinct !DISubprogram(name: "quicksort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9quicksort17h1fcea23794d9a678E", scope: !1086, file: !2460, line: 892, type: !4042, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2476, retainedNodes: !4044)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{null, !261, !1057}
!4044 = !{!4045, !4046, !4047}
!4045 = !DILocalVariable(name: "v", arg: 1, scope: !4041, file: !2460, line: 892, type: !261)
!4046 = !DILocalVariable(name: "is_less", arg: 2, scope: !4041, file: !2460, line: 892, type: !1057)
!4047 = !DILocalVariable(name: "limit", scope: !4048, file: !2460, line: 902, type: !27, align: 4)
!4048 = distinct !DILexicalBlock(scope: !4041, file: !2460, line: 902, column: 5)
!4049 = !DILocation(line: 892, column: 24, scope: !4041)
!4050 = !DILocation(line: 892, column: 37, scope: !4041)
!4051 = !DILocation(line: 897, column: 8, scope: !4041)
!4052 = !DILocalVariable(name: "self", arg: 1, scope: !4053, file: !930, line: 148, type: !9)
!4053 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13leading_zeros17h58d3ed993125f12bE", scope: !931, file: !930, line: 148, type: !1142, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4054)
!4054 = !{!4052}
!4055 = !DILocation(line: 148, column: 36, scope: !4053, inlinedAt: !4056)
!4056 = distinct !DILocation(line: 902, column: 31, scope: !4041)
!4057 = !DILocation(line: 149, column: 13, scope: !4053, inlinedAt: !4056)
!4058 = !DILocation(line: 902, column: 17, scope: !4041)
!4059 = !DILocation(line: 905, column: 1, scope: !4041)
!4060 = !DILocation(line: 902, column: 9, scope: !4048)
!4061 = !DILocation(line: 904, column: 30, scope: !4048)
!4062 = !DILocation(line: 904, column: 5, scope: !4048)
!4063 = !DILocation(line: 905, column: 2, scope: !4041)
!4064 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5f700e7b114b712E", scope: !4065, file: !93, line: 17, type: !4066, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2124, retainedNodes: !4068)
!4065 = !DINamespace(name: "{impl#0}", scope: !95)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{!230, !230, !104, !234}
!4068 = !{!4069, !4070}
!4069 = !DILocalVariable(name: "self", arg: 1, scope: !4064, file: !93, line: 17, type: !230)
!4070 = !DILocalVariable(name: "index", arg: 2, scope: !4064, file: !93, line: 17, type: !104)
!4071 = !DILocation(line: 17, column: 14, scope: !4064)
!4072 = !DILocation(line: 17, column: 21, scope: !4064)
!4073 = !DILocation(line: 18, column: 9, scope: !4064)
!4074 = !DILocation(line: 19, column: 6, scope: !4064)
!4075 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h29a639d44f5cb99dE", scope: !4076, file: !93, line: 28, type: !4077, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4082, retainedNodes: !4079)
!4076 = !DINamespace(name: "{impl#1}", scope: !95)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!261, !261, !294, !234}
!4079 = !{!4080, !4081}
!4080 = !DILocalVariable(name: "self", arg: 1, scope: !4075, file: !93, line: 28, type: !261)
!4081 = !DILocalVariable(name: "index", arg: 2, scope: !4075, file: !93, line: 28, type: !294)
!4082 = !{!120, !4083}
!4083 = !DITemplateTypeParameter(name: "I", type: !294)
!4084 = !DILocation(line: 28, column: 18, scope: !4075)
!4085 = !DILocation(line: 28, column: 29, scope: !4075)
!4086 = !DILocation(line: 29, column: 9, scope: !4075)
!4087 = !DILocation(line: 30, column: 6, scope: !4075)
!4088 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h85a2628b90dfe8e1E", scope: !4076, file: !93, line: 28, type: !4089, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !2124, retainedNodes: !4091)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{!261, !261, !104, !234}
!4091 = !{!4092, !4093}
!4092 = !DILocalVariable(name: "self", arg: 1, scope: !4088, file: !93, line: 28, type: !261)
!4093 = !DILocalVariable(name: "index", arg: 2, scope: !4088, file: !93, line: 28, type: !104)
!4094 = !DILocation(line: 28, column: 18, scope: !4088)
!4095 = !DILocation(line: 28, column: 29, scope: !4088)
!4096 = !DILocation(line: 29, column: 9, scope: !4088)
!4097 = !DILocation(line: 30, column: 6, scope: !4088)
!4098 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeToInclusive<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17ha790b300f578cd28E", scope: !4076, file: !93, line: 28, type: !4099, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4104, retainedNodes: !4101)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!261, !261, !343, !234}
!4101 = !{!4102, !4103}
!4102 = !DILocalVariable(name: "self", arg: 1, scope: !4098, file: !93, line: 28, type: !261)
!4103 = !DILocalVariable(name: "index", arg: 2, scope: !4098, file: !93, line: 28, type: !343)
!4104 = !{!120, !4105}
!4105 = !DITemplateTypeParameter(name: "I", type: !343)
!4106 = !DILocation(line: 28, column: 18, scope: !4098)
!4107 = !DILocation(line: 28, column: 29, scope: !4098)
!4108 = !DILocation(line: 29, column: 9, scope: !4098)
!4109 = !DILocation(line: 30, column: 6, scope: !4098)
!4110 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfb51a5192ad8a97dE", scope: !4076, file: !93, line: 28, type: !4111, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4116, retainedNodes: !4113)
!4111 = !DISubroutineType(types: !4112)
!4112 = !{!261, !261, !280, !234}
!4113 = !{!4114, !4115}
!4114 = !DILocalVariable(name: "self", arg: 1, scope: !4110, file: !93, line: 28, type: !261)
!4115 = !DILocalVariable(name: "index", arg: 2, scope: !4110, file: !93, line: 28, type: !280)
!4116 = !{!120, !4117}
!4117 = !DITemplateTypeParameter(name: "I", type: !280)
!4118 = !DILocation(line: 28, column: 18, scope: !4110)
!4119 = !DILocation(line: 28, column: 29, scope: !4110)
!4120 = !DILocation(line: 29, column: 9, scope: !4110)
!4121 = !DILocation(line: 30, column: 6, scope: !4110)
!4122 = distinct !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h4627a3a7bfe75154E", scope: !4124, file: !4123, line: 951, type: !4142, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4130, declaration: !4144, retainedNodes: !4145)
!4123 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "ef6e68460e4d48c9230b98f88a0ad0f9")
!4124 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<bootloader::bootinfo::TlsTemplate>", scope: !386, file: !2, size: 256, align: 64, elements: !4125, templateParams: !24, identifier: "66ba0fb91e405c3769dedfeacbf6e127")
!4125 = !{!4126}
!4126 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4124, file: !2, size: 256, align: 64, elements: !4127, templateParams: !24, identifier: "b6a1040043d6621c8f93c80dce36a935", discriminator: !4141)
!4127 = !{!4128, !4137}
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4126, file: !2, baseType: !4129, size: 256, align: 64, extraData: i128 0)
!4129 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4124, file: !2, size: 256, align: 64, elements: !24, templateParams: !4130, identifier: "8a00c2aafcbae123e6b3cab7f72c1b9a")
!4130 = !{!4131}
!4131 = !DITemplateTypeParameter(name: "T", type: !4132)
!4132 = !DICompositeType(tag: DW_TAG_structure_type, name: "TlsTemplate", scope: !15, file: !2, size: 192, align: 64, elements: !4133, templateParams: !24, identifier: "62253c7d31d6a687c4322f59a14a16dc")
!4133 = !{!4134, !4135, !4136}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !4132, file: !2, baseType: !22, size: 64, align: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "file_size", scope: !4132, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "mem_size", scope: !4132, file: !2, baseType: !22, size: 64, align: 64, offset: 128)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4126, file: !2, baseType: !4138, size: 256, align: 64, extraData: i128 1)
!4138 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4124, file: !2, size: 256, align: 64, elements: !4139, templateParams: !4130, identifier: "c53bd034f5729ed36c856bc321c841e")
!4139 = !{!4140}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4138, file: !2, baseType: !4132, size: 192, align: 64, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, scope: !4124, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!4132, !4124, !4132}
!4144 = !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h4627a3a7bfe75154E", scope: !4124, file: !4123, line: 951, type: !4142, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4130)
!4145 = !{!4146, !4147, !4148}
!4146 = !DILocalVariable(name: "self", arg: 1, scope: !4122, file: !4123, line: 951, type: !4124)
!4147 = !DILocalVariable(name: "default", arg: 2, scope: !4122, file: !4123, line: 951, type: !4132)
!4148 = !DILocalVariable(name: "x", scope: !4149, file: !4123, line: 953, type: !4132, align: 8)
!4149 = distinct !DILexicalBlock(scope: !4122, file: !4123, line: 953, column: 13)
!4150 = !DILocation(line: 951, column: 22, scope: !4122)
!4151 = !DILocation(line: 951, column: 28, scope: !4122)
!4152 = !DILocation(line: 953, column: 18, scope: !4149)
!4153 = !DILocation(line: 952, column: 15, scope: !4122)
!4154 = !DILocation(line: 952, column: 9, scope: !4122)
!4155 = !DILocation(line: 954, column: 21, scope: !4122)
!4156 = !DILocation(line: 953, column: 18, scope: !4122)
!4157 = !DILocation(line: 953, column: 24, scope: !4149)
!4158 = !DILocation(line: 953, column: 24, scope: !4122)
!4159 = !DILocation(line: 956, column: 5, scope: !4122)
!4160 = !DILocation(line: 956, column: 6, scope: !4122)
!4161 = distinct !DISubprogram(name: "eq", linkageName: "_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7f77a1708ef0cb67E", scope: !4162, file: !602, line: 353, type: !4163, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4166)
!4162 = !DINamespace(name: "{impl#7}", scope: !79)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!328, !4165, !4165}
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cmp::Ordering", baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!4166 = !{!4167, !4168, !4169, !4171}
!4167 = !DILocalVariable(name: "self", arg: 1, scope: !4161, file: !602, line: 353, type: !4165)
!4168 = !DILocalVariable(name: "other", arg: 2, scope: !4161, file: !602, line: 353, type: !4165)
!4169 = !DILocalVariable(name: "__self_tag", scope: !4170, file: !602, line: 353, type: !80, align: 1)
!4170 = distinct !DILexicalBlock(scope: !4161, file: !602, line: 353, column: 23)
!4171 = !DILocalVariable(name: "__arg1_tag", scope: !4172, file: !602, line: 353, type: !80, align: 1)
!4172 = distinct !DILexicalBlock(scope: !4170, file: !602, line: 353, column: 23)
!4173 = !DILocation(line: 353, column: 23, scope: !4161)
!4174 = !DILocation(line: 353, column: 23, scope: !4170)
!4175 = !DILocation(line: 353, column: 23, scope: !4172)
!4176 = !DILocation(line: 353, column: 32, scope: !4161)
!4177 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h477917721b7c6dc4E", scope: !4179, file: !4178, line: 278, type: !4182, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4186, retainedNodes: !4184)
!4178 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "b390a74a8068e14f2e90b22e417c358e")
!4179 = !DINamespace(name: "{impl#0}", scope: !4180)
!4180 = !DINamespace(name: "collect", scope: !4181)
!4181 = !DINamespace(name: "traits", scope: !2584)
!4182 = !DISubroutineType(types: !4183)
!4183 = !{!638, !638}
!4184 = !{!4185}
!4185 = !DILocalVariable(name: "self", arg: 1, scope: !4177, file: !4178, line: 278, type: !638)
!4186 = !{!655}
!4187 = !DILocation(line: 278, column: 18, scope: !4177)
!4188 = !DILocation(line: 280, column: 6, scope: !4177)
!4189 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h54996780d583227eE", scope: !4190, file: !93, line: 227, type: !4191, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !4193)
!4190 = !DINamespace(name: "{impl#2}", scope: !95)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!137, !9, !99}
!4193 = !{!4194, !4195, !4196}
!4194 = !DILocalVariable(name: "self", arg: 1, scope: !4189, file: !93, line: 227, type: !9)
!4195 = !DILocalVariable(name: "slice", arg: 2, scope: !4189, file: !93, line: 227, type: !99)
!4196 = !DILocalVariable(name: "this", scope: !4197, file: !93, line: 228, type: !9, align: 8)
!4197 = distinct !DILexicalBlock(scope: !4189, file: !93, line: 228, column: 9)
!4198 = !DILocation(line: 227, column: 29, scope: !4189)
!4199 = !DILocation(line: 228, column: 13, scope: !4197)
!4200 = !DILocation(line: 227, column: 35, scope: !4189)
!4201 = !DILocation(line: 234, column: 13, scope: !4197)
!4202 = !DILocation(line: 238, column: 13, scope: !4197)
!4203 = !DILocation(line: 938, column: 29, scope: !130, inlinedAt: !4204)
!4204 = distinct !DILocation(line: 238, column: 13, scope: !4197)
!4205 = !DILocation(line: 938, column: 35, scope: !130, inlinedAt: !4204)
!4206 = !DILocation(line: 943, column: 18, scope: !130, inlinedAt: !4204)
!4207 = !DILocation(line: 240, column: 6, scope: !4189)
!4208 = !DILocalVariable(name: "this", arg: 1, scope: !4209, file: !148, line: 2530, type: !9)
!4209 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17he72970f9fe8c07a1E", scope: !4210, file: !148, line: 2530, type: !4211, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !4213)
!4210 = !DINamespace(name: "get_unchecked", scope: !4190)
!4211 = !DISubroutineType(types: !4212)
!4212 = !{null, !9, !99}
!4213 = !{!4208, !4214}
!4214 = !DILocalVariable(name: "slice", arg: 2, scope: !4209, file: !148, line: 2530, type: !99)
!4215 = !DILocation(line: 2530, column: 39, scope: !4209, inlinedAt: !4216)
!4216 = distinct !DILocation(line: 234, column: 13, scope: !4197)
!4217 = !DILocation(line: 236, column: 63, scope: !4218, inlinedAt: !4216)
!4218 = !DILexicalBlockFile(scope: !4209, file: !93, discriminator: 0)
!4219 = !DILocation(line: 236, column: 56, scope: !4218, inlinedAt: !4216)
!4220 = !DILocation(line: 2533, column: 21, scope: !4209, inlinedAt: !4216)
!4221 = distinct !DISubprogram(name: "eq<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9a9a90a8c6e9a90bE", scope: !4222, file: !1850, line: 786, type: !4223, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !4226)
!4222 = !DINamespace(name: "{impl#12}", scope: !643)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{!328, !4225, !4225}
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !642, size: 64, align: 64, dwarfAddressSpace: 0)
!4226 = !{!4227, !4228}
!4227 = !DILocalVariable(name: "self", arg: 1, scope: !4221, file: !1850, line: 786, type: !4225)
!4228 = !DILocalVariable(name: "other", arg: 2, scope: !4221, file: !1850, line: 786, type: !4225)
!4229 = !DILocation(line: 786, column: 11, scope: !4221)
!4230 = !DILocation(line: 786, column: 18, scope: !4221)
!4231 = !DILocation(line: 787, column: 9, scope: !4221)
!4232 = !DILocalVariable(name: "self", arg: 1, scope: !4233, file: !1850, line: 345, type: !642)
!4233 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf077ac7df7f9d34eE", scope: !642, file: !1850, line: 345, type: !4234, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !4236, retainedNodes: !4237)
!4234 = !DISubroutineType(types: !4235)
!4235 = !{!189, !642}
!4236 = !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf077ac7df7f9d34eE", scope: !642, file: !1850, line: 345, type: !4234, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!4237 = !{!4232}
!4238 = !DILocation(line: 345, column: 25, scope: !4233, inlinedAt: !4239)
!4239 = distinct !DILocation(line: 787, column: 9, scope: !4221)
!4240 = !DILocation(line: 787, column: 26, scope: !4221)
!4241 = !DILocation(line: 345, column: 25, scope: !4233, inlinedAt: !4242)
!4242 = distinct !DILocation(line: 787, column: 26, scope: !4221)
!4243 = !DILocation(line: 788, column: 6, scope: !4221)
!4244 = distinct !DISubprogram(name: "drop<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc846d274995c2f97E", scope: !4245, file: !2460, line: 23, type: !4246, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !4249)
!4245 = !DINamespace(name: "{impl#0}", scope: !1086)
!4246 = !DISubroutineType(types: !4247)
!4247 = !{null, !4248}
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1085, size: 64, align: 64, dwarfAddressSpace: 0)
!4249 = !{!4250}
!4250 = !DILocalVariable(name: "self", arg: 1, scope: !4244, file: !2460, line: 23, type: !4248)
!4251 = !DILocation(line: 23, column: 13, scope: !4244)
!4252 = !DILocation(line: 28, column: 38, scope: !4244)
!4253 = !DILocation(line: 28, column: 48, scope: !4244)
!4254 = !DILocation(line: 2672, column: 44, scope: !1499, inlinedAt: !4255)
!4255 = distinct !DILocation(line: 28, column: 13, scope: !4244)
!4256 = !DILocation(line: 2672, column: 59, scope: !1499, inlinedAt: !4255)
!4257 = !DILocation(line: 2672, column: 72, scope: !1499, inlinedAt: !4255)
!4258 = !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !4255)
!4259 = !DILocation(line: 2530, column: 39, scope: !1511, inlinedAt: !4260)
!4260 = distinct !DILocation(line: 2682, column: 9, scope: !1499, inlinedAt: !4255)
!4261 = !DILocation(line: 2686, column: 13, scope: !1511, inlinedAt: !4260)
!4262 = !DILocation(line: 2533, column: 21, scope: !1511, inlinedAt: !4260)
!4263 = !DILocation(line: 2687, column: 20, scope: !1511, inlinedAt: !4260)
!4264 = !DILocation(line: 2688, column: 20, scope: !1511, inlinedAt: !4260)
!4265 = !DILocation(line: 2690, column: 9, scope: !1499, inlinedAt: !4255)
!4266 = !DILocation(line: 30, column: 6, scope: !4244)
!4267 = distinct !DISubprogram(name: "next<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h97e7d93a19b9c705E", scope: !4269, file: !4268, line: 156, type: !4270, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !4273)
!4268 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "9bba063146171aeb521675d0b4e4e3f9")
!4269 = !DINamespace(name: "{impl#181}", scope: !639)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!3750, !4272}
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !638, size: 64, align: 64, dwarfAddressSpace: 0)
!4273 = !{!4274, !4275, !4277}
!4274 = !DILocalVariable(name: "self", arg: 1, scope: !4267, file: !4268, line: 156, type: !4272)
!4275 = !DILocalVariable(name: "len", scope: !4276, file: !4268, line: 162, type: !9, align: 8)
!4276 = distinct !DILexicalBlock(scope: !4267, file: !4268, line: 29, column: 13)
!4277 = !DILocalVariable(name: "end", scope: !4278, file: !4268, line: 162, type: !642, align: 8)
!4278 = distinct !DILexicalBlock(scope: !4267, file: !4268, line: 33, column: 13)
!4279 = !DILocation(line: 156, column: 21, scope: !4267)
!4280 = !DILocation(line: 162, column: 24, scope: !4278)
!4281 = !DILocation(line: 162, column: 24, scope: !4267)
!4282 = !DILocalVariable(name: "self", arg: 1, scope: !4283, file: !131, line: 60, type: !4287)
!4283 = distinct !DISubprogram(name: "cast<*const bootloader::bootinfo::memory_map::MemoryRegion, core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h27cd0ee68113ea10E", scope: !132, file: !131, line: 60, type: !4284, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4289, retainedNodes: !4288)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!4286, !4287}
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !642, size: 64, align: 64, dwarfAddressSpace: 0)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !137, size: 64, align: 64, dwarfAddressSpace: 0)
!4288 = !{!4282}
!4289 = !{!4290, !4291}
!4290 = !DITemplateTypeParameter(name: "T", type: !137)
!4291 = !DITemplateTypeParameter(name: "U", type: !642)
!4292 = !DILocation(line: 60, column: 26, scope: !4283, inlinedAt: !4293)
!4293 = distinct !DILocation(line: 162, column: 24, scope: !4267)
!4294 = !DILocation(line: 206, column: 17, scope: !506, inlinedAt: !4295)
!4295 = distinct !DILocation(line: 162, column: 24, scope: !4267)
!4296 = !DILocation(line: 60, column: 26, scope: !513, inlinedAt: !4297)
!4297 = distinct !DILocation(line: 210, column: 33, scope: !506, inlinedAt: !4295)
!4298 = !DILocation(line: 210, column: 18, scope: !506, inlinedAt: !4295)
!4299 = !DILocation(line: 162, column: 24, scope: !4276)
!4300 = !DILocalVariable(name: "self", arg: 1, scope: !4301, file: !4268, line: 101, type: !4272)
!4301 = distinct !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17hbe449f5fd445feefE", scope: !638, file: !4268, line: 101, type: !4302, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !4304, retainedNodes: !4305)
!4302 = !DISubroutineType(types: !4303)
!4303 = !{!642, !4272, !9}
!4304 = !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17hbe449f5fd445feefE", scope: !638, file: !4268, line: 101, type: !4302, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!4305 = !{!4300, !4306, !4307, !4309, !4311}
!4306 = !DILocalVariable(name: "offset", arg: 2, scope: !4301, file: !4268, line: 101, type: !9)
!4307 = !DILocalVariable(name: "old", scope: !4308, file: !4268, line: 102, type: !642, align: 8)
!4308 = distinct !DILexicalBlock(scope: !4301, file: !4268, line: 102, column: 17)
!4309 = !DILocalVariable(name: "len", scope: !4310, file: !4268, line: 107, type: !2705, align: 8)
!4310 = distinct !DILexicalBlock(scope: !4308, file: !4268, line: 17, column: 13)
!4311 = !DILocalVariable(name: "_end", scope: !4312, file: !4268, line: 107, type: !4313, align: 8)
!4312 = distinct !DILexicalBlock(scope: !4308, file: !4268, line: 21, column: 13)
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !642, size: 64, align: 64, dwarfAddressSpace: 0)
!4314 = !DILocation(line: 101, column: 38, scope: !4301, inlinedAt: !4315)
!4315 = distinct !DILocation(line: 165, column: 30, scope: !4267)
!4316 = !DILocation(line: 101, column: 49, scope: !4301, inlinedAt: !4315)
!4317 = !DILocation(line: 102, column: 27, scope: !4301, inlinedAt: !4315)
!4318 = !DILocation(line: 102, column: 21, scope: !4308, inlinedAt: !4315)
!4319 = !DILocation(line: 107, column: 21, scope: !4308, inlinedAt: !4315)
!4320 = !DILocalVariable(name: "self", arg: 1, scope: !4321, file: !184, line: 60, type: !4325)
!4321 = distinct !DISubprogram(name: "cast<*const bootloader::bootinfo::memory_map::MemoryRegion, core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2809b5d62df45638E", scope: !195, file: !184, line: 60, type: !4322, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4289, retainedNodes: !4326)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!4324, !4325}
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::ptr::non_null::NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !642, size: 64, align: 64, dwarfAddressSpace: 0)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut *const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !137, size: 64, align: 64, dwarfAddressSpace: 0)
!4326 = !{!4320}
!4327 = !DILocation(line: 60, column: 26, scope: !4321, inlinedAt: !4328)
!4328 = distinct !DILocation(line: 107, column: 21, scope: !4308, inlinedAt: !4315)
!4329 = !DILocation(line: 107, column: 21, scope: !4312, inlinedAt: !4315)
!4330 = !DILocation(line: 109, column: 44, scope: !4312, inlinedAt: !4315)
!4331 = !DILocation(line: 109, column: 33, scope: !4312, inlinedAt: !4315)
!4332 = !DILocation(line: 165, column: 30, scope: !4267)
!4333 = !DILocalVariable(name: "self", arg: 1, scope: !4334, file: !1850, line: 393, type: !4225)
!4334 = distinct !DISubprogram(name: "as_ref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hffade2fb35de159bE", scope: !642, file: !1850, line: 393, type: !4335, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, declaration: !4337, retainedNodes: !4338)
!4335 = !DISubroutineType(types: !4336)
!4336 = !{!12, !4225}
!4337 = !DISubprogram(name: "as_ref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hffade2fb35de159bE", scope: !642, file: !1850, line: 393, type: !4335, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !119)
!4338 = !{!4333}
!4339 = !DILocation(line: 393, column: 36, scope: !4334, inlinedAt: !4340)
!4340 = distinct !DILocation(line: 165, column: 30, scope: !4267)
!4341 = !DILocation(line: 397, column: 20, scope: !4334, inlinedAt: !4340)
!4342 = !DILocation(line: 345, column: 25, scope: !4233, inlinedAt: !4343)
!4343 = distinct !DILocation(line: 397, column: 20, scope: !4334, inlinedAt: !4340)
!4344 = !DILocalVariable(name: "self", arg: 1, scope: !4345, file: !184, line: 117, type: !189)
!4345 = distinct !DISubprogram(name: "cast_const<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$10cast_const17hb6533f7a09df735dE", scope: !195, file: !184, line: 117, type: !4346, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !119, retainedNodes: !4348)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!137, !189}
!4348 = !{!4344}
!4349 = !DILocation(line: 117, column: 29, scope: !4345, inlinedAt: !4350)
!4350 = distinct !DILocation(line: 397, column: 20, scope: !4334, inlinedAt: !4340)
!4351 = !DILocation(line: 165, column: 25, scope: !4267)
!4352 = !DILocation(line: 162, column: 21, scope: !4267)
!4353 = !DILocation(line: 163, column: 25, scope: !4267)
!4354 = !DILocation(line: 168, column: 14, scope: !4267)
!4355 = distinct !DISubprogram(name: "position<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h08697ebb8c2e59cdE", scope: !4269, file: !4268, line: 331, type: !4356, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4372, retainedNodes: !4359)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!385, !4272, !4358}
!4358 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !1064, file: !2, align: 8, elements: !24, identifier: "b12db16dd22fedc421fc924b194b8e52")
!4359 = !{!4360, !4361, !4362, !4364, !4366, !4368, !4370}
!4360 = !DILocalVariable(name: "self", arg: 1, scope: !4355, file: !4268, line: 331, type: !4272)
!4361 = !DILocalVariable(name: "predicate", arg: 2, scope: !4355, file: !4268, line: 331, type: !4358)
!4362 = !DILocalVariable(name: "n", scope: !4363, file: !4268, line: 335, type: !9, align: 8)
!4363 = distinct !DILexicalBlock(scope: !4355, file: !4268, line: 335, column: 17)
!4364 = !DILocalVariable(name: "len", scope: !4365, file: !4268, line: 335, type: !9, align: 8)
!4365 = distinct !DILexicalBlock(scope: !4355, file: !4268, line: 29, column: 13)
!4366 = !DILocalVariable(name: "end", scope: !4367, file: !4268, line: 335, type: !642, align: 8)
!4367 = distinct !DILexicalBlock(scope: !4355, file: !4268, line: 33, column: 13)
!4368 = !DILocalVariable(name: "i", scope: !4369, file: !4268, line: 336, type: !9, align: 8)
!4369 = distinct !DILexicalBlock(scope: !4363, file: !4268, line: 336, column: 17)
!4370 = !DILocalVariable(name: "x", scope: !4371, file: !4268, line: 337, type: !12, align: 8)
!4371 = distinct !DILexicalBlock(scope: !4369, file: !4268, line: 337, column: 49)
!4372 = !{!120, !4373}
!4373 = !DITemplateTypeParameter(name: "P", type: !4358)
!4374 = !DILocation(line: 331, column: 28, scope: !4355)
!4375 = !DILocation(line: 331, column: 39, scope: !4355)
!4376 = !DILocation(line: 335, column: 21, scope: !4363)
!4377 = !DILocation(line: 336, column: 21, scope: !4369)
!4378 = !DILocation(line: 335, column: 25, scope: !4355)
!4379 = !DILocation(line: 60, column: 26, scope: !4283, inlinedAt: !4380)
!4380 = distinct !DILocation(line: 335, column: 25, scope: !4355)
!4381 = !DILocation(line: 335, column: 25, scope: !4367)
!4382 = !DILocation(line: 206, column: 17, scope: !506, inlinedAt: !4383)
!4383 = distinct !DILocation(line: 335, column: 25, scope: !4355)
!4384 = !DILocation(line: 60, column: 26, scope: !513, inlinedAt: !4385)
!4385 = distinct !DILocation(line: 210, column: 33, scope: !506, inlinedAt: !4383)
!4386 = !DILocation(line: 210, column: 18, scope: !506, inlinedAt: !4383)
!4387 = !DILocation(line: 335, column: 25, scope: !4365)
!4388 = !DILocation(line: 336, column: 29, scope: !4363)
!4389 = !DILocation(line: 337, column: 17, scope: !4369)
!4390 = !DILocation(line: 337, column: 37, scope: !4371)
!4391 = !DILocation(line: 337, column: 27, scope: !4371)
!4392 = !DILocation(line: 337, column: 32, scope: !4371)
!4393 = !DILocation(line: 338, column: 24, scope: !4371)
!4394 = !DILocation(line: 346, column: 17, scope: !4369)
!4395 = !DILocation(line: 347, column: 13, scope: !4355)
!4396 = !DILocation(line: 344, column: 21, scope: !4371)
!4397 = !DILocation(line: 341, column: 41, scope: !4371)
!4398 = !DILocation(line: 341, column: 45, scope: !4371)
!4399 = !DILocation(line: 341, column: 34, scope: !4371)
!4400 = !DILocation(line: 342, column: 37, scope: !4371)
!4401 = !DILocation(line: 342, column: 32, scope: !4371)
!4402 = !DILocation(line: 347, column: 14, scope: !4355)
!4403 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h76c992570e472a86E", scope: !4405, file: !4404, line: 20, type: !4409, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4411)
!4404 = !DIFile(filename: "src/bootinfo/memory_map.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "e5c49912468d9331b5d84640370affee")
!4405 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryMap", scope: !14, file: !2, size: 12352, align: 64, elements: !4406, templateParams: !24, identifier: "4e07bbc997ac9122bac3c28a73b10d02")
!4406 = !{!4407, !4408}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !4405, file: !2, baseType: !2118, size: 12288, align: 64)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "next_entry_index", scope: !4405, file: !2, baseType: !22, size: 64, align: 64, offset: 12288)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!4405}
!4411 = !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h76c992570e472a86E", scope: !4405, file: !4404, line: 20, type: !4409, scopeLine: 20, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4412 = !DILocation(line: 22, column: 23, scope: !4403)
!4413 = !DILocation(line: 22, column: 22, scope: !4403)
!4414 = !DILocation(line: 21, column: 9, scope: !4403)
!4415 = !DILocation(line: 25, column: 6, scope: !4403)
!4416 = distinct !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h9cd58d57d20af052E", scope: !4405, file: !4404, line: 27, type: !4417, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4420, retainedNodes: !4421)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{null, !4419, !13}
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !4405, size: 64, align: 64, dwarfAddressSpace: 0)
!4420 = !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17h9cd58d57d20af052E", scope: !4405, file: !4404, line: 27, type: !4417, scopeLine: 27, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4421 = !{!4422, !4423}
!4422 = !DILocalVariable(name: "self", arg: 1, scope: !4416, file: !4404, line: 27, type: !4419)
!4423 = !DILocalVariable(name: "region", arg: 2, scope: !4416, file: !4404, line: 27, type: !13)
!4424 = !DILocation(line: 27, column: 23, scope: !4416)
!4425 = !DILocation(line: 27, column: 34, scope: !4416)
!4426 = !DILocation(line: 29, column: 13, scope: !4416)
!4427 = !DILocation(line: 28, column: 9, scope: !4416)
!4428 = !DILocation(line: 32, column: 22, scope: !4416)
!4429 = !DILocation(line: 32, column: 9, scope: !4416)
!4430 = !DILocation(line: 33, column: 9, scope: !4416)
!4431 = !DILocation(line: 34, column: 9, scope: !4416)
!4432 = !DILocation(line: 35, column: 6, scope: !4416)
!4433 = distinct !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h6069cf93aa468d71E", scope: !4405, file: !4404, line: 37, type: !4434, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4436, retainedNodes: !4437)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{null, !4419}
!4436 = !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h6069cf93aa468d71E", scope: !4405, file: !4404, line: 37, type: !4434, scopeLine: 37, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4437 = !{!4438, !4439}
!4438 = !DILocalVariable(name: "self", arg: 1, scope: !4433, file: !4404, line: 37, type: !4419)
!4439 = !DILocalVariable(name: "first_zero_index", scope: !4440, file: !4404, line: 58, type: !9, align: 8)
!4440 = distinct !DILexicalBlock(scope: !4433, file: !4404, line: 58, column: 94)
!4441 = !DILocation(line: 37, column: 17, scope: !4433)
!4442 = !DILocation(line: 40, column: 9, scope: !4433)
!4443 = !DILocation(line: 58, column: 41, scope: !4440)
!4444 = !DILocation(line: 58, column: 16, scope: !4440)
!4445 = !DILocation(line: 58, column: 21, scope: !4440)
!4446 = !DILocation(line: 59, column: 13, scope: !4440)
!4447 = !DILocation(line: 58, column: 9, scope: !4433)
!4448 = !DILocation(line: 61, column: 6, scope: !4433)
!4449 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17he8e951769960313fE", scope: !1064, file: !4404, line: 40, type: !4450, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4452)
!4450 = !DISubroutineType(types: !4451)
!4451 = !{!78, !1062, !12, !12}
!4452 = !{!4453, !4454, !4455, !4457}
!4453 = !DILocalVariable(name: "r1", arg: 2, scope: !4449, file: !4404, line: 40, type: !12)
!4454 = !DILocalVariable(name: "r2", arg: 3, scope: !4449, file: !4404, line: 40, type: !12)
!4455 = !DILocalVariable(name: "ordering", scope: !4456, file: !4404, line: 46, type: !78, align: 1)
!4456 = distinct !DILexicalBlock(scope: !4449, file: !4404, line: 46, column: 17)
!4457 = !DILocalVariable(arg: 1, scope: !4449, file: !4404, line: 40, type: !1062)
!4458 = !DILocation(line: 40, column: 39, scope: !4449)
!4459 = !DILocation(line: 40, column: 40, scope: !4449)
!4460 = !DILocation(line: 40, column: 44, scope: !4449)
!4461 = !DILocation(line: 46, column: 21, scope: !4456)
!4462 = !DILocation(line: 41, column: 16, scope: !4449)
!4463 = !DILocation(line: 43, column: 23, scope: !4449)
!4464 = !DILocation(line: 42, column: 17, scope: !4449)
!4465 = !DILocation(line: 41, column: 13, scope: !4449)
!4466 = !DILocation(line: 46, column: 32, scope: !4449)
!4467 = !DILocation(line: 51, column: 20, scope: !4456)
!4468 = !DILocation(line: 44, column: 17, scope: !4449)
!4469 = !DILocation(line: 43, column: 20, scope: !4449)
!4470 = !DILocation(line: 54, column: 21, scope: !4456)
!4471 = !DILocation(line: 51, column: 17, scope: !4456)
!4472 = !DILocation(line: 52, column: 21, scope: !4456)
!4473 = !DILocation(line: 52, column: 51, scope: !4456)
!4474 = !DILocation(line: 57, column: 10, scope: !4449)
!4475 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h8a1cf4f84702360cE", scope: !1064, file: !4404, line: 58, type: !4476, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4479)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!328, !4478, !12}
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}", baseType: !4358, size: 64, align: 64, dwarfAddressSpace: 0)
!4479 = !{!4480, !4481}
!4480 = !DILocalVariable(name: "r", arg: 2, scope: !4475, file: !4404, line: 58, type: !12)
!4481 = !DILocalVariable(arg: 1, scope: !4475, file: !4404, line: 58, type: !4478)
!4482 = !DILocation(line: 58, column: 70, scope: !4475)
!4483 = !DILocation(line: 58, column: 71, scope: !4475)
!4484 = !DILocation(line: 58, column: 74, scope: !4475)
!4485 = !DILocation(line: 58, column: 92, scope: !4475)
!4486 = distinct !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf9b97491bed6a1d5E", scope: !4405, file: !4404, line: 63, type: !4487, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4490, retainedNodes: !4491)
!4487 = !DISubroutineType(types: !4488)
!4488 = !{!9, !4489}
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryMap", baseType: !4405, size: 64, align: 64, dwarfAddressSpace: 0)
!4490 = !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17hf9b97491bed6a1d5E", scope: !4405, file: !4404, line: 63, type: !4487, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!4491 = !{!4492}
!4492 = !DILocalVariable(name: "self", arg: 1, scope: !4486, file: !4404, line: 63, type: !4489)
!4493 = !DILocation(line: 63, column: 25, scope: !4486)
!4494 = !DILocation(line: 64, column: 9, scope: !4486)
!4495 = !DILocation(line: 65, column: 6, scope: !4486)
!4496 = distinct !DISubprogram(name: "deref", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc3598e2966df9e9fE", scope: !4497, file: !4404, line: 71, type: !4498, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4500)
!4497 = !DINamespace(name: "{impl#1}", scope: !14)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!230, !4489}
!4500 = !{!4501}
!4501 = !DILocalVariable(name: "self", arg: 1, scope: !4496, file: !4404, line: 71, type: !4489)
!4502 = !DILocation(line: 71, column: 14, scope: !4496)
!4503 = !DILocation(line: 72, column: 26, scope: !4496)
!4504 = !DILocation(line: 72, column: 23, scope: !4496)
!4505 = !DILocation(line: 72, column: 22, scope: !4496)
!4506 = !DILocation(line: 73, column: 6, scope: !4496)
!4507 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h7d3840432d4b1d38E", scope: !4508, file: !4404, line: 77, type: !4509, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4511)
!4508 = !DINamespace(name: "{impl#2}", scope: !14)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{!261, !4419}
!4511 = !{!4512, !4513}
!4512 = !DILocalVariable(name: "self", arg: 1, scope: !4507, file: !4404, line: 77, type: !4419)
!4513 = !DILocalVariable(name: "next_index", scope: !4514, file: !4404, line: 78, type: !9, align: 8)
!4514 = distinct !DILexicalBlock(scope: !4507, file: !4404, line: 78, column: 9)
!4515 = !DILocation(line: 77, column: 18, scope: !4507)
!4516 = !DILocation(line: 78, column: 26, scope: !4507)
!4517 = !DILocation(line: 78, column: 13, scope: !4514)
!4518 = !DILocation(line: 79, column: 27, scope: !4514)
!4519 = !DILocation(line: 79, column: 26, scope: !4514)
!4520 = !DILocation(line: 80, column: 6, scope: !4507)
!4521 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17hf1b5de1707c0d38cE", scope: !4522, file: !4404, line: 84, type: !4523, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4525)
!4522 = !DINamespace(name: "{impl#3}", scope: !14)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!358, !4489, !377}
!4525 = !{!4526, !4527}
!4526 = !DILocalVariable(name: "self", arg: 1, scope: !4521, file: !4404, line: 84, type: !4489)
!4527 = !DILocalVariable(name: "f", arg: 2, scope: !4521, file: !4404, line: 84, type: !377)
!4528 = !DILocation(line: 84, column: 12, scope: !4521)
!4529 = !DILocation(line: 84, column: 19, scope: !4521)
!4530 = !DILocation(line: 85, column: 9, scope: !4521)
!4531 = !DILocation(line: 85, column: 32, scope: !4521)
!4532 = !DILocation(line: 86, column: 6, scope: !4521)
!4533 = distinct !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17hd9078b7c7db73b08E", scope: !13, file: !4404, line: 101, type: !4534, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4536)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!13}
!4536 = !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17hd9078b7c7db73b08E", scope: !13, file: !4404, line: 101, type: !4534, scopeLine: 101, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4537 = !DILocation(line: 103, column: 20, scope: !4533)
!4538 = !DILocation(line: 107, column: 26, scope: !4533)
!4539 = !DILocation(line: 102, column: 9, scope: !4533)
!4540 = !{i32 0, i32 15}
!4541 = !DILocation(line: 109, column: 6, scope: !4533)
!4542 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h3e97744cf5f76a75E", scope: !19, file: !4404, line: 132, type: !4543, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4545, retainedNodes: !4546)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!19, !22, !22}
!4545 = !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h3e97744cf5f76a75E", scope: !19, file: !4404, line: 132, type: !4543, scopeLine: 132, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4546 = !{!4547, !4548, !4549}
!4547 = !DILocalVariable(name: "start_addr", arg: 1, scope: !4542, file: !4404, line: 132, type: !22)
!4548 = !DILocalVariable(name: "end_addr", arg: 2, scope: !4542, file: !4404, line: 132, type: !22)
!4549 = !DILocalVariable(name: "last_byte", scope: !4550, file: !4404, line: 133, type: !22, align: 8)
!4550 = distinct !DILexicalBlock(scope: !4542, file: !4404, line: 133, column: 9)
!4551 = !DILocation(line: 132, column: 16, scope: !4542)
!4552 = !DILocation(line: 132, column: 33, scope: !4542)
!4553 = !DILocation(line: 133, column: 25, scope: !4542)
!4554 = !DILocation(line: 133, column: 13, scope: !4550)
!4555 = !DILocation(line: 135, column: 33, scope: !4550)
!4556 = !DILocation(line: 136, column: 31, scope: !4550)
!4557 = !DILocation(line: 134, column: 9, scope: !4550)
!4558 = !DILocation(line: 138, column: 6, scope: !4542)
!4559 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hd615813517ce551aE", scope: !19, file: !4404, line: 141, type: !4560, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4563, retainedNodes: !4564)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!328, !4562}
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4563 = !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17hd615813517ce551aE", scope: !19, file: !4404, line: 141, type: !4560, scopeLine: 141, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4564 = !{!4565}
!4565 = !DILocalVariable(name: "self", arg: 1, scope: !4559, file: !4404, line: 141, type: !4562)
!4566 = !DILocation(line: 141, column: 21, scope: !4559)
!4567 = !DILocation(line: 142, column: 9, scope: !4559)
!4568 = !DILocation(line: 142, column: 36, scope: !4559)
!4569 = !DILocation(line: 143, column: 6, scope: !4559)
!4570 = distinct !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17hdd1cf47dfe31224aE", scope: !19, file: !4404, line: 146, type: !4571, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4573, retainedNodes: !4574)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{!22, !4562}
!4573 = !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17hdd1cf47dfe31224aE", scope: !19, file: !4404, line: 146, type: !4571, scopeLine: 146, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4574 = !{!4575}
!4575 = !DILocalVariable(name: "self", arg: 1, scope: !4570, file: !4404, line: 146, type: !4562)
!4576 = !DILocation(line: 146, column: 23, scope: !4570)
!4577 = !DILocation(line: 147, column: 9, scope: !4570)
!4578 = !DILocation(line: 148, column: 6, scope: !4570)
!4579 = distinct !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h22495d8bed64fc2cE", scope: !19, file: !4404, line: 151, type: !4571, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4580, retainedNodes: !4581)
!4580 = !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h22495d8bed64fc2cE", scope: !19, file: !4404, line: 151, type: !4571, scopeLine: 151, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4581 = !{!4582}
!4582 = !DILocalVariable(name: "self", arg: 1, scope: !4579, file: !4404, line: 151, type: !4562)
!4583 = !DILocation(line: 151, column: 21, scope: !4579)
!4584 = !DILocation(line: 152, column: 9, scope: !4579)
!4585 = !DILocation(line: 153, column: 6, scope: !4579)
!4586 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h1312abfded4f318bE", scope: !4587, file: !4404, line: 157, type: !4588, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4590)
!4587 = !DINamespace(name: "{impl#6}", scope: !14)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{!358, !4562, !377}
!4590 = !{!4591, !4592}
!4591 = !DILocalVariable(name: "self", arg: 1, scope: !4586, file: !4404, line: 157, type: !4562)
!4592 = !DILocalVariable(name: "f", arg: 2, scope: !4586, file: !4404, line: 157, type: !377)
!4593 = !DILocation(line: 157, column: 12, scope: !4586)
!4594 = !DILocation(line: 157, column: 19, scope: !4586)
!4595 = !DILocation(line: 161, column: 13, scope: !4586)
!4596 = !DILocalVariable(name: "x", arg: 1, scope: !4597, file: !4598, line: 108, type: !607)
!4597 = distinct !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt2rt8Argument13new_lower_hex17h3ba98053fcb5e481E", scope: !729, file: !4598, line: 108, type: !4599, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4602, declaration: !4601, retainedNodes: !4604)
!4598 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "fa4076eb10d6ef970d6bf2afd1298bf1")
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!729, !607}
!4601 = !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt2rt8Argument13new_lower_hex17h3ba98053fcb5e481E", scope: !729, file: !4598, line: 108, type: !4599, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4602)
!4602 = !{!4603}
!4603 = !DITemplateTypeParameter(name: "T", type: !22)
!4604 = !{!4596}
!4605 = !DILocation(line: 108, column: 43, scope: !4597, inlinedAt: !4606)
!4606 = distinct !DILocation(line: 158, column: 9, scope: !4586)
!4607 = !DILocalVariable(name: "x", arg: 1, scope: !4608, file: !4598, line: 83, type: !607)
!4608 = distinct !DISubprogram(name: "new<u64>", linkageName: "_ZN4core3fmt2rt8Argument3new17h3471dd3f1334600aE", scope: !729, file: !4598, line: 83, type: !4609, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4602, declaration: !4614, retainedNodes: !4615)
!4609 = !DISubroutineType(types: !4610)
!4610 = !{!729, !607, !4611}
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u64, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !4612, size: 64, align: 64, dwarfAddressSpace: 0)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!358, !607, !377}
!4614 = !DISubprogram(name: "new<u64>", linkageName: "_ZN4core3fmt2rt8Argument3new17h3471dd3f1334600aE", scope: !729, file: !4598, line: 83, type: !4609, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4602)
!4615 = !{!4607, !4616}
!4616 = !DILocalVariable(name: "f", arg: 2, scope: !4608, file: !4598, line: 83, type: !4611)
!4617 = !DILocation(line: 83, column: 19, scope: !4608, inlinedAt: !4618)
!4618 = distinct !DILocation(line: 109, column: 9, scope: !4597, inlinedAt: !4606)
!4619 = !DILocation(line: 83, column: 29, scope: !4608, inlinedAt: !4618)
!4620 = !DILocation(line: 92, column: 18, scope: !4608, inlinedAt: !4618)
!4621 = !DILocation(line: 93, column: 6, scope: !4608, inlinedAt: !4618)
!4622 = !DILocation(line: 109, column: 9, scope: !4597, inlinedAt: !4606)
!4623 = !DILocation(line: 158, column: 9, scope: !4586)
!4624 = !DILocation(line: 162, column: 13, scope: !4586)
!4625 = !DILocation(line: 108, column: 43, scope: !4597, inlinedAt: !4626)
!4626 = distinct !DILocation(line: 158, column: 9, scope: !4586)
!4627 = !DILocation(line: 83, column: 19, scope: !4608, inlinedAt: !4628)
!4628 = distinct !DILocation(line: 109, column: 9, scope: !4597, inlinedAt: !4626)
!4629 = !DILocation(line: 83, column: 29, scope: !4608, inlinedAt: !4628)
!4630 = !DILocation(line: 92, column: 18, scope: !4608, inlinedAt: !4628)
!4631 = !DILocation(line: 93, column: 6, scope: !4608, inlinedAt: !4628)
!4632 = !DILocation(line: 109, column: 9, scope: !4597, inlinedAt: !4626)
!4633 = !{i8 0, i8 4}
!4634 = !{i64 0, i64 3}
!4635 = !DILocalVariable(name: "position", arg: 1, scope: !4636, file: !4598, line: 22, type: !9)
!4636 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt11Placeholder3new17he3b987d9ac5c59aeE", scope: !695, file: !4598, line: 21, type: !4637, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4639, retainedNodes: !4640)
!4637 = !DISubroutineType(types: !4638)
!4638 = !{!695, !9, !382, !68, !27, !702, !702}
!4639 = !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt11Placeholder3new17he3b987d9ac5c59aeE", scope: !695, file: !4598, line: 21, type: !4637, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !24)
!4640 = !{!4635, !4641, !4642, !4643, !4644, !4645}
!4641 = !DILocalVariable(name: "fill", arg: 2, scope: !4636, file: !4598, line: 23, type: !382)
!4642 = !DILocalVariable(name: "align", arg: 3, scope: !4636, file: !4598, line: 24, type: !68)
!4643 = !DILocalVariable(name: "flags", arg: 4, scope: !4636, file: !4598, line: 25, type: !27)
!4644 = !DILocalVariable(name: "precision", arg: 5, scope: !4636, file: !4598, line: 26, type: !702)
!4645 = !DILocalVariable(name: "width", arg: 6, scope: !4636, file: !4598, line: 27, type: !702)
!4646 = !DILocation(line: 22, column: 9, scope: !4636, inlinedAt: !4647)
!4647 = distinct !DILocation(line: 158, column: 9, scope: !4586)
!4648 = !DILocation(line: 23, column: 9, scope: !4636, inlinedAt: !4647)
!4649 = !DILocation(line: 24, column: 9, scope: !4636, inlinedAt: !4647)
!4650 = !DILocation(line: 25, column: 9, scope: !4636, inlinedAt: !4647)
!4651 = !DILocation(line: 26, column: 9, scope: !4636, inlinedAt: !4647)
!4652 = !DILocation(line: 27, column: 9, scope: !4636, inlinedAt: !4647)
!4653 = !DILocation(line: 29, column: 9, scope: !4636, inlinedAt: !4647)
!4654 = !DILocation(line: 22, column: 9, scope: !4636, inlinedAt: !4655)
!4655 = distinct !DILocation(line: 158, column: 9, scope: !4586)
!4656 = !DILocation(line: 23, column: 9, scope: !4636, inlinedAt: !4655)
!4657 = !DILocation(line: 24, column: 9, scope: !4636, inlinedAt: !4655)
!4658 = !DILocation(line: 25, column: 9, scope: !4636, inlinedAt: !4655)
!4659 = !DILocation(line: 26, column: 9, scope: !4636, inlinedAt: !4655)
!4660 = !DILocation(line: 27, column: 9, scope: !4636, inlinedAt: !4655)
!4661 = !DILocation(line: 29, column: 9, scope: !4636, inlinedAt: !4655)
!4662 = !DILocation(line: 164, column: 6, scope: !4586)
!4663 = distinct !DISubprogram(name: "from", linkageName: "_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17heb393fbd0dfdf33cE", scope: !4664, file: !4404, line: 218, type: !4665, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4673)
!4664 = !DINamespace(name: "{impl#7}", scope: !14)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!13, !4667}
!4667 = !DICompositeType(tag: DW_TAG_structure_type, name: "E820MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !4668, templateParams: !24, identifier: "93b1f9c9f728641d12f172e9c560f3bf")
!4668 = !{!4669, !4670, !4671, !4672}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !4667, file: !2, baseType: !22, size: 64, align: 64)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4667, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !4667, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_extended_attributes", scope: !4667, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!4673 = !{!4674, !4675, !4677}
!4674 = !DILocalVariable(name: "region", arg: 1, scope: !4663, file: !4404, line: 218, type: !4667)
!4675 = !DILocalVariable(name: "region_type", scope: !4676, file: !4404, line: 219, type: !26, align: 4)
!4676 = distinct !DILexicalBlock(scope: !4663, file: !4404, line: 219, column: 9)
!4677 = !DILocalVariable(name: "t", scope: !4678, file: !4404, line: 225, type: !27, align: 4)
!4678 = distinct !DILexicalBlock(scope: !4663, file: !4404, line: 225, column: 13)
!4679 = !DILocation(line: 218, column: 13, scope: !4663)
!4680 = !DILocation(line: 219, column: 13, scope: !4676)
!4681 = !DILocation(line: 225, column: 13, scope: !4678)
!4682 = !DILocation(line: 219, column: 27, scope: !4663)
!4683 = !DILocation(line: 225, column: 13, scope: !4663)
!4684 = !DILocalVariable(name: "x", arg: 1, scope: !4685, file: !4598, line: 96, type: !4688)
!4685 = distinct !DISubprogram(name: "new_display<u32>", linkageName: "_ZN4core3fmt2rt8Argument11new_display17h392932c71f2bfebfE", scope: !729, file: !4598, line: 96, type: !4686, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4690, declaration: !4689, retainedNodes: !4692)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{!729, !4688}
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!4689 = !DISubprogram(name: "new_display<u32>", linkageName: "_ZN4core3fmt2rt8Argument11new_display17h392932c71f2bfebfE", scope: !729, file: !4598, line: 96, type: !4686, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4690)
!4690 = !{!4691}
!4691 = !DITemplateTypeParameter(name: "T", type: !27)
!4692 = !{!4684}
!4693 = !DILocation(line: 96, column: 40, scope: !4685, inlinedAt: !4694)
!4694 = distinct !DILocation(line: 225, column: 18, scope: !4678)
!4695 = !DILocalVariable(name: "x", arg: 1, scope: !4696, file: !4598, line: 83, type: !4688)
!4696 = distinct !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt2rt8Argument3new17h8914cfb411d23bceE", scope: !729, file: !4598, line: 83, type: !4697, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !4690, declaration: !4702, retainedNodes: !4703)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{!729, !4688, !4699}
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !4700, size: 64, align: 64, dwarfAddressSpace: 0)
!4700 = !DISubroutineType(types: !4701)
!4701 = !{!358, !4688, !377}
!4702 = !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt2rt8Argument3new17h8914cfb411d23bceE", scope: !729, file: !4598, line: 83, type: !4697, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4690)
!4703 = !{!4695, !4704}
!4704 = !DILocalVariable(name: "f", arg: 2, scope: !4696, file: !4598, line: 83, type: !4699)
!4705 = !DILocation(line: 83, column: 19, scope: !4696, inlinedAt: !4706)
!4706 = distinct !DILocation(line: 97, column: 9, scope: !4685, inlinedAt: !4694)
!4707 = !DILocation(line: 83, column: 29, scope: !4696, inlinedAt: !4706)
!4708 = !DILocation(line: 92, column: 18, scope: !4696, inlinedAt: !4706)
!4709 = !DILocation(line: 93, column: 6, scope: !4696, inlinedAt: !4706)
!4710 = !DILocation(line: 97, column: 9, scope: !4685, inlinedAt: !4694)
!4711 = !DILocation(line: 225, column: 18, scope: !4678)
!4712 = !DILocation(line: 220, column: 18, scope: !4663)
!4713 = !DILocation(line: 221, column: 18, scope: !4663)
!4714 = !DILocation(line: 222, column: 18, scope: !4663)
!4715 = !DILocation(line: 223, column: 18, scope: !4663)
!4716 = !DILocation(line: 224, column: 18, scope: !4663)
!4717 = !DILocation(line: 228, column: 36, scope: !4676)
!4718 = !DILocation(line: 228, column: 55, scope: !4676)
!4719 = !DILocation(line: 228, column: 75, scope: !4676)
!4720 = !DILocation(line: 228, column: 20, scope: !4676)
!4721 = !DILocation(line: 229, column: 13, scope: !4676)
!4722 = !DILocation(line: 227, column: 9, scope: !4676)
!4723 = !DILocation(line: 231, column: 6, scope: !4663)
!4724 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17h70c3250ecad5e398E", scope: !4726, file: !4725, line: 53, type: !4731, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4733, retainedNodes: !4734)
!4725 = !DIFile(filename: "src/bootinfo/mod.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "a171ea6c439575860461f3a713fd0ff5")
!4726 = !DICompositeType(tag: DW_TAG_structure_type, name: "BootInfo", scope: !15, file: !2, size: 12608, align: 64, elements: !4727, templateParams: !24, identifier: "47f3581d2d861f7c684f7fe5727a76d6")
!4727 = !{!4728, !4729, !4730}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "memory_map", scope: !4726, file: !2, baseType: !4405, size: 12352, align: 64)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "tls_template", scope: !4726, file: !2, baseType: !4132, size: 192, align: 64, offset: 12352)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "_non_exhaustive", scope: !4726, file: !2, baseType: !72, size: 8, align: 8, offset: 12544)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!4726, !4405, !4124, !22, !22}
!4733 = !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17h70c3250ecad5e398E", scope: !4726, file: !4725, line: 53, type: !4731, scopeLine: 53, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4734 = !{!4735, !4736, !4737, !4738, !4739}
!4735 = !DILocalVariable(name: "memory_map", arg: 1, scope: !4724, file: !4725, line: 54, type: !4405)
!4736 = !DILocalVariable(name: "tls_template", arg: 2, scope: !4724, file: !4725, line: 55, type: !4124)
!4737 = !DILocalVariable(name: "recursive_page_table_addr", arg: 3, scope: !4724, file: !4725, line: 56, type: !22)
!4738 = !DILocalVariable(name: "physical_memory_offset", arg: 4, scope: !4724, file: !4725, line: 57, type: !22)
!4739 = !DILocalVariable(name: "tls_template", scope: !4740, file: !4725, line: 59, type: !4132, align: 8)
!4740 = distinct !DILexicalBlock(scope: !4724, file: !4725, line: 59, column: 9)
!4741 = !DILocation(line: 54, column: 9, scope: !4724)
!4742 = !DILocation(line: 55, column: 9, scope: !4724)
!4743 = !DILocation(line: 56, column: 9, scope: !4724)
!4744 = !DILocation(line: 57, column: 9, scope: !4724)
!4745 = !DILocation(line: 59, column: 13, scope: !4740)
!4746 = !DILocation(line: 59, column: 51, scope: !4724)
!4747 = !DILocation(line: 59, column: 28, scope: !4724)
!4748 = !DILocation(line: 64, column: 9, scope: !4740)
!4749 = !DILocation(line: 73, column: 6, scope: !4724)
!4750 = distinct !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17h08099e5180a5ef15E", scope: !4726, file: !4725, line: 81, type: !4751, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, templateParams: !24, declaration: !4754, retainedNodes: !4755)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{!4124, !4753}
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::BootInfo", baseType: !4726, size: 64, align: 64, dwarfAddressSpace: 0)
!4754 = !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17h08099e5180a5ef15E", scope: !4726, file: !4725, line: 81, type: !4751, scopeLine: 81, flags: DIFlagPrototyped, spFlags: 0, templateParams: !24)
!4755 = !{!4756}
!4756 = !DILocalVariable(name: "self", arg: 1, scope: !4750, file: !4725, line: 81, type: !4753)
!4757 = !DILocation(line: 81, column: 25, scope: !4750)
!4758 = !DILocation(line: 82, column: 12, scope: !4750)
!4759 = !DILocation(line: 85, column: 13, scope: !4750)
!4760 = !DILocation(line: 82, column: 9, scope: !4750)
!4761 = !DILocation(line: 83, column: 18, scope: !4750)
!4762 = !DILocation(line: 83, column: 13, scope: !4750)
!4763 = !DILocation(line: 87, column: 6, scope: !4750)
!4764 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h3f8332eb316026afE", scope: !4765, file: !4404, line: 90, type: !4766, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4768)
!4765 = !DINamespace(name: "{impl#8}", scope: !14)
!4766 = !DISubroutineType(types: !4767)
!4767 = !{!358, !12, !377}
!4768 = !{!4769, !4770}
!4769 = !DILocalVariable(name: "self", arg: 1, scope: !4764, file: !4404, line: 90, type: !12)
!4770 = !DILocalVariable(name: "f", arg: 2, scope: !4764, file: !4404, line: 90, type: !377)
!4771 = !DILocation(line: 90, column: 10, scope: !4764)
!4772 = !DILocation(line: 96, column: 5, scope: !4764)
!4773 = !DILocation(line: 90, column: 15, scope: !4764)
!4774 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h92390aaa9d0166f9E", scope: !4775, file: !4404, line: 168, type: !4776, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, templateParams: !24, retainedNodes: !4778)
!4775 = !DINamespace(name: "{impl#21}", scope: !14)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{!358, !60, !377}
!4778 = !{!4779, !4780}
!4779 = !DILocalVariable(name: "self", arg: 1, scope: !4774, file: !4404, line: 168, type: !60)
!4780 = !DILocalVariable(name: "f", arg: 2, scope: !4774, file: !4404, line: 168, type: !377)
!4781 = !DILocation(line: 168, column: 10, scope: !4774)
!4782 = !DILocation(line: 168, column: 14, scope: !4774)
!4783 = !DILocation(line: 168, column: 15, scope: !4774)
