; ModuleID = 'bootloader.4c619316-cgu.0'
source_filename = "bootloader.4c619316-cgu.0"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-obuasi-unknown-none"

%"bootinfo::memory_map::MemoryRegion" = type { { i64, i64 }, i32, [1 x i32] }
%"core::ops::range::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, { ptr, i64 } }
%"core::fmt::UnsafeArg" = type { {} }
%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>" = type { %"bootinfo::memory_map::MemoryRegion" }
%"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<bootinfo::memory_map::MemoryRegion>" = type { ptr, {} }
%"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>" = type { [1 x i64] }
%"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]" = type {}
%"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]" = type { { ptr, i64 }, ptr, ptr }
%"core::option::Option<core::fmt::Arguments<'_>>" = type { [2 x i64], ptr, [3 x i64] }
%"bootinfo::TlsTemplate" = type { i64, i64, i64 }
%"core::option::Option<bootinfo::TlsTemplate>::Some" = type { [1 x i64], %"bootinfo::TlsTemplate" }
%"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]" = type {}
%"bootinfo::memory_map::MemoryMap" = type { [64 x %"bootinfo::memory_map::MemoryRegion"], i64 }
%"core::fmt::builders::DebugList<'_, '_>" = type { %"core::fmt::builders::DebugInner<'_, '_>" }
%"core::fmt::builders::DebugInner<'_, '_>" = type { ptr, i8, i8, [6 x i8] }
%"core::fmt::rt::v1::FormatSpec" = type { { i64, i64 }, { i64, i64 }, i32, i32, i8, [7 x i8] }
%"core::fmt::rt::v1::Argument" = type { %"core::fmt::rt::v1::FormatSpec", i64 }
%"bootinfo::memory_map::E820MemoryRegion" = type { i64, i64, i32, i32 }
%"bootinfo::BootInfo" = type { %"bootinfo::memory_map::MemoryMap", %"bootinfo::TlsTemplate", i8, [7 x i8] }
%"core::option::Option<bootinfo::TlsTemplate>" = type { i64, [3 x i64] }

@alloc_fa017189c529f9a37ad81f1b7f28d734 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the range is within the slice" }>, align 1
@alloc_e4c0784e4975da2173a354afd99193ad = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: slice::get_unchecked_mut requires that the range is within the slice" }>, align 1
@alloc_cf71ba46b07f75a509e946b584ee4f31 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs" }>, align 1
@alloc_c92b068cc8d2cd4c50e9488095980e32 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\DA\09\00\007\00\00\00" }>, align 8
@alloc_7ad8e03c2174e39a8f819d6ca6833838 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\DB\09\00\00+\00\00\00" }>, align 8
@str.0 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc_2ca6b8c4026dbf3457d2606f6c47263d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cf71ba46b07f75a509e946b584ee4f31, [16 x i8] c"n\00\00\00\00\00\00\00\DB\09\00\00J\00\00\00" }>, align 8
@alloc_8df0580a595a87d56789d20c7318e185 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_4f979e408ba56e8e0fdc172fb24ef68d = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned aligned and non-null" }>, align 1
@vtable.1 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h749af3c141c3b648E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha840e02953f70767E" }>, align 8, !dbg !0
@alloc_c2ea93c90919bb7b1e482f917e413fa1 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc_bf47d7cf946e324312b7aba9afabb742 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00\9D\01\00\008\00\00\00" }>, align 8
@str.2 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc_91c7fa63c3cfeaa3c795652d5cf060e4 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc_560206a49c61adca6f3f0639a12632eb = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_91c7fa63c3cfeaa3c795652d5cf060e4, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_0e0da1257467e00be4bc17cc4a166d8a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00\9E\01\00\00\0D\00\00\00" }>, align 8
@alloc_3565e73f34d7302748197a3f0bc50374 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c2ea93c90919bb7b1e482f917e413fa1, [16 x i8] c"k\00\00\00\00\00\00\00\91\01\00\00\0D\00\00\00" }>, align 8
@alloc_513570631223a12912d85da2bec3b15a = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc_062d8212fd02b81dce3f023edbf3244d = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs" }>, align 1
@alloc_f5758da710ba897165288b0f4da8acb3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_062d8212fd02b81dce3f023edbf3244d, [16 x i8] c"k\00\00\00\00\00\00\00\E5\02\00\00\0C\00\00\00" }>, align 8
@str.3 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc_8b72e65625de3e221368553edb4591ff = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs" }>, align 1
@alloc_82a295533409787c3e504fb0ce3831ff = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8b72e65625de3e221368553edb4591ff, [16 x i8] c"k\00\00\00\00\00\00\00\A6\04\00\00\05\00\00\00" }>, align 8
@str.4 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc_444495105b9016883a01942a28847d22 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs" }>, align 1
@alloc_50d1e257ccd56aaa3f8677a989ec63c7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_444495105b9016883a01942a28847d22, [16 x i8] c"m\00\00\00\00\00\00\00\CA\01\00\00\1D\00\00\00" }>, align 8
@alloc_29f87e6ac6e7e4317253d26531c5c81c = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc_a8d2d57d37571df30f9c47ba3b3c586b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\AC\03\00\00&\00\00\00" }>, align 8
@str.5 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc_1c99eb2e2429202974a1788dce7f6920 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\AE\03\00\00\09\00\00\00" }>, align 8
@str.6 = internal constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc_aee30a4ba5cd6160a04cfc5ee6f29e2a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\AF\03\00\00\09\00\00\00" }>, align 8
@alloc_546a48d82dbbd37bfd409d4513b73f46 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::swap_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_dbabcbd9c3313ee88be66af0b6b2af23 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_29f87e6ac6e7e4317253d26531c5c81c, [16 x i8] c"k\00\00\00\00\00\00\00\C8\03\00\00\09\00\00\00" }>, align 8
@alloc_981fd9513041e1603a1d1d7b668a749d = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_b7474065d782af00c4610bb4ef55210b = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_20b3d155afd5c58c42e598b7e6d186ef = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc_cc91f7045aeea4ab0f301c62c00dba06 = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_62bc2c890ddc30f006544617e59d1e71 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00#\06\00\00\1A\00\00\00" }>, align 8
@alloc_fad0cd83b7d1858a846a172eb260e593 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc_60ac762d06592b2ab3358175d7a7c295 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_fad0cd83b7d1858a846a172eb260e593, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_96632254c3ae610e82e64a0469a9df2d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00\1E\06\00\00\0D\00\00\00" }>, align 8
@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc_054967ab02808043e6941783e8d3de80 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cc91f7045aeea4ab0f301c62c00dba06, [16 x i8] c"q\00\00\00\00\00\00\00\1C\03\00\00\09\00\00\00" }>, align 8
@alloc_cb50775363ffdd1238910b6e9573721d = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"unsafe precondition(s) violated: ptr::sub_ptr requires `this >= origin`" }>, align 1
@alloc_fddaeef1fe1a23c45402ef8f58614acb = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc_9a72dc1c87ddefcce62e4b5ab68e5150 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\FF" }>, align 1
@alloc_0e767b22ac99e9123f3c482417f77f98 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc_4a6cc2814e9c70d90675aafc22034495 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\DD\06\00\00M\00\00\00" }>, align 8
@alloc_3dc073651148de734d2593768efc16e9 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: slice::split_at_mut_unchecked requires the index to be within the slice" }>, align 1
@alloc_dd0dc542054f5a3bd5e0287046a20794 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: a.len() == n" }>, align 1
@alloc_9bc869464e7f5dcda873bc5fba3167ae = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C3\02\00\00\0D\00\00\00" }>, align 8
@alloc_deedf7aeab1a7c66b5420b58a4093bcc = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: b.len() == n" }>, align 1
@alloc_b8749fb97ee29c7317ad030bd8942a48 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\C4\02\00\00\0D\00\00\00" }>, align 8
@alloc_3aa494a7a9b07e5c1a0696cee8170daa = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CA\02\00\00 \00\00\00" }>, align 8
@alloc_fb8f45380652987d6b5bbea56a8e912e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CA\02\00\00-\00\00\00" }>, align 8
@alloc_2d6a2ee37e528966f03d3441dddee676 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00 \00\00\00" }>, align 8
@alloc_aa932769fb5b51c12790c6d75b182bf2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00-\00\00\00" }>, align 8
@alloc_6014d62b444cee9e42a5ca2bfd6b4613 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CE\02\00\00+\00\00\00" }>, align 8
@alloc_c070e7c146c652ff4ec0b63c99b2e746 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0e767b22ac99e9123f3c482417f77f98, [16 x i8] c"m\00\00\00\00\00\00\00\CF\02\00\00\11\00\00\00" }>, align 8
@alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_140877f72603b53a2926afdc5b6562c1 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"assertion failed: v.len() >= 2" }>, align 1
@alloc_d80990e1774d1c38795ebd415913ef0a = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs" }>, align 1
@alloc_6932146a2b5945f5118e7e865cb7ff4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\\\00\00\00\05\00\00\00" }>, align 8
@alloc_2b18b37ae84d61762f070ebc082ffd36 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\00\00\00F\00\00\00" }>, align 8
@alloc_141337dbddbbf875f1e651a897c1c26f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00'\00\00\00\05\00\00\00" }>, align 8
@alloc_90f4b6dda14e5cb7081926ef9c658315 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00*\00\00\00\0D\00\00\00" }>, align 8
@alloc_e41efc6332efd19972427a8ca6f9ac9d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00G\00\00\00\1A\00\00\00" }>, align 8
@alloc_912dd1c737b966744c5b309cc20a3d47 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\DF\02\00\00\11\00\00\00" }>, align 8
@alloc_7aff2c5e0ce2b115fc6c1e2cef0aaf8b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E0\02\00\00\11\00\00\00" }>, align 8
@alloc_51fd6fd3cd9ef520ddfe39086f06b289 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E1\02\00\00\11\00\00\00" }>, align 8
@alloc_6a8eb4c18787545063c119f92681aeff = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\13\03\00\00\0A\00\00\00" }>, align 8
@alloc_8b1cf5b76b10a43810ba75cdb94336e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\F1\02\00\00\11\00\00\00" }>, align 8
@alloc_4e8855159810091534f04a19bbe30782 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\00\03\00\00\1C\00\00\00" }>, align 8
@alloc_787d88f30b9a4c9abd6abb658d261d97 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\00\03\00\00/\00\00\00" }>, align 8
@alloc_2745df5dada1022057bbf8b1e08b9408 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\BD\02\00\00\13\00\00\00" }>, align 8
@alloc_c3165b226cb3c0c182e30d6993318b09 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\C3\02\00\00+\00\00\00" }>, align 8
@alloc_c938216ce784d5d7b6bb0e8f59c85beb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\C7\02\00\00\11\00\00\00" }>, align 8
@alloc_55987e570b17d50f773e204af1733715 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00\14\00\00\00" }>, align 8
@alloc_dd29033771d55fdf04aba4a1982901e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\CA\02\00\00\0F\00\00\00" }>, align 8
@alloc_f8322b69080b1e19bc4df073038a414d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00l\02\00\00\07\00\00\00" }>, align 8
@alloc_23975e137ecce848c3167e283c742672 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00m\02\00\00\18\00\00\00" }>, align 8
@alloc_3ea9d353dbaea466ca156be00652f893 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00n\02\00\00\16\00\00\00" }>, align 8
@alloc_a23b538f7d9197acefade9a7784184c2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\82\02\00\00\11\00\00\00" }>, align 8
@alloc_3aa499bef66e3a89497706d0904ac653 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\86\02\00\00;\00\00\00" }>, align 8
@alloc_6b88286adc8b79b2ce0db9f94ea83bc3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\87\02\00\00\11\00\00\00" }>, align 8
@alloc_10d6a7449345760a13244dcd4f3e8edd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\98\02\00\00\05\00\00\00" }>, align 8
@alloc_894987bd31137d43dbfbf66922648de6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\90\02\00\00\0D\00\00\00" }>, align 8
@alloc_bae318ebda80fadd5948c94c31acdbd2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\93\02\00\00\0D\00\00\00" }>, align 8
@alloc_fe4e881dfa6c70f91499a9b97cada070 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00_\01\00\00&\00\00\00" }>, align 8
@alloc_2417cbaa5b767dc07fcb426311fbedcd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00e\01\00\00\11\00\00\00" }>, align 8
@alloc_7d4914bfaafcfa4692cc10dc5496d4e2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00s\01\00\00\1B\00\00\00" }>, align 8
@alloc_8221bdf38a3766feb9723f333c95dc9e = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"assertion failed: block_l <= BLOCK && block_r <= BLOCK" }>, align 1
@alloc_d98b9ce84085f5d91faa526ef2b40520 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00u\01\00\00\0D\00\00\00" }>, align 8
@alloc_5d32d2daaec9cf0d402f2dc37af0ea6f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00*\00\00\00" }>, align 8
@alloc_a3f9d5911d83d2dfd6ee66814bbe6049 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"assertion failed: width(l, r) == block_l + block_r" }>, align 1
@alloc_ea197cb372011b0fee90d7558b246bfb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00v\01\00\00\0D\00\00\00" }>, align 8
@alloc_0a48b3a7e93a3fb66a7841c604466c03 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D2\01\00\00*\00\00\00" }>, align 8
@alloc_255f6db4d0c02746fb4a9b785ea6e516 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D6\01\00\007\00\00\00" }>, align 8
@alloc_3fa281490ed5627b0d5acda868d81af0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\01\00\00.\00\00\00" }>, align 8
@alloc_2107e90e8c7dda0adfd21e59e3b7e9ee = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\DB\01\00\000\00\00\00" }>, align 8
@alloc_23d83fb97dc5ddd699c8f80f695d1b3b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\02\02\00\00\09\00\00\00" }>, align 8
@alloc_fbd29d12e7b221b5790588e8407e814c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\19\02\00\00\09\00\00\00" }>, align 8
@alloc_0ba58876d11be66a75ed3c6ebb0e6bf5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\1E\02\00\00$\00\00\00" }>, align 8
@alloc_60cd9f07f649265b0b23f897aad9bad7 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: mem::size_of::<T>() > 0" }>, align 1
@alloc_9dd923649e31f13c3223b59f17507a2e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\01\00\00\09\00\00\00" }>, align 8
@alloc_c103c0ba323341afbed17e7fe7e651ca = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Y\01\00\00\09\00\00\00" }>, align 8
@alloc_bd81c17235b1444753a1935a813b485f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D7\00\00\00K\00\00\00" }>, align 8
@alloc_e743259f65f79dce5fdf7e439c96cb01 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\D8\00\00\00\11\00\00\00" }>, align 8
@alloc_2300fc4e056106188d3f21c349fb8e76 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\10\00\00\00" }>, align 8
@alloc_0cd04c6390f55d83a74a72e18ad99930 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\E7\00\00\00\0B\00\00\00" }>, align 8
@alloc_5f37f9a166db798315b708b1541f42a2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\00,\00\00\00" }>, align 8
@alloc_51848abd31708fd9bd4e978ad4e2fdf6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EB\00\00\004\00\00\00" }>, align 8
@alloc_59f135123cded1fb506d3f148328939a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\EE\00\00\00-\00\00\00" }>, align 8
@alloc_5429279aa16fa0cdfc25e6fc8726a06a = private unnamed_addr constant <{ [46 x i8] }> <{ [46 x i8] c"assertion failed: offset != 0 && offset <= len" }>, align 1
@alloc_99bb945c879f5888798b28005543a365 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\9B\00\00\00\05\00\00\00" }>, align 8
@alloc_73eebdc85b9e117e5d0f01368c59f59c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\A3\00\00\00\1E\00\00\00" }>, align 8
@alloc_6973cb22fd5a814eff7046b5b9169c77 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"assertion failed: offset != 0 && offset <= len && len >= 2" }>, align 1
@alloc_15caf4948137b9f7be8cedfe4929bfd3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\B4\00\00\00\05\00\00\00" }>, align 8
@alloc_9da74b8166775a21c862af0758b35f3d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\BD\00\00\00\1E\00\00\00" }>, align 8
@alloc_afed1504fcd128c4005dc410e4c81be0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00?\03\00\00\0D\00\00\00" }>, align 8
@alloc_587605405deda51184d8e058ecd3dd79 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00S\03\00\00\1D\00\00\00" }>, align 8
@alloc_696cf6b9c96fa15d1a2bc76997b92dc8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00W\03\00\00\1A\00\00\00" }>, align 8
@alloc_6a2abb486c72767951ddbfabb5cef306 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\03\00\00&\00\00\00" }>, align 8
@alloc_971270e5ffee50b341d575bd26c9235e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00b\03\00\00\1F\00\00\00" }>, align 8
@alloc_06bcb3e9440cff471acdc9917714413b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00c\03\00\00$\00\00\00" }>, align 8
@alloc_f8fe30ccfa6c382fc0c6802f54db9165 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00d\03\00\00\16\00\00\00" }>, align 8
@alloc_dc7cc06f65f47d89307805f9ed1e1cb4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00 \01\00\00\0B\00\00\00" }>, align 8
@alloc_218d542ba7d42d9731521fd943356c38 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00!\01\00\00\18\00\00\00" }>, align 8
@alloc_8c633453631874cfb45135c562495182 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\01\01\00\00\1D\00\00\00" }>, align 8
@alloc_cced75eb33ad0d231589a125c7f2c71e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\07\01\00\00\10\00\00\00" }>, align 8
@alloc_02d41e7169598a3cfcfd3f0d1c833ec2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00#\00\00\00" }>, align 8
@alloc_794be56d42be9995e3a84c84d26159ed = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\000\00\00\00" }>, align 8
@alloc_d32b57d7e285e3b164a125d44291af3f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00.\00\00\00" }>, align 8
@alloc_3f7ac4164e6f54924783af0ed6bc3c8d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0B\01\00\00\11\00\00\00" }>, align 8
@alloc_5714221f35142e87516e8a17190398c5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00\1A\00\00\00" }>, align 8
@alloc_8b3b0b984669970c12a2c2d899b23d16 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\0F\01\00\00$\00\00\00" }>, align 8
@alloc_4685547f2c3cd5dc1819afd3ce6280d4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\14\01\00\00\0F\00\00\00" }>, align 8
@alloc_a32d8ca4e4d506b0d34a470e4dcb5cd1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\006\02\00\00\0B\00\00\00" }>, align 8
@alloc_e52ab9305e2b15d74c4e9ac02c87db27 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\007\02\00\00\1C\00\00\00" }>, align 8
@alloc_0b2a738361d208826a072b92b3acda46 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\008\02\00\00\1A\00\00\00" }>, align 8
@alloc_96c6545aa6432add279027414fe61766 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00M\02\00\00\11\00\00\00" }>, align 8
@alloc_0b6e8a57da681e1fb7c4d0e2204e6a73 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00Q\02\00\005\00\00\00" }>, align 8
@alloc_a38e39bd8e066eb11cb79be2a1a30355 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00R\02\00\00\11\00\00\00" }>, align 8
@alloc_b0c68aa41aa72af376e4904f7447f27d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00'\00\00\00" }>, align 8
@alloc_b173b94e8487e85973e5816a197e44e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00V\02\00\00\0A\00\00\00" }>, align 8
@alloc_62f31cc339340f8d2589d3fbbff1b89f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00^\02\00\00\07\00\00\00" }>, align 8
@alloc_da17763e772b00039467b49b69f200eb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d80990e1774d1c38795ebd415913ef0a, [16 x i8] c"n\00\00\00\00\00\00\00\7F\03\00\00\11\00\00\00" }>, align 8
@alloc_b3b3c2a7efcea294ef431b7ed1abebea = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the index is within the slice" }>, align 1
@alloc_cb9e1adc7c2835de63b1ee25a132c405 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs" }>, align 1
@alloc_0943d9cf8c1b2e3a95fc7ea34abb4c1f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cb9e1adc7c2835de63b1ee25a132c405, [16 x i8] c"n\00\00\00\00\00\00\00\81\00\00\00\01\00\00\00" }>, align 8
@alloc_377fe4797e3690987ab15f0122f4880b = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"too many memory regions in memory map" }>, align 1
@alloc_7d15286e500c88a119425ae53316340e = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs" }>, align 1
@alloc_7196c88dea27a90737fe52164bfa6d4b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\1C\00\00\00\09\00\00\00" }>, align 8
@alloc_e65e0ba17a4d9de8b42e16f5ae86b726 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00 \00\00\00\09\00\00\00" }>, align 8
@alloc_6248fd711ab5313acabe549160484394 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00!\00\00\00\09\00\00\00" }>, align 8
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc_bc412f3c128804cf7932bd162091bc4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00H\00\00\00\0A\00\00\00" }>, align 8
@alloc_db57840325994cb1e9e58dfeb27e1cf2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00O\00\00\00\0E\00\00\00" }>, align 8
@alloc_cad8f68633be23a5a8047bc131d14ec3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\85\00\00\00\19\00\00\00" }>, align 8
@alloc_9e0090e7731cd791b1d2228aa613acc1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\88\00\00\00\1F\00\00\00" }>, align 8
@alloc_57ce308cfbee0eeaa37d0e2ac37f242e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\93\00\00\00\09\00\00\00" }>, align 8
@alloc_4848cdfc410b3d9eebbe30a8648bbf6f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\98\00\00\00\09\00\00\00" }>, align 8
@alloc_67fee3923a1253e576603db2a7cc3769 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"FrameRange(" }>, align 1
@alloc_07656b3a0de61ce5c628545e169e4a19 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".." }>, align 1
@alloc_9e3f62b0e6490cc45676dc85f910c2d0 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc_b835a9d6c252fc7d7d9309678c4406b9 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_67fee3923a1253e576603db2a7cc3769, [8 x i8] c"\0B\00\00\00\00\00\00\00", ptr @alloc_07656b3a0de61ce5c628545e169e4a19, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_4ca1ac426b102a9acc7fcf913cf4c660 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"invalid region type " }>, align 1
@alloc_0a0c8f921f96ace4b9d73a9fb1f3a7e8 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_4ca1ac426b102a9acc7fcf913cf4c660, [8 x i8] c"\14\00\00\00\00\00\00\00" }>, align 8
@alloc_7aa2ce3965daa798a811db4359705d8b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E1\00\00\00\12\00\00\00" }>, align 8
@alloc_82eaa0d65834937aa85ffd9cf79e73a5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d15286e500c88a119425ae53316340e, [16 x i8] c"l\00\00\00\00\00\00\00\E4\00\00\007\00\00\00" }>, align 8
@alloc_2fa382d66c8b05cee83d1e636a456d83 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"MemoryRegion" }>, align 1
@alloc_c6d312f4fb2564cdde1868738b40e953 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"range" }>, align 1
@vtable.7 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17hbe46a727592d2381E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h9cd311b58a6b23e2E" }>, align 8, !dbg !44
@alloc_24a09d864e93eaea8a967d85ad5fb14b = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"region_type" }>, align 1
@vtable.8 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h00bb43a2928ed5a5E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd6cd9195c5fd3845E" }>, align 8, !dbg !52
@alloc_4f458a5ac3a6382b3750f993ab870080 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"NonExhaustive" }>, align 1
@alloc_3faf0b3374c02c8ecbb0aba47045e793 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Package" }>, align 1
@alloc_1f9c4cc73f4140a97f2cf1f721646a68 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"BootInfo" }>, align 1
@alloc_59ba7b9f7211443cd55a366616eef46a = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc_296c708f84ba4aacbf601faaf01ee90e = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"FrameZero" }>, align 1
@alloc_88f77a4216025d9c2616c4e0631b580d = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"Bootloader" }>, align 1
@alloc_84113867da1e74b2269b5cf897cae626 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"PageTable" }>, align 1
@alloc_272cabb5c5fb66cc8e055c6a08dd5a38 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"KernelStack" }>, align 1
@alloc_bfff067230aa23bc581d3ad54a803735 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Kernel" }>, align 1
@alloc_2db2f360d33be2fea5593ededc5fb904 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"BadMemory" }>, align 1
@alloc_497f8f871d9b9bd5767a37917b988618 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"AcpiNvs" }>, align 1
@alloc_405580fa38aa12693d369698203e043e = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"AcpiReclaimable" }>, align 1
@alloc_f09f4d0dabebc98449d61db8d60067bb = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Reserved" }>, align 1
@alloc_3e93a37ed61282b1c76f7355bd470201 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"InUse" }>, align 1
@alloc_3c5b86a9b7fa1d302afea08936e483c5 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Usable" }>, align 1
@alloc_bee533f45c59e636f24e3b92e9dcf8a1 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"E820MemoryRegion" }>, align 1
@alloc_e896abd190c076ac3d64221d9ae37a51 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"start_addr" }>, align 1
@vtable.9 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17hf7c86fa446e088a4E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h1603b60bba44f0f1E" }>, align 8, !dbg !61
@alloc_f92b1a49cd2fef011d7606f6333298f2 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"len" }>, align 1
@vtable.a = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17h208e4315a370da61E", [16 x i8] c"\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hea2ff610b2a3984aE" }>, align 8, !dbg !69
@alloc_3453f215b747c0edd0eebf0fbcea5172 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"acpi_extended_attributes" }>, align 1
@vtable.b = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17hb29ede95f2e852e7E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h03207b162034f1bcE" }>, align 8, !dbg !77
@alloc_9edc7a92f8d25561ab6dc7613f63189d = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"memory_map" }>, align 1
@vtable.c = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17h9f8456f6721d4ab0E", [16 x i8] c"\08\06\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h718019e44c05edf8E" }>, align 8, !dbg !86
@alloc_1cbcc15d14c439465e35578ac36229c9 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"tls_template" }>, align 1
@vtable.d = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17ha0142110463679f0E", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h86ced365e7ce4c2eE" }>, align 8, !dbg !101
@alloc_b0bb0c7a0f8be091d3fc1c11116fce9b = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"_non_exhaustive" }>, align 1
@vtable.e = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h56648f426ae11b3dE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h65f399967d7391c0E" }>, align 8, !dbg !114
@alloc_db9f6246386b35b655b2a4a0bfe4b5d7 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"TlsTemplate" }>, align 1
@alloc_586126a6b84f2dd36fa1e3b3e4c38ef1 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"file_size" }>, align 1
@alloc_6a7e1d6cb9743b05f95a08c478d87c6e = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"mem_size" }>, align 1
@vtable.f = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h063f7adf094db454E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h91a47dc815968b8cE" }>, align 8, !dbg !124

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2d47314f2b84b306E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !163 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %new_len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !184, metadata !DIExpression()), !dbg !192
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !185, metadata !DIExpression()), !dbg !193
  call void @llvm.dbg.declare(metadata ptr %this, metadata !186, metadata !DIExpression()), !dbg !194
  store i64 %self.0, ptr %this, align 8, !dbg !195
  %6 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !195
  store i64 %self.1, ptr %6, align 8, !dbg !195
  br i1 true, label %bb1, label %bb2, !dbg !196

bb2:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h1ff5ce516cbba997E.exit", %start
  %7 = sub nuw i64 %self.1, %self.0, !dbg !197
  store i64 %7, ptr %1, align 8, !dbg !197
  %new_len = load i64, ptr %1, align 8, !dbg !197, !noundef !24
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !197
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !188, metadata !DIExpression()), !dbg !198
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_11 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h54c6b9f4248a570dE"(ptr %slice.0, i64 %slice.1) #10, !dbg !199
  store ptr %_11, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !200, metadata !DIExpression()), !dbg !211
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !210, metadata !DIExpression()), !dbg !213
  store ptr %_11, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !214, metadata !DIExpression()), !dbg !221
  store i64 %self.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !220, metadata !DIExpression()), !dbg !223
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %self.0, !dbg !224
  store ptr %8, ptr %0, align 8, !dbg !224
  %9 = load ptr, ptr %0, align 8, !dbg !224, !noundef !24
; call core::ptr::slice_from_raw_parts
  %10 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hb93b12de4d910fe0E(ptr %9, i64 %new_len) #10, !dbg !225
  %11 = extractvalue { ptr, i64 } %10, 0, !dbg !225
  %12 = extractvalue { ptr, i64 } %10, 1, !dbg !225
  %13 = insertvalue { ptr, i64 } poison, ptr %11, 0, !dbg !226
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !226
  ret { ptr, i64 } %14, !dbg !226

bb1:                                              ; preds = %start
  %15 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !196
  %16 = load i64, ptr %15, align 8, !dbg !196, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !196
  %18 = load i64, ptr %17, align 8, !dbg !196, !noundef !24
  %19 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !196
  store i64 %16, ptr %19, align 8, !dbg !196
  %20 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !196
  store i64 %18, ptr %20, align 8, !dbg !196
  %21 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !196
  %22 = getelementptr inbounds { ptr, i64 }, ptr %21, i32 0, i32 0, !dbg !196
  store ptr %slice.0, ptr %22, align 8, !dbg !196
  %23 = getelementptr inbounds { ptr, i64 }, ptr %21, i32 0, i32 1, !dbg !196
  store i64 %slice.1, ptr %23, align 8, !dbg !196
  %24 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !196
  %25 = load i64, ptr %24, align 8, !dbg !196, !noundef !24
  %26 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !196
  %27 = load i64, ptr %26, align 8, !dbg !196, !noundef !24
  %28 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !196
  %29 = getelementptr inbounds { ptr, i64 }, ptr %28, i32 0, i32 0, !dbg !196
  %30 = load ptr, ptr %29, align 8, !dbg !196, !noundef !24
  %31 = getelementptr inbounds { ptr, i64 }, ptr %28, i32 0, i32 1, !dbg !196
  %32 = load i64, ptr %31, align 8, !dbg !196, !noundef !24
  store i64 %25, ptr %this.dbg.spill.i, align 8
  %33 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %27, ptr %33, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !227, metadata !DIExpression()), !dbg !235
  store ptr %30, ptr %slice.dbg.spill.i, align 8
  %34 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %32, ptr %34, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !234, metadata !DIExpression()), !dbg !235
  %_5.i = icmp uge i64 %27, %25, !dbg !237
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !237

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !237
  br label %bb3.i, !dbg !237

bb2.i:                                            ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h350a4060caf8200cE"(ptr %30, i64 %32) #10, !dbg !239
  %_8.i = icmp ule i64 %27, %_10.i, !dbg !240
  %35 = zext i1 %_8.i to i8, !dbg !237
  store i8 %35, ptr %_4.i, align 1, !dbg !237
  br label %bb3.i, !dbg !237

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %36 = load i8, ptr %_4.i, align 1, !dbg !241, !range !242, !noundef !24
  %37 = trunc i8 %36 to i1, !dbg !241
  %_3.i = xor i1 %37, true, !dbg !241
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h1ff5ce516cbba997E.exit", !dbg !241

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_fa017189c529f9a37ad81f1b7f28d734, i64 97) #11, !dbg !243
  unreachable, !dbg !243

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h1ff5ce516cbba997E.exit": ; preds = %bb3.i
  br label %bb2, !dbg !196
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2ce56c62d1d071b6E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !244 {
start:
  %self.dbg.spill.i5 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i4 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %new_len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !252, metadata !DIExpression()), !dbg !258
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !253, metadata !DIExpression()), !dbg !259
  call void @llvm.dbg.declare(metadata ptr %this, metadata !254, metadata !DIExpression()), !dbg !260
  store i64 %self.0, ptr %this, align 8, !dbg !261
  %6 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !261
  store i64 %self.1, ptr %6, align 8, !dbg !261
  br i1 true, label %bb1, label %bb2, !dbg !262

bb2:                                              ; preds = %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h19713aa0ec311f3bE.exit", %start
  %7 = sub nuw i64 %self.1, %self.0, !dbg !263
  store i64 %7, ptr %1, align 8, !dbg !263
  %new_len = load i64, ptr %1, align 8, !dbg !263, !noundef !24
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !263
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !256, metadata !DIExpression()), !dbg !264
  store ptr %slice.0, ptr %self.dbg.spill.i4, align 8
  %8 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i4, i32 0, i32 1
  store i64 %slice.1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !265, metadata !DIExpression()), !dbg !274
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !276, metadata !DIExpression()), !dbg !283
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !282, metadata !DIExpression()), !dbg !285
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !286, metadata !DIExpression()), !dbg !292
  store i64 %self.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !291, metadata !DIExpression()), !dbg !294
  %9 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %self.0, !dbg !295
  store ptr %9, ptr %0, align 8, !dbg !295
  %_3.i3 = load ptr, ptr %0, align 8, !dbg !295, !noundef !24
; call core::ptr::slice_from_raw_parts_mut
  %10 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h72e5f39bb23cac74E(ptr %_3.i3, i64 %new_len) #10, !dbg !296
  %11 = extractvalue { ptr, i64 } %10, 0, !dbg !296
  %12 = extractvalue { ptr, i64 } %10, 1, !dbg !296
  %13 = insertvalue { ptr, i64 } poison, ptr %11, 0, !dbg !297
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !297
  ret { ptr, i64 } %14, !dbg !297

bb1:                                              ; preds = %start
  %15 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !262
  %16 = load i64, ptr %15, align 8, !dbg !262, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !262
  %18 = load i64, ptr %17, align 8, !dbg !262, !noundef !24
  %19 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !262
  store i64 %16, ptr %19, align 8, !dbg !262
  %20 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !262
  store i64 %18, ptr %20, align 8, !dbg !262
  %21 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !262
  %22 = getelementptr inbounds { ptr, i64 }, ptr %21, i32 0, i32 0, !dbg !262
  store ptr %slice.0, ptr %22, align 8, !dbg !262
  %23 = getelementptr inbounds { ptr, i64 }, ptr %21, i32 0, i32 1, !dbg !262
  store i64 %slice.1, ptr %23, align 8, !dbg !262
  %24 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !262
  %25 = load i64, ptr %24, align 8, !dbg !262, !noundef !24
  %26 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !262
  %27 = load i64, ptr %26, align 8, !dbg !262, !noundef !24
  %28 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_6, i32 0, i32 1, !dbg !262
  %29 = getelementptr inbounds { ptr, i64 }, ptr %28, i32 0, i32 0, !dbg !262
  %30 = load ptr, ptr %29, align 8, !dbg !262, !noundef !24
  %31 = getelementptr inbounds { ptr, i64 }, ptr %28, i32 0, i32 1, !dbg !262
  %32 = load i64, ptr %31, align 8, !dbg !262, !noundef !24
  store i64 %25, ptr %this.dbg.spill.i, align 8
  %33 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %27, ptr %33, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !298, metadata !DIExpression()), !dbg !305
  store ptr %30, ptr %slice.dbg.spill.i, align 8
  %34 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %32, ptr %34, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !304, metadata !DIExpression()), !dbg !305
  %_5.i = icmp uge i64 %27, %25, !dbg !307
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !307

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !307
  br label %bb3.i, !dbg !307

bb2.i:                                            ; preds = %bb1
  store ptr %30, ptr %self.dbg.spill.i5, align 8
  %35 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i5, i32 0, i32 1
  store i64 %32, ptr %35, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !309, metadata !DIExpression()), !dbg !314
; call core::ptr::metadata::metadata
  %36 = call i64 @_ZN4core3ptr8metadata8metadata17h4fc945275518d4ceE(ptr %30, i64 %32) #10, !dbg !316
  %_8.i = icmp ule i64 %27, %36, !dbg !317
  %37 = zext i1 %_8.i to i8, !dbg !307
  store i8 %37, ptr %_4.i, align 1, !dbg !307
  br label %bb3.i, !dbg !307

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %38 = load i8, ptr %_4.i, align 1, !dbg !318, !range !242, !noundef !24
  %39 = trunc i8 %38 to i1, !dbg !318
  %_3.i = xor i1 %39, true, !dbg !318
  br i1 %_3.i, label %bb5.i, label %"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h19713aa0ec311f3bE.exit", !dbg !318

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_e4c0784e4975da2173a354afd99193ad, i64 101) #11, !dbg !319
  unreachable, !dbg !319

"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h19713aa0ec311f3bE.exit": ; preds = %bb3.i
  br label %bb2, !dbg !262
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17haff5e48139e6d51eE"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !320 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !341, metadata !DIExpression()), !dbg !343
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !342, metadata !DIExpression()), !dbg !344
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !345
  br i1 %_3, label %bb1, label %bb2, !dbg !345

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !346
  br i1 %_9, label %bb3, label %bb4, !dbg !346

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h3a73883734c7d871E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !347
  unreachable, !dbg !347

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2d47314f2b84b306E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !348
  %_15.0 = extractvalue { ptr, i64 } %5, 0, !dbg !348
  %_15.1 = extractvalue { ptr, i64 } %5, 1, !dbg !348
  %6 = insertvalue { ptr, i64 } poison, ptr %_15.0, 0, !dbg !349
  %7 = insertvalue { ptr, i64 } %6, i64 %_15.1, 1, !dbg !349
  ret { ptr, i64 } %7, !dbg !349

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hac0fdec05618e01fE(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !350
  unreachable, !dbg !350
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf93e08869586640aE"(i64 %self.0, i64 %self.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !351 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !359, metadata !DIExpression()), !dbg !361
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !360, metadata !DIExpression()), !dbg !362
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !363
  br i1 %_3, label %bb1, label %bb2, !dbg !363

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !364
  br i1 %_9, label %bb3, label %bb4, !dbg !364

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h3a73883734c7d871E(i64 %self.0, i64 %self.1, ptr align 8 %0) #11, !dbg !365
  unreachable, !dbg !365

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2ce56c62d1d071b6E"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) #10, !dbg !366
  %_17.0 = extractvalue { ptr, i64 } %5, 0, !dbg !366
  %_17.1 = extractvalue { ptr, i64 } %5, 1, !dbg !366
  %6 = insertvalue { ptr, i64 } poison, ptr %_17.0, 0, !dbg !367
  %7 = insertvalue { ptr, i64 } %6, i64 %_17.1, 1, !dbg !367
  ret { ptr, i64 } %7, !dbg !367

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hac0fdec05618e01fE(i64 %self.1, i64 %slice.1, ptr align 8 %0) #11, !dbg !368
  unreachable, !dbg !368
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd9bac579f2e3e23fE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !369 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !377, metadata !DIExpression()), !dbg !379
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !378, metadata !DIExpression()), !dbg !380
  store i64 0, ptr %_4, align 8, !dbg !381
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !381
  store i64 %self, ptr %3, align 8, !dbg !381
  %4 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !381
  %5 = load i64, ptr %4, align 8, !dbg !381, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !381
  %7 = load i64, ptr %6, align 8, !dbg !381, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf93e08869586640aE"(i64 %5, i64 %7, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !381
  %_3.0 = extractvalue { ptr, i64 } %8, 0, !dbg !381
  %_3.1 = extractvalue { ptr, i64 } %8, 1, !dbg !381
  %9 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !382
  %10 = insertvalue { ptr, i64 } %9, i64 %_3.1, 1, !dbg !382
  ret { ptr, i64 } %10, !dbg !382
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h0358784fea02884dE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !383 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !391, metadata !DIExpression()), !dbg !393
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !392, metadata !DIExpression()), !dbg !394
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !309, metadata !DIExpression()), !dbg !395
; call core::ptr::metadata::metadata
  %3 = call i64 @_ZN4core3ptr8metadata8metadata17h4fc945275518d4ceE(ptr %slice.0, i64 %slice.1) #10, !dbg !397
  store i64 %self, ptr %_3, align 8, !dbg !398
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !398
  store i64 %3, ptr %4, align 8, !dbg !398
  %5 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !398
  %6 = load i64, ptr %5, align 8, !dbg !398, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !398
  %8 = load i64, ptr %7, align 8, !dbg !398, !noundef !24
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %9 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2ce56c62d1d071b6E"(i64 %6, i64 %8, ptr %slice.0, i64 %slice.1) #10, !dbg !398
  %10 = extractvalue { ptr, i64 } %9, 0, !dbg !398
  %11 = extractvalue { ptr, i64 } %9, 1, !dbg !398
  %12 = insertvalue { ptr, i64 } poison, ptr %10, 0, !dbg !399
  %13 = insertvalue { ptr, i64 } %12, i64 %11, 1, !dbg !399
  ret { ptr, i64 } %13, !dbg !399
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd547e1811f3e4269E"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !400 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !404, metadata !DIExpression()), !dbg !406
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !405, metadata !DIExpression()), !dbg !407
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !408
  br i1 %_3, label %bb1, label %bb2, !dbg !408

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h0358784fea02884dE"(i64 %self, ptr %slice.0, i64 %slice.1) #10, !dbg !409
  %_11.0 = extractvalue { ptr, i64 } %3, 0, !dbg !409
  %_11.1 = extractvalue { ptr, i64 } %3, 1, !dbg !409
  %4 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0, !dbg !410
  %5 = insertvalue { ptr, i64 } %4, i64 %_11.1, 1, !dbg !410
  ret { ptr, i64 } %5, !dbg !410

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17he5dc540bc7c1eda1E(i64 %self, i64 %slice.1, ptr align 8 %0) #11, !dbg !411
  unreachable, !dbg !411
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc4ce3d4532c78366E"(ptr %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !412 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8, !dbg !425
  call void @llvm.dbg.declare(metadata ptr %self, metadata !423, metadata !DIExpression()), !dbg !425
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !424, metadata !DIExpression()), !dbg !426
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17hc84d02dca1ce1660E"(ptr align 8 %self) #10, !dbg !427
  %_4 = load i64, ptr %_5, align 8, !dbg !428, !noundef !24
  %_3 = icmp eq i64 %_4, -1, !dbg !428
  br i1 %_3, label %bb2, label %bb3, !dbg !428

bb3:                                              ; preds = %start
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %3 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4384b7d931bb2e10E"(ptr %self) #10, !dbg !429
  %_9.0 = extractvalue { i64, i64 } %3, 0, !dbg !429
  %_9.1 = extractvalue { i64, i64 } %3, 1, !dbg !429
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf93e08869586640aE"(i64 %_9.0, i64 %_9.1, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !429
  %_8.0 = extractvalue { ptr, i64 } %4, 0, !dbg !429
  %_8.1 = extractvalue { ptr, i64 } %4, 1, !dbg !429
  %5 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0, !dbg !430
  %6 = insertvalue { ptr, i64 } %5, i64 %_8.1, 1, !dbg !430
  ret { ptr, i64 } %6, !dbg !430

bb2:                                              ; preds = %start
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17h6f79fc3290077011E(ptr align 8 %0) #11, !dbg !431
  unreachable, !dbg !431
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h0a361e9ac236b6adE"(i64 %self, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 !dbg !432 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !440, metadata !DIExpression()), !dbg !442
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !441, metadata !DIExpression()), !dbg !443
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h6e1589f1e89e1696E"(ptr sret(%"core::ops::range::RangeInclusive<usize>") %_4, i64 0, i64 %self) #10, !dbg !444
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc4ce3d4532c78366E"(ptr %_4, ptr align 8 %slice.0, i64 %slice.1, ptr align 8 %0) #10, !dbg !444
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !444
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !444
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !445
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !445
  ret { ptr, i64 } %5, !dbg !445
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha840e02953f70767E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !446 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !505, metadata !DIExpression()), !dbg !507
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !506, metadata !DIExpression()), !dbg !508
  %_3 = load ptr, ptr %self, align 8, !dbg !509, !nonnull !24, !align !510, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h771e7cc3aaff61b4E"(ptr align 8 %_3, ptr align 8 %f) #10, !dbg !511
  ret i1 %0, !dbg !512
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd6cd9195c5fd3845E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !513 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !518, metadata !DIExpression()), !dbg !522
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !519, metadata !DIExpression()), !dbg !523
  %_3 = load ptr, ptr %self, align 8, !dbg !524, !nonnull !24, !align !525, !noundef !24
; call <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h942619d28359881eE"(ptr align 4 %_3, ptr align 8 %f) #10, !dbg !526
  ret i1 %0, !dbg !527
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hde59f38a0bf7fb53E(ptr %src, ptr %dst, i64 %count) unnamed_addr #1 !dbg !528 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %diff = alloca i64, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !533, metadata !DIExpression()), !dbg !544
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !534, metadata !DIExpression()), !dbg !545
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !535, metadata !DIExpression()), !dbg !546
  call void @llvm.dbg.declare(metadata ptr %diff, metadata !542, metadata !DIExpression()), !dbg !547
  store ptr %src, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !548, metadata !DIExpression()), !dbg !553
  store ptr %src, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !555, metadata !DIExpression()), !dbg !562
  %0 = ptrtoint ptr %src to i64, !dbg !564
  store i64 %0, ptr %src_usize.dbg.spill, align 8, !dbg !565
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !536, metadata !DIExpression()), !dbg !566
  store ptr %dst, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !548, metadata !DIExpression()), !dbg !567
  store ptr %dst, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !555, metadata !DIExpression()), !dbg !569
  %1 = ptrtoint ptr %dst to i64, !dbg !571
  store i64 %1, ptr %dst_usize.dbg.spill, align 8, !dbg !572
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !538, metadata !DIExpression()), !dbg !573
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h189dca2a0ce59f54E"(i64 24, i64 %count) #10, !dbg !574
  %_7.0 = extractvalue { i64, i64 } %2, 0, !dbg !574
  %_7.1 = extractvalue { i64, i64 } %2, 1, !dbg !574
; call core::option::Option<T>::unwrap
  %size = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h6b9c7dcddc3eb64aE"(i64 %_7.0, i64 %_7.1, ptr align 8 @alloc_c92b068cc8d2cd4c50e9488095980e32) #10, !dbg !574
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !574
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !540, metadata !DIExpression()), !dbg !575
  %_10 = icmp ugt i64 %0, %1, !dbg !576
  br i1 %_10, label %bb6, label %bb8, !dbg !576

bb8:                                              ; preds = %start
  %_18.0 = sub i64 %1, %0, !dbg !577
  %_18.1 = icmp ult i64 %1, %0, !dbg !577
  %3 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !577
  br i1 %3, label %panic1, label %bb9, !dbg !577

bb6:                                              ; preds = %start
  %_15.0 = sub i64 %0, %1, !dbg !578
  %_15.1 = icmp ult i64 %0, %1, !dbg !578
  %4 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !578
  br i1 %4, label %panic, label %bb7, !dbg !578

bb7:                                              ; preds = %bb6
  store i64 %_15.0, ptr %diff, align 8, !dbg !578
  br label %bb10, !dbg !579

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_7ad8e03c2174e39a8f819d6ca6833838) #11, !dbg !578
  unreachable, !dbg !578

bb10:                                             ; preds = %bb9, %bb7
  %_19 = load i64, ptr %diff, align 8, !dbg !580, !noundef !24
  %5 = icmp uge i64 %_19, %size, !dbg !580
  ret i1 %5, !dbg !581

bb9:                                              ; preds = %bb8
  store i64 %_18.0, ptr %diff, align 8, !dbg !577
  br label %bb10, !dbg !579

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2ca6b8c4026dbf3457d2606f6c47263d) #11, !dbg !577
  unreachable, !dbg !577
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !582 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !586, metadata !DIExpression()), !dbg !589
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !587, metadata !DIExpression()), !dbg !590
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !588, metadata !DIExpression()), !dbg !591
  br i1 true, label %bb1, label %bb2, !dbg !592

bb2:                                              ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h9f39d8379615f03aE.exit, %start
  %0 = mul i64 %count, 24, !dbg !593
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !593
  ret void, !dbg !594

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !592
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !592
  store ptr %dst, ptr %1, align 8, !dbg !592
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !592
  store i64 %count, ptr %2, align 8, !dbg !592
  %3 = load ptr, ptr %_6, align 8, !dbg !592, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !592
  %5 = load ptr, ptr %4, align 8, !dbg !592, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !592
  %7 = load i64, ptr %6, align 8, !dbg !592, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !595, metadata !DIExpression()), !dbg !601
  store ptr %5, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !599, metadata !DIExpression()), !dbg !601
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !600, metadata !DIExpression()), !dbg !601
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %3) #10, !dbg !603
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !603

bb4.i:                                            ; preds = %bb1
  store i8 0, ptr %_6.i, align 1, !dbg !603
  br label %bb6.i, !dbg !603

bb5.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %5) #10, !dbg !604
  %8 = zext i1 %_8.i to i8, !dbg !603
  store i8 %8, ptr %_6.i, align 1, !dbg !603
  br label %bb6.i, !dbg !603

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !603, !range !242, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !603
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !603

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !603
  br label %bb3.i, !dbg !603

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hde59f38a0bf7fb53E(ptr %3, ptr %5, i64 %7) #10, !dbg !605
  %11 = zext i1 %_10.i to i8, !dbg !603
  store i8 %11, ptr %_5.i, align 1, !dbg !603
  br label %bb3.i, !dbg !603

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !606, !range !242, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !606
  %_4.i = xor i1 %13, true, !dbg !606
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h9f39d8379615f03aE.exit, !dbg !606

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !607
  unreachable, !dbg !607

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h9f39d8379615f03aE.exit: ; preds = %bb3.i
  br label %bb2, !dbg !592
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17h3fc0a0a5354c2a60E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !608 {
start:
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !614, metadata !DIExpression()), !dbg !617
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !615, metadata !DIExpression()), !dbg !618
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !616, metadata !DIExpression()), !dbg !619
  br i1 true, label %bb1, label %bb2, !dbg !620

bb2:                                              ; preds = %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h5cb93030700fe491E.exit, %start
  %0 = mul i64 %count, 8, !dbg !621
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !621
  ret void, !dbg !622

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !620
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !620
  store ptr %dst, ptr %1, align 8, !dbg !620
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !620
  store i64 %count, ptr %2, align 8, !dbg !620
  %3 = load ptr, ptr %_6, align 8, !dbg !620, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !620
  %5 = load ptr, ptr %4, align 8, !dbg !620, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !620
  %7 = load i64, ptr %6, align 8, !dbg !620, !noundef !24
  store ptr %3, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !623, metadata !DIExpression()), !dbg !628
  store ptr %5, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !626, metadata !DIExpression()), !dbg !628
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !627, metadata !DIExpression()), !dbg !628
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h54e3a64a8d80a0c2E(ptr %3) #10, !dbg !630
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !630

bb4.i:                                            ; preds = %bb1
  store i8 0, ptr %_6.i, align 1, !dbg !630
  br label %bb6.i, !dbg !630

bb5.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_8.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h54e3a64a8d80a0c2E(ptr %5) #10, !dbg !631
  %8 = zext i1 %_8.i to i8, !dbg !630
  store i8 %8, ptr %_6.i, align 1, !dbg !630
  br label %bb6.i, !dbg !630

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !630, !range !242, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !630
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !630

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !630
  br label %bb3.i, !dbg !630

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_10.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hdfa133b4c9e6bfe0E(ptr %3, ptr %5, i64 %7) #10, !dbg !632
  %11 = zext i1 %_10.i to i8, !dbg !630
  store i8 %11, ptr %_5.i, align 1, !dbg !630
  br label %bb3.i, !dbg !630

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !633, !range !242, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !633
  %_4.i = xor i1 %13, true, !dbg !633
  br i1 %_4.i, label %bb10.i, label %_ZN4core10intrinsics19copy_nonoverlapping7runtime17h5cb93030700fe491E.exit, !dbg !633

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !634
  unreachable, !dbg !634

_ZN4core10intrinsics19copy_nonoverlapping7runtime17h5cb93030700fe491E.exit: ; preds = %bb3.i
  br label %bb2, !dbg !620
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h7024e836f5e00bcaE(ptr %ptr) unnamed_addr #1 !dbg !635 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !650, metadata !DIExpression()), !dbg !653
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hfc824951da861796E"(ptr %ptr) #10, !dbg !654
  %_2 = xor i1 %_3, true, !dbg !655
  br i1 %_2, label %bb2, label %bb1, !dbg !655

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !655
  br label %bb3, !dbg !655

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17he1d57f4f8c65cbe0E"(ptr %ptr) #10, !dbg !656
  %1 = zext i1 %_4 to i8, !dbg !655
  store i8 %1, ptr %0, align 1, !dbg !655
  br label %bb3, !dbg !655

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !657, !range !242, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !657
  ret i1 %3, !dbg !657
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %ptr) unnamed_addr #1 !dbg !658 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !662, metadata !DIExpression()), !dbg !663
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf52a54f7e512b4a6E"(ptr %ptr) #10, !dbg !664
  %_2 = xor i1 %_3, true, !dbg !665
  br i1 %_2, label %bb2, label %bb1, !dbg !665

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !665
  br label %bb3, !dbg !665

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17he2efdc4959409220E"(ptr %ptr) #10, !dbg !666
  %1 = zext i1 %_4 to i8, !dbg !665
  store i8 %1, ptr %0, align 1, !dbg !665
  br label %bb3, !dbg !665

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !667, !range !242, !noundef !24
  %3 = trunc i8 %2 to i1, !dbg !667
  ret i1 %3, !dbg !667
}

; core::intrinsics::is_valid_allocation_size
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hf5c09850e6be46cfE(i64 %len) unnamed_addr #1 !dbg !668 {
start:
  %max_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !672, metadata !DIExpression()), !dbg !675
  store i64 384307168202282325, ptr %max_len.dbg.spill, align 8, !dbg !676
  call void @llvm.dbg.declare(metadata ptr %max_len.dbg.spill, metadata !673, metadata !DIExpression()), !dbg !677
  %0 = icmp ule i64 %len, 384307168202282325, !dbg !678
  ret i1 %0, !dbg !679
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17h6835612ca7c29911E(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !680 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !682, metadata !DIExpression()), !dbg !685
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !683, metadata !DIExpression()), !dbg !686
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !684, metadata !DIExpression()), !dbg !687
  br i1 true, label %bb1, label %bb2, !dbg !688

bb2:                                              ; preds = %_ZN4core10intrinsics4copy7runtime17h400269ee81791563E.exit, %start
  %0 = mul i64 8, %count, !dbg !689
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !689
  ret void, !dbg !690

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !688
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !688
  store ptr %dst, ptr %1, align 8, !dbg !688
  %2 = load ptr, ptr %_6, align 8, !dbg !688, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !688
  %4 = load ptr, ptr %3, align 8, !dbg !688, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !691, metadata !DIExpression()), !dbg !698
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !697, metadata !DIExpression()), !dbg !698
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h54e3a64a8d80a0c2E(ptr %2) #10, !dbg !700
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !700

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !700
  br label %bb3.i, !dbg !700

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h54e3a64a8d80a0c2E(ptr %4) #10, !dbg !701
  %5 = zext i1 %_6.i to i8, !dbg !700
  store i8 %5, ptr %_4.i, align 1, !dbg !700
  br label %bb3.i, !dbg !700

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %6 = load i8, ptr %_4.i, align 1, !dbg !702, !range !242, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !702
  %_3.i = xor i1 %7, true, !dbg !702
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17h400269ee81791563E.exit, !dbg !702

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_4f979e408ba56e8e0fdc172fb24ef68d, i64 112) #11, !dbg !703
  unreachable, !dbg !703

_ZN4core10intrinsics4copy7runtime17h400269ee81791563E.exit: ; preds = %bb3.i
  br label %bb2, !dbg !688
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17hde30679fb0cb8f2eE(ptr %src, ptr %dst, i64 %count) unnamed_addr #0 !dbg !704 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !706, metadata !DIExpression()), !dbg !709
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !707, metadata !DIExpression()), !dbg !710
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !708, metadata !DIExpression()), !dbg !711
  br i1 true, label %bb1, label %bb2, !dbg !712

bb2:                                              ; preds = %_ZN4core10intrinsics4copy7runtime17hbe7485e94375aad4E.exit, %start
  %0 = mul i64 24, %count, !dbg !713
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 %0, i1 false), !dbg !713
  ret void, !dbg !714

bb1:                                              ; preds = %start
  store ptr %src, ptr %_6, align 8, !dbg !712
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !712
  store ptr %dst, ptr %1, align 8, !dbg !712
  %2 = load ptr, ptr %_6, align 8, !dbg !712, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !712
  %4 = load ptr, ptr %3, align 8, !dbg !712, !noundef !24
  store ptr %2, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !715, metadata !DIExpression()), !dbg !721
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !720, metadata !DIExpression()), !dbg !721
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %2) #10, !dbg !723
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !723

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !723
  br label %bb3.i, !dbg !723

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %4) #10, !dbg !724
  %5 = zext i1 %_6.i to i8, !dbg !723
  store i8 %5, ptr %_4.i, align 1, !dbg !723
  br label %bb3.i, !dbg !723

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %6 = load i8, ptr %_4.i, align 1, !dbg !725, !range !242, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !725
  %_3.i = xor i1 %7, true, !dbg !725
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17hbe7485e94375aad4E.exit, !dbg !725

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_4f979e408ba56e8e0fdc172fb24ef68d, i64 112) #11, !dbg !726
  unreachable, !dbg !726

_ZN4core10intrinsics4copy7runtime17hbe7485e94375aad4E.exit: ; preds = %bb3.i
  br label %bb2, !dbg !712
}

; core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17ha720db96ca76e537E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !727 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !734, metadata !DIExpression()), !dbg !736
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !735, metadata !DIExpression()), !dbg !737
  %_4 = load i64, ptr %self, align 8, !dbg !738, !noundef !24
  %_5 = load i64, ptr %other, align 8, !dbg !739, !noundef !24
  %_3 = icmp ult i64 %_4, %_5, !dbg !738
  br i1 %_3, label %bb1, label %bb2, !dbg !738

bb2:                                              ; preds = %start
  %_7 = load i64, ptr %self, align 8, !dbg !740, !noundef !24
  %_8 = load i64, ptr %other, align 8, !dbg !741, !noundef !24
  %_6 = icmp eq i64 %_7, %_8, !dbg !740
  br i1 %_6, label %bb3, label %bb4, !dbg !740

bb1:                                              ; preds = %start
  store i8 -1, ptr %0, align 1, !dbg !742
  br label %bb5, !dbg !743

bb5:                                              ; preds = %bb4, %bb3, %bb1
  %1 = load i8, ptr %0, align 1, !dbg !744, !range !745, !noundef !24
  ret i8 %1, !dbg !744

bb4:                                              ; preds = %bb2
  store i8 1, ptr %0, align 1, !dbg !746
  br label %bb5, !dbg !747

bb3:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !748
  br label %bb5, !dbg !747
}

; core::fmt::ArgumentV1::new_lower_hex
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_lower_hex17hc064ddddc92919cbE(ptr align 8 %x) unnamed_addr #0 !dbg !749 {
start:
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !763, metadata !DIExpression()), !dbg !766
; call core::fmt::ArgumentV1::new
  %0 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV13new17hff38262718737e36E(ptr align 8 %x, ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hceee1cc64e7ed24aE") #10, !dbg !767
  %1 = extractvalue { ptr, ptr } %0, 0, !dbg !767
  %2 = extractvalue { ptr, ptr } %0, 1, !dbg !767
  %3 = insertvalue { ptr, ptr } poison, ptr %1, 0, !dbg !768
  %4 = insertvalue { ptr, ptr } %3, ptr %2, 1, !dbg !768
  ret { ptr, ptr } %4, !dbg !768
}

; core::fmt::num::<impl core::fmt::Debug for u32>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hea2ff610b2a3984aE"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #0 !dbg !769 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !776, metadata !DIExpression()), !dbg !778
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !777, metadata !DIExpression()), !dbg !779
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h41ca6b16ba65727eE(ptr align 8 %f) #10, !dbg !780
  br i1 %_3, label %bb2, label %bb3, !dbg !780

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h1b93910475cacd94E(ptr align 8 %f) #10, !dbg !781
  br i1 %_5, label %bb5, label %bb6, !dbg !781

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17h87cb2e342e5141a4E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !782
  %2 = zext i1 %1 to i8, !dbg !782
  store i8 %2, ptr %0, align 1, !dbg !782
  br label %bb7, !dbg !782

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !783, !range !242, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !783
  ret i1 %4, !dbg !783

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h9c863612f56988d3E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !784
  %6 = zext i1 %5 to i8, !dbg !784
  store i8 %6, ptr %0, align 1, !dbg !784
  br label %bb7, !dbg !784

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h2f2ab6e4739c3556E"(ptr align 4 %self, ptr align 8 %f) #10, !dbg !785
  %8 = zext i1 %7 to i8, !dbg !785
  store i8 %8, ptr %0, align 1, !dbg !785
  br label %bb7, !dbg !785
}

; core::fmt::num::<impl core::fmt::Debug for u64>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h1603b60bba44f0f1E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !786 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !791, metadata !DIExpression()), !dbg !793
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !792, metadata !DIExpression()), !dbg !794
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h41ca6b16ba65727eE(ptr align 8 %f) #10, !dbg !795
  br i1 %_3, label %bb2, label %bb3, !dbg !795

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h1b93910475cacd94E(ptr align 8 %f) #10, !dbg !796
  br i1 %_5, label %bb5, label %bb6, !dbg !796

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hceee1cc64e7ed24aE"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !797
  %2 = zext i1 %1 to i8, !dbg !797
  store i8 %2, ptr %0, align 1, !dbg !797
  br label %bb7, !dbg !797

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !798, !range !242, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !798
  ret i1 %4, !dbg !798

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17ha7e2c62b9562228dE"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !799
  %6 = zext i1 %5 to i8, !dbg !799
  store i8 %6, ptr %0, align 1, !dbg !799
  br label %bb7, !dbg !799

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h66713fc47818d59eE"(ptr align 8 %self, ptr align 8 %f) #10, !dbg !800
  %8 = zext i1 %7 to i8, !dbg !800
  store i8 %8, ptr %0, align 1, !dbg !800
  br label %bb7, !dbg !800
}

; core::fmt::builders::DebugList::entries
; Function Attrs: noredzone nounwind
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17hf04f1b1141114cdfE(ptr align 8 %self, ptr %entries.0, ptr %entries.1) unnamed_addr #1 !dbg !801 {
start:
  %entries.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %entry = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !830, metadata !DIExpression()), !dbg !839
  %0 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 0
  store ptr %entries.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %entries.dbg.spill, i32 0, i32 1
  store ptr %entries.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %entries.dbg.spill, metadata !831, metadata !DIExpression()), !dbg !840
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !832, metadata !DIExpression()), !dbg !841
  call void @llvm.dbg.declare(metadata ptr %entry, metadata !834, metadata !DIExpression()), !dbg !842
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3761bf7223d13674E"(ptr %entries.0, ptr %entries.1) #10, !dbg !843
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !843
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !843
  %3 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 0, !dbg !843
  store ptr %_3.0, ptr %3, align 8, !dbg !843
  %4 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 1, !dbg !843
  store ptr %_3.1, ptr %4, align 8, !dbg !843
  br label %bb2, !dbg !844

bb2:                                              ; preds = %bb4, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h87ad7e6cefe6e715E"(ptr align 8 %iter) #10, !dbg !841
  store ptr %5, ptr %_5, align 8, !dbg !841
  %6 = load ptr, ptr %_5, align 8, !dbg !841, !noundef !24
  %7 = ptrtoint ptr %6 to i64, !dbg !841
  %8 = icmp eq i64 %7, 0, !dbg !841
  %_7 = select i1 %8, i64 0, i64 1, !dbg !841
  %9 = icmp eq i64 %_7, 0, !dbg !841
  br i1 %9, label %bb6, label %bb4, !dbg !841

bb6:                                              ; preds = %bb2
  ret ptr %self, !dbg !845

bb4:                                              ; preds = %bb2
  %10 = load ptr, ptr %_5, align 8, !dbg !846, !nonnull !24, !align !510, !noundef !24
  store ptr %10, ptr %entry, align 8, !dbg !846
; call core::fmt::builders::DebugList::entry
  %_9 = call align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h7271bd8a3d508d11E(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.1) #10, !dbg !847
  br label %bb2, !dbg !848

bb5:                                              ; No predecessors!
  unreachable, !dbg !841
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17h96272abef9da8fc8E(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1, ptr align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 !dbg !849 {
start:
  %_4.dbg.spill = alloca %"core::fmt::UnsafeArg", align 1
  %fmt.dbg.spill = alloca { ptr, i64 }, align 8
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_5 = alloca { ptr, i64 }, align 8
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::UnsafeArg", align 1
  call void @llvm.dbg.declare(metadata ptr %_unsafe_arg.dbg.spill, metadata !918, metadata !DIExpression()), !dbg !920
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !915, metadata !DIExpression()), !dbg !921
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !916, metadata !DIExpression()), !dbg !922
  %5 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 0
  store ptr %fmt.0, ptr %5, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %fmt.dbg.spill, i32 0, i32 1
  store i64 %fmt.1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %fmt.dbg.spill, metadata !917, metadata !DIExpression()), !dbg !923
  call void @llvm.dbg.declare(metadata ptr %_4.dbg.spill, metadata !919, metadata !DIExpression()), !dbg !920
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !924
  store ptr %fmt.0, ptr %7, align 8, !dbg !924
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !924
  store i64 %fmt.1, ptr %8, align 8, !dbg !924
  %9 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !925
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !925
  store ptr %pieces.0, ptr %10, align 8, !dbg !925
  %11 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !925
  store i64 %pieces.1, ptr %11, align 8, !dbg !925
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 0, !dbg !925
  %13 = load ptr, ptr %12, align 8, !dbg !925, !align !510, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !925
  %15 = load i64, ptr %14, align 8, !dbg !925
  %16 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !925
  store ptr %13, ptr %16, align 8, !dbg !925
  %17 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !925
  store i64 %15, ptr %17, align 8, !dbg !925
  %18 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !925
  %19 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 0, !dbg !925
  store ptr %args.0, ptr %19, align 8, !dbg !925
  %20 = getelementptr inbounds { ptr, i64 }, ptr %18, i32 0, i32 1, !dbg !925
  store i64 %args.1, ptr %20, align 8, !dbg !925
  ret void, !dbg !926
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments6new_v117hc8c49b7ed491bfe8E(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !927 {
start:
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_15 = alloca { ptr, i64 }, align 8
  %_13 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !931, metadata !DIExpression()), !dbg !933
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !932, metadata !DIExpression()), !dbg !934
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !935
  br i1 %_4, label %bb1, label %bb2, !dbg !935

bb2:                                              ; preds = %start
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %args.1, i64 1), !dbg !936
  %_11.0 = extractvalue { i64, i1 } %5, 0, !dbg !936
  %_11.1 = extractvalue { i64, i1 } %5, 1, !dbg !936
  %6 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !936
  br i1 %6, label %panic, label %bb4, !dbg !936

bb1:                                              ; preds = %start
  store i8 1, ptr %_3, align 1, !dbg !935
  br label %bb3, !dbg !935

bb3:                                              ; preds = %bb4, %bb1
  %7 = load i8, ptr %_3, align 1, !dbg !935, !range !242, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !935
  br i1 %8, label %bb5, label %bb7, !dbg !935

bb4:                                              ; preds = %bb2
  %_7 = icmp ugt i64 %pieces.1, %_11.0, !dbg !937
  %9 = zext i1 %_7 to i8, !dbg !935
  store i8 %9, ptr %_3, align 1, !dbg !935
  br label %bb3, !dbg !935

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_bf47d7cf946e324312b7aba9afabb742) #11, !dbg !936
  unreachable, !dbg !936

bb7:                                              ; preds = %bb3
  store ptr null, ptr %_15, align 8, !dbg !938
  %10 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !939
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !939
  store ptr %pieces.0, ptr %11, align 8, !dbg !939
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !939
  store i64 %pieces.1, ptr %12, align 8, !dbg !939
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_15, i32 0, i32 0, !dbg !939
  %14 = load ptr, ptr %13, align 8, !dbg !939, !align !510, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_15, i32 0, i32 1, !dbg !939
  %16 = load i64, ptr %15, align 8, !dbg !939
  %17 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !939
  store ptr %14, ptr %17, align 8, !dbg !939
  %18 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !939
  store i64 %16, ptr %18, align 8, !dbg !939
  %19 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !939
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !939
  store ptr %args.0, ptr %20, align 8, !dbg !939
  %21 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !939
  store i64 %args.1, ptr %21, align 8, !dbg !939
  ret void, !dbg !940

bb5:                                              ; preds = %bb3
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h7d88afe42d22638bE(ptr sret(%"core::fmt::Arguments<'_>") %_13, ptr align 8 @alloc_560206a49c61adca6f3f0639a12632eb, i64 1) #10, !dbg !941
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcab56c0eeadf4812E(ptr %_13, ptr align 8 @alloc_0e0da1257467e00be4bc17cc4a166d8a) #11, !dbg !941
  unreachable, !dbg !941
}

; core::fmt::Arguments::new_const
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments9new_const17h7d88afe42d22638bE(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1) unnamed_addr #0 !dbg !942 {
start:
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_7 = alloca { ptr, i64 }, align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !946, metadata !DIExpression()), !dbg !947
  %_2 = icmp ugt i64 %pieces.1, 1, !dbg !948
  br i1 %_2, label %bb1, label %bb3, !dbg !948

bb3:                                              ; preds = %start
  store ptr null, ptr %_7, align 8, !dbg !949
  %3 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !950
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !950
  store ptr %pieces.0, ptr %4, align 8, !dbg !950
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !950
  store i64 %pieces.1, ptr %5, align 8, !dbg !950
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !950
  %7 = load ptr, ptr %6, align 8, !dbg !950, !align !510, !noundef !24
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !950
  %9 = load i64, ptr %8, align 8, !dbg !950
  %10 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !950
  store ptr %7, ptr %10, align 8, !dbg !950
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !950
  store i64 %9, ptr %11, align 8, !dbg !950
  %12 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !950
  %13 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 0, !dbg !950
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %13, align 8, !dbg !950
  %14 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 1, !dbg !950
  store i64 0, ptr %14, align 8, !dbg !950
  ret void, !dbg !951

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h7d88afe42d22638bE(ptr sret(%"core::fmt::Arguments<'_>") %_5, ptr align 8 @alloc_560206a49c61adca6f3f0639a12632eb, i64 1) #10, !dbg !952
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcab56c0eeadf4812E(ptr %_5, ptr align 8 @alloc_3565e73f34d7302748197a3f0bc50374) #11, !dbg !952
  unreachable, !dbg !952
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h3fac42cd55c798b3E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !953 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %_9 = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %b = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  %a = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !959, metadata !DIExpression()), !dbg !965
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !960, metadata !DIExpression()), !dbg !966
  call void @llvm.dbg.declare(metadata ptr %a, metadata !961, metadata !DIExpression()), !dbg !967
  call void @llvm.dbg.declare(metadata ptr %b, metadata !963, metadata !DIExpression()), !dbg !968
; call core::ptr::read
  call void @_ZN4core3ptr4read17h6e169d0229e0c3d6E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %a, ptr %x) #10, !dbg !969
; call core::ptr::read
  call void @_ZN4core3ptr4read17h6e169d0229e0c3d6E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %b, ptr %y) #10, !dbg !970
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !971
; call core::ptr::write
  call void @_ZN4core3ptr5write17hd3c3cfa0b3004d5dE(ptr %x, ptr %_9) #10, !dbg !972
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !973
; call core::ptr::write
  call void @_ZN4core3ptr5write17hd3c3cfa0b3004d5dE(ptr %y, ptr %_12) #10, !dbg !974
  ret void, !dbg !975
}

; core::mem::swap_simple
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem11swap_simple17h59cb8439350ba3caE(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !976 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_9 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %b = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %a = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !981, metadata !DIExpression()), !dbg !987
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !982, metadata !DIExpression()), !dbg !988
  call void @llvm.dbg.declare(metadata ptr %a, metadata !983, metadata !DIExpression()), !dbg !989
  call void @llvm.dbg.declare(metadata ptr %b, metadata !985, metadata !DIExpression()), !dbg !990
; call core::ptr::read
  call void @_ZN4core3ptr4read17h9bbf8b811484d8b8E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %a, ptr %x) #10, !dbg !991
; call core::ptr::read
  call void @_ZN4core3ptr4read17h9bbf8b811484d8b8E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %b, ptr %y) #10, !dbg !992
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %b, i64 24, i1 false), !dbg !993
; call core::ptr::write
  call void @_ZN4core3ptr5write17h501899311e03ab4eE(ptr %x, ptr %_9) #10, !dbg !994
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %a, i64 24, i1 false), !dbg !995
; call core::ptr::write
  call void @_ZN4core3ptr5write17h501899311e03ab4eE(ptr %y, ptr %_12) #10, !dbg !996
  ret void, !dbg !997
}

; core::mem::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem4swap17h1e8e662fc708a4c7E(ptr align 8 %x, ptr align 8 %y) unnamed_addr #0 !dbg !998 {
start:
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1000, metadata !DIExpression()), !dbg !1002
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1001, metadata !DIExpression()), !dbg !1003
  %_7 = icmp eq i64 8, 0, !dbg !1004
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !1004
  br i1 %0, label %panic, label %bb3, !dbg !1004

bb3:                                              ; preds = %start
  %_4 = udiv i64 24, 8, !dbg !1004
  %_3 = icmp ugt i64 %_4, 4, !dbg !1004
  br i1 %_3, label %bb4, label %bb5, !dbg !1004

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_f5758da710ba897165288b0f4da8acb3) #11, !dbg !1004
  unreachable, !dbg !1004

bb5:                                              ; preds = %bb3
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h59cb8439350ba3caE(ptr align 8 %x, ptr align 8 %y) #10, !dbg !1005
  br label %bb6, !dbg !1005

bb4:                                              ; preds = %bb3
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h4d74a56b75fdc00bE(ptr %x, ptr %y, i64 1) #10, !dbg !1006
  br label %bb6, !dbg !1006

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !1007
}

; core::mem::forget
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem6forget17hf1997bd7a4ba0664E(ptr %t) unnamed_addr #0 !dbg !1008 {
start:
  %_2 = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  call void @llvm.dbg.declare(metadata ptr %t, metadata !1012, metadata !DIExpression()), !dbg !1013
  call void @llvm.dbg.declare(metadata ptr %t, metadata !1014, metadata !DIExpression()), !dbg !1020
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %t, i64 24, i1 false), !dbg !1022
  ret void, !dbg !1023
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h189dca2a0ce59f54E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1024 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1031, metadata !DIExpression()), !dbg !1036
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !1032, metadata !DIExpression()), !dbg !1037
  store i64 %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1038, metadata !DIExpression()), !dbg !1051
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1047, metadata !DIExpression()), !dbg !1053
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1054
  %_5.0.i = extractvalue { i64, i1 } %3, 0, !dbg !1054
  %_5.1.i = extractvalue { i64, i1 } %3, 1, !dbg !1054
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !1055
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill.i, metadata !1048, metadata !DIExpression()), !dbg !1056
  %4 = zext i1 %_5.1.i to i8, !dbg !1057
  store i8 %4, ptr %b.dbg.spill.i, align 1, !dbg !1057
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill.i, metadata !1050, metadata !DIExpression()), !dbg !1058
  store i64 %_5.0.i, ptr %0, align 8, !dbg !1059
  %5 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1059
  %6 = zext i1 %_5.1.i to i8, !dbg !1059
  store i8 %6, ptr %5, align 8, !dbg !1059
  %7 = load i64, ptr %0, align 8, !dbg !1060, !noundef !24
  %8 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1060
  %9 = load i8, ptr %8, align 8, !dbg !1060, !range !242, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1060
  %11 = zext i1 %10 to i8, !dbg !1060
  %12 = insertvalue { i64, i8 } poison, i64 %7, 0, !dbg !1060
  %13 = insertvalue { i64, i8 } %12, i8 %11, 1, !dbg !1060
  %_5.0 = extractvalue { i64, i8 } %13, 0, !dbg !1061
  %14 = extractvalue { i64, i8 } %13, 1, !dbg !1061
  %_5.1 = trunc i8 %14 to i1, !dbg !1061
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !1062
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !1033, metadata !DIExpression()), !dbg !1063
  %15 = zext i1 %_5.1 to i8, !dbg !1064
  store i8 %15, ptr %b.dbg.spill, align 1, !dbg !1064
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1035, metadata !DIExpression()), !dbg !1065
  %16 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1066
  %17 = zext i1 %16 to i8, !dbg !1066
  store i8 %17, ptr %1, align 1, !dbg !1066
  %18 = load i8, ptr %1, align 1, !dbg !1066, !range !242, !noundef !24
  %_6 = trunc i8 %18 to i1, !dbg !1066
  br i1 %_6, label %bb3, label %bb4, !dbg !1066

bb4:                                              ; preds = %start
  %19 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1067
  store i64 %_5.0, ptr %19, align 8, !dbg !1067
  store i64 1, ptr %2, align 8, !dbg !1067
  br label %bb5, !dbg !1068

bb3:                                              ; preds = %start
  store i64 0, ptr %2, align 8, !dbg !1069
  br label %bb5, !dbg !1068

bb5:                                              ; preds = %bb4, %bb3
  %20 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !1070
  %21 = load i64, ptr %20, align 8, !dbg !1070, !range !1071, !noundef !24
  %22 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1070
  %23 = load i64, ptr %22, align 8, !dbg !1070
  %24 = insertvalue { i64, i64 } poison, i64 %21, 0, !dbg !1070
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1, !dbg !1070
  ret { i64, i64 } %25, !dbg !1070
}

; core::num::<impl usize>::next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h6d38340da7fe9804E"(i64 %self) unnamed_addr #0 !dbg !1072 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1076, metadata !DIExpression()), !dbg !1077
; call core::num::<impl usize>::one_less_than_next_power_of_two
  %_2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h3e370a0003229e16E"(i64 %self) #10, !dbg !1078
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_2, i64 1), !dbg !1078
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !1078
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !1078
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !1078
  br i1 %1, label %panic, label %bb2, !dbg !1078

bb2:                                              ; preds = %start
  ret i64 %_3.0, !dbg !1079

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_82a295533409787c3e504fb0ce3831ff) #11, !dbg !1078
  unreachable, !dbg !1078
}

; core::num::<impl usize>::one_less_than_next_power_of_two
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h3e370a0003229e16E"(i64 %self) unnamed_addr #0 !dbg !1080 {
start:
  %z.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %p.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1082, metadata !DIExpression()), !dbg !1087
  %_2 = icmp ule i64 %self, 1, !dbg !1088
  br i1 %_2, label %bb1, label %bb2, !dbg !1088

bb2:                                              ; preds = %start
  %_4.0 = sub i64 %self, 1, !dbg !1089
  %_4.1 = icmp ult i64 %self, 1, !dbg !1089
  %2 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1089
  br i1 %2, label %panic, label %bb3, !dbg !1089

bb1:                                              ; preds = %start
  store i64 0, ptr %1, align 8, !dbg !1090
  br label %bb6, !dbg !1091

bb6:                                              ; preds = %bb5, %bb1
  %3 = load i64, ptr %1, align 8, !dbg !1091, !noundef !24
  ret i64 %3, !dbg !1091

bb3:                                              ; preds = %bb2
  store i64 %_4.0, ptr %p.dbg.spill, align 8, !dbg !1089
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !1083, metadata !DIExpression()), !dbg !1092
  %4 = call i64 @llvm.ctlz.i64(i64 %_4.0, i1 true), !dbg !1093
  store i64 %4, ptr %0, align 8, !dbg !1093
  %z = load i64, ptr %0, align 8, !dbg !1093, !noundef !24
  store i64 %z, ptr %z.dbg.spill, align 8, !dbg !1093
  call void @llvm.dbg.declare(metadata ptr %z.dbg.spill, metadata !1085, metadata !DIExpression()), !dbg !1094
  %_7 = icmp ult i64 %z, 64, !dbg !1095
  %5 = call i1 @llvm.expect.i1(i1 %_7, i1 true), !dbg !1095
  br i1 %5, label %bb5, label %panic1, !dbg !1095

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_82a295533409787c3e504fb0ce3831ff) #11, !dbg !1089
  unreachable, !dbg !1089

bb5:                                              ; preds = %bb3
  %6 = and i64 %z, 63, !dbg !1095
  %7 = lshr i64 -1, %6, !dbg !1095
  store i64 %7, ptr %1, align 8, !dbg !1095
  br label %bb6, !dbg !1091

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.4, i64 36, ptr align 8 @alloc_82a295533409787c3e504fb0ce3831ff) #11, !dbg !1095
  unreachable, !dbg !1095
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4384b7d931bb2e10E"(ptr %self) unnamed_addr #0 !dbg !1096 {
start:
  %exclusive_end.dbg.spill = alloca i64, align 8
  %start1 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1101, metadata !DIExpression()), !dbg !1106
  call void @llvm.dbg.declare(metadata ptr %start1, metadata !1104, metadata !DIExpression()), !dbg !1107
  %1 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 1, !dbg !1108
  %_3 = load i64, ptr %1, align 8, !dbg !1108, !noundef !24
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_3, i64 1), !dbg !1108
  %_4.0 = extractvalue { i64, i1 } %2, 0, !dbg !1108
  %_4.1 = extractvalue { i64, i1 } %2, 1, !dbg !1108
  %3 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !1108
  br i1 %3, label %panic, label %bb1, !dbg !1108

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %exclusive_end.dbg.spill, align 8, !dbg !1108
  call void @llvm.dbg.declare(metadata ptr %exclusive_end.dbg.spill, metadata !1102, metadata !DIExpression()), !dbg !1109
  %4 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", ptr %self, i32 0, i32 2, !dbg !1110
  %5 = load i8, ptr %4, align 8, !dbg !1110, !range !242, !noundef !24
  %_6 = trunc i8 %5 to i1, !dbg !1110
  br i1 %_6, label %bb2, label %bb3, !dbg !1110

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_50d1e257ccd56aaa3f8677a989ec63c7) #11, !dbg !1108
  unreachable, !dbg !1108

bb3:                                              ; preds = %bb1
  %6 = load i64, ptr %self, align 8, !dbg !1111, !noundef !24
  store i64 %6, ptr %start1, align 8, !dbg !1111
  br label %bb4, !dbg !1112

bb2:                                              ; preds = %bb1
  store i64 %_4.0, ptr %start1, align 8, !dbg !1113
  br label %bb4, !dbg !1112

bb4:                                              ; preds = %bb3, %bb2
  %_7 = load i64, ptr %start1, align 8, !dbg !1114, !noundef !24
  store i64 %_7, ptr %0, align 8, !dbg !1114
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1114
  store i64 %_4.0, ptr %7, align 8, !dbg !1114
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !1115
  %9 = load i64, ptr %8, align 8, !dbg !1115, !noundef !24
  %10 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !1115
  %11 = load i64, ptr %10, align 8, !dbg !1115, !noundef !24
  %12 = insertvalue { i64, i64 } poison, i64 %9, 0, !dbg !1115
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1, !dbg !1115
  ret { i64, i64 } %13, !dbg !1115
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hb784f0c5ee813df5E"(ptr align 8 %self, ptr align 8 %0, ptr align 8 %1) unnamed_addr #1 !dbg !1116 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %args = alloca { ptr, ptr }, align 8
  store ptr %0, ptr %args, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1
  store ptr %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1135, metadata !DIExpression()), !dbg !1144
  call void @llvm.dbg.declare(metadata ptr %args, metadata !1136, metadata !DIExpression()), !dbg !1145
  %_3 = load ptr, ptr %self, align 8, !dbg !1146, !nonnull !24, !align !510, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 0, !dbg !1146
  %4 = load ptr, ptr %3, align 8, !dbg !1146, !nonnull !24, !align !510, !noundef !24
  %5 = getelementptr inbounds { ptr, ptr }, ptr %args, i32 0, i32 1, !dbg !1146
  %6 = load ptr, ptr %5, align 8, !dbg !1146, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %7 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %_3, ptr align 8 %4, ptr align 8 %6) #10, !dbg !1146
  ret i1 %7, !dbg !1147
}

; core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hf11a1c24d41b52e3E"(ptr %_1) unnamed_addr #1 !dbg !1148 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1159, metadata !DIExpression()), !dbg !1162
; call <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h459d39f427c87586E"(ptr align 8 %_1) #10, !dbg !1162
  ret void, !dbg !1162
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr19swap_nonoverlapping17h4d74a56b75fdc00bE(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1163 {
start:
  %self.dbg.spill.i20 = alloca ptr, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %self.dbg.spill.i18 = alloca ptr, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %y.dbg.spill.i = alloca ptr, align 8
  %x.dbg.spill.i = alloca ptr, align 8
  %_6.i = alloca i8, align 1
  %_5.i = alloca i8, align 1
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %count.dbg.spill16 = alloca i64, align 8
  %y.dbg.spill13 = alloca ptr, align 8
  %x.dbg.spill11 = alloca ptr, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %y.dbg.spill5 = alloca ptr, align 8
  %x.dbg.spill3 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %_39 = alloca i8, align 1
  %_20 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %_6 = alloca { ptr, ptr, i64 }, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1167, metadata !DIExpression()), !dbg !1183
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1168, metadata !DIExpression()), !dbg !1184
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1169, metadata !DIExpression()), !dbg !1185
  br i1 true, label %bb1, label %bb2, !dbg !1186

bb2:                                              ; preds = %_ZN4core3ptr19swap_nonoverlapping7runtime17h5a0323559f393991E.exit, %start
  %_8 = icmp ule i64 8, 8, !dbg !1187
  br i1 %_8, label %bb4, label %bb3, !dbg !1187

bb1:                                              ; preds = %start
  store ptr %x, ptr %_6, align 8, !dbg !1186
  %1 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1186
  store ptr %y, ptr %1, align 8, !dbg !1186
  %2 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1186
  store i64 %count, ptr %2, align 8, !dbg !1186
  %3 = load ptr, ptr %_6, align 8, !dbg !1186, !noundef !24
  %4 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !1186
  %5 = load ptr, ptr %4, align 8, !dbg !1186, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, i64 }, ptr %_6, i32 0, i32 2, !dbg !1186
  %7 = load i64, ptr %6, align 8, !dbg !1186, !noundef !24
  store ptr %3, ptr %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill.i, metadata !1188, metadata !DIExpression()), !dbg !1194
  store ptr %5, ptr %y.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill.i, metadata !1192, metadata !DIExpression()), !dbg !1194
  store i64 %7, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1193, metadata !DIExpression()), !dbg !1194
; call core::intrinsics::is_aligned_and_not_null
  %_7.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %3) #10, !dbg !1196
  br i1 %_7.i, label %bb5.i, label %bb4.i, !dbg !1196

bb4.i:                                            ; preds = %bb1
  store i8 0, ptr %_6.i, align 1, !dbg !1196
  br label %bb6.i, !dbg !1196

bb5.i:                                            ; preds = %bb1
; call core::intrinsics::is_aligned_and_not_null
  %_9.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %5) #10, !dbg !1198
  %8 = zext i1 %_9.i to i8, !dbg !1196
  store i8 %8, ptr %_6.i, align 1, !dbg !1196
  br label %bb6.i, !dbg !1196

bb6.i:                                            ; preds = %bb5.i, %bb4.i
  %9 = load i8, ptr %_6.i, align 1, !dbg !1196, !range !242, !noundef !24
  %10 = trunc i8 %9 to i1, !dbg !1196
  br i1 %10, label %bb2.i, label %bb1.i, !dbg !1196

bb1.i:                                            ; preds = %bb6.i
  store i8 0, ptr %_5.i, align 1, !dbg !1196
  br label %bb3.i, !dbg !1196

bb2.i:                                            ; preds = %bb6.i
; call core::intrinsics::is_nonoverlapping
  %_11.i = call zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hde59f38a0bf7fb53E(ptr %3, ptr %5, i64 %7) #10, !dbg !1199
  %11 = zext i1 %_11.i to i8, !dbg !1196
  store i8 %11, ptr %_5.i, align 1, !dbg !1196
  br label %bb3.i, !dbg !1196

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %12 = load i8, ptr %_5.i, align 1, !dbg !1200, !range !242, !noundef !24
  %13 = trunc i8 %12 to i1, !dbg !1200
  %_4.i = xor i1 %13, true, !dbg !1200
  br i1 %_4.i, label %bb10.i, label %_ZN4core3ptr19swap_nonoverlapping7runtime17h5a0323559f393991E.exit, !dbg !1200

bb10.i:                                           ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_546a48d82dbbd37bfd409d4513b73f46, i64 166) #11, !dbg !1201
  unreachable, !dbg !1201

_ZN4core3ptr19swap_nonoverlapping7runtime17h5a0323559f393991E.exit: ; preds = %bb3.i
  br label %bb2, !dbg !1186

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_7, align 1, !dbg !1187
  br label %bb5, !dbg !1187

bb4:                                              ; preds = %bb2
  store i64 24, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1202, metadata !DIExpression()), !dbg !1205
  store i64 24, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1207, metadata !DIExpression()), !dbg !1212
  store i64 2, ptr %0, align 8, !dbg !1214
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1214, !noundef !24
  %14 = trunc i64 %_2.i.i to i32, !dbg !1214
  %15 = icmp eq i32 %14, 1, !dbg !1215
  %_12 = xor i1 %15, true, !dbg !1216
  br i1 %_12, label %bb8, label %bb9, !dbg !1217

bb9:                                              ; preds = %bb4
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 8, i64 2), !dbg !1218
  %_19.0 = extractvalue { i64, i1 } %16, 0, !dbg !1218
  %_19.1 = extractvalue { i64, i1 } %16, 1, !dbg !1218
  %17 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !1218
  br i1 %17, label %panic, label %bb15, !dbg !1218

bb8:                                              ; preds = %bb4
  store i8 1, ptr %_11, align 1, !dbg !1217
  br label %bb10, !dbg !1217

bb10:                                             ; preds = %bb15, %bb8
  %18 = load i8, ptr %_11, align 1, !dbg !1187, !range !242, !noundef !24
  %19 = trunc i8 %18 to i1, !dbg !1187
  %20 = zext i1 %19 to i8, !dbg !1187
  store i8 %20, ptr %_7, align 1, !dbg !1187
  br label %bb5, !dbg !1187

bb15:                                             ; preds = %bb9
  %_15 = icmp ugt i64 24, %_19.0, !dbg !1219
  %21 = zext i1 %_15 to i8, !dbg !1217
  store i8 %21, ptr %_11, align 1, !dbg !1217
  br label %bb10, !dbg !1217

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_a8d2d57d37571df30f9c47ba3b3c586b) #11, !dbg !1218
  unreachable, !dbg !1218

bb5:                                              ; preds = %bb3, %bb10
  %22 = load i8, ptr %_7, align 1, !dbg !1187, !range !242, !noundef !24
  %23 = trunc i8 %22 to i1, !dbg !1187
  br i1 %23, label %bb16, label %bb48, !dbg !1187

bb48:                                             ; preds = %bb35, %bb5
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17he6ae6a6b44528d63E(ptr %x, ptr %y, i64 %count) #10, !dbg !1220
  br label %bb49, !dbg !1220

bb16:                                             ; preds = %bb5
  %_21 = icmp uge i64 8, 8, !dbg !1221
  br i1 %_21, label %bb18, label %bb17, !dbg !1221

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_20, align 1, !dbg !1221
  br label %bb19, !dbg !1221

bb18:                                             ; preds = %bb16
  %_28 = icmp eq i64 8, 0, !dbg !1221
  %24 = call i1 @llvm.expect.i1(i1 %_28, i1 false), !dbg !1221
  br i1 %24, label %panic1, label %bb24, !dbg !1221

bb24:                                             ; preds = %bb18
  %_25 = urem i64 24, 8, !dbg !1221
  %_24 = icmp eq i64 %_25, 0, !dbg !1221
  %25 = zext i1 %_24 to i8, !dbg !1221
  store i8 %25, ptr %_20, align 1, !dbg !1221
  br label %bb19, !dbg !1221

panic1:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.6, i64 57, ptr align 8 @alloc_1c99eb2e2429202974a1788dce7f6920) #11, !dbg !1221
  unreachable, !dbg !1221

bb19:                                             ; preds = %bb17, %bb24
  %26 = load i8, ptr %_20, align 1, !dbg !1221, !range !242, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !1221
  br i1 %27, label %bb25, label %bb32, !dbg !1221

bb32:                                             ; preds = %bb19
  %_40 = icmp uge i64 8, 1, !dbg !1222
  br i1 %_40, label %bb34, label %bb33, !dbg !1222

bb25:                                             ; preds = %bb19
  store ptr %x, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !1223, metadata !DIExpression()), !dbg !1230
  store ptr %x, ptr %x.dbg.spill3, align 8, !dbg !1221
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill3, metadata !1170, metadata !DIExpression()), !dbg !1232
  store ptr %y, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !1223, metadata !DIExpression()), !dbg !1233
  store ptr %y, ptr %y.dbg.spill5, align 8, !dbg !1232
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill5, metadata !1172, metadata !DIExpression()), !dbg !1235
  %_35 = icmp eq i64 8, 0, !dbg !1235
  %28 = call i1 @llvm.expect.i1(i1 %_35, i1 false), !dbg !1235
  br i1 %28, label %panic6, label %bb30, !dbg !1235

bb30:                                             ; preds = %bb25
  %_32 = udiv i64 24, 8, !dbg !1235
  %29 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_32), !dbg !1235
  %_36.0 = extractvalue { i64, i1 } %29, 0, !dbg !1235
  %_36.1 = extractvalue { i64, i1 } %29, 1, !dbg !1235
  %30 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !1235
  br i1 %30, label %panic7, label %bb31, !dbg !1235

panic6:                                           ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_1c99eb2e2429202974a1788dce7f6920) #11, !dbg !1235
  unreachable, !dbg !1235

bb31:                                             ; preds = %bb30
  store i64 %_36.0, ptr %count.dbg.spill8, align 8, !dbg !1235
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill8, metadata !1174, metadata !DIExpression()), !dbg !1236
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h2756a2f44b36c0c2E(ptr %x, ptr %y, i64 %_36.0) #10, !dbg !1236
  br label %bb49, !dbg !1236

panic7:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_1c99eb2e2429202974a1788dce7f6920) #11, !dbg !1235
  unreachable, !dbg !1235

bb49:                                             ; preds = %bb48, %bb47, %bb31
  ret void, !dbg !1237

bb33:                                             ; preds = %bb32
  store i8 0, ptr %_39, align 1, !dbg !1222
  br label %bb35, !dbg !1222

bb34:                                             ; preds = %bb32
  %_47 = icmp eq i64 1, 0, !dbg !1222
  %31 = call i1 @llvm.expect.i1(i1 %_47, i1 false), !dbg !1222
  br i1 %31, label %panic9, label %bb40, !dbg !1222

bb40:                                             ; preds = %bb34
  %_44 = urem i64 24, 1, !dbg !1222
  %_43 = icmp eq i64 %_44, 0, !dbg !1222
  %32 = zext i1 %_43 to i8, !dbg !1222
  store i8 %32, ptr %_39, align 1, !dbg !1222
  br label %bb35, !dbg !1222

panic9:                                           ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.6, i64 57, ptr align 8 @alloc_aee30a4ba5cd6160a04cfc5ee6f29e2a) #11, !dbg !1222
  unreachable, !dbg !1222

bb35:                                             ; preds = %bb33, %bb40
  %33 = load i8, ptr %_39, align 1, !dbg !1222, !range !242, !noundef !24
  %34 = trunc i8 %33 to i1, !dbg !1222
  br i1 %34, label %bb41, label %bb48, !dbg !1222

bb41:                                             ; preds = %bb35
  store ptr %x, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !1238, metadata !DIExpression()), !dbg !1245
  store ptr %x, ptr %x.dbg.spill11, align 8, !dbg !1222
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill11, metadata !1176, metadata !DIExpression()), !dbg !1247
  store ptr %y, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !1238, metadata !DIExpression()), !dbg !1248
  store ptr %y, ptr %y.dbg.spill13, align 8, !dbg !1247
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill13, metadata !1179, metadata !DIExpression()), !dbg !1250
  %_54 = icmp eq i64 1, 0, !dbg !1250
  %35 = call i1 @llvm.expect.i1(i1 %_54, i1 false), !dbg !1250
  br i1 %35, label %panic14, label %bb46, !dbg !1250

bb46:                                             ; preds = %bb41
  %_51 = udiv i64 24, 1, !dbg !1250
  %36 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %count, i64 %_51), !dbg !1250
  %_55.0 = extractvalue { i64, i1 } %36, 0, !dbg !1250
  %_55.1 = extractvalue { i64, i1 } %36, 1, !dbg !1250
  %37 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !1250
  br i1 %37, label %panic15, label %bb47, !dbg !1250

panic14:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_aee30a4ba5cd6160a04cfc5ee6f29e2a) #11, !dbg !1250
  unreachable, !dbg !1250

bb47:                                             ; preds = %bb46
  store i64 %_55.0, ptr %count.dbg.spill16, align 8, !dbg !1250
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill16, metadata !1181, metadata !DIExpression()), !dbg !1251
; call core::ptr::swap_nonoverlapping_simple_untyped
  call void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h97bc86d9d3c3b08bE(ptr %x, ptr %y, i64 %_55.0) #10, !dbg !1251
  br label %bb49, !dbg !1251

panic15:                                          ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_aee30a4ba5cd6160a04cfc5ee6f29e2a) #11, !dbg !1250
  unreachable, !dbg !1250
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hb93b12de4d910fe0E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1252 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1256, metadata !DIExpression()), !dbg !1258
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1257, metadata !DIExpression()), !dbg !1259
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !555, metadata !DIExpression()), !dbg !1260
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h4596d8df27de8d45E(ptr %data, i64 %len) #10, !dbg !1262
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1262
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1262
  %3 = insertvalue { ptr, i64 } poison, ptr %1, 0, !dbg !1263
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1263
  ret { ptr, i64 } %4, !dbg !1263
}

; core::ptr::drop_in_place<u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u32$GT$17h208e4315a370da61E"(ptr %_1) unnamed_addr #0 !dbg !1264 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1269, metadata !DIExpression()), !dbg !1272
  ret void, !dbg !1272
}

; core::ptr::drop_in_place<u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr24drop_in_place$LT$u64$GT$17hf7c86fa446e088a4E"(ptr %_1) unnamed_addr #0 !dbg !1273 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1278, metadata !DIExpression()), !dbg !1279
  ret void, !dbg !1279
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h72e5f39bb23cac74E(ptr %data, i64 %len) unnamed_addr #0 !dbg !1280 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1284, metadata !DIExpression()), !dbg !1286
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1285, metadata !DIExpression()), !dbg !1287
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1288, metadata !DIExpression()), !dbg !1294
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hd44602cd73005437E(ptr %data, i64 %len) #10, !dbg !1296
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !1296
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !1296
  %3 = insertvalue { ptr, i64 } poison, ptr %1, 0, !dbg !1297
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !1297
  ret { ptr, i64 } %4, !dbg !1297
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h56648f426ae11b3dE"(ptr %_1) unnamed_addr #0 !dbg !1298 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1303, metadata !DIExpression()), !dbg !1306
  ret void, !dbg !1306
}

; core::ptr::drop_in_place<&u32>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17hb29ede95f2e852e7E"(ptr %_1) unnamed_addr #0 !dbg !1307 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1312, metadata !DIExpression()), !dbg !1315
  ret void, !dbg !1315
}

; core::ptr::drop_in_place<&u64>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h063f7adf094db454E"(ptr %_1) unnamed_addr #0 !dbg !1316 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1321, metadata !DIExpression()), !dbg !1324
  ret void, !dbg !1324
}

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17he6ae6a6b44528d63E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 !dbg !1325 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %self.dbg.spill.i9 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill6 = alloca ptr, align 8
  %x.dbg.spill5 = alloca ptr, align 8
  %y.dbg.spill4 = alloca ptr, align 8
  %x.dbg.spill2 = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %i = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1327, metadata !DIExpression()), !dbg !1341
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1328, metadata !DIExpression()), !dbg !1342
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1329, metadata !DIExpression()), !dbg !1343
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1335, metadata !DIExpression()), !dbg !1344
  store ptr %x, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !1345, metadata !DIExpression()), !dbg !1352
  store ptr %x, ptr %x.dbg.spill2, align 8, !dbg !1354
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill2, metadata !1330, metadata !DIExpression()), !dbg !1355
  store ptr %y, ptr %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !1345, metadata !DIExpression()), !dbg !1356
  store ptr %y, ptr %y.dbg.spill4, align 8, !dbg !1358
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill4, metadata !1333, metadata !DIExpression()), !dbg !1359
  store i64 0, ptr %i, align 8, !dbg !1360
  br label %bb3, !dbg !1361

bb3:                                              ; preds = %bb8, %start
  %_8 = load i64, ptr %i, align 8, !dbg !1362, !noundef !24
  %_7 = icmp ult i64 %_8, %count, !dbg !1362
  br i1 %_7, label %bb4, label %bb9, !dbg !1362

bb9:                                              ; preds = %bb3
  ret void, !dbg !1363

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !1364, !noundef !24
  store ptr %x, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !1365, metadata !DIExpression()), !dbg !1371
  store i64 %_12, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1370, metadata !DIExpression()), !dbg !1373
  store ptr %x, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !1374, metadata !DIExpression()), !dbg !1380
  store i64 %_12, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !1379, metadata !DIExpression()), !dbg !1382
  %2 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %x, i64 %_12, !dbg !1383
  store ptr %2, ptr %1, align 8, !dbg !1383
  %_3.i = load ptr, ptr %1, align 8, !dbg !1383, !noundef !24
  store ptr %_3.i, ptr %x.dbg.spill5, align 8, !dbg !1384
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill5, metadata !1337, metadata !DIExpression()), !dbg !1385
  %_16 = load i64, ptr %i, align 8, !dbg !1386, !noundef !24
  store ptr %y, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1365, metadata !DIExpression()), !dbg !1387
  store i64 %_16, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1370, metadata !DIExpression()), !dbg !1389
  store ptr %y, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !1374, metadata !DIExpression()), !dbg !1390
  store i64 %_16, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !1379, metadata !DIExpression()), !dbg !1392
  %3 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", ptr %y, i64 %_16, !dbg !1393
  store ptr %3, ptr %0, align 8, !dbg !1393
  %_3.i15 = load ptr, ptr %0, align 8, !dbg !1393, !noundef !24
  store ptr %_3.i15, ptr %y.dbg.spill6, align 8, !dbg !1394
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill6, metadata !1339, metadata !DIExpression()), !dbg !1395
; call core::mem::swap_simple
  call void @_ZN4core3mem11swap_simple17h3fac42cd55c798b3E(ptr align 8 %_3.i, ptr align 8 %_3.i15) #10, !dbg !1396
  %4 = load i64, ptr %i, align 8, !dbg !1397, !noundef !24
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %4, i64 1), !dbg !1397
  %_18.0 = extractvalue { i64, i1 } %5, 0, !dbg !1397
  %_18.1 = extractvalue { i64, i1 } %5, 1, !dbg !1397
  %6 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1397
  br i1 %6, label %panic, label %bb8, !dbg !1397

bb8:                                              ; preds = %bb4
  store i64 %_18.0, ptr %i, align 8, !dbg !1397
  br label %bb3, !dbg !1361

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_dbabcbd9c3313ee88be66af0b6b2af23) #11, !dbg !1397
  unreachable, !dbg !1397
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h6e169d0229e0c3d6E(ptr sret(%"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>") %0, ptr %src) unnamed_addr #0 !dbg !1398 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1402, metadata !DIExpression()), !dbg !1403
  br i1 true, label %bb1, label %bb2, !dbg !1404

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17h8145d8f41345a3b0E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %src, i64 24, i1 false), !dbg !1405
  ret void, !dbg !1406

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1404
  %1 = load ptr, ptr %_4, align 8, !dbg !1404, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1407, metadata !DIExpression()), !dbg !1413
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h7024e836f5e00bcaE(ptr %1) #10, !dbg !1415
  %_2.i = xor i1 %_3.i, true, !dbg !1417
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h8145d8f41345a3b0E.exit, !dbg !1417

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1418
  unreachable, !dbg !1418

_ZN4core3ptr4read7runtime17h8145d8f41345a3b0E.exit: ; preds = %bb1
  br label %bb2, !dbg !1404
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h9bbf8b811484d8b8E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %src) unnamed_addr #0 !dbg !1419 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1423, metadata !DIExpression()), !dbg !1424
  br i1 true, label %bb1, label %bb2, !dbg !1425

bb2:                                              ; preds = %_ZN4core3ptr4read7runtime17hcc9c66b658ebb9a0E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %src, i64 24, i1 false), !dbg !1426
  ret void, !dbg !1427

bb1:                                              ; preds = %start
  store ptr %src, ptr %_4, align 8, !dbg !1425
  %1 = load ptr, ptr %_4, align 8, !dbg !1425, !noundef !24
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1428, metadata !DIExpression()), !dbg !1433
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %1) #10, !dbg !1435
  %_2.i = xor i1 %_3.i, true, !dbg !1437
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17hcc9c66b658ebb9a0E.exit, !dbg !1437

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #11, !dbg !1438
  unreachable, !dbg !1438

_ZN4core3ptr4read7runtime17hcc9c66b658ebb9a0E.exit: ; preds = %bb1
  br label %bb2, !dbg !1425
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17h8b2f3774968ef06dE(ptr %x, ptr %y) unnamed_addr #0 !dbg !1439 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1443, metadata !DIExpression()), !dbg !1447
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1444, metadata !DIExpression()), !dbg !1448
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1445, metadata !DIExpression()), !dbg !1449
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1450, metadata !DIExpression()), !dbg !1456
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %x, ptr %tmp, i64 1) #10, !dbg !1458
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17hde30679fb0cb8f2eE(ptr %y, ptr %x, i64 1) #10, !dbg !1459
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1460, metadata !DIExpression()), !dbg !1466
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %tmp, ptr %y, i64 1) #10, !dbg !1468
  ret void, !dbg !1469
}

; core::ptr::swap
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4swap17hbde6658a27455df3E(ptr %x, ptr %y) unnamed_addr #0 !dbg !1470 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %y.dbg.spill = alloca ptr, align 8
  %x.dbg.spill = alloca ptr, align 8
  %tmp = alloca i64, align 8
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1474, metadata !DIExpression()), !dbg !1485
  store ptr %y, ptr %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !1475, metadata !DIExpression()), !dbg !1486
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1476, metadata !DIExpression()), !dbg !1487
  %1 = load i64, ptr %0, align 8, !dbg !1488
  store i64 %1, ptr %tmp, align 8, !dbg !1493
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1494, metadata !DIExpression()), !dbg !1500
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h3fc0a0a5354c2a60E(ptr %x, ptr %tmp, i64 1) #10, !dbg !1502
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h6835612ca7c29911E(ptr %y, ptr %x, i64 1) #10, !dbg !1503
  store ptr %tmp, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1504, metadata !DIExpression()), !dbg !1510
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h3fc0a0a5354c2a60E(ptr %tmp, ptr %y, i64 1) #10, !dbg !1512
  ret void, !dbg !1513
}

; core::ptr::drop_in_place<bootloader::bootinfo::TlsTemplate>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17ha0142110463679f0E"(ptr %_1) unnamed_addr #0 !dbg !1514 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1519, metadata !DIExpression()), !dbg !1522
  ret void, !dbg !1522
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h501899311e03ab4eE(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1523 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1527, metadata !DIExpression()), !dbg !1529
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1528, metadata !DIExpression()), !dbg !1530
  br i1 true, label %bb1, label %bb2, !dbg !1531

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17hc070da9edb9c4022E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1532
  ret void, !dbg !1533

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1531
  %0 = load ptr, ptr %_5, align 8, !dbg !1531, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1534, metadata !DIExpression()), !dbg !1540
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %0) #10, !dbg !1542
  %_2.i = xor i1 %_3.i, true, !dbg !1544
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17hc070da9edb9c4022E.exit, !dbg !1544

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1545
  unreachable, !dbg !1545

_ZN4core3ptr5write7runtime17hc070da9edb9c4022E.exit: ; preds = %bb1
  br label %bb2, !dbg !1531
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17hd3c3cfa0b3004d5dE(ptr %dst, ptr %src) unnamed_addr #0 !dbg !1546 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1550, metadata !DIExpression()), !dbg !1552
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1551, metadata !DIExpression()), !dbg !1553
  br i1 true, label %bb1, label %bb2, !dbg !1554

bb2:                                              ; preds = %_ZN4core3ptr5write7runtime17he7f4a72ad6c3c503E.exit, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !1555
  ret void, !dbg !1556

bb1:                                              ; preds = %start
  store ptr %dst, ptr %_5, align 8, !dbg !1554
  %0 = load ptr, ptr %_5, align 8, !dbg !1554, !noundef !24
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1557, metadata !DIExpression()), !dbg !1562
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h7024e836f5e00bcaE(ptr %0) #10, !dbg !1564
  %_2.i = xor i1 %_3.i, true, !dbg !1566
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17he7f4a72ad6c3c503E.exit, !dbg !1566

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #11, !dbg !1567
  unreachable, !dbg !1567

_ZN4core3ptr5write7runtime17he7f4a72ad6c3c503E.exit: ; preds = %bb1
  br label %bb2, !dbg !1554
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17h9f8456f6721d4ab0E"(ptr %_1) unnamed_addr #0 !dbg !1568 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1573, metadata !DIExpression()), !dbg !1576
  ret void, !dbg !1576
}

; core::ptr::drop_in_place<bootloader::bootinfo::memory_map::FrameRange>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17hbe46a727592d2381E"(ptr %_1) unnamed_addr #0 !dbg !1577 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1582, metadata !DIExpression()), !dbg !1585
  ret void, !dbg !1585
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h749af3c141c3b648E"(ptr %_1) unnamed_addr #0 !dbg !1586 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1591, metadata !DIExpression()), !dbg !1592
  ret void, !dbg !1592
}

; core::ptr::drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h00bb43a2928ed5a5E"(ptr %_1) unnamed_addr #0 !dbg !1593 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1598, metadata !DIExpression()), !dbg !1601
  ret void, !dbg !1601
}

; core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hb93bd9a3be733f0bE"(ptr %ptr) unnamed_addr #0 !dbg !1602 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1607, metadata !DIExpression()), !dbg !1608
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1609, metadata !DIExpression()), !dbg !1616
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1618, metadata !DIExpression()), !dbg !1624
  %0 = ptrtoint ptr %ptr to i64, !dbg !1626
  %1 = icmp eq i64 %0, 0, !dbg !1627
  ret i1 %1, !dbg !1628
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd185ac7ae47d39a4E"(ptr %self) unnamed_addr #0 !dbg !1629 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1633, metadata !DIExpression()), !dbg !1634
  store ptr %self, ptr %_2, align 8, !dbg !1635
  %0 = load ptr, ptr %_2, align 8, !dbg !1636, !noundef !24
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hb93bd9a3be733f0bE"(ptr %0) #10, !dbg !1636
  ret i1 %1, !dbg !1637
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h4596d8df27de8d45E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1638 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1644, metadata !DIExpression()), !dbg !1646
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1645, metadata !DIExpression()), !dbg !1647
  store ptr %data_address, ptr %_4, align 8, !dbg !1648
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1648
  store i64 %metadata, ptr %0, align 8, !dbg !1648
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1649
  %2 = load ptr, ptr %1, align 8, !dbg !1649, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1649
  %4 = load i64, ptr %3, align 8, !dbg !1649, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1649
  store ptr %2, ptr %5, align 8, !dbg !1649
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1649
  store i64 %4, ptr %6, align 8, !dbg !1649
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1649
  %8 = load ptr, ptr %7, align 8, !dbg !1649, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1649
  %10 = load i64, ptr %9, align 8, !dbg !1649, !noundef !24
  %11 = insertvalue { ptr, i64 } poison, ptr %8, 0, !dbg !1650
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1650
  ret { ptr, i64 } %12, !dbg !1650
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define ptr @_ZN4core3ptr8metadata14from_raw_parts17h95a0ae0b76194160E(ptr %data_address) unnamed_addr #0 !dbg !1651 {
start:
  %metadata.dbg.spill = alloca {}, align 1
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"core::ptr::metadata::PtrComponents<bootinfo::memory_map::MemoryRegion>", align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1655, metadata !DIExpression()), !dbg !1657
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1656, metadata !DIExpression()), !dbg !1658
  store ptr %data_address, ptr %_4, align 8, !dbg !1659
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 8, i1 false), !dbg !1660
  %0 = load ptr, ptr %_3, align 8, !dbg !1660, !noundef !24
  ret ptr %0, !dbg !1661
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hd44602cd73005437E(ptr %data_address, i64 %metadata) unnamed_addr #0 !dbg !1662 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !1666, metadata !DIExpression()), !dbg !1668
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !1667, metadata !DIExpression()), !dbg !1669
  store ptr %data_address, ptr %_4, align 8, !dbg !1670
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1670
  store i64 %metadata, ptr %0, align 8, !dbg !1670
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !1671
  %2 = load ptr, ptr %1, align 8, !dbg !1671, !noundef !24
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !1671
  %4 = load i64, ptr %3, align 8, !dbg !1671, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1671
  store ptr %2, ptr %5, align 8, !dbg !1671
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1671
  store i64 %4, ptr %6, align 8, !dbg !1671
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !1671
  %8 = load ptr, ptr %7, align 8, !dbg !1671, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !1671
  %10 = load i64, ptr %9, align 8, !dbg !1671, !noundef !24
  %11 = insertvalue { ptr, i64 } poison, ptr %8, 0, !dbg !1672
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1672
  ret { ptr, i64 } %12, !dbg !1672
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr8metadata8metadata17h4fc945275518d4ceE(ptr %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1673 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[bootinfo::memory_map::MemoryRegion]>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1677, metadata !DIExpression()), !dbg !1678
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 0, !dbg !1679
  store ptr %ptr.0, ptr %2, align 8, !dbg !1679
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1679
  store i64 %ptr.1, ptr %3, align 8, !dbg !1679
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1679
  %5 = load i64, ptr %4, align 8, !dbg !1679, !noundef !24
  ret i64 %5, !dbg !1680
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr8metadata8metadata17hfa119b9ee6b727ccE(ptr %ptr) unnamed_addr #0 !dbg !1681 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<bootinfo::memory_map::MemoryRegion>", align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1683, metadata !DIExpression()), !dbg !1684
  store ptr %ptr, ptr %_2, align 8, !dbg !1685
  ret void, !dbg !1686
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd2f969f601200b1eE"(ptr %ptr) unnamed_addr #0 !dbg !1687 {
start:
  %ptr.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1692, metadata !DIExpression()), !dbg !1693
  br i1 true, label %bb1, label %bb2, !dbg !1694

bb2:                                              ; preds = %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17hcc7620fd88e5ec69E.exit", %start
  store ptr %ptr, ptr %0, align 8, !dbg !1695
  %1 = load ptr, ptr %0, align 8, !dbg !1696, !nonnull !24, !noundef !24
  ret ptr %1, !dbg !1696

bb1:                                              ; preds = %start
  store ptr %ptr, ptr %_4, align 8, !dbg !1694
  %2 = load ptr, ptr %_4, align 8, !dbg !1694, !noundef !24
  store ptr %2, ptr %ptr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !1697, metadata !DIExpression()), !dbg !1702
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd185ac7ae47d39a4E"(ptr %2) #10, !dbg !1704
  %_3.i = xor i1 %_4.i, true, !dbg !1706
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17hcc7620fd88e5ec69E.exit", !dbg !1707

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_20b3d155afd5c58c42e598b7e6d186ef, i64 93) #11, !dbg !1708
  unreachable, !dbg !1708

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17hcc7620fd88e5ec69E.exit": ; preds = %bb1
  br label %bb2, !dbg !1694
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17he1d57f4f8c65cbe0E"(ptr %self) unnamed_addr #0 !dbg !1709 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1711, metadata !DIExpression()), !dbg !1712
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h13ed7b6c008c09c7E"(ptr %self, i64 8) #10, !dbg !1713
  ret i1 %0, !dbg !1714
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17he2efdc4959409220E"(ptr %self) unnamed_addr #0 !dbg !1715 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1717, metadata !DIExpression()), !dbg !1718
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h9d0abe44a5b22755E"(ptr %self, i64 8) #10, !dbg !1719
  ret i1 %0, !dbg !1720
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hd1e3d1ebab454cacE"(ptr %ptr, i64 %align) unnamed_addr #0 !dbg !1721 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %align.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1726, metadata !DIExpression()), !dbg !1728
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1727, metadata !DIExpression()), !dbg !1729
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1730, metadata !DIExpression()), !dbg !1736
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1738, metadata !DIExpression()), !dbg !1744
  %0 = ptrtoint ptr %ptr to i64, !dbg !1746
  %_6.0 = sub i64 %align, 1, !dbg !1747
  %_6.1 = icmp ult i64 %align, 1, !dbg !1747
  %1 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !1747
  br i1 %1, label %panic, label %bb2, !dbg !1747

bb2:                                              ; preds = %start
  %_3 = and i64 %0, %_6.0, !dbg !1748
  %2 = icmp eq i64 %_3, 0, !dbg !1748
  ret i1 %2, !dbg !1749

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_62bc2c890ddc30f006544617e59d1e71) #11, !dbg !1747
  unreachable, !dbg !1747
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h13ed7b6c008c09c7E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1750 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1754, metadata !DIExpression()), !dbg !1756
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1755, metadata !DIExpression()), !dbg !1757
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1202, metadata !DIExpression()), !dbg !1758
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1207, metadata !DIExpression()), !dbg !1760
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1762
  store i64 %1, ptr %0, align 8, !dbg !1762
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1762, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !1762
  %3 = icmp eq i32 %2, 1, !dbg !1763
  %_3 = xor i1 %3, true, !dbg !1764
  br i1 %_3, label %bb2, label %bb4, !dbg !1764

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1765, metadata !DIExpression()), !dbg !1771
  store ptr %self, ptr %_8, align 8, !dbg !1773
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !1773
  store i64 %align, ptr %4, align 8, !dbg !1773
  %5 = load ptr, ptr %_8, align 8, !dbg !1774, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !1774
  %7 = load i64, ptr %6, align 8, !dbg !1774, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hd1e3d1ebab454cacE"(ptr %5, i64 %7) #10, !dbg !1774
  ret i1 %8, !dbg !1775

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h7d88afe42d22638bE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !1776
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcab56c0eeadf4812E(ptr %_6, ptr align 8 @alloc_96632254c3ae610e82e64a0469a9df2d) #11, !dbg !1776
  unreachable, !dbg !1776
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h9d0abe44a5b22755E"(ptr %self, i64 %align) unnamed_addr #0 !dbg !1777 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1781, metadata !DIExpression()), !dbg !1783
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !1782, metadata !DIExpression()), !dbg !1784
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1202, metadata !DIExpression()), !dbg !1785
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !1207, metadata !DIExpression()), !dbg !1787
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !1789
  store i64 %1, ptr %0, align 8, !dbg !1789
  %_2.i.i = load i64, ptr %0, align 8, !dbg !1789, !noundef !24
  %2 = trunc i64 %_2.i.i to i32, !dbg !1789
  %3 = icmp eq i32 %2, 1, !dbg !1790
  %_3 = xor i1 %3, true, !dbg !1791
  br i1 %_3, label %bb2, label %bb4, !dbg !1791

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !555, metadata !DIExpression()), !dbg !1792
  store ptr %self, ptr %_8, align 8, !dbg !1794
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !1794
  store i64 %align, ptr %4, align 8, !dbg !1794
  %5 = load ptr, ptr %_8, align 8, !dbg !1795, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_8, i32 0, i32 1, !dbg !1795
  %7 = load i64, ptr %6, align 8, !dbg !1795, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hd1e3d1ebab454cacE"(ptr %5, i64 %7) #10, !dbg !1795
  ret i1 %8, !dbg !1796

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h7d88afe42d22638bE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_60ac762d06592b2ab3358175d7a7c295, i64 1) #10, !dbg !1797
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcab56c0eeadf4812E(ptr %_6, ptr align 8 @alloc_96632254c3ae610e82e64a0469a9df2d) #11, !dbg !1797
  unreachable, !dbg !1797
}

; core::ptr::const_ptr::<impl *const T>::with_metadata_of
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h67b5cbd678b7f6cfE"(ptr %self, ptr %meta) unnamed_addr #0 !dbg !1798 {
start:
  %meta.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1803, metadata !DIExpression()), !dbg !1807
  store ptr %meta, ptr %meta.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %meta.dbg.spill, metadata !1804, metadata !DIExpression()), !dbg !1808
; call core::ptr::metadata::metadata
  call void @_ZN4core3ptr8metadata8metadata17hfa119b9ee6b727ccE(ptr %meta) #10, !dbg !1809
; call core::ptr::metadata::from_raw_parts
  %0 = call ptr @_ZN4core3ptr8metadata14from_raw_parts17h95a0ae0b76194160E(ptr %self) #10, !dbg !1810
  ret ptr %0, !dbg !1811
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hfdbe35ac5afddf51E"(ptr %ptr) unnamed_addr #0 !dbg !1812 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1817, metadata !DIExpression()), !dbg !1818
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1819, metadata !DIExpression()), !dbg !1824
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1826, metadata !DIExpression()), !dbg !1831
  %0 = ptrtoint ptr %ptr to i64, !dbg !1833
  %1 = icmp eq i64 %0, 0, !dbg !1834
  ret i1 %1, !dbg !1835
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf52a54f7e512b4a6E"(ptr %self) unnamed_addr #0 !dbg !1836 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1838, metadata !DIExpression()), !dbg !1839
  store ptr %self, ptr %_2, align 8, !dbg !1840
  %0 = load ptr, ptr %_2, align 8, !dbg !1841, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hfdbe35ac5afddf51E"(ptr %0) #10, !dbg !1841
  ret i1 %1, !dbg !1842
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hfc824951da861796E"(ptr %self) unnamed_addr #0 !dbg !1843 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1845, metadata !DIExpression()), !dbg !1846
  store ptr %self, ptr %_2, align 8, !dbg !1847
  %0 = load ptr, ptr %_2, align 8, !dbg !1848, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hfdbe35ac5afddf51E"(ptr %0) #10, !dbg !1848
  ret i1 %1, !dbg !1849
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h292edb86da6528a0E"(ptr %self, ptr %origin) unnamed_addr #0 !dbg !1850 {
start:
  %origin.dbg.spill.i = alloca ptr, align 8
  %this.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %pointee_size.dbg.spill = alloca i64, align 8
  %origin.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca i8, align 1
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1854, metadata !DIExpression()), !dbg !1860
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1856, metadata !DIExpression()), !dbg !1861
  store ptr %origin, ptr %origin.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill, metadata !1855, metadata !DIExpression()), !dbg !1862
  br i1 true, label %bb1, label %bb2, !dbg !1863

bb2:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hbc68420aebd61bbfE.exit", %start
  store i64 24, ptr %pointee_size.dbg.spill, align 8, !dbg !1864
  call void @llvm.dbg.declare(metadata ptr %pointee_size.dbg.spill, metadata !1858, metadata !DIExpression()), !dbg !1865
  %_9 = icmp ult i64 0, 24, !dbg !1866
  br i1 %_9, label %bb5, label %bb4, !dbg !1866

bb1:                                              ; preds = %start
  store ptr %self, ptr %_5, align 8, !dbg !1863
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !1863
  store ptr %origin, ptr %1, align 8, !dbg !1863
  %2 = load ptr, ptr %_5, align 8, !dbg !1863, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !1863
  %4 = load ptr, ptr %3, align 8, !dbg !1863, !noundef !24
  store ptr %2, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !1867, metadata !DIExpression()), !dbg !1874
  store ptr %4, ptr %origin.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %origin.dbg.spill.i, metadata !1873, metadata !DIExpression()), !dbg !1874
  %_4.i = icmp uge ptr %2, %4, !dbg !1876
  %_3.i = xor i1 %_4.i, true, !dbg !1878
  br i1 %_3.i, label %bb1.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hbc68420aebd61bbfE.exit", !dbg !1878

bb1.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_cb50775363ffdd1238910b6e9573721d, i64 71) #11, !dbg !1879
  unreachable, !dbg !1879

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hbc68420aebd61bbfE.exit": ; preds = %bb1
  br label %bb2, !dbg !1863

bb4:                                              ; preds = %bb2
  store i8 0, ptr %_8, align 1, !dbg !1866
  br label %bb6, !dbg !1866

bb5:                                              ; preds = %bb2
  %_11 = icmp ule i64 24, 9223372036854775807, !dbg !1880
  %5 = zext i1 %_11 to i8, !dbg !1866
  store i8 %5, ptr %_8, align 1, !dbg !1866
  br label %bb6, !dbg !1866

bb6:                                              ; preds = %bb4, %bb5
  %6 = load i8, ptr %_8, align 1, !dbg !1881, !range !242, !noundef !24
  %7 = trunc i8 %6 to i1, !dbg !1881
  %_7 = xor i1 %7, true, !dbg !1881
  br i1 %_7, label %bb7, label %bb8, !dbg !1881

bb8:                                              ; preds = %bb6
  %8 = ptrtoint ptr %self to i64, !dbg !1882
  %9 = ptrtoint ptr %origin to i64, !dbg !1882
  %10 = sub nuw i64 %8, %9, !dbg !1882
  %11 = udiv exact i64 %10, 24, !dbg !1882
  store i64 %11, ptr %0, align 8, !dbg !1882
  %12 = load i64, ptr %0, align 8, !dbg !1882, !noundef !24
  ret i64 %12, !dbg !1883

bb7:                                              ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_054967ab02808043e6941783e8d3de80) #11, !dbg !1881
  unreachable, !dbg !1881
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h350a4060caf8200cE"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !1884 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1887, metadata !DIExpression()), !dbg !1888
; call core::ptr::metadata::metadata
  %2 = call i64 @_ZN4core3ptr8metadata8metadata17h4fc945275518d4ceE(ptr %self.0, i64 %self.1) #10, !dbg !1889
  ret i64 %2, !dbg !1890
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h54c6b9f4248a570dE"(ptr %self.0, i64 %self.1) unnamed_addr #0 !dbg !1891 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1895, metadata !DIExpression()), !dbg !1896
  ret ptr %self.0, !dbg !1897
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hc1741b6a9d7e3c4bE"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !1898 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1906, metadata !DIExpression()), !dbg !1910
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1907, metadata !DIExpression()), !dbg !1911
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hbe1026989b58af50E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !1912
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !1912
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !1912
  %6 = insertvalue { ptr, i64 } poison, ptr %4, 0, !dbg !1913
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !1913
  ret { ptr, i64 } %7, !dbg !1913
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h372658ec52d9075cE"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !1914 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1920, metadata !DIExpression()), !dbg !1922
  %1 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1921, metadata !DIExpression()), !dbg !1923
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h176acecc10d58840E"(ptr align 8 %self, i64 64, i64 %index.0, i64 %index.1, ptr align 8 %0) #10, !dbg !1924
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !1924
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !1924
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !1925
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !1925
  ret { ptr, i64 } %5, !dbg !1925
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h59d0703bd83b67daE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid, ptr align 8 %1) unnamed_addr #0 !dbg !1926 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1935, metadata !DIExpression()), !dbg !1937
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !1936, metadata !DIExpression()), !dbg !1938
  %_4 = icmp ule i64 %mid, %self.1, !dbg !1939
  %_3 = xor i1 %_4, true, !dbg !1940
  br i1 %_3, label %bb1, label %bb2, !dbg !1940

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h70f505bca652d857E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) #10, !dbg !1941
  ret void, !dbg !1942

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_fddaeef1fe1a23c45402ef8f58614acb, i64 35, ptr align 8 %1) #11, !dbg !1940
  unreachable, !dbg !1940
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !1943 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1947, metadata !DIExpression()), !dbg !1951
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !1948, metadata !DIExpression()), !dbg !1952
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h99d4e103d214d05bE"(i64 %index, ptr %self.0, i64 %self.1) #10, !dbg !1953
  ret ptr %_3, !dbg !1954
}

; core::slice::<impl [T]>::as_mut_ptr_range
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h2223e61848f7512aE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1955 {
start:
  %self.dbg.spill.i4 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = alloca { ptr, ptr }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1965, metadata !DIExpression()), !dbg !1970
  store ptr %self.0, ptr %self.dbg.spill.i4, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i4, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1971, metadata !DIExpression()), !dbg !1976
  store ptr %self.0, ptr %start.dbg.spill, align 8, !dbg !1978
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !1966, metadata !DIExpression()), !dbg !1979
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !276, metadata !DIExpression()), !dbg !1980
  store i64 %self.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !282, metadata !DIExpression()), !dbg !1982
  store ptr %self.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !286, metadata !DIExpression()), !dbg !1983
  store i64 %self.1, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !291, metadata !DIExpression()), !dbg !1985
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %self.1, !dbg !1986
  store ptr %5, ptr %0, align 8, !dbg !1986
  %_3.i = load ptr, ptr %0, align 8, !dbg !1986, !noundef !24
  store ptr %_3.i, ptr %end.dbg.spill, align 8, !dbg !1987
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !1968, metadata !DIExpression()), !dbg !1988
  store ptr %self.0, ptr %1, align 8, !dbg !1989
  %6 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !1989
  store ptr %_3.i, ptr %6, align 8, !dbg !1989
  %7 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0, !dbg !1990
  %8 = load ptr, ptr %7, align 8, !dbg !1990, !noundef !24
  %9 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !1990
  %10 = load ptr, ptr %9, align 8, !dbg !1990, !noundef !24
  %11 = insertvalue { ptr, ptr } poison, ptr %8, 0, !dbg !1990
  %12 = insertvalue { ptr, ptr } %11, ptr %10, 1, !dbg !1990
  ret { ptr, ptr } %12, !dbg !1990
}

; core::slice::<impl [T]>::sort_unstable_by
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h79a58ecc265a23b4E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1991 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_4 = alloca ptr, align 8
  %compare = alloca %"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]", align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1995, metadata !DIExpression()), !dbg !1999
  call void @llvm.dbg.declare(metadata ptr %compare, metadata !1996, metadata !DIExpression()), !dbg !2000
  store ptr %compare, ptr %_4, align 8, !dbg !2001
  %2 = load ptr, ptr %_4, align 8, !dbg !2002, !nonnull !24, !align !2003, !noundef !24
; call core::slice::sort::quicksort
  call void @_ZN4core5slice4sort9quicksort17h903c0e9efaa64e95E(ptr align 8 %self.0, i64 %self.1, ptr align 1 %2) #10, !dbg !2002
  ret void, !dbg !2004
}

; core::slice::<impl [T]>::sort_unstable_by::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2005 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_6 = alloca { ptr, ptr }, align 8
  %_5 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2011, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2012
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2009, metadata !DIExpression()), !dbg !2013
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2010, metadata !DIExpression()), !dbg !2014
  %_8 = load ptr, ptr %_1, align 8, !dbg !2015, !nonnull !24, !align !2003, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2015
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2015
  store ptr %b, ptr %0, align 8, !dbg !2015
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2015
  %2 = load ptr, ptr %1, align 8, !dbg !2015, !nonnull !24, !align !510, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2015
  %4 = load ptr, ptr %3, align 8, !dbg !2015, !nonnull !24, !align !510, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %5 = call i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h6df439cb131128d4E"(ptr align 1 %_8, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2015, !range !745
  store i8 %5, ptr %_5, align 1, !dbg !2015
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %6 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h29e22795268aad95E"(ptr align 1 %_5, ptr align 1 @alloc_9a72dc1c87ddefcce62e4b5ab68e5150) #10, !dbg !2015
  ret i1 %6, !dbg !2016
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h70f505bca652d857E"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %0, ptr align 8 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 !dbg !2017 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %mid.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i3 = alloca { ptr, i64 }, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2021, metadata !DIExpression()), !dbg !2027
  store i64 %mid, ptr %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !2022, metadata !DIExpression()), !dbg !2028
  store i64 %self.1, ptr %len.dbg.spill, align 8, !dbg !2029
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2023, metadata !DIExpression()), !dbg !2030
  store ptr %self.0, ptr %self.dbg.spill.i3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i3, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !1971, metadata !DIExpression()), !dbg !2031
  store ptr %self.0, ptr %ptr.dbg.spill, align 8, !dbg !2033
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2025, metadata !DIExpression()), !dbg !2034
  br i1 true, label %bb2, label %bb3, !dbg !2035

bb3:                                              ; preds = %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h1d933de8fb407671E.exit", %start
; call core::slice::raw::from_raw_parts_mut
  %5 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17ha4273453c60b0721E(ptr %self.0, i64 %mid) #10, !dbg !2036
  %_10.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2036
  %_10.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2036
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !276, metadata !DIExpression()), !dbg !2037
  store i64 %mid, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !282, metadata !DIExpression()), !dbg !2039
  store ptr %self.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !286, metadata !DIExpression()), !dbg !2040
  store i64 %mid, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !291, metadata !DIExpression()), !dbg !2042
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self.0, i64 %mid, !dbg !2043
  store ptr %6, ptr %1, align 8, !dbg !2043
  %_3.i = load ptr, ptr %1, align 8, !dbg !2043, !noundef !24
  %_17.0 = sub i64 %self.1, %mid, !dbg !2044
  %_17.1 = icmp ult i64 %self.1, %mid, !dbg !2044
  %7 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !2044
  br i1 %7, label %panic, label %bb6, !dbg !2044

bb2:                                              ; preds = %start
  store i64 %mid, ptr %_8, align 8, !dbg !2035
  %8 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !2035
  store i64 %self.1, ptr %8, align 8, !dbg !2035
  %9 = load i64, ptr %_8, align 8, !dbg !2035, !noundef !24
  %10 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !2035
  %11 = load i64, ptr %10, align 8, !dbg !2035, !noundef !24
  store i64 %9, ptr %mid.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill.i, metadata !2045, metadata !DIExpression()), !dbg !2052
  store i64 %11, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2051, metadata !DIExpression()), !dbg !2052
  %_4.i = icmp ule i64 %9, %11, !dbg !2054
  %_3.i4 = xor i1 %_4.i, true, !dbg !2056
  br i1 %_3.i4, label %bb1.i, label %"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h1d933de8fb407671E.exit", !dbg !2056

bb1.i:                                            ; preds = %bb2
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_3dc073651148de734d2593768efc16e9, i64 104) #11, !dbg !2057
  unreachable, !dbg !2057

"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h1d933de8fb407671E.exit": ; preds = %bb2
  br label %bb3, !dbg !2035

bb6:                                              ; preds = %bb3
; call core::slice::raw::from_raw_parts_mut
  %12 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17ha4273453c60b0721E(ptr %_3.i, i64 %_17.0) #10, !dbg !2058
  %_13.0 = extractvalue { ptr, i64 } %12, 0, !dbg !2058
  %_13.1 = extractvalue { ptr, i64 } %12, 1, !dbg !2058
  %13 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2059
  store ptr %_10.0, ptr %13, align 8, !dbg !2059
  %14 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2059
  store i64 %_10.1, ptr %14, align 8, !dbg !2059
  %15 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %0, i32 0, i32 1, !dbg !2059
  %16 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 0, !dbg !2059
  store ptr %_13.0, ptr %16, align 8, !dbg !2059
  %17 = getelementptr inbounds { ptr, i64 }, ptr %15, i32 0, i32 1, !dbg !2059
  store i64 %_13.1, ptr %17, align 8, !dbg !2059
  ret void, !dbg !2060

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4a6cc2814e9c70d90675aafc22034495) #11, !dbg !2044
  unreachable, !dbg !2044
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h2eb88a55d98b1b0cE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2061 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2065, metadata !DIExpression()), !dbg !2066
; call core::slice::iter::Iter<T>::new
  %2 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h3d8827bb3ebf5aa2E"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2067
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !2067
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !2067
  %5 = insertvalue { ptr, ptr } poison, ptr %3, 0, !dbg !2068
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !2068
  ret { ptr, ptr } %6, !dbg !2068
}

; core::slice::<impl [T]>::swap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h3698e108c8304892E"(ptr align 8 %self.0, i64 %self.1, i64 %a, i64 %b, ptr align 8 %0) unnamed_addr #0 !dbg !2069 {
start:
  %pb.dbg.spill = alloca ptr, align 8
  %pa.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2073, metadata !DIExpression()), !dbg !2080
  store i64 %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2074, metadata !DIExpression()), !dbg !2081
  store i64 %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2075, metadata !DIExpression()), !dbg !2082
  %_6 = icmp ult i64 %a, %self.1, !dbg !2083
  %3 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !2083
  br i1 %3, label %bb1, label %panic, !dbg !2083

bb1:                                              ; preds = %start
  %pa = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %a, !dbg !2084
  store ptr %pa, ptr %pa.dbg.spill, align 8, !dbg !2084
  call void @llvm.dbg.declare(metadata ptr %pa.dbg.spill, metadata !2076, metadata !DIExpression()), !dbg !2085
  %_9 = icmp ult i64 %b, %self.1, !dbg !2086
  %4 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !2086
  br i1 %4, label %bb2, label %panic1, !dbg !2086

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %a, i64 %self.1, ptr align 8 %0) #11, !dbg !2083
  unreachable, !dbg !2083

bb2:                                              ; preds = %bb1
  %pb = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %self.0, i64 0, i64 %b, !dbg !2087
  store ptr %pb, ptr %pb.dbg.spill, align 8, !dbg !2087
  call void @llvm.dbg.declare(metadata ptr %pb.dbg.spill, metadata !2078, metadata !DIExpression()), !dbg !2088
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h8b2f3774968ef06dE(ptr %pa, ptr %pb) #10, !dbg !2089
  ret void, !dbg !2090

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %b, i64 %self.1, ptr align 8 %0) #11, !dbg !2086
  unreachable, !dbg !2086
}

; core::slice::<impl [T]>::reverse
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h877aede61715ec1dE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2091 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %back_half.dbg.spill = alloca { ptr, i64 }, align 8
  %front_half.dbg.spill = alloca { ptr, i64 }, align 8
  %end.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %half_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2095, metadata !DIExpression()), !dbg !2104
  %half_len = udiv i64 %self.1, 2, !dbg !2105
  store i64 %half_len, ptr %half_len.dbg.spill, align 8, !dbg !2105
  call void @llvm.dbg.declare(metadata ptr %half_len.dbg.spill, metadata !2096, metadata !DIExpression()), !dbg !2106
; call core::slice::<impl [T]>::as_mut_ptr_range
  %3 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h2223e61848f7512aE"(ptr align 8 %self.0, i64 %self.1) #10, !dbg !2107
  %_8.0 = extractvalue { ptr, ptr } %3, 0, !dbg !2107
  %_8.1 = extractvalue { ptr, ptr } %3, 1, !dbg !2107
  store ptr %_8.0, ptr %start.dbg.spill, align 8, !dbg !2108
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !2098, metadata !DIExpression()), !dbg !2109
  store ptr %_8.1, ptr %end.dbg.spill, align 8, !dbg !2110
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !2100, metadata !DIExpression()), !dbg !2111
; call core::slice::raw::from_raw_parts_mut
  %4 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17ha4273453c60b0721E(ptr %_8.0, i64 %half_len) #10, !dbg !2112
  %_12.0 = extractvalue { ptr, i64 } %4, 0, !dbg !2112
  %_12.1 = extractvalue { ptr, i64 } %4, 1, !dbg !2112
  store ptr %_8.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2113, metadata !DIExpression()), !dbg !2117
  store i64 %half_len, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2116, metadata !DIExpression()), !dbg !2119
  store i64 %half_len, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2120, metadata !DIExpression()), !dbg !2127
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2129, metadata !DIExpression()), !dbg !2135
  store i64 %half_len, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2134, metadata !DIExpression()), !dbg !2137
  %5 = sub i64 0, %half_len, !dbg !2138
  store ptr %_8.1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !286, metadata !DIExpression()), !dbg !2139
  store i64 %5, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !291, metadata !DIExpression()), !dbg !2141
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_8.1, i64 %5, !dbg !2142
  store ptr %6, ptr %0, align 8, !dbg !2142
  %_3.i = load ptr, ptr %0, align 8, !dbg !2142, !noundef !24
; call core::slice::raw::from_raw_parts_mut
  %7 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17ha4273453c60b0721E(ptr %_3.i, i64 %half_len) #10, !dbg !2143
  %_13.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2143
  %_13.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2143
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2144
  store ptr %_12.0, ptr %8, align 8, !dbg !2144
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2144
  store i64 %_12.1, ptr %9, align 8, !dbg !2144
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2144
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2144
  store ptr %_13.0, ptr %11, align 8, !dbg !2144
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2144
  store i64 %_13.1, ptr %12, align 8, !dbg !2144
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 0, !dbg !2145
  %front_half.0 = load ptr, ptr %13, align 8, !dbg !2145, !nonnull !24, !align !510, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_11, i32 0, i32 1, !dbg !2145
  %front_half.1 = load i64, ptr %14, align 8, !dbg !2145, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 0, !dbg !2145
  store ptr %front_half.0, ptr %15, align 8, !dbg !2145
  %16 = getelementptr inbounds { ptr, i64 }, ptr %front_half.dbg.spill, i32 0, i32 1, !dbg !2145
  store i64 %front_half.1, ptr %16, align 8, !dbg !2145
  call void @llvm.dbg.declare(metadata ptr %front_half.dbg.spill, metadata !2101, metadata !DIExpression()), !dbg !2146
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_11, i32 0, i32 1, !dbg !2147
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2147
  %back_half.0 = load ptr, ptr %18, align 8, !dbg !2147, !nonnull !24, !align !510, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2147
  %back_half.1 = load i64, ptr %19, align 8, !dbg !2147, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 0, !dbg !2147
  store ptr %back_half.0, ptr %20, align 8, !dbg !2147
  %21 = getelementptr inbounds { ptr, i64 }, ptr %back_half.dbg.spill, i32 0, i32 1, !dbg !2147
  store i64 %back_half.1, ptr %21, align 8, !dbg !2147
  call void @llvm.dbg.declare(metadata ptr %back_half.dbg.spill, metadata !2103, metadata !DIExpression()), !dbg !2148
; call core::slice::<impl [T]>::reverse::revswap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17h66cc69c3ef79de79E"(ptr align 8 %front_half.0, i64 %front_half.1, ptr align 8 %back_half.0, i64 %back_half.1, i64 %half_len) #10, !dbg !2149
  ret void, !dbg !2150
}

; core::slice::<impl [T]>::reverse::revswap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17h66cc69c3ef79de79E"(ptr align 8 %a.0, i64 %a.1, ptr align 8 %b.0, i64 %b.1, i64 %n) unnamed_addr #0 !dbg !2151 {
start:
  %b.dbg.spill6 = alloca { ptr, i64 }, align 8
  %a.dbg.spill3 = alloca { ptr, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %a.dbg.spill = alloca { ptr, i64 }, align 8
  %i = alloca i64, align 8
  %_24 = alloca i64, align 8
  %_21 = alloca i64, align 8
  %_18 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 0
  store ptr %a.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 1
  store i64 %a.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2156, metadata !DIExpression()), !dbg !2164
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2157, metadata !DIExpression()), !dbg !2165
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !2158, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2162, metadata !DIExpression()), !dbg !2167
  br i1 true, label %bb1, label %bb3, !dbg !2168

bb3:                                              ; preds = %bb1, %start
  br i1 true, label %bb4, label %bb6, !dbg !2169

bb1:                                              ; preds = %start
  %_6 = icmp eq i64 %a.1, %n, !dbg !2170
  %_5 = xor i1 %_6, true, !dbg !2168
  br i1 %_5, label %bb2, label %bb3, !dbg !2168

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_dd0dc542054f5a3bd5e0287046a20794, i64 30, ptr align 8 @alloc_9bc869464e7f5dcda873bc5fba3167ae) #11, !dbg !2168
  unreachable, !dbg !2168

bb6:                                              ; preds = %bb4, %bb3
  store i64 %n, ptr %_21, align 8, !dbg !2171
  %4 = load i64, ptr %_21, align 8, !dbg !2172, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h52cc5b82e1a95684E"(ptr align 8 %a.0, i64 %a.1, i64 %4, ptr align 8 @alloc_3aa494a7a9b07e5c1a0696cee8170daa) #10, !dbg !2172
  %_20.0 = extractvalue { ptr, i64 } %5, 0, !dbg !2172
  %_20.1 = extractvalue { ptr, i64 } %5, 1, !dbg !2172
  store i64 %n, ptr %_24, align 8, !dbg !2173
  %6 = load i64, ptr %_24, align 8, !dbg !2174, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %7 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h52cc5b82e1a95684E"(ptr align 8 %b.0, i64 %b.1, i64 %6, ptr align 8 @alloc_fb8f45380652987d6b5bbea56a8e912e) #10, !dbg !2174
  %_23.0 = extractvalue { ptr, i64 } %7, 0, !dbg !2174
  %_23.1 = extractvalue { ptr, i64 } %7, 1, !dbg !2174
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !2175
  store ptr %_20.0, ptr %8, align 8, !dbg !2175
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !2175
  store i64 %_20.1, ptr %9, align 8, !dbg !2175
  %10 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_18, i32 0, i32 1, !dbg !2175
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !2175
  store ptr %_23.0, ptr %11, align 8, !dbg !2175
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !2175
  store i64 %_23.1, ptr %12, align 8, !dbg !2175
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 0, !dbg !2176
  %a.01 = load ptr, ptr %13, align 8, !dbg !2176, !nonnull !24, !align !510, !noundef !24
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_18, i32 0, i32 1, !dbg !2176
  %a.12 = load i64, ptr %14, align 8, !dbg !2176, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 0, !dbg !2176
  store ptr %a.01, ptr %15, align 8, !dbg !2176
  %16 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill3, i32 0, i32 1, !dbg !2176
  store i64 %a.12, ptr %16, align 8, !dbg !2176
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill3, metadata !2159, metadata !DIExpression()), !dbg !2177
  %17 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_18, i32 0, i32 1, !dbg !2178
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !2178
  %b.04 = load ptr, ptr %18, align 8, !dbg !2178, !nonnull !24, !align !510, !noundef !24
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !2178
  %b.15 = load i64, ptr %19, align 8, !dbg !2178, !noundef !24
  %20 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 0, !dbg !2178
  store ptr %b.04, ptr %20, align 8, !dbg !2178
  %21 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill6, i32 0, i32 1, !dbg !2178
  store i64 %b.15, ptr %21, align 8, !dbg !2178
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill6, metadata !2161, metadata !DIExpression()), !dbg !2179
  store i64 0, ptr %i, align 8, !dbg !2180
  br label %bb9, !dbg !2181

bb4:                                              ; preds = %bb3
  %_12 = icmp eq i64 %b.1, %n, !dbg !2182
  %_11 = xor i1 %_12, true, !dbg !2169
  br i1 %_11, label %bb5, label %bb6, !dbg !2169

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_deedf7aeab1a7c66b5420b58a4093bcc, i64 30, ptr align 8 @alloc_b8749fb97ee29c7317ad030bd8942a48) #11, !dbg !2169
  unreachable, !dbg !2169

bb9:                                              ; preds = %bb16, %bb6
  %_27 = load i64, ptr %i, align 8, !dbg !2183, !noundef !24
  %_26 = icmp ult i64 %_27, %n, !dbg !2183
  br i1 %_26, label %bb10, label %bb17, !dbg !2183

bb17:                                             ; preds = %bb9
  ret void, !dbg !2184

bb10:                                             ; preds = %bb9
  %_30 = load i64, ptr %i, align 8, !dbg !2185, !noundef !24
  %_32 = icmp ult i64 %_30, %a.12, !dbg !2186
  %22 = call i1 @llvm.expect.i1(i1 %_32, i1 true), !dbg !2186
  br i1 %22, label %bb11, label %panic, !dbg !2186

bb11:                                             ; preds = %bb10
  %_29 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %a.01, i64 0, i64 %_30, !dbg !2187
  %_36.0 = sub i64 %n, 1, !dbg !2188
  %_36.1 = icmp ult i64 %n, 1, !dbg !2188
  %23 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !2188
  br i1 %23, label %panic7, label %bb12, !dbg !2188

panic:                                            ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %_30, i64 %a.12, ptr align 8 @alloc_2d6a2ee37e528966f03d3441dddee676) #11, !dbg !2186
  unreachable, !dbg !2186

bb12:                                             ; preds = %bb11
  %_37 = load i64, ptr %i, align 8, !dbg !2189, !noundef !24
  %_38.0 = sub i64 %_36.0, %_37, !dbg !2188
  %_38.1 = icmp ult i64 %_36.0, %_37, !dbg !2188
  %24 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !2188
  br i1 %24, label %panic8, label %bb13, !dbg !2188

panic7:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_aa932769fb5b51c12790c6d75b182bf2) #11, !dbg !2188
  unreachable, !dbg !2188

bb13:                                             ; preds = %bb12
  %_40 = icmp ult i64 %_38.0, %b.15, !dbg !2190
  %25 = call i1 @llvm.expect.i1(i1 %_40, i1 true), !dbg !2190
  br i1 %25, label %bb14, label %panic9, !dbg !2190

panic8:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_aa932769fb5b51c12790c6d75b182bf2) #11, !dbg !2188
  unreachable, !dbg !2188

bb14:                                             ; preds = %bb13
  %_33 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %b.04, i64 0, i64 %_38.0, !dbg !2191
; call core::mem::swap
  call void @_ZN4core3mem4swap17h1e8e662fc708a4c7E(ptr align 8 %_29, ptr align 8 %_33) #10, !dbg !2192
  %26 = load i64, ptr %i, align 8, !dbg !2193, !noundef !24
  %27 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %26, i64 1), !dbg !2193
  %_41.0 = extractvalue { i64, i1 } %27, 0, !dbg !2193
  %_41.1 = extractvalue { i64, i1 } %27, 1, !dbg !2193
  %28 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !2193
  br i1 %28, label %panic10, label %bb16, !dbg !2193

panic9:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %_38.0, i64 %b.15, ptr align 8 @alloc_6014d62b444cee9e42a5ca2bfd6b4613) #11, !dbg !2190
  unreachable, !dbg !2190

bb16:                                             ; preds = %bb14
  store i64 %_41.0, ptr %i, align 8, !dbg !2193
  br label %bb9, !dbg !2181

panic10:                                          ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_c070e7c146c652ff4ec0b63c99b2e746) #11, !dbg !2193
  unreachable, !dbg !2193
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17ha4273453c60b0721E(ptr %data, i64 %len) unnamed_addr #0 !dbg !2194 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !2200, metadata !DIExpression()), !dbg !2202
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2201, metadata !DIExpression()), !dbg !2203
  br i1 true, label %bb1, label %bb2, !dbg !2204

bb2:                                              ; preds = %_ZN4core5slice3raw18from_raw_parts_mut7runtime17he875a49d99dcc66bE.exit, %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h72e5f39bb23cac74E(ptr %data, i64 %len) #10, !dbg !2205
  %_6.0 = extractvalue { ptr, i64 } %0, 0, !dbg !2205
  %_6.1 = extractvalue { ptr, i64 } %0, 1, !dbg !2205
  %1 = insertvalue { ptr, i64 } poison, ptr %_6.0, 0, !dbg !2206
  %2 = insertvalue { ptr, i64 } %1, i64 %_6.1, 1, !dbg !2206
  ret { ptr, i64 } %2, !dbg !2206

bb1:                                              ; preds = %start
  store ptr %data, ptr %_5, align 8, !dbg !2204
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2204
  store i64 %len, ptr %3, align 8, !dbg !2204
  %4 = load ptr, ptr %_5, align 8, !dbg !2204, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_5, i32 0, i32 1, !dbg !2204
  %6 = load i64, ptr %5, align 8, !dbg !2204, !noundef !24
  store ptr %4, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !2207, metadata !DIExpression()), !dbg !2214
  store i64 %6, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !2213, metadata !DIExpression()), !dbg !2214
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E(ptr %4) #10, !dbg !2216
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !2216

bb1.i:                                            ; preds = %bb1
  store i8 0, ptr %_4.i, align 1, !dbg !2216
  br label %bb3.i, !dbg !2216

bb2.i:                                            ; preds = %bb1
; call core::intrinsics::is_valid_allocation_size
  %_7.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17hf5c09850e6be46cfE(i64 %6) #10, !dbg !2218
  %7 = zext i1 %_7.i to i8, !dbg !2216
  store i8 %7, ptr %_4.i, align 1, !dbg !2216
  br label %bb3.i, !dbg !2216

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %8 = load i8, ptr %_4.i, align 1, !dbg !2219, !range !242, !noundef !24
  %9 = trunc i8 %8 to i1, !dbg !2219
  %_3.i = xor i1 %9, true, !dbg !2219
  br i1 %_3.i, label %bb6.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17he875a49d99dcc66bE.exit, !dbg !2219

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a, i64 166) #11, !dbg !2220
  unreachable, !dbg !2220

_ZN4core5slice3raw18from_raw_parts_mut7runtime17he875a49d99dcc66bE.exit: ; preds = %bb3.i
  br label %bb2, !dbg !2204
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h3d8827bb3ebf5aa2E"(ptr align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2221 {
start:
  %self.dbg.spill.i6 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca ptr, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %end = alloca ptr, align 8
  %2 = alloca { ptr, ptr }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !2224, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.declare(metadata ptr %end, metadata !2227, metadata !DIExpression()), !dbg !2230
  store ptr %slice.0, ptr %self.dbg.spill.i6, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i6, i32 0, i32 1
  store i64 %slice.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !2231, metadata !DIExpression()), !dbg !2236
  store ptr %slice.0, ptr %ptr.dbg.spill, align 8, !dbg !2238
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2225, metadata !DIExpression()), !dbg !2239
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf52a54f7e512b4a6E"(ptr %slice.0) #10, !dbg !2240
  %_3 = xor i1 %_4, true, !dbg !2241
  call void @llvm.assume(i1 %_3), !dbg !2242
  br i1 false, label %bb3, label %bb4, !dbg !2243

bb4:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !200, metadata !DIExpression()), !dbg !2244
  store i64 %slice.1, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !210, metadata !DIExpression()), !dbg !2246
  store ptr %slice.0, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !214, metadata !DIExpression()), !dbg !2247
  store i64 %slice.1, ptr %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i4, metadata !220, metadata !DIExpression()), !dbg !2249
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %slice.0, i64 %slice.1, !dbg !2250
  store ptr %6, ptr %0, align 8, !dbg !2250
  %7 = load ptr, ptr %0, align 8, !dbg !2250, !noundef !24
  store ptr %7, ptr %end, align 8, !dbg !2251
  br label %bb5, !dbg !2251

bb3:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2252, metadata !DIExpression()), !dbg !2256
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !2255, metadata !DIExpression()), !dbg !2258
  store ptr %slice.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !2259, metadata !DIExpression()), !dbg !2264
  store ptr %slice.0, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2266, metadata !DIExpression()), !dbg !2272
  store i64 %slice.1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !2271, metadata !DIExpression()), !dbg !2274
  store ptr %slice.0, ptr %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2.i, metadata !2275, metadata !DIExpression()), !dbg !2281
  store i64 %slice.1, ptr %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1.i, metadata !2280, metadata !DIExpression()), !dbg !2283
  %8 = getelementptr i8, ptr %slice.0, i64 %slice.1, !dbg !2284
  store ptr %8, ptr %1, align 8, !dbg !2284
  %9 = load ptr, ptr %1, align 8, !dbg !2284, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::with_metadata_of
  %10 = call ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h67b5cbd678b7f6cfE"(ptr %9, ptr %slice.0) #10, !dbg !2285
  store ptr %10, ptr %end, align 8, !dbg !2286
  br label %bb5, !dbg !2286

bb5:                                              ; preds = %bb4, %bb3
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_12 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd2f969f601200b1eE"(ptr %slice.0) #10, !dbg !2287
  %_15 = load ptr, ptr %end, align 8, !dbg !2288, !noundef !24
  %11 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1, !dbg !2289
  store ptr %_12, ptr %11, align 8, !dbg !2289
  store ptr %_15, ptr %2, align 8, !dbg !2289
  %12 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0, !dbg !2290
  %13 = load ptr, ptr %12, align 8, !dbg !2290, !noundef !24
  %14 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1, !dbg !2290
  %15 = load ptr, ptr %14, align 8, !dbg !2290, !nonnull !24, !noundef !24
  %16 = insertvalue { ptr, ptr } poison, ptr %13, 0, !dbg !2290
  %17 = insertvalue { ptr, ptr } %16, ptr %15, 1, !dbg !2290
  ret { ptr, ptr } %17, !dbg !2290
}

; core::slice::sort::insert_head
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_head17hddbfe8f747f25a4cE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2291 {
start:
  %self.dbg.spill.i30 = alloca ptr, align 8
  %self.dbg.spill.i29 = alloca ptr, align 8
  %self.dbg.spill.i28 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %count.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_48 = alloca ptr, align 8
  %_46 = alloca { ptr, ptr }, align 8
  %_40 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_36 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_19 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { ptr, ptr }, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %6, align 8
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2296, metadata !DIExpression()), !dbg !2309
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2297, metadata !DIExpression()), !dbg !2310
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2300, metadata !DIExpression()), !dbg !2311
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2302, metadata !DIExpression()), !dbg !2312
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2304, metadata !DIExpression()), !dbg !2313
  br i1 true, label %bb1, label %bb3, !dbg !2314

bb3:                                              ; preds = %bb1, %start
; call core::slice::<impl [T]>::get_unchecked
  %_12 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %v.0, i64 %v.1, i64 1) #10, !dbg !2315
; call core::slice::<impl [T]>::get_unchecked
  %_15 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %v.0, i64 %v.1, i64 0) #10, !dbg !2316
  store ptr %_12, ptr %_10, align 8, !dbg !2317
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2317
  store ptr %_15, ptr %8, align 8, !dbg !2317
  %9 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2317
  %10 = load ptr, ptr %9, align 8, !dbg !2317, !nonnull !24, !align !510, !noundef !24
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2317
  %12 = load ptr, ptr %11, align 8, !dbg !2317, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %10, ptr align 8 %12) #10, !dbg !2317
  br i1 %_9, label %bb7, label %bb31, !dbg !2317

bb1:                                              ; preds = %start
  %_5 = icmp uge i64 %v.1, 2, !dbg !2318
  %_4 = xor i1 %_5, true, !dbg !2314
  br i1 %_4, label %bb2, label %bb3, !dbg !2314

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_6932146a2b5945f5118e7e865cb7ff4c) #11, !dbg !2314
  unreachable, !dbg !2314

bb31:                                             ; preds = %bb30, %bb3
  ret void, !dbg !2319

bb7:                                              ; preds = %bb3
  store ptr %v.0, ptr %self.dbg.spill.i28, align 8
  %13 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i28, i32 0, i32 1
  store i64 %v.1, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !1971, metadata !DIExpression()), !dbg !2320
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2322
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2298, metadata !DIExpression()), !dbg !2323
; call core::ptr::read
  call void @_ZN4core3ptr4read17h9bbf8b811484d8b8E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_19, ptr %v.0) #10, !dbg !2324
  call void @llvm.dbg.declare(metadata ptr %_19, metadata !1014, metadata !DIExpression()), !dbg !2325
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_19, i64 24, i1 false), !dbg !2327
  store ptr %tmp, ptr %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i30, metadata !2328, metadata !DIExpression()), !dbg !2335
  store ptr %v.0, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !276, metadata !DIExpression()), !dbg !2337
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !282, metadata !DIExpression()), !dbg !2339
  store ptr %v.0, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !286, metadata !DIExpression()), !dbg !2340
  store i64 1, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !291, metadata !DIExpression()), !dbg !2342
  %14 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2343
  store ptr %14, ptr %5, align 8, !dbg !2343
  %_3.i = load ptr, ptr %5, align 8, !dbg !2343, !noundef !24
  store ptr %tmp, ptr %hole, align 8, !dbg !2344
  %15 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2344
  store ptr %_3.i, ptr %15, align 8, !dbg !2344
  store ptr %v.0, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !276, metadata !DIExpression()), !dbg !2345
  store i64 1, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !282, metadata !DIExpression()), !dbg !2347
  store ptr %v.0, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !286, metadata !DIExpression()), !dbg !2348
  store i64 1, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !291, metadata !DIExpression()), !dbg !2350
  %16 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 1, !dbg !2351
  store ptr %16, ptr %4, align 8, !dbg !2351
  %_3.i15 = load ptr, ptr %4, align 8, !dbg !2351, !noundef !24
  store ptr %v.0, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !276, metadata !DIExpression()), !dbg !2352
  store i64 0, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !282, metadata !DIExpression()), !dbg !2354
  store ptr %v.0, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !286, metadata !DIExpression()), !dbg !2355
  store i64 0, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !291, metadata !DIExpression()), !dbg !2357
  store ptr %v.0, ptr %3, align 8, !dbg !2358
  %_3.i18 = load ptr, ptr %3, align 8, !dbg !2358, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %_3.i15, ptr %_3.i18, i64 1) #10, !dbg !2359
  store i64 2, ptr %_36, align 8, !dbg !2360
  %17 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 1, !dbg !2360
  store i64 %v.1, ptr %17, align 8, !dbg !2360
  %18 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 0, !dbg !2360
  %19 = load i64, ptr %18, align 8, !dbg !2360, !noundef !24
  %20 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 1, !dbg !2360
  %21 = load i64, ptr %20, align 8, !dbg !2360, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %22 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1e3ba51008b82e5E"(i64 %19, i64 %21) #10, !dbg !2360
  %_35.0 = extractvalue { i64, i64 } %22, 0, !dbg !2360
  %_35.1 = extractvalue { i64, i64 } %22, 1, !dbg !2360
  %23 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2360
  store i64 %_35.0, ptr %23, align 8, !dbg !2360
  %24 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2360
  store i64 %_35.1, ptr %24, align 8, !dbg !2360
  br label %bb17, !dbg !2361

bb17:                                             ; preds = %bb26, %bb7
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %25 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h1df758b10b9b351bE"(ptr align 8 %iter) #10, !dbg !2313
  store { i64, i64 } %25, ptr %_40, align 8, !dbg !2313
  %_42 = load i64, ptr %_40, align 8, !dbg !2313, !range !1071, !noundef !24
  %26 = icmp eq i64 %_42, 0, !dbg !2313
  br i1 %26, label %bb30, label %bb19, !dbg !2313

bb30:                                             ; preds = %bb19, %bb17
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hf11a1c24d41b52e3E"(ptr %hole) #10, !dbg !2362
  br label %bb31, !dbg !2362

bb19:                                             ; preds = %bb17
  %27 = getelementptr inbounds { i64, i64 }, ptr %_40, i32 0, i32 1, !dbg !2363
  %i = load i64, ptr %27, align 8, !dbg !2363, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2363
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2306, metadata !DIExpression()), !dbg !2364
; call core::slice::<impl [T]>::get_unchecked
  %28 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %v.0, i64 %v.1, i64 %i) #10, !dbg !2365
  store ptr %28, ptr %_48, align 8, !dbg !2365
  %_63 = load ptr, ptr %_48, align 8, !dbg !2366, !nonnull !24, !align !510, !noundef !24
  store ptr %tmp, ptr %self.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i29, metadata !2328, metadata !DIExpression()), !dbg !2367
  store ptr %_63, ptr %_46, align 8, !dbg !2369
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_46, i32 0, i32 1, !dbg !2369
  store ptr %tmp, ptr %29, align 8, !dbg !2369
  %30 = getelementptr inbounds { ptr, ptr }, ptr %_46, i32 0, i32 0, !dbg !2369
  %31 = load ptr, ptr %30, align 8, !dbg !2369, !nonnull !24, !align !510, !noundef !24
  %32 = getelementptr inbounds { ptr, ptr }, ptr %_46, i32 0, i32 1, !dbg !2369
  %33 = load ptr, ptr %32, align 8, !dbg !2369, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_45 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %31, ptr align 8 %33) #10, !dbg !2369
  %_44 = xor i1 %_45, true, !dbg !2370
  br i1 %_44, label %bb30, label %bb24, !dbg !2370

bb20:                                             ; No predecessors!
  unreachable, !dbg !2313

bb24:                                             ; preds = %bb19
  store ptr %v.0, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !276, metadata !DIExpression()), !dbg !2371
  store i64 %i, ptr %count.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i3, metadata !282, metadata !DIExpression()), !dbg !2373
  store ptr %v.0, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !286, metadata !DIExpression()), !dbg !2374
  store i64 %i, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !291, metadata !DIExpression()), !dbg !2376
  %34 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2377
  store ptr %34, ptr %2, align 8, !dbg !2377
  %_3.i21 = load ptr, ptr %2, align 8, !dbg !2377, !noundef !24
  %_60.0 = sub i64 %i, 1, !dbg !2378
  %_60.1 = icmp ult i64 %i, 1, !dbg !2378
  %35 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false), !dbg !2378
  br i1 %35, label %panic, label %bb26, !dbg !2378

bb26:                                             ; preds = %bb24
  store ptr %v.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !276, metadata !DIExpression()), !dbg !2379
  store i64 %_60.0, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !282, metadata !DIExpression()), !dbg !2381
  store ptr %v.0, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !286, metadata !DIExpression()), !dbg !2382
  store i64 %_60.0, ptr %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i22, metadata !291, metadata !DIExpression()), !dbg !2384
  %36 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_60.0, !dbg !2385
  store ptr %36, ptr %1, align 8, !dbg !2385
  %_3.i24 = load ptr, ptr %1, align 8, !dbg !2385, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %_3.i21, ptr %_3.i24, i64 1) #10, !dbg !2386
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !276, metadata !DIExpression()), !dbg !2387
  store i64 %i, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !282, metadata !DIExpression()), !dbg !2389
  store ptr %v.0, ptr %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i26, metadata !286, metadata !DIExpression()), !dbg !2390
  store i64 %i, ptr %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i25, metadata !291, metadata !DIExpression()), !dbg !2392
  %37 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %i, !dbg !2393
  store ptr %37, ptr %0, align 8, !dbg !2393
  %_3.i27 = load ptr, ptr %0, align 8, !dbg !2393, !noundef !24
  %38 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2394
  store ptr %_3.i27, ptr %38, align 8, !dbg !2394
  br label %bb17, !dbg !2361

panic:                                            ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2b18b37ae84d61762f070ebc082ffd36) #11, !dbg !2378
  unreachable, !dbg !2378
}

; core::slice::sort::insert_tail
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort11insert_tail17hbfcd2f9f558bf8c4E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2395 {
start:
  %self.dbg.spill.i24 = alloca ptr, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %self.dbg.spill.i22 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %rhs.dbg.spill.i.i6 = alloca i64, align 8
  %self.dbg.spill.i1.i7 = alloca i64, align 8
  %self.dbg.spill.i.i8 = alloca i64, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %j_ptr.dbg.spill = alloca ptr, align 8
  %j.dbg.spill = alloca i64, align 8
  %i_ptr.dbg.spill = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %arr_ptr.dbg.spill = alloca ptr, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_51 = alloca { ptr, ptr }, align 8
  %_43 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_39 = alloca { i64, i64 }, align 8
  %hole = alloca { ptr, ptr }, align 8
  %_23 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_17 = alloca { ptr, ptr }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2397, metadata !DIExpression()), !dbg !2423
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2398, metadata !DIExpression()), !dbg !2424
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2405, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.declare(metadata ptr %hole, metadata !2407, metadata !DIExpression()), !dbg !2426
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2409, metadata !DIExpression()), !dbg !2427
  br i1 true, label %bb1, label %bb3, !dbg !2428

bb3:                                              ; preds = %bb1, %start
  store ptr %v.0, ptr %self.dbg.spill.i22, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i22, i32 0, i32 1
  store i64 %v.1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !1971, metadata !DIExpression()), !dbg !2429
  store ptr %v.0, ptr %arr_ptr.dbg.spill, align 8, !dbg !2431
  call void @llvm.dbg.declare(metadata ptr %arr_ptr.dbg.spill, metadata !2399, metadata !DIExpression()), !dbg !2432
  %_13.0 = sub i64 %v.1, 1, !dbg !2433
  %_13.1 = icmp ult i64 %v.1, 1, !dbg !2433
  %7 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !2433
  br i1 %7, label %panic, label %bb5, !dbg !2433

bb1:                                              ; preds = %start
  %_5 = icmp uge i64 %v.1, 2, !dbg !2434
  %_4 = xor i1 %_5, true, !dbg !2428
  br i1 %_4, label %bb2, label %bb3, !dbg !2428

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_140877f72603b53a2926afdc5b6562c1, i64 30, ptr align 8 @alloc_141337dbddbbf875f1e651a897c1c26f) #11, !dbg !2428
  unreachable, !dbg !2428

bb5:                                              ; preds = %bb3
  store i64 %_13.0, ptr %i.dbg.spill, align 8, !dbg !2433
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2401, metadata !DIExpression()), !dbg !2435
  store ptr %v.0, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !276, metadata !DIExpression()), !dbg !2436
  store i64 %_13.0, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !282, metadata !DIExpression()), !dbg !2438
  store ptr %v.0, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !286, metadata !DIExpression()), !dbg !2439
  store i64 %_13.0, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !291, metadata !DIExpression()), !dbg !2441
  %8 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %_13.0, !dbg !2442
  store ptr %8, ptr %1, align 8, !dbg !2442
  %_3.i18 = load ptr, ptr %1, align 8, !dbg !2442, !noundef !24
  store ptr %_3.i18, ptr %i_ptr.dbg.spill, align 8, !dbg !2443
  call void @llvm.dbg.declare(metadata ptr %i_ptr.dbg.spill, metadata !2403, metadata !DIExpression()), !dbg !2444
  store ptr %_3.i18, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !2113, metadata !DIExpression()), !dbg !2445
  store i64 1, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !2116, metadata !DIExpression()), !dbg !2447
  store i64 1, ptr %self.dbg.spill.i.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i8, metadata !2120, metadata !DIExpression()), !dbg !2448
  store i64 0, ptr %self.dbg.spill.i1.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i7, metadata !2129, metadata !DIExpression()), !dbg !2450
  store i64 1, ptr %rhs.dbg.spill.i.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i6, metadata !2134, metadata !DIExpression()), !dbg !2452
  store ptr %_3.i18, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !286, metadata !DIExpression()), !dbg !2453
  store i64 -1, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !291, metadata !DIExpression()), !dbg !2455
  %9 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_3.i18, i64 -1, !dbg !2456
  store ptr %9, ptr %3, align 8, !dbg !2456
  %_3.i = load ptr, ptr %3, align 8, !dbg !2456, !noundef !24
  store ptr %_3.i18, ptr %_17, align 8, !dbg !2457
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !2457
  store ptr %_3.i, ptr %10, align 8, !dbg !2457
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 0, !dbg !2457
  %12 = load ptr, ptr %11, align 8, !dbg !2457, !nonnull !24, !align !510, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !2457
  %14 = load ptr, ptr %13, align 8, !dbg !2457, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_16 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2457
  br i1 %_16, label %bb9, label %bb28, !dbg !2457

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_90f4b6dda14e5cb7081926ef9c658315) #11, !dbg !2433
  unreachable, !dbg !2433

bb28:                                             ; preds = %bb27, %bb5
  ret void, !dbg !2458

bb9:                                              ; preds = %bb5
; call core::ptr::read
  call void @_ZN4core3ptr4read17h9bbf8b811484d8b8E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_23, ptr %_3.i18) #10, !dbg !2459
  call void @llvm.dbg.declare(metadata ptr %_23, metadata !1014, metadata !DIExpression()), !dbg !2460
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_23, i64 24, i1 false), !dbg !2462
  store ptr %tmp, ptr %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i24, metadata !2328, metadata !DIExpression()), !dbg !2463
  store ptr %_3.i18, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !2113, metadata !DIExpression()), !dbg !2465
  store i64 1, ptr %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i4, metadata !2116, metadata !DIExpression()), !dbg !2467
  store i64 1, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2120, metadata !DIExpression()), !dbg !2468
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2129, metadata !DIExpression()), !dbg !2470
  store i64 1, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2134, metadata !DIExpression()), !dbg !2472
  store ptr %_3.i18, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !286, metadata !DIExpression()), !dbg !2473
  store i64 -1, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !291, metadata !DIExpression()), !dbg !2475
  %15 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_3.i18, i64 -1, !dbg !2476
  store ptr %15, ptr %2, align 8, !dbg !2476
  %_3.i15 = load ptr, ptr %2, align 8, !dbg !2476, !noundef !24
  store ptr %tmp, ptr %hole, align 8, !dbg !2477
  %16 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2477
  store ptr %_3.i15, ptr %16, align 8, !dbg !2477
  %17 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2478
  %_35 = load ptr, ptr %17, align 8, !dbg !2478, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %_35, ptr %_3.i18, i64 1) #10, !dbg !2479
  %_41.0 = sub i64 %_13.0, 1, !dbg !2480
  %_41.1 = icmp ult i64 %_13.0, 1, !dbg !2480
  %18 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !2480
  br i1 %18, label %panic1, label %bb15, !dbg !2480

bb15:                                             ; preds = %bb9
  store i64 0, ptr %_39, align 8, !dbg !2481
  %19 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 1, !dbg !2481
  store i64 %_41.0, ptr %19, align 8, !dbg !2481
  %20 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 0, !dbg !2481
  %21 = load i64, ptr %20, align 8, !dbg !2481, !noundef !24
  %22 = getelementptr inbounds { i64, i64 }, ptr %_39, i32 0, i32 1, !dbg !2481
  %23 = load i64, ptr %22, align 8, !dbg !2481, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %24 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h8aacf02eab854b71E(i64 %21, i64 %23) #10, !dbg !2481
  %_38.0 = extractvalue { i64, i64 } %24, 0, !dbg !2481
  %_38.1 = extractvalue { i64, i64 } %24, 1, !dbg !2481
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %25 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7d1ad3d13c2c46beE"(i64 %_38.0, i64 %_38.1) #10, !dbg !2481
  %_37.0 = extractvalue { i64, i64 } %25, 0, !dbg !2481
  %_37.1 = extractvalue { i64, i64 } %25, 1, !dbg !2481
  %26 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2481
  store i64 %_37.0, ptr %26, align 8, !dbg !2481
  %27 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2481
  store i64 %_37.1, ptr %27, align 8, !dbg !2481
  br label %bb18, !dbg !2482

panic1:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_e41efc6332efd19972427a8ca6f9ac9d) #11, !dbg !2480
  unreachable, !dbg !2480

bb18:                                             ; preds = %bb25, %bb15
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %28 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h80eeb9b610c0f8dcE"(ptr align 8 %iter) #10, !dbg !2427
  store { i64, i64 } %28, ptr %_43, align 8, !dbg !2427
  %_45 = load i64, ptr %_43, align 8, !dbg !2427, !range !1071, !noundef !24
  %29 = icmp eq i64 %_45, 0, !dbg !2427
  br i1 %29, label %bb27, label %bb20, !dbg !2427

bb27:                                             ; preds = %bb20, %bb18
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hf11a1c24d41b52e3E"(ptr %hole) #10, !dbg !2483
  br label %bb28, !dbg !2483

bb20:                                             ; preds = %bb18
  %30 = getelementptr inbounds { i64, i64 }, ptr %_43, i32 0, i32 1, !dbg !2484
  %j = load i64, ptr %30, align 8, !dbg !2484, !noundef !24
  store i64 %j, ptr %j.dbg.spill, align 8, !dbg !2484
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !2419, metadata !DIExpression()), !dbg !2485
  store ptr %v.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !276, metadata !DIExpression()), !dbg !2486
  store i64 %j, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !282, metadata !DIExpression()), !dbg !2488
  store ptr %v.0, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !286, metadata !DIExpression()), !dbg !2489
  store i64 %j, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !291, metadata !DIExpression()), !dbg !2491
  %31 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.0, i64 %j, !dbg !2492
  store ptr %31, ptr %0, align 8, !dbg !2492
  %_3.i21 = load ptr, ptr %0, align 8, !dbg !2492, !noundef !24
  store ptr %_3.i21, ptr %j_ptr.dbg.spill, align 8, !dbg !2493
  call void @llvm.dbg.declare(metadata ptr %j_ptr.dbg.spill, metadata !2421, metadata !DIExpression()), !dbg !2494
  store ptr %tmp, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !2328, metadata !DIExpression()), !dbg !2495
  store ptr %tmp, ptr %_51, align 8, !dbg !2497
  %32 = getelementptr inbounds { ptr, ptr }, ptr %_51, i32 0, i32 1, !dbg !2497
  store ptr %_3.i21, ptr %32, align 8, !dbg !2497
  %33 = getelementptr inbounds { ptr, ptr }, ptr %_51, i32 0, i32 0, !dbg !2497
  %34 = load ptr, ptr %33, align 8, !dbg !2497, !nonnull !24, !align !510, !noundef !24
  %35 = getelementptr inbounds { ptr, ptr }, ptr %_51, i32 0, i32 1, !dbg !2497
  %36 = load ptr, ptr %35, align 8, !dbg !2497, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_50 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %34, ptr align 8 %36) #10, !dbg !2497
  %_49 = xor i1 %_50, true, !dbg !2498
  br i1 %_49, label %bb27, label %bb25, !dbg !2498

bb21:                                             ; No predecessors!
  unreachable, !dbg !2427

bb25:                                             ; preds = %bb20
  %37 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2499
  %_59 = load ptr, ptr %37, align 8, !dbg !2499, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %_3.i21, ptr %_59, i64 1) #10, !dbg !2500
  %38 = getelementptr inbounds { ptr, ptr }, ptr %hole, i32 0, i32 1, !dbg !2501
  store ptr %_3.i21, ptr %38, align 8, !dbg !2501
  br label %bb18, !dbg !2482
}

; core::slice::sort::choose_pivot
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort12choose_pivot17h4482e449327c800fE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #1 !dbg !2502 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_41 = alloca { ptr, ptr, ptr }, align 8
  %_37 = alloca ptr, align 8
  %_33 = alloca ptr, align 8
  %_29 = alloca ptr, align 8
  %sort_adjacent = alloca ptr, align 8
  %sort3 = alloca ptr, align 8
  %sort2 = alloca %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", align 8
  %swaps = alloca i64, align 8
  %c = alloca i64, align 8
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2506, metadata !DIExpression()), !dbg !2539
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2507, metadata !DIExpression()), !dbg !2540
  call void @llvm.dbg.declare(metadata ptr %a, metadata !2510, metadata !DIExpression()), !dbg !2541
  call void @llvm.dbg.declare(metadata ptr %b, metadata !2512, metadata !DIExpression()), !dbg !2542
  call void @llvm.dbg.declare(metadata ptr %c, metadata !2514, metadata !DIExpression()), !dbg !2543
  call void @llvm.dbg.declare(metadata ptr %swaps, metadata !2516, metadata !DIExpression()), !dbg !2544
  call void @llvm.dbg.declare(metadata ptr %sort2, metadata !2518, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.declare(metadata ptr %sort3, metadata !2527, metadata !DIExpression()), !dbg !2546
  call void @llvm.dbg.declare(metadata ptr %sort_adjacent, metadata !2533, metadata !DIExpression()), !dbg !2547
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2548
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2508, metadata !DIExpression()), !dbg !2549
  %_6 = udiv i64 %v.1, 4, !dbg !2550
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_6, i64 1), !dbg !2550
  %_8.0 = extractvalue { i64, i1 } %3, 0, !dbg !2550
  %_8.1 = extractvalue { i64, i1 } %3, 1, !dbg !2550
  %4 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2550
  br i1 %4, label %panic, label %bb2, !dbg !2550

bb2:                                              ; preds = %start
  store i64 %_8.0, ptr %a, align 8, !dbg !2550
  %_10 = udiv i64 %v.1, 4, !dbg !2551
  %5 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2551
  %_12.0 = extractvalue { i64, i1 } %5, 0, !dbg !2551
  %_12.1 = extractvalue { i64, i1 } %5, 1, !dbg !2551
  %6 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2551
  br i1 %6, label %panic1, label %bb4, !dbg !2551

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_912dd1c737b966744c5b309cc20a3d47) #11, !dbg !2550
  unreachable, !dbg !2550

bb4:                                              ; preds = %bb2
  store i64 %_12.0, ptr %b, align 8, !dbg !2551
  %_14 = udiv i64 %v.1, 4, !dbg !2552
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_14, i64 3), !dbg !2552
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !2552
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !2552
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !2552
  br i1 %8, label %panic2, label %bb6, !dbg !2552

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_7aff2c5e0ce2b115fc6c1e2cef0aaf8b) #11, !dbg !2551
  unreachable, !dbg !2551

bb6:                                              ; preds = %bb4
  store i64 %_16.0, ptr %c, align 8, !dbg !2552
  store i64 0, ptr %swaps, align 8, !dbg !2553
  %_18 = icmp uge i64 %v.1, 8, !dbg !2554
  br i1 %_18, label %bb7, label %bb12, !dbg !2554

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_51fd6fd3cd9ef520ddfe39086f06b289) #11, !dbg !2552
  unreachable, !dbg !2552

bb12:                                             ; preds = %bb11, %bb6
  %_46 = load i64, ptr %swaps, align 8, !dbg !2555, !noundef !24
  %_45 = icmp ult i64 %_46, 12, !dbg !2555
  br i1 %_45, label %bb13, label %bb14, !dbg !2555

bb7:                                              ; preds = %bb6
  %9 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 1, !dbg !2556
  store ptr %is_less, ptr %9, align 8, !dbg !2556
  %10 = getelementptr inbounds { ptr, i64 }, ptr %sort2, i32 0, i32 0, !dbg !2556
  store ptr %v.0, ptr %10, align 8, !dbg !2556
  %11 = getelementptr inbounds { ptr, i64 }, ptr %sort2, i32 0, i32 1, !dbg !2556
  store i64 %v.1, ptr %11, align 8, !dbg !2556
  %12 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %sort2, i32 0, i32 2, !dbg !2556
  store ptr %swaps, ptr %12, align 8, !dbg !2556
  store ptr %sort2, ptr %sort3, align 8, !dbg !2557
  %_24 = icmp uge i64 %v.1, 50, !dbg !2558
  br i1 %_24, label %bb8, label %bb11, !dbg !2558

bb11:                                             ; preds = %bb8, %bb7
  store ptr %a, ptr %_41, align 8, !dbg !2559
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2559
  store ptr %b, ptr %13, align 8, !dbg !2559
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2559
  store ptr %c, ptr %14, align 8, !dbg !2559
  %15 = load ptr, ptr %_41, align 8, !dbg !2559, !nonnull !24, !align !510, !noundef !24
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 1, !dbg !2559
  %17 = load ptr, ptr %16, align 8, !dbg !2559, !nonnull !24, !align !510, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_41, i32 0, i32 2, !dbg !2559
  %19 = load ptr, ptr %18, align 8, !dbg !2559, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h3cb0313f4eec197aE"(ptr align 8 %sort3, ptr align 8 %15, ptr align 8 %17, ptr align 8 %19) #10, !dbg !2559
  br label %bb12, !dbg !2559

bb8:                                              ; preds = %bb7
  store ptr %sort3, ptr %sort_adjacent, align 8, !dbg !2560
  store ptr %a, ptr %_29, align 8, !dbg !2561
  %20 = load ptr, ptr %_29, align 8, !dbg !2561, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hb71a1ca753657207E"(ptr align 8 %sort_adjacent, ptr align 8 %20) #10, !dbg !2561
  store ptr %b, ptr %_33, align 8, !dbg !2562
  %21 = load ptr, ptr %_33, align 8, !dbg !2562, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hb71a1ca753657207E"(ptr align 8 %sort_adjacent, ptr align 8 %21) #10, !dbg !2562
  store ptr %c, ptr %_37, align 8, !dbg !2563
  %22 = load ptr, ptr %_37, align 8, !dbg !2563, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hb71a1ca753657207E"(ptr align 8 %sort_adjacent, ptr align 8 %22) #10, !dbg !2563
  br label %bb11, !dbg !2563

bb14:                                             ; preds = %bb12
; call core::slice::<impl [T]>::reverse
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h877aede61715ec1dE"(ptr align 8 %v.0, i64 %v.1) #10, !dbg !2564
  %_53.0 = sub i64 %v.1, 1, !dbg !2565
  %_53.1 = icmp ult i64 %v.1, 1, !dbg !2565
  %23 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !2565
  br i1 %23, label %panic3, label %bb16, !dbg !2565

bb13:                                             ; preds = %bb12
  %_47 = load i64, ptr %b, align 8, !dbg !2566, !noundef !24
  %_49 = load i64, ptr %swaps, align 8, !dbg !2567, !noundef !24
  %_48 = icmp eq i64 %_49, 0, !dbg !2567
  store i64 %_47, ptr %0, align 8, !dbg !2568
  %24 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2568
  %25 = zext i1 %_48 to i8, !dbg !2568
  store i8 %25, ptr %24, align 8, !dbg !2568
  br label %bb18, !dbg !2569

bb18:                                             ; preds = %bb17, %bb13
  %26 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !2570
  %27 = load i64, ptr %26, align 8, !dbg !2570, !noundef !24
  %28 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2570
  %29 = load i8, ptr %28, align 8, !dbg !2570, !range !242, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !2570
  %31 = zext i1 %30 to i8, !dbg !2570
  %32 = insertvalue { i64, i8 } poison, i64 %27, 0, !dbg !2570
  %33 = insertvalue { i64, i8 } %32, i8 %31, 1, !dbg !2570
  ret { i64, i8 } %33, !dbg !2570

bb16:                                             ; preds = %bb14
  %_54 = load i64, ptr %b, align 8, !dbg !2571, !noundef !24
  %_55.0 = sub i64 %_53.0, %_54, !dbg !2565
  %_55.1 = icmp ult i64 %_53.0, %_54, !dbg !2565
  %34 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2565
  br i1 %34, label %panic4, label %bb17, !dbg !2565

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6a8eb4c18787545063c119f92681aeff) #11, !dbg !2565
  unreachable, !dbg !2565

bb17:                                             ; preds = %bb16
  store i64 %_55.0, ptr %0, align 8, !dbg !2572
  %35 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !2572
  store i8 1, ptr %35, align 8, !dbg !2572
  br label %bb18, !dbg !2569

panic4:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6a8eb4c18787545063c119f92681aeff) #11, !dbg !2565
  unreachable, !dbg !2565
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h3cb0313f4eec197aE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b, ptr align 8 %c) unnamed_addr #0 !dbg !2573 {
start:
  %c.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca { ptr, ptr }, align 8
  %_8 = alloca { ptr, ptr }, align 8
  %_6 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2580, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2581
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2577, metadata !DIExpression()), !dbg !2582
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2578, metadata !DIExpression()), !dbg !2583
  store ptr %c, ptr %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !2579, metadata !DIExpression()), !dbg !2584
  %_11 = load ptr, ptr %_1, align 8, !dbg !2585, !nonnull !24, !align !510, !noundef !24
  store ptr %a, ptr %_6, align 8, !dbg !2585
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2585
  store ptr %b, ptr %0, align 8, !dbg !2585
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 0, !dbg !2585
  %2 = load ptr, ptr %1, align 8, !dbg !2585, !nonnull !24, !align !510, !noundef !24
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_6, i32 0, i32 1, !dbg !2585
  %4 = load ptr, ptr %3, align 8, !dbg !2585, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h9a0dde2ace4ef81dE"(ptr align 8 %_11, ptr align 8 %2, ptr align 8 %4) #10, !dbg !2585
  %_12 = load ptr, ptr %_1, align 8, !dbg !2586, !nonnull !24, !align !510, !noundef !24
  store ptr %b, ptr %_8, align 8, !dbg !2586
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2586
  store ptr %c, ptr %5, align 8, !dbg !2586
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 0, !dbg !2586
  %7 = load ptr, ptr %6, align 8, !dbg !2586, !nonnull !24, !align !510, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_8, i32 0, i32 1, !dbg !2586
  %9 = load ptr, ptr %8, align 8, !dbg !2586, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h9a0dde2ace4ef81dE"(ptr align 8 %_12, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2586
  %_13 = load ptr, ptr %_1, align 8, !dbg !2587, !nonnull !24, !align !510, !noundef !24
  store ptr %a, ptr %_10, align 8, !dbg !2587
  %10 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2587
  store ptr %b, ptr %10, align 8, !dbg !2587
  %11 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 0, !dbg !2587
  %12 = load ptr, ptr %11, align 8, !dbg !2587, !nonnull !24, !align !510, !noundef !24
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_10, i32 0, i32 1, !dbg !2587
  %14 = load ptr, ptr %13, align 8, !dbg !2587, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h9a0dde2ace4ef81dE"(ptr align 8 %_13, ptr align 8 %12, ptr align 8 %14) #10, !dbg !2587
  ret void, !dbg !2588
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h9a0dde2ace4ef81dE"(ptr align 8 %_1, ptr align 8 %a, ptr align 8 %b) unnamed_addr #0 !dbg !2589 {
start:
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2595, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 16, DW_OP_deref)), !dbg !2598
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2596, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2599
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2597, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 24, DW_OP_deref)), !dbg !2600
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2593, metadata !DIExpression()), !dbg !2601
  store ptr %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !2594, metadata !DIExpression()), !dbg !2602
  %0 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 1, !dbg !2603
  %_16 = load ptr, ptr %0, align 8, !dbg !2603, !nonnull !24, !align !510, !noundef !24
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2604
  %_17.0 = load ptr, ptr %1, align 8, !dbg !2604, !nonnull !24, !align !510, !noundef !24
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2604
  %_17.1 = load i64, ptr %2, align 8, !dbg !2604, !noundef !24
  %_8 = load i64, ptr %b, align 8, !dbg !2605, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_7 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %_17.0, i64 %_17.1, i64 %_8) #10, !dbg !2604
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2606
  %_18.0 = load ptr, ptr %3, align 8, !dbg !2606, !nonnull !24, !align !510, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2606
  %_18.1 = load i64, ptr %4, align 8, !dbg !2606, !noundef !24
  %_11 = load i64, ptr %a, align 8, !dbg !2607, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_10 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %_18.0, i64 %_18.1, i64 %_11) #10, !dbg !2606
  store ptr %_7, ptr %_5, align 8, !dbg !2603
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2603
  store ptr %_10, ptr %5, align 8, !dbg !2603
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 0, !dbg !2603
  %7 = load ptr, ptr %6, align 8, !dbg !2603, !nonnull !24, !align !510, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2603
  %9 = load ptr, ptr %8, align 8, !dbg !2603, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %_16, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2603
  br i1 %_4, label %bb4, label %bb7, !dbg !2603

bb7:                                              ; preds = %bb6, %start
  ret void, !dbg !2608

bb4:                                              ; preds = %start
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17hbde6658a27455df3E(ptr %a, ptr %b) #10, !dbg !2609
  %10 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2610
  %_19 = load ptr, ptr %10, align 8, !dbg !2610, !nonnull !24, !align !510, !noundef !24
  %11 = load i64, ptr %_19, align 8, !dbg !2610, !noundef !24
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %11, i64 1), !dbg !2610
  %_15.0 = extractvalue { i64, i1 } %12, 0, !dbg !2610
  %_15.1 = extractvalue { i64, i1 } %12, 1, !dbg !2610
  %13 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2610
  %_20 = load ptr, ptr %13, align 8, !dbg !2610, !nonnull !24, !align !510, !noundef !24
  %14 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !2610
  br i1 %14, label %panic, label %bb6, !dbg !2610

bb6:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"[closure@core::slice::sort::choose_pivot<bootinfo::memory_map::MemoryRegion, [closure@core::slice::<impl [bootinfo::memory_map::MemoryRegion]>::sort_unstable_by<[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:40:39: 40:47]>::{closure#0}]>::{closure#0}]", ptr %_1, i32 0, i32 2, !dbg !2610
  %_21 = load ptr, ptr %15, align 8, !dbg !2610, !nonnull !24, !align !510, !noundef !24
  store i64 %_15.0, ptr %_21, align 8, !dbg !2610
  br label %bb7, !dbg !2611

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_8b1cf5b76b10a43810ba75cdb94336e8) #11, !dbg !2610
  unreachable, !dbg !2610
}

; core::slice::sort::choose_pivot::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hb71a1ca753657207E"(ptr align 8 %_1, ptr align 8 %a) unnamed_addr #0 !dbg !2612 {
start:
  %tmp.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca i64, align 8
  %_5 = alloca { ptr, ptr, ptr }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2618, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2621
  store ptr %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !2617, metadata !DIExpression()), !dbg !2622
  %tmp = load i64, ptr %a, align 8, !dbg !2623, !noundef !24
  store i64 %tmp, ptr %tmp.dbg.spill, align 8, !dbg !2623
  call void @llvm.dbg.declare(metadata ptr %tmp.dbg.spill, metadata !2619, metadata !DIExpression()), !dbg !2624
  %_12 = load ptr, ptr %_1, align 8, !dbg !2625, !nonnull !24, !align !510, !noundef !24
  %_8.0 = sub i64 %tmp, 1, !dbg !2626
  %_8.1 = icmp ult i64 %tmp, 1, !dbg !2626
  %0 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2626
  br i1 %0, label %panic, label %bb1, !dbg !2626

bb1:                                              ; preds = %start
  store i64 %_8.0, ptr %_7, align 8, !dbg !2626
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %tmp, i64 1), !dbg !2627
  %_11.0 = extractvalue { i64, i1 } %1, 0, !dbg !2627
  %_11.1 = extractvalue { i64, i1 } %1, 1, !dbg !2627
  %2 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !2627
  br i1 %2, label %panic1, label %bb2, !dbg !2627

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4e8855159810091534f04a19bbe30782) #11, !dbg !2626
  unreachable, !dbg !2626

bb2:                                              ; preds = %bb1
  store i64 %_11.0, ptr %_10, align 8, !dbg !2627
  store ptr %_7, ptr %_5, align 8, !dbg !2625
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2625
  store ptr %a, ptr %3, align 8, !dbg !2625
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2625
  store ptr %_10, ptr %4, align 8, !dbg !2625
  %5 = load ptr, ptr %_5, align 8, !dbg !2625, !nonnull !24, !align !510, !noundef !24
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !2625
  %7 = load ptr, ptr %6, align 8, !dbg !2625, !nonnull !24, !align !510, !noundef !24
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %_5, i32 0, i32 2, !dbg !2625
  %9 = load ptr, ptr %8, align 8, !dbg !2625, !nonnull !24, !align !510, !noundef !24
; call core::slice::sort::choose_pivot::{{closure}}
  call void @"_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h3cb0313f4eec197aE"(ptr align 8 %_12, ptr align 8 %5, ptr align 8 %7, ptr align 8 %9) #10, !dbg !2625
  ret void, !dbg !2628

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_787d88f30b9a4c9abd6abb658d261d97) #11, !dbg !2627
  unreachable, !dbg !2627
}

; core::slice::sort::break_patterns
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort14break_patterns17h8ecba329f837a7b4E(ptr align 8 %v.0, i64 %v.1) unnamed_addr #2 !dbg !2629 {
start:
  %i.dbg.spill = alloca i64, align 8
  %pos.dbg.spill = alloca i64, align 8
  %modulus.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %other = alloca i64, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %gen_usize = alloca ptr, align 8
  %seed = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2631, metadata !DIExpression()), !dbg !2652
  call void @llvm.dbg.declare(metadata ptr %seed, metadata !2634, metadata !DIExpression()), !dbg !2653
  call void @llvm.dbg.declare(metadata ptr %gen_usize, metadata !2636, metadata !DIExpression()), !dbg !2654
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2646, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.declare(metadata ptr %other, metadata !2650, metadata !DIExpression()), !dbg !2656
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !2657
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !2632, metadata !DIExpression()), !dbg !2658
  %_4 = icmp uge i64 %v.1, 8, !dbg !2659
  br i1 %_4, label %bb1, label %bb17, !dbg !2659

bb17:                                             ; preds = %bb6, %start
  ret void, !dbg !2660

bb1:                                              ; preds = %start
  store i64 %v.1, ptr %seed, align 8, !dbg !2661
  store ptr %seed, ptr %gen_usize, align 8, !dbg !2662
; call core::num::<impl usize>::next_power_of_two
  %modulus = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h6d38340da7fe9804E"(i64 %v.1) #10, !dbg !2663
  store i64 %modulus, ptr %modulus.dbg.spill, align 8, !dbg !2663
  call void @llvm.dbg.declare(metadata ptr %modulus.dbg.spill, metadata !2642, metadata !DIExpression()), !dbg !2664
  %_10 = udiv i64 %v.1, 4, !dbg !2665
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 2), !dbg !2665
  %_12.0 = extractvalue { i64, i1 } %2, 0, !dbg !2665
  %_12.1 = extractvalue { i64, i1 } %2, 1, !dbg !2665
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2665
  br i1 %3, label %panic, label %bb4, !dbg !2665

bb4:                                              ; preds = %bb1
  store i64 %_12.0, ptr %pos.dbg.spill, align 8, !dbg !2665
  call void @llvm.dbg.declare(metadata ptr %pos.dbg.spill, metadata !2644, metadata !DIExpression()), !dbg !2666
  store i64 0, ptr %_14, align 8, !dbg !2667
  %4 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2667
  store i64 3, ptr %4, align 8, !dbg !2667
  %5 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !2667
  %6 = load i64, ptr %5, align 8, !dbg !2667, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !2667
  %8 = load i64, ptr %7, align 8, !dbg !2667, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1e3ba51008b82e5E"(i64 %6, i64 %8) #10, !dbg !2667
  %_13.0 = extractvalue { i64, i64 } %9, 0, !dbg !2667
  %_13.1 = extractvalue { i64, i64 } %9, 1, !dbg !2667
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !2667
  store i64 %_13.0, ptr %10, align 8, !dbg !2667
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !2667
  store i64 %_13.1, ptr %11, align 8, !dbg !2667
  br label %bb6, !dbg !2668

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_2745df5dada1022057bbf8b1e08b9408) #11, !dbg !2665
  unreachable, !dbg !2665

bb6:                                              ; preds = %bb16, %bb4
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %12 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h1df758b10b9b351bE"(ptr align 8 %iter) #10, !dbg !2655
  store { i64, i64 } %12, ptr %_16, align 8, !dbg !2655
  %_18 = load i64, ptr %_16, align 8, !dbg !2655, !range !1071, !noundef !24
  %13 = icmp eq i64 %_18, 0, !dbg !2655
  br i1 %13, label %bb17, label %bb8, !dbg !2655

bb8:                                              ; preds = %bb6
  %14 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !2669
  %i = load i64, ptr %14, align 8, !dbg !2669, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2669
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2648, metadata !DIExpression()), !dbg !2670
; call core::slice::sort::break_patterns::{{closure}}
  %_21 = call i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h64e1c413c9acb3ebE"(ptr align 8 %gen_usize) #10, !dbg !2671
  %_25.0 = sub i64 %modulus, 1, !dbg !2672
  %_25.1 = icmp ult i64 %modulus, 1, !dbg !2672
  %15 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false), !dbg !2672
  br i1 %15, label %panic1, label %bb11, !dbg !2672

bb9:                                              ; No predecessors!
  unreachable, !dbg !2655

bb11:                                             ; preds = %bb8
  %16 = and i64 %_21, %_25.0, !dbg !2671
  store i64 %16, ptr %other, align 8, !dbg !2671
  %_27 = load i64, ptr %other, align 8, !dbg !2673, !noundef !24
  %_26 = icmp uge i64 %_27, %v.1, !dbg !2673
  br i1 %_26, label %bb12, label %bb14, !dbg !2673

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c3165b226cb3c0c182e30d6993318b09) #11, !dbg !2672
  unreachable, !dbg !2672

bb14:                                             ; preds = %bb13, %bb11
  %_32.0 = sub i64 %_12.0, 1, !dbg !2674
  %_32.1 = icmp ult i64 %_12.0, 1, !dbg !2674
  %17 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !2674
  br i1 %17, label %panic3, label %bb15, !dbg !2674

bb12:                                             ; preds = %bb11
  %18 = load i64, ptr %other, align 8, !dbg !2675, !noundef !24
  %_28.0 = sub i64 %18, %v.1, !dbg !2675
  %_28.1 = icmp ult i64 %18, %v.1, !dbg !2675
  %19 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !2675
  br i1 %19, label %panic2, label %bb13, !dbg !2675

bb13:                                             ; preds = %bb12
  store i64 %_28.0, ptr %other, align 8, !dbg !2675
  br label %bb14, !dbg !2676

panic2:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c938216ce784d5d7b6bb0e8f59c85beb) #11, !dbg !2675
  unreachable, !dbg !2675

bb15:                                             ; preds = %bb14
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_32.0, i64 %i), !dbg !2674
  %_33.0 = extractvalue { i64, i1 } %20, 0, !dbg !2674
  %_33.1 = extractvalue { i64, i1 } %20, 1, !dbg !2674
  %21 = call i1 @llvm.expect.i1(i1 %_33.1, i1 false), !dbg !2674
  br i1 %21, label %panic4, label %bb16, !dbg !2674

panic3:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_55987e570b17d50f773e204af1733715) #11, !dbg !2674
  unreachable, !dbg !2674

bb16:                                             ; preds = %bb15
  %_34 = load i64, ptr %other, align 8, !dbg !2677, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h3698e108c8304892E"(ptr align 8 %v.0, i64 %v.1, i64 %_33.0, i64 %_34, ptr align 8 @alloc_dd29033771d55fdf04aba4a1982901e8) #10, !dbg !2678
  br label %bb6, !dbg !2678

panic4:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_55987e570b17d50f773e204af1733715) #11, !dbg !2674
  unreachable, !dbg !2674
}

; core::slice::sort::break_patterns::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h64e1c413c9acb3ebE"(ptr align 8 %_1) unnamed_addr #0 !dbg !2679 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  %r1 = alloca i64, align 8
  %r = alloca i32, align 4
  %0 = alloca i64, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2684, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !2689
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2685, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.declare(metadata ptr %r1, metadata !2687, metadata !DIExpression()), !dbg !2691
  br i1 false, label %bb1, label %bb5, !dbg !2692

bb5:                                              ; preds = %start
  %_36 = load ptr, ptr %_1, align 8, !dbg !2693, !nonnull !24, !align !510, !noundef !24
  %_19 = load i64, ptr %_36, align 8, !dbg !2693, !noundef !24
  store i64 %_19, ptr %r1, align 8, !dbg !2693
  %_21 = load i64, ptr %r1, align 8, !dbg !2694, !noundef !24
  %_20 = shl i64 %_21, 13, !dbg !2694
  %1 = load i64, ptr %r1, align 8, !dbg !2695, !noundef !24
  %2 = xor i64 %1, %_20, !dbg !2695
  store i64 %2, ptr %r1, align 8, !dbg !2695
  %_25 = load i64, ptr %r1, align 8, !dbg !2696, !noundef !24
  %_24 = lshr i64 %_25, 7, !dbg !2696
  %3 = load i64, ptr %r1, align 8, !dbg !2697, !noundef !24
  %4 = xor i64 %3, %_24, !dbg !2697
  store i64 %4, ptr %r1, align 8, !dbg !2697
  %_29 = load i64, ptr %r1, align 8, !dbg !2698, !noundef !24
  %_28 = shl i64 %_29, 17, !dbg !2698
  %5 = load i64, ptr %r1, align 8, !dbg !2699, !noundef !24
  %6 = xor i64 %5, %_28, !dbg !2699
  store i64 %6, ptr %r1, align 8, !dbg !2699
  %_32 = load i64, ptr %r1, align 8, !dbg !2700, !noundef !24
  %_37 = load ptr, ptr %_1, align 8, !dbg !2701, !nonnull !24, !align !510, !noundef !24
  store i64 %_32, ptr %_37, align 8, !dbg !2701
  %_38 = load ptr, ptr %_1, align 8, !dbg !2702, !nonnull !24, !align !510, !noundef !24
  %7 = load i64, ptr %_38, align 8, !dbg !2702, !noundef !24
  store i64 %7, ptr %0, align 8, !dbg !2702
  br label %bb9, !dbg !2703

bb1:                                              ; preds = %start
  %_33 = load ptr, ptr %_1, align 8, !dbg !2704, !nonnull !24, !align !510, !noundef !24
  %_4 = load i64, ptr %_33, align 8, !dbg !2704, !noundef !24
  %8 = trunc i64 %_4 to i32, !dbg !2704
  store i32 %8, ptr %r, align 4, !dbg !2704
  %_6 = load i32, ptr %r, align 4, !dbg !2705, !noundef !24
  %_5 = shl i32 %_6, 13, !dbg !2705
  %9 = load i32, ptr %r, align 4, !dbg !2706, !noundef !24
  %10 = xor i32 %9, %_5, !dbg !2706
  store i32 %10, ptr %r, align 4, !dbg !2706
  %_10 = load i32, ptr %r, align 4, !dbg !2707, !noundef !24
  %_9 = lshr i32 %_10, 17, !dbg !2707
  %11 = load i32, ptr %r, align 4, !dbg !2708, !noundef !24
  %12 = xor i32 %11, %_9, !dbg !2708
  store i32 %12, ptr %r, align 4, !dbg !2708
  %_14 = load i32, ptr %r, align 4, !dbg !2709, !noundef !24
  %_13 = shl i32 %_14, 5, !dbg !2709
  %13 = load i32, ptr %r, align 4, !dbg !2710, !noundef !24
  %14 = xor i32 %13, %_13, !dbg !2710
  store i32 %14, ptr %r, align 4, !dbg !2710
  %_17 = load i32, ptr %r, align 4, !dbg !2711, !noundef !24
  %_34 = load ptr, ptr %_1, align 8, !dbg !2712, !nonnull !24, !align !510, !noundef !24
  %15 = zext i32 %_17 to i64, !dbg !2712
  store i64 %15, ptr %_34, align 8, !dbg !2712
  %_35 = load ptr, ptr %_1, align 8, !dbg !2713, !nonnull !24, !align !510, !noundef !24
  %16 = load i64, ptr %_35, align 8, !dbg !2713, !noundef !24
  store i64 %16, ptr %0, align 8, !dbg !2713
  br label %bb9, !dbg !2703

bb9:                                              ; preds = %bb5, %bb1
  %17 = load i64, ptr %0, align 8, !dbg !2714, !noundef !24
  ret i64 %17, !dbg !2714
}

; core::slice::sort::partition_equal
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort15partition_equal17h9d9f9d4265ea5a6dE(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2715 {
start:
  %self.dbg.spill.i23 = alloca ptr, align 8
  %self.dbg.spill.i22 = alloca ptr, align 8
  %self.dbg.spill.i21 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i14 = alloca i64, align 8
  %self.dbg.spill.i15 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_44 = alloca { ptr, ptr }, align 8
  %_39 = alloca i8, align 1
  %_33 = alloca { ptr, ptr }, align 8
  %_27 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_13 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_7 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2719, metadata !DIExpression()), !dbg !2739
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2720, metadata !DIExpression()), !dbg !2740
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2721, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2727, metadata !DIExpression()), !dbg !2742
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !2729, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2733, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2735, metadata !DIExpression()), !dbg !2745
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h3698e108c8304892E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_f8322b69080b1e19bc4df073038a414d) #10, !dbg !2746
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h59d0703bd83b67daE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_7, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_23975e137ecce848c3167e283c742672) #10, !dbg !2747
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 0, !dbg !2748
  %pivot.0 = load ptr, ptr %4, align 8, !dbg !2748, !nonnull !24, !align !510, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_7, i32 0, i32 1, !dbg !2748
  %pivot.1 = load i64, ptr %5, align 8, !dbg !2748, !noundef !24
  %6 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !2748
  store ptr %pivot.0, ptr %6, align 8, !dbg !2748
  %7 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !2748
  store i64 %pivot.1, ptr %7, align 8, !dbg !2748
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !2722, metadata !DIExpression()), !dbg !2749
  %8 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !2750
  %9 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 0, !dbg !2750
  %v.02 = load ptr, ptr %9, align 8, !dbg !2750, !nonnull !24, !align !510, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %8, i32 0, i32 1, !dbg !2750
  %v.13 = load i64, ptr %10, align 8, !dbg !2750, !noundef !24
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !2750
  store ptr %v.02, ptr %11, align 8, !dbg !2750
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !2750
  store i64 %v.13, ptr %12, align 8, !dbg !2750
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !2724, metadata !DIExpression()), !dbg !2751
  %_11 = icmp ult i64 0, %pivot.1, !dbg !2752
  %13 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !2752
  br i1 %13, label %bb3, label %panic, !dbg !2752

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !2753
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !2753
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !2725, metadata !DIExpression()), !dbg !2754
; call core::ptr::read
  call void @_ZN4core3ptr4read17h9bbf8b811484d8b8E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_13, ptr %pivot5) #10, !dbg !2755
  call void @llvm.dbg.declare(metadata ptr %_13, metadata !1014, metadata !DIExpression()), !dbg !2756
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_13, i64 24, i1 false), !dbg !2758
  store ptr %tmp, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !2328, metadata !DIExpression()), !dbg !2759
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !2761
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !2761
  store ptr %pivot5, ptr %14, align 8, !dbg !2761
  store ptr %tmp, ptr %self.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !2328, metadata !DIExpression()), !dbg !2762
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !2764
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !2731, metadata !DIExpression()), !dbg !2765
  store i64 0, ptr %l, align 8, !dbg !2766
  store i64 %v.13, ptr %r, align 8, !dbg !2767
  br label %bb8, !dbg !2768

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 0, i64 %pivot.1, ptr align 8 @alloc_3ea9d353dbaea466ca156be00652f893) #11, !dbg !2752
  unreachable, !dbg !2752

bb8:                                              ; preds = %bb33, %bb15, %bb3
  %_29 = load i64, ptr %l, align 8, !dbg !2769, !noundef !24
  %_30 = load i64, ptr %r, align 8, !dbg !2770, !noundef !24
  %_28 = icmp ult i64 %_29, %_30, !dbg !2769
  br i1 %_28, label %bb10, label %bb9, !dbg !2769

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_27, align 1, !dbg !2769
  br label %bb11, !dbg !2769

bb10:                                             ; preds = %bb8
  %_37 = load i64, ptr %l, align 8, !dbg !2771, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_35 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %v.02, i64 %v.13, i64 %_37) #10, !dbg !2772
  store ptr %tmp, ptr %_33, align 8, !dbg !2773
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !2773
  store ptr %_35, ptr %15, align 8, !dbg !2773
  %16 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 0, !dbg !2773
  %17 = load ptr, ptr %16, align 8, !dbg !2773, !nonnull !24, !align !510, !noundef !24
  %18 = getelementptr inbounds { ptr, ptr }, ptr %_33, i32 0, i32 1, !dbg !2773
  %19 = load ptr, ptr %18, align 8, !dbg !2773, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_32 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %17, ptr align 8 %19) #10, !dbg !2773
  %_31 = xor i1 %_32, true, !dbg !2774
  %20 = zext i1 %_31 to i8, !dbg !2769
  store i8 %20, ptr %_27, align 1, !dbg !2769
  br label %bb11, !dbg !2769

bb11:                                             ; preds = %bb9, %bb10
  %21 = load i8, ptr %_27, align 1, !dbg !2769, !range !242, !noundef !24
  %22 = trunc i8 %21 to i1, !dbg !2769
  br i1 %22, label %bb14, label %bb16, !dbg !2769

bb16:                                             ; preds = %bb24, %bb11
  %_41 = load i64, ptr %l, align 8, !dbg !2775, !noundef !24
  %_42 = load i64, ptr %r, align 8, !dbg !2776, !noundef !24
  %_40 = icmp ult i64 %_41, %_42, !dbg !2775
  br i1 %_40, label %bb18, label %bb17, !dbg !2775

bb14:                                             ; preds = %bb11
  %23 = load i64, ptr %l, align 8, !dbg !2777, !noundef !24
  %24 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %23, i64 1), !dbg !2777
  %_38.0 = extractvalue { i64, i1 } %24, 0, !dbg !2777
  %_38.1 = extractvalue { i64, i1 } %24, 1, !dbg !2777
  %25 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !2777
  br i1 %25, label %panic8, label %bb15, !dbg !2777

bb15:                                             ; preds = %bb14
  store i64 %_38.0, ptr %l, align 8, !dbg !2777
  br label %bb8, !dbg !2778

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_a23b538f7d9197acefade9a7784184c2) #11, !dbg !2777
  unreachable, !dbg !2777

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_39, align 1, !dbg !2775
  br label %bb19, !dbg !2775

bb18:                                             ; preds = %bb16
  %_49 = load i64, ptr %r, align 8, !dbg !2779, !noundef !24
  %_50.0 = sub i64 %_49, 1, !dbg !2779
  %_50.1 = icmp ult i64 %_49, 1, !dbg !2779
  %26 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false), !dbg !2779
  br i1 %26, label %panic9, label %bb20, !dbg !2779

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_46 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %v.02, i64 %v.13, i64 %_50.0) #10, !dbg !2780
  store ptr %tmp, ptr %_44, align 8, !dbg !2781
  %27 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !2781
  store ptr %_46, ptr %27, align 8, !dbg !2781
  %28 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 0, !dbg !2781
  %29 = load ptr, ptr %28, align 8, !dbg !2781, !nonnull !24, !align !510, !noundef !24
  %30 = getelementptr inbounds { ptr, ptr }, ptr %_44, i32 0, i32 1, !dbg !2781
  %31 = load ptr, ptr %30, align 8, !dbg !2781, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_43 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %29, ptr align 8 %31) #10, !dbg !2781
  %32 = zext i1 %_43 to i8, !dbg !2775
  store i8 %32, ptr %_39, align 1, !dbg !2775
  br label %bb19, !dbg !2775

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_3aa499bef66e3a89497706d0904ac653) #11, !dbg !2779
  unreachable, !dbg !2779

bb19:                                             ; preds = %bb17, %bb20
  %33 = load i8, ptr %_39, align 1, !dbg !2775, !range !242, !noundef !24
  %34 = trunc i8 %33 to i1, !dbg !2775
  br i1 %34, label %bb23, label %bb25, !dbg !2775

bb25:                                             ; preds = %bb19
  %_53 = load i64, ptr %l, align 8, !dbg !2782, !noundef !24
  %_54 = load i64, ptr %r, align 8, !dbg !2783, !noundef !24
  %_52 = icmp uge i64 %_53, %_54, !dbg !2782
  br i1 %_52, label %bb26, label %bb27, !dbg !2782

bb23:                                             ; preds = %bb19
  %35 = load i64, ptr %r, align 8, !dbg !2784, !noundef !24
  %_51.0 = sub i64 %35, 1, !dbg !2784
  %_51.1 = icmp ult i64 %35, 1, !dbg !2784
  %36 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false), !dbg !2784
  br i1 %36, label %panic10, label %bb24, !dbg !2784

bb24:                                             ; preds = %bb23
  store i64 %_51.0, ptr %r, align 8, !dbg !2784
  br label %bb16, !dbg !2785

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6b88286adc8b79b2ce0db9f94ea83bc3) #11, !dbg !2784
  unreachable, !dbg !2784

bb27:                                             ; preds = %bb25
  %37 = load i64, ptr %r, align 8, !dbg !2786, !noundef !24
  %_55.0 = sub i64 %37, 1, !dbg !2786
  %_55.1 = icmp ult i64 %37, 1, !dbg !2786
  %38 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !2786
  br i1 %38, label %panic12, label %bb28, !dbg !2786

bb26:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !2787, !noundef !24
  %39 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_65, i64 1), !dbg !2787
  %_66.0 = extractvalue { i64, i1 } %39, 0, !dbg !2787
  %_66.1 = extractvalue { i64, i1 } %39, 1, !dbg !2787
  %40 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !2787
  br i1 %40, label %panic11, label %bb34, !dbg !2787

bb34:                                             ; preds = %bb26
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hf11a1c24d41b52e3E"(ptr %_pivot_guard) #10, !dbg !2788
  ret i64 %_66.0, !dbg !2789

panic11:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_10d6a7449345760a13244dcd4f3e8edd) #11, !dbg !2787
  unreachable, !dbg !2787

bb28:                                             ; preds = %bb27
  store i64 %_55.0, ptr %r, align 8, !dbg !2786
  store ptr %v.02, ptr %self.dbg.spill.i21, align 8
  %41 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i21, i32 0, i32 1
  store i64 %v.13, ptr %41, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i21, metadata !1971, metadata !DIExpression()), !dbg !2790
  store ptr %v.02, ptr %ptr.dbg.spill, align 8, !dbg !2792
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2737, metadata !DIExpression()), !dbg !2793
  %_60 = load i64, ptr %l, align 8, !dbg !2794, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i15, metadata !276, metadata !DIExpression()), !dbg !2795
  store i64 %_60, ptr %count.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i14, metadata !282, metadata !DIExpression()), !dbg !2797
  store ptr %v.02, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !286, metadata !DIExpression()), !dbg !2798
  store i64 %_60, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !291, metadata !DIExpression()), !dbg !2800
  %42 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_60, !dbg !2801
  store ptr %42, ptr %1, align 8, !dbg !2801
  %_3.i = load ptr, ptr %1, align 8, !dbg !2801, !noundef !24
  %_63 = load i64, ptr %r, align 8, !dbg !2802, !noundef !24
  store ptr %v.02, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !276, metadata !DIExpression()), !dbg !2803
  store i64 %_63, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !282, metadata !DIExpression()), !dbg !2805
  store ptr %v.02, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !286, metadata !DIExpression()), !dbg !2806
  store i64 %_63, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !291, metadata !DIExpression()), !dbg !2808
  %43 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %v.02, i64 %_63, !dbg !2809
  store ptr %43, ptr %0, align 8, !dbg !2809
  %_3.i20 = load ptr, ptr %0, align 8, !dbg !2809, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h8b2f3774968ef06dE(ptr %_3.i, ptr %_3.i20) #10, !dbg !2810
  %44 = load i64, ptr %l, align 8, !dbg !2811, !noundef !24
  %45 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %44, i64 1), !dbg !2811
  %_64.0 = extractvalue { i64, i1 } %45, 0, !dbg !2811
  %_64.1 = extractvalue { i64, i1 } %45, 1, !dbg !2811
  %46 = call i1 @llvm.expect.i1(i1 %_64.1, i1 false), !dbg !2811
  br i1 %46, label %panic13, label %bb33, !dbg !2811

panic12:                                          ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_894987bd31137d43dbfbf66922648de6) #11, !dbg !2786
  unreachable, !dbg !2786

bb33:                                             ; preds = %bb28
  store i64 %_64.0, ptr %l, align 8, !dbg !2811
  br label %bb8, !dbg !2768

panic13:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_bae318ebda80fadd5948c94c31acdbd2) #11, !dbg !2811
  unreachable, !dbg !2811
}

; core::slice::sort::partition_in_blocks
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks17h407c8ed58cf84055E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !2812 {
start:
  %small.dbg.spill.i195 = alloca i8, align 1
  %small.dbg.spill.i194 = alloca i8, align 1
  %small.dbg.spill.i193 = alloca i8, align 1
  %small.dbg.spill.i192 = alloca i8, align 1
  %small.dbg.spill.i191 = alloca i8, align 1
  %small.dbg.spill.i190 = alloca i8, align 1
  %small.dbg.spill.i189 = alloca i8, align 1
  %small.dbg.spill.i188 = alloca i8, align 1
  %small.dbg.spill.i187 = alloca i8, align 1
  %small.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i186 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i185 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i184 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i183 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i182 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i181 = alloca { ptr, i64 }, align 8
  %addr.dbg.spill.i.i180 = alloca i64, align 8
  %addr.dbg.spill.i.i179 = alloca i64, align 8
  %addr.dbg.spill.i.i178 = alloca i64, align 8
  %addr.dbg.spill.i.i = alloca i64, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i175 = alloca i64, align 8
  %self.dbg.spill.i176 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i172 = alloca i64, align 8
  %self.dbg.spill.i173 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %count.dbg.spill.i169 = alloca i64, align 8
  %self.dbg.spill.i170 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %count.dbg.spill.i166 = alloca i64, align 8
  %self.dbg.spill.i167 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %count.dbg.spill.i163 = alloca i64, align 8
  %self.dbg.spill.i164 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %count.dbg.spill.i160 = alloca i64, align 8
  %self.dbg.spill.i161 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %count.dbg.spill.i157 = alloca i64, align 8
  %self.dbg.spill.i158 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %count.dbg.spill.i154 = alloca i64, align 8
  %self.dbg.spill.i155 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %count.dbg.spill.i151 = alloca i64, align 8
  %self.dbg.spill.i152 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %count.dbg.spill.i148 = alloca i64, align 8
  %self.dbg.spill.i149 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %count.dbg.spill.i145 = alloca i64, align 8
  %self.dbg.spill.i146 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %count.dbg.spill.i142 = alloca i64, align 8
  %self.dbg.spill.i143 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %count.dbg.spill.i139 = alloca i64, align 8
  %self.dbg.spill.i140 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %count.dbg.spill.i136 = alloca i64, align 8
  %self.dbg.spill.i137 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %count.dbg.spill.i133 = alloca i64, align 8
  %self.dbg.spill.i134 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %count.dbg.spill.i130 = alloca i64, align 8
  %self.dbg.spill.i131 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %count.dbg.spill.i127 = alloca i64, align 8
  %self.dbg.spill.i128 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %count.dbg.spill.i124 = alloca i64, align 8
  %self.dbg.spill.i125 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %count.dbg.spill.i121 = alloca i64, align 8
  %self.dbg.spill.i122 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %count.dbg.spill.i118 = alloca i64, align 8
  %self.dbg.spill.i119 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %count.dbg.spill.i115 = alloca i64, align 8
  %self.dbg.spill.i116 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %count.dbg.spill.i112 = alloca i64, align 8
  %self.dbg.spill.i113 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %count.dbg.spill.i109 = alloca i64, align 8
  %self.dbg.spill.i110 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %count.dbg.spill.i106 = alloca i64, align 8
  %self.dbg.spill.i107 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  %count.dbg.spill.i103 = alloca i64, align 8
  %self.dbg.spill.i104 = alloca ptr, align 8
  %25 = alloca ptr, align 8
  %count.dbg.spill.i101 = alloca i64, align 8
  %self.dbg.spill.i102 = alloca ptr, align 8
  %rhs.dbg.spill.i.i96 = alloca i64, align 8
  %self.dbg.spill.i1.i97 = alloca i64, align 8
  %self.dbg.spill.i.i98 = alloca i64, align 8
  %count.dbg.spill.i99 = alloca i64, align 8
  %self.dbg.spill.i100 = alloca ptr, align 8
  %rhs.dbg.spill.i.i91 = alloca i64, align 8
  %self.dbg.spill.i1.i92 = alloca i64, align 8
  %self.dbg.spill.i.i93 = alloca i64, align 8
  %count.dbg.spill.i94 = alloca i64, align 8
  %self.dbg.spill.i95 = alloca ptr, align 8
  %rhs.dbg.spill.i.i86 = alloca i64, align 8
  %self.dbg.spill.i1.i87 = alloca i64, align 8
  %self.dbg.spill.i.i88 = alloca i64, align 8
  %count.dbg.spill.i89 = alloca i64, align 8
  %self.dbg.spill.i90 = alloca ptr, align 8
  %rhs.dbg.spill.i.i81 = alloca i64, align 8
  %self.dbg.spill.i1.i82 = alloca i64, align 8
  %self.dbg.spill.i.i83 = alloca i64, align 8
  %count.dbg.spill.i84 = alloca i64, align 8
  %self.dbg.spill.i85 = alloca ptr, align 8
  %rhs.dbg.spill.i.i76 = alloca i64, align 8
  %self.dbg.spill.i1.i77 = alloca i64, align 8
  %self.dbg.spill.i.i78 = alloca i64, align 8
  %count.dbg.spill.i79 = alloca i64, align 8
  %self.dbg.spill.i80 = alloca ptr, align 8
  %rhs.dbg.spill.i.i71 = alloca i64, align 8
  %self.dbg.spill.i1.i72 = alloca i64, align 8
  %self.dbg.spill.i.i73 = alloca i64, align 8
  %count.dbg.spill.i74 = alloca i64, align 8
  %self.dbg.spill.i75 = alloca ptr, align 8
  %rhs.dbg.spill.i.i66 = alloca i64, align 8
  %self.dbg.spill.i1.i67 = alloca i64, align 8
  %self.dbg.spill.i.i68 = alloca i64, align 8
  %count.dbg.spill.i69 = alloca i64, align 8
  %self.dbg.spill.i70 = alloca ptr, align 8
  %rhs.dbg.spill.i.i61 = alloca i64, align 8
  %self.dbg.spill.i1.i62 = alloca i64, align 8
  %self.dbg.spill.i.i63 = alloca i64, align 8
  %count.dbg.spill.i64 = alloca i64, align 8
  %self.dbg.spill.i65 = alloca ptr, align 8
  %rhs.dbg.spill.i.i56 = alloca i64, align 8
  %self.dbg.spill.i1.i57 = alloca i64, align 8
  %self.dbg.spill.i.i58 = alloca i64, align 8
  %count.dbg.spill.i59 = alloca i64, align 8
  %self.dbg.spill.i60 = alloca ptr, align 8
  %rhs.dbg.spill.i.i51 = alloca i64, align 8
  %self.dbg.spill.i1.i52 = alloca i64, align 8
  %self.dbg.spill.i.i53 = alloca i64, align 8
  %count.dbg.spill.i54 = alloca i64, align 8
  %self.dbg.spill.i55 = alloca ptr, align 8
  %rhs.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %count.dbg.spill.i49 = alloca i64, align 8
  %self.dbg.spill.i50 = alloca ptr, align 8
  %count.dbg.spill.i47 = alloca i64, align 8
  %self.dbg.spill.i48 = alloca ptr, align 8
  %count.dbg.spill.i45 = alloca i64, align 8
  %self.dbg.spill.i46 = alloca ptr, align 8
  %count.dbg.spill.i43 = alloca i64, align 8
  %self.dbg.spill.i44 = alloca ptr, align 8
  %count.dbg.spill.i41 = alloca i64, align 8
  %self.dbg.spill.i42 = alloca ptr, align 8
  %count.dbg.spill.i39 = alloca i64, align 8
  %self.dbg.spill.i40 = alloca ptr, align 8
  %count.dbg.spill.i37 = alloca i64, align 8
  %self.dbg.spill.i38 = alloca ptr, align 8
  %count.dbg.spill.i35 = alloca i64, align 8
  %self.dbg.spill.i36 = alloca ptr, align 8
  %count.dbg.spill.i33 = alloca i64, align 8
  %self.dbg.spill.i34 = alloca ptr, align 8
  %count.dbg.spill.i31 = alloca i64, align 8
  %self.dbg.spill.i32 = alloca ptr, align 8
  %count.dbg.spill.i29 = alloca i64, align 8
  %self.dbg.spill.i30 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca ptr, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca ptr, align 8
  %count.dbg.spill.i21 = alloca i64, align 8
  %self.dbg.spill.i22 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %this.dbg.spill.i19 = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { ptr, i64 }, align 8
  %right_val.dbg.spill17 = alloca ptr, align 8
  %left_val.dbg.spill15 = alloca ptr, align 8
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %count.dbg.spill = alloca i64, align 8
  %i.dbg.spill9 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %is_done.dbg.spill = alloca i8, align 1
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_259 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind4 = alloca i8, align 1
  %_247 = alloca i64, align 8
  %_245 = alloca { ptr, ptr }, align 8
  %_224 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind = alloca i8, align 1
  %_212 = alloca i64, align 8
  %_210 = alloca { ptr, ptr }, align 8
  %_189 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_148 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_145 = alloca { i64, i64 }, align 8
  %tmp = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_115 = alloca { ptr, ptr }, align 8
  %_105 = alloca { i64, i64 }, align 8
  %iter2 = alloca { i64, i64 }, align 8
  %_102 = alloca { i64, i64 }, align 8
  %elem1 = alloca ptr, align 8
  %_89 = alloca { ptr, ptr }, align 8
  %_80 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_77 = alloca { i64, i64 }, align 8
  %elem = alloca ptr, align 8
  %_51 = alloca i8, align 1
  %_28 = alloca i8, align 1
  %rem = alloca i64, align 8
  %offsets_r = alloca [128 x i8], align 1
  %end_r = alloca ptr, align 8
  %start_r = alloca ptr, align 8
  %block_r = alloca i64, align 8
  %r = alloca ptr, align 8
  %offsets_l = alloca [128 x i8], align 1
  %end_l = alloca ptr, align 8
  %start_l = alloca ptr, align 8
  %block_l = alloca i64, align 8
  %l = alloca ptr, align 8
  %28 = alloca i64, align 8
  %29 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %30, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2816, metadata !DIExpression()), !dbg !2887
  store ptr %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !2817, metadata !DIExpression()), !dbg !2888
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !2818, metadata !DIExpression()), !dbg !2889
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2819, metadata !DIExpression()), !dbg !2890
  call void @llvm.dbg.declare(metadata ptr %block_l, metadata !2821, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.declare(metadata ptr %start_l, metadata !2823, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.declare(metadata ptr %end_l, metadata !2825, metadata !DIExpression()), !dbg !2893
  call void @llvm.dbg.declare(metadata ptr %offsets_l, metadata !2827, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.declare(metadata ptr %r, metadata !2839, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.declare(metadata ptr %block_r, metadata !2841, metadata !DIExpression()), !dbg !2896
  call void @llvm.dbg.declare(metadata ptr %start_r, metadata !2843, metadata !DIExpression()), !dbg !2897
  call void @llvm.dbg.declare(metadata ptr %end_r, metadata !2845, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.declare(metadata ptr %offsets_r, metadata !2847, metadata !DIExpression()), !dbg !2899
  call void @llvm.dbg.declare(metadata ptr %rem, metadata !2851, metadata !DIExpression()), !dbg !2900
  call void @llvm.dbg.declare(metadata ptr %elem, metadata !2853, metadata !DIExpression()), !dbg !2901
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2855, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata ptr %elem1, metadata !2859, metadata !DIExpression()), !dbg !2903
  call void @llvm.dbg.declare(metadata ptr %iter2, metadata !2861, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2867, metadata !DIExpression()), !dbg !2905
  call void @llvm.dbg.declare(metadata ptr %iter3, metadata !2869, metadata !DIExpression()), !dbg !2906
  call void @llvm.dbg.declare(metadata ptr %kind, metadata !2877, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.declare(metadata ptr %kind4, metadata !2884, metadata !DIExpression()), !dbg !2908
  store ptr %v.0, ptr %self.dbg.spill.i184, align 8
  %31 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i184, i32 0, i32 1
  store i64 %v.1, ptr %31, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i184, metadata !1971, metadata !DIExpression()), !dbg !2909
  store ptr %v.0, ptr %l, align 8, !dbg !2911
  store i64 128, ptr %block_l, align 8, !dbg !2912
  store i64 0, ptr %addr.dbg.spill.i.i180, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i180, metadata !2913, metadata !DIExpression()), !dbg !2918
; call core::ptr::metadata::from_raw_parts_mut
  %32 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb47dcef0fd8d9f3eE(ptr null) #10, !dbg !2924
  store ptr %32, ptr %start_l, align 8, !dbg !2925
  store i64 0, ptr %addr.dbg.spill.i.i179, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i179, metadata !2913, metadata !DIExpression()), !dbg !2926
; call core::ptr::metadata::from_raw_parts_mut
  %33 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb47dcef0fd8d9f3eE(ptr null) #10, !dbg !2929
  store ptr %33, ptr %end_l, align 8, !dbg !2930
  %34 = load i8, ptr %26, align 1, !dbg !2931
  %35 = getelementptr inbounds [128 x i8], ptr %offsets_l, i64 0, i64 0, !dbg !2936
  call void @llvm.memset.p0.i64(ptr align 1 %35, i8 %34, i64 128, i1 false), !dbg !2936
  %_11 = load ptr, ptr %l, align 8, !dbg !2937, !noundef !24
  store ptr %_11, ptr %self.dbg.spill.i48, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i48, metadata !276, metadata !DIExpression()), !dbg !2938
  store i64 %v.1, ptr %count.dbg.spill.i47, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i47, metadata !282, metadata !DIExpression()), !dbg !2940
  store ptr %_11, ptr %self.dbg.spill.i152, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i152, metadata !286, metadata !DIExpression()), !dbg !2941
  store i64 %v.1, ptr %count.dbg.spill.i151, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i151, metadata !291, metadata !DIExpression()), !dbg !2943
  %36 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_11, i64 %v.1, !dbg !2944
  store ptr %36, ptr %8, align 8, !dbg !2944
  %_3.i153 = load ptr, ptr %8, align 8, !dbg !2944, !noundef !24
  store ptr %_3.i153, ptr %r, align 8, !dbg !2937
  store i64 128, ptr %block_r, align 8, !dbg !2945
  store i64 0, ptr %addr.dbg.spill.i.i178, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i178, metadata !2913, metadata !DIExpression()), !dbg !2946
; call core::ptr::metadata::from_raw_parts_mut
  %37 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb47dcef0fd8d9f3eE(ptr null) #10, !dbg !2949
  store ptr %37, ptr %start_r, align 8, !dbg !2950
  store i64 0, ptr %addr.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i.i, metadata !2913, metadata !DIExpression()), !dbg !2951
; call core::ptr::metadata::from_raw_parts_mut
  %38 = call ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb47dcef0fd8d9f3eE(ptr null) #10, !dbg !2954
  store ptr %38, ptr %end_r, align 8, !dbg !2955
  %39 = load i8, ptr %27, align 1, !dbg !2956
  %40 = getelementptr inbounds [128 x i8], ptr %offsets_r, i64 0, i64 0, !dbg !2958
  call void @llvm.memset.p0.i64(ptr align 1 %40, i8 %39, i64 128, i1 false), !dbg !2958
  br label %bb9, !dbg !2959

bb9:                                              ; preds = %bb103, %start
  %_21 = load ptr, ptr %l, align 8, !dbg !2960, !noundef !24
  %_22 = load ptr, ptr %r, align 8, !dbg !2961, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_20 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE(ptr %_21, ptr %_22) #10, !dbg !2962
  %41 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 128), !dbg !2963
  %_24.0 = extractvalue { i64, i1 } %41, 0, !dbg !2963
  %_24.1 = extractvalue { i64, i1 } %41, 1, !dbg !2963
  %42 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !2963
  br i1 %42, label %panic, label %bb11, !dbg !2963

bb11:                                             ; preds = %bb9
  %is_done = icmp ule i64 %_20, %_24.0, !dbg !2962
  %43 = zext i1 %is_done to i8, !dbg !2962
  store i8 %43, ptr %is_done.dbg.spill, align 1, !dbg !2962
  call void @llvm.dbg.declare(metadata ptr %is_done.dbg.spill, metadata !2849, metadata !DIExpression()), !dbg !2964
  br i1 %is_done, label %bb12, label %bb37, !dbg !2965

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_fe4e881dfa6c70f91499a9b97cada070) #11, !dbg !2963
  unreachable, !dbg !2963

bb37:                                             ; preds = %bb35, %bb32, %bb11
  %_69 = load ptr, ptr %start_l, align 8, !dbg !2966, !noundef !24
  %_70 = load ptr, ptr %end_l, align 8, !dbg !2967, !noundef !24
  %_68 = icmp eq ptr %_69, %_70, !dbg !2966
  br i1 %_68, label %bb38, label %bb48, !dbg !2966

bb12:                                             ; preds = %bb11
  %_26 = load ptr, ptr %l, align 8, !dbg !2968, !noundef !24
  %_27 = load ptr, ptr %r, align 8, !dbg !2969, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %44 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE(ptr %_26, ptr %_27) #10, !dbg !2970
  store i64 %44, ptr %rem, align 8, !dbg !2970
  %_30 = load ptr, ptr %start_l, align 8, !dbg !2971, !noundef !24
  %_31 = load ptr, ptr %end_l, align 8, !dbg !2972, !noundef !24
  %_29 = icmp ult ptr %_30, %_31, !dbg !2971
  br i1 %_29, label %bb14, label %bb15, !dbg !2971

bb15:                                             ; preds = %bb12
  %_33 = load ptr, ptr %start_r, align 8, !dbg !2973, !noundef !24
  %_34 = load ptr, ptr %end_r, align 8, !dbg !2974, !noundef !24
  %_32 = icmp ult ptr %_33, %_34, !dbg !2973
  %45 = zext i1 %_32 to i8, !dbg !2971
  store i8 %45, ptr %_28, align 1, !dbg !2971
  br label %bb16, !dbg !2971

bb14:                                             ; preds = %bb12
  store i8 1, ptr %_28, align 1, !dbg !2971
  br label %bb16, !dbg !2971

bb16:                                             ; preds = %bb15, %bb14
  %46 = load i8, ptr %_28, align 1, !dbg !2971, !range !242, !noundef !24
  %47 = trunc i8 %46 to i1, !dbg !2971
  br i1 %47, label %bb17, label %bb19, !dbg !2971

bb19:                                             ; preds = %bb18, %bb16
  %_37 = load ptr, ptr %start_l, align 8, !dbg !2975, !noundef !24
  %_38 = load ptr, ptr %end_l, align 8, !dbg !2976, !noundef !24
  %_36 = icmp ult ptr %_37, %_38, !dbg !2975
  br i1 %_36, label %bb20, label %bb21, !dbg !2975

bb17:                                             ; preds = %bb16
  %48 = load i64, ptr %rem, align 8, !dbg !2977, !noundef !24
  %_35.0 = sub i64 %48, 128, !dbg !2977
  %_35.1 = icmp ult i64 %48, 128, !dbg !2977
  %49 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !2977
  br i1 %49, label %panic5, label %bb18, !dbg !2977

bb18:                                             ; preds = %bb17
  store i64 %_35.0, ptr %rem, align 8, !dbg !2977
  br label %bb19, !dbg !2978

panic5:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2417cbaa5b767dc07fcb426311fbedcd) #11, !dbg !2977
  unreachable, !dbg !2977

bb21:                                             ; preds = %bb19
  %_41 = load ptr, ptr %start_r, align 8, !dbg !2979, !noundef !24
  %_42 = load ptr, ptr %end_r, align 8, !dbg !2980, !noundef !24
  %_40 = icmp ult ptr %_41, %_42, !dbg !2979
  br i1 %_40, label %bb22, label %bb23, !dbg !2979

bb20:                                             ; preds = %bb19
  %_39 = load i64, ptr %rem, align 8, !dbg !2981, !noundef !24
  store i64 %_39, ptr %block_r, align 8, !dbg !2982
  br label %bb26, !dbg !2983

bb26:                                             ; preds = %bb25, %bb22, %bb20
  br i1 true, label %bb27, label %bb32, !dbg !2984

bb23:                                             ; preds = %bb21
  %_44 = load i64, ptr %rem, align 8, !dbg !2985, !noundef !24
  %50 = udiv i64 %_44, 2, !dbg !2986
  store i64 %50, ptr %block_l, align 8, !dbg !2986
  %_46 = load i64, ptr %rem, align 8, !dbg !2987, !noundef !24
  %_47 = load i64, ptr %block_l, align 8, !dbg !2988, !noundef !24
  %_48.0 = sub i64 %_46, %_47, !dbg !2987
  %_48.1 = icmp ult i64 %_46, %_47, !dbg !2987
  %51 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false), !dbg !2987
  br i1 %51, label %panic6, label %bb25, !dbg !2987

bb22:                                             ; preds = %bb21
  %_43 = load i64, ptr %rem, align 8, !dbg !2989, !noundef !24
  store i64 %_43, ptr %block_l, align 8, !dbg !2990
  br label %bb26, !dbg !2991

bb25:                                             ; preds = %bb23
  store i64 %_48.0, ptr %block_r, align 8, !dbg !2992
  br label %bb26, !dbg !2991

panic6:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_7d4914bfaafcfa4692cc10dc5496d4e2) #11, !dbg !2987
  unreachable, !dbg !2987

bb32:                                             ; preds = %bb30, %bb26
  br i1 true, label %bb33, label %bb37, !dbg !2993

bb27:                                             ; preds = %bb26
  %_53 = load i64, ptr %block_l, align 8, !dbg !2994, !noundef !24
  %_52 = icmp ule i64 %_53, 128, !dbg !2994
  br i1 %_52, label %bb29, label %bb28, !dbg !2994

bb28:                                             ; preds = %bb27
  store i8 0, ptr %_51, align 1, !dbg !2994
  br label %bb30, !dbg !2994

bb29:                                             ; preds = %bb27
  %_55 = load i64, ptr %block_r, align 8, !dbg !2995, !noundef !24
  %_54 = icmp ule i64 %_55, 128, !dbg !2995
  %52 = zext i1 %_54 to i8, !dbg !2994
  store i8 %52, ptr %_51, align 1, !dbg !2994
  br label %bb30, !dbg !2994

bb30:                                             ; preds = %bb28, %bb29
  %53 = load i8, ptr %_51, align 1, !dbg !2984, !range !242, !noundef !24
  %54 = trunc i8 %53 to i1, !dbg !2984
  %_50 = xor i1 %54, true, !dbg !2984
  br i1 %_50, label %bb31, label %bb32, !dbg !2984

bb31:                                             ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_8221bdf38a3766feb9723f333c95dc9e, i64 54, ptr align 8 @alloc_d98b9ce84085f5d91faa526ef2b40520) #11, !dbg !2984
  unreachable, !dbg !2984

bb33:                                             ; preds = %bb32
  %_61 = load ptr, ptr %l, align 8, !dbg !2996, !noundef !24
  %_62 = load ptr, ptr %r, align 8, !dbg !2997, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_60 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE(ptr %_61, ptr %_62) #10, !dbg !2998
  %_64 = load i64, ptr %block_l, align 8, !dbg !2999, !noundef !24
  %_65 = load i64, ptr %block_r, align 8, !dbg !3000, !noundef !24
  %55 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_64, i64 %_65), !dbg !2999
  %_66.0 = extractvalue { i64, i1 } %55, 0, !dbg !2999
  %_66.1 = extractvalue { i64, i1 } %55, 1, !dbg !2999
  %56 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !2999
  br i1 %56, label %panic7, label %bb35, !dbg !2999

bb35:                                             ; preds = %bb33
  %_59 = icmp eq i64 %_60, %_66.0, !dbg !2998
  %_58 = xor i1 %_59, true, !dbg !2993
  br i1 %_58, label %bb36, label %bb37, !dbg !2993

panic7:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_5d32d2daaec9cf0d402f2dc37af0ea6f) #11, !dbg !2999
  unreachable, !dbg !2999

bb36:                                             ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_a3f9d5911d83d2dfd6ee66814bbe6049, i64 50, ptr align 8 @alloc_ea197cb372011b0fee90d7558b246bfb) #11, !dbg !2993
  unreachable, !dbg !2993

bb48:                                             ; preds = %bb41, %bb37
  %_94 = load ptr, ptr %start_r, align 8, !dbg !3001, !noundef !24
  %_95 = load ptr, ptr %end_r, align 8, !dbg !3002, !noundef !24
  %_93 = icmp eq ptr %_94, %_95, !dbg !3001
  br i1 %_93, label %bb49, label %bb58, !dbg !3001

bb38:                                             ; preds = %bb37
  store ptr %offsets_l, ptr %this.dbg.spill.i19, align 8
  %57 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i19, i32 0, i32 1
  store i64 128, ptr %57, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i19, metadata !3003, metadata !DIExpression()), !dbg !3013
  store ptr %offsets_l, ptr %self.dbg.spill.i185, align 8
  %58 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i185, i32 0, i32 1
  store i64 128, ptr %58, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i185, metadata !3015, metadata !DIExpression()), !dbg !3023
  store ptr %offsets_l, ptr %start_l, align 8, !dbg !3025
  %_74 = load ptr, ptr %start_l, align 8, !dbg !3026, !noundef !24
  store ptr %_74, ptr %end_l, align 8, !dbg !3027
  %59 = load ptr, ptr %l, align 8, !dbg !3028, !noundef !24
  store ptr %59, ptr %elem, align 8, !dbg !3028
  %_78 = load i64, ptr %block_l, align 8, !dbg !3029, !noundef !24
  store i64 0, ptr %_77, align 8, !dbg !3030
  %60 = getelementptr inbounds { i64, i64 }, ptr %_77, i32 0, i32 1, !dbg !3030
  store i64 %_78, ptr %60, align 8, !dbg !3030
  %61 = getelementptr inbounds { i64, i64 }, ptr %_77, i32 0, i32 0, !dbg !3030
  %62 = load i64, ptr %61, align 8, !dbg !3030, !noundef !24
  %63 = getelementptr inbounds { i64, i64 }, ptr %_77, i32 0, i32 1, !dbg !3030
  %64 = load i64, ptr %63, align 8, !dbg !3030, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %65 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1e3ba51008b82e5E"(i64 %62, i64 %64) #10, !dbg !3030
  %_76.0 = extractvalue { i64, i64 } %65, 0, !dbg !3030
  %_76.1 = extractvalue { i64, i64 } %65, 1, !dbg !3030
  %66 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3030
  store i64 %_76.0, ptr %66, align 8, !dbg !3030
  %67 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3030
  store i64 %_76.1, ptr %67, align 8, !dbg !3030
  br label %bb41, !dbg !3031

bb41:                                             ; preds = %bb43, %bb38
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %68 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h1df758b10b9b351bE"(ptr align 8 %iter) #10, !dbg !2902
  store { i64, i64 } %68, ptr %_80, align 8, !dbg !2902
  %_82 = load i64, ptr %_80, align 8, !dbg !2902, !range !1071, !noundef !24
  %69 = icmp eq i64 %_82, 0, !dbg !2902
  br i1 %69, label %bb48, label %bb43, !dbg !2902

bb43:                                             ; preds = %bb41
  %70 = getelementptr inbounds { i64, i64 }, ptr %_80, i32 0, i32 1, !dbg !3032
  %i = load i64, ptr %70, align 8, !dbg !3032, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3032
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2857, metadata !DIExpression()), !dbg !3033
  %71 = load ptr, ptr %end_l, align 8, !dbg !3034, !noundef !24
  %72 = trunc i64 %i to i8, !dbg !3034
  store i8 %72, ptr %71, align 1, !dbg !3034
  %_85 = load ptr, ptr %end_l, align 8, !dbg !3035, !noundef !24
  %_90 = load ptr, ptr %elem, align 8, !dbg !3036, !noundef !24
  store ptr %_90, ptr %_89, align 8, !dbg !3037
  %73 = getelementptr inbounds { ptr, ptr }, ptr %_89, i32 0, i32 1, !dbg !3037
  store ptr %pivot, ptr %73, align 8, !dbg !3037
  %74 = getelementptr inbounds { ptr, ptr }, ptr %_89, i32 0, i32 0, !dbg !3037
  %75 = load ptr, ptr %74, align 8, !dbg !3037, !nonnull !24, !align !510, !noundef !24
  %76 = getelementptr inbounds { ptr, ptr }, ptr %_89, i32 0, i32 1, !dbg !3037
  %77 = load ptr, ptr %76, align 8, !dbg !3037, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_88 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %75, ptr align 8 %77) #10, !dbg !3037
  %_87 = xor i1 %_88, true, !dbg !3038
  %_86 = zext i1 %_87 to i64, !dbg !3038
  store ptr %_85, ptr %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i30, metadata !3039, metadata !DIExpression()), !dbg !3045
  store i64 %_86, ptr %count.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i29, metadata !3044, metadata !DIExpression()), !dbg !3047
  store ptr %_85, ptr %self.dbg.spill.i107, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i107, metadata !3048, metadata !DIExpression()), !dbg !3054
  store i64 %_86, ptr %count.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i106, metadata !3053, metadata !DIExpression()), !dbg !3056
  %78 = getelementptr inbounds i8, ptr %_85, i64 %_86, !dbg !3057
  store ptr %78, ptr %23, align 8, !dbg !3057
  %_3.i108 = load ptr, ptr %23, align 8, !dbg !3057, !noundef !24
  store ptr %_3.i108, ptr %end_l, align 8, !dbg !3058
  %_92 = load ptr, ptr %elem, align 8, !dbg !3059, !noundef !24
  store ptr %_92, ptr %self.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i46, metadata !276, metadata !DIExpression()), !dbg !3060
  store i64 1, ptr %count.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i45, metadata !282, metadata !DIExpression()), !dbg !3062
  store ptr %_92, ptr %self.dbg.spill.i155, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i155, metadata !286, metadata !DIExpression()), !dbg !3063
  store i64 1, ptr %count.dbg.spill.i154, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i154, metadata !291, metadata !DIExpression()), !dbg !3065
  %79 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_92, i64 1, !dbg !3066
  store ptr %79, ptr %7, align 8, !dbg !3066
  %_3.i156 = load ptr, ptr %7, align 8, !dbg !3066, !noundef !24
  store ptr %_3.i156, ptr %elem, align 8, !dbg !3067
  br label %bb41, !dbg !3031

bb58:                                             ; preds = %bb52, %bb48
  %_119 = load ptr, ptr %start_l, align 8, !dbg !3068, !noundef !24
  %_120 = load ptr, ptr %end_l, align 8, !dbg !3069, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_118 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h3cd960ddfd95367cE(ptr %_119, ptr %_120) #10, !dbg !3070
  %_122 = load ptr, ptr %start_r, align 8, !dbg !3071, !noundef !24
  %_123 = load ptr, ptr %end_r, align 8, !dbg !3072, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %_121 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h3cd960ddfd95367cE(ptr %_122, ptr %_123) #10, !dbg !3073
; call core::cmp::min
  %count = call i64 @_ZN4core3cmp3min17hf3463562417c7eceE(i64 %_118, i64 %_121) #10, !dbg !3074
  store i64 %count, ptr %count.dbg.spill, align 8, !dbg !3074
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !2865, metadata !DIExpression()), !dbg !3075
  %_124 = icmp ugt i64 %count, 0, !dbg !3076
  br i1 %_124, label %bb62, label %bb97, !dbg !3076

bb49:                                             ; preds = %bb48
  store ptr %offsets_r, ptr %this.dbg.spill.i, align 8
  %80 = getelementptr inbounds { ptr, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 128, ptr %80, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !3003, metadata !DIExpression()), !dbg !3077
  store ptr %offsets_r, ptr %self.dbg.spill.i186, align 8
  %81 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i186, i32 0, i32 1
  store i64 128, ptr %81, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i186, metadata !3015, metadata !DIExpression()), !dbg !3079
  store ptr %offsets_r, ptr %start_r, align 8, !dbg !3081
  %_99 = load ptr, ptr %start_r, align 8, !dbg !3082, !noundef !24
  store ptr %_99, ptr %end_r, align 8, !dbg !3083
  %82 = load ptr, ptr %r, align 8, !dbg !3084, !noundef !24
  store ptr %82, ptr %elem1, align 8, !dbg !3084
  %_103 = load i64, ptr %block_r, align 8, !dbg !3085, !noundef !24
  store i64 0, ptr %_102, align 8, !dbg !3086
  %83 = getelementptr inbounds { i64, i64 }, ptr %_102, i32 0, i32 1, !dbg !3086
  store i64 %_103, ptr %83, align 8, !dbg !3086
  %84 = getelementptr inbounds { i64, i64 }, ptr %_102, i32 0, i32 0, !dbg !3086
  %85 = load i64, ptr %84, align 8, !dbg !3086, !noundef !24
  %86 = getelementptr inbounds { i64, i64 }, ptr %_102, i32 0, i32 1, !dbg !3086
  %87 = load i64, ptr %86, align 8, !dbg !3086, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %88 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1e3ba51008b82e5E"(i64 %85, i64 %87) #10, !dbg !3086
  %_101.0 = extractvalue { i64, i64 } %88, 0, !dbg !3086
  %_101.1 = extractvalue { i64, i64 } %88, 1, !dbg !3086
  %89 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 0, !dbg !3086
  store i64 %_101.0, ptr %89, align 8, !dbg !3086
  %90 = getelementptr inbounds { i64, i64 }, ptr %iter2, i32 0, i32 1, !dbg !3086
  store i64 %_101.1, ptr %90, align 8, !dbg !3086
  br label %bb52, !dbg !3087

bb52:                                             ; preds = %bb54, %bb49
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %91 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h1df758b10b9b351bE"(ptr align 8 %iter2) #10, !dbg !2904
  store { i64, i64 } %91, ptr %_105, align 8, !dbg !2904
  %_107 = load i64, ptr %_105, align 8, !dbg !2904, !range !1071, !noundef !24
  %92 = icmp eq i64 %_107, 0, !dbg !2904
  br i1 %92, label %bb58, label %bb54, !dbg !2904

bb54:                                             ; preds = %bb52
  %93 = getelementptr inbounds { i64, i64 }, ptr %_105, i32 0, i32 1, !dbg !3088
  %i8 = load i64, ptr %93, align 8, !dbg !3088, !noundef !24
  store i64 %i8, ptr %i.dbg.spill9, align 8, !dbg !3088
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill9, metadata !2863, metadata !DIExpression()), !dbg !3089
  %_110 = load ptr, ptr %elem1, align 8, !dbg !3090, !noundef !24
  store ptr %_110, ptr %self.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i100, metadata !2113, metadata !DIExpression()), !dbg !3091
  store i64 1, ptr %count.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i99, metadata !2116, metadata !DIExpression()), !dbg !3093
  store i64 1, ptr %self.dbg.spill.i.i98, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i98, metadata !2120, metadata !DIExpression()), !dbg !3094
  store i64 0, ptr %self.dbg.spill.i1.i97, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i97, metadata !2129, metadata !DIExpression()), !dbg !3096
  store i64 1, ptr %rhs.dbg.spill.i.i96, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i96, metadata !2134, metadata !DIExpression()), !dbg !3098
  store ptr %_110, ptr %self.dbg.spill.i125, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i125, metadata !286, metadata !DIExpression()), !dbg !3099
  store i64 -1, ptr %count.dbg.spill.i124, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i124, metadata !291, metadata !DIExpression()), !dbg !3101
  %94 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_110, i64 -1, !dbg !3102
  store ptr %94, ptr %17, align 8, !dbg !3102
  %_3.i126 = load ptr, ptr %17, align 8, !dbg !3102, !noundef !24
  store ptr %_3.i126, ptr %elem1, align 8, !dbg !3103
  %95 = load ptr, ptr %end_r, align 8, !dbg !3104, !noundef !24
  %96 = trunc i64 %i8 to i8, !dbg !3104
  store i8 %96, ptr %95, align 1, !dbg !3104
  %_112 = load ptr, ptr %end_r, align 8, !dbg !3105, !noundef !24
  %_116 = load ptr, ptr %elem1, align 8, !dbg !3106, !noundef !24
  store ptr %_116, ptr %_115, align 8, !dbg !3107
  %97 = getelementptr inbounds { ptr, ptr }, ptr %_115, i32 0, i32 1, !dbg !3107
  store ptr %pivot, ptr %97, align 8, !dbg !3107
  %98 = getelementptr inbounds { ptr, ptr }, ptr %_115, i32 0, i32 0, !dbg !3107
  %99 = load ptr, ptr %98, align 8, !dbg !3107, !nonnull !24, !align !510, !noundef !24
  %100 = getelementptr inbounds { ptr, ptr }, ptr %_115, i32 0, i32 1, !dbg !3107
  %101 = load ptr, ptr %100, align 8, !dbg !3107, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_114 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %99, ptr align 8 %101) #10, !dbg !3107
  %_113 = zext i1 %_114 to i64, !dbg !3107
  store ptr %_112, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !3039, metadata !DIExpression()), !dbg !3108
  store i64 %_113, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !3044, metadata !DIExpression()), !dbg !3110
  store ptr %_112, ptr %self.dbg.spill.i110, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i110, metadata !3048, metadata !DIExpression()), !dbg !3111
  store i64 %_113, ptr %count.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i109, metadata !3053, metadata !DIExpression()), !dbg !3113
  %102 = getelementptr inbounds i8, ptr %_112, i64 %_113, !dbg !3114
  store ptr %102, ptr %22, align 8, !dbg !3114
  %_3.i111 = load ptr, ptr %22, align 8, !dbg !3114, !noundef !24
  store ptr %_3.i111, ptr %end_r, align 8, !dbg !3115
  br label %bb52, !dbg !3087

bb97:                                             ; preds = %bb91, %bb58
  %_195 = load ptr, ptr %start_l, align 8, !dbg !3116, !noundef !24
  %_196 = load ptr, ptr %end_l, align 8, !dbg !3117, !noundef !24
  %_194 = icmp eq ptr %_195, %_196, !dbg !3116
  br i1 %_194, label %bb98, label %bb100, !dbg !3116

bb62:                                             ; preds = %bb58
  %_129 = load ptr, ptr %l, align 8, !dbg !3118, !noundef !24
  %103 = load ptr, ptr %start_l, align 8, !dbg !3118, !noundef !24
  %_131 = load i8, ptr %103, align 1, !dbg !3118, !noundef !24
  store i8 %_131, ptr %small.dbg.spill.i195, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i195, metadata !3119, metadata !DIExpression()), !dbg !3128
  %104 = zext i8 %_131 to i64, !dbg !3130
  store ptr %_129, ptr %self.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i44, metadata !276, metadata !DIExpression()), !dbg !3131
  store i64 %104, ptr %count.dbg.spill.i43, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i43, metadata !282, metadata !DIExpression()), !dbg !3133
  store ptr %_129, ptr %self.dbg.spill.i158, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i158, metadata !286, metadata !DIExpression()), !dbg !3134
  store i64 %104, ptr %count.dbg.spill.i157, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i157, metadata !291, metadata !DIExpression()), !dbg !3136
  %105 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_129, i64 %104, !dbg !3137
  store ptr %105, ptr %6, align 8, !dbg !3137
  %_3.i159 = load ptr, ptr %6, align 8, !dbg !3137, !noundef !24
; call core::ptr::read
  call void @_ZN4core3ptr4read17h9bbf8b811484d8b8E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %tmp, ptr %_3.i159) #10, !dbg !3138
  %_135 = load ptr, ptr %r, align 8, !dbg !3139, !noundef !24
  %106 = load ptr, ptr %start_r, align 8, !dbg !3139, !noundef !24
  %_138 = load i8, ptr %106, align 1, !dbg !3139, !noundef !24
  store i8 %_138, ptr %small.dbg.spill.i194, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i194, metadata !3119, metadata !DIExpression()), !dbg !3140
  %107 = zext i8 %_138 to i64, !dbg !3142
  %108 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %107, i64 1), !dbg !3139
  %_139.0 = extractvalue { i64, i1 } %108, 0, !dbg !3139
  %_139.1 = extractvalue { i64, i1 } %108, 1, !dbg !3139
  %109 = call i1 @llvm.expect.i1(i1 %_139.1, i1 false), !dbg !3139
  br i1 %109, label %panic10, label %bb67, !dbg !3139

bb67:                                             ; preds = %bb62
  store ptr %_135, ptr %self.dbg.spill.i95, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i95, metadata !2113, metadata !DIExpression()), !dbg !3143
  store i64 %_139.0, ptr %count.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i94, metadata !2116, metadata !DIExpression()), !dbg !3145
  store i64 %_139.0, ptr %self.dbg.spill.i.i93, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i93, metadata !2120, metadata !DIExpression()), !dbg !3146
  store i64 0, ptr %self.dbg.spill.i1.i92, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i92, metadata !2129, metadata !DIExpression()), !dbg !3148
  store i64 %_139.0, ptr %rhs.dbg.spill.i.i91, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i91, metadata !2134, metadata !DIExpression()), !dbg !3150
  %110 = sub i64 0, %_139.0, !dbg !3151
  store ptr %_135, ptr %self.dbg.spill.i128, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i128, metadata !286, metadata !DIExpression()), !dbg !3152
  store i64 %110, ptr %count.dbg.spill.i127, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i127, metadata !291, metadata !DIExpression()), !dbg !3154
  %111 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_135, i64 %110, !dbg !3155
  store ptr %111, ptr %16, align 8, !dbg !3155
  %_3.i129 = load ptr, ptr %16, align 8, !dbg !3155, !noundef !24
  %_141 = load ptr, ptr %l, align 8, !dbg !3156, !noundef !24
  %112 = load ptr, ptr %start_l, align 8, !dbg !3156, !noundef !24
  %_143 = load i8, ptr %112, align 1, !dbg !3156, !noundef !24
  store i8 %_143, ptr %small.dbg.spill.i193, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i193, metadata !3119, metadata !DIExpression()), !dbg !3157
  %113 = zext i8 %_143 to i64, !dbg !3159
  store ptr %_141, ptr %self.dbg.spill.i42, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i42, metadata !276, metadata !DIExpression()), !dbg !3160
  store i64 %113, ptr %count.dbg.spill.i41, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i41, metadata !282, metadata !DIExpression()), !dbg !3162
  store ptr %_141, ptr %self.dbg.spill.i161, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i161, metadata !286, metadata !DIExpression()), !dbg !3163
  store i64 %113, ptr %count.dbg.spill.i160, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i160, metadata !291, metadata !DIExpression()), !dbg !3165
  %114 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_141, i64 %113, !dbg !3166
  store ptr %114, ptr %5, align 8, !dbg !3166
  %_3.i162 = load ptr, ptr %5, align 8, !dbg !3166, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %_3.i129, ptr %_3.i162, i64 1) #10, !dbg !3167
  store i64 1, ptr %_145, align 8, !dbg !3168
  %115 = getelementptr inbounds { i64, i64 }, ptr %_145, i32 0, i32 1, !dbg !3168
  store i64 %count, ptr %115, align 8, !dbg !3168
  %116 = getelementptr inbounds { i64, i64 }, ptr %_145, i32 0, i32 0, !dbg !3168
  %117 = load i64, ptr %116, align 8, !dbg !3168, !noundef !24
  %118 = getelementptr inbounds { i64, i64 }, ptr %_145, i32 0, i32 1, !dbg !3168
  %119 = load i64, ptr %118, align 8, !dbg !3168, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %120 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1e3ba51008b82e5E"(i64 %117, i64 %119) #10, !dbg !3168
  %_144.0 = extractvalue { i64, i64 } %120, 0, !dbg !3168
  %_144.1 = extractvalue { i64, i64 } %120, 1, !dbg !3168
  %121 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 0, !dbg !3168
  store i64 %_144.0, ptr %121, align 8, !dbg !3168
  %122 = getelementptr inbounds { i64, i64 }, ptr %iter3, i32 0, i32 1, !dbg !3168
  store i64 %_144.1, ptr %122, align 8, !dbg !3168
  br label %bb73, !dbg !3169

panic10:                                          ; preds = %bb62
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0a48b3a7e93a3fb66a7841c604466c03) #11, !dbg !3139
  unreachable, !dbg !3139

bb73:                                             ; preds = %bb86, %bb67
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %123 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h1df758b10b9b351bE"(ptr align 8 %iter3) #10, !dbg !2906
  store { i64, i64 } %123, ptr %_148, align 8, !dbg !2906
  %_150 = load i64, ptr %_148, align 8, !dbg !2906, !range !1071, !noundef !24
  %124 = icmp eq i64 %_150, 0, !dbg !2906
  br i1 %124, label %bb76, label %bb75, !dbg !2906

bb76:                                             ; preds = %bb73
  %_183 = load ptr, ptr %r, align 8, !dbg !3170, !noundef !24
  %125 = load ptr, ptr %start_r, align 8, !dbg !3170, !noundef !24
  %_186 = load i8, ptr %125, align 1, !dbg !3170, !noundef !24
  store i8 %_186, ptr %small.dbg.spill.i188, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i188, metadata !3119, metadata !DIExpression()), !dbg !3171
  %126 = zext i8 %_186 to i64, !dbg !3173
  %127 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %126, i64 1), !dbg !3170
  %_187.0 = extractvalue { i64, i1 } %127, 0, !dbg !3170
  %_187.1 = extractvalue { i64, i1 } %127, 1, !dbg !3170
  %128 = call i1 @llvm.expect.i1(i1 %_187.1, i1 false), !dbg !3170
  br i1 %128, label %panic13, label %bb91, !dbg !3170

bb75:                                             ; preds = %bb73
  %_152 = load ptr, ptr %start_l, align 8, !dbg !3174, !noundef !24
  store ptr %_152, ptr %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i26, metadata !3039, metadata !DIExpression()), !dbg !3175
  store i64 1, ptr %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i25, metadata !3044, metadata !DIExpression()), !dbg !3177
  store ptr %_152, ptr %self.dbg.spill.i113, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i113, metadata !3048, metadata !DIExpression()), !dbg !3178
  store i64 1, ptr %count.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i112, metadata !3053, metadata !DIExpression()), !dbg !3180
  %129 = getelementptr inbounds i8, ptr %_152, i64 1, !dbg !3181
  store ptr %129, ptr %21, align 8, !dbg !3181
  %_3.i114 = load ptr, ptr %21, align 8, !dbg !3181, !noundef !24
  store ptr %_3.i114, ptr %start_l, align 8, !dbg !3182
  %_156 = load ptr, ptr %l, align 8, !dbg !3183, !noundef !24
  %130 = load ptr, ptr %start_l, align 8, !dbg !3183, !noundef !24
  %_158 = load i8, ptr %130, align 1, !dbg !3183, !noundef !24
  store i8 %_158, ptr %small.dbg.spill.i192, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i192, metadata !3119, metadata !DIExpression()), !dbg !3184
  %131 = zext i8 %_158 to i64, !dbg !3186
  store ptr %_156, ptr %self.dbg.spill.i40, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i40, metadata !276, metadata !DIExpression()), !dbg !3187
  store i64 %131, ptr %count.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i39, metadata !282, metadata !DIExpression()), !dbg !3189
  store ptr %_156, ptr %self.dbg.spill.i164, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i164, metadata !286, metadata !DIExpression()), !dbg !3190
  store i64 %131, ptr %count.dbg.spill.i163, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i163, metadata !291, metadata !DIExpression()), !dbg !3192
  %132 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_156, i64 %131, !dbg !3193
  store ptr %132, ptr %4, align 8, !dbg !3193
  %_3.i165 = load ptr, ptr %4, align 8, !dbg !3193, !noundef !24
  %_160 = load ptr, ptr %r, align 8, !dbg !3194, !noundef !24
  %133 = load ptr, ptr %start_r, align 8, !dbg !3194, !noundef !24
  %_163 = load i8, ptr %133, align 1, !dbg !3194, !noundef !24
  store i8 %_163, ptr %small.dbg.spill.i191, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i191, metadata !3119, metadata !DIExpression()), !dbg !3195
  %134 = zext i8 %_163 to i64, !dbg !3197
  %135 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %134, i64 1), !dbg !3194
  %_164.0 = extractvalue { i64, i1 } %135, 0, !dbg !3194
  %_164.1 = extractvalue { i64, i1 } %135, 1, !dbg !3194
  %136 = call i1 @llvm.expect.i1(i1 %_164.1, i1 false), !dbg !3194
  br i1 %136, label %panic11, label %bb81, !dbg !3194

bb44:                                             ; No predecessors!
  unreachable, !dbg !2902

bb81:                                             ; preds = %bb75
  store ptr %_160, ptr %self.dbg.spill.i90, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i90, metadata !2113, metadata !DIExpression()), !dbg !3198
  store i64 %_164.0, ptr %count.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i89, metadata !2116, metadata !DIExpression()), !dbg !3200
  store i64 %_164.0, ptr %self.dbg.spill.i.i88, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i88, metadata !2120, metadata !DIExpression()), !dbg !3201
  store i64 0, ptr %self.dbg.spill.i1.i87, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i87, metadata !2129, metadata !DIExpression()), !dbg !3203
  store i64 %_164.0, ptr %rhs.dbg.spill.i.i86, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i86, metadata !2134, metadata !DIExpression()), !dbg !3205
  %137 = sub i64 0, %_164.0, !dbg !3206
  store ptr %_160, ptr %self.dbg.spill.i131, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i131, metadata !286, metadata !DIExpression()), !dbg !3207
  store i64 %137, ptr %count.dbg.spill.i130, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i130, metadata !291, metadata !DIExpression()), !dbg !3209
  %138 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_160, i64 %137, !dbg !3210
  store ptr %138, ptr %15, align 8, !dbg !3210
  %_3.i132 = load ptr, ptr %15, align 8, !dbg !3210, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %_3.i165, ptr %_3.i132, i64 1) #10, !dbg !3211
  %_166 = load ptr, ptr %start_r, align 8, !dbg !3212, !noundef !24
  store ptr %_166, ptr %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i24, metadata !3039, metadata !DIExpression()), !dbg !3213
  store i64 1, ptr %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i23, metadata !3044, metadata !DIExpression()), !dbg !3215
  store ptr %_166, ptr %self.dbg.spill.i116, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i116, metadata !3048, metadata !DIExpression()), !dbg !3216
  store i64 1, ptr %count.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i115, metadata !3053, metadata !DIExpression()), !dbg !3218
  %139 = getelementptr inbounds i8, ptr %_166, i64 1, !dbg !3219
  store ptr %139, ptr %20, align 8, !dbg !3219
  %_3.i117 = load ptr, ptr %20, align 8, !dbg !3219, !noundef !24
  store ptr %_3.i117, ptr %start_r, align 8, !dbg !3220
  %_170 = load ptr, ptr %r, align 8, !dbg !3221, !noundef !24
  %140 = load ptr, ptr %start_r, align 8, !dbg !3221, !noundef !24
  %_173 = load i8, ptr %140, align 1, !dbg !3221, !noundef !24
  store i8 %_173, ptr %small.dbg.spill.i190, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i190, metadata !3119, metadata !DIExpression()), !dbg !3222
  %141 = zext i8 %_173 to i64, !dbg !3224
  %142 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %141, i64 1), !dbg !3221
  %_174.0 = extractvalue { i64, i1 } %142, 0, !dbg !3221
  %_174.1 = extractvalue { i64, i1 } %142, 1, !dbg !3221
  %143 = call i1 @llvm.expect.i1(i1 %_174.1, i1 false), !dbg !3221
  br i1 %143, label %panic12, label %bb86, !dbg !3221

panic11:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_255f6db4d0c02746fb4a9b785ea6e516) #11, !dbg !3194
  unreachable, !dbg !3194

bb86:                                             ; preds = %bb81
  store ptr %_170, ptr %self.dbg.spill.i85, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i85, metadata !2113, metadata !DIExpression()), !dbg !3225
  store i64 %_174.0, ptr %count.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i84, metadata !2116, metadata !DIExpression()), !dbg !3227
  store i64 %_174.0, ptr %self.dbg.spill.i.i83, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i83, metadata !2120, metadata !DIExpression()), !dbg !3228
  store i64 0, ptr %self.dbg.spill.i1.i82, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i82, metadata !2129, metadata !DIExpression()), !dbg !3230
  store i64 %_174.0, ptr %rhs.dbg.spill.i.i81, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i81, metadata !2134, metadata !DIExpression()), !dbg !3232
  %144 = sub i64 0, %_174.0, !dbg !3233
  store ptr %_170, ptr %self.dbg.spill.i134, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i134, metadata !286, metadata !DIExpression()), !dbg !3234
  store i64 %144, ptr %count.dbg.spill.i133, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i133, metadata !291, metadata !DIExpression()), !dbg !3236
  %145 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_170, i64 %144, !dbg !3237
  store ptr %145, ptr %14, align 8, !dbg !3237
  %_3.i135 = load ptr, ptr %14, align 8, !dbg !3237, !noundef !24
  %_176 = load ptr, ptr %l, align 8, !dbg !3238, !noundef !24
  %146 = load ptr, ptr %start_l, align 8, !dbg !3238, !noundef !24
  %_178 = load i8, ptr %146, align 1, !dbg !3238, !noundef !24
  store i8 %_178, ptr %small.dbg.spill.i189, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i189, metadata !3119, metadata !DIExpression()), !dbg !3239
  %147 = zext i8 %_178 to i64, !dbg !3241
  store ptr %_176, ptr %self.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i38, metadata !276, metadata !DIExpression()), !dbg !3242
  store i64 %147, ptr %count.dbg.spill.i37, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i37, metadata !282, metadata !DIExpression()), !dbg !3244
  store ptr %_176, ptr %self.dbg.spill.i167, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i167, metadata !286, metadata !DIExpression()), !dbg !3245
  store i64 %147, ptr %count.dbg.spill.i166, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i166, metadata !291, metadata !DIExpression()), !dbg !3247
  %148 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_176, i64 %147, !dbg !3248
  store ptr %148, ptr %3, align 8, !dbg !3248
  %_3.i168 = load ptr, ptr %3, align 8, !dbg !3248, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %_3.i135, ptr %_3.i168, i64 1) #10, !dbg !3249
  br label %bb73, !dbg !3249

panic12:                                          ; preds = %bb81
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_3fa281490ed5627b0d5acda868d81af0) #11, !dbg !3221
  unreachable, !dbg !3221

bb91:                                             ; preds = %bb76
  store ptr %_183, ptr %self.dbg.spill.i80, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i80, metadata !2113, metadata !DIExpression()), !dbg !3250
  store i64 %_187.0, ptr %count.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i79, metadata !2116, metadata !DIExpression()), !dbg !3252
  store i64 %_187.0, ptr %self.dbg.spill.i.i78, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i78, metadata !2120, metadata !DIExpression()), !dbg !3253
  store i64 0, ptr %self.dbg.spill.i1.i77, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i77, metadata !2129, metadata !DIExpression()), !dbg !3255
  store i64 %_187.0, ptr %rhs.dbg.spill.i.i76, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i76, metadata !2134, metadata !DIExpression()), !dbg !3257
  %149 = sub i64 0, %_187.0, !dbg !3258
  store ptr %_183, ptr %self.dbg.spill.i137, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i137, metadata !286, metadata !DIExpression()), !dbg !3259
  store i64 %149, ptr %count.dbg.spill.i136, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i136, metadata !291, metadata !DIExpression()), !dbg !3261
  %150 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_183, i64 %149, !dbg !3262
  store ptr %150, ptr %13, align 8, !dbg !3262
  %_3.i138 = load ptr, ptr %13, align 8, !dbg !3262, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %tmp, ptr %_3.i138, i64 1) #10, !dbg !3263
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_189, ptr align 8 %tmp, i64 24, i1 false), !dbg !3264
; call core::mem::forget
  call void @_ZN4core3mem6forget17hf1997bd7a4ba0664E(ptr %_189) #10, !dbg !3265
  %_191 = load ptr, ptr %start_l, align 8, !dbg !3266, !noundef !24
  store ptr %_191, ptr %self.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !3039, metadata !DIExpression()), !dbg !3267
  store i64 1, ptr %count.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i21, metadata !3044, metadata !DIExpression()), !dbg !3269
  store ptr %_191, ptr %self.dbg.spill.i119, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i119, metadata !3048, metadata !DIExpression()), !dbg !3270
  store i64 1, ptr %count.dbg.spill.i118, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i118, metadata !3053, metadata !DIExpression()), !dbg !3272
  %151 = getelementptr inbounds i8, ptr %_191, i64 1, !dbg !3273
  store ptr %151, ptr %19, align 8, !dbg !3273
  %_3.i120 = load ptr, ptr %19, align 8, !dbg !3273, !noundef !24
  store ptr %_3.i120, ptr %start_l, align 8, !dbg !3274
  %_193 = load ptr, ptr %start_r, align 8, !dbg !3275, !noundef !24
  store ptr %_193, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3039, metadata !DIExpression()), !dbg !3276
  store i64 1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !3044, metadata !DIExpression()), !dbg !3278
  store ptr %_193, ptr %self.dbg.spill.i122, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i122, metadata !3048, metadata !DIExpression()), !dbg !3279
  store i64 1, ptr %count.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i121, metadata !3053, metadata !DIExpression()), !dbg !3281
  %152 = getelementptr inbounds i8, ptr %_193, i64 1, !dbg !3282
  store ptr %152, ptr %18, align 8, !dbg !3282
  %_3.i123 = load ptr, ptr %18, align 8, !dbg !3282, !noundef !24
  store ptr %_3.i123, ptr %start_r, align 8, !dbg !3283
  br label %bb97, !dbg !3284

panic13:                                          ; preds = %bb76
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_2107e90e8c7dda0adfd21e59e3b7e9ee) #11, !dbg !3170
  unreachable, !dbg !3170

bb100:                                            ; preds = %bb98, %bb97
  %_201 = load ptr, ptr %start_r, align 8, !dbg !3285, !noundef !24
  %_202 = load ptr, ptr %end_r, align 8, !dbg !3286, !noundef !24
  %_200 = icmp eq ptr %_201, %_202, !dbg !3285
  br i1 %_200, label %bb101, label %bb103, !dbg !3285

bb98:                                             ; preds = %bb97
  %_198 = load ptr, ptr %l, align 8, !dbg !3287, !noundef !24
  %_199 = load i64, ptr %block_l, align 8, !dbg !3288, !noundef !24
  store ptr %_198, ptr %self.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i36, metadata !276, metadata !DIExpression()), !dbg !3289
  store i64 %_199, ptr %count.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i35, metadata !282, metadata !DIExpression()), !dbg !3291
  store ptr %_198, ptr %self.dbg.spill.i170, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i170, metadata !286, metadata !DIExpression()), !dbg !3292
  store i64 %_199, ptr %count.dbg.spill.i169, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i169, metadata !291, metadata !DIExpression()), !dbg !3294
  %153 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_198, i64 %_199, !dbg !3295
  store ptr %153, ptr %2, align 8, !dbg !3295
  %_3.i171 = load ptr, ptr %2, align 8, !dbg !3295, !noundef !24
  store ptr %_3.i171, ptr %l, align 8, !dbg !3296
  br label %bb100, !dbg !3297

bb103:                                            ; preds = %bb101, %bb100
  br i1 %is_done, label %bb104, label %bb9, !dbg !3298

bb101:                                            ; preds = %bb100
  %_204 = load ptr, ptr %r, align 8, !dbg !3299, !noundef !24
  %_205 = load i64, ptr %block_r, align 8, !dbg !3300, !noundef !24
  store ptr %_204, ptr %self.dbg.spill.i75, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i75, metadata !2113, metadata !DIExpression()), !dbg !3301
  store i64 %_205, ptr %count.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i74, metadata !2116, metadata !DIExpression()), !dbg !3303
  store i64 %_205, ptr %self.dbg.spill.i.i73, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i73, metadata !2120, metadata !DIExpression()), !dbg !3304
  store i64 0, ptr %self.dbg.spill.i1.i72, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i72, metadata !2129, metadata !DIExpression()), !dbg !3306
  store i64 %_205, ptr %rhs.dbg.spill.i.i71, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i71, metadata !2134, metadata !DIExpression()), !dbg !3308
  %154 = sub i64 0, %_205, !dbg !3309
  store ptr %_204, ptr %self.dbg.spill.i140, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i140, metadata !286, metadata !DIExpression()), !dbg !3310
  store i64 %154, ptr %count.dbg.spill.i139, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i139, metadata !291, metadata !DIExpression()), !dbg !3312
  %155 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_204, i64 %154, !dbg !3313
  store ptr %155, ptr %12, align 8, !dbg !3313
  %_3.i141 = load ptr, ptr %12, align 8, !dbg !3313, !noundef !24
  store ptr %_3.i141, ptr %r, align 8, !dbg !3314
  br label %bb103, !dbg !3315

bb104:                                            ; preds = %bb103
  %_207 = load ptr, ptr %start_l, align 8, !dbg !3316, !noundef !24
  %_208 = load ptr, ptr %end_l, align 8, !dbg !3317, !noundef !24
  %_206 = icmp ult ptr %_207, %_208, !dbg !3316
  br i1 %_206, label %bb105, label %bb106, !dbg !3316

bb106:                                            ; preds = %bb104
  %_242 = load ptr, ptr %start_r, align 8, !dbg !3318, !noundef !24
  %_243 = load ptr, ptr %end_r, align 8, !dbg !3319, !noundef !24
  %_241 = icmp ult ptr %_242, %_243, !dbg !3318
  br i1 %_241, label %bb120, label %bb121, !dbg !3318

bb105:                                            ; preds = %bb104
  br i1 true, label %bb107, label %bb110, !dbg !3320

bb110:                                            ; preds = %bb111, %bb107, %bb105
  %_226 = load ptr, ptr %start_l, align 8, !dbg !3321, !noundef !24
  %_227 = load ptr, ptr %end_l, align 8, !dbg !3322, !noundef !24
  %_225 = icmp ult ptr %_226, %_227, !dbg !3321
  br i1 %_225, label %bb111, label %bb118, !dbg !3321

bb107:                                            ; preds = %bb105
  %_213 = load ptr, ptr %l, align 8, !dbg !3323, !noundef !24
  %_214 = load ptr, ptr %r, align 8, !dbg !3324, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %156 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE(ptr %_213, ptr %_214) #10, !dbg !3325
  store i64 %156, ptr %_212, align 8, !dbg !3325
  store ptr %_212, ptr %_210, align 8, !dbg !3320
  %157 = getelementptr inbounds { ptr, ptr }, ptr %_210, i32 0, i32 1, !dbg !3320
  store ptr %block_l, ptr %157, align 8, !dbg !3320
  %left_val = load ptr, ptr %_210, align 8, !dbg !3320, !nonnull !24, !align !510, !noundef !24
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !3320
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !2871, metadata !DIExpression()), !dbg !3326
  %158 = getelementptr inbounds { ptr, ptr }, ptr %_210, i32 0, i32 1, !dbg !3320
  %right_val = load ptr, ptr %158, align 8, !dbg !3320, !nonnull !24, !align !510, !noundef !24
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !3320
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !2876, metadata !DIExpression()), !dbg !3326
  %_220 = load i64, ptr %left_val, align 8, !dbg !3326, !noundef !24
  %_221 = load i64, ptr %right_val, align 8, !dbg !3326, !noundef !24
  %_219 = icmp eq i64 %_220, %_221, !dbg !3326
  %_218 = xor i1 %_219, true, !dbg !3326
  br i1 %_218, label %bb109, label %bb110, !dbg !3326

bb109:                                            ; preds = %bb107
  store i8 0, ptr %kind, align 1, !dbg !3326
  %159 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_224, i32 0, i32 1, !dbg !2907
  store ptr null, ptr %159, align 8, !dbg !2907
  %160 = load i8, ptr %kind, align 1, !dbg !2907, !range !3327, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h383a6105ab32c166E(i8 %160, ptr align 8 %left_val, ptr align 8 %right_val, ptr %_224, ptr align 8 @alloc_23d83fb97dc5ddd699c8f80f695d1b3b) #11, !dbg !2907
  unreachable, !dbg !2907

bb118:                                            ; preds = %bb110
  store ptr %v.0, ptr %self.dbg.spill.i183, align 8
  %161 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i183, i32 0, i32 1
  store i64 %v.1, ptr %161, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i183, metadata !1971, metadata !DIExpression()), !dbg !3328
  %_240 = load ptr, ptr %r, align 8, !dbg !3330, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %162 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE(ptr %v.0, ptr %_240) #10, !dbg !3331
  store i64 %162, ptr %28, align 8, !dbg !3331
  br label %bb136, !dbg !3331

bb111:                                            ; preds = %bb110
  %_229 = load ptr, ptr %end_l, align 8, !dbg !3332, !noundef !24
  store ptr %_229, ptr %self.dbg.spill.i55, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i55, metadata !3333, metadata !DIExpression()), !dbg !3337
  store i64 1, ptr %count.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i54, metadata !3336, metadata !DIExpression()), !dbg !3339
  store i64 1, ptr %self.dbg.spill.i.i53, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i53, metadata !2120, metadata !DIExpression()), !dbg !3340
  store i64 0, ptr %self.dbg.spill.i1.i52, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i52, metadata !2129, metadata !DIExpression()), !dbg !3342
  store i64 1, ptr %rhs.dbg.spill.i.i51, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i51, metadata !2134, metadata !DIExpression()), !dbg !3344
  store ptr %_229, ptr %self.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i102, metadata !3048, metadata !DIExpression()), !dbg !3345
  store i64 -1, ptr %count.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i101, metadata !3053, metadata !DIExpression()), !dbg !3347
  %163 = getelementptr inbounds i8, ptr %_229, i64 -1, !dbg !3348
  store ptr %163, ptr %25, align 8, !dbg !3348
  %_3.i = load ptr, ptr %25, align 8, !dbg !3348, !noundef !24
  store ptr %_3.i, ptr %end_l, align 8, !dbg !3349
  %_232 = load ptr, ptr %l, align 8, !dbg !3350, !noundef !24
  %164 = load ptr, ptr %end_l, align 8, !dbg !3351, !noundef !24
  %_234 = load i8, ptr %164, align 1, !dbg !3351, !noundef !24
  store i8 %_234, ptr %small.dbg.spill.i187, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i187, metadata !3119, metadata !DIExpression()), !dbg !3352
  %165 = zext i8 %_234 to i64, !dbg !3354
  store ptr %_232, ptr %self.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i34, metadata !276, metadata !DIExpression()), !dbg !3355
  store i64 %165, ptr %count.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i33, metadata !282, metadata !DIExpression()), !dbg !3357
  store ptr %_232, ptr %self.dbg.spill.i173, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i173, metadata !286, metadata !DIExpression()), !dbg !3358
  store i64 %165, ptr %count.dbg.spill.i172, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i172, metadata !291, metadata !DIExpression()), !dbg !3360
  %166 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_232, i64 %165, !dbg !3361
  store ptr %166, ptr %1, align 8, !dbg !3361
  %_3.i174 = load ptr, ptr %1, align 8, !dbg !3361, !noundef !24
  %_236 = load ptr, ptr %r, align 8, !dbg !3362, !noundef !24
  store ptr %_236, ptr %self.dbg.spill.i70, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i70, metadata !2113, metadata !DIExpression()), !dbg !3363
  store i64 1, ptr %count.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i69, metadata !2116, metadata !DIExpression()), !dbg !3365
  store i64 1, ptr %self.dbg.spill.i.i68, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i68, metadata !2120, metadata !DIExpression()), !dbg !3366
  store i64 0, ptr %self.dbg.spill.i1.i67, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i67, metadata !2129, metadata !DIExpression()), !dbg !3368
  store i64 1, ptr %rhs.dbg.spill.i.i66, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i66, metadata !2134, metadata !DIExpression()), !dbg !3370
  store ptr %_236, ptr %self.dbg.spill.i143, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i143, metadata !286, metadata !DIExpression()), !dbg !3371
  store i64 -1, ptr %count.dbg.spill.i142, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i142, metadata !291, metadata !DIExpression()), !dbg !3373
  %167 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_236, i64 -1, !dbg !3374
  store ptr %167, ptr %11, align 8, !dbg !3374
  %_3.i144 = load ptr, ptr %11, align 8, !dbg !3374, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h8b2f3774968ef06dE(ptr %_3.i174, ptr %_3.i144) #10, !dbg !3375
  %_238 = load ptr, ptr %r, align 8, !dbg !3376, !noundef !24
  store ptr %_238, ptr %self.dbg.spill.i65, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i65, metadata !2113, metadata !DIExpression()), !dbg !3377
  store i64 1, ptr %count.dbg.spill.i64, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i64, metadata !2116, metadata !DIExpression()), !dbg !3379
  store i64 1, ptr %self.dbg.spill.i.i63, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i63, metadata !2120, metadata !DIExpression()), !dbg !3380
  store i64 0, ptr %self.dbg.spill.i1.i62, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i62, metadata !2129, metadata !DIExpression()), !dbg !3382
  store i64 1, ptr %rhs.dbg.spill.i.i61, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i61, metadata !2134, metadata !DIExpression()), !dbg !3384
  store ptr %_238, ptr %self.dbg.spill.i146, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i146, metadata !286, metadata !DIExpression()), !dbg !3385
  store i64 -1, ptr %count.dbg.spill.i145, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i145, metadata !291, metadata !DIExpression()), !dbg !3387
  %168 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_238, i64 -1, !dbg !3388
  store ptr %168, ptr %10, align 8, !dbg !3388
  %_3.i147 = load ptr, ptr %10, align 8, !dbg !3388, !noundef !24
  store ptr %_3.i147, ptr %r, align 8, !dbg !3389
  br label %bb110, !dbg !3390

bb136:                                            ; preds = %bb121, %bb133, %bb118
  %169 = load i64, ptr %28, align 8, !dbg !3391, !noundef !24
  ret i64 %169, !dbg !3391

bb121:                                            ; preds = %bb106
  store ptr %v.0, ptr %self.dbg.spill.i181, align 8
  %170 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i181, i32 0, i32 1
  store i64 %v.1, ptr %170, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i181, metadata !1971, metadata !DIExpression()), !dbg !3392
  %_278 = load ptr, ptr %l, align 8, !dbg !3394, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %171 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE(ptr %v.0, ptr %_278) #10, !dbg !3395
  store i64 %171, ptr %28, align 8, !dbg !3395
  br label %bb136, !dbg !3395

bb120:                                            ; preds = %bb106
  br i1 true, label %bb122, label %bb125, !dbg !3396

bb125:                                            ; preds = %bb129, %bb122, %bb120
  %_261 = load ptr, ptr %start_r, align 8, !dbg !3397, !noundef !24
  %_262 = load ptr, ptr %end_r, align 8, !dbg !3398, !noundef !24
  %_260 = icmp ult ptr %_261, %_262, !dbg !3397
  br i1 %_260, label %bb126, label %bb133, !dbg !3397

bb122:                                            ; preds = %bb120
  %_248 = load ptr, ptr %l, align 8, !dbg !3399, !noundef !24
  %_249 = load ptr, ptr %r, align 8, !dbg !3400, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %172 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE(ptr %_248, ptr %_249) #10, !dbg !3401
  store i64 %172, ptr %_247, align 8, !dbg !3401
  store ptr %_247, ptr %_245, align 8, !dbg !3396
  %173 = getelementptr inbounds { ptr, ptr }, ptr %_245, i32 0, i32 1, !dbg !3396
  store ptr %block_r, ptr %173, align 8, !dbg !3396
  %left_val14 = load ptr, ptr %_245, align 8, !dbg !3396, !nonnull !24, !align !510, !noundef !24
  store ptr %left_val14, ptr %left_val.dbg.spill15, align 8, !dbg !3396
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill15, metadata !2880, metadata !DIExpression()), !dbg !3402
  %174 = getelementptr inbounds { ptr, ptr }, ptr %_245, i32 0, i32 1, !dbg !3396
  %right_val16 = load ptr, ptr %174, align 8, !dbg !3396, !nonnull !24, !align !510, !noundef !24
  store ptr %right_val16, ptr %right_val.dbg.spill17, align 8, !dbg !3396
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill17, metadata !2883, metadata !DIExpression()), !dbg !3402
  %_255 = load i64, ptr %left_val14, align 8, !dbg !3402, !noundef !24
  %_256 = load i64, ptr %right_val16, align 8, !dbg !3402, !noundef !24
  %_254 = icmp eq i64 %_255, %_256, !dbg !3402
  %_253 = xor i1 %_254, true, !dbg !3402
  br i1 %_253, label %bb124, label %bb125, !dbg !3402

bb124:                                            ; preds = %bb122
  store i8 0, ptr %kind4, align 1, !dbg !3402
  %175 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_259, i32 0, i32 1, !dbg !2908
  store ptr null, ptr %175, align 8, !dbg !2908
  %176 = load i8, ptr %kind4, align 1, !dbg !2908, !range !3327, !noundef !24
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h383a6105ab32c166E(i8 %176, ptr align 8 %left_val14, ptr align 8 %right_val16, ptr %_259, ptr align 8 @alloc_fbd29d12e7b221b5790588e8407e814c) #11, !dbg !2908
  unreachable, !dbg !2908

bb133:                                            ; preds = %bb125
  store ptr %v.0, ptr %self.dbg.spill.i182, align 8
  %177 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i182, i32 0, i32 1
  store i64 %v.1, ptr %177, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i182, metadata !1971, metadata !DIExpression()), !dbg !3403
  %_276 = load ptr, ptr %l, align 8, !dbg !3405, !noundef !24
; call core::slice::sort::partition_in_blocks::width
  %178 = call i64 @_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE(ptr %v.0, ptr %_276) #10, !dbg !3406
  store i64 %178, ptr %28, align 8, !dbg !3406
  br label %bb136, !dbg !3406

bb126:                                            ; preds = %bb125
  %_264 = load ptr, ptr %end_r, align 8, !dbg !3407, !noundef !24
  store ptr %_264, ptr %self.dbg.spill.i50, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i50, metadata !3333, metadata !DIExpression()), !dbg !3408
  store i64 1, ptr %count.dbg.spill.i49, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i49, metadata !3336, metadata !DIExpression()), !dbg !3410
  store i64 1, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2120, metadata !DIExpression()), !dbg !3411
  store i64 0, ptr %self.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i, metadata !2129, metadata !DIExpression()), !dbg !3413
  store i64 1, ptr %rhs.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i, metadata !2134, metadata !DIExpression()), !dbg !3415
  store ptr %_264, ptr %self.dbg.spill.i104, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i104, metadata !3048, metadata !DIExpression()), !dbg !3416
  store i64 -1, ptr %count.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i103, metadata !3053, metadata !DIExpression()), !dbg !3418
  %179 = getelementptr inbounds i8, ptr %_264, i64 -1, !dbg !3419
  store ptr %179, ptr %24, align 8, !dbg !3419
  %_3.i105 = load ptr, ptr %24, align 8, !dbg !3419, !noundef !24
  store ptr %_3.i105, ptr %end_r, align 8, !dbg !3420
  %_266 = load ptr, ptr %l, align 8, !dbg !3421, !noundef !24
  %_268 = load ptr, ptr %r, align 8, !dbg !3422, !noundef !24
  %180 = load ptr, ptr %end_r, align 8, !dbg !3423, !noundef !24
  %_271 = load i8, ptr %180, align 1, !dbg !3423, !noundef !24
  store i8 %_271, ptr %small.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %small.dbg.spill.i, metadata !3119, metadata !DIExpression()), !dbg !3424
  %181 = zext i8 %_271 to i64, !dbg !3426
  %182 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %181, i64 1), !dbg !3427
  %_272.0 = extractvalue { i64, i1 } %182, 0, !dbg !3427
  %_272.1 = extractvalue { i64, i1 } %182, 1, !dbg !3427
  %183 = call i1 @llvm.expect.i1(i1 %_272.1, i1 false), !dbg !3427
  br i1 %183, label %panic18, label %bb129, !dbg !3427

bb129:                                            ; preds = %bb126
  store ptr %_268, ptr %self.dbg.spill.i60, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i60, metadata !2113, metadata !DIExpression()), !dbg !3428
  store i64 %_272.0, ptr %count.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i59, metadata !2116, metadata !DIExpression()), !dbg !3430
  store i64 %_272.0, ptr %self.dbg.spill.i.i58, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i58, metadata !2120, metadata !DIExpression()), !dbg !3431
  store i64 0, ptr %self.dbg.spill.i1.i57, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1.i57, metadata !2129, metadata !DIExpression()), !dbg !3433
  store i64 %_272.0, ptr %rhs.dbg.spill.i.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i.i56, metadata !2134, metadata !DIExpression()), !dbg !3435
  %184 = sub i64 0, %_272.0, !dbg !3436
  store ptr %_268, ptr %self.dbg.spill.i149, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i149, metadata !286, metadata !DIExpression()), !dbg !3437
  store i64 %184, ptr %count.dbg.spill.i148, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i148, metadata !291, metadata !DIExpression()), !dbg !3439
  %185 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_268, i64 %184, !dbg !3440
  store ptr %185, ptr %9, align 8, !dbg !3440
  %_3.i150 = load ptr, ptr %9, align 8, !dbg !3440, !noundef !24
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17h8b2f3774968ef06dE(ptr %_266, ptr %_3.i150) #10, !dbg !3441
  %_274 = load ptr, ptr %l, align 8, !dbg !3442, !noundef !24
  store ptr %_274, ptr %self.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i32, metadata !276, metadata !DIExpression()), !dbg !3443
  store i64 1, ptr %count.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i31, metadata !282, metadata !DIExpression()), !dbg !3445
  store ptr %_274, ptr %self.dbg.spill.i176, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i176, metadata !286, metadata !DIExpression()), !dbg !3446
  store i64 1, ptr %count.dbg.spill.i175, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i175, metadata !291, metadata !DIExpression()), !dbg !3448
  %186 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_274, i64 1, !dbg !3449
  store ptr %186, ptr %0, align 8, !dbg !3449
  %_3.i177 = load ptr, ptr %0, align 8, !dbg !3449, !noundef !24
  store ptr %_3.i177, ptr %l, align 8, !dbg !3450
  br label %bb125, !dbg !3451

panic18:                                          ; preds = %bb126
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0ba58876d11be66a75ed3c6ebb0e6bf5) #11, !dbg !3427
  unreachable, !dbg !3427
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h3cd960ddfd95367cE(ptr %l, ptr %r) unnamed_addr #1 !dbg !3452 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3457, metadata !DIExpression()), !dbg !3459
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3458, metadata !DIExpression()), !dbg !3460
  %_4 = icmp ugt i64 1, 0, !dbg !3461
  %_3 = xor i1 %_4, true, !dbg !3462
  br i1 %_3, label %bb2, label %bb3, !dbg !3462

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !1609, metadata !DIExpression()), !dbg !3463
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1618, metadata !DIExpression()), !dbg !3465
  %0 = ptrtoint ptr %r to i64, !dbg !3467
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1609, metadata !DIExpression()), !dbg !3468
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1618, metadata !DIExpression()), !dbg !3470
  %1 = ptrtoint ptr %l to i64, !dbg !3472
  %_10.0 = sub i64 %0, %1, !dbg !3473
  %_10.1 = icmp ult i64 %0, %1, !dbg !3473
  %2 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3473
  br i1 %2, label %panic, label %bb6, !dbg !3473

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_9dd923649e31f13c3223b59f17507a2e) #11, !dbg !3462
  unreachable, !dbg !3462

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 1, 0, !dbg !3473
  %3 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3473
  br i1 %3, label %panic1, label %bb8, !dbg !3473

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3473
  unreachable, !dbg !3473

bb8:                                              ; preds = %bb6
  %4 = udiv i64 %_10.0, 1, !dbg !3473
  ret i64 %4, !dbg !3474

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3473
  unreachable, !dbg !3473
}

; core::slice::sort::partition_in_blocks::width
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE(ptr %l, ptr %r) unnamed_addr #1 !dbg !3475 {
start:
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !3479, metadata !DIExpression()), !dbg !3481
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !3480, metadata !DIExpression()), !dbg !3482
  %_4 = icmp ugt i64 24, 0, !dbg !3483
  %_3 = xor i1 %_4, true, !dbg !3484
  br i1 %_3, label %bb2, label %bb3, !dbg !3484

bb3:                                              ; preds = %start
  store ptr %r, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3485, metadata !DIExpression()), !dbg !3490
  store ptr %r, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !1288, metadata !DIExpression()), !dbg !3492
  %0 = ptrtoint ptr %r to i64, !dbg !3494
  store ptr %l, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3485, metadata !DIExpression()), !dbg !3495
  store ptr %l, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !1288, metadata !DIExpression()), !dbg !3497
  %1 = ptrtoint ptr %l to i64, !dbg !3499
  %_10.0 = sub i64 %0, %1, !dbg !3500
  %_10.1 = icmp ult i64 %0, %1, !dbg !3500
  %2 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !3500
  br i1 %2, label %panic, label %bb6, !dbg !3500

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_60cd9f07f649265b0b23f897aad9bad7, i64 41, ptr align 8 @alloc_9dd923649e31f13c3223b59f17507a2e) #11, !dbg !3484
  unreachable, !dbg !3484

bb6:                                              ; preds = %bb3
  %_12 = icmp eq i64 24, 0, !dbg !3500
  %3 = call i1 @llvm.expect.i1(i1 %_12, i1 false), !dbg !3500
  br i1 %3, label %panic1, label %bb8, !dbg !3500

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3500
  unreachable, !dbg !3500

bb8:                                              ; preds = %bb6
  %4 = udiv i64 %_10.0, 24, !dbg !3500
  ret i64 %4, !dbg !3501

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.3, i64 25, ptr align 8 @alloc_c103c0ba323341afbed17e7fe7e651ca) #11, !dbg !3500
  unreachable, !dbg !3500
}

; core::slice::sort::partial_insertion_sort
; Function Attrs: cold noredzone nounwind
define zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17h6ab531a20059253eE(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less) unnamed_addr #2 !dbg !3502 {
start:
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_50 = alloca i64, align 8
  %_42 = alloca i64, align 8
  %_17 = alloca { ptr, ptr }, align 8
  %_12 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %i = alloca i64, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3506, metadata !DIExpression()), !dbg !3514
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3507, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.declare(metadata ptr %i, metadata !3510, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3512, metadata !DIExpression()), !dbg !3517
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3518
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3508, metadata !DIExpression()), !dbg !3519
  store i64 1, ptr %i, align 8, !dbg !3520
  store i64 0, ptr %_7, align 8, !dbg !3521
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3521
  store i64 5, ptr %3, align 8, !dbg !3521
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3521
  %5 = load i64, ptr %4, align 8, !dbg !3521, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3521
  %7 = load i64, ptr %6, align 8, !dbg !3521, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1e3ba51008b82e5E"(i64 %5, i64 %7) #10, !dbg !3521
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3521
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3521
  %9 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3521
  store i64 %_6.0, ptr %9, align 8, !dbg !3521
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3521
  store i64 %_6.1, ptr %10, align 8, !dbg !3521
  br label %bb2, !dbg !3522

bb2:                                              ; preds = %bb25, %bb21, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %11 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h1df758b10b9b351bE"(ptr align 8 %iter) #10, !dbg !3517
  store { i64, i64 } %11, ptr %_9, align 8, !dbg !3517
  %_11 = load i64, ptr %_9, align 8, !dbg !3517, !range !1071, !noundef !24
  %12 = icmp eq i64 %_11, 0, !dbg !3517
  br i1 %12, label %bb5, label %bb6, !dbg !3517

bb5:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !3523
  br label %bb28, !dbg !3524

bb6:                                              ; preds = %bb15, %bb2
  %_14 = load i64, ptr %i, align 8, !dbg !3525, !noundef !24
  %_13 = icmp ult i64 %_14, %v.1, !dbg !3525
  br i1 %_13, label %bb8, label %bb7, !dbg !3525

bb4:                                              ; No predecessors!
  unreachable, !dbg !3517

bb7:                                              ; preds = %bb6
  store i8 0, ptr %_12, align 1, !dbg !3525
  br label %bb9, !dbg !3525

bb8:                                              ; preds = %bb6
  %_21 = load i64, ptr %i, align 8, !dbg !3526, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_19 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %v.0, i64 %v.1, i64 %_21) #10, !dbg !3527
  %_26 = load i64, ptr %i, align 8, !dbg !3528, !noundef !24
  %_27.0 = sub i64 %_26, 1, !dbg !3528
  %_27.1 = icmp ult i64 %_26, 1, !dbg !3528
  %13 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !3528
  br i1 %13, label %panic, label %bb11, !dbg !3528

bb11:                                             ; preds = %bb8
; call core::slice::<impl [T]>::get_unchecked
  %_23 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %v.0, i64 %v.1, i64 %_27.0) #10, !dbg !3529
  store ptr %_19, ptr %_17, align 8, !dbg !3530
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3530
  store ptr %_23, ptr %14, align 8, !dbg !3530
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 0, !dbg !3530
  %16 = load ptr, ptr %15, align 8, !dbg !3530, !nonnull !24, !align !510, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_17, i32 0, i32 1, !dbg !3530
  %18 = load ptr, ptr %17, align 8, !dbg !3530, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_16 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3530
  %_15 = xor i1 %_16, true, !dbg !3531
  %19 = zext i1 %_15 to i8, !dbg !3525
  store i8 %19, ptr %_12, align 1, !dbg !3525
  br label %bb9, !dbg !3525

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_bd81c17235b1444753a1935a813b485f) #11, !dbg !3528
  unreachable, !dbg !3528

bb9:                                              ; preds = %bb7, %bb11
  %20 = load i8, ptr %_12, align 1, !dbg !3525, !range !242, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3525
  br i1 %21, label %bb14, label %bb16, !dbg !3525

bb16:                                             ; preds = %bb9
  %_30 = load i64, ptr %i, align 8, !dbg !3532, !noundef !24
  %_29 = icmp eq i64 %_30, %v.1, !dbg !3532
  br i1 %_29, label %bb17, label %bb18, !dbg !3532

bb14:                                             ; preds = %bb9
  %22 = load i64, ptr %i, align 8, !dbg !3533, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !3533
  %_28.0 = extractvalue { i64, i1 } %23, 0, !dbg !3533
  %_28.1 = extractvalue { i64, i1 } %23, 1, !dbg !3533
  %24 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !3533
  br i1 %24, label %panic1, label %bb15, !dbg !3533

bb15:                                             ; preds = %bb14
  store i64 %_28.0, ptr %i, align 8, !dbg !3533
  br label %bb6, !dbg !3534

panic1:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_e743259f65f79dce5fdf7e439c96cb01) #11, !dbg !3533
  unreachable, !dbg !3533

bb18:                                             ; preds = %bb16
  %_31 = icmp ult i64 %v.1, 50, !dbg !3535
  br i1 %_31, label %bb19, label %bb20, !dbg !3535

bb17:                                             ; preds = %bb16
  store i8 1, ptr %0, align 1, !dbg !3536
  br label %bb28, !dbg !3537

bb28:                                             ; preds = %bb5, %bb19, %bb17
  %25 = load i8, ptr %0, align 1, !dbg !3524, !range !242, !noundef !24
  %26 = trunc i8 %25 to i1, !dbg !3524
  ret i1 %26, !dbg !3524

bb20:                                             ; preds = %bb18
  %_34 = load i64, ptr %i, align 8, !dbg !3540, !noundef !24
  %_35.0 = sub i64 %_34, 1, !dbg !3540
  %_35.1 = icmp ult i64 %_34, 1, !dbg !3540
  %27 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !3540
  br i1 %27, label %panic2, label %bb21, !dbg !3540

bb19:                                             ; preds = %bb18
  store i8 0, ptr %0, align 1, !dbg !3541
  br label %bb28, !dbg !3537

bb21:                                             ; preds = %bb20
  %_36 = load i64, ptr %i, align 8, !dbg !3542, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h3698e108c8304892E"(ptr align 8 %v.0, i64 %v.1, i64 %_35.0, i64 %_36, ptr align 8 @alloc_0cd04c6390f55d83a74a72e18ad99930) #10, !dbg !3543
  %_38 = load i64, ptr %i, align 8, !dbg !3544, !noundef !24
  %_37 = icmp uge i64 %_38, 2, !dbg !3544
  br i1 %_37, label %bb23, label %bb2, !dbg !3544

panic2:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2300fc4e056106188d3f21c349fb8e76) #11, !dbg !3540
  unreachable, !dbg !3540

bb23:                                             ; preds = %bb21
  %_43 = load i64, ptr %i, align 8, !dbg !3545, !noundef !24
  store i64 %_43, ptr %_42, align 8, !dbg !3546
  %28 = load i64, ptr %_42, align 8, !dbg !3547, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %29 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h52cc5b82e1a95684E"(ptr align 8 %v.0, i64 %v.1, i64 %28, ptr align 8 @alloc_5f37f9a166db798315b708b1541f42a2) #10, !dbg !3547
  %_41.0 = extractvalue { ptr, i64 } %29, 0, !dbg !3547
  %_41.1 = extractvalue { ptr, i64 } %29, 1, !dbg !3547
  %_45 = load i64, ptr %i, align 8, !dbg !3548, !noundef !24
  %_46.0 = sub i64 %_45, 1, !dbg !3548
  %_46.1 = icmp ult i64 %_45, 1, !dbg !3548
  %30 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !3548
  br i1 %30, label %panic3, label %bb25, !dbg !3548

bb25:                                             ; preds = %bb23
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17ha5f50d1687ff8c98E(ptr align 8 %_41.0, i64 %_41.1, i64 %_46.0, ptr align 8 %is_less) #10, !dbg !3549
  %_51 = load i64, ptr %i, align 8, !dbg !3550, !noundef !24
  store i64 %_51, ptr %_50, align 8, !dbg !3551
  %31 = load i64, ptr %_50, align 8, !dbg !3552, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %32 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h52cc5b82e1a95684E"(ptr align 8 %v.0, i64 %v.1, i64 %31, ptr align 8 @alloc_59f135123cded1fb506d3f148328939a) #10, !dbg !3552
  %_49.0 = extractvalue { ptr, i64 } %32, 0, !dbg !3552
  %_49.1 = extractvalue { ptr, i64 } %32, 1, !dbg !3552
; call core::slice::sort::insertion_sort_shift_right
  call void @_ZN4core5slice4sort26insertion_sort_shift_right17hab9036c505b59be9E(ptr align 8 %_49.0, i64 %_49.1, i64 1, ptr align 8 %is_less) #10, !dbg !3553
  br label %bb2, !dbg !3553

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_51848abd31708fd9bd4e978ad4e2fdf6) #11, !dbg !3548
  unreachable, !dbg !3548
}

; core::slice::sort::insertion_sort_shift_left
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort25insertion_sort_shift_left17ha5f50d1687ff8c98E(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3554 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_20 = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3558, metadata !DIExpression()), !dbg !3567
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3559, metadata !DIExpression()), !dbg !3568
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3560, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3563, metadata !DIExpression()), !dbg !3570
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3571
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3561, metadata !DIExpression()), !dbg !3572
  %2 = icmp eq i64 %offset, 0, !dbg !3573
  br i1 %2, label %bb1, label %bb2, !dbg !3573

bb1:                                              ; preds = %start
  store i8 0, ptr %_7, align 1, !dbg !3573
  br label %bb3, !dbg !3573

bb2:                                              ; preds = %start
  %_8 = icmp ule i64 %offset, %v.1, !dbg !3574
  %3 = zext i1 %_8 to i8, !dbg !3573
  store i8 %3, ptr %_7, align 1, !dbg !3573
  br label %bb3, !dbg !3573

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, ptr %_7, align 1, !dbg !3575, !range !242, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3575
  %_6 = xor i1 %5, true, !dbg !3575
  br i1 %_6, label %bb4, label %bb5, !dbg !3575

bb5:                                              ; preds = %bb3
  store i64 %offset, ptr %_11, align 8, !dbg !3576
  %6 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3576
  store i64 %v.1, ptr %6, align 8, !dbg !3576
  %7 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 0, !dbg !3576
  %8 = load i64, ptr %7, align 8, !dbg !3576, !noundef !24
  %9 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !3576
  %10 = load i64, ptr %9, align 8, !dbg !3576, !noundef !24
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %11 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1e3ba51008b82e5E"(i64 %8, i64 %10) #10, !dbg !3576
  %_10.0 = extractvalue { i64, i64 } %11, 0, !dbg !3576
  %_10.1 = extractvalue { i64, i64 } %11, 1, !dbg !3576
  %12 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3576
  store i64 %_10.0, ptr %12, align 8, !dbg !3576
  %13 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3576
  store i64 %_10.1, ptr %13, align 8, !dbg !3576
  br label %bb7, !dbg !3577

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_5429279aa16fa0cdfc25e6fc8726a06a, i64 46, ptr align 8 @alloc_99bb945c879f5888798b28005543a365) #11, !dbg !3575
  unreachable, !dbg !3575

bb7:                                              ; preds = %bb9, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %14 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h1df758b10b9b351bE"(ptr align 8 %iter) #10, !dbg !3570
  store { i64, i64 } %14, ptr %_13, align 8, !dbg !3570
  %_15 = load i64, ptr %_13, align 8, !dbg !3570, !range !1071, !noundef !24
  %15 = icmp eq i64 %_15, 0, !dbg !3570
  br i1 %15, label %bb11, label %bb9, !dbg !3570

bb11:                                             ; preds = %bb7
  ret void, !dbg !3578

bb9:                                              ; preds = %bb7
  %16 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3579
  %i = load i64, ptr %16, align 8, !dbg !3579, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3579
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3565, metadata !DIExpression()), !dbg !3580
  store i64 %i, ptr %_20, align 8, !dbg !3581
  %17 = load i64, ptr %_20, align 8, !dbg !3582, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %18 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h7ba1bf620277e648E"(ptr align 8 %v.0, i64 %v.1, i64 %17, ptr align 8 @alloc_73eebdc85b9e117e5d0f01368c59f59c) #10, !dbg !3582
  %_19.0 = extractvalue { ptr, i64 } %18, 0, !dbg !3582
  %_19.1 = extractvalue { ptr, i64 } %18, 1, !dbg !3582
; call core::slice::sort::insert_tail
  call void @_ZN4core5slice4sort11insert_tail17hbfcd2f9f558bf8c4E(ptr align 8 %_19.0, i64 %_19.1, ptr align 8 %is_less) #10, !dbg !3583
  br label %bb7, !dbg !3583

bb10:                                             ; No predecessors!
  unreachable, !dbg !3570
}

; core::slice::sort::insertion_sort_shift_right
; Function Attrs: noinline noredzone nounwind
define void @_ZN4core5slice4sort26insertion_sort_shift_right17hab9036c505b59be9E(ptr align 8 %v.0, i64 %v.1, i64 %offset, ptr align 8 %is_less) unnamed_addr #3 !dbg !3584 {
start:
  %i.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %offset.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3586, metadata !DIExpression()), !dbg !3595
  store i64 %offset, ptr %offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !3587, metadata !DIExpression()), !dbg !3596
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3588, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3591, metadata !DIExpression()), !dbg !3598
  store i64 %v.1, ptr %len.dbg.spill, align 8, !dbg !3599
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3589, metadata !DIExpression()), !dbg !3600
  %2 = icmp eq i64 %offset, 0, !dbg !3601
  br i1 %2, label %bb4, label %bb5, !dbg !3601

bb4:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !3601
  br label %bb6, !dbg !3601

bb5:                                              ; preds = %start
  %_9 = icmp ule i64 %offset, %v.1, !dbg !3602
  %3 = zext i1 %_9 to i8, !dbg !3601
  store i8 %3, ptr %_8, align 1, !dbg !3601
  br label %bb6, !dbg !3601

bb6:                                              ; preds = %bb4, %bb5
  %4 = load i8, ptr %_8, align 1, !dbg !3601, !range !242, !noundef !24
  %5 = trunc i8 %4 to i1, !dbg !3601
  br i1 %5, label %bb2, label %bb1, !dbg !3601

bb1:                                              ; preds = %bb6
  store i8 0, ptr %_7, align 1, !dbg !3601
  br label %bb3, !dbg !3601

bb2:                                              ; preds = %bb6
  %_10 = icmp uge i64 %v.1, 2, !dbg !3603
  %6 = zext i1 %_10 to i8, !dbg !3601
  store i8 %6, ptr %_7, align 1, !dbg !3601
  br label %bb3, !dbg !3601

bb3:                                              ; preds = %bb1, %bb2
  %7 = load i8, ptr %_7, align 1, !dbg !3604, !range !242, !noundef !24
  %8 = trunc i8 %7 to i1, !dbg !3604
  %_6 = xor i1 %8, true, !dbg !3604
  br i1 %_6, label %bb7, label %bb8, !dbg !3604

bb8:                                              ; preds = %bb3
  store i64 0, ptr %_14, align 8, !dbg !3605
  %9 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3605
  store i64 %offset, ptr %9, align 8, !dbg !3605
  %10 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !3605
  %11 = load i64, ptr %10, align 8, !dbg !3605, !noundef !24
  %12 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !3605
  %13 = load i64, ptr %12, align 8, !dbg !3605, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %14 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h8aacf02eab854b71E(i64 %11, i64 %13) #10, !dbg !3605
  %_13.0 = extractvalue { i64, i64 } %14, 0, !dbg !3605
  %_13.1 = extractvalue { i64, i64 } %14, 1, !dbg !3605
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %15 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7d1ad3d13c2c46beE"(i64 %_13.0, i64 %_13.1) #10, !dbg !3605
  %_12.0 = extractvalue { i64, i64 } %15, 0, !dbg !3605
  %_12.1 = extractvalue { i64, i64 } %15, 1, !dbg !3605
  %16 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3605
  store i64 %_12.0, ptr %16, align 8, !dbg !3605
  %17 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3605
  store i64 %_12.1, ptr %17, align 8, !dbg !3605
  br label %bb11, !dbg !3606

bb7:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_6973cb22fd5a814eff7046b5b9169c77, i64 58, ptr align 8 @alloc_15caf4948137b9f7be8cedfe4929bfd3) #11, !dbg !3604
  unreachable, !dbg !3604

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %18 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h80eeb9b610c0f8dcE"(ptr align 8 %iter) #10, !dbg !3598
  store { i64, i64 } %18, ptr %_16, align 8, !dbg !3598
  %_18 = load i64, ptr %_16, align 8, !dbg !3598, !range !1071, !noundef !24
  %19 = icmp eq i64 %_18, 0, !dbg !3598
  br i1 %19, label %bb15, label %bb13, !dbg !3598

bb15:                                             ; preds = %bb11
  ret void, !dbg !3607

bb13:                                             ; preds = %bb11
  %20 = getelementptr inbounds { i64, i64 }, ptr %_16, i32 0, i32 1, !dbg !3608
  %i = load i64, ptr %20, align 8, !dbg !3608, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3608
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3593, metadata !DIExpression()), !dbg !3609
  store i64 %i, ptr %_23, align 8, !dbg !3610
  %21 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3610
  store i64 %v.1, ptr %21, align 8, !dbg !3610
  %22 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !3611
  %23 = load i64, ptr %22, align 8, !dbg !3611, !noundef !24
  %24 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !3611
  %25 = load i64, ptr %24, align 8, !dbg !3611, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %26 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h176acecc10d58840E"(ptr align 8 %v.0, i64 %v.1, i64 %23, i64 %25, ptr align 8 @alloc_9da74b8166775a21c862af0758b35f3d) #10, !dbg !3611
  %_22.0 = extractvalue { ptr, i64 } %26, 0, !dbg !3611
  %_22.1 = extractvalue { ptr, i64 } %26, 1, !dbg !3611
; call core::slice::sort::insert_head
  call void @_ZN4core5slice4sort11insert_head17hddbfe8f747f25a4cE(ptr align 8 %_22.0, i64 %_22.1, ptr align 8 %is_less) #10, !dbg !3612
  br label %bb11, !dbg !3612

bb14:                                             ; No predecessors!
  unreachable, !dbg !3598
}

; core::slice::sort::recurse
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort7recurse17h23bf6e646aa98387E(ptr align 8 %0, i64 %1, ptr align 8 %is_less, ptr align 8 %2, i32 %3) unnamed_addr #1 !dbg !3613 {
start:
  %pivot.dbg.spill9 = alloca ptr, align 8
  %right.dbg.spill7 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill4 = alloca { ptr, i64 }, align 8
  %right.dbg.spill = alloca { ptr, i64 }, align 8
  %left.dbg.spill = alloca { ptr, i64 }, align 8
  %was_p.dbg.spill = alloca i8, align 1
  %mid.dbg.spill2 = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %p.dbg.spill = alloca ptr, align 8
  %likely_sorted.dbg.spill = alloca i8, align 1
  %pivot.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %_76 = alloca ptr, align 8
  %_74 = alloca ptr, align 8
  %_61 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_57 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_44 = alloca i64, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_26 = alloca i8, align 1
  %_25 = alloca i8, align 1
  %was_partitioned = alloca i8, align 1
  %was_balanced = alloca i8, align 1
  %limit = alloca i32, align 4
  %pred = alloca ptr, align 8
  %v = alloca { ptr, i64 }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %pred, align 8
  store i32 %3, ptr %limit, align 4
  call void @llvm.dbg.declare(metadata ptr %v, metadata !3628, metadata !DIExpression()), !dbg !3656
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3629, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.declare(metadata ptr %pred, metadata !3630, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.declare(metadata ptr %limit, metadata !3631, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.declare(metadata ptr %was_balanced, metadata !3632, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.declare(metadata ptr %was_partitioned, metadata !3634, metadata !DIExpression()), !dbg !3661
  store i8 1, ptr %was_balanced, align 1, !dbg !3662
  store i8 1, ptr %was_partitioned, align 1, !dbg !3663
  br label %bb1, !dbg !3664

bb1:                                              ; preds = %bb37, %bb35, %bb24, %start
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3665
  %_8.0 = load ptr, ptr %6, align 8, !dbg !3665, !nonnull !24, !align !510, !noundef !24
  %7 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3665
  %_8.1 = load i64, ptr %7, align 8, !dbg !3665, !noundef !24
  store i64 %_8.1, ptr %len.dbg.spill, align 8, !dbg !3665
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3636, metadata !DIExpression()), !dbg !3666
  %_9 = icmp ule i64 %_8.1, 20, !dbg !3667
  br i1 %_9, label %bb2, label %bb4, !dbg !3667

bb4:                                              ; preds = %bb1
  %_13 = load i32, ptr %limit, align 4, !dbg !3668, !noundef !24
  %8 = icmp eq i32 %_13, 0, !dbg !3668
  br i1 %8, label %bb5, label %bb6, !dbg !3668

bb2:                                              ; preds = %bb1
  %_10 = icmp uge i64 %_8.1, 2, !dbg !3669
  br i1 %_10, label %bb3, label %bb39, !dbg !3669

bb39:                                             ; preds = %bb5, %bb18, %bb3, %bb2
  ret void, !dbg !3670

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3671
  %_12.0 = load ptr, ptr %9, align 8, !dbg !3671, !nonnull !24, !align !510, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3671
  %_12.1 = load i64, ptr %10, align 8, !dbg !3671, !noundef !24
; call core::slice::sort::insertion_sort_shift_left
  call void @_ZN4core5slice4sort25insertion_sort_shift_left17ha5f50d1687ff8c98E(ptr align 8 %_12.0, i64 %_12.1, i64 1, ptr align 8 %is_less) #10, !dbg !3672
  br label %bb39, !dbg !3672

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3673
  %_15.0 = load ptr, ptr %11, align 8, !dbg !3673, !nonnull !24, !align !510, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3673
  %_15.1 = load i64, ptr %12, align 8, !dbg !3673, !noundef !24
; call core::slice::sort::heapsort
  call void @_ZN4core5slice4sort8heapsort17h2d7da8b0b4574961E(ptr align 8 %_15.0, i64 %_15.1, ptr align 8 %is_less) #10, !dbg !3674
  br label %bb39, !dbg !3674

bb6:                                              ; preds = %bb4
  %13 = load i8, ptr %was_balanced, align 1, !dbg !3675, !range !242, !noundef !24
  %_17 = trunc i8 %13 to i1, !dbg !3675
  %_16 = xor i1 %_17, true, !dbg !3676
  br i1 %_16, label %bb7, label %bb10, !dbg !3676

bb10:                                             ; preds = %bb9, %bb6
  %14 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3677
  %_24.0 = load ptr, ptr %14, align 8, !dbg !3677, !nonnull !24, !align !510, !noundef !24
  %15 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3677
  %_24.1 = load i64, ptr %15, align 8, !dbg !3677, !noundef !24
; call core::slice::sort::choose_pivot
  %16 = call { i64, i8 } @_ZN4core5slice4sort12choose_pivot17h4482e449327c800fE(ptr align 8 %_24.0, i64 %_24.1, ptr align 8 %is_less) #10, !dbg !3678
  %_23.0 = extractvalue { i64, i8 } %16, 0, !dbg !3678
  %17 = extractvalue { i64, i8 } %16, 1, !dbg !3678
  %_23.1 = trunc i8 %17 to i1, !dbg !3678
  store i64 %_23.0, ptr %pivot.dbg.spill, align 8, !dbg !3679
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3638, metadata !DIExpression()), !dbg !3680
  %18 = zext i1 %_23.1 to i8, !dbg !3681
  store i8 %18, ptr %likely_sorted.dbg.spill, align 1, !dbg !3681
  call void @llvm.dbg.declare(metadata ptr %likely_sorted.dbg.spill, metadata !3640, metadata !DIExpression()), !dbg !3682
  %19 = load i8, ptr %was_balanced, align 1, !dbg !3683, !range !242, !noundef !24
  %_27 = trunc i8 %19 to i1, !dbg !3683
  br i1 %_27, label %bb16, label %bb15, !dbg !3683

bb7:                                              ; preds = %bb6
  %20 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3684
  %_19.0 = load ptr, ptr %20, align 8, !dbg !3684, !nonnull !24, !align !510, !noundef !24
  %21 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3684
  %_19.1 = load i64, ptr %21, align 8, !dbg !3684, !noundef !24
; call core::slice::sort::break_patterns
  call void @_ZN4core5slice4sort14break_patterns17h8ecba329f837a7b4E(ptr align 8 %_19.0, i64 %_19.1) #10, !dbg !3685
  %22 = load i32, ptr %limit, align 4, !dbg !3686, !noundef !24
  %_20.0 = sub i32 %22, 1, !dbg !3686
  %_20.1 = icmp ult i32 %22, 1, !dbg !3686
  %23 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !3686
  br i1 %23, label %panic, label %bb9, !dbg !3686

bb9:                                              ; preds = %bb7
  store i32 %_20.0, ptr %limit, align 4, !dbg !3686
  br label %bb10, !dbg !3687

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_afed1504fcd128c4005dc410e4c81be0) #11, !dbg !3686
  unreachable, !dbg !3686

bb15:                                             ; preds = %bb10
  store i8 0, ptr %_26, align 1, !dbg !3683
  br label %bb17, !dbg !3683

bb16:                                             ; preds = %bb10
  %24 = load i8, ptr %was_partitioned, align 1, !dbg !3688, !range !242, !noundef !24
  %_28 = trunc i8 %24 to i1, !dbg !3688
  %25 = zext i1 %_28 to i8, !dbg !3683
  store i8 %25, ptr %_26, align 1, !dbg !3683
  br label %bb17, !dbg !3683

bb17:                                             ; preds = %bb15, %bb16
  %26 = load i8, ptr %_26, align 1, !dbg !3683, !range !242, !noundef !24
  %27 = trunc i8 %26 to i1, !dbg !3683
  br i1 %27, label %bb13, label %bb12, !dbg !3683

bb12:                                             ; preds = %bb17
  store i8 0, ptr %_25, align 1, !dbg !3683
  br label %bb14, !dbg !3683

bb13:                                             ; preds = %bb17
  %28 = zext i1 %_23.1 to i8, !dbg !3683
  store i8 %28, ptr %_25, align 1, !dbg !3683
  br label %bb14, !dbg !3683

bb14:                                             ; preds = %bb12, %bb13
  %29 = load i8, ptr %_25, align 1, !dbg !3683, !range !242, !noundef !24
  %30 = trunc i8 %29 to i1, !dbg !3683
  br i1 %30, label %bb18, label %bb20, !dbg !3683

bb20:                                             ; preds = %bb18, %bb14
  %31 = load ptr, ptr %pred, align 8, !dbg !3689, !noundef !24
  %32 = ptrtoint ptr %31 to i64, !dbg !3689
  %33 = icmp eq i64 %32, 0, !dbg !3689
  %_31 = select i1 %33, i64 0, i64 1, !dbg !3689
  %34 = icmp eq i64 %_31, 1, !dbg !3689
  br i1 %34, label %bb21, label %bb27, !dbg !3689

bb18:                                             ; preds = %bb14
  %35 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3690
  %_30.0 = load ptr, ptr %35, align 8, !dbg !3690, !nonnull !24, !align !510, !noundef !24
  %36 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3690
  %_30.1 = load i64, ptr %36, align 8, !dbg !3690, !noundef !24
; call core::slice::sort::partial_insertion_sort
  %_29 = call zeroext i1 @_ZN4core5slice4sort22partial_insertion_sort17h6ab531a20059253eE(ptr align 8 %_30.0, i64 %_30.1, ptr align 8 %is_less) #10, !dbg !3691
  br i1 %_29, label %bb39, label %bb20, !dbg !3691

bb21:                                             ; preds = %bb20
  %p = load ptr, ptr %pred, align 8, !dbg !3692, !nonnull !24, !align !510, !noundef !24
  store ptr %p, ptr %p.dbg.spill, align 8, !dbg !3692
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !3641, metadata !DIExpression()), !dbg !3692
  %37 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3693
  %38 = load ptr, ptr %37, align 8, !dbg !3693, !nonnull !24, !align !510, !noundef !24
  %39 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3693
  %_37 = load i64, ptr %39, align 8, !dbg !3693, !noundef !24
  %_38 = icmp ult i64 %_23.0, %_37, !dbg !3693
  %40 = call i1 @llvm.expect.i1(i1 %_38, i1 true), !dbg !3693
  br i1 %40, label %bb22, label %panic1, !dbg !3693

bb27:                                             ; preds = %bb22, %bb20
  %41 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3694
  %_49.0 = load ptr, ptr %41, align 8, !dbg !3694, !nonnull !24, !align !510, !noundef !24
  %42 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3694
  %_49.1 = load i64, ptr %42, align 8, !dbg !3694, !noundef !24
; call core::slice::sort::partition
  %43 = call { i64, i8 } @_ZN4core5slice4sort9partition17h87f2ea1a3de93f87E(ptr align 8 %_49.0, i64 %_49.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3695
  %_48.0 = extractvalue { i64, i8 } %43, 0, !dbg !3695
  %44 = extractvalue { i64, i8 } %43, 1, !dbg !3695
  %_48.1 = trunc i8 %44 to i1, !dbg !3695
  store i64 %_48.0, ptr %mid.dbg.spill2, align 8, !dbg !3696
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill2, metadata !3645, metadata !DIExpression()), !dbg !3697
  %45 = zext i1 %_48.1 to i8, !dbg !3698
  store i8 %45, ptr %was_p.dbg.spill, align 1, !dbg !3698
  call void @llvm.dbg.declare(metadata ptr %was_p.dbg.spill, metadata !3647, metadata !DIExpression()), !dbg !3699
  %_52.0 = sub i64 %_8.1, %_48.0, !dbg !3700
  %_52.1 = icmp ult i64 %_8.1, %_48.0, !dbg !3700
  %46 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !3700
  br i1 %46, label %panic3, label %bb29, !dbg !3700

bb22:                                             ; preds = %bb21
  %47 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3701
  %48 = load ptr, ptr %47, align 8, !dbg !3701, !nonnull !24, !align !510, !noundef !24
  %49 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3701
  %50 = load i64, ptr %49, align 8, !dbg !3701, !noundef !24
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %48, i64 0, i64 %_23.0, !dbg !3701
  store ptr %p, ptr %_35, align 8, !dbg !3702
  %51 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3702
  store ptr %_36, ptr %51, align 8, !dbg !3702
  %52 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3702
  %53 = load ptr, ptr %52, align 8, !dbg !3702, !nonnull !24, !align !510, !noundef !24
  %54 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3702
  %55 = load ptr, ptr %54, align 8, !dbg !3702, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %53, ptr align 8 %55) #10, !dbg !3702
  %_33 = xor i1 %_34, true, !dbg !3703
  br i1 %_33, label %bb24, label %bb27, !dbg !3703

panic1:                                           ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %_23.0, i64 %_37, ptr align 8 @alloc_587605405deda51184d8e058ecd3dd79) #11, !dbg !3693
  unreachable, !dbg !3693

bb24:                                             ; preds = %bb22
  %56 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3704
  %_40.0 = load ptr, ptr %56, align 8, !dbg !3704, !nonnull !24, !align !510, !noundef !24
  %57 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3704
  %_40.1 = load i64, ptr %57, align 8, !dbg !3704, !noundef !24
; call core::slice::sort::partition_equal
  %mid = call i64 @_ZN4core5slice4sort15partition_equal17h9d9f9d4265ea5a6dE(ptr align 8 %_40.0, i64 %_40.1, i64 %_23.0, ptr align 8 %is_less) #10, !dbg !3705
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3705
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3643, metadata !DIExpression()), !dbg !3706
  %58 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3707
  %_43.0 = load ptr, ptr %58, align 8, !dbg !3707, !nonnull !24, !align !510, !noundef !24
  %59 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3707
  %_43.1 = load i64, ptr %59, align 8, !dbg !3707, !noundef !24
  store i64 %mid, ptr %_44, align 8, !dbg !3708
  %60 = load i64, ptr %_44, align 8, !dbg !3707, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %61 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h53f902d89aab6c39E"(ptr align 8 %_43.0, i64 %_43.1, i64 %60, ptr align 8 @alloc_696cf6b9c96fa15d1a2bc76997b92dc8) #10, !dbg !3707
  %_42.0 = extractvalue { ptr, i64 } %61, 0, !dbg !3707
  %_42.1 = extractvalue { ptr, i64 } %61, 1, !dbg !3707
  %62 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3709
  store ptr %_42.0, ptr %62, align 8, !dbg !3709
  %63 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3709
  store i64 %_42.1, ptr %63, align 8, !dbg !3709
  br label %bb1, !dbg !3710

bb29:                                             ; preds = %bb27
; call core::cmp::min
  %_50 = call i64 @_ZN4core3cmp3min17hf3463562417c7eceE(i64 %_48.0, i64 %_52.0) #10, !dbg !3712
  %_53 = udiv i64 %_8.1, 8, !dbg !3713
  %64 = icmp uge i64 %_50, %_53, !dbg !3714
  %65 = zext i1 %64 to i8, !dbg !3714
  store i8 %65, ptr %was_balanced, align 1, !dbg !3714
  %66 = zext i1 %_48.1 to i8, !dbg !3715
  store i8 %66, ptr %was_partitioned, align 1, !dbg !3715
  %67 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3716
  %_58.0 = load ptr, ptr %67, align 8, !dbg !3716, !nonnull !24, !align !510, !noundef !24
  %68 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3716
  %_58.1 = load i64, ptr %68, align 8, !dbg !3716, !noundef !24
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h59d0703bd83b67daE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_57, ptr align 8 %_58.0, i64 %_58.1, i64 %_48.0, ptr align 8 @alloc_971270e5ffee50b341d575bd26c9235e) #10, !dbg !3716
  %69 = getelementptr inbounds { ptr, i64 }, ptr %_57, i32 0, i32 0, !dbg !3717
  %left.0 = load ptr, ptr %69, align 8, !dbg !3717, !nonnull !24, !align !510, !noundef !24
  %70 = getelementptr inbounds { ptr, i64 }, ptr %_57, i32 0, i32 1, !dbg !3717
  %left.1 = load i64, ptr %70, align 8, !dbg !3717, !noundef !24
  %71 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 0, !dbg !3717
  store ptr %left.0, ptr %71, align 8, !dbg !3717
  %72 = getelementptr inbounds { ptr, i64 }, ptr %left.dbg.spill, i32 0, i32 1, !dbg !3717
  store i64 %left.1, ptr %72, align 8, !dbg !3717
  call void @llvm.dbg.declare(metadata ptr %left.dbg.spill, metadata !3648, metadata !DIExpression()), !dbg !3718
  %73 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_57, i32 0, i32 1, !dbg !3719
  %74 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 0, !dbg !3719
  %right.0 = load ptr, ptr %74, align 8, !dbg !3719, !nonnull !24, !align !510, !noundef !24
  %75 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 1, !dbg !3719
  %right.1 = load i64, ptr %75, align 8, !dbg !3719, !noundef !24
  %76 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 0, !dbg !3719
  store ptr %right.0, ptr %76, align 8, !dbg !3719
  %77 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill, i32 0, i32 1, !dbg !3719
  store i64 %right.1, ptr %77, align 8, !dbg !3719
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill, metadata !3650, metadata !DIExpression()), !dbg !3720
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h59d0703bd83b67daE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_61, ptr align 8 %right.0, i64 %right.1, i64 1, ptr align 8 @alloc_06bcb3e9440cff471acdc9917714413b) #10, !dbg !3721
  %78 = getelementptr inbounds { ptr, i64 }, ptr %_61, i32 0, i32 0, !dbg !3722
  %pivot.0 = load ptr, ptr %78, align 8, !dbg !3722, !nonnull !24, !align !510, !noundef !24
  %79 = getelementptr inbounds { ptr, i64 }, ptr %_61, i32 0, i32 1, !dbg !3722
  %pivot.1 = load i64, ptr %79, align 8, !dbg !3722, !noundef !24
  %80 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 0, !dbg !3722
  store ptr %pivot.0, ptr %80, align 8, !dbg !3722
  %81 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill4, i32 0, i32 1, !dbg !3722
  store i64 %pivot.1, ptr %81, align 8, !dbg !3722
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill4, metadata !3651, metadata !DIExpression()), !dbg !3723
  %82 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_61, i32 0, i32 1, !dbg !3724
  %83 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 0, !dbg !3724
  %right.05 = load ptr, ptr %83, align 8, !dbg !3724, !nonnull !24, !align !510, !noundef !24
  %84 = getelementptr inbounds { ptr, i64 }, ptr %82, i32 0, i32 1, !dbg !3724
  %right.16 = load i64, ptr %84, align 8, !dbg !3724, !noundef !24
  %85 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 0, !dbg !3724
  store ptr %right.05, ptr %85, align 8, !dbg !3724
  %86 = getelementptr inbounds { ptr, i64 }, ptr %right.dbg.spill7, i32 0, i32 1, !dbg !3724
  store i64 %right.16, ptr %86, align 8, !dbg !3724
  call void @llvm.dbg.declare(metadata ptr %right.dbg.spill7, metadata !3653, metadata !DIExpression()), !dbg !3725
  %_65 = icmp ult i64 0, %pivot.1, !dbg !3726
  %87 = call i1 @llvm.expect.i1(i1 %_65, i1 true), !dbg !3726
  br i1 %87, label %bb34, label %panic8, !dbg !3726

panic3:                                           ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6a2abb486c72767951ddbfabb5cef306) #11, !dbg !3700
  unreachable, !dbg !3700

bb34:                                             ; preds = %bb29
  %pivot = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3727
  store ptr %pivot, ptr %pivot.dbg.spill9, align 8, !dbg !3727
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill9, metadata !3654, metadata !DIExpression()), !dbg !3728
  %_66 = icmp ult i64 %left.1, %right.16, !dbg !3729
  br i1 %_66, label %bb35, label %bb37, !dbg !3729

panic8:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 0, i64 %pivot.1, ptr align 8 @alloc_f8fe30ccfa6c382fc0c6802f54db9165) #11, !dbg !3726
  unreachable, !dbg !3726

bb37:                                             ; preds = %bb34
  store ptr %pivot, ptr %_76, align 8, !dbg !3730
  %_77 = load i32, ptr %limit, align 4, !dbg !3731, !noundef !24
  %88 = load ptr, ptr %_76, align 8, !dbg !3732, !align !510, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h23bf6e646aa98387E(ptr align 8 %right.05, i64 %right.16, ptr align 8 %is_less, ptr align 8 %88, i32 %_77) #10, !dbg !3732
  %89 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3733
  store ptr %left.0, ptr %89, align 8, !dbg !3733
  %90 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3733
  store i64 %left.1, ptr %90, align 8, !dbg !3733
  br label %bb1, !dbg !3734

bb35:                                             ; preds = %bb34
  %_72 = load ptr, ptr %pred, align 8, !dbg !3735, !align !510, !noundef !24
  %_73 = load i32, ptr %limit, align 4, !dbg !3736, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h23bf6e646aa98387E(ptr align 8 %left.0, i64 %left.1, ptr align 8 %is_less, ptr align 8 %_72, i32 %_73) #10, !dbg !3737
  %91 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 0, !dbg !3738
  store ptr %right.05, ptr %91, align 8, !dbg !3738
  %92 = getelementptr inbounds { ptr, i64 }, ptr %v, i32 0, i32 1, !dbg !3738
  store i64 %right.16, ptr %92, align 8, !dbg !3738
  store ptr %pivot, ptr %_74, align 8, !dbg !3739
  %93 = load ptr, ptr %_74, align 8, !dbg !3740, !align !510, !noundef !24
  store ptr %93, ptr %pred, align 8, !dbg !3740
  br label %bb1, !dbg !3734
}

; core::slice::sort::heapsort
; Function Attrs: cold noredzone nounwind
define void @_ZN4core5slice4sort8heapsort17h2d7da8b0b4574961E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %0) unnamed_addr #2 !dbg !3741 {
start:
  %i.dbg.spill3 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_36 = alloca i64, align 8
  %_33 = alloca { { ptr, i64 }, i64 }, align 8
  %_26 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_22 = alloca { i64, i64 }, align 8
  %_19 = alloca { { ptr, i64 }, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %sift_down = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3743, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3744, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.declare(metadata ptr %sift_down, metadata !3745, metadata !DIExpression()), !dbg !3763
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !3751, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !3755, metadata !DIExpression()), !dbg !3765
  store ptr %is_less, ptr %sift_down, align 8, !dbg !3766
  %_8 = udiv i64 %v.1, 2, !dbg !3767
  store i64 0, ptr %_7, align 8, !dbg !3768
  %3 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3768
  store i64 %_8, ptr %3, align 8, !dbg !3768
  %4 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3768
  %5 = load i64, ptr %4, align 8, !dbg !3768, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3768
  %7 = load i64, ptr %6, align 8, !dbg !3768, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %8 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h8aacf02eab854b71E(i64 %5, i64 %7) #10, !dbg !3768
  %_6.0 = extractvalue { i64, i64 } %8, 0, !dbg !3768
  %_6.1 = extractvalue { i64, i64 } %8, 1, !dbg !3768
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7d1ad3d13c2c46beE"(i64 %_6.0, i64 %_6.1) #10, !dbg !3768
  %_5.0 = extractvalue { i64, i64 } %9, 0, !dbg !3768
  %_5.1 = extractvalue { i64, i64 } %9, 1, !dbg !3768
  %10 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !3768
  store i64 %_5.0, ptr %10, align 8, !dbg !3768
  %11 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !3768
  store i64 %_5.1, ptr %11, align 8, !dbg !3768
  br label %bb4, !dbg !3769

bb4:                                              ; preds = %bb6, %start
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h80eeb9b610c0f8dcE"(ptr align 8 %iter) #10, !dbg !3764
  store { i64, i64 } %12, ptr %_13, align 8, !dbg !3764
  %_15 = load i64, ptr %_13, align 8, !dbg !3764, !range !1071, !noundef !24
  %13 = icmp eq i64 %_15, 0, !dbg !3764
  br i1 %13, label %bb8, label %bb6, !dbg !3764

bb8:                                              ; preds = %bb4
  store i64 1, ptr %_22, align 8, !dbg !3770
  %14 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3770
  store i64 %v.1, ptr %14, align 8, !dbg !3770
  %15 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 0, !dbg !3770
  %16 = load i64, ptr %15, align 8, !dbg !3770, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_22, i32 0, i32 1, !dbg !3770
  %18 = load i64, ptr %17, align 8, !dbg !3770, !noundef !24
; call core::iter::traits::iterator::Iterator::rev
  %19 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h8aacf02eab854b71E(i64 %16, i64 %18) #10, !dbg !3770
  %_21.0 = extractvalue { i64, i64 } %19, 0, !dbg !3770
  %_21.1 = extractvalue { i64, i64 } %19, 1, !dbg !3770
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7d1ad3d13c2c46beE"(i64 %_21.0, i64 %_21.1) #10, !dbg !3770
  %_20.0 = extractvalue { i64, i64 } %20, 0, !dbg !3770
  %_20.1 = extractvalue { i64, i64 } %20, 1, !dbg !3770
  %21 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 0, !dbg !3770
  store i64 %_20.0, ptr %21, align 8, !dbg !3770
  %22 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 1, !dbg !3770
  store i64 %_20.1, ptr %22, align 8, !dbg !3770
  br label %bb11, !dbg !3771

bb6:                                              ; preds = %bb4
  %23 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !3772
  %i = load i64, ptr %23, align 8, !dbg !3772, !noundef !24
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !3772
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3753, metadata !DIExpression()), !dbg !3773
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3774
  store ptr %v.0, ptr %24, align 8, !dbg !3774
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3774
  store i64 %v.1, ptr %25, align 8, !dbg !3774
  %26 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3774
  store i64 %i, ptr %26, align 8, !dbg !3774
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 0, !dbg !3774
  %28 = load ptr, ptr %27, align 8, !dbg !3774, !nonnull !24, !align !510, !noundef !24
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_19, i32 0, i32 1, !dbg !3774
  %30 = load i64, ptr %29, align 8, !dbg !3774, !noundef !24
  %31 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_19, i32 0, i32 1, !dbg !3774
  %32 = load i64, ptr %31, align 8, !dbg !3774, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h14d7d3d1900f16a8E"(ptr align 8 %sift_down, ptr align 8 %28, i64 %30, i64 %32) #10, !dbg !3774
  br label %bb4, !dbg !3774

bb11:                                             ; preds = %bb13, %bb8
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %33 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h80eeb9b610c0f8dcE"(ptr align 8 %iter1) #10, !dbg !3765
  store { i64, i64 } %33, ptr %_26, align 8, !dbg !3765
  %_28 = load i64, ptr %_26, align 8, !dbg !3765, !range !1071, !noundef !24
  %34 = icmp eq i64 %_28, 0, !dbg !3765
  br i1 %34, label %bb14, label %bb13, !dbg !3765

bb14:                                             ; preds = %bb11
  ret void, !dbg !3775

bb13:                                             ; preds = %bb11
  %35 = getelementptr inbounds { i64, i64 }, ptr %_26, i32 0, i32 1, !dbg !3776
  %i2 = load i64, ptr %35, align 8, !dbg !3776, !noundef !24
  store i64 %i2, ptr %i.dbg.spill3, align 8, !dbg !3776
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill3, metadata !3757, metadata !DIExpression()), !dbg !3777
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h3698e108c8304892E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %i2, ptr align 8 @alloc_dc7cc06f65f47d89307805f9ed1e1cb4) #10, !dbg !3778
  store i64 %i2, ptr %_36, align 8, !dbg !3779
  %36 = load i64, ptr %_36, align 8, !dbg !3780, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %37 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h52cc5b82e1a95684E"(ptr align 8 %v.0, i64 %v.1, i64 %36, ptr align 8 @alloc_218d542ba7d42d9731521fd943356c38) #10, !dbg !3780
  %_35.0 = extractvalue { ptr, i64 } %37, 0, !dbg !3780
  %_35.1 = extractvalue { ptr, i64 } %37, 1, !dbg !3780
  %38 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3781
  store ptr %_35.0, ptr %38, align 8, !dbg !3781
  %39 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3781
  store i64 %_35.1, ptr %39, align 8, !dbg !3781
  %40 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3781
  store i64 0, ptr %40, align 8, !dbg !3781
  %41 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 0, !dbg !3781
  %42 = load ptr, ptr %41, align 8, !dbg !3781, !nonnull !24, !align !510, !noundef !24
  %43 = getelementptr inbounds { ptr, i64 }, ptr %_33, i32 0, i32 1, !dbg !3781
  %44 = load i64, ptr %43, align 8, !dbg !3781, !noundef !24
  %45 = getelementptr inbounds { { ptr, i64 }, i64 }, ptr %_33, i32 0, i32 1, !dbg !3781
  %46 = load i64, ptr %45, align 8, !dbg !3781, !noundef !24
; call core::slice::sort::heapsort::{{closure}}
  call void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h14d7d3d1900f16a8E"(ptr align 8 %sift_down, ptr align 8 %42, i64 %44, i64 %46) #10, !dbg !3781
  br label %bb11, !dbg !3781

bb7:                                              ; No predecessors!
  unreachable, !dbg !3764
}

; core::slice::sort::heapsort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h14d7d3d1900f16a8E"(ptr align 8 %_1, ptr align 8 %v.0, i64 %v.1, i64 %0) unnamed_addr #0 !dbg !3782 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_35 = alloca { ptr, ptr }, align 8
  %_21 = alloca { ptr, ptr }, align 8
  %child = alloca i64, align 8
  %node = alloca i64, align 8
  store i64 %0, ptr %node, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !3789, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !3792
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3787, metadata !DIExpression()), !dbg !3793
  call void @llvm.dbg.declare(metadata ptr %node, metadata !3788, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.declare(metadata ptr %child, metadata !3790, metadata !DIExpression()), !dbg !3795
  br label %bb1, !dbg !3796

bb1:                                              ; preds = %bb16, %start
  %_6 = load i64, ptr %node, align 8, !dbg !3797, !noundef !24
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 %_6), !dbg !3798
  %_7.0 = extractvalue { i64, i1 } %3, 0, !dbg !3798
  %_7.1 = extractvalue { i64, i1 } %3, 1, !dbg !3798
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !3798
  br i1 %4, label %panic, label %bb2, !dbg !3798

bb2:                                              ; preds = %bb1
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7.0, i64 1), !dbg !3798
  %_8.0 = extractvalue { i64, i1 } %5, 0, !dbg !3798
  %_8.1 = extractvalue { i64, i1 } %5, 1, !dbg !3798
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3798
  br i1 %6, label %panic1, label %bb3, !dbg !3798

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_8c633453631874cfb45135c562495182) #11, !dbg !3798
  unreachable, !dbg !3798

bb3:                                              ; preds = %bb2
  store i64 %_8.0, ptr %child, align 8, !dbg !3798
  %_10 = load i64, ptr %child, align 8, !dbg !3799, !noundef !24
  %_9 = icmp uge i64 %_10, %v.1, !dbg !3799
  br i1 %_9, label %bb18, label %bb4, !dbg !3799

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_8c633453631874cfb45135c562495182) #11, !dbg !3798
  unreachable, !dbg !3798

bb4:                                              ; preds = %bb3
  %_15 = load i64, ptr %child, align 8, !dbg !3800, !noundef !24
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 1), !dbg !3800
  %_16.0 = extractvalue { i64, i1 } %7, 0, !dbg !3800
  %_16.1 = extractvalue { i64, i1 } %7, 1, !dbg !3800
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !3800
  br i1 %8, label %panic2, label %bb5, !dbg !3800

bb18:                                             ; preds = %bb14, %bb3
  ret void, !dbg !3801

bb5:                                              ; preds = %bb4
  %_13 = icmp ult i64 %_16.0, %v.1, !dbg !3800
  br i1 %_13, label %bb6, label %bb12, !dbg !3800

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_cced75eb33ad0d231589a125c7f2c71e) #11, !dbg !3800
  unreachable, !dbg !3800

bb12:                                             ; preds = %bb11, %bb5
  %_49 = load ptr, ptr %_1, align 8, !dbg !3802, !nonnull !24, !align !510, !noundef !24
  %_37 = load i64, ptr %node, align 8, !dbg !3803, !noundef !24
  %_39 = icmp ult i64 %_37, %v.1, !dbg !3804
  %9 = call i1 @llvm.expect.i1(i1 %_39, i1 true), !dbg !3804
  br i1 %9, label %bb13, label %panic7, !dbg !3804

bb6:                                              ; preds = %bb5
  %_48 = load ptr, ptr %_1, align 8, !dbg !3805, !nonnull !24, !align !510, !noundef !24
  %_23 = load i64, ptr %child, align 8, !dbg !3806, !noundef !24
  %_25 = icmp ult i64 %_23, %v.1, !dbg !3807
  %10 = call i1 @llvm.expect.i1(i1 %_25, i1 true), !dbg !3807
  br i1 %10, label %bb7, label %panic3, !dbg !3807

bb7:                                              ; preds = %bb6
  %_22 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_23, !dbg !3808
  %_28 = load i64, ptr %child, align 8, !dbg !3809, !noundef !24
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_28, i64 1), !dbg !3809
  %_29.0 = extractvalue { i64, i1 } %11, 0, !dbg !3809
  %_29.1 = extractvalue { i64, i1 } %11, 1, !dbg !3809
  %12 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !3809
  br i1 %12, label %panic4, label %bb8, !dbg !3809

panic3:                                           ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %_23, i64 %v.1, ptr align 8 @alloc_02d41e7169598a3cfcfd3f0d1c833ec2) #11, !dbg !3807
  unreachable, !dbg !3807

bb8:                                              ; preds = %bb7
  %_31 = icmp ult i64 %_29.0, %v.1, !dbg !3810
  %13 = call i1 @llvm.expect.i1(i1 %_31, i1 true), !dbg !3810
  br i1 %13, label %bb9, label %panic5, !dbg !3810

panic4:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_794be56d42be9995e3a84c84d26159ed) #11, !dbg !3809
  unreachable, !dbg !3809

bb9:                                              ; preds = %bb8
  %_26 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_29.0, !dbg !3811
  store ptr %_22, ptr %_21, align 8, !dbg !3805
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3805
  store ptr %_26, ptr %14, align 8, !dbg !3805
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 0, !dbg !3805
  %16 = load ptr, ptr %15, align 8, !dbg !3805, !nonnull !24, !align !510, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_21, i32 0, i32 1, !dbg !3805
  %18 = load ptr, ptr %17, align 8, !dbg !3805, !nonnull !24, !align !510, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_20 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hb784f0c5ee813df5E"(ptr align 8 %_48, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3805
  %_19 = zext i1 %_20 to i64, !dbg !3805
  %19 = load i64, ptr %child, align 8, !dbg !3812, !noundef !24
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 %_19), !dbg !3812
  %_32.0 = extractvalue { i64, i1 } %20, 0, !dbg !3812
  %_32.1 = extractvalue { i64, i1 } %20, 1, !dbg !3812
  %21 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !3812
  br i1 %21, label %panic6, label %bb11, !dbg !3812

panic5:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %_29.0, i64 %v.1, ptr align 8 @alloc_d32b57d7e285e3b164a125d44291af3f) #11, !dbg !3810
  unreachable, !dbg !3810

bb11:                                             ; preds = %bb9
  store i64 %_32.0, ptr %child, align 8, !dbg !3812
  br label %bb12, !dbg !3813

panic6:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_3f7ac4164e6f54924783af0ed6bc3c8d) #11, !dbg !3812
  unreachable, !dbg !3812

bb13:                                             ; preds = %bb12
  %_36 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_37, !dbg !3814
  %_41 = load i64, ptr %child, align 8, !dbg !3815, !noundef !24
  %_43 = icmp ult i64 %_41, %v.1, !dbg !3816
  %22 = call i1 @llvm.expect.i1(i1 %_43, i1 true), !dbg !3816
  br i1 %22, label %bb14, label %panic8, !dbg !3816

panic7:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %_37, i64 %v.1, ptr align 8 @alloc_5714221f35142e87516e8a17190398c5) #11, !dbg !3804
  unreachable, !dbg !3804

bb14:                                             ; preds = %bb13
  %_40 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %v.0, i64 0, i64 %_41, !dbg !3817
  store ptr %_36, ptr %_35, align 8, !dbg !3802
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3802
  store ptr %_40, ptr %23, align 8, !dbg !3802
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3802
  %25 = load ptr, ptr %24, align 8, !dbg !3802, !nonnull !24, !align !510, !noundef !24
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3802
  %27 = load ptr, ptr %26, align 8, !dbg !3802, !nonnull !24, !align !510, !noundef !24
; call core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_34 = call zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hb784f0c5ee813df5E"(ptr align 8 %_49, ptr align 8 %25, ptr align 8 %27) #10, !dbg !3802
  %_33 = xor i1 %_34, true, !dbg !3818
  br i1 %_33, label %bb18, label %bb16, !dbg !3818

panic8:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %_41, i64 %v.1, ptr align 8 @alloc_8b3b0b984669970c12a2c2d899b23d16) #11, !dbg !3816
  unreachable, !dbg !3816

bb16:                                             ; preds = %bb14
  %_45 = load i64, ptr %node, align 8, !dbg !3819, !noundef !24
  %_46 = load i64, ptr %child, align 8, !dbg !3820, !noundef !24
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h3698e108c8304892E"(ptr align 8 %v.0, i64 %v.1, i64 %_45, i64 %_46, ptr align 8 @alloc_4685547f2c3cd5dc1819afd3ce6280d4) #10, !dbg !3821
  %_47 = load i64, ptr %child, align 8, !dbg !3822, !noundef !24
  store i64 %_47, ptr %node, align 8, !dbg !3823
  br label %bb1, !dbg !3796
}

; core::slice::sort::partition
; Function Attrs: noredzone nounwind
define { i64, i8 } @_ZN4core5slice4sort9partition17h87f2ea1a3de93f87E(ptr align 8 %v.0, i64 %v.1, i64 %pivot, ptr align 8 %is_less) unnamed_addr #1 !dbg !3824 {
start:
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %was_partitioned.dbg.spill = alloca i8, align 1
  %mid.dbg.spill = alloca i64, align 8
  %pivot.dbg.spill7 = alloca ptr, align 8
  %pivot.dbg.spill6 = alloca ptr, align 8
  %v.dbg.spill4 = alloca { ptr, i64 }, align 8
  %pivot.dbg.spill1 = alloca { ptr, i64 }, align 8
  %is_less.dbg.spill = alloca ptr, align 8
  %pivot.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_60 = alloca { i64, i64 }, align 8
  %_47 = alloca { ptr, ptr }, align 8
  %_41 = alloca i8, align 1
  %_35 = alloca { ptr, ptr }, align 8
  %_30 = alloca i8, align 1
  %r = alloca i64, align 8
  %l = alloca i64, align 8
  %_pivot_guard = alloca { ptr, ptr }, align 8
  %_16 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %tmp = alloca %"core::mem::manually_drop::ManuallyDrop<bootinfo::memory_map::MemoryRegion>", align 8
  %_10 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_6 = alloca { i64, i8 }, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3828, metadata !DIExpression()), !dbg !3849
  store i64 %pivot, ptr %pivot.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill, metadata !3829, metadata !DIExpression()), !dbg !3850
  store ptr %is_less, ptr %is_less.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %is_less.dbg.spill, metadata !3830, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3839, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.declare(metadata ptr %_pivot_guard, metadata !3841, metadata !DIExpression()), !dbg !3853
  call void @llvm.dbg.declare(metadata ptr %l, metadata !3845, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.declare(metadata ptr %r, metadata !3847, metadata !DIExpression()), !dbg !3855
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h3698e108c8304892E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %pivot, ptr align 8 @alloc_a32d8ca4e4d506b0d34a470e4dcb5cd1) #10, !dbg !3856
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h59d0703bd83b67daE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) %_10, ptr align 8 %v.0, i64 %v.1, i64 1, ptr align 8 @alloc_e52ab9305e2b15d74c4e9ac02c87db27) #10, !dbg !3857
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 0, !dbg !3858
  %pivot.0 = load ptr, ptr %3, align 8, !dbg !3858, !nonnull !24, !align !510, !noundef !24
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_10, i32 0, i32 1, !dbg !3858
  %pivot.1 = load i64, ptr %4, align 8, !dbg !3858, !noundef !24
  %5 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 0, !dbg !3858
  store ptr %pivot.0, ptr %5, align 8, !dbg !3858
  %6 = getelementptr inbounds { ptr, i64 }, ptr %pivot.dbg.spill1, i32 0, i32 1, !dbg !3858
  store i64 %pivot.1, ptr %6, align 8, !dbg !3858
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill1, metadata !3834, metadata !DIExpression()), !dbg !3859
  %7 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_10, i32 0, i32 1, !dbg !3860
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !3860
  %v.02 = load ptr, ptr %8, align 8, !dbg !3860, !nonnull !24, !align !510, !noundef !24
  %9 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !3860
  %v.13 = load i64, ptr %9, align 8, !dbg !3860, !noundef !24
  %10 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 0, !dbg !3860
  store ptr %v.02, ptr %10, align 8, !dbg !3860
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill4, i32 0, i32 1, !dbg !3860
  store i64 %v.13, ptr %11, align 8, !dbg !3860
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill4, metadata !3836, metadata !DIExpression()), !dbg !3861
  %_14 = icmp ult i64 0, %pivot.1, !dbg !3862
  %12 = call i1 @llvm.expect.i1(i1 %_14, i1 true), !dbg !3862
  br i1 %12, label %bb3, label %panic, !dbg !3862

bb3:                                              ; preds = %start
  %pivot5 = getelementptr inbounds [0 x %"bootinfo::memory_map::MemoryRegion"], ptr %pivot.0, i64 0, i64 0, !dbg !3863
  store ptr %pivot5, ptr %pivot.dbg.spill6, align 8, !dbg !3863
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill6, metadata !3837, metadata !DIExpression()), !dbg !3864
; call core::ptr::read
  call void @_ZN4core3ptr4read17h9bbf8b811484d8b8E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_16, ptr %pivot5) #10, !dbg !3865
  call void @llvm.dbg.declare(metadata ptr %_16, metadata !1014, metadata !DIExpression()), !dbg !3866
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %_16, i64 24, i1 false), !dbg !3868
  store ptr %tmp, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2328, metadata !DIExpression()), !dbg !3869
  store ptr %tmp, ptr %_pivot_guard, align 8, !dbg !3871
  %13 = getelementptr inbounds { ptr, ptr }, ptr %_pivot_guard, i32 0, i32 1, !dbg !3871
  store ptr %pivot5, ptr %13, align 8, !dbg !3871
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2328, metadata !DIExpression()), !dbg !3872
  store ptr %tmp, ptr %pivot.dbg.spill7, align 8, !dbg !3874
  call void @llvm.dbg.declare(metadata ptr %pivot.dbg.spill7, metadata !3843, metadata !DIExpression()), !dbg !3875
  store i64 0, ptr %l, align 8, !dbg !3876
  store i64 %v.13, ptr %r, align 8, !dbg !3877
  br label %bb8, !dbg !3878

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 0, i64 %pivot.1, ptr align 8 @alloc_0b2a738361d208826a072b92b3acda46) #11, !dbg !3862
  unreachable, !dbg !3862

bb8:                                              ; preds = %bb15, %bb3
  %_32 = load i64, ptr %l, align 8, !dbg !3879, !noundef !24
  %_33 = load i64, ptr %r, align 8, !dbg !3880, !noundef !24
  %_31 = icmp ult i64 %_32, %_33, !dbg !3879
  br i1 %_31, label %bb10, label %bb9, !dbg !3879

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_30, align 1, !dbg !3879
  br label %bb11, !dbg !3879

bb10:                                             ; preds = %bb8
  %_39 = load i64, ptr %l, align 8, !dbg !3881, !noundef !24
; call core::slice::<impl [T]>::get_unchecked
  %_37 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %v.02, i64 %v.13, i64 %_39) #10, !dbg !3882
  store ptr %_37, ptr %_35, align 8, !dbg !3883
  %14 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3883
  store ptr %tmp, ptr %14, align 8, !dbg !3883
  %15 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 0, !dbg !3883
  %16 = load ptr, ptr %15, align 8, !dbg !3883, !nonnull !24, !align !510, !noundef !24
  %17 = getelementptr inbounds { ptr, ptr }, ptr %_35, i32 0, i32 1, !dbg !3883
  %18 = load ptr, ptr %17, align 8, !dbg !3883, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_34 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %16, ptr align 8 %18) #10, !dbg !3883
  %19 = zext i1 %_34 to i8, !dbg !3879
  store i8 %19, ptr %_30, align 1, !dbg !3879
  br label %bb11, !dbg !3879

bb11:                                             ; preds = %bb9, %bb10
  %20 = load i8, ptr %_30, align 1, !dbg !3879, !range !242, !noundef !24
  %21 = trunc i8 %20 to i1, !dbg !3879
  br i1 %21, label %bb14, label %bb16, !dbg !3879

bb16:                                             ; preds = %bb24, %bb11
  %_43 = load i64, ptr %l, align 8, !dbg !3884, !noundef !24
  %_44 = load i64, ptr %r, align 8, !dbg !3885, !noundef !24
  %_42 = icmp ult i64 %_43, %_44, !dbg !3884
  br i1 %_42, label %bb18, label %bb17, !dbg !3884

bb14:                                             ; preds = %bb11
  %22 = load i64, ptr %l, align 8, !dbg !3886, !noundef !24
  %23 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 1), !dbg !3886
  %_40.0 = extractvalue { i64, i1 } %23, 0, !dbg !3886
  %_40.1 = extractvalue { i64, i1 } %23, 1, !dbg !3886
  %24 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false), !dbg !3886
  br i1 %24, label %panic8, label %bb15, !dbg !3886

bb15:                                             ; preds = %bb14
  store i64 %_40.0, ptr %l, align 8, !dbg !3886
  br label %bb8, !dbg !3878

panic8:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_96c6545aa6432add279027414fe61766) #11, !dbg !3886
  unreachable, !dbg !3886

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_41, align 1, !dbg !3884
  br label %bb19, !dbg !3884

bb18:                                             ; preds = %bb16
  %_52 = load i64, ptr %r, align 8, !dbg !3887, !noundef !24
  %_53.0 = sub i64 %_52, 1, !dbg !3887
  %_53.1 = icmp ult i64 %_52, 1, !dbg !3887
  %25 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !3887
  br i1 %25, label %panic9, label %bb20, !dbg !3887

bb20:                                             ; preds = %bb18
; call core::slice::<impl [T]>::get_unchecked
  %_49 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E"(ptr align 8 %v.02, i64 %v.13, i64 %_53.0) #10, !dbg !3888
  store ptr %_49, ptr %_47, align 8, !dbg !3889
  %26 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !3889
  store ptr %tmp, ptr %26, align 8, !dbg !3889
  %27 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 0, !dbg !3889
  %28 = load ptr, ptr %27, align 8, !dbg !3889, !nonnull !24, !align !510, !noundef !24
  %29 = getelementptr inbounds { ptr, ptr }, ptr %_47, i32 0, i32 1, !dbg !3889
  %30 = load ptr, ptr %29, align 8, !dbg !3889, !nonnull !24, !align !510, !noundef !24
; call core::slice::<impl [T]>::sort_unstable_by::{{closure}}
  %_46 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E"(ptr align 8 %is_less, ptr align 8 %28, ptr align 8 %30) #10, !dbg !3889
  %_45 = xor i1 %_46, true, !dbg !3890
  %31 = zext i1 %_45 to i8, !dbg !3884
  store i8 %31, ptr %_41, align 1, !dbg !3884
  br label %bb19, !dbg !3884

panic9:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_0b6e8a57da681e1fb7c4d0e2204e6a73) #11, !dbg !3887
  unreachable, !dbg !3887

bb19:                                             ; preds = %bb17, %bb20
  %32 = load i8, ptr %_41, align 1, !dbg !3884, !range !242, !noundef !24
  %33 = trunc i8 %32 to i1, !dbg !3884
  br i1 %33, label %bb23, label %bb25, !dbg !3884

bb25:                                             ; preds = %bb19
  %_56 = load i64, ptr %l, align 8, !dbg !3891, !noundef !24
  %_61 = load i64, ptr %l, align 8, !dbg !3892, !noundef !24
  %_62 = load i64, ptr %r, align 8, !dbg !3893, !noundef !24
  store i64 %_61, ptr %_60, align 8, !dbg !3892
  %34 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !3892
  store i64 %_62, ptr %34, align 8, !dbg !3892
  %35 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 0, !dbg !3894
  %36 = load i64, ptr %35, align 8, !dbg !3894, !noundef !24
  %37 = getelementptr inbounds { i64, i64 }, ptr %_60, i32 0, i32 1, !dbg !3894
  %38 = load i64, ptr %37, align 8, !dbg !3894, !noundef !24
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %39 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h176acecc10d58840E"(ptr align 8 %v.02, i64 %v.13, i64 %36, i64 %38, ptr align 8 @alloc_b0c68aa41aa72af376e4904f7447f27d) #10, !dbg !3894
  %_59.0 = extractvalue { ptr, i64 } %39, 0, !dbg !3894
  %_59.1 = extractvalue { ptr, i64 } %39, 1, !dbg !3894
; call core::slice::sort::partition_in_blocks
  %_57 = call i64 @_ZN4core5slice4sort19partition_in_blocks17h407c8ed58cf84055E(ptr align 8 %_59.0, i64 %_59.1, ptr align 8 %tmp, ptr align 8 %is_less) #10, !dbg !3895
  %40 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_56, i64 %_57), !dbg !3891
  %_63.0 = extractvalue { i64, i1 } %40, 0, !dbg !3891
  %_63.1 = extractvalue { i64, i1 } %40, 1, !dbg !3891
  %41 = call i1 @llvm.expect.i1(i1 %_63.1, i1 false), !dbg !3891
  br i1 %41, label %panic11, label %bb28, !dbg !3891

bb23:                                             ; preds = %bb19
  %42 = load i64, ptr %r, align 8, !dbg !3896, !noundef !24
  %_54.0 = sub i64 %42, 1, !dbg !3896
  %_54.1 = icmp ult i64 %42, 1, !dbg !3896
  %43 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !3896
  br i1 %43, label %panic10, label %bb24, !dbg !3896

bb24:                                             ; preds = %bb23
  store i64 %_54.0, ptr %r, align 8, !dbg !3896
  br label %bb16, !dbg !3897

panic10:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_a38e39bd8e066eb11cb79be2a1a30355) #11, !dbg !3896
  unreachable, !dbg !3896

bb28:                                             ; preds = %bb25
  %_65 = load i64, ptr %l, align 8, !dbg !3898, !noundef !24
  %_66 = load i64, ptr %r, align 8, !dbg !3899, !noundef !24
  %_64 = icmp uge i64 %_65, %_66, !dbg !3898
  store i64 %_63.0, ptr %_6, align 8, !dbg !3900
  %44 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3900
  %45 = zext i1 %_64 to i8, !dbg !3900
  store i8 %45, ptr %44, align 8, !dbg !3900
; call core::ptr::drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>
  call void @"_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hf11a1c24d41b52e3E"(ptr %_pivot_guard) #10, !dbg !3901
  %mid = load i64, ptr %_6, align 8, !dbg !3902, !noundef !24
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !3902
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !3831, metadata !DIExpression()), !dbg !3903
  %46 = getelementptr inbounds { i64, i8 }, ptr %_6, i32 0, i32 1, !dbg !3904
  %47 = load i8, ptr %46, align 8, !dbg !3904, !range !242, !noundef !24
  %was_partitioned = trunc i8 %47 to i1, !dbg !3904
  %48 = zext i1 %was_partitioned to i8, !dbg !3904
  store i8 %48, ptr %was_partitioned.dbg.spill, align 1, !dbg !3904
  call void @llvm.dbg.declare(metadata ptr %was_partitioned.dbg.spill, metadata !3833, metadata !DIExpression()), !dbg !3905
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h3698e108c8304892E"(ptr align 8 %v.0, i64 %v.1, i64 0, i64 %mid, ptr align 8 @alloc_62f31cc339340f8d2589d3fbbff1b89f) #10, !dbg !3906
  store i64 %mid, ptr %0, align 8, !dbg !3907
  %49 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !3907
  %50 = zext i1 %was_partitioned to i8, !dbg !3907
  store i8 %50, ptr %49, align 8, !dbg !3907
  %51 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 0, !dbg !3908
  %52 = load i64, ptr %51, align 8, !dbg !3908, !noundef !24
  %53 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !3908
  %54 = load i8, ptr %53, align 8, !dbg !3908, !range !242, !noundef !24
  %55 = trunc i8 %54 to i1, !dbg !3908
  %56 = zext i1 %55 to i8, !dbg !3908
  %57 = insertvalue { i64, i8 } poison, i64 %52, 0, !dbg !3908
  %58 = insertvalue { i64, i8 } %57, i8 %56, 1, !dbg !3908
  ret { i64, i8 } %58, !dbg !3908

panic11:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_b173b94e8487e85973e5816a197e44e8) #11, !dbg !3891
  unreachable, !dbg !3891
}

; core::slice::sort::quicksort
; Function Attrs: noredzone nounwind
define void @_ZN4core5slice4sort9quicksort17h903c0e9efaa64e95E(ptr align 8 %v.0, i64 %v.1, ptr align 1 %0) unnamed_addr #1 !dbg !3909 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %limit.dbg.spill = alloca i32, align 4
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca ptr, align 8
  %is_less = alloca ptr, align 8
  store ptr %0, ptr %is_less, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3913, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.declare(metadata ptr %is_less, metadata !3914, metadata !DIExpression()), !dbg !3918
  br i1 false, label %bb1, label %bb2, !dbg !3919

bb2:                                              ; preds = %start
  store i64 %v.1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3920, metadata !DIExpression()), !dbg !3923
  %4 = call i64 @llvm.ctlz.i64(i64 %v.1, i1 false), !dbg !3925
  store i64 %4, ptr %1, align 8, !dbg !3925
  %_2.i = load i64, ptr %1, align 8, !dbg !3925, !noundef !24
  %5 = trunc i64 %_2.i to i32, !dbg !3925
  %_8.0 = sub i32 64, %5, !dbg !3926
  %_8.1 = icmp ult i32 64, %5, !dbg !3926
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !3926
  br i1 %6, label %panic, label %bb4, !dbg !3926

bb1:                                              ; preds = %start
  br label %bb6, !dbg !3927

bb6:                                              ; preds = %bb4, %bb1
  ret void, !dbg !3928

bb4:                                              ; preds = %bb2
  store i32 %_8.0, ptr %limit.dbg.spill, align 4, !dbg !3926
  call void @llvm.dbg.declare(metadata ptr %limit.dbg.spill, metadata !3915, metadata !DIExpression()), !dbg !3929
  store ptr null, ptr %_11, align 8, !dbg !3930
  %7 = load ptr, ptr %_11, align 8, !dbg !3931, !align !510, !noundef !24
; call core::slice::sort::recurse
  call void @_ZN4core5slice4sort7recurse17h23bf6e646aa98387E(ptr align 8 %v.0, i64 %v.1, ptr align 8 %is_less, ptr align 8 %7, i32 %_8.0) #10, !dbg !3931
  br label %bb6, !dbg !3927

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_da17763e772b00039467b49b69f200eb) #11, !dbg !3926
  unreachable, !dbg !3926
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hbe1026989b58af50E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !3932 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3937, metadata !DIExpression()), !dbg !3939
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3938, metadata !DIExpression()), !dbg !3940
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17haff5e48139e6d51eE"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3941
  %6 = extractvalue { ptr, i64 } %5, 0, !dbg !3941
  %7 = extractvalue { ptr, i64 } %5, 1, !dbg !3941
  %8 = insertvalue { ptr, i64 } poison, ptr %6, 0, !dbg !3942
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !3942
  ret { ptr, i64 } %9, !dbg !3942
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h176acecc10d58840E"(ptr align 8 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 !dbg !3943 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3948, metadata !DIExpression()), !dbg !3950
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3949, metadata !DIExpression()), !dbg !3951
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf93e08869586640aE"(i64 %index.0, i64 %index.1, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3952
  %_3.0 = extractvalue { ptr, i64 } %5, 0, !dbg !3952
  %_3.1 = extractvalue { ptr, i64 } %5, 1, !dbg !3952
  %6 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !3953
  %7 = insertvalue { ptr, i64 } %6, i64 %_3.1, 1, !dbg !3953
  ret { ptr, i64 } %7, !dbg !3953
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h52cc5b82e1a95684E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !3954 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3958, metadata !DIExpression()), !dbg !3962
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3959, metadata !DIExpression()), !dbg !3963
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd9bac579f2e3e23fE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3964
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3964
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3964
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !3965
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !3965
  ret { ptr, i64 } %5, !dbg !3965
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h53f902d89aab6c39E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !3966 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3970, metadata !DIExpression()), !dbg !3974
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3971, metadata !DIExpression()), !dbg !3975
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd547e1811f3e4269E"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3976
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3976
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3976
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !3977
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !3977
  ret { ptr, i64 } %5, !dbg !3977
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h7ba1bf620277e648E"(ptr align 8 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 !dbg !3978 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3982, metadata !DIExpression()), !dbg !3986
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3983, metadata !DIExpression()), !dbg !3987
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { ptr, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h0a361e9ac236b6adE"(i64 %index, ptr align 8 %self.0, i64 %self.1, ptr align 8 %0) #10, !dbg !3988
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3988
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3988
  %4 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !3989
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !3989
  ret { ptr, i64 } %5, !dbg !3989
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h583182ffc0284589E"(ptr sret(%"bootinfo::TlsTemplate") %0, ptr %self, ptr %default) unnamed_addr #0 !dbg !3990 {
start:
  %_5 = alloca i8, align 1
  %x = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4006, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.declare(metadata ptr %default, metadata !4007, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.declare(metadata ptr %x, metadata !4008, metadata !DIExpression()), !dbg !4012
  store i8 0, ptr %_5, align 1, !dbg !4013
  store i8 1, ptr %_5, align 1, !dbg !4013
  %_3 = load i64, ptr %self, align 8, !dbg !4013, !range !1071, !noundef !24
  %1 = icmp eq i64 %_3, 0, !dbg !4014
  br i1 %1, label %bb1, label %bb3, !dbg !4014

bb1:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !4015
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %default, i64 24, i1 false), !dbg !4015
  br label %bb6, !dbg !4015

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %self, i32 0, i32 1, !dbg !4016
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %2, i64 24, i1 false), !dbg !4016
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %x, i64 24, i1 false), !dbg !4017
  br label %bb6, !dbg !4018

bb2:                                              ; No predecessors!
  unreachable, !dbg !4013

bb6:                                              ; preds = %bb1, %bb3
  %3 = load i8, ptr %_5, align 1, !dbg !4019, !range !242, !noundef !24
  %4 = trunc i8 %3 to i1, !dbg !4019
  br i1 %4, label %bb5, label %bb4, !dbg !4019

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !4020

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !4019
}

; <core::cmp::Ordering as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h29e22795268aad95E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !4021 {
start:
  %__arg1_tag.dbg.spill = alloca i8, align 1
  %__self_tag.dbg.spill = alloca i8, align 1
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4027, metadata !DIExpression()), !dbg !4033
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !4028, metadata !DIExpression()), !dbg !4033
  %__self_tag = load i8, ptr %self, align 1, !dbg !4033, !range !745, !noundef !24
  store i8 %__self_tag, ptr %__self_tag.dbg.spill, align 1, !dbg !4033
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill, metadata !4029, metadata !DIExpression()), !dbg !4034
  %__arg1_tag = load i8, ptr %other, align 1, !dbg !4034, !range !745, !noundef !24
  store i8 %__arg1_tag, ptr %__arg1_tag.dbg.spill, align 1, !dbg !4034
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill, metadata !4031, metadata !DIExpression()), !dbg !4035
  %0 = icmp eq i8 %__self_tag, %__arg1_tag, !dbg !4035
  ret i1 %0, !dbg !4036
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3761bf7223d13674E"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !4037 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4045, metadata !DIExpression()), !dbg !4047
  %2 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !4048
  %3 = insertvalue { ptr, ptr } %2, ptr %self.1, 1, !dbg !4048
  ret { ptr, ptr } %3, !dbg !4048
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h99d4e103d214d05bE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !4049 {
start:
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca i64, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, { ptr, i64 } }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4054, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4056, metadata !DIExpression()), !dbg !4059
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !4055, metadata !DIExpression()), !dbg !4060
  br i1 true, label %bb1, label %bb2, !dbg !4061

bb2:                                              ; preds = %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hb4d7400099143190E.exit", %start
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h54c6b9f4248a570dE"(ptr %slice.0, i64 %slice.1) #10, !dbg !4062
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !200, metadata !DIExpression()), !dbg !4063
  store i64 %self, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !210, metadata !DIExpression()), !dbg !4065
  store ptr %_6, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !214, metadata !DIExpression()), !dbg !4066
  store i64 %self, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !220, metadata !DIExpression()), !dbg !4068
  %3 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_6, i64 %self, !dbg !4069
  store ptr %3, ptr %0, align 8, !dbg !4069
  %4 = load ptr, ptr %0, align 8, !dbg !4069, !noundef !24
  ret ptr %4, !dbg !4070

bb1:                                              ; preds = %start
  store i64 %self, ptr %_5, align 8, !dbg !4061
  %5 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !4061
  %6 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 0, !dbg !4061
  store ptr %slice.0, ptr %6, align 8, !dbg !4061
  %7 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 1, !dbg !4061
  store i64 %slice.1, ptr %7, align 8, !dbg !4061
  %8 = load i64, ptr %_5, align 8, !dbg !4061, !noundef !24
  %9 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_5, i32 0, i32 1, !dbg !4061
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !4061
  %11 = load ptr, ptr %10, align 8, !dbg !4061, !noundef !24
  %12 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !4061
  %13 = load i64, ptr %12, align 8, !dbg !4061, !noundef !24
  store i64 %8, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !4071, metadata !DIExpression()), !dbg !4078
  store ptr %11, ptr %slice.dbg.spill.i, align 8
  %14 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %13, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !4077, metadata !DIExpression()), !dbg !4078
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h350a4060caf8200cE"(ptr %11, i64 %13) #10, !dbg !4080
  %_4.i = icmp ult i64 %8, %_5.i, !dbg !4082
  %_3.i = xor i1 %_4.i, true, !dbg !4083
  br i1 %_3.i, label %bb2.i, label %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hb4d7400099143190E.exit", !dbg !4083

bb2.i:                                            ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1 @alloc_b3b3c2a7efcea294ef431b7ed1abebea, i64 97) #11, !dbg !4084
  unreachable, !dbg !4084

"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hb4d7400099143190E.exit": ; preds = %bb1
  br label %bb2, !dbg !4061
}

; <core::slice::sort::InsertionHole<T> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h459d39f427c87586E"(ptr align 8 %self) unnamed_addr #1 !dbg !4085 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4091, metadata !DIExpression()), !dbg !4092
  %_3 = load ptr, ptr %self, align 8, !dbg !4093, !noundef !24
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4094
  %_4 = load ptr, ptr %0, align 8, !dbg !4094, !noundef !24
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E(ptr %_3, ptr %_4, i64 1) #10, !dbg !4095
  ret void, !dbg !4096
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h87ad7e6cefe6e715E"(ptr align 8 %self) unnamed_addr #0 !dbg !4097 {
start:
  %self.dbg.spill.i5.i = alloca ptr, align 8
  %self.dbg.spill.i4.i = alloca ptr, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca ptr, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %old.dbg.spill.i = alloca ptr, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4104, metadata !DIExpression()), !dbg !4105
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4106
  %_5 = load ptr, ptr %3, align 8, !dbg !4106, !nonnull !24, !noundef !24
  store ptr %_5, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !4107, metadata !DIExpression()), !dbg !4112
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd185ac7ae47d39a4E"(ptr %_5) #10, !dbg !4106
  %_2 = xor i1 %_3, true, !dbg !4114
  call void @llvm.assume(i1 %_2), !dbg !4115
  br i1 true, label %bb3, label %bb5, !dbg !4116

bb5:                                              ; preds = %bb3, %start
  %4 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4117
  %_13 = load ptr, ptr %4, align 8, !dbg !4117, !nonnull !24, !noundef !24
  store ptr %_13, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4107, metadata !DIExpression()), !dbg !4118
  %_14 = load ptr, ptr %self, align 8, !dbg !4117, !noundef !24
  %_10 = icmp eq ptr %_13, %_14, !dbg !4117
  br i1 %_10, label %bb7, label %bb8, !dbg !4117

bb3:                                              ; preds = %start
  %_9 = load ptr, ptr %self, align 8, !dbg !4120, !noundef !24
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf52a54f7e512b4a6E"(ptr %_9) #10, !dbg !4120
  %_7 = xor i1 %_8, true, !dbg !4121
  call void @llvm.assume(i1 %_7), !dbg !4122
  br label %bb5, !dbg !4123

bb8:                                              ; preds = %bb5
  store ptr %self, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !4124, metadata !DIExpression()), !dbg !4132
  store i64 1, ptr %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill.i, metadata !4129, metadata !DIExpression()), !dbg !4134
  %5 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4135
  %_9.i = load ptr, ptr %5, align 8, !dbg !4135, !nonnull !24, !noundef !24
  store ptr %_9.i, ptr %self.dbg.spill.i5.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5.i, metadata !4107, metadata !DIExpression()), !dbg !4136
  store ptr %_9.i, ptr %old.dbg.spill.i, align 8, !dbg !4135
  call void @llvm.dbg.declare(metadata ptr %old.dbg.spill.i, metadata !4130, metadata !DIExpression()), !dbg !4138
  %6 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4139
  %_13.i = load ptr, ptr %6, align 8, !dbg !4139, !nonnull !24, !noundef !24
  store ptr %_13.i, ptr %self.dbg.spill.i4.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4.i, metadata !4107, metadata !DIExpression()), !dbg !4140
  store ptr %_13.i, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !276, metadata !DIExpression()), !dbg !4142
  store i64 1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !282, metadata !DIExpression()), !dbg !4144
  store ptr %_13.i, ptr %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2.i, metadata !286, metadata !DIExpression()), !dbg !4145
  store i64 1, ptr %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1.i, metadata !291, metadata !DIExpression()), !dbg !4147
  %7 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %_13.i, i64 1, !dbg !4148
  store ptr %7, ptr %0, align 8, !dbg !4148
  %_3.i.i = load ptr, ptr %0, align 8, !dbg !4148, !noundef !24
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_10.i = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd2f969f601200b1eE"(ptr %_3.i.i) #10, !dbg !4149
  %8 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4150
  store ptr %_10.i, ptr %8, align 8, !dbg !4150
  store ptr %_9.i, ptr %1, align 8, !dbg !4151
  %9 = load ptr, ptr %1, align 8, !dbg !4152, !noundef !24
  store ptr %9, ptr %2, align 8, !dbg !4153
  br label %bb10, !dbg !4154

bb7:                                              ; preds = %bb5
  store ptr null, ptr %2, align 8, !dbg !4155
  br label %bb10, !dbg !4154

bb10:                                             ; preds = %bb8, %bb7
  %10 = load ptr, ptr %2, align 8, !dbg !4156, !align !510, !noundef !24
  ret ptr %10, !dbg !4156
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17he1e266e8c4f61001E"(ptr align 8 %self) unnamed_addr #0 !dbg !4157 {
start:
  %self.dbg.spill.i7 = alloca ptr, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %x.dbg.spill = alloca ptr, align 8
  %start.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_19 = alloca ptr, align 8
  %_14 = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  %predicate = alloca %"[closure@/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/bootinfo/memory_map.rs:58:70: 58:73]", align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4162, metadata !DIExpression()), !dbg !4174
  call void @llvm.dbg.declare(metadata ptr %predicate, metadata !4163, metadata !DIExpression()), !dbg !4175
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4164, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.declare(metadata ptr %i, metadata !4168, metadata !DIExpression()), !dbg !4177
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !4178
  %start1 = load ptr, ptr %1, align 8, !dbg !4178, !nonnull !24, !noundef !24
  store ptr %start1, ptr %start.dbg.spill, align 8, !dbg !4178
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !4166, metadata !DIExpression()), !dbg !4179
  br i1 false, label %bb1, label %bb5, !dbg !4179

bb5:                                              ; preds = %start
  %_10 = load ptr, ptr %self, align 8, !dbg !4179, !noundef !24
  store ptr %start1, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !4107, metadata !DIExpression()), !dbg !4180
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %2 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h292edb86da6528a0E"(ptr %_10, ptr %start1) #10, !dbg !4179
  store i64 %2, ptr %n, align 8, !dbg !4179
  br label %bb7, !dbg !4179

bb1:                                              ; preds = %start
  %_7 = load ptr, ptr %self, align 8, !dbg !4179, !noundef !24
  store ptr %_7, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !548, metadata !DIExpression()), !dbg !4182
  store ptr %_7, ptr %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i7, metadata !555, metadata !DIExpression()), !dbg !4184
  %3 = ptrtoint ptr %_7 to i64, !dbg !4186
  store ptr %start1, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !4107, metadata !DIExpression()), !dbg !4187
  store ptr %start1, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3485, metadata !DIExpression()), !dbg !4189
  store ptr %start1, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !1288, metadata !DIExpression()), !dbg !4191
  %4 = ptrtoint ptr %start1 to i64, !dbg !4193
  store i64 %3, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4194, metadata !DIExpression()), !dbg !4200
  store i64 %4, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !4199, metadata !DIExpression()), !dbg !4202
  %5 = sub i64 %3, %4, !dbg !4203
  store i64 %5, ptr %n, align 8, !dbg !4179
  br label %bb7, !dbg !4179

bb7:                                              ; preds = %bb5, %bb1
  store i64 0, ptr %i, align 8, !dbg !4204
  br label %bb8, !dbg !4205

bb8:                                              ; preds = %bb14, %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %6 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h87ad7e6cefe6e715E"(ptr align 8 %self) #10, !dbg !4206
  store ptr %6, ptr %_14, align 8, !dbg !4206
  %7 = load ptr, ptr %_14, align 8, !dbg !4207, !noundef !24
  %8 = ptrtoint ptr %7 to i64, !dbg !4207
  %9 = icmp eq i64 %8, 0, !dbg !4207
  %_15 = select i1 %9, i64 0, i64 1, !dbg !4207
  %10 = icmp eq i64 %_15, 1, !dbg !4207
  br i1 %10, label %bb10, label %bb15, !dbg !4207

bb10:                                             ; preds = %bb8
  %x = load ptr, ptr %_14, align 8, !dbg !4208, !nonnull !24, !align !510, !noundef !24
  store ptr %x, ptr %x.dbg.spill, align 8, !dbg !4208
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4170, metadata !DIExpression()), !dbg !4208
  store ptr %x, ptr %_19, align 8, !dbg !4209
  %11 = load ptr, ptr %_19, align 8, !dbg !4209, !nonnull !24, !align !510, !noundef !24
; call bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
  %_17 = call zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17hdd03e0a910a0aaf0E"(ptr align 1 %predicate, ptr align 8 %11) #10, !dbg !4209
  br i1 %_17, label %bb12, label %bb13, !dbg !4209

bb15:                                             ; preds = %bb8
  store i64 0, ptr %0, align 8, !dbg !4210
  br label %bb16, !dbg !4211

bb16:                                             ; preds = %bb12, %bb15
  %12 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4212
  %13 = load i64, ptr %12, align 8, !dbg !4212, !range !1071, !noundef !24
  %14 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4212
  %15 = load i64, ptr %14, align 8, !dbg !4212
  %16 = insertvalue { i64, i64 } poison, i64 %13, 0, !dbg !4212
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1, !dbg !4212
  ret { i64, i64 } %17, !dbg !4212

bb13:                                             ; preds = %bb10
  %18 = load i64, ptr %i, align 8, !dbg !4213, !noundef !24
  %19 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %18, i64 1), !dbg !4213
  %_24.0 = extractvalue { i64, i1 } %19, 0, !dbg !4213
  %_24.1 = extractvalue { i64, i1 } %19, 1, !dbg !4213
  %20 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !4213
  br i1 %20, label %panic, label %bb14, !dbg !4213

bb12:                                             ; preds = %bb10
  %_21 = load i64, ptr %i, align 8, !dbg !4214, !noundef !24
  %_22 = load i64, ptr %n, align 8, !dbg !4215, !noundef !24
  %_20 = icmp ult i64 %_21, %_22, !dbg !4214
  call void @llvm.assume(i1 %_20), !dbg !4216
  %_23 = load i64, ptr %i, align 8, !dbg !4217, !noundef !24
  %21 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4218
  store i64 %_23, ptr %21, align 8, !dbg !4218
  store i64 1, ptr %0, align 8, !dbg !4218
  br label %bb16, !dbg !4211

bb14:                                             ; preds = %bb13
  store i64 %_24.0, ptr %i, align 8, !dbg !4213
  br label %bb8, !dbg !4205

panic:                                            ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_0943d9cf8c1b2e3a95fc7ea34abb4c1f) #11, !dbg !4213
  unreachable, !dbg !4213
}

; bootloader::bootinfo::memory_map::MemoryMap::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h19581f2cdc968dfcE(ptr sret(%"bootinfo::memory_map::MemoryMap") %0) unnamed_addr #1 !dbg !4219 {
start:
  %_2 = alloca %"bootinfo::memory_map::MemoryRegion", align 8
  %_1 = alloca [64 x %"bootinfo::memory_map::MemoryRegion"], align 8
; call bootloader::bootinfo::memory_map::MemoryRegion::empty
  call void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h7846679ddb33f5d1E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %_2) #10, !dbg !4223
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 0, !dbg !4224
  %2 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %_1, i64 0, i64 64, !dbg !4224
  br label %repeat_loop_header, !dbg !4224

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %3 = phi ptr [ %1, %start ], [ %5, %repeat_loop_body ]
  %4 = icmp ne ptr %3, %2
  br i1 %4, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_2, i64 24, i1 false)
  %5 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %3, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_1, i64 1536, i1 false), !dbg !4225
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %0, i32 0, i32 1, !dbg !4225
  store i64 0, ptr %6, align 8, !dbg !4225
  ret void, !dbg !4226
}

; bootloader::bootinfo::memory_map::MemoryMap::add_region
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17ha28c1bb8fc49505bE(ptr align 8 %self, ptr %region) unnamed_addr #1 !dbg !4227 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4232, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4233, metadata !DIExpression()), !dbg !4235
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h447656e1418596dcE(ptr align 8 %self) #10, !dbg !4236
  %_4 = icmp ult i64 %_5, 64, !dbg !4236
  %_3 = xor i1 %_4, true, !dbg !4237
  br i1 %_3, label %bb2, label %bb3, !dbg !4237

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_8 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h447656e1418596dcE(ptr align 8 %self) #10, !dbg !4238
  %_11 = icmp ult i64 %_8, 64, !dbg !4239
  %0 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !4239
  br i1 %0, label %bb5, label %panic, !dbg !4239

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @alloc_377fe4797e3690987ab15f0122f4880b, i64 37, ptr align 8 @alloc_7196c88dea27a90737fe52164bfa6d4b) #11, !dbg !4237
  unreachable, !dbg !4237

bb5:                                              ; preds = %bb3
  %1 = getelementptr inbounds [64 x %"bootinfo::memory_map::MemoryRegion"], ptr %self, i64 0, i64 %_8, !dbg !4239
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %region, i64 24, i1 false), !dbg !4239
  %2 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4240
  %3 = load i64, ptr %2, align 8, !dbg !4240, !noundef !24
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %3, i64 1), !dbg !4240
  %_12.0 = extractvalue { i64, i1 } %4, 0, !dbg !4240
  %_12.1 = extractvalue { i64, i1 } %4, 1, !dbg !4240
  %5 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !4240
  br i1 %5, label %panic1, label %bb6, !dbg !4240

panic:                                            ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64 %_8, i64 64, ptr align 8 @alloc_e65e0ba17a4d9de8b42e16f5ae86b726) #11, !dbg !4239
  unreachable, !dbg !4239

bb6:                                              ; preds = %bb5
  %6 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4240
  store i64 %_12.0, ptr %6, align 8, !dbg !4240
; call bootloader::bootinfo::memory_map::MemoryMap::sort
  call void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h0675b1819533f2e2E(ptr align 8 %self) #10, !dbg !4241
  ret void, !dbg !4242

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_6248fd711ab5313acabe549160484394) #11, !dbg !4240
  unreachable, !dbg !4240
}

; bootloader::bootinfo::memory_map::MemoryMap::sort
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h0675b1819533f2e2E(ptr align 8 %self) unnamed_addr #1 !dbg !4243 {
start:
  %first_zero_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca { ptr, ptr }, align 8
  %_5 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4247, metadata !DIExpression()), !dbg !4250
; call core::slice::<impl [T]>::sort_unstable_by
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h79a58ecc265a23b4E"(ptr align 8 %self, i64 64) #10, !dbg !4251
; call core::slice::<impl [T]>::iter
  %0 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h2eb88a55d98b1b0cE"(ptr align 8 %self, i64 64) #10, !dbg !4252
  store { ptr, ptr } %0, ptr %_7, align 8, !dbg !4252
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %1 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17he1e266e8c4f61001E"(ptr align 8 %_7) #10, !dbg !4252
  store { i64, i64 } %1, ptr %_5, align 8, !dbg !4252
  %_10 = load i64, ptr %_5, align 8, !dbg !4253, !range !1071, !noundef !24
  %2 = icmp eq i64 %_10, 1, !dbg !4253
  br i1 %2, label %bb4, label %bb5, !dbg !4253

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4254
  %first_zero_index = load i64, ptr %3, align 8, !dbg !4254, !noundef !24
  store i64 %first_zero_index, ptr %first_zero_index.dbg.spill, align 8, !dbg !4254
  call void @llvm.dbg.declare(metadata ptr %first_zero_index.dbg.spill, metadata !4248, metadata !DIExpression()), !dbg !4254
  %4 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4255
  store i64 %first_zero_index, ptr %4, align 8, !dbg !4255
  br label %bb5, !dbg !4256

bb5:                                              ; preds = %bb4, %start
  ret void, !dbg !4257
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h6df439cb131128d4E"(ptr align 1 %_1, ptr align 8 %r1, ptr align 8 %r2) unnamed_addr #0 !dbg !4258 {
start:
  %r2.dbg.spill = alloca ptr, align 8
  %r1.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %ordering = alloca i8, align 1
  %0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4266, metadata !DIExpression()), !dbg !4267
  store ptr %r1, ptr %r1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r1.dbg.spill, metadata !4262, metadata !DIExpression()), !dbg !4268
  store ptr %r2, ptr %r2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r2.dbg.spill, metadata !4263, metadata !DIExpression()), !dbg !4269
  call void @llvm.dbg.declare(metadata ptr %ordering, metadata !4264, metadata !DIExpression()), !dbg !4270
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_4 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3f5bd5fd6d0049e1E(ptr align 8 %r1) #10, !dbg !4271
  br i1 %_4, label %bb2, label %bb3, !dbg !4271

bb3:                                              ; preds = %start
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %_6 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3f5bd5fd6d0049e1E(ptr align 8 %r2) #10, !dbg !4272
  br i1 %_6, label %bb5, label %bb6, !dbg !4272

bb2:                                              ; preds = %start
  store i8 1, ptr %0, align 1, !dbg !4273
  br label %bb11, !dbg !4274

bb11:                                             ; preds = %bb10, %bb9, %bb5, %bb2
  %1 = load i8, ptr %0, align 1, !dbg !4275, !range !745, !noundef !24
  ret i8 %1, !dbg !4275

bb6:                                              ; preds = %bb3
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %2 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17ha720db96ca76e537E"(ptr align 8 %r1, ptr align 8 %r2) #10, !dbg !4276, !range !745
  store i8 %2, ptr %ordering, align 1, !dbg !4276
; call <core::cmp::Ordering as core::cmp::PartialEq>::eq
  %_11 = call zeroext i1 @"_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h29e22795268aad95E"(ptr align 1 %ordering, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #10, !dbg !4277
  br i1 %_11, label %bb9, label %bb10, !dbg !4277

bb5:                                              ; preds = %bb3
  store i8 -1, ptr %0, align 1, !dbg !4278
  br label %bb11, !dbg !4279

bb10:                                             ; preds = %bb6
  %3 = load i8, ptr %ordering, align 1, !dbg !4280, !range !745, !noundef !24
  store i8 %3, ptr %0, align 1, !dbg !4280
  br label %bb11, !dbg !4281

bb9:                                              ; preds = %bb6
  %_13 = getelementptr inbounds { i64, i64 }, ptr %r1, i32 0, i32 1, !dbg !4282
  %_14 = getelementptr inbounds { i64, i64 }, ptr %r2, i32 0, i32 1, !dbg !4283
; call core::cmp::impls::<impl core::cmp::Ord for u64>::cmp
  %4 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17ha720db96ca76e537E"(ptr align 8 %_13, ptr align 8 %_14) #10, !dbg !4282, !range !745
  store i8 %4, ptr %0, align 1, !dbg !4282
  br label %bb11, !dbg !4282
}

; bootloader::bootinfo::memory_map::MemoryMap::sort::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17hdd03e0a910a0aaf0E"(ptr align 1 %_1, ptr align 8 %r) unnamed_addr #0 !dbg !4284 {
start:
  %r.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4290, metadata !DIExpression()), !dbg !4291
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !4289, metadata !DIExpression()), !dbg !4292
; call bootloader::bootinfo::memory_map::FrameRange::is_empty
  %0 = call zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3f5bd5fd6d0049e1E(ptr align 8 %r) #10, !dbg !4293
  ret i1 %0, !dbg !4294
}

; bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
; Function Attrs: noredzone nounwind
define internal i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h447656e1418596dcE(ptr align 8 %self) unnamed_addr #1 !dbg !4295 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4300, metadata !DIExpression()), !dbg !4301
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryMap", ptr %self, i32 0, i32 1, !dbg !4302
  %_2 = load i64, ptr %0, align 8, !dbg !4302, !noundef !24
  ret i64 %_2, !dbg !4303
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17he7ebf81a8ba9549eE"(ptr align 8 %self) unnamed_addr #1 !dbg !4304 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4309, metadata !DIExpression()), !dbg !4310
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %_5 = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h447656e1418596dcE(ptr align 8 %self) #10, !dbg !4311
  store i64 0, ptr %_4, align 8, !dbg !4312
  %0 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4312
  store i64 %_5, ptr %0, align 8, !dbg !4312
  %1 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !4313
  %2 = load i64, ptr %1, align 8, !dbg !4313, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !4313
  %4 = load i64, ptr %3, align 8, !dbg !4313, !noundef !24
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %5 = call { ptr, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hc1741b6a9d7e3c4bE"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_bc412f3c128804cf7932bd162091bc4c) #10, !dbg !4313
  %_2.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4313
  %_2.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4313
  %6 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0, !dbg !4314
  %7 = insertvalue { ptr, i64 } %6, i64 %_2.1, 1, !dbg !4314
  ret { ptr, i64 } %7, !dbg !4314
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h5048dea0a15ea664E"(ptr align 8 %self) unnamed_addr #1 !dbg !4315 {
start:
  %next_index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4320, metadata !DIExpression()), !dbg !4323
; call bootloader::bootinfo::memory_map::MemoryMap::next_entry_index
  %next_index = call i64 @_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h447656e1418596dcE(ptr align 8 %self) #10, !dbg !4324
  store i64 %next_index, ptr %next_index.dbg.spill, align 8, !dbg !4324
  call void @llvm.dbg.declare(metadata ptr %next_index.dbg.spill, metadata !4321, metadata !DIExpression()), !dbg !4325
  store i64 0, ptr %_6, align 8, !dbg !4326
  %0 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4326
  store i64 %next_index, ptr %0, align 8, !dbg !4326
  %1 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !4327
  %2 = load i64, ptr %1, align 8, !dbg !4327, !noundef !24
  %3 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4327
  %4 = load i64, ptr %3, align 8, !dbg !4327, !noundef !24
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h372658ec52d9075cE"(ptr align 8 %self, i64 %2, i64 %4, ptr align 8 @alloc_db57840325994cb1e9e58dfeb27e1cf2) #10, !dbg !4327
  %_4.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4327
  %_4.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4327
  %6 = insertvalue { ptr, i64 } poison, ptr %_4.0, 0, !dbg !4328
  %7 = insertvalue { ptr, i64 } %6, i64 %_4.1, 1, !dbg !4328
  ret { ptr, i64 } %7, !dbg !4328
}

; <bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h718019e44c05edf8E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4329 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca %"core::fmt::builders::DebugList<'_, '_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4334, metadata !DIExpression()), !dbg !4336
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4335, metadata !DIExpression()), !dbg !4337
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17hf44a0ea569d6c2caE(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") %_6, ptr align 8 %f) #10, !dbg !4338
; call <bootloader::bootinfo::memory_map::MemoryMap as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17he7ebf81a8ba9549eE"(ptr align 8 %self) #10, !dbg !4339
  %_9.0 = extractvalue { ptr, i64 } %0, 0, !dbg !4339
  %_9.1 = extractvalue { ptr, i64 } %0, 1, !dbg !4339
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h2eb88a55d98b1b0cE"(ptr align 8 %_9.0, i64 %_9.1) #10, !dbg !4339
  %_7.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4339
  %_7.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4339
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17hf04f1b1141114cdfE(ptr align 8 %_6, ptr %_7.0, ptr %_7.1) #10, !dbg !4338
; call core::fmt::builders::DebugList::finish
  %2 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h8386d39d175a1a26E(ptr align 8 %_4) #10, !dbg !4338
  ret i1 %2, !dbg !4340
}

; bootloader::bootinfo::memory_map::MemoryRegion::empty
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h7846679ddb33f5d1E(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0) unnamed_addr #1 !dbg !4341 {
start:
  %_2 = alloca i32, align 4
  %_1 = alloca { i64, i64 }, align 8
  store i64 0, ptr %_1, align 8, !dbg !4344
  %1 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4344
  store i64 0, ptr %1, align 8, !dbg !4344
  store i32 11, ptr %_2, align 4, !dbg !4345
  %2 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 0, !dbg !4346
  %3 = load i64, ptr %2, align 8, !dbg !4346, !noundef !24
  %4 = getelementptr inbounds { i64, i64 }, ptr %_1, i32 0, i32 1, !dbg !4346
  %5 = load i64, ptr %4, align 8, !dbg !4346, !noundef !24
  %6 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4346
  store i64 %3, ptr %6, align 8, !dbg !4346
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4346
  store i64 %5, ptr %7, align 8, !dbg !4346
  %8 = load i32, ptr %_2, align 4, !dbg !4346, !range !4347, !noundef !24
  %9 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4346
  store i32 %8, ptr %9, align 8, !dbg !4346
  ret void, !dbg !4348
}

; bootloader::bootinfo::memory_map::FrameRange::new
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h145be941f8c3cf5bE(i64 %start_addr, i64 %end_addr) unnamed_addr #1 !dbg !4349 {
start:
  %last_byte.dbg.spill = alloca i64, align 8
  %end_addr.dbg.spill = alloca i64, align 8
  %start_addr.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %start_addr, ptr %start_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %start_addr.dbg.spill, metadata !4353, metadata !DIExpression()), !dbg !4357
  store i64 %end_addr, ptr %end_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %end_addr.dbg.spill, metadata !4354, metadata !DIExpression()), !dbg !4358
  %_4.0 = sub i64 %end_addr, 1, !dbg !4359
  %_4.1 = icmp ult i64 %end_addr, 1, !dbg !4359
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !4359
  br i1 %1, label %panic, label %bb1, !dbg !4359

bb1:                                              ; preds = %start
  store i64 %_4.0, ptr %last_byte.dbg.spill, align 8, !dbg !4359
  call void @llvm.dbg.declare(metadata ptr %last_byte.dbg.spill, metadata !4355, metadata !DIExpression()), !dbg !4360
  %_5 = udiv i64 %start_addr, 4096, !dbg !4361
  %_8 = udiv i64 %_4.0, 4096, !dbg !4362
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_8, i64 1), !dbg !4362
  %_10.0 = extractvalue { i64, i1 } %2, 0, !dbg !4362
  %_10.1 = extractvalue { i64, i1 } %2, 1, !dbg !4362
  %3 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !4362
  br i1 %3, label %panic1, label %bb4, !dbg !4362

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_cad8f68633be23a5a8047bc131d14ec3) #11, !dbg !4359
  unreachable, !dbg !4359

bb4:                                              ; preds = %bb1
  store i64 %_5, ptr %0, align 8, !dbg !4363
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4363
  store i64 %_10.0, ptr %4, align 8, !dbg !4363
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4364
  %6 = load i64, ptr %5, align 8, !dbg !4364, !noundef !24
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4364
  %8 = load i64, ptr %7, align 8, !dbg !4364, !noundef !24
  %9 = insertvalue { i64, i64 } poison, i64 %6, 0, !dbg !4364
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !4364
  ret { i64, i64 } %10, !dbg !4364

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_9e0090e7731cd791b1d2228aa613acc1) #11, !dbg !4362
  unreachable, !dbg !4362
}

; bootloader::bootinfo::memory_map::FrameRange::is_empty
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3f5bd5fd6d0049e1E(ptr align 8 %self) unnamed_addr #1 !dbg !4365 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4370, metadata !DIExpression()), !dbg !4371
  %_2 = load i64, ptr %self, align 8, !dbg !4372, !noundef !24
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4373
  %_3 = load i64, ptr %0, align 8, !dbg !4373, !noundef !24
  %1 = icmp eq i64 %_2, %_3, !dbg !4372
  ret i1 %1, !dbg !4374
}

; bootloader::bootinfo::memory_map::FrameRange::start_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17haa1e939e14c7f571E(ptr align 8 %self) unnamed_addr #1 !dbg !4375 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4379, metadata !DIExpression()), !dbg !4380
  %_2 = load i64, ptr %self, align 8, !dbg !4381, !noundef !24
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4381
  %_3.0 = extractvalue { i64, i1 } %0, 0, !dbg !4381
  %_3.1 = extractvalue { i64, i1 } %0, 1, !dbg !4381
  %1 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4381
  br i1 %1, label %panic, label %bb1, !dbg !4381

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4382

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_57ce308cfbee0eeaa37d0e2ac37f242e) #11, !dbg !4381
  unreachable, !dbg !4381
}

; bootloader::bootinfo::memory_map::FrameRange::end_addr
; Function Attrs: noredzone nounwind
define i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h8dd5e82363d5e28fE(ptr align 8 %self) unnamed_addr #1 !dbg !4383 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4385, metadata !DIExpression()), !dbg !4386
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4387
  %_2 = load i64, ptr %0, align 8, !dbg !4387, !noundef !24
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_2, i64 4096), !dbg !4387
  %_3.0 = extractvalue { i64, i1 } %1, 0, !dbg !4387
  %_3.1 = extractvalue { i64, i1 } %1, 1, !dbg !4387
  %2 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !4387
  br i1 %2, label %panic, label %bb1, !dbg !4387

bb1:                                              ; preds = %start
  ret i64 %_3.0, !dbg !4388

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.5, i64 33, ptr align 8 @alloc_4848cdfc410b3d9eebbe30a8648bbf6f) #11, !dbg !4387
  unreachable, !dbg !4387
}

; <bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h9cd311b58a6b23e2E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4389 {
start:
  %width.dbg.spill.i1 = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i2 = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i3 = alloca i32, align 4
  %align.dbg.spill.i4 = alloca i8, align 1
  %fill.dbg.spill.i5 = alloca i32, align 4
  %position.dbg.spill.i6 = alloca i64, align 8
  %_7.i7 = alloca %"core::fmt::rt::v1::FormatSpec", align 8
  %width.dbg.spill.i = alloca { i64, i64 }, align 8
  %precision.dbg.spill.i = alloca { i64, i64 }, align 8
  %flags.dbg.spill.i = alloca i32, align 4
  %align.dbg.spill.i = alloca i8, align 1
  %fill.dbg.spill.i = alloca i32, align 4
  %position.dbg.spill.i = alloca i64, align 8
  %_7.i = alloca %"core::fmt::rt::v1::FormatSpec", align 8
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_24 = alloca { i64, i64 }, align 8
  %_23 = alloca { i64, i64 }, align 8
  %_22 = alloca i8, align 1
  %_21 = alloca %"core::fmt::rt::v1::Argument", align 8
  %_20 = alloca { i64, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_18 = alloca i8, align 1
  %_17 = alloca %"core::fmt::rt::v1::Argument", align 8
  %_16 = alloca [2 x %"core::fmt::rt::v1::Argument"], align 8
  %_13 = alloca i64, align 8
  %_10 = alloca i64, align 8
  %_7 = alloca [2 x { ptr, ptr }], align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4394, metadata !DIExpression()), !dbg !4396
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4395, metadata !DIExpression()), !dbg !4397
; call bootloader::bootinfo::memory_map::FrameRange::start_addr
  %0 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17haa1e939e14c7f571E(ptr align 8 %self) #10, !dbg !4398
  store i64 %0, ptr %_10, align 8, !dbg !4398
; call core::fmt::ArgumentV1::new_lower_hex
  %1 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_lower_hex17hc064ddddc92919cbE(ptr align 8 %_10) #10, !dbg !4399
  %_8.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4399
  %_8.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4399
; call bootloader::bootinfo::memory_map::FrameRange::end_addr
  %2 = call i64 @_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h8dd5e82363d5e28fE(ptr align 8 %self) #10, !dbg !4400
  store i64 %2, ptr %_13, align 8, !dbg !4400
; call core::fmt::ArgumentV1::new_lower_hex
  %3 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_lower_hex17hc064ddddc92919cbE(ptr align 8 %_13) #10, !dbg !4399
  %_11.0 = extractvalue { ptr, ptr } %3, 0, !dbg !4399
  %_11.1 = extractvalue { ptr, ptr } %3, 1, !dbg !4399
  %4 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 0, !dbg !4399
  %5 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 0, !dbg !4399
  store ptr %_8.0, ptr %5, align 8, !dbg !4399
  %6 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 1, !dbg !4399
  store ptr %_8.1, ptr %6, align 8, !dbg !4399
  %7 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_7, i64 0, i64 1, !dbg !4399
  %8 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 0, !dbg !4399
  store ptr %_11.0, ptr %8, align 8, !dbg !4399
  %9 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 1, !dbg !4399
  store ptr %_11.1, ptr %9, align 8, !dbg !4399
  store i8 3, ptr %_18, align 1, !dbg !4399
  store i64 2, ptr %_19, align 8, !dbg !4399
  store i64 2, ptr %_20, align 8, !dbg !4399
  %10 = load i8, ptr %_18, align 1, !dbg !4399, !range !4401, !noundef !24
  %11 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !4399
  %12 = load i64, ptr %11, align 8, !dbg !4399, !range !4402, !noundef !24
  %13 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !4399
  %14 = load i64, ptr %13, align 8, !dbg !4399
  %15 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 0, !dbg !4399
  %16 = load i64, ptr %15, align 8, !dbg !4399, !range !4402, !noundef !24
  %17 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !4399
  %18 = load i64, ptr %17, align 8, !dbg !4399
  store i64 0, ptr %position.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i6, metadata !4403, metadata !DIExpression()), !dbg !4414
  store i32 32, ptr %fill.dbg.spill.i5, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i5, metadata !4409, metadata !DIExpression()), !dbg !4416
  store i8 %10, ptr %align.dbg.spill.i4, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i4, metadata !4410, metadata !DIExpression()), !dbg !4417
  store i32 4, ptr %flags.dbg.spill.i3, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i3, metadata !4411, metadata !DIExpression()), !dbg !4418
  store i64 %12, ptr %precision.dbg.spill.i2, align 8
  %19 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i2, i32 0, i32 1
  store i64 %14, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i2, metadata !4412, metadata !DIExpression()), !dbg !4419
  store i64 %16, ptr %width.dbg.spill.i1, align 8
  %20 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i1, i32 0, i32 1
  store i64 %18, ptr %20, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i1, metadata !4413, metadata !DIExpression()), !dbg !4420
  %21 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 3, !dbg !4421
  store i32 32, ptr %21, align 4, !dbg !4421
  %22 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 4, !dbg !4421
  store i8 %10, ptr %22, align 8, !dbg !4421
  %23 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 2, !dbg !4421
  store i32 4, ptr %23, align 8, !dbg !4421
  store i64 %12, ptr %_7.i7, align 8, !dbg !4421
  %24 = getelementptr inbounds { i64, i64 }, ptr %_7.i7, i32 0, i32 1, !dbg !4421
  store i64 %14, ptr %24, align 8, !dbg !4421
  %25 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i7, i32 0, i32 1, !dbg !4421
  store i64 %16, ptr %25, align 8, !dbg !4421
  %26 = getelementptr inbounds { i64, i64 }, ptr %25, i32 0, i32 1, !dbg !4421
  store i64 %18, ptr %26, align 8, !dbg !4421
  %27 = getelementptr inbounds %"core::fmt::rt::v1::Argument", ptr %_17, i32 0, i32 1, !dbg !4422
  store i64 0, ptr %27, align 8, !dbg !4422
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_17, ptr align 8 %_7.i7, i64 48, i1 false), !dbg !4422
  store i8 3, ptr %_22, align 1, !dbg !4399
  store i64 2, ptr %_23, align 8, !dbg !4399
  store i64 2, ptr %_24, align 8, !dbg !4399
  %28 = load i8, ptr %_22, align 1, !dbg !4399, !range !4401, !noundef !24
  %29 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 0, !dbg !4399
  %30 = load i64, ptr %29, align 8, !dbg !4399, !range !4402, !noundef !24
  %31 = getelementptr inbounds { i64, i64 }, ptr %_23, i32 0, i32 1, !dbg !4399
  %32 = load i64, ptr %31, align 8, !dbg !4399
  %33 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 0, !dbg !4399
  %34 = load i64, ptr %33, align 8, !dbg !4399, !range !4402, !noundef !24
  %35 = getelementptr inbounds { i64, i64 }, ptr %_24, i32 0, i32 1, !dbg !4399
  %36 = load i64, ptr %35, align 8, !dbg !4399
  store i64 1, ptr %position.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %position.dbg.spill.i, metadata !4403, metadata !DIExpression()), !dbg !4423
  store i32 32, ptr %fill.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %fill.dbg.spill.i, metadata !4409, metadata !DIExpression()), !dbg !4425
  store i8 %28, ptr %align.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !4410, metadata !DIExpression()), !dbg !4426
  store i32 4, ptr %flags.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.dbg.spill.i, metadata !4411, metadata !DIExpression()), !dbg !4427
  store i64 %30, ptr %precision.dbg.spill.i, align 8
  %37 = getelementptr inbounds { i64, i64 }, ptr %precision.dbg.spill.i, i32 0, i32 1
  store i64 %32, ptr %37, align 8
  call void @llvm.dbg.declare(metadata ptr %precision.dbg.spill.i, metadata !4412, metadata !DIExpression()), !dbg !4428
  store i64 %34, ptr %width.dbg.spill.i, align 8
  %38 = getelementptr inbounds { i64, i64 }, ptr %width.dbg.spill.i, i32 0, i32 1
  store i64 %36, ptr %38, align 8
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill.i, metadata !4413, metadata !DIExpression()), !dbg !4429
  %39 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 3, !dbg !4430
  store i32 32, ptr %39, align 4, !dbg !4430
  %40 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 4, !dbg !4430
  store i8 %28, ptr %40, align 8, !dbg !4430
  %41 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 2, !dbg !4430
  store i32 4, ptr %41, align 8, !dbg !4430
  store i64 %30, ptr %_7.i, align 8, !dbg !4430
  %42 = getelementptr inbounds { i64, i64 }, ptr %_7.i, i32 0, i32 1, !dbg !4430
  store i64 %32, ptr %42, align 8, !dbg !4430
  %43 = getelementptr inbounds %"core::fmt::rt::v1::FormatSpec", ptr %_7.i, i32 0, i32 1, !dbg !4430
  store i64 %34, ptr %43, align 8, !dbg !4430
  %44 = getelementptr inbounds { i64, i64 }, ptr %43, i32 0, i32 1, !dbg !4430
  store i64 %36, ptr %44, align 8, !dbg !4430
  %45 = getelementptr inbounds %"core::fmt::rt::v1::Argument", ptr %_21, i32 0, i32 1, !dbg !4431
  store i64 1, ptr %45, align 8, !dbg !4431
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_21, ptr align 8 %_7.i, i64 48, i1 false), !dbg !4431
  %46 = getelementptr inbounds [2 x %"core::fmt::rt::v1::Argument"], ptr %_16, i64 0, i64 0, !dbg !4399
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %46, ptr align 8 %_17, i64 56, i1 false), !dbg !4399
  %47 = getelementptr inbounds [2 x %"core::fmt::rt::v1::Argument"], ptr %_16, i64 0, i64 1, !dbg !4399
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %_21, i64 56, i1 false), !dbg !4399
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17h96272abef9da8fc8E(ptr sret(%"core::fmt::Arguments<'_>") %_3, ptr align 8 @alloc_b835a9d6c252fc7d7d9309678c4406b9, i64 3, ptr align 8 %_7, i64 2, ptr align 8 %_16, i64 2) #10, !dbg !4399
; call core::fmt::Formatter::write_fmt
  %48 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h35ea0ce90f54657bE(ptr align 8 %f, ptr %_3) #10, !dbg !4399
  ret i1 %48, !dbg !4432
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::convert::From<bootloader::bootinfo::memory_map::E820MemoryRegion>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17h389087728973804bE"(ptr sret(%"bootinfo::memory_map::MemoryRegion") %0, ptr %region) unnamed_addr #1 !dbg !4433 {
start:
  %_9 = alloca [1 x { ptr, ptr }], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %t = alloca i32, align 4
  %region_type = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %region, metadata !4444, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.declare(metadata ptr %region_type, metadata !4445, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.declare(metadata ptr %t, metadata !4447, metadata !DIExpression()), !dbg !4451
  %1 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4452
  %2 = load i32, ptr %1, align 8, !dbg !4452, !noundef !24
  switch i32 %2, label %bb1 [
    i32 1, label %bb2
    i32 2, label %bb3
    i32 3, label %bb4
    i32 4, label %bb5
    i32 5, label %bb6
  ], !dbg !4452

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 2, !dbg !4453
  %4 = load i32, ptr %3, align 8, !dbg !4453, !noundef !24
  store i32 %4, ptr %t, align 4, !dbg !4453
; call core::fmt::ArgumentV1::new_display
  %5 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha9f1046bf78f68d8E(ptr align 4 %t) #10, !dbg !4454
  %_10.0 = extractvalue { ptr, ptr } %5, 0, !dbg !4454
  %_10.1 = extractvalue { ptr, ptr } %5, 1, !dbg !4454
  %6 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_9, i64 0, i64 0, !dbg !4454
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0, !dbg !4454
  store ptr %_10.0, ptr %7, align 8, !dbg !4454
  %8 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1, !dbg !4454
  store ptr %_10.1, ptr %8, align 8, !dbg !4454
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8c49b7ed491bfe8E(ptr sret(%"core::fmt::Arguments<'_>") %_5, ptr align 8 @alloc_0a0c8f921f96ace4b9d73a9fb1f3a7e8, i64 1, ptr align 8 %_9, i64 1) #10, !dbg !4454
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hcab56c0eeadf4812E(ptr %_5, ptr align 8 @alloc_7aa2ce3965daa798a811db4359705d8b) #11, !dbg !4454
  unreachable, !dbg !4454

bb2:                                              ; preds = %start
  store i32 0, ptr %region_type, align 4, !dbg !4455
  br label %bb9, !dbg !4455

bb3:                                              ; preds = %start
  store i32 2, ptr %region_type, align 4, !dbg !4456
  br label %bb9, !dbg !4456

bb4:                                              ; preds = %start
  store i32 3, ptr %region_type, align 4, !dbg !4457
  br label %bb9, !dbg !4457

bb5:                                              ; preds = %start
  store i32 4, ptr %region_type, align 4, !dbg !4458
  br label %bb9, !dbg !4458

bb6:                                              ; preds = %start
  store i32 5, ptr %region_type, align 4, !dbg !4459
  br label %bb9, !dbg !4459

bb9:                                              ; preds = %bb2, %bb3, %bb4, %bb5, %bb6
  %_13 = load i64, ptr %region, align 8, !dbg !4460, !noundef !24
  %_15 = load i64, ptr %region, align 8, !dbg !4461, !noundef !24
  %9 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %region, i32 0, i32 1, !dbg !4462
  %_16 = load i64, ptr %9, align 8, !dbg !4462, !noundef !24
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_15, i64 %_16), !dbg !4461
  %_17.0 = extractvalue { i64, i1 } %10, 0, !dbg !4461
  %_17.1 = extractvalue { i64, i1 } %10, 1, !dbg !4461
  %11 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !4461
  br i1 %11, label %panic, label %bb10, !dbg !4461

bb10:                                             ; preds = %bb9
; call bootloader::bootinfo::memory_map::FrameRange::new
  %12 = call { i64, i64 } @_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h145be941f8c3cf5bE(i64 %_13, i64 %_17.0) #10, !dbg !4463
  %_12.0 = extractvalue { i64, i64 } %12, 0, !dbg !4463
  %_12.1 = extractvalue { i64, i64 } %12, 1, !dbg !4463
  %_18 = load i32, ptr %region_type, align 4, !dbg !4464, !range !4347, !noundef !24
  %13 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4465
  store i64 %_12.0, ptr %13, align 8, !dbg !4465
  %14 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4465
  store i64 %_12.1, ptr %14, align 8, !dbg !4465
  %15 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %0, i32 0, i32 1, !dbg !4465
  store i32 %_18, ptr %15, align 8, !dbg !4465
  ret void, !dbg !4466

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_82eaa0d65834937aa85ffd9cf79e73a5) #11, !dbg !4461
  unreachable, !dbg !4461
}

; bootloader::bootinfo::BootInfo::new
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo3new17hf77ec1cee112fe9fE(ptr sret(%"bootinfo::BootInfo") %0, ptr %memory_map, ptr %tls_template, i64 %recursive_page_table_addr, i64 %physical_memory_offset) unnamed_addr #1 !dbg !4467 {
start:
  %1 = alloca %"core::option::Option<bootinfo::TlsTemplate>", align 8
  %physical_memory_offset.dbg.spill = alloca i64, align 8
  %recursive_page_table_addr.dbg.spill = alloca i64, align 8
  %_7 = alloca %"bootinfo::TlsTemplate", align 8
  %_6 = alloca %"bootinfo::TlsTemplate", align 8
  %tls_template1 = alloca %"bootinfo::TlsTemplate", align 8
  call void @llvm.dbg.declare(metadata ptr %memory_map, metadata !4477, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.declare(metadata ptr %tls_template, metadata !4478, metadata !DIExpression()), !dbg !4484
  store i64 %recursive_page_table_addr, ptr %recursive_page_table_addr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %recursive_page_table_addr.dbg.spill, metadata !4479, metadata !DIExpression()), !dbg !4485
  store i64 %physical_memory_offset, ptr %physical_memory_offset.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %physical_memory_offset.dbg.spill, metadata !4480, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.declare(metadata ptr %tls_template1, metadata !4481, metadata !DIExpression()), !dbg !4487
  store i64 0, ptr %_6, align 8, !dbg !4488
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 1, !dbg !4488
  store i64 0, ptr %2, align 8, !dbg !4488
  %3 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %_6, i32 0, i32 2, !dbg !4488
  store i64 0, ptr %3, align 8, !dbg !4488
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %tls_template, i64 32, i1 false), !dbg !4489
; call core::option::Option<T>::unwrap_or
  call void @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h583182ffc0284589E"(ptr sret(%"bootinfo::TlsTemplate") %tls_template1, ptr %1, ptr %_6) #10, !dbg !4489
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tls_template1, i64 24, i1 false), !dbg !4490
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %memory_map, i64 1544, i1 false), !dbg !4491
  %4 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 1, !dbg !4491
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_7, i64 24, i1 false), !dbg !4491
  %5 = getelementptr inbounds %"bootinfo::BootInfo", ptr %0, i32 0, i32 2, !dbg !4491
  store i8 0, ptr %5, align 8, !dbg !4491
  ret void, !dbg !4492
}

; bootloader::bootinfo::BootInfo::tls_template
; Function Attrs: noredzone nounwind
define void @_ZN10bootloader8bootinfo8BootInfo12tls_template17h0bc4711751e66ce9E(ptr sret(%"core::option::Option<bootinfo::TlsTemplate>") %0, ptr align 8 %self) unnamed_addr #1 !dbg !4493 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_4 = alloca %"bootinfo::TlsTemplate", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4498, metadata !DIExpression()), !dbg !4499
  %1 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4500
  %2 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %1, i32 0, i32 2, !dbg !4500
  %_3 = load i64, ptr %2, align 8, !dbg !4500, !noundef !24
  %_2 = icmp ugt i64 %_3, 0, !dbg !4500
  br i1 %_2, label %bb1, label %bb2, !dbg !4500

bb2:                                              ; preds = %start
  store i64 0, ptr %0, align 8, !dbg !4501
  br label %bb3, !dbg !4502

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4503
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %3, i64 24, i1 false), !dbg !4503
  %4 = getelementptr inbounds %"core::option::Option<bootinfo::TlsTemplate>::Some", ptr %0, i32 0, i32 1, !dbg !4504
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_4, i64 24, i1 false), !dbg !4504
  store i64 1, ptr %0, align 8, !dbg !4504
  br label %bb3, !dbg !4502

bb3:                                              ; preds = %bb2, %bb1
  ret void, !dbg !4505
}

; <bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h771e7cc3aaff61b4E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4506 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4511, metadata !DIExpression()), !dbg !4513
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4512, metadata !DIExpression()), !dbg !4513
  %0 = getelementptr inbounds %"bootinfo::memory_map::MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4514
  store ptr %0, ptr %_10, align 8, !dbg !4514
; call core::fmt::Formatter::debug_struct_field2_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hc2440ea8e87fbe70E(ptr align 8 %f, ptr align 1 @alloc_2fa382d66c8b05cee83d1e636a456d83, i64 12, ptr align 1 @alloc_c6d312f4fb2564cdde1868738b40e953, i64 5, ptr align 1 %self, ptr align 8 @vtable.7, ptr align 1 @alloc_24a09d864e93eaea8a967d85ad5fb14b, i64 11, ptr align 1 %_10, ptr align 8 @vtable.8) #10, !dbg !4513
  ret i1 %1, !dbg !4515
}

; <bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h942619d28359881eE"(ptr align 4 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4516 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_3 = alloca { ptr, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4521, metadata !DIExpression()), !dbg !4523
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4522, metadata !DIExpression()), !dbg !4523
  %0 = load i32, ptr %self, align 4, !dbg !4523, !range !4347, !noundef !24
  %_4 = zext i32 %0 to i64, !dbg !4523
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
    i64 10, label %bb13
    i64 11, label %bb14
    i64 12, label %bb15
    i64 13, label %bb16
    i64 14, label %bb1
  ], !dbg !4523

bb2:                                              ; preds = %start
  unreachable, !dbg !4523

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_3c5b86a9b7fa1d302afea08936e483c5, ptr %1, align 8, !dbg !4523
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 6, ptr %2, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_3e93a37ed61282b1c76f7355bd470201, ptr %3, align 8, !dbg !4523
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 5, ptr %4, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb5:                                              ; preds = %start
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_f09f4d0dabebc98449d61db8d60067bb, ptr %5, align 8, !dbg !4523
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 8, ptr %6, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb6:                                              ; preds = %start
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_405580fa38aa12693d369698203e043e, ptr %7, align 8, !dbg !4523
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 15, ptr %8, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb7:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_497f8f871d9b9bd5767a37917b988618, ptr %9, align 8, !dbg !4523
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 7, ptr %10, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb8:                                              ; preds = %start
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_2db2f360d33be2fea5593ededc5fb904, ptr %11, align 8, !dbg !4523
  %12 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 9, ptr %12, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb9:                                              ; preds = %start
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_bfff067230aa23bc581d3ad54a803735, ptr %13, align 8, !dbg !4523
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 6, ptr %14, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb10:                                             ; preds = %start
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_272cabb5c5fb66cc8e055c6a08dd5a38, ptr %15, align 8, !dbg !4523
  %16 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 11, ptr %16, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb11:                                             ; preds = %start
  %17 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_84113867da1e74b2269b5cf897cae626, ptr %17, align 8, !dbg !4523
  %18 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 9, ptr %18, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb12:                                             ; preds = %start
  %19 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_88f77a4216025d9c2616c4e0631b580d, ptr %19, align 8, !dbg !4523
  %20 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 10, ptr %20, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb13:                                             ; preds = %start
  %21 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_296c708f84ba4aacbf601faaf01ee90e, ptr %21, align 8, !dbg !4523
  %22 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 9, ptr %22, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb14:                                             ; preds = %start
  %23 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_59ba7b9f7211443cd55a366616eef46a, ptr %23, align 8, !dbg !4523
  %24 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 5, ptr %24, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb15:                                             ; preds = %start
  %25 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_1f9c4cc73f4140a97f2cf1f721646a68, ptr %25, align 8, !dbg !4523
  %26 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 8, ptr %26, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb16:                                             ; preds = %start
  %27 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_3faf0b3374c02c8ecbb0aba47045e793, ptr %27, align 8, !dbg !4523
  %28 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 7, ptr %28, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb1:                                              ; preds = %start
  %29 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  store ptr @alloc_4f458a5ac3a6382b3750f993ab870080, ptr %29, align 8, !dbg !4523
  %30 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  store i64 13, ptr %30, align 8, !dbg !4523
  br label %bb17, !dbg !4524

bb17:                                             ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb14, %bb15, %bb16, %bb1
  %31 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !4523
  %32 = load ptr, ptr %31, align 8, !dbg !4523, !nonnull !24, !align !2003, !noundef !24
  %33 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !4523
  %34 = load i64, ptr %33, align 8, !dbg !4523, !noundef !24
; call core::fmt::Formatter::write_str
  %35 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17hc0b86645fa2707c5E(ptr align 8 %f, ptr align 1 %32, i64 %34) #10, !dbg !4523
  ret i1 %35, !dbg !4525
}

; <bootloader::bootinfo::memory_map::E820MemoryRegion as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h01146dc618eaaa3bE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4526 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_16 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4532, metadata !DIExpression()), !dbg !4534
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4533, metadata !DIExpression()), !dbg !4534
  %_9 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 1, !dbg !4535
  %_12 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 2, !dbg !4536
  %0 = getelementptr inbounds %"bootinfo::memory_map::E820MemoryRegion", ptr %self, i32 0, i32 3, !dbg !4537
  store ptr %0, ptr %_16, align 8, !dbg !4537
; call core::fmt::Formatter::debug_struct_field4_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17ha1695794fba5b6abE(ptr align 8 %f, ptr align 1 @alloc_bee533f45c59e636f24e3b92e9dcf8a1, i64 16, ptr align 1 @alloc_e896abd190c076ac3d64221d9ae37a51, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc_f92b1a49cd2fef011d7606f6333298f2, i64 3, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc_24a09d864e93eaea8a967d85ad5fb14b, i64 11, ptr align 1 %_12, ptr align 8 @vtable.a, ptr align 1 @alloc_3453f215b747c0edd0eebf0fbcea5172, i64 24, ptr align 1 %_16, ptr align 8 @vtable.b) #10, !dbg !4534
  ret i1 %1, !dbg !4538
}

; <bootloader::bootinfo::BootInfo as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17h60b6c972ff4f913cE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4539 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4544, metadata !DIExpression()), !dbg !4546
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4545, metadata !DIExpression()), !dbg !4546
  %_9 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 1, !dbg !4547
  %0 = getelementptr inbounds %"bootinfo::BootInfo", ptr %self, i32 0, i32 2, !dbg !4548
  store ptr %0, ptr %_13, align 8, !dbg !4548
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17hb744a301d291fb66E(ptr align 8 %f, ptr align 1 @alloc_1f9c4cc73f4140a97f2cf1f721646a68, i64 8, ptr align 1 @alloc_9edc7a92f8d25561ab6dc7613f63189d, i64 10, ptr align 1 %self, ptr align 8 @vtable.c, ptr align 1 @alloc_1cbcc15d14c439465e35578ac36229c9, i64 12, ptr align 1 %_9, ptr align 8 @vtable.d, ptr align 1 @alloc_b0bb0c7a0f8be091d3fc1c11116fce9b, i64 15, ptr align 1 %_13, ptr align 8 @vtable.e) #10, !dbg !4546
  ret i1 %1, !dbg !4549
}

; <bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h86ced365e7ce4c2eE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !4550 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4556, metadata !DIExpression()), !dbg !4558
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4557, metadata !DIExpression()), !dbg !4558
  %_9 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 1, !dbg !4559
  %0 = getelementptr inbounds %"bootinfo::TlsTemplate", ptr %self, i32 0, i32 2, !dbg !4560
  store ptr %0, ptr %_13, align 8, !dbg !4560
; call core::fmt::Formatter::debug_struct_field3_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17hb744a301d291fb66E(ptr align 8 %f, ptr align 1 @alloc_db9f6246386b35b655b2a4a0bfe4b5d7, i64 11, ptr align 1 @alloc_e896abd190c076ac3d64221d9ae37a51, i64 10, ptr align 1 %self, ptr align 8 @vtable.9, ptr align 1 @alloc_586126a6b84f2dd36fa1e3b3e4c38ef1, i64 9, ptr align 1 %_9, ptr align 8 @vtable.9, ptr align 1 @alloc_6a7e1d6cb9743b05f95a08c478d87c6e, i64 8, ptr align 1 %_13, ptr align 8 @vtable.f) #10, !dbg !4558
  ret i1 %1, !dbg !4561
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking14panic_nounwind17h4573e3544b1244f5E(ptr align 1, i64) unnamed_addr #5

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17h3a73883734c7d871E(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hac0fdec05618e01fE(i64, i64, ptr align 8) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17he5dc540bc7c1eda1E(i64, i64, ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint noredzone nounwind
declare align 8 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17hc84d02dca1ce1660E"(ptr align 8) unnamed_addr #0

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17h6f79fc3290077011E(ptr align 8) unnamed_addr #5

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint noredzone nounwind
declare void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h6e1589f1e89e1696E"(ptr sret(%"core::ops::range::RangeInclusive<usize>"), i64, i64) unnamed_addr #0

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h6b9c7dcddc3eb64aE"(i64, i64, ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #6

; core::panicking::panic
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking5panic17h277234a6cd982fe5E(ptr align 1, i64, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #7

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h54e3a64a8d80a0c2E(ptr) unnamed_addr #1

; core::intrinsics::is_nonoverlapping
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hdfa133b4c9e6bfe0E(ptr, ptr, i64) unnamed_addr #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #7

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17hceee1cc64e7ed24aE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @_ZN4core3fmt10ArgumentV13new17hff38262718737e36E(ptr align 8, ptr) unnamed_addr #0

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h41ca6b16ba65727eE(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17h87cb2e342e5141a4E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h1b93910475cacd94E(ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h2f2ab6e4739c3556E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h9c863612f56988d3E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h66713fc47818d59eE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17ha7e2c62b9562228dE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: noredzone nounwind
declare align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17h7271bd8a3d508d11E(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; core::panicking::panic_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking9panic_fmt17hcab56c0eeadf4812E(ptr, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h2756a2f44b36c0c2E(ptr, ptr, i64) unnamed_addr #0

; core::ptr::swap_nonoverlapping_simple_untyped
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core3ptr34swap_nonoverlapping_simple_untyped17h97bc86d9d3c3b08bE(ptr, ptr, i64) unnamed_addr #0

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
declare ptr @_ZN4core3ptr8metadata18from_raw_parts_mut17hb47dcef0fd8d9f3eE(ptr) unnamed_addr #0

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17h19acf4b7d21fbddfE(i64, i64, ptr align 8) unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #8

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1e3ba51008b82e5E"(i64, i64) unnamed_addr #0

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h1df758b10b9b351bE"(ptr align 8) unnamed_addr #0

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h8aacf02eab854b71E(i64, i64) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7d1ad3d13c2c46beE"(i64, i64) unnamed_addr #0

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h80eeb9b610c0f8dcE"(ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #9

; core::cmp::min
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3cmp3min17hf3463562417c7eceE(i64, i64) unnamed_addr #0

; core::panicking::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking13assert_failed17h383a6105ab32c166E(i8, ptr align 8, ptr align 8, ptr, ptr align 8) unnamed_addr #5

; core::fmt::Formatter::debug_list
; Function Attrs: noredzone nounwind
declare void @_ZN4core3fmt9Formatter10debug_list17hf44a0ea569d6c2caE(ptr sret(%"core::fmt::builders::DebugList<'_, '_>"), ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h8386d39d175a1a26E(ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h35ea0ce90f54657bE(ptr align 8, ptr) unnamed_addr #1

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha9f1046bf78f68d8E(ptr align 4) unnamed_addr #0

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17hc2440ea8e87fbe70E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17hc0b86645fa2707c5E(ptr align 8, ptr align 1, i64) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h03207b162034f1bcE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field4_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field4_finish17ha1695794fba5b6abE(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h65f399967d7391c0E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field3_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field3_finish17hb744a301d291fb66E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h91a47dc815968b8cE"(ptr align 8, ptr align 8) unnamed_addr #1

attributes #0 = { inlinehint noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #1 = { noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #2 = { cold noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #3 = { noinline noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { cold noinline noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #6 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #7 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #8 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #9 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!133, !134, !135}
!llvm.dbg.cu = !{!136}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegion as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !24, identifier: "4b612d25f61d12d4c09ed70e0fec28bd")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !17, templateParams: !24, identifier: "c44d3765c8b39cfb34e01224737a2436")
!14 = !DINamespace(name: "memory_map", scope: !15)
!15 = !DINamespace(name: "bootinfo", scope: !16)
!16 = !DINamespace(name: "bootloader", scope: null)
!17 = !{!18, !25}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !13, file: !2, baseType: !19, size: 128, align: 64)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "FrameRange", scope: !14, file: !2, size: 128, align: 64, elements: !20, templateParams: !24, identifier: "9ef9ef1937a6636b61c2ba1435e17489")
!20 = !{!21, !23}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64)
!22 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame_number", scope: !19, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!24 = !{}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !13, file: !2, baseType: !26, size: 32, align: 32, offset: 128)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MemoryRegionType", scope: !14, file: !2, baseType: !27, size: 32, align: 32, flags: DIFlagEnumClass, elements: !28)
!27 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43}
!29 = !DIEnumerator(name: "Usable", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "InUse", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "Reserved", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "AcpiReclaimable", value: 3, isUnsigned: true)
!33 = !DIEnumerator(name: "AcpiNvs", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "BadMemory", value: 5, isUnsigned: true)
!35 = !DIEnumerator(name: "Kernel", value: 6, isUnsigned: true)
!36 = !DIEnumerator(name: "KernelStack", value: 7, isUnsigned: true)
!37 = !DIEnumerator(name: "PageTable", value: 8, isUnsigned: true)
!38 = !DIEnumerator(name: "Bootloader", value: 9, isUnsigned: true)
!39 = !DIEnumerator(name: "FrameZero", value: 10, isUnsigned: true)
!40 = !DIEnumerator(name: "Empty", value: 11, isUnsigned: true)
!41 = !DIEnumerator(name: "BootInfo", value: 12, isUnsigned: true)
!42 = !DIEnumerator(name: "Package", value: 13, isUnsigned: true)
!43 = !DIEnumerator(name: "NonExhaustive", value: 14, isUnsigned: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !46, isLocal: true, isDefinition: true)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::FrameRange as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !47, vtableHolder: !19, templateParams: !24, identifier: "eda01ae88cc45f81d2e2650a93f0e044")
!47 = !{!48, !49, !50, !51}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !46, file: !2, baseType: !6, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !46, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !46, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !54, isLocal: true, isDefinition: true)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&bootloader::bootinfo::memory_map::MemoryRegionType as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !55, vtableHolder: !60, templateParams: !24, identifier: "760b1fdf024dbdcb8464c34a1adc1d0d")
!55 = !{!56, !57, !58, !59}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !54, file: !2, baseType: !6, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !54, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !54, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !26, size: 64, align: 64, dwarfAddressSpace: 0)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "<u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !63, isLocal: true, isDefinition: true)
!63 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !64, vtableHolder: !22, templateParams: !24, identifier: "651342a23dd28bf3b43591e743ad2be6")
!64 = !{!65, !66, !67, !68}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !63, file: !2, baseType: !6, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !63, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !63, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!69 = !DIGlobalVariableExpression(var: !70, expr: !DIExpression())
!70 = distinct !DIGlobalVariable(name: "<u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !71, isLocal: true, isDefinition: true)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "<u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !72, vtableHolder: !27, templateParams: !24, identifier: "9a50413855c1bf1dc3d017ea33a4cf53")
!72 = !{!73, !74, !75, !76}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !71, file: !2, baseType: !6, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !71, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !71, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!77 = !DIGlobalVariableExpression(var: !78, expr: !DIExpression())
!78 = distinct !DIGlobalVariable(name: "<&u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !79, isLocal: true, isDefinition: true)
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !80, vtableHolder: !85, templateParams: !24, identifier: "a1796ee89ddeeaf5f4c580736da82908")
!80 = !{!81, !82, !83, !84}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !79, file: !2, baseType: !6, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !79, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !79, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !88, isLocal: true, isDefinition: true)
!88 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::memory_map::MemoryMap as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !89, vtableHolder: !94, templateParams: !24, identifier: "373d22b9cfe699ffd0b22cd6c250b421")
!89 = !{!90, !91, !92, !93}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !88, file: !2, baseType: !6, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !88, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !88, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!94 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemoryMap", scope: !14, file: !2, size: 12352, align: 64, elements: !95, templateParams: !24, identifier: "cbff1f6ff1c2668c9d19a225cf1e9d90")
!95 = !{!96, !100}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !94, file: !2, baseType: !97, size: 12288, align: 64)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 12288, align: 64, elements: !98)
!98 = !{!99}
!99 = !DISubrange(count: 64, lowerBound: 0)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "next_entry_index", scope: !94, file: !2, baseType: !22, size: 64, align: 64, offset: 12288)
!101 = !DIGlobalVariableExpression(var: !102, expr: !DIExpression())
!102 = distinct !DIGlobalVariable(name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !103, isLocal: true, isDefinition: true)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "<bootloader::bootinfo::TlsTemplate as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !104, vtableHolder: !109, templateParams: !24, identifier: "cd382ff39a3173ef89c3b043f08f48b")
!104 = !{!105, !106, !107, !108}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !103, file: !2, baseType: !6, size: 64, align: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !103, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !103, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!109 = !DICompositeType(tag: DW_TAG_structure_type, name: "TlsTemplate", scope: !15, file: !2, size: 192, align: 64, elements: !110, templateParams: !24, identifier: "9dd4922627d64ce1caf9bc8e09623063")
!110 = !{!111, !112, !113}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !109, file: !2, baseType: !22, size: 64, align: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "file_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "mem_size", scope: !109, file: !2, baseType: !22, size: 64, align: 64, offset: 128)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "<&u8 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !116, isLocal: true, isDefinition: true)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u8 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !117, vtableHolder: !122, templateParams: !24, identifier: "54c2724b2adb1eb31351269ada2d013")
!117 = !{!118, !119, !120, !121}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !116, file: !2, baseType: !6, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !116, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !116, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!123 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "<&u64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !126, isLocal: true, isDefinition: true)
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !127, vtableHolder: !132, templateParams: !24, identifier: "72a8f41c2039c0da2413a8ce1c63be0")
!127 = !{!128, !129, !130, !131}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !126, file: !2, baseType: !6, size: 64, align: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !126, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !126, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!133 = !{i32 8, !"PIC Level", i32 2}
!134 = !{i32 2, !"Dwarf Version", i32 4}
!135 = !{i32 2, !"Debug Info Version", i32 3}
!136 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !137, producer: "clang LLVM (rustc version 1.71.0-nightly (d0f204e4d 2023-04-16))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !138, globals: !162, splitDebugInlining: false)
!137 = !DIFile(filename: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23/src/lib.rs/@/bootloader.4c619316-cgu.0", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23")
!138 = !{!26, !139, !149, !156}
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !140, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !144)
!140 = !DINamespace(name: "v1", scope: !141)
!141 = !DINamespace(name: "rt", scope: !142)
!142 = !DINamespace(name: "fmt", scope: !143)
!143 = !DINamespace(name: "core", scope: null)
!144 = !{!145, !146, !147, !148}
!145 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !150, file: !2, baseType: !151, size: 8, align: 8, flags: DIFlagEnumClass, elements: !152)
!150 = !DINamespace(name: "cmp", scope: !143)
!151 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!152 = !{!153, !154, !155}
!153 = !DIEnumerator(name: "Less", value: -1)
!154 = !DIEnumerator(name: "Equal", value: 0)
!155 = !DIEnumerator(name: "Greater", value: 1)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !157, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagEnumClass, elements: !158)
!157 = !DINamespace(name: "panicking", scope: !143)
!158 = !{!159, !160, !161}
!159 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!160 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!161 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!162 = !{!0, !44, !52, !61, !69, !77, !86, !101, !114, !124}
!163 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2d47314f2b84b306E", scope: !165, file: !164, line: 374, type: !168, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !183)
!164 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "1350c165f4aa6e79d8fe4fa0de29c328")
!165 = !DINamespace(name: "{impl#4}", scope: !166)
!166 = !DINamespace(name: "index", scope: !167)
!167 = !DINamespace(name: "slice", scope: !143)
!168 = !DISubroutineType(types: !169)
!169 = !{!170, !175, !170}
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !171, templateParams: !24, identifier: "7010c4221deaabc85662a14799cddacb")
!171 = !{!172, !174}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !170, file: !2, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !170, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!175 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !176, file: !2, size: 128, align: 64, elements: !178, templateParams: !181, identifier: "affb821d2ef067ad9b92b5e9467b6ff1")
!176 = !DINamespace(name: "range", scope: !177)
!177 = !DINamespace(name: "ops", scope: !143)
!178 = !{!179, !180}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !175, file: !2, baseType: !9, size: 64, align: 64)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !175, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!181 = !{!182}
!182 = !DITemplateTypeParameter(name: "Idx", type: !9)
!183 = !{!184, !185, !186, !188}
!184 = !DILocalVariable(name: "self", arg: 1, scope: !163, file: !164, line: 374, type: !175)
!185 = !DILocalVariable(name: "slice", arg: 2, scope: !163, file: !164, line: 374, type: !170)
!186 = !DILocalVariable(name: "this", scope: !187, file: !164, line: 375, type: !175, align: 8)
!187 = distinct !DILexicalBlock(scope: !163, file: !164, line: 375, column: 9)
!188 = !DILocalVariable(name: "new_len", scope: !189, file: !164, line: 386, type: !9, align: 8)
!189 = distinct !DILexicalBlock(scope: !187, file: !164, line: 386, column: 13)
!190 = !{!191}
!191 = !DITemplateTypeParameter(name: "T", type: !13)
!192 = !DILocation(line: 374, column: 29, scope: !163)
!193 = !DILocation(line: 374, column: 35, scope: !163)
!194 = !DILocation(line: 375, column: 13, scope: !187)
!195 = !DILocation(line: 375, column: 20, scope: !163)
!196 = !DILocation(line: 381, column: 13, scope: !187)
!197 = !DILocation(line: 386, column: 27, scope: !187)
!198 = !DILocation(line: 386, column: 17, scope: !189)
!199 = !DILocation(line: 387, column: 39, scope: !189)
!200 = !DILocalVariable(name: "self", arg: 1, scope: !201, file: !202, line: 915, type: !208)
!201 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68bd737be34ebddaE", scope: !203, file: !202, line: 915, type: !206, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !209)
!202 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "2a21946c6980740609ff35bdd2bfdb1c")
!203 = !DINamespace(name: "{impl#0}", scope: !204)
!204 = !DINamespace(name: "const_ptr", scope: !205)
!205 = !DINamespace(name: "ptr", scope: !143)
!206 = !DISubroutineType(types: !207)
!207 = !{!208, !208, !9}
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!209 = !{!200, !210}
!210 = !DILocalVariable(name: "count", arg: 2, scope: !201, file: !202, line: 915, type: !9)
!211 = !DILocation(line: 915, column: 29, scope: !201, inlinedAt: !212)
!212 = distinct !DILocation(line: 387, column: 39, scope: !189)
!213 = !DILocation(line: 915, column: 35, scope: !201, inlinedAt: !212)
!214 = !DILocalVariable(name: "self", arg: 1, scope: !215, file: !202, line: 460, type: !208)
!215 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h3019254ff67435c7E", scope: !203, file: !202, line: 460, type: !216, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !219)
!216 = !DISubroutineType(types: !217)
!217 = !{!208, !208, !218}
!218 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!219 = !{!214, !220}
!220 = !DILocalVariable(name: "count", arg: 2, scope: !215, file: !202, line: 460, type: !218)
!221 = !DILocation(line: 460, column: 32, scope: !215, inlinedAt: !222)
!222 = distinct !DILocation(line: 920, column: 18, scope: !201, inlinedAt: !212)
!223 = !DILocation(line: 460, column: 38, scope: !215, inlinedAt: !222)
!224 = !DILocation(line: 465, column: 18, scope: !215, inlinedAt: !222)
!225 = !DILocation(line: 387, column: 13, scope: !189)
!226 = !DILocation(line: 389, column: 6, scope: !163)
!227 = !DILocalVariable(name: "this", arg: 1, scope: !228, file: !229, line: 2484, type: !175)
!228 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17h1ff5ce516cbba997E", scope: !230, file: !229, line: 2484, type: !231, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !233)
!229 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "3a443bdaf0a09f89f5b2fb75aa981800")
!230 = !DINamespace(name: "get_unchecked", scope: !165)
!231 = !DISubroutineType(types: !232)
!232 = !{null, !175, !170}
!233 = !{!227, !234}
!234 = !DILocalVariable(name: "slice", arg: 2, scope: !228, file: !229, line: 2484, type: !170)
!235 = !DILocation(line: 2484, column: 39, scope: !228, inlinedAt: !236)
!236 = distinct !DILocation(line: 381, column: 13, scope: !187)
!237 = !DILocation(line: 384, column: 17, scope: !238, inlinedAt: !236)
!238 = !DILexicalBlockFile(scope: !228, file: !164, discriminator: 0)
!239 = !DILocation(line: 384, column: 55, scope: !238, inlinedAt: !236)
!240 = !DILocation(line: 384, column: 43, scope: !238, inlinedAt: !236)
!241 = !DILocation(line: 2485, column: 20, scope: !228, inlinedAt: !236)
!242 = !{i8 0, i8 2}
!243 = !DILocation(line: 2487, column: 21, scope: !228, inlinedAt: !236)
!244 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2ce56c62d1d071b6E", scope: !165, file: !164, line: 392, type: !245, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !251)
!245 = !DISubroutineType(types: !246)
!246 = !{!247, !175, !247}
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !248, templateParams: !24, identifier: "36ef83c999cdb5c258c3ef4b914b609f")
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !247, file: !2, baseType: !173, size: 64, align: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !247, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!251 = !{!252, !253, !254, !256}
!252 = !DILocalVariable(name: "self", arg: 1, scope: !244, file: !164, line: 392, type: !175)
!253 = !DILocalVariable(name: "slice", arg: 2, scope: !244, file: !164, line: 392, type: !247)
!254 = !DILocalVariable(name: "this", scope: !255, file: !164, line: 393, type: !175, align: 8)
!255 = distinct !DILexicalBlock(scope: !244, file: !164, line: 393, column: 9)
!256 = !DILocalVariable(name: "new_len", scope: !257, file: !164, line: 401, type: !9, align: 8)
!257 = distinct !DILexicalBlock(scope: !255, file: !164, line: 401, column: 13)
!258 = !DILocation(line: 392, column: 33, scope: !244)
!259 = !DILocation(line: 392, column: 39, scope: !244)
!260 = !DILocation(line: 393, column: 13, scope: !255)
!261 = !DILocation(line: 393, column: 20, scope: !244)
!262 = !DILocation(line: 396, column: 13, scope: !255)
!263 = !DILocation(line: 401, column: 27, scope: !255)
!264 = !DILocation(line: 401, column: 17, scope: !257)
!265 = !DILocalVariable(name: "self", arg: 1, scope: !266, file: !267, line: 2014, type: !247)
!266 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h6b83ef297ea5609fE", scope: !268, file: !267, line: 2014, type: !270, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !273)
!267 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "11087a90ad8f3b9862444e143466697a")
!268 = !DINamespace(name: "{impl#1}", scope: !269)
!269 = !DINamespace(name: "mut_ptr", scope: !205)
!270 = !DISubroutineType(types: !271)
!271 = !{!272, !247}
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!273 = !{!265}
!274 = !DILocation(line: 2014, column: 29, scope: !266, inlinedAt: !275)
!275 = distinct !DILocation(line: 402, column: 43, scope: !257)
!276 = !DILocalVariable(name: "self", arg: 1, scope: !277, file: !267, line: 1015, type: !272)
!277 = distinct !DISubprogram(name: "add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf3f870e6812bbbb6E", scope: !278, file: !267, line: 1015, type: !279, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !281)
!278 = !DINamespace(name: "{impl#0}", scope: !269)
!279 = !DISubroutineType(types: !280)
!280 = !{!272, !272, !9}
!281 = !{!276, !282}
!282 = !DILocalVariable(name: "count", arg: 2, scope: !277, file: !267, line: 1015, type: !9)
!283 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !284)
!284 = distinct !DILocation(line: 402, column: 43, scope: !257)
!285 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !284)
!286 = !DILocalVariable(name: "self", arg: 1, scope: !287, file: !267, line: 472, type: !272)
!287 = distinct !DISubprogram(name: "offset<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h63b181a41f41fa84E", scope: !278, file: !267, line: 472, type: !288, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !290)
!288 = !DISubroutineType(types: !289)
!289 = !{!272, !272, !218}
!290 = !{!286, !291}
!291 = !DILocalVariable(name: "count", arg: 2, scope: !287, file: !267, line: 472, type: !218)
!292 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !293)
!293 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !284)
!294 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !293)
!295 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !293)
!296 = !DILocation(line: 402, column: 13, scope: !257)
!297 = !DILocation(line: 404, column: 6, scope: !244)
!298 = !DILocalVariable(name: "this", arg: 1, scope: !299, file: !229, line: 2484, type: !175)
!299 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h19713aa0ec311f3bE", scope: !300, file: !229, line: 2484, type: !301, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !303)
!300 = !DINamespace(name: "get_unchecked_mut", scope: !165)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !175, !247}
!303 = !{!298, !304}
!304 = !DILocalVariable(name: "slice", arg: 2, scope: !299, file: !229, line: 2484, type: !247)
!305 = !DILocation(line: 2484, column: 39, scope: !299, inlinedAt: !306)
!306 = distinct !DILocation(line: 396, column: 13, scope: !255)
!307 = !DILocation(line: 399, column: 17, scope: !308, inlinedAt: !306)
!308 = !DILexicalBlockFile(scope: !299, file: !164, discriminator: 0)
!309 = !DILocalVariable(name: "self", arg: 1, scope: !310, file: !267, line: 1878, type: !247)
!310 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17hd347498c18c4ec94E", scope: !268, file: !267, line: 1878, type: !311, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !313)
!311 = !DISubroutineType(types: !312)
!312 = !{!9, !247}
!313 = !{!309}
!314 = !DILocation(line: 1878, column: 22, scope: !310, inlinedAt: !315)
!315 = distinct !DILocation(line: 399, column: 55, scope: !308, inlinedAt: !306)
!316 = !DILocation(line: 1879, column: 9, scope: !310, inlinedAt: !315)
!317 = !DILocation(line: 399, column: 43, scope: !308, inlinedAt: !306)
!318 = !DILocation(line: 2485, column: 20, scope: !299, inlinedAt: !306)
!319 = !DILocation(line: 2487, column: 21, scope: !299, inlinedAt: !306)
!320 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17haff5e48139e6d51eE", scope: !165, file: !164, line: 407, type: !321, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !340)
!321 = !DISubroutineType(types: !322)
!322 = !{!323, !175, !323, !327}
!323 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !324, templateParams: !24, identifier: "75bb5f1ad11dafe0f685cba80f250c61")
!324 = !{!325, !326}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !323, file: !2, baseType: !173, size: 64, align: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !323, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !328, size: 64, align: 64, dwarfAddressSpace: 0)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !329, file: !2, size: 192, align: 64, elements: !331, templateParams: !24, identifier: "24a132ec608676bf484e0b39817cad59")
!329 = !DINamespace(name: "location", scope: !330)
!330 = !DINamespace(name: "panic", scope: !143)
!331 = !{!332, !338, !339}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !328, file: !2, baseType: !333, size: 128, align: 64)
!333 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !334, templateParams: !24, identifier: "857c99401054bcaa39f98e6e0c6d74b")
!334 = !{!335, !337}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !333, file: !2, baseType: !336, size: 64, align: 64)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !333, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !328, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !328, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!340 = !{!341, !342}
!341 = !DILocalVariable(name: "self", arg: 1, scope: !320, file: !164, line: 407, type: !175)
!342 = !DILocalVariable(name: "slice", arg: 2, scope: !320, file: !164, line: 407, type: !323)
!343 = !DILocation(line: 407, column: 14, scope: !320)
!344 = !DILocation(line: 407, column: 20, scope: !320)
!345 = !DILocation(line: 408, column: 12, scope: !320)
!346 = !DILocation(line: 410, column: 19, scope: !320)
!347 = !DILocation(line: 409, column: 13, scope: !320)
!348 = !DILocation(line: 414, column: 20, scope: !320)
!349 = !DILocation(line: 415, column: 6, scope: !320)
!350 = !DILocation(line: 411, column: 13, scope: !320)
!351 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf93e08869586640aE", scope: !165, file: !164, line: 418, type: !352, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !358)
!352 = !DISubroutineType(types: !353)
!353 = !{!354, !175, !354, !327}
!354 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion]", file: !2, size: 128, align: 64, elements: !355, templateParams: !24, identifier: "2fddb9de6ac0e1ec52fec4088780f399")
!355 = !{!356, !357}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !354, file: !2, baseType: !173, size: 64, align: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !354, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!358 = !{!359, !360}
!359 = !DILocalVariable(name: "self", arg: 1, scope: !351, file: !164, line: 418, type: !175)
!360 = !DILocalVariable(name: "slice", arg: 2, scope: !351, file: !164, line: 418, type: !354)
!361 = !DILocation(line: 418, column: 18, scope: !351)
!362 = !DILocation(line: 418, column: 24, scope: !351)
!363 = !DILocation(line: 419, column: 12, scope: !351)
!364 = !DILocation(line: 421, column: 19, scope: !351)
!365 = !DILocation(line: 420, column: 13, scope: !351)
!366 = !DILocation(line: 425, column: 24, scope: !351)
!367 = !DILocation(line: 426, column: 6, scope: !351)
!368 = !DILocation(line: 422, column: 13, scope: !351)
!369 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd9bac579f2e3e23fE", scope: !370, file: !164, line: 462, type: !371, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !376)
!370 = !DINamespace(name: "{impl#5}", scope: !166)
!371 = !DISubroutineType(types: !372)
!372 = !{!354, !373, !354, !327}
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !176, file: !2, size: 64, align: 64, elements: !374, templateParams: !181, identifier: "9070d5ae45b45995c91dfb6b5ad4ffc1")
!374 = !{!375}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !373, file: !2, baseType: !9, size: 64, align: 64)
!376 = !{!377, !378}
!377 = !DILocalVariable(name: "self", arg: 1, scope: !369, file: !164, line: 462, type: !373)
!378 = !DILocalVariable(name: "slice", arg: 2, scope: !369, file: !164, line: 462, type: !354)
!379 = !DILocation(line: 462, column: 18, scope: !369)
!380 = !DILocation(line: 462, column: 24, scope: !369)
!381 = !DILocation(line: 463, column: 9, scope: !369)
!382 = !DILocation(line: 464, column: 6, scope: !369)
!383 = distinct !DISubprogram(name: "get_unchecked_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h0358784fea02884dE", scope: !384, file: !164, line: 489, type: !385, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !390)
!384 = !DINamespace(name: "{impl#6}", scope: !166)
!385 = !DISubroutineType(types: !386)
!386 = !{!247, !387, !247}
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !176, file: !2, size: 64, align: 64, elements: !388, templateParams: !181, identifier: "f57de976b31ca4cfbd343fdb3a994ff4")
!388 = !{!389}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !387, file: !2, baseType: !9, size: 64, align: 64)
!390 = !{!391, !392}
!391 = !DILocalVariable(name: "self", arg: 1, scope: !383, file: !164, line: 489, type: !387)
!392 = !DILocalVariable(name: "slice", arg: 2, scope: !383, file: !164, line: 489, type: !247)
!393 = !DILocation(line: 489, column: 33, scope: !383)
!394 = !DILocation(line: 489, column: 39, scope: !383)
!395 = !DILocation(line: 1878, column: 22, scope: !310, inlinedAt: !396)
!396 = distinct !DILocation(line: 491, column: 31, scope: !383)
!397 = !DILocation(line: 1879, column: 9, scope: !310, inlinedAt: !396)
!398 = !DILocation(line: 491, column: 18, scope: !383)
!399 = !DILocation(line: 492, column: 6, scope: !383)
!400 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd547e1811f3e4269E", scope: !384, file: !164, line: 504, type: !401, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !403)
!401 = !DISubroutineType(types: !402)
!402 = !{!354, !387, !354, !327}
!403 = !{!404, !405}
!404 = !DILocalVariable(name: "self", arg: 1, scope: !400, file: !164, line: 504, type: !387)
!405 = !DILocalVariable(name: "slice", arg: 2, scope: !400, file: !164, line: 504, type: !354)
!406 = !DILocation(line: 504, column: 18, scope: !400)
!407 = !DILocation(line: 504, column: 24, scope: !400)
!408 = !DILocation(line: 505, column: 12, scope: !400)
!409 = !DILocation(line: 509, column: 24, scope: !400)
!410 = !DILocation(line: 510, column: 6, scope: !400)
!411 = !DILocation(line: 506, column: 13, scope: !400)
!412 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc4ce3d4532c78366E", scope: !413, file: !164, line: 585, type: !414, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !422)
!413 = !DINamespace(name: "{impl#8}", scope: !166)
!414 = !DISubroutineType(types: !415)
!415 = !{!354, !416, !354, !327}
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !176, file: !2, size: 192, align: 64, elements: !417, templateParams: !181, identifier: "c3d4d44a3e02317da17f2599f7ce7774")
!417 = !{!418, !419, !420}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !416, file: !2, baseType: !9, size: 64, align: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !416, file: !2, baseType: !421, size: 8, align: 8, offset: 128)
!421 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!422 = !{!423, !424}
!423 = !DILocalVariable(name: "self", arg: 1, scope: !412, file: !164, line: 585, type: !416)
!424 = !DILocalVariable(name: "slice", arg: 2, scope: !412, file: !164, line: 585, type: !354)
!425 = !DILocation(line: 585, column: 18, scope: !412)
!426 = !DILocation(line: 585, column: 24, scope: !412)
!427 = !DILocation(line: 586, column: 13, scope: !412)
!428 = !DILocation(line: 586, column: 12, scope: !412)
!429 = !DILocation(line: 589, column: 9, scope: !412)
!430 = !DILocation(line: 590, column: 6, scope: !412)
!431 = !DILocation(line: 587, column: 13, scope: !412)
!432 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h0a361e9ac236b6adE", scope: !433, file: !164, line: 626, type: !434, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !439)
!433 = !DINamespace(name: "{impl#9}", scope: !166)
!434 = !DISubroutineType(types: !435)
!435 = !{!354, !436, !354, !327}
!436 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeToInclusive<usize>", scope: !176, file: !2, size: 64, align: 64, elements: !437, templateParams: !181, identifier: "47a3fc841551c6af239fb7cc117833ee")
!437 = !{!438}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !436, file: !2, baseType: !9, size: 64, align: 64)
!439 = !{!440, !441}
!440 = !DILocalVariable(name: "self", arg: 1, scope: !432, file: !164, line: 626, type: !436)
!441 = !DILocalVariable(name: "slice", arg: 2, scope: !432, file: !164, line: 626, type: !354)
!442 = !DILocation(line: 626, column: 18, scope: !432)
!443 = !DILocation(line: 626, column: 24, scope: !432)
!444 = !DILocation(line: 627, column: 9, scope: !432)
!445 = !DILocation(line: 628, column: 6, scope: !432)
!446 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha840e02953f70767E", scope: !448, file: !447, line: 2418, type: !449, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !504)
!447 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "182f86c33f08a6043ea29a144b857881")
!448 = !DINamespace(name: "{impl#59}", scope: !142)
!449 = !DISubroutineType(types: !450)
!450 = !{!451, !469, !470}
!451 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !452, file: !2, size: 8, align: 8, elements: !453, templateParams: !24, identifier: "1c6ce168e24238e83c13ec35dde7d382")
!452 = !DINamespace(name: "result", scope: !143)
!453 = !{!454}
!454 = !DICompositeType(tag: DW_TAG_variant_part, scope: !451, file: !2, size: 8, align: 8, elements: !455, templateParams: !24, identifier: "42dfca7da53f7734270db51480dbcc24", discriminator: !468)
!455 = !{!456, !464}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !454, file: !2, baseType: !457, size: 8, align: 8, extraData: i64 0)
!457 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !451, file: !2, size: 8, align: 8, elements: !458, templateParams: !460, identifier: "4d011f8c16a13f53ec25b197c7b1903")
!458 = !{!459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !457, file: !2, baseType: !7, align: 8, offset: 8)
!460 = !{!461, !462}
!461 = !DITemplateTypeParameter(name: "T", type: !7)
!462 = !DITemplateTypeParameter(name: "E", type: !463)
!463 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !142, file: !2, align: 8, elements: !24, identifier: "d361babf030d8dcc5fc2146a5e622473")
!464 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !454, file: !2, baseType: !465, size: 8, align: 8, extraData: i64 1)
!465 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !451, file: !2, size: 8, align: 8, elements: !466, templateParams: !460, identifier: "c5af1e4fa5907b7a524a9ebbd4a5ec10")
!466 = !{!467}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !465, file: !2, baseType: !463, align: 8, offset: 8)
!468 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !2, baseType: !123, size: 8, align: 8, flags: DIFlagArtificial)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !471, size: 64, align: 64, dwarfAddressSpace: 0)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !142, file: !2, size: 512, align: 64, elements: !472, templateParams: !24, identifier: "a3b888d0a58016a3ad42c934cf971ea3")
!472 = !{!473, !474, !476, !477, !492, !493}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !471, file: !2, baseType: !27, size: 32, align: 32, offset: 384)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !471, file: !2, baseType: !475, size: 32, align: 32, offset: 416)
!475 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !471, file: !2, baseType: !139, size: 8, align: 8, offset: 448)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !471, file: !2, baseType: !478, size: 128, align: 64, offset: 128)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !479, file: !2, size: 128, align: 64, elements: !480, templateParams: !24, identifier: "8d57b0310dad0e81a52a7e1f827929d")
!479 = !DINamespace(name: "option", scope: !143)
!480 = !{!481}
!481 = !DICompositeType(tag: DW_TAG_variant_part, scope: !478, file: !2, size: 128, align: 64, elements: !482, templateParams: !24, identifier: "1503e6327b896c262eca127cbc35ec74", discriminator: !491)
!482 = !{!483, !487}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !481, file: !2, baseType: !484, size: 128, align: 64, extraData: i64 0)
!484 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !478, file: !2, size: 128, align: 64, elements: !24, templateParams: !485, identifier: "b9a11c756332445b5e317b2b2625f528")
!485 = !{!486}
!486 = !DITemplateTypeParameter(name: "T", type: !9)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !481, file: !2, baseType: !488, size: 128, align: 64, extraData: i64 1)
!488 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !478, file: !2, size: 128, align: 64, elements: !489, templateParams: !485, identifier: "87159a1745a522a36bc4a0700aab6dc3")
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !488, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, scope: !478, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !471, file: !2, baseType: !478, size: 128, align: 64, offset: 256)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !471, file: !2, baseType: !494, size: 128, align: 64)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !495, templateParams: !24, identifier: "b58efcb3df0f0beb9aa098f750459fd2")
!495 = !{!496, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !494, file: !2, baseType: !497, size: 64, align: 64)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64, align: 64, dwarfAddressSpace: 0)
!498 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !24, identifier: "bcfe988c4f0dd1d50291e24ffc6447")
!499 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !494, file: !2, baseType: !500, size: 64, align: 64, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !501, size: 64, align: 64, dwarfAddressSpace: 0)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !502)
!502 = !{!503}
!503 = !DISubrange(count: 3, lowerBound: 0)
!504 = !{!505, !506}
!505 = !DILocalVariable(name: "self", arg: 1, scope: !446, file: !447, line: 2418, type: !469)
!506 = !DILocalVariable(name: "f", arg: 2, scope: !446, file: !447, line: 2418, type: !470)
!507 = !DILocation(line: 2418, column: 20, scope: !446)
!508 = !DILocation(line: 2418, column: 27, scope: !446)
!509 = !DILocation(line: 2418, column: 71, scope: !446)
!510 = !{i64 8}
!511 = !DILocation(line: 2418, column: 62, scope: !446)
!512 = !DILocation(line: 2418, column: 84, scope: !446)
!513 = distinct !DISubprogram(name: "fmt<bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd6cd9195c5fd3845E", scope: !448, file: !447, line: 2418, type: !514, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !520, retainedNodes: !517)
!514 = !DISubroutineType(types: !515)
!515 = !{!451, !516, !470}
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!517 = !{!518, !519}
!518 = !DILocalVariable(name: "self", arg: 1, scope: !513, file: !447, line: 2418, type: !516)
!519 = !DILocalVariable(name: "f", arg: 2, scope: !513, file: !447, line: 2418, type: !470)
!520 = !{!521}
!521 = !DITemplateTypeParameter(name: "T", type: !26)
!522 = !DILocation(line: 2418, column: 20, scope: !513)
!523 = !DILocation(line: 2418, column: 27, scope: !513)
!524 = !DILocation(line: 2418, column: 71, scope: !513)
!525 = !{i64 4}
!526 = !DILocation(line: 2418, column: 62, scope: !513)
!527 = !DILocation(line: 2418, column: 84, scope: !513)
!528 = distinct !DISubprogram(name: "is_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17hde59f38a0bf7fb53E", scope: !529, file: !229, line: 2519, type: !530, scopeLine: 2519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !532)
!529 = !DINamespace(name: "intrinsics", scope: !143)
!530 = !DISubroutineType(types: !531)
!531 = !{!421, !208, !208, !9}
!532 = !{!533, !534, !535, !536, !538, !540, !542}
!533 = !DILocalVariable(name: "src", arg: 1, scope: !528, file: !229, line: 2519, type: !208)
!534 = !DILocalVariable(name: "dst", arg: 2, scope: !528, file: !229, line: 2519, type: !208)
!535 = !DILocalVariable(name: "count", arg: 3, scope: !528, file: !229, line: 2519, type: !9)
!536 = !DILocalVariable(name: "src_usize", scope: !537, file: !229, line: 2520, type: !9, align: 8)
!537 = distinct !DILexicalBlock(scope: !528, file: !229, line: 2520, column: 5)
!538 = !DILocalVariable(name: "dst_usize", scope: !539, file: !229, line: 2521, type: !9, align: 8)
!539 = distinct !DILexicalBlock(scope: !537, file: !229, line: 2521, column: 5)
!540 = !DILocalVariable(name: "size", scope: !541, file: !229, line: 2522, type: !9, align: 8)
!541 = distinct !DILexicalBlock(scope: !539, file: !229, line: 2522, column: 5)
!542 = !DILocalVariable(name: "diff", scope: !543, file: !229, line: 2523, type: !9, align: 8)
!543 = distinct !DILexicalBlock(scope: !541, file: !229, line: 2523, column: 5)
!544 = !DILocation(line: 2519, column: 36, scope: !528)
!545 = !DILocation(line: 2519, column: 51, scope: !528)
!546 = !DILocation(line: 2519, column: 66, scope: !528)
!547 = !DILocation(line: 2523, column: 9, scope: !543)
!548 = !DILocalVariable(name: "self", arg: 1, scope: !549, file: !202, line: 203, type: !208)
!549 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hdb4bf42d8c97bf01E", scope: !203, file: !202, line: 203, type: !550, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !552)
!550 = !DISubroutineType(types: !551)
!551 = !{!9, !208}
!552 = !{!548}
!553 = !DILocation(line: 203, column: 17, scope: !549, inlinedAt: !554)
!554 = distinct !DILocation(line: 2520, column: 21, scope: !528)
!555 = !DILocalVariable(name: "self", arg: 1, scope: !556, file: !202, line: 58, type: !208)
!556 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hbc73f6ce52aea6beE", scope: !203, file: !202, line: 58, type: !557, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !560, retainedNodes: !559)
!557 = !DISubroutineType(types: !558)
!558 = !{!6, !208}
!559 = !{!555}
!560 = !{!191, !561}
!561 = !DITemplateTypeParameter(name: "U", type: !7)
!562 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !563)
!563 = distinct !DILocation(line: 207, column: 33, scope: !549, inlinedAt: !554)
!564 = !DILocation(line: 207, column: 18, scope: !549, inlinedAt: !554)
!565 = !DILocation(line: 2520, column: 21, scope: !528)
!566 = !DILocation(line: 2520, column: 9, scope: !537)
!567 = !DILocation(line: 203, column: 17, scope: !549, inlinedAt: !568)
!568 = distinct !DILocation(line: 2521, column: 21, scope: !537)
!569 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !570)
!570 = distinct !DILocation(line: 207, column: 33, scope: !549, inlinedAt: !568)
!571 = !DILocation(line: 207, column: 18, scope: !549, inlinedAt: !568)
!572 = !DILocation(line: 2521, column: 21, scope: !537)
!573 = !DILocation(line: 2521, column: 9, scope: !539)
!574 = !DILocation(line: 2522, column: 16, scope: !539)
!575 = !DILocation(line: 2522, column: 9, scope: !541)
!576 = !DILocation(line: 2523, column: 19, scope: !541)
!577 = !DILocation(line: 2523, column: 74, scope: !541)
!578 = !DILocation(line: 2523, column: 43, scope: !541)
!579 = !DILocation(line: 2523, column: 16, scope: !541)
!580 = !DILocation(line: 2526, column: 5, scope: !543)
!581 = !DILocation(line: 2527, column: 2, scope: !528)
!582 = distinct !DISubprogram(name: "copy_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h043830e124fcf1c8E", scope: !529, file: !229, line: 2619, type: !583, scopeLine: 2619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !585)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !208, !272, !9}
!585 = !{!586, !587, !588}
!586 = !DILocalVariable(name: "src", arg: 1, scope: !582, file: !229, line: 2619, type: !208)
!587 = !DILocalVariable(name: "dst", arg: 2, scope: !582, file: !229, line: 2619, type: !272)
!588 = !DILocalVariable(name: "count", arg: 3, scope: !582, file: !229, line: 2619, type: !9)
!589 = !DILocation(line: 2619, column: 44, scope: !582)
!590 = !DILocation(line: 2619, column: 59, scope: !582)
!591 = !DILocation(line: 2619, column: 72, scope: !582)
!592 = !DILocation(line: 2629, column: 9, scope: !582)
!593 = !DILocation(line: 2637, column: 9, scope: !582)
!594 = !DILocation(line: 2639, column: 2, scope: !582)
!595 = !DILocalVariable(name: "src", arg: 1, scope: !596, file: !229, line: 2484, type: !208)
!596 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h9f39d8379615f03aE", scope: !597, file: !229, line: 2484, type: !583, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !598)
!597 = !DINamespace(name: "copy_nonoverlapping", scope: !529)
!598 = !{!595, !599, !600}
!599 = !DILocalVariable(name: "dst", arg: 2, scope: !596, file: !229, line: 2484, type: !272)
!600 = !DILocalVariable(name: "count", arg: 3, scope: !596, file: !229, line: 2484, type: !9)
!601 = !DILocation(line: 2484, column: 39, scope: !596, inlinedAt: !602)
!602 = distinct !DILocation(line: 2629, column: 9, scope: !582)
!603 = !DILocation(line: 2633, column: 13, scope: !596, inlinedAt: !602)
!604 = !DILocation(line: 2634, column: 20, scope: !596, inlinedAt: !602)
!605 = !DILocation(line: 2635, column: 20, scope: !596, inlinedAt: !602)
!606 = !DILocation(line: 2485, column: 20, scope: !596, inlinedAt: !602)
!607 = !DILocation(line: 2487, column: 21, scope: !596, inlinedAt: !602)
!608 = distinct !DISubprogram(name: "copy_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h3fc0a0a5354c2a60E", scope: !529, file: !229, line: 2619, type: !609, scopeLine: 2619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !613)
!609 = !DISubroutineType(types: !610)
!610 = !{null, !611, !612, !9}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!613 = !{!614, !615, !616}
!614 = !DILocalVariable(name: "src", arg: 1, scope: !608, file: !229, line: 2619, type: !611)
!615 = !DILocalVariable(name: "dst", arg: 2, scope: !608, file: !229, line: 2619, type: !612)
!616 = !DILocalVariable(name: "count", arg: 3, scope: !608, file: !229, line: 2619, type: !9)
!617 = !DILocation(line: 2619, column: 44, scope: !608)
!618 = !DILocation(line: 2619, column: 59, scope: !608)
!619 = !DILocation(line: 2619, column: 72, scope: !608)
!620 = !DILocation(line: 2629, column: 9, scope: !608)
!621 = !DILocation(line: 2637, column: 9, scope: !608)
!622 = !DILocation(line: 2639, column: 2, scope: !608)
!623 = !DILocalVariable(name: "src", arg: 1, scope: !624, file: !229, line: 2484, type: !611)
!624 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping7runtime17h5cb93030700fe491E", scope: !597, file: !229, line: 2484, type: !609, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !625)
!625 = !{!623, !626, !627}
!626 = !DILocalVariable(name: "dst", arg: 2, scope: !624, file: !229, line: 2484, type: !612)
!627 = !DILocalVariable(name: "count", arg: 3, scope: !624, file: !229, line: 2484, type: !9)
!628 = !DILocation(line: 2484, column: 39, scope: !624, inlinedAt: !629)
!629 = distinct !DILocation(line: 2629, column: 9, scope: !608)
!630 = !DILocation(line: 2633, column: 13, scope: !624, inlinedAt: !629)
!631 = !DILocation(line: 2634, column: 20, scope: !624, inlinedAt: !629)
!632 = !DILocation(line: 2635, column: 20, scope: !624, inlinedAt: !629)
!633 = !DILocation(line: 2485, column: 20, scope: !624, inlinedAt: !629)
!634 = !DILocation(line: 2487, column: 21, scope: !624, inlinedAt: !629)
!635 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h7024e836f5e00bcaE", scope: !529, file: !229, line: 2503, type: !636, scopeLine: 2503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !649)
!636 = !DISubroutineType(types: !637)
!637 = !{!421, !638}
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !639, size: 64, align: 64, dwarfAddressSpace: 0)
!639 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !640, file: !2, size: 192, align: 64, elements: !642, templateParams: !190, identifier: "2af97901b9bae128171a06be16c67c9a")
!640 = !DINamespace(name: "maybe_uninit", scope: !641)
!641 = !DINamespace(name: "mem", scope: !143)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !639, file: !2, baseType: !7, align: 8)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !639, file: !2, baseType: !645, size: 192, align: 64)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !646, file: !2, size: 192, align: 64, elements: !647, templateParams: !190, identifier: "6e18a9f6ad22e2f12c075c9cc271a6bc")
!646 = !DINamespace(name: "manually_drop", scope: !641)
!647 = !{!648}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !645, file: !2, baseType: !13, size: 192, align: 64)
!649 = !{!650}
!650 = !DILocalVariable(name: "ptr", arg: 1, scope: !635, file: !229, line: 2503, type: !638)
!651 = !{!652}
!652 = !DITemplateTypeParameter(name: "T", type: !639)
!653 = !DILocation(line: 2503, column: 42, scope: !635)
!654 = !DILocation(line: 2504, column: 6, scope: !635)
!655 = !DILocation(line: 2504, column: 5, scope: !635)
!656 = !DILocation(line: 2504, column: 23, scope: !635)
!657 = !DILocation(line: 2505, column: 2, scope: !635)
!658 = distinct !DISubprogram(name: "is_aligned_and_not_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17hf4ba8c4511457810E", scope: !529, file: !229, line: 2503, type: !659, scopeLine: 2503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !661)
!659 = !DISubroutineType(types: !660)
!660 = !{!421, !208}
!661 = !{!662}
!662 = !DILocalVariable(name: "ptr", arg: 1, scope: !658, file: !229, line: 2503, type: !208)
!663 = !DILocation(line: 2503, column: 42, scope: !658)
!664 = !DILocation(line: 2504, column: 6, scope: !658)
!665 = !DILocation(line: 2504, column: 5, scope: !658)
!666 = !DILocation(line: 2504, column: 23, scope: !658)
!667 = !DILocation(line: 2505, column: 2, scope: !658)
!668 = distinct !DISubprogram(name: "is_valid_allocation_size<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics24is_valid_allocation_size17hf5c09850e6be46cfE", scope: !529, file: !229, line: 2509, type: !669, scopeLine: 2509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !671)
!669 = !DISubroutineType(types: !670)
!670 = !{!421, !9}
!671 = !{!672, !673}
!672 = !DILocalVariable(name: "len", arg: 1, scope: !668, file: !229, line: 2509, type: !9)
!673 = !DILocalVariable(name: "max_len", scope: !674, file: !229, line: 2510, type: !9, align: 8)
!674 = distinct !DILexicalBlock(scope: !668, file: !229, line: 2510, column: 5)
!675 = !DILocation(line: 2509, column: 43, scope: !668)
!676 = !DILocation(line: 2510, column: 19, scope: !668)
!677 = !DILocation(line: 2510, column: 9, scope: !674)
!678 = !DILocation(line: 2514, column: 5, scope: !674)
!679 = !DILocation(line: 2515, column: 2, scope: !668)
!680 = distinct !DISubprogram(name: "copy<usize>", linkageName: "_ZN4core10intrinsics4copy17h6835612ca7c29911E", scope: !529, file: !229, line: 2710, type: !609, scopeLine: 2710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !681)
!681 = !{!682, !683, !684}
!682 = !DILocalVariable(name: "src", arg: 1, scope: !680, file: !229, line: 2710, type: !611)
!683 = !DILocalVariable(name: "dst", arg: 2, scope: !680, file: !229, line: 2710, type: !612)
!684 = !DILocalVariable(name: "count", arg: 3, scope: !680, file: !229, line: 2710, type: !9)
!685 = !DILocation(line: 2710, column: 29, scope: !680)
!686 = !DILocation(line: 2710, column: 44, scope: !680)
!687 = !DILocation(line: 2710, column: 57, scope: !680)
!688 = !DILocation(line: 2719, column: 9, scope: !680)
!689 = !DILocation(line: 2724, column: 9, scope: !680)
!690 = !DILocation(line: 2726, column: 2, scope: !680)
!691 = !DILocalVariable(name: "src", arg: 1, scope: !692, file: !229, line: 2484, type: !611)
!692 = distinct !DISubprogram(name: "runtime<usize>", linkageName: "_ZN4core10intrinsics4copy7runtime17h400269ee81791563E", scope: !693, file: !229, line: 2484, type: !694, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !696)
!693 = !DINamespace(name: "copy", scope: !529)
!694 = !DISubroutineType(types: !695)
!695 = !{null, !611, !612}
!696 = !{!691, !697}
!697 = !DILocalVariable(name: "dst", arg: 2, scope: !692, file: !229, line: 2484, type: !612)
!698 = !DILocation(line: 2484, column: 39, scope: !692, inlinedAt: !699)
!699 = distinct !DILocation(line: 2719, column: 9, scope: !680)
!700 = !DILocation(line: 2722, column: 13, scope: !692, inlinedAt: !699)
!701 = !DILocation(line: 2722, column: 45, scope: !692, inlinedAt: !699)
!702 = !DILocation(line: 2485, column: 20, scope: !692, inlinedAt: !699)
!703 = !DILocation(line: 2487, column: 21, scope: !692, inlinedAt: !699)
!704 = distinct !DISubprogram(name: "copy<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy17hde30679fb0cb8f2eE", scope: !529, file: !229, line: 2710, type: !583, scopeLine: 2710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !705)
!705 = !{!706, !707, !708}
!706 = !DILocalVariable(name: "src", arg: 1, scope: !704, file: !229, line: 2710, type: !208)
!707 = !DILocalVariable(name: "dst", arg: 2, scope: !704, file: !229, line: 2710, type: !272)
!708 = !DILocalVariable(name: "count", arg: 3, scope: !704, file: !229, line: 2710, type: !9)
!709 = !DILocation(line: 2710, column: 29, scope: !704)
!710 = !DILocation(line: 2710, column: 44, scope: !704)
!711 = !DILocation(line: 2710, column: 57, scope: !704)
!712 = !DILocation(line: 2719, column: 9, scope: !704)
!713 = !DILocation(line: 2724, column: 9, scope: !704)
!714 = !DILocation(line: 2726, column: 2, scope: !704)
!715 = !DILocalVariable(name: "src", arg: 1, scope: !716, file: !229, line: 2484, type: !208)
!716 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core10intrinsics4copy7runtime17hbe7485e94375aad4E", scope: !693, file: !229, line: 2484, type: !717, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !719)
!717 = !DISubroutineType(types: !718)
!718 = !{null, !208, !272}
!719 = !{!715, !720}
!720 = !DILocalVariable(name: "dst", arg: 2, scope: !716, file: !229, line: 2484, type: !272)
!721 = !DILocation(line: 2484, column: 39, scope: !716, inlinedAt: !722)
!722 = distinct !DILocation(line: 2719, column: 9, scope: !704)
!723 = !DILocation(line: 2722, column: 13, scope: !716, inlinedAt: !722)
!724 = !DILocation(line: 2722, column: 45, scope: !716, inlinedAt: !722)
!725 = !DILocation(line: 2485, column: 20, scope: !716, inlinedAt: !722)
!726 = !DILocation(line: 2487, column: 21, scope: !716, inlinedAt: !722)
!727 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$u64$GT$3cmp17ha720db96ca76e537E", scope: !729, file: !728, line: 1415, type: !731, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !733)
!728 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "1600eb58139fc5bc9fc1d10b55c4e0c1")
!729 = !DINamespace(name: "{impl#63}", scope: !730)
!730 = !DINamespace(name: "impls", scope: !150)
!731 = !DISubroutineType(types: !732)
!732 = !{!149, !132, !132}
!733 = !{!734, !735}
!734 = !DILocalVariable(name: "self", arg: 1, scope: !727, file: !728, line: 1415, type: !132)
!735 = !DILocalVariable(name: "other", arg: 2, scope: !727, file: !728, line: 1415, type: !132)
!736 = !DILocation(line: 1415, column: 24, scope: !727)
!737 = !DILocation(line: 1415, column: 31, scope: !727)
!738 = !DILocation(line: 1418, column: 24, scope: !727)
!739 = !DILocation(line: 1418, column: 32, scope: !727)
!740 = !DILocation(line: 1419, column: 29, scope: !727)
!741 = !DILocation(line: 1419, column: 38, scope: !727)
!742 = !DILocation(line: 1418, column: 41, scope: !727)
!743 = !DILocation(line: 1418, column: 21, scope: !727)
!744 = !DILocation(line: 1421, column: 18, scope: !727)
!745 = !{i8 -1, i8 2}
!746 = !DILocation(line: 1420, column: 28, scope: !727)
!747 = !DILocation(line: 1419, column: 26, scope: !727)
!748 = !DILocation(line: 1419, column: 47, scope: !727)
!749 = distinct !DISubprogram(name: "new_lower_hex<u64>", linkageName: "_ZN4core3fmt10ArgumentV113new_lower_hex17hc064ddddc92919cbE", scope: !750, file: !447, line: 329, type: !760, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !764, retainedNodes: !762)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !142, file: !2, size: 128, align: 64, elements: !751, templateParams: !24, identifier: "3c2ef6ebf262caba6e43777d9c298823")
!751 = !{!752, !756}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !750, file: !2, baseType: !753, size: 64, align: 64)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !754, size: 64, align: 64, dwarfAddressSpace: 0)
!754 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !755, file: !2, align: 8, elements: !24, identifier: "43185ab61ba6b0b799bd1bef1620bc0b")
!755 = !DINamespace(name: "{extern#0}", scope: !142)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !750, file: !2, baseType: !757, size: 64, align: 64, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !758, size: 64, align: 64, dwarfAddressSpace: 0)
!758 = !DISubroutineType(types: !759)
!759 = !{!451, !753, !470}
!760 = !DISubroutineType(types: !761)
!761 = !{!750, !132}
!762 = !{!763}
!763 = !DILocalVariable(name: "x", arg: 1, scope: !749, file: !447, line: 329, type: !132)
!764 = !{!765}
!765 = !DITemplateTypeParameter(name: "T", type: !22)
!766 = !DILocation(line: 329, column: 30, scope: !749)
!767 = !DILocation(line: 330, column: 13, scope: !749)
!768 = !DILocation(line: 331, column: 10, scope: !749)
!769 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hea2ff610b2a3984aE", scope: !771, file: !770, line: 185, type: !773, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !775)
!770 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "02359a317e793c1b82de7b934f87f847")
!771 = !DINamespace(name: "{impl#86}", scope: !772)
!772 = !DINamespace(name: "num", scope: !142)
!773 = !DISubroutineType(types: !774)
!774 = !{!451, !85, !470}
!775 = !{!776, !777}
!776 = !DILocalVariable(name: "self", arg: 1, scope: !769, file: !770, line: 185, type: !85)
!777 = !DILocalVariable(name: "f", arg: 2, scope: !769, file: !770, line: 185, type: !470)
!778 = !DILocation(line: 185, column: 20, scope: !769)
!779 = !DILocation(line: 185, column: 27, scope: !769)
!780 = !DILocation(line: 186, column: 20, scope: !769)
!781 = !DILocation(line: 188, column: 27, scope: !769)
!782 = !DILocation(line: 187, column: 21, scope: !769)
!783 = !DILocation(line: 193, column: 14, scope: !769)
!784 = !DILocation(line: 191, column: 21, scope: !769)
!785 = !DILocation(line: 189, column: 21, scope: !769)
!786 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h1603b60bba44f0f1E", scope: !787, file: !770, line: 185, type: !788, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !790)
!787 = !DINamespace(name: "{impl#87}", scope: !772)
!788 = !DISubroutineType(types: !789)
!789 = !{!451, !132, !470}
!790 = !{!791, !792}
!791 = !DILocalVariable(name: "self", arg: 1, scope: !786, file: !770, line: 185, type: !132)
!792 = !DILocalVariable(name: "f", arg: 2, scope: !786, file: !770, line: 185, type: !470)
!793 = !DILocation(line: 185, column: 20, scope: !786)
!794 = !DILocation(line: 185, column: 27, scope: !786)
!795 = !DILocation(line: 186, column: 20, scope: !786)
!796 = !DILocation(line: 188, column: 27, scope: !786)
!797 = !DILocation(line: 187, column: 21, scope: !786)
!798 = !DILocation(line: 193, column: 14, scope: !786)
!799 = !DILocation(line: 191, column: 21, scope: !786)
!800 = !DILocation(line: 189, column: 21, scope: !786)
!801 = distinct !DISubprogram(name: "entries<&bootloader::bootinfo::memory_map::MemoryRegion, core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17hf04f1b1141114cdfE", scope: !803, file: !802, line: 627, type: !812, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !836, retainedNodes: !829)
!802 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "3a909d1cde985fb0d953605fd1b0e0e2")
!803 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !804, file: !2, size: 128, align: 64, elements: !805, templateParams: !24, identifier: "9ea564596e2c9e1b661a8626c1eb3eed")
!804 = !DINamespace(name: "builders", scope: !142)
!805 = !{!806}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !803, file: !2, baseType: !807, size: 128, align: 64)
!807 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !804, file: !2, size: 128, align: 64, elements: !808, templateParams: !24, identifier: "834020fb28782bbe6224c9026860e130")
!808 = !{!809, !810, !811}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !807, file: !2, baseType: !470, size: 64, align: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !807, file: !2, baseType: !451, size: 8, align: 8, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !807, file: !2, baseType: !421, size: 8, align: 8, offset: 72)
!812 = !DISubroutineType(types: !813)
!813 = !{!814, !814, !815}
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !803, size: 64, align: 64, dwarfAddressSpace: 0)
!815 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !816, file: !2, size: 128, align: 64, elements: !817, templateParams: !190, identifier: "d091305b1f737eecefc97f2e7715e83f")
!816 = !DINamespace(name: "iter", scope: !167)
!817 = !{!818, !823, !824}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !815, file: !2, baseType: !819, size: 64, align: 64, offset: 64)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !820, file: !2, size: 64, align: 64, elements: !821, templateParams: !190, identifier: "8bb01a0a505b0921a61be7b08dd284db")
!820 = !DINamespace(name: "non_null", scope: !205)
!821 = !{!822}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !819, file: !2, baseType: !208, size: 64, align: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !815, file: !2, baseType: !208, size: 64, align: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !815, file: !2, baseType: !825, align: 8)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !826, file: !2, align: 8, elements: !24, templateParams: !827, identifier: "274c3e5ee5790d51d9cb9828a999008e")
!826 = !DINamespace(name: "marker", scope: !143)
!827 = !{!828}
!828 = !DITemplateTypeParameter(name: "T", type: !12)
!829 = !{!830, !831, !832, !834}
!830 = !DILocalVariable(name: "self", arg: 1, scope: !801, file: !802, line: 627, type: !814)
!831 = !DILocalVariable(name: "entries", arg: 2, scope: !801, file: !802, line: 627, type: !815)
!832 = !DILocalVariable(name: "iter", scope: !833, file: !802, line: 632, type: !815, align: 8)
!833 = distinct !DILexicalBlock(scope: !801, file: !802, line: 632, column: 9)
!834 = !DILocalVariable(name: "entry", scope: !835, file: !802, line: 632, type: !12, align: 8)
!835 = distinct !DILexicalBlock(scope: !833, file: !802, line: 632, column: 30)
!836 = !{!837, !838}
!837 = !DITemplateTypeParameter(name: "D", type: !12)
!838 = !DITemplateTypeParameter(name: "I", type: !815)
!839 = !DILocation(line: 627, column: 26, scope: !801)
!840 = !DILocation(line: 627, column: 37, scope: !801)
!841 = !DILocation(line: 632, column: 22, scope: !833)
!842 = !DILocation(line: 632, column: 13, scope: !835)
!843 = !DILocation(line: 632, column: 22, scope: !801)
!844 = !DILocation(line: 632, column: 9, scope: !833)
!845 = !DILocation(line: 636, column: 6, scope: !801)
!846 = !DILocation(line: 632, column: 13, scope: !833)
!847 = !DILocation(line: 633, column: 13, scope: !835)
!848 = !DILocation(line: 634, column: 9, scope: !833)
!849 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17h96272abef9da8fc8E", scope: !850, file: !447, line: 443, type: !909, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !914)
!850 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !142, file: !2, size: 384, align: 64, elements: !851, templateParams: !24, identifier: "dc49042afee2f796a8fa4685389c4b18")
!851 = !{!852, !858, !903}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !850, file: !2, baseType: !853, size: 128, align: 64, offset: 128)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !854, templateParams: !24, identifier: "d76b83877ddcb5cca61caf6bdca727ac")
!854 = !{!855, !857}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !853, file: !2, baseType: !856, size: 64, align: 64)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64, align: 64, dwarfAddressSpace: 0)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !853, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !850, file: !2, baseType: !859, size: 128, align: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !479, file: !2, size: 128, align: 64, elements: !860, templateParams: !24, identifier: "62d362416a1eb41bf984638792a73145")
!860 = !{!861}
!861 = !DICompositeType(tag: DW_TAG_variant_part, scope: !859, file: !2, size: 128, align: 64, elements: !862, templateParams: !24, identifier: "51527d667cbd19b863d93073f3cc474", discriminator: !902)
!862 = !{!863, !898}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !861, file: !2, baseType: !864, size: 128, align: 64, extraData: i64 0)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !859, file: !2, size: 128, align: 64, elements: !24, templateParams: !865, identifier: "66a59c7143972a6588bd1a9c8246e60f")
!865 = !{!866}
!866 = !DITemplateTypeParameter(name: "T", type: !867)
!867 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !868, templateParams: !24, identifier: "66b60dbaad43783577fb935928e2ac56")
!868 = !{!869, !897}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !867, file: !2, baseType: !870, size: 64, align: 64)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64, align: 64, dwarfAddressSpace: 0)
!871 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !140, file: !2, size: 448, align: 64, elements: !872, templateParams: !24, identifier: "1b0f53c51c2a0850dc27a4ea7530e9b2")
!872 = !{!873, !874}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !871, file: !2, baseType: !9, size: 64, align: 64, offset: 384)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !871, file: !2, baseType: !875, size: 384, align: 64)
!875 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !140, file: !2, size: 384, align: 64, elements: !876, templateParams: !24, identifier: "4ceb8823bbeb709d93b7ffb6ddd40132")
!876 = !{!877, !878, !879, !880, !896}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !875, file: !2, baseType: !475, size: 32, align: 32, offset: 288)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !875, file: !2, baseType: !139, size: 8, align: 8, offset: 320)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !875, file: !2, baseType: !27, size: 32, align: 32, offset: 256)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !875, file: !2, baseType: !881, size: 128, align: 64)
!881 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !140, file: !2, size: 128, align: 64, elements: !882, templateParams: !24, identifier: "beb49147a723c973b15fc19c2245c821")
!882 = !{!883}
!883 = !DICompositeType(tag: DW_TAG_variant_part, scope: !881, file: !2, size: 128, align: 64, elements: !884, templateParams: !24, identifier: "c9db73f716fc865c39b9a87ace47fe10", discriminator: !895)
!884 = !{!885, !889, !893}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !883, file: !2, baseType: !886, size: 128, align: 64, extraData: i64 0)
!886 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !881, file: !2, size: 128, align: 64, elements: !887, templateParams: !24, identifier: "db0b97f002b1fae3dbc4ebdd853ff355")
!887 = !{!888}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !886, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !883, file: !2, baseType: !890, size: 128, align: 64, extraData: i64 1)
!890 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !881, file: !2, size: 128, align: 64, elements: !891, templateParams: !24, identifier: "49d2632f301eeedc951f3431bb382902")
!891 = !{!892}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !890, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !883, file: !2, baseType: !894, size: 128, align: 64, extraData: i64 2)
!894 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !881, file: !2, size: 128, align: 64, elements: !24, identifier: "afc023622f1fd60e7b29fd0e4f997a04")
!895 = !DIDerivedType(tag: DW_TAG_member, scope: !881, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !875, file: !2, baseType: !881, size: 128, align: 64, offset: 128)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !867, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !861, file: !2, baseType: !899, size: 128, align: 64)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !859, file: !2, size: 128, align: 64, elements: !900, templateParams: !865, identifier: "45eaeac90b0c2cad515177aa4ad012c0")
!900 = !{!901}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !899, file: !2, baseType: !867, size: 128, align: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, scope: !859, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !850, file: !2, baseType: !904, size: 128, align: 64, offset: 256)
!904 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !905, templateParams: !24, identifier: "83fd9dd078f03ba333a6c21d9c3331b7")
!905 = !{!906, !908}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !904, file: !2, baseType: !907, size: 64, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64, align: 64, dwarfAddressSpace: 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !904, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!850, !853, !904, !867, !911}
!911 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !142, file: !2, align: 8, elements: !912, templateParams: !24, identifier: "4faa2d0373bebf10eea7ffc10aef50")
!912 = !{!913}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !911, file: !2, baseType: !7, align: 8)
!914 = !{!915, !916, !917, !918, !919}
!915 = !DILocalVariable(name: "pieces", arg: 1, scope: !849, file: !447, line: 444, type: !853)
!916 = !DILocalVariable(name: "args", arg: 2, scope: !849, file: !447, line: 445, type: !904)
!917 = !DILocalVariable(name: "fmt", arg: 3, scope: !849, file: !447, line: 446, type: !867)
!918 = !DILocalVariable(name: "_unsafe_arg", scope: !849, file: !447, line: 447, type: !911, align: 1)
!919 = !DILocalVariable(arg: 4, scope: !849, file: !447, line: 447, type: !911)
!920 = !DILocation(line: 447, column: 9, scope: !849)
!921 = !DILocation(line: 444, column: 9, scope: !849)
!922 = !DILocation(line: 445, column: 9, scope: !849)
!923 = !DILocation(line: 446, column: 9, scope: !849)
!924 = !DILocation(line: 449, column: 34, scope: !849)
!925 = !DILocation(line: 449, column: 9, scope: !849)
!926 = !DILocation(line: 450, column: 6, scope: !849)
!927 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117hc8c49b7ed491bfe8E", scope: !850, file: !447, line: 412, type: !928, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !930)
!928 = !DISubroutineType(types: !929)
!929 = !{!850, !853, !904}
!930 = !{!931, !932}
!931 = !DILocalVariable(name: "pieces", arg: 1, scope: !927, file: !447, line: 412, type: !853)
!932 = !DILocalVariable(name: "args", arg: 2, scope: !927, file: !447, line: 412, type: !904)
!933 = !DILocation(line: 412, column: 19, scope: !927)
!934 = !DILocation(line: 412, column: 47, scope: !927)
!935 = !DILocation(line: 413, column: 12, scope: !927)
!936 = !DILocation(line: 413, column: 56, scope: !927)
!937 = !DILocation(line: 413, column: 41, scope: !927)
!938 = !DILocation(line: 416, column: 34, scope: !927)
!939 = !DILocation(line: 416, column: 9, scope: !927)
!940 = !DILocation(line: 417, column: 6, scope: !927)
!941 = !DILocation(line: 414, column: 13, scope: !927)
!942 = distinct !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17h7d88afe42d22638bE", scope: !850, file: !447, line: 399, type: !943, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !945)
!943 = !DISubroutineType(types: !944)
!944 = !{!850, !853}
!945 = !{!946}
!946 = !DILocalVariable(name: "pieces", arg: 1, scope: !942, file: !447, line: 399, type: !853)
!947 = !DILocation(line: 399, column: 28, scope: !942)
!948 = !DILocation(line: 400, column: 12, scope: !942)
!949 = !DILocation(line: 403, column: 34, scope: !942)
!950 = !DILocation(line: 403, column: 9, scope: !942)
!951 = !DILocation(line: 404, column: 6, scope: !942)
!952 = !DILocation(line: 401, column: 13, scope: !942)
!953 = distinct !DISubprogram(name: "swap_simple<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3mem11swap_simple17h3fac42cd55c798b3E", scope: !641, file: !954, line: 763, type: !955, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !958)
!954 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "d20d11efdf2289b0b0de68a76bdca89c")
!955 = !DISubroutineType(types: !956)
!956 = !{null, !957, !957}
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !639, size: 64, align: 64, dwarfAddressSpace: 0)
!958 = !{!959, !960, !961, !963}
!959 = !DILocalVariable(name: "x", arg: 1, scope: !953, file: !954, line: 763, type: !957)
!960 = !DILocalVariable(name: "y", arg: 2, scope: !953, file: !954, line: 763, type: !957)
!961 = !DILocalVariable(name: "a", scope: !962, file: !954, line: 780, type: !639, align: 8)
!962 = distinct !DILexicalBlock(scope: !953, file: !954, line: 780, column: 9)
!963 = !DILocalVariable(name: "b", scope: !964, file: !954, line: 781, type: !639, align: 8)
!964 = distinct !DILexicalBlock(scope: !962, file: !954, line: 781, column: 9)
!965 = !DILocation(line: 763, column: 36, scope: !953)
!966 = !DILocation(line: 763, column: 47, scope: !953)
!967 = !DILocation(line: 780, column: 13, scope: !962)
!968 = !DILocation(line: 781, column: 13, scope: !964)
!969 = !DILocation(line: 780, column: 17, scope: !953)
!970 = !DILocation(line: 781, column: 17, scope: !962)
!971 = !DILocation(line: 782, column: 23, scope: !964)
!972 = !DILocation(line: 782, column: 9, scope: !964)
!973 = !DILocation(line: 783, column: 23, scope: !964)
!974 = !DILocation(line: 783, column: 9, scope: !964)
!975 = !DILocation(line: 785, column: 2, scope: !953)
!976 = distinct !DISubprogram(name: "swap_simple<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem11swap_simple17h59cb8439350ba3caE", scope: !641, file: !954, line: 763, type: !977, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !980)
!977 = !DISubroutineType(types: !978)
!978 = !{null, !979, !979}
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryRegion", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!980 = !{!981, !982, !983, !985}
!981 = !DILocalVariable(name: "x", arg: 1, scope: !976, file: !954, line: 763, type: !979)
!982 = !DILocalVariable(name: "y", arg: 2, scope: !976, file: !954, line: 763, type: !979)
!983 = !DILocalVariable(name: "a", scope: !984, file: !954, line: 780, type: !13, align: 8)
!984 = distinct !DILexicalBlock(scope: !976, file: !954, line: 780, column: 9)
!985 = !DILocalVariable(name: "b", scope: !986, file: !954, line: 781, type: !13, align: 8)
!986 = distinct !DILexicalBlock(scope: !984, file: !954, line: 781, column: 9)
!987 = !DILocation(line: 763, column: 36, scope: !976)
!988 = !DILocation(line: 763, column: 47, scope: !976)
!989 = !DILocation(line: 780, column: 13, scope: !984)
!990 = !DILocation(line: 781, column: 13, scope: !986)
!991 = !DILocation(line: 780, column: 17, scope: !976)
!992 = !DILocation(line: 781, column: 17, scope: !984)
!993 = !DILocation(line: 782, column: 23, scope: !986)
!994 = !DILocation(line: 782, column: 9, scope: !986)
!995 = !DILocation(line: 783, column: 23, scope: !986)
!996 = !DILocation(line: 783, column: 9, scope: !986)
!997 = !DILocation(line: 785, column: 2, scope: !976)
!998 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem4swap17h1e8e662fc708a4c7E", scope: !641, file: !954, line: 726, type: !977, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !999)
!999 = !{!1000, !1001}
!1000 = !DILocalVariable(name: "x", arg: 1, scope: !998, file: !954, line: 726, type: !979)
!1001 = !DILocalVariable(name: "y", arg: 2, scope: !998, file: !954, line: 726, type: !979)
!1002 = !DILocation(line: 726, column: 22, scope: !998)
!1003 = !DILocation(line: 726, column: 33, scope: !998)
!1004 = !DILocation(line: 741, column: 12, scope: !998)
!1005 = !DILocation(line: 755, column: 5, scope: !998)
!1006 = !DILocation(line: 744, column: 29, scope: !998)
!1007 = !DILocation(line: 756, column: 2, scope: !998)
!1008 = distinct !DISubprogram(name: "forget<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem6forget17hf1997bd7a4ba0664E", scope: !641, file: !954, line: 148, type: !1009, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1011)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{null, !13}
!1011 = !{!1012}
!1012 = !DILocalVariable(name: "t", arg: 1, scope: !1008, file: !954, line: 148, type: !13)
!1013 = !DILocation(line: 148, column: 24, scope: !1008)
!1014 = !DILocalVariable(name: "value", arg: 1, scope: !1015, file: !1016, line: 70, type: !13)
!1015 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hc3f0bc4df6bde2ecE", scope: !645, file: !1016, line: 70, type: !1017, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1019)
!1016 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!645, !13}
!1019 = !{!1014}
!1020 = !DILocation(line: 70, column: 22, scope: !1015, inlinedAt: !1021)
!1021 = distinct !DILocation(line: 149, column: 13, scope: !1008)
!1022 = !DILocation(line: 71, column: 9, scope: !1015, inlinedAt: !1021)
!1023 = !DILocation(line: 150, column: 2, scope: !1008)
!1024 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h189dca2a0ce59f54E", scope: !1026, file: !1025, line: 576, type: !1028, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1030)
!1025 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "b2a733f80e3cd43066f918bdafc87bd0")
!1026 = !DINamespace(name: "{impl#11}", scope: !1027)
!1027 = !DINamespace(name: "num", scope: !143)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!478, !9, !9}
!1030 = !{!1031, !1032, !1033, !1035}
!1031 = !DILocalVariable(name: "self", arg: 1, scope: !1024, file: !1025, line: 576, type: !9)
!1032 = !DILocalVariable(name: "rhs", arg: 2, scope: !1024, file: !1025, line: 576, type: !9)
!1033 = !DILocalVariable(name: "a", scope: !1034, file: !1025, line: 577, type: !9, align: 8)
!1034 = distinct !DILexicalBlock(scope: !1024, file: !1025, line: 577, column: 13)
!1035 = !DILocalVariable(name: "b", scope: !1034, file: !1025, line: 577, type: !421, align: 1)
!1036 = !DILocation(line: 576, column: 34, scope: !1024)
!1037 = !DILocation(line: 576, column: 40, scope: !1024)
!1038 = !DILocalVariable(name: "self", arg: 1, scope: !1039, file: !1025, line: 1702, type: !9)
!1039 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h8615fd76a999d673E", scope: !1026, file: !1025, line: 1702, type: !1040, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1046)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!1042, !9, !9}
!1042 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1043, templateParams: !24, identifier: "4030f8452435be378048c6d8b59c8539")
!1043 = !{!1044, !1045}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1042, file: !2, baseType: !9, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1042, file: !2, baseType: !421, size: 8, align: 8, offset: 64)
!1046 = !{!1038, !1047, !1048, !1050}
!1047 = !DILocalVariable(name: "rhs", arg: 2, scope: !1039, file: !1025, line: 1702, type: !9)
!1048 = !DILocalVariable(name: "a", scope: !1049, file: !1025, line: 1703, type: !22, align: 8)
!1049 = distinct !DILexicalBlock(scope: !1039, file: !1025, line: 1703, column: 13)
!1050 = !DILocalVariable(name: "b", scope: !1049, file: !1025, line: 1703, type: !421, align: 1)
!1051 = !DILocation(line: 1702, column: 38, scope: !1039, inlinedAt: !1052)
!1052 = distinct !DILocation(line: 577, column: 26, scope: !1024)
!1053 = !DILocation(line: 1702, column: 44, scope: !1039, inlinedAt: !1052)
!1054 = !DILocation(line: 1703, column: 26, scope: !1039, inlinedAt: !1052)
!1055 = !DILocation(line: 1703, column: 18, scope: !1039, inlinedAt: !1052)
!1056 = !DILocation(line: 1703, column: 18, scope: !1049, inlinedAt: !1052)
!1057 = !DILocation(line: 1703, column: 21, scope: !1039, inlinedAt: !1052)
!1058 = !DILocation(line: 1703, column: 21, scope: !1049, inlinedAt: !1052)
!1059 = !DILocation(line: 1704, column: 13, scope: !1049, inlinedAt: !1052)
!1060 = !DILocation(line: 1705, column: 10, scope: !1039, inlinedAt: !1052)
!1061 = !DILocation(line: 577, column: 26, scope: !1024)
!1062 = !DILocation(line: 577, column: 18, scope: !1024)
!1063 = !DILocation(line: 577, column: 18, scope: !1034)
!1064 = !DILocation(line: 577, column: 21, scope: !1024)
!1065 = !DILocation(line: 577, column: 21, scope: !1034)
!1066 = !DILocation(line: 578, column: 16, scope: !1034)
!1067 = !DILocation(line: 578, column: 42, scope: !1034)
!1068 = !DILocation(line: 578, column: 13, scope: !1034)
!1069 = !DILocation(line: 578, column: 30, scope: !1034)
!1070 = !DILocation(line: 579, column: 10, scope: !1024)
!1071 = !{i64 0, i64 2}
!1072 = distinct !DISubprogram(name: "next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h6d38340da7fe9804E", scope: !1026, file: !1025, line: 2216, type: !1073, scopeLine: 2216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1075)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!9, !9}
!1075 = !{!1076}
!1076 = !DILocalVariable(name: "self", arg: 1, scope: !1072, file: !1025, line: 2216, type: !9)
!1077 = !DILocation(line: 2216, column: 40, scope: !1072)
!1078 = !DILocation(line: 2217, column: 13, scope: !1072)
!1079 = !DILocation(line: 2218, column: 10, scope: !1072)
!1080 = distinct !DISubprogram(name: "one_less_than_next_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h3e370a0003229e16E", scope: !1026, file: !1025, line: 2184, type: !1073, scopeLine: 2184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1081)
!1081 = !{!1082, !1083, !1085}
!1082 = !DILocalVariable(name: "self", arg: 1, scope: !1080, file: !1025, line: 2184, type: !9)
!1083 = !DILocalVariable(name: "p", scope: !1084, file: !1025, line: 2187, type: !9, align: 8)
!1084 = distinct !DILexicalBlock(scope: !1080, file: !1025, line: 2187, column: 13)
!1085 = !DILocalVariable(name: "z", scope: !1086, file: !1025, line: 2192, type: !9, align: 8)
!1086 = distinct !DILexicalBlock(scope: !1084, file: !1025, line: 2192, column: 13)
!1087 = !DILocation(line: 2184, column: 50, scope: !1080)
!1088 = !DILocation(line: 2185, column: 16, scope: !1080)
!1089 = !DILocation(line: 2187, column: 21, scope: !1080)
!1090 = !DILocation(line: 2185, column: 35, scope: !1080)
!1091 = !DILocation(line: 2194, column: 10, scope: !1080)
!1092 = !DILocation(line: 2187, column: 17, scope: !1084)
!1093 = !DILocation(line: 2192, column: 30, scope: !1084)
!1094 = !DILocation(line: 2192, column: 17, scope: !1086)
!1095 = !DILocation(line: 2193, column: 13, scope: !1086)
!1096 = distinct !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4384b7d931bb2e10E", scope: !416, file: !1097, line: 454, type: !1098, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1100)
!1097 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "c1aecaf6a5b28eb8d294ea6247bce985")
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!175, !416}
!1100 = !{!1101, !1102, !1104}
!1101 = !DILocalVariable(name: "self", arg: 1, scope: !1096, file: !1097, line: 454, type: !416)
!1102 = !DILocalVariable(name: "exclusive_end", scope: !1103, file: !1097, line: 458, type: !9, align: 8)
!1103 = distinct !DILexicalBlock(scope: !1096, file: !1097, line: 458, column: 9)
!1104 = !DILocalVariable(name: "start", scope: !1105, file: !1097, line: 459, type: !9, align: 8)
!1105 = distinct !DILexicalBlock(scope: !1103, file: !1097, line: 459, column: 9)
!1106 = !DILocation(line: 454, column: 42, scope: !1096)
!1107 = !DILocation(line: 459, column: 13, scope: !1105)
!1108 = !DILocation(line: 458, column: 29, scope: !1096)
!1109 = !DILocation(line: 458, column: 13, scope: !1103)
!1110 = !DILocation(line: 459, column: 24, scope: !1103)
!1111 = !DILocation(line: 459, column: 64, scope: !1103)
!1112 = !DILocation(line: 459, column: 21, scope: !1103)
!1113 = !DILocation(line: 459, column: 41, scope: !1103)
!1114 = !DILocation(line: 460, column: 9, scope: !1105)
!1115 = !DILocation(line: 461, column: 6, scope: !1096)
!1116 = distinct !DISubprogram(name: "call_mut<(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion), core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hb784f0c5ee813df5E", scope: !1118, file: !1117, line: 297, type: !1121, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1141, retainedNodes: !1134)
!1117 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "56fb008eac3df8d06ce524ffb023f0b6")
!1118 = !DINamespace(name: "{impl#3}", scope: !1119)
!1119 = !DINamespace(name: "impls", scope: !1120)
!1120 = !DINamespace(name: "function", scope: !177)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!421, !1123, !12, !12}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1124, size: 64, align: 64, dwarfAddressSpace: 0)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", baseType: !1125, size: 64, align: 64, dwarfAddressSpace: 0)
!1125 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", scope: !1126, file: !2, size: 64, align: 64, elements: !1128, templateParams: !24, identifier: "99cb53bec2c38c5d5a93dcf5c2adf21d")
!1126 = !DINamespace(name: "sort_unstable_by", scope: !1127)
!1127 = !DINamespace(name: "{impl#0}", scope: !167)
!1128 = !{!1129}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__compare", scope: !1125, file: !2, baseType: !1130, size: 64, align: 64)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}", baseType: !1131, size: 64, align: 64, dwarfAddressSpace: 0)
!1131 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1132, file: !2, align: 8, elements: !24, identifier: "4a8fff9621078850d9f28f1a4de0f778")
!1132 = !DINamespace(name: "sort", scope: !1133)
!1133 = !DINamespace(name: "{impl#0}", scope: !14)
!1134 = !{!1135, !1136}
!1135 = !DILocalVariable(name: "self", arg: 1, scope: !1116, file: !1117, line: 297, type: !1123)
!1136 = !DILocalVariable(name: "args", arg: 2, scope: !1116, file: !1117, line: 297, type: !1137)
!1137 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&bootloader::bootinfo::memory_map::MemoryRegion, &bootloader::bootinfo::memory_map::MemoryRegion)", file: !2, size: 128, align: 64, elements: !1138, templateParams: !24, identifier: "16c3fe6d640d6e3efe86cf18b9ca19c5")
!1138 = !{!1139, !1140}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1137, file: !2, baseType: !12, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1137, file: !2, baseType: !12, size: 64, align: 64, offset: 64)
!1141 = !{!1142, !1143}
!1142 = !DITemplateTypeParameter(name: "A", type: !1137)
!1143 = !DITemplateTypeParameter(name: "F", type: !1125)
!1144 = !DILocation(line: 297, column: 40, scope: !1116)
!1145 = !DILocation(line: 297, column: 51, scope: !1116)
!1146 = !DILocation(line: 298, column: 13, scope: !1116)
!1147 = !DILocation(line: 299, column: 10, scope: !1116)
!1148 = distinct !DISubprogram(name: "drop_in_place<core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr107drop_in_place$LT$core..slice..sort..InsertionHole$LT$bootloader..bootinfo..memory_map..MemoryRegion$GT$$GT$17hf11a1c24d41b52e3E", scope: !205, file: !1149, line: 490, type: !1150, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1160, retainedNodes: !1158)
!1149 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "4b0ac29df94a7dc1bf2bc7efca5e253a")
!1150 = !DISubroutineType(types: !1151)
!1151 = !{null, !1152}
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1153, size: 64, align: 64, dwarfAddressSpace: 0)
!1153 = !DICompositeType(tag: DW_TAG_structure_type, name: "InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !1154, file: !2, size: 128, align: 64, elements: !1155, templateParams: !190, identifier: "db3eb54f3a7fea6a44bf7a35f3c025c8")
!1154 = !DINamespace(name: "sort", scope: !167)
!1155 = !{!1156, !1157}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1153, file: !2, baseType: !208, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1153, file: !2, baseType: !272, size: 64, align: 64, offset: 64)
!1158 = !{!1159}
!1159 = !DILocalVariable(arg: 1, scope: !1148, file: !1149, line: 490, type: !1152)
!1160 = !{!1161}
!1161 = !DITemplateTypeParameter(name: "T", type: !1153)
!1162 = !DILocation(line: 490, column: 1, scope: !1148)
!1163 = distinct !DISubprogram(name: "swap_nonoverlapping<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping17h4d74a56b75fdc00bE", scope: !205, file: !1149, line: 902, type: !1164, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1166)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{null, !272, !272, !9}
!1166 = !{!1167, !1168, !1169, !1170, !1172, !1174, !1176, !1179, !1181}
!1167 = !DILocalVariable(name: "x", arg: 1, scope: !1163, file: !1149, line: 902, type: !272)
!1168 = !DILocalVariable(name: "y", arg: 2, scope: !1163, file: !1149, line: 902, type: !272)
!1169 = !DILocalVariable(name: "count", arg: 3, scope: !1163, file: !1149, line: 902, type: !9)
!1170 = !DILocalVariable(name: "x", scope: !1171, file: !1149, line: 942, type: !612, align: 8)
!1171 = distinct !DILexicalBlock(scope: !1163, file: !1149, line: 909, column: 17)
!1172 = !DILocalVariable(name: "y", scope: !1173, file: !1149, line: 942, type: !612, align: 8)
!1173 = distinct !DILexicalBlock(scope: !1171, file: !1149, line: 910, column: 17)
!1174 = !DILocalVariable(name: "count", scope: !1175, file: !1149, line: 942, type: !9, align: 8)
!1175 = distinct !DILexicalBlock(scope: !1173, file: !1149, line: 911, column: 17)
!1176 = !DILocalVariable(name: "x", scope: !1177, file: !1149, line: 943, type: !1178, align: 8)
!1177 = distinct !DILexicalBlock(scope: !1163, file: !1149, line: 909, column: 17)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!1179 = !DILocalVariable(name: "y", scope: !1180, file: !1149, line: 943, type: !1178, align: 8)
!1180 = distinct !DILexicalBlock(scope: !1177, file: !1149, line: 910, column: 17)
!1181 = !DILocalVariable(name: "count", scope: !1182, file: !1149, line: 943, type: !9, align: 8)
!1182 = distinct !DILexicalBlock(scope: !1180, file: !1149, line: 911, column: 17)
!1183 = !DILocation(line: 902, column: 44, scope: !1163)
!1184 = !DILocation(line: 902, column: 55, scope: !1163)
!1185 = !DILocation(line: 902, column: 66, scope: !1163)
!1186 = !DILocation(line: 925, column: 9, scope: !1163)
!1187 = !DILocation(line: 938, column: 8, scope: !1163)
!1188 = !DILocalVariable(name: "x", arg: 1, scope: !1189, file: !229, line: 2484, type: !272)
!1189 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr19swap_nonoverlapping7runtime17h5a0323559f393991E", scope: !1190, file: !229, line: 2484, type: !1164, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1191)
!1190 = !DINamespace(name: "swap_nonoverlapping", scope: !205)
!1191 = !{!1188, !1192, !1193}
!1192 = !DILocalVariable(name: "y", arg: 2, scope: !1189, file: !229, line: 2484, type: !272)
!1193 = !DILocalVariable(name: "count", arg: 3, scope: !1189, file: !229, line: 2484, type: !9)
!1194 = !DILocation(line: 2484, column: 39, scope: !1189, inlinedAt: !1195)
!1195 = distinct !DILocation(line: 925, column: 9, scope: !1163)
!1196 = !DILocation(line: 929, column: 13, scope: !1197, inlinedAt: !1195)
!1197 = !DILexicalBlockFile(scope: !1189, file: !1149, discriminator: 0)
!1198 = !DILocation(line: 930, column: 20, scope: !1197, inlinedAt: !1195)
!1199 = !DILocation(line: 931, column: 20, scope: !1197, inlinedAt: !1195)
!1200 = !DILocation(line: 2485, column: 20, scope: !1189, inlinedAt: !1195)
!1201 = !DILocation(line: 2487, column: 21, scope: !1189, inlinedAt: !1195)
!1202 = !DILocalVariable(name: "self", arg: 1, scope: !1203, file: !1025, line: 2169, type: !9)
!1203 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h0c20e87b2d82c530E", scope: !1026, file: !1025, line: 2169, type: !669, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1204)
!1204 = !{!1202}
!1205 = !DILocation(line: 2169, column: 38, scope: !1203, inlinedAt: !1206)
!1206 = distinct !DILocation(line: 939, column: 14, scope: !1163)
!1207 = !DILocalVariable(name: "self", arg: 1, scope: !1208, file: !1025, line: 106, type: !9)
!1208 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hfacc0f9731cbc4e3E", scope: !1026, file: !1025, line: 106, type: !1209, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1211)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!27, !9}
!1211 = !{!1207}
!1212 = !DILocation(line: 106, column: 33, scope: !1208, inlinedAt: !1213)
!1213 = distinct !DILocation(line: 2170, column: 13, scope: !1203, inlinedAt: !1206)
!1214 = !DILocation(line: 107, column: 13, scope: !1208, inlinedAt: !1213)
!1215 = !DILocation(line: 2170, column: 13, scope: !1203, inlinedAt: !1206)
!1216 = !DILocation(line: 939, column: 13, scope: !1163)
!1217 = !DILocation(line: 939, column: 12, scope: !1163)
!1218 = !DILocation(line: 940, column: 38, scope: !1163)
!1219 = !DILocation(line: 940, column: 16, scope: !1163)
!1220 = !DILocation(line: 947, column: 14, scope: !1163)
!1221 = !DILocation(line: 942, column: 9, scope: !1163)
!1222 = !DILocation(line: 943, column: 9, scope: !1163)
!1223 = !DILocalVariable(name: "self", arg: 1, scope: !1224, file: !267, line: 57, type: !272)
!1224 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h60a78d2bd8264540E", scope: !278, file: !267, line: 57, type: !1225, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1228, retainedNodes: !1227)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!612, !272}
!1227 = !{!1223}
!1228 = !{!191, !1229}
!1229 = !DITemplateTypeParameter(name: "U", type: !9)
!1230 = !DILocation(line: 57, column: 26, scope: !1224, inlinedAt: !1231)
!1231 = distinct !DILocation(line: 942, column: 9, scope: !1163)
!1232 = !DILocation(line: 942, column: 9, scope: !1171)
!1233 = !DILocation(line: 57, column: 26, scope: !1224, inlinedAt: !1234)
!1234 = distinct !DILocation(line: 942, column: 9, scope: !1171)
!1235 = !DILocation(line: 942, column: 9, scope: !1173)
!1236 = !DILocation(line: 942, column: 9, scope: !1175)
!1237 = !DILocation(line: 948, column: 2, scope: !1163)
!1238 = !DILocalVariable(name: "self", arg: 1, scope: !1239, file: !267, line: 57, type: !272)
!1239 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h4180e4f710d24348E", scope: !278, file: !267, line: 57, type: !1240, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1243, retainedNodes: !1242)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!1178, !272}
!1242 = !{!1238}
!1243 = !{!191, !1244}
!1244 = !DITemplateTypeParameter(name: "U", type: !123)
!1245 = !DILocation(line: 57, column: 26, scope: !1239, inlinedAt: !1246)
!1246 = distinct !DILocation(line: 943, column: 9, scope: !1163)
!1247 = !DILocation(line: 943, column: 9, scope: !1177)
!1248 = !DILocation(line: 57, column: 26, scope: !1239, inlinedAt: !1249)
!1249 = distinct !DILocation(line: 943, column: 9, scope: !1177)
!1250 = !DILocation(line: 943, column: 9, scope: !1180)
!1251 = !DILocation(line: 943, column: 9, scope: !1182)
!1252 = distinct !DISubprogram(name: "slice_from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hb93b12de4d910fe0E", scope: !205, file: !1149, line: 733, type: !1253, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1255)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!170, !208, !9}
!1255 = !{!1256, !1257}
!1256 = !DILocalVariable(name: "data", arg: 1, scope: !1252, file: !1149, line: 733, type: !208)
!1257 = !DILocalVariable(name: "len", arg: 2, scope: !1252, file: !1149, line: 733, type: !9)
!1258 = !DILocation(line: 733, column: 38, scope: !1252)
!1259 = !DILocation(line: 733, column: 54, scope: !1252)
!1260 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !1261)
!1261 = distinct !DILocation(line: 734, column: 20, scope: !1252)
!1262 = !DILocation(line: 734, column: 5, scope: !1252)
!1263 = !DILocation(line: 735, column: 2, scope: !1252)
!1264 = distinct !DISubprogram(name: "drop_in_place<u32>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u32$GT$17h208e4315a370da61E", scope: !205, file: !1149, line: 490, type: !1265, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1270, retainedNodes: !1268)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{null, !1267}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u32", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!1268 = !{!1269}
!1269 = !DILocalVariable(arg: 1, scope: !1264, file: !1149, line: 490, type: !1267)
!1270 = !{!1271}
!1271 = !DITemplateTypeParameter(name: "T", type: !27)
!1272 = !DILocation(line: 490, column: 1, scope: !1264)
!1273 = distinct !DISubprogram(name: "drop_in_place<u64>", linkageName: "_ZN4core3ptr24drop_in_place$LT$u64$GT$17hf7c86fa446e088a4E", scope: !205, file: !1149, line: 490, type: !1274, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !764, retainedNodes: !1277)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{null, !1276}
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!1277 = !{!1278}
!1278 = !DILocalVariable(arg: 1, scope: !1273, file: !1149, line: 490, type: !1276)
!1279 = !DILocation(line: 490, column: 1, scope: !1273)
!1280 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h72e5f39bb23cac74E", scope: !205, file: !1149, line: 765, type: !1281, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1283)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!247, !272, !9}
!1283 = !{!1284, !1285}
!1284 = !DILocalVariable(name: "data", arg: 1, scope: !1280, file: !1149, line: 765, type: !272)
!1285 = !DILocalVariable(name: "len", arg: 2, scope: !1280, file: !1149, line: 765, type: !9)
!1286 = !DILocation(line: 765, column: 42, scope: !1280)
!1287 = !DILocation(line: 765, column: 56, scope: !1280)
!1288 = !DILocalVariable(name: "self", arg: 1, scope: !1289, file: !267, line: 57, type: !272)
!1289 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h433c525e8846746cE", scope: !278, file: !267, line: 57, type: !1290, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !560, retainedNodes: !1293)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!1292, !272}
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1293 = !{!1288}
!1294 = !DILocation(line: 57, column: 26, scope: !1289, inlinedAt: !1295)
!1295 = distinct !DILocation(line: 766, column: 24, scope: !1280)
!1296 = !DILocation(line: 766, column: 5, scope: !1280)
!1297 = !DILocation(line: 767, column: 2, scope: !1280)
!1298 = distinct !DISubprogram(name: "drop_in_place<&u8>", linkageName: "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h56648f426ae11b3dE", scope: !205, file: !1149, line: 490, type: !1299, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1304, retainedNodes: !1302)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !1301}
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u8", baseType: !122, size: 64, align: 64, dwarfAddressSpace: 0)
!1302 = !{!1303}
!1303 = !DILocalVariable(arg: 1, scope: !1298, file: !1149, line: 490, type: !1301)
!1304 = !{!1305}
!1305 = !DITemplateTypeParameter(name: "T", type: !122)
!1306 = !DILocation(line: 490, column: 1, scope: !1298)
!1307 = distinct !DISubprogram(name: "drop_in_place<&u32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17hb29ede95f2e852e7E", scope: !205, file: !1149, line: 490, type: !1308, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1313, retainedNodes: !1311)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !1310}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u32", baseType: !85, size: 64, align: 64, dwarfAddressSpace: 0)
!1311 = !{!1312}
!1312 = !DILocalVariable(arg: 1, scope: !1307, file: !1149, line: 490, type: !1310)
!1313 = !{!1314}
!1314 = !DITemplateTypeParameter(name: "T", type: !85)
!1315 = !DILocation(line: 490, column: 1, scope: !1307)
!1316 = distinct !DISubprogram(name: "drop_in_place<&u64>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h063f7adf094db454E", scope: !205, file: !1149, line: 490, type: !1317, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1322, retainedNodes: !1320)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{null, !1319}
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u64", baseType: !132, size: 64, align: 64, dwarfAddressSpace: 0)
!1320 = !{!1321}
!1321 = !DILocalVariable(arg: 1, scope: !1316, file: !1149, line: 490, type: !1319)
!1322 = !{!1323}
!1323 = !DITemplateTypeParameter(name: "T", type: !132)
!1324 = !DILocation(line: 490, column: 1, scope: !1316)
!1325 = distinct !DISubprogram(name: "swap_nonoverlapping_simple_untyped<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr34swap_nonoverlapping_simple_untyped17he6ae6a6b44528d63E", scope: !205, file: !1149, line: 956, type: !1164, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1326)
!1326 = !{!1327, !1328, !1329, !1330, !1333, !1335, !1337, !1339}
!1327 = !DILocalVariable(name: "x", arg: 1, scope: !1325, file: !1149, line: 956, type: !272)
!1328 = !DILocalVariable(name: "y", arg: 2, scope: !1325, file: !1149, line: 956, type: !272)
!1329 = !DILocalVariable(name: "count", arg: 3, scope: !1325, file: !1149, line: 956, type: !9)
!1330 = !DILocalVariable(name: "x", scope: !1331, file: !1149, line: 957, type: !1332, align: 8)
!1331 = distinct !DILexicalBlock(scope: !1325, file: !1149, line: 957, column: 5)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !639, size: 64, align: 64, dwarfAddressSpace: 0)
!1333 = !DILocalVariable(name: "y", scope: !1334, file: !1149, line: 958, type: !1332, align: 8)
!1334 = distinct !DILexicalBlock(scope: !1331, file: !1149, line: 958, column: 5)
!1335 = !DILocalVariable(name: "i", scope: !1336, file: !1149, line: 959, type: !9, align: 8)
!1336 = distinct !DILexicalBlock(scope: !1334, file: !1149, line: 959, column: 5)
!1337 = !DILocalVariable(name: "x", scope: !1338, file: !1149, line: 962, type: !957, align: 8)
!1338 = distinct !DILexicalBlock(scope: !1336, file: !1149, line: 962, column: 9)
!1339 = !DILocalVariable(name: "y", scope: !1340, file: !1149, line: 965, type: !957, align: 8)
!1340 = distinct !DILexicalBlock(scope: !1338, file: !1149, line: 965, column: 9)
!1341 = !DILocation(line: 956, column: 55, scope: !1325)
!1342 = !DILocation(line: 956, column: 66, scope: !1325)
!1343 = !DILocation(line: 956, column: 77, scope: !1325)
!1344 = !DILocation(line: 959, column: 9, scope: !1336)
!1345 = !DILocalVariable(name: "self", arg: 1, scope: !1346, file: !267, line: 57, type: !272)
!1346 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hd0fa6bb898c386c6E", scope: !278, file: !267, line: 57, type: !1347, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1350, retainedNodes: !1349)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!1332, !272}
!1349 = !{!1345}
!1350 = !{!191, !1351}
!1351 = !DITemplateTypeParameter(name: "U", type: !639)
!1352 = !DILocation(line: 57, column: 26, scope: !1346, inlinedAt: !1353)
!1353 = distinct !DILocation(line: 957, column: 13, scope: !1325)
!1354 = !DILocation(line: 957, column: 13, scope: !1325)
!1355 = !DILocation(line: 957, column: 9, scope: !1331)
!1356 = !DILocation(line: 57, column: 26, scope: !1346, inlinedAt: !1357)
!1357 = distinct !DILocation(line: 958, column: 13, scope: !1331)
!1358 = !DILocation(line: 958, column: 13, scope: !1331)
!1359 = !DILocation(line: 958, column: 9, scope: !1334)
!1360 = !DILocation(line: 959, column: 17, scope: !1334)
!1361 = !DILocation(line: 960, column: 5, scope: !1336)
!1362 = !DILocation(line: 960, column: 11, scope: !1336)
!1363 = !DILocation(line: 970, column: 2, scope: !1325)
!1364 = !DILocation(line: 962, column: 38, scope: !1336)
!1365 = !DILocalVariable(name: "self", arg: 1, scope: !1366, file: !267, line: 1015, type: !1332)
!1366 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbde65e430c76dcc5E", scope: !278, file: !267, line: 1015, type: !1367, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !1369)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!1332, !1332, !9}
!1369 = !{!1365, !1370}
!1370 = !DILocalVariable(name: "count", arg: 2, scope: !1366, file: !267, line: 1015, type: !9)
!1371 = !DILocation(line: 1015, column: 29, scope: !1366, inlinedAt: !1372)
!1372 = distinct !DILocation(line: 962, column: 32, scope: !1336)
!1373 = !DILocation(line: 1015, column: 35, scope: !1366, inlinedAt: !1372)
!1374 = !DILocalVariable(name: "self", arg: 1, scope: !1375, file: !267, line: 472, type: !1332)
!1375 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h9cf3310a2d892988E", scope: !278, file: !267, line: 472, type: !1376, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !1378)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!1332, !1332, !218}
!1378 = !{!1374, !1379}
!1379 = !DILocalVariable(name: "count", arg: 2, scope: !1375, file: !267, line: 472, type: !218)
!1380 = !DILocation(line: 472, column: 32, scope: !1375, inlinedAt: !1381)
!1381 = distinct !DILocation(line: 1020, column: 18, scope: !1366, inlinedAt: !1372)
!1382 = !DILocation(line: 472, column: 38, scope: !1375, inlinedAt: !1381)
!1383 = !DILocation(line: 479, column: 18, scope: !1375, inlinedAt: !1381)
!1384 = !DILocation(line: 962, column: 26, scope: !1336)
!1385 = !DILocation(line: 962, column: 13, scope: !1338)
!1386 = !DILocation(line: 965, column: 38, scope: !1338)
!1387 = !DILocation(line: 1015, column: 29, scope: !1366, inlinedAt: !1388)
!1388 = distinct !DILocation(line: 965, column: 32, scope: !1338)
!1389 = !DILocation(line: 1015, column: 35, scope: !1366, inlinedAt: !1388)
!1390 = !DILocation(line: 472, column: 32, scope: !1375, inlinedAt: !1391)
!1391 = distinct !DILocation(line: 1020, column: 18, scope: !1366, inlinedAt: !1388)
!1392 = !DILocation(line: 472, column: 38, scope: !1375, inlinedAt: !1391)
!1393 = !DILocation(line: 479, column: 18, scope: !1375, inlinedAt: !1391)
!1394 = !DILocation(line: 965, column: 26, scope: !1338)
!1395 = !DILocation(line: 965, column: 13, scope: !1340)
!1396 = !DILocation(line: 966, column: 9, scope: !1340)
!1397 = !DILocation(line: 968, column: 9, scope: !1340)
!1398 = distinct !DISubprogram(name: "read<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read17h6e169d0229e0c3d6E", scope: !205, file: !1149, line: 1137, type: !1399, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !1401)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!639, !638}
!1401 = !{!1402}
!1402 = !DILocalVariable(name: "src", arg: 1, scope: !1398, file: !1149, line: 1137, type: !638)
!1403 = !DILocation(line: 1137, column: 29, scope: !1398)
!1404 = !DILocation(line: 1166, column: 9, scope: !1398)
!1405 = !DILocation(line: 1188, column: 13, scope: !1398)
!1406 = !DILocation(line: 1191, column: 2, scope: !1398)
!1407 = !DILocalVariable(name: "src", arg: 1, scope: !1408, file: !229, line: 2484, type: !638)
!1408 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr4read7runtime17h8145d8f41345a3b0E", scope: !1409, file: !229, line: 2484, type: !1410, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !1412)
!1409 = !DINamespace(name: "read", scope: !205)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{null, !638}
!1412 = !{!1407}
!1413 = !DILocation(line: 2484, column: 39, scope: !1408, inlinedAt: !1414)
!1414 = distinct !DILocation(line: 1166, column: 9, scope: !1398)
!1415 = !DILocation(line: 1168, column: 35, scope: !1416, inlinedAt: !1414)
!1416 = !DILexicalBlockFile(scope: !1408, file: !1149, discriminator: 0)
!1417 = !DILocation(line: 2485, column: 20, scope: !1408, inlinedAt: !1414)
!1418 = !DILocation(line: 2487, column: 21, scope: !1408, inlinedAt: !1414)
!1419 = distinct !DISubprogram(name: "read<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read17h9bbf8b811484d8b8E", scope: !205, file: !1149, line: 1137, type: !1420, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1422)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!13, !208}
!1422 = !{!1423}
!1423 = !DILocalVariable(name: "src", arg: 1, scope: !1419, file: !1149, line: 1137, type: !208)
!1424 = !DILocation(line: 1137, column: 29, scope: !1419)
!1425 = !DILocation(line: 1166, column: 9, scope: !1419)
!1426 = !DILocation(line: 1188, column: 13, scope: !1419)
!1427 = !DILocation(line: 1191, column: 2, scope: !1419)
!1428 = !DILocalVariable(name: "src", arg: 1, scope: !1429, file: !229, line: 2484, type: !208)
!1429 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4read7runtime17hcc9c66b658ebb9a0E", scope: !1409, file: !229, line: 2484, type: !1430, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1432)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{null, !208}
!1432 = !{!1428}
!1433 = !DILocation(line: 2484, column: 39, scope: !1429, inlinedAt: !1434)
!1434 = distinct !DILocation(line: 1166, column: 9, scope: !1419)
!1435 = !DILocation(line: 1168, column: 35, scope: !1436, inlinedAt: !1434)
!1436 = !DILexicalBlockFile(scope: !1429, file: !1149, discriminator: 0)
!1437 = !DILocation(line: 2485, column: 20, scope: !1429, inlinedAt: !1434)
!1438 = !DILocation(line: 2487, column: 21, scope: !1429, inlinedAt: !1434)
!1439 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr4swap17h8b2f3774968ef06dE", scope: !205, file: !1149, line: 841, type: !1440, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1442)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{null, !272, !272}
!1442 = !{!1443, !1444, !1445}
!1443 = !DILocalVariable(name: "x", arg: 1, scope: !1439, file: !1149, line: 841, type: !272)
!1444 = !DILocalVariable(name: "y", arg: 2, scope: !1439, file: !1149, line: 841, type: !272)
!1445 = !DILocalVariable(name: "tmp", scope: !1446, file: !1149, line: 844, type: !639, align: 8)
!1446 = distinct !DILexicalBlock(scope: !1439, file: !1149, line: 844, column: 5)
!1447 = !DILocation(line: 841, column: 29, scope: !1439)
!1448 = !DILocation(line: 841, column: 40, scope: !1439)
!1449 = !DILocation(line: 844, column: 9, scope: !1446)
!1450 = !DILocalVariable(name: "self", arg: 1, scope: !1451, file: !1452, line: 567, type: !957)
!1451 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hc72710adc0ca4979E", scope: !639, file: !1452, line: 567, type: !1453, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1455)
!1452 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "f766c2fae7f7dc5e1122680af4641eb4")
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!272, !957}
!1455 = !{!1450}
!1456 = !DILocation(line: 567, column: 29, scope: !1451, inlinedAt: !1457)
!1457 = distinct !DILocation(line: 852, column: 32, scope: !1446)
!1458 = !DILocation(line: 852, column: 9, scope: !1446)
!1459 = !DILocation(line: 853, column: 9, scope: !1446)
!1460 = !DILocalVariable(name: "self", arg: 1, scope: !1461, file: !1452, line: 528, type: !1464)
!1461 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hac4eb0516f6e4a0eE", scope: !639, file: !1452, line: 528, type: !1462, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1465)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!208, !1464}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !639, size: 64, align: 64, dwarfAddressSpace: 0)
!1465 = !{!1460}
!1466 = !DILocation(line: 528, column: 25, scope: !1461, inlinedAt: !1467)
!1467 = distinct !DILocation(line: 854, column: 29, scope: !1446)
!1468 = !DILocation(line: 854, column: 9, scope: !1446)
!1469 = !DILocation(line: 856, column: 2, scope: !1439)
!1470 = distinct !DISubprogram(name: "swap<usize>", linkageName: "_ZN4core3ptr4swap17hbde6658a27455df3E", scope: !205, file: !1149, line: 841, type: !1471, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !1473)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{null, !612, !612}
!1473 = !{!1474, !1475, !1476}
!1474 = !DILocalVariable(name: "x", arg: 1, scope: !1470, file: !1149, line: 841, type: !612)
!1475 = !DILocalVariable(name: "y", arg: 2, scope: !1470, file: !1149, line: 841, type: !612)
!1476 = !DILocalVariable(name: "tmp", scope: !1477, file: !1149, line: 844, type: !1478, align: 8)
!1477 = distinct !DILexicalBlock(scope: !1470, file: !1149, line: 844, column: 5)
!1478 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !640, file: !2, size: 64, align: 64, elements: !1479, templateParams: !485, identifier: "2e6b7498058d8d539fd4b9e5546874cf")
!1479 = !{!1480, !1481}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1478, file: !2, baseType: !7, align: 8)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1478, file: !2, baseType: !1482, size: 64, align: 64)
!1482 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !646, file: !2, size: 64, align: 64, elements: !1483, templateParams: !485, identifier: "f4d3ae02eff33f7bffeab366459f271a")
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1482, file: !2, baseType: !9, size: 64, align: 64)
!1485 = !DILocation(line: 841, column: 29, scope: !1470)
!1486 = !DILocation(line: 841, column: 40, scope: !1470)
!1487 = !DILocation(line: 844, column: 9, scope: !1477)
!1488 = !DILocation(line: 315, column: 6, scope: !1489, inlinedAt: !1492)
!1489 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h250c170882f351f3E", scope: !1478, file: !1452, line: 313, type: !1490, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !24)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!1478}
!1492 = distinct !DILocation(line: 844, column: 19, scope: !1470)
!1493 = !DILocation(line: 844, column: 19, scope: !1470)
!1494 = !DILocalVariable(name: "self", arg: 1, scope: !1495, file: !1452, line: 567, type: !1498)
!1495 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17ha31564f50a143889E", scope: !1478, file: !1452, line: 567, type: !1496, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !1499)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!612, !1498}
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !1478, size: 64, align: 64, dwarfAddressSpace: 0)
!1499 = !{!1494}
!1500 = !DILocation(line: 567, column: 29, scope: !1495, inlinedAt: !1501)
!1501 = distinct !DILocation(line: 852, column: 32, scope: !1477)
!1502 = !DILocation(line: 852, column: 9, scope: !1477)
!1503 = !DILocation(line: 853, column: 9, scope: !1477)
!1504 = !DILocalVariable(name: "self", arg: 1, scope: !1505, file: !1452, line: 528, type: !1508)
!1505 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hac0d1a10607cc7ccE", scope: !1478, file: !1452, line: 528, type: !1506, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !485, retainedNodes: !1509)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!611, !1508}
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !1478, size: 64, align: 64, dwarfAddressSpace: 0)
!1509 = !{!1504}
!1510 = !DILocation(line: 528, column: 25, scope: !1505, inlinedAt: !1511)
!1511 = distinct !DILocation(line: 854, column: 29, scope: !1477)
!1512 = !DILocation(line: 854, column: 9, scope: !1477)
!1513 = !DILocation(line: 856, column: 2, scope: !1470)
!1514 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core3ptr54drop_in_place$LT$bootloader..bootinfo..TlsTemplate$GT$17ha0142110463679f0E", scope: !205, file: !1149, line: 490, type: !1515, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1520, retainedNodes: !1518)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{null, !1517}
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!1518 = !{!1519}
!1519 = !DILocalVariable(arg: 1, scope: !1514, file: !1149, line: 490, type: !1517)
!1520 = !{!1521}
!1521 = !DITemplateTypeParameter(name: "T", type: !109)
!1522 = !DILocation(line: 490, column: 1, scope: !1514)
!1523 = distinct !DISubprogram(name: "write<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write17h501899311e03ab4eE", scope: !205, file: !1149, line: 1369, type: !1524, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1526)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{null, !272, !13}
!1526 = !{!1527, !1528}
!1527 = !DILocalVariable(name: "dst", arg: 1, scope: !1523, file: !1149, line: 1369, type: !272)
!1528 = !DILocalVariable(name: "src", arg: 2, scope: !1523, file: !1149, line: 1369, type: !13)
!1529 = !DILocation(line: 1369, column: 30, scope: !1523)
!1530 = !DILocation(line: 1369, column: 43, scope: !1523)
!1531 = !DILocation(line: 1382, column: 9, scope: !1523)
!1532 = !DILocation(line: 1386, column: 9, scope: !1523)
!1533 = !DILocation(line: 1389, column: 2, scope: !1523)
!1534 = !DILocalVariable(name: "dst", arg: 1, scope: !1535, file: !229, line: 2484, type: !272)
!1535 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr5write7runtime17hc070da9edb9c4022E", scope: !1536, file: !229, line: 2484, type: !1537, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1539)
!1536 = !DINamespace(name: "write", scope: !205)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{null, !272}
!1539 = !{!1534}
!1540 = !DILocation(line: 2484, column: 39, scope: !1535, inlinedAt: !1541)
!1541 = distinct !DILocation(line: 1382, column: 9, scope: !1523)
!1542 = !DILocation(line: 1384, column: 33, scope: !1543, inlinedAt: !1541)
!1543 = !DILexicalBlockFile(scope: !1535, file: !1149, discriminator: 0)
!1544 = !DILocation(line: 2485, column: 20, scope: !1535, inlinedAt: !1541)
!1545 = !DILocation(line: 2487, column: 21, scope: !1535, inlinedAt: !1541)
!1546 = distinct !DISubprogram(name: "write<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write17hd3c3cfa0b3004d5dE", scope: !205, file: !1149, line: 1369, type: !1547, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !1549)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{null, !1332, !639}
!1549 = !{!1550, !1551}
!1550 = !DILocalVariable(name: "dst", arg: 1, scope: !1546, file: !1149, line: 1369, type: !1332)
!1551 = !DILocalVariable(name: "src", arg: 2, scope: !1546, file: !1149, line: 1369, type: !639)
!1552 = !DILocation(line: 1369, column: 30, scope: !1546)
!1553 = !DILocation(line: 1369, column: 43, scope: !1546)
!1554 = !DILocation(line: 1382, column: 9, scope: !1546)
!1555 = !DILocation(line: 1386, column: 9, scope: !1546)
!1556 = !DILocation(line: 1389, column: 2, scope: !1546)
!1557 = !DILocalVariable(name: "dst", arg: 1, scope: !1558, file: !229, line: 2484, type: !1332)
!1558 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr5write7runtime17he7f4a72ad6c3c503E", scope: !1536, file: !229, line: 2484, type: !1559, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !1561)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{null, !1332}
!1561 = !{!1557}
!1562 = !DILocation(line: 2484, column: 39, scope: !1558, inlinedAt: !1563)
!1563 = distinct !DILocation(line: 1382, column: 9, scope: !1546)
!1564 = !DILocation(line: 1384, column: 33, scope: !1565, inlinedAt: !1563)
!1565 = !DILexicalBlockFile(scope: !1558, file: !1149, discriminator: 0)
!1566 = !DILocation(line: 2485, column: 20, scope: !1558, inlinedAt: !1563)
!1567 = !DILocation(line: 2487, column: 21, scope: !1558, inlinedAt: !1563)
!1568 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::MemoryMap>", linkageName: "_ZN4core3ptr64drop_in_place$LT$bootloader..bootinfo..memory_map..MemoryMap$GT$17h9f8456f6721d4ab0E", scope: !205, file: !1149, line: 490, type: !1569, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1574, retainedNodes: !1572)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{null, !1571}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!1572 = !{!1573}
!1573 = !DILocalVariable(arg: 1, scope: !1568, file: !1149, line: 490, type: !1571)
!1574 = !{!1575}
!1575 = !DITemplateTypeParameter(name: "T", type: !94)
!1576 = !DILocation(line: 490, column: 1, scope: !1568)
!1577 = distinct !DISubprogram(name: "drop_in_place<bootloader::bootinfo::memory_map::FrameRange>", linkageName: "_ZN4core3ptr65drop_in_place$LT$bootloader..bootinfo..memory_map..FrameRange$GT$17hbe46a727592d2381E", scope: !205, file: !1149, line: 490, type: !1578, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1583, retainedNodes: !1581)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{null, !1580}
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!1581 = !{!1582}
!1582 = !DILocalVariable(arg: 1, scope: !1577, file: !1149, line: 490, type: !1580)
!1583 = !{!1584}
!1584 = !DITemplateTypeParameter(name: "T", type: !19)
!1585 = !DILocation(line: 490, column: 1, scope: !1577)
!1586 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr71drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegion$GT$17h749af3c141c3b648E", scope: !205, file: !1149, line: 490, type: !1587, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !827, retainedNodes: !1590)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{null, !1589}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegion", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!1590 = !{!1591}
!1591 = !DILocalVariable(arg: 1, scope: !1586, file: !1149, line: 490, type: !1589)
!1592 = !DILocation(line: 490, column: 1, scope: !1586)
!1593 = distinct !DISubprogram(name: "drop_in_place<&bootloader::bootinfo::memory_map::MemoryRegionType>", linkageName: "_ZN4core3ptr75drop_in_place$LT$$RF$bootloader..bootinfo..memory_map..MemoryRegionType$GT$17h00bb43a2928ed5a5E", scope: !205, file: !1149, line: 490, type: !1594, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1599, retainedNodes: !1597)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{null, !1596}
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bootloader::bootinfo::memory_map::MemoryRegionType", baseType: !60, size: 64, align: 64, dwarfAddressSpace: 0)
!1597 = !{!1598}
!1598 = !DILocalVariable(arg: 1, scope: !1593, file: !1149, line: 490, type: !1596)
!1599 = !{!1600}
!1600 = !DITemplateTypeParameter(name: "T", type: !60)
!1601 = !DILocation(line: 490, column: 1, scope: !1593)
!1602 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17hb93bd9a3be733f0bE", scope: !1603, file: !267, line: 35, type: !1604, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1606)
!1603 = !DINamespace(name: "is_null", scope: !278)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!421, !1178}
!1606 = !{!1607}
!1607 = !DILocalVariable(name: "ptr", arg: 1, scope: !1602, file: !267, line: 35, type: !1178)
!1608 = !DILocation(line: 35, column: 25, scope: !1602)
!1609 = !DILocalVariable(name: "self", arg: 1, scope: !1610, file: !267, line: 209, type: !1178)
!1610 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h06de44f4ed1d565cE", scope: !278, file: !267, line: 209, type: !1611, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !1613)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!9, !1178}
!1613 = !{!1609}
!1614 = !{!1615}
!1615 = !DITemplateTypeParameter(name: "T", type: !123)
!1616 = !DILocation(line: 209, column: 17, scope: !1610, inlinedAt: !1617)
!1617 = distinct !DILocation(line: 36, column: 13, scope: !1602)
!1618 = !DILocalVariable(name: "self", arg: 1, scope: !1619, file: !267, line: 57, type: !1178)
!1619 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h4022ce0a1171ff2fE", scope: !278, file: !267, line: 57, type: !1620, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1623, retainedNodes: !1622)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!1292, !1178}
!1622 = !{!1618}
!1623 = !{!1615, !561}
!1624 = !DILocation(line: 57, column: 26, scope: !1619, inlinedAt: !1625)
!1625 = distinct !DILocation(line: 213, column: 33, scope: !1610, inlinedAt: !1617)
!1626 = !DILocation(line: 213, column: 18, scope: !1610, inlinedAt: !1617)
!1627 = !DILocation(line: 36, column: 13, scope: !1602)
!1628 = !DILocation(line: 37, column: 10, scope: !1602)
!1629 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd185ac7ae47d39a4E", scope: !278, file: !267, line: 33, type: !1630, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1632)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!421, !272}
!1632 = !{!1633}
!1633 = !DILocalVariable(name: "self", arg: 1, scope: !1629, file: !267, line: 33, type: !272)
!1634 = !DILocation(line: 33, column: 26, scope: !1629)
!1635 = !DILocation(line: 50, column: 36, scope: !1629)
!1636 = !DILocation(line: 50, column: 18, scope: !1629)
!1637 = !DILocation(line: 51, column: 6, scope: !1629)
!1638 = distinct !DISubprogram(name: "from_raw_parts<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h4596d8df27de8d45E", scope: !1640, file: !1639, line: 111, type: !1641, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1643)
!1639 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1e1a461bde75de7a93357ca7e628f393")
!1640 = !DINamespace(name: "metadata", scope: !205)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!170, !6, !9}
!1643 = !{!1644, !1645}
!1644 = !DILocalVariable(name: "data_address", arg: 1, scope: !1638, file: !1639, line: 112, type: !6)
!1645 = !DILocalVariable(name: "metadata", arg: 2, scope: !1638, file: !1639, line: 113, type: !9)
!1646 = !DILocation(line: 112, column: 5, scope: !1638)
!1647 = !DILocation(line: 113, column: 5, scope: !1638)
!1648 = !DILocation(line: 118, column: 36, scope: !1638)
!1649 = !DILocation(line: 118, column: 14, scope: !1638)
!1650 = !DILocation(line: 119, column: 2, scope: !1638)
!1651 = distinct !DISubprogram(name: "from_raw_parts<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h95a0ae0b76194160E", scope: !1640, file: !1639, line: 111, type: !1652, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1654)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!208, !6, !7}
!1654 = !{!1655, !1656}
!1655 = !DILocalVariable(name: "data_address", arg: 1, scope: !1651, file: !1639, line: 112, type: !6)
!1656 = !DILocalVariable(name: "metadata", arg: 2, scope: !1651, file: !1639, line: 113, type: !7)
!1657 = !DILocation(line: 112, column: 5, scope: !1651)
!1658 = !DILocation(line: 113, column: 5, scope: !1651)
!1659 = !DILocation(line: 118, column: 36, scope: !1651)
!1660 = !DILocation(line: 118, column: 14, scope: !1651)
!1661 = !DILocation(line: 119, column: 2, scope: !1651)
!1662 = distinct !DISubprogram(name: "from_raw_parts_mut<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hd44602cd73005437E", scope: !1640, file: !1639, line: 128, type: !1663, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1665)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!247, !1292, !9}
!1665 = !{!1666, !1667}
!1666 = !DILocalVariable(name: "data_address", arg: 1, scope: !1662, file: !1639, line: 129, type: !1292)
!1667 = !DILocalVariable(name: "metadata", arg: 2, scope: !1662, file: !1639, line: 130, type: !9)
!1668 = !DILocation(line: 129, column: 5, scope: !1662)
!1669 = !DILocation(line: 130, column: 5, scope: !1662)
!1670 = !DILocation(line: 135, column: 36, scope: !1662)
!1671 = !DILocation(line: 135, column: 14, scope: !1662)
!1672 = !DILocation(line: 136, column: 2, scope: !1662)
!1673 = distinct !DISubprogram(name: "metadata<[bootloader::bootinfo::memory_map::MemoryRegion]>", linkageName: "_ZN4core3ptr8metadata8metadata17h4fc945275518d4ceE", scope: !1640, file: !1639, line: 94, type: !1674, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1676)
!1674 = !DISubroutineType(types: !1675)
!1675 = !{!9, !170}
!1676 = !{!1677}
!1677 = !DILocalVariable(name: "ptr", arg: 1, scope: !1673, file: !1639, line: 94, type: !170)
!1678 = !DILocation(line: 94, column: 34, scope: !1673)
!1679 = !DILocation(line: 98, column: 14, scope: !1673)
!1680 = !DILocation(line: 99, column: 2, scope: !1673)
!1681 = distinct !DISubprogram(name: "metadata<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8metadata8metadata17hfa119b9ee6b727ccE", scope: !1640, file: !1639, line: 94, type: !1430, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1682)
!1682 = !{!1683}
!1683 = !DILocalVariable(name: "ptr", arg: 1, scope: !1681, file: !1639, line: 94, type: !208)
!1684 = !DILocation(line: 94, column: 34, scope: !1681)
!1685 = !DILocation(line: 98, column: 14, scope: !1681)
!1686 = !DILocation(line: 99, column: 2, scope: !1681)
!1687 = distinct !DISubprogram(name: "new_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd2f969f601200b1eE", scope: !819, file: !1688, line: 197, type: !1689, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1691)
!1688 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "e2305a7f679119ef3d1d85e2bcd47c5d")
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!819, !272}
!1691 = !{!1692}
!1692 = !DILocalVariable(name: "ptr", arg: 1, scope: !1687, file: !1688, line: 197, type: !272)
!1693 = !DILocation(line: 197, column: 39, scope: !1687)
!1694 = !DILocation(line: 200, column: 13, scope: !1687)
!1695 = !DILocation(line: 201, column: 13, scope: !1687)
!1696 = !DILocation(line: 203, column: 6, scope: !1687)
!1697 = !DILocalVariable(name: "ptr", arg: 1, scope: !1698, file: !229, line: 2484, type: !272)
!1698 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17hcc7620fd88e5ec69E", scope: !1699, file: !229, line: 2484, type: !1537, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1701)
!1699 = !DINamespace(name: "new_unchecked", scope: !1700)
!1700 = !DINamespace(name: "{impl#3}", scope: !820)
!1701 = !{!1697}
!1702 = !DILocation(line: 2484, column: 39, scope: !1698, inlinedAt: !1703)
!1703 = distinct !DILocation(line: 200, column: 13, scope: !1687)
!1704 = !DILocation(line: 200, column: 134, scope: !1705, inlinedAt: !1703)
!1705 = !DILexicalBlockFile(scope: !1698, file: !1688, discriminator: 0)
!1706 = !DILocation(line: 200, column: 133, scope: !1705, inlinedAt: !1703)
!1707 = !DILocation(line: 2485, column: 20, scope: !1698, inlinedAt: !1703)
!1708 = !DILocation(line: 2487, column: 21, scope: !1698, inlinedAt: !1703)
!1709 = distinct !DISubprogram(name: "is_aligned<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17he1d57f4f8c65cbe0E", scope: !203, file: !202, line: 1448, type: !636, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !1710)
!1710 = !{!1711}
!1711 = !DILocalVariable(name: "self", arg: 1, scope: !1709, file: !202, line: 1448, type: !638)
!1712 = !DILocation(line: 1448, column: 29, scope: !1709)
!1713 = !DILocation(line: 1452, column: 9, scope: !1709)
!1714 = !DILocation(line: 1453, column: 6, scope: !1709)
!1715 = distinct !DISubprogram(name: "is_aligned<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17he2efdc4959409220E", scope: !203, file: !202, line: 1448, type: !659, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1716)
!1716 = !{!1717}
!1717 = !DILocalVariable(name: "self", arg: 1, scope: !1715, file: !202, line: 1448, type: !208)
!1718 = !DILocation(line: 1448, column: 29, scope: !1715)
!1719 = !DILocation(line: 1452, column: 9, scope: !1715)
!1720 = !DILocation(line: 1453, column: 6, scope: !1715)
!1721 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17hd1e3d1ebab454cacE", scope: !1722, file: !202, line: 1570, type: !1723, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1725)
!1722 = !DINamespace(name: "is_aligned_to", scope: !203)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!421, !6, !9}
!1725 = !{!1726, !1727}
!1726 = !DILocalVariable(name: "ptr", arg: 1, scope: !1721, file: !202, line: 1570, type: !6)
!1727 = !DILocalVariable(name: "align", arg: 2, scope: !1721, file: !202, line: 1570, type: !9)
!1728 = !DILocation(line: 1570, column: 25, scope: !1721)
!1729 = !DILocation(line: 1570, column: 41, scope: !1721)
!1730 = !DILocalVariable(name: "self", arg: 1, scope: !1731, file: !202, line: 203, type: !6)
!1731 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hac61a815ef238a58E", scope: !203, file: !202, line: 203, type: !1732, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1735, retainedNodes: !1734)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{!9, !6}
!1734 = !{!1730}
!1735 = !{!461}
!1736 = !DILocation(line: 203, column: 17, scope: !1731, inlinedAt: !1737)
!1737 = distinct !DILocation(line: 1571, column: 13, scope: !1721)
!1738 = !DILocalVariable(name: "self", arg: 1, scope: !1739, file: !202, line: 58, type: !6)
!1739 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h6f397f45193942c5E", scope: !203, file: !202, line: 58, type: !1740, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1743, retainedNodes: !1742)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!6, !6}
!1742 = !{!1738}
!1743 = !{!461, !561}
!1744 = !DILocation(line: 58, column: 26, scope: !1739, inlinedAt: !1745)
!1745 = distinct !DILocation(line: 207, column: 33, scope: !1731, inlinedAt: !1737)
!1746 = !DILocation(line: 207, column: 18, scope: !1731, inlinedAt: !1737)
!1747 = !DILocation(line: 1571, column: 26, scope: !1721)
!1748 = !DILocation(line: 1571, column: 13, scope: !1721)
!1749 = !DILocation(line: 1572, column: 10, scope: !1721)
!1750 = distinct !DISubprogram(name: "is_aligned_to<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h13ed7b6c008c09c7E", scope: !203, file: !202, line: 1564, type: !1751, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !1753)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!421, !638, !9}
!1753 = !{!1754, !1755}
!1754 = !DILocalVariable(name: "self", arg: 1, scope: !1750, file: !202, line: 1564, type: !638)
!1755 = !DILocalVariable(name: "align", arg: 2, scope: !1750, file: !202, line: 1564, type: !9)
!1756 = !DILocation(line: 1564, column: 32, scope: !1750)
!1757 = !DILocation(line: 1564, column: 38, scope: !1750)
!1758 = !DILocation(line: 2169, column: 38, scope: !1203, inlinedAt: !1759)
!1759 = distinct !DILocation(line: 1565, column: 13, scope: !1750)
!1760 = !DILocation(line: 106, column: 33, scope: !1208, inlinedAt: !1761)
!1761 = distinct !DILocation(line: 2170, column: 13, scope: !1203, inlinedAt: !1759)
!1762 = !DILocation(line: 107, column: 13, scope: !1208, inlinedAt: !1761)
!1763 = !DILocation(line: 2170, column: 13, scope: !1203, inlinedAt: !1759)
!1764 = !DILocation(line: 1565, column: 12, scope: !1750)
!1765 = !DILocalVariable(name: "self", arg: 1, scope: !1766, file: !202, line: 58, type: !638)
!1766 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h810da0a78c1f4a93E", scope: !203, file: !202, line: 58, type: !1767, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1770, retainedNodes: !1769)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!6, !638}
!1769 = !{!1765}
!1770 = !{!652, !561}
!1771 = !DILocation(line: 58, column: 26, scope: !1766, inlinedAt: !1772)
!1772 = distinct !DILocation(line: 1584, column: 37, scope: !1750)
!1773 = !DILocation(line: 1584, column: 36, scope: !1750)
!1774 = !DILocation(line: 1584, column: 18, scope: !1750)
!1775 = !DILocation(line: 1585, column: 6, scope: !1750)
!1776 = !DILocation(line: 1566, column: 13, scope: !1750)
!1777 = distinct !DISubprogram(name: "is_aligned_to<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h9d0abe44a5b22755E", scope: !203, file: !202, line: 1564, type: !1778, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1780)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!421, !208, !9}
!1780 = !{!1781, !1782}
!1781 = !DILocalVariable(name: "self", arg: 1, scope: !1777, file: !202, line: 1564, type: !208)
!1782 = !DILocalVariable(name: "align", arg: 2, scope: !1777, file: !202, line: 1564, type: !9)
!1783 = !DILocation(line: 1564, column: 32, scope: !1777)
!1784 = !DILocation(line: 1564, column: 38, scope: !1777)
!1785 = !DILocation(line: 2169, column: 38, scope: !1203, inlinedAt: !1786)
!1786 = distinct !DILocation(line: 1565, column: 13, scope: !1777)
!1787 = !DILocation(line: 106, column: 33, scope: !1208, inlinedAt: !1788)
!1788 = distinct !DILocation(line: 2170, column: 13, scope: !1203, inlinedAt: !1786)
!1789 = !DILocation(line: 107, column: 13, scope: !1208, inlinedAt: !1788)
!1790 = !DILocation(line: 2170, column: 13, scope: !1203, inlinedAt: !1786)
!1791 = !DILocation(line: 1565, column: 12, scope: !1777)
!1792 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !1793)
!1793 = distinct !DILocation(line: 1584, column: 37, scope: !1777)
!1794 = !DILocation(line: 1584, column: 36, scope: !1777)
!1795 = !DILocation(line: 1584, column: 18, scope: !1777)
!1796 = !DILocation(line: 1585, column: 6, scope: !1777)
!1797 = !DILocation(line: 1566, column: 13, scope: !1777)
!1798 = distinct !DISubprogram(name: "with_metadata_of<u8, bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h67b5cbd678b7f6cfE", scope: !203, file: !202, line: 94, type: !1799, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1805, retainedNodes: !1802)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!208, !1801, !208}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!1802 = !{!1803, !1804}
!1803 = !DILocalVariable(name: "self", arg: 1, scope: !1798, file: !202, line: 94, type: !1801)
!1804 = !DILocalVariable(name: "meta", arg: 2, scope: !1798, file: !202, line: 94, type: !208)
!1805 = !{!1615, !1806}
!1806 = !DITemplateTypeParameter(name: "U", type: !13)
!1807 = !DILocation(line: 94, column: 38, scope: !1798)
!1808 = !DILocation(line: 94, column: 44, scope: !1798)
!1809 = !DILocation(line: 98, column: 48, scope: !1798)
!1810 = !DILocation(line: 98, column: 9, scope: !1798)
!1811 = !DILocation(line: 99, column: 6, scope: !1798)
!1812 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hfdbe35ac5afddf51E", scope: !1813, file: !202, line: 36, type: !1814, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !1816)
!1813 = !DINamespace(name: "is_null", scope: !203)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!421, !1801}
!1816 = !{!1817}
!1817 = !DILocalVariable(name: "ptr", arg: 1, scope: !1812, file: !202, line: 36, type: !1801)
!1818 = !DILocation(line: 36, column: 25, scope: !1812)
!1819 = !DILocalVariable(name: "self", arg: 1, scope: !1820, file: !202, line: 203, type: !1801)
!1820 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0758ef2a817ee7aeE", scope: !203, file: !202, line: 203, type: !1821, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !1823)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!9, !1801}
!1823 = !{!1819}
!1824 = !DILocation(line: 203, column: 17, scope: !1820, inlinedAt: !1825)
!1825 = distinct !DILocation(line: 37, column: 13, scope: !1812)
!1826 = !DILocalVariable(name: "self", arg: 1, scope: !1827, file: !202, line: 58, type: !1801)
!1827 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hdedd5c86ba172ba1E", scope: !203, file: !202, line: 58, type: !1828, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1623, retainedNodes: !1830)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!6, !1801}
!1830 = !{!1826}
!1831 = !DILocation(line: 58, column: 26, scope: !1827, inlinedAt: !1832)
!1832 = distinct !DILocation(line: 207, column: 33, scope: !1820, inlinedAt: !1825)
!1833 = !DILocation(line: 207, column: 18, scope: !1820, inlinedAt: !1825)
!1834 = !DILocation(line: 37, column: 13, scope: !1812)
!1835 = !DILocation(line: 38, column: 10, scope: !1812)
!1836 = distinct !DISubprogram(name: "is_null<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf52a54f7e512b4a6E", scope: !203, file: !202, line: 34, type: !659, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1837)
!1837 = !{!1838}
!1838 = !DILocalVariable(name: "self", arg: 1, scope: !1836, file: !202, line: 34, type: !208)
!1839 = !DILocation(line: 34, column: 26, scope: !1836)
!1840 = !DILocation(line: 51, column: 36, scope: !1836)
!1841 = !DILocation(line: 51, column: 18, scope: !1836)
!1842 = !DILocation(line: 52, column: 6, scope: !1836)
!1843 = distinct !DISubprogram(name: "is_null<core::mem::maybe_uninit::MaybeUninit<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hfc824951da861796E", scope: !203, file: !202, line: 34, type: !636, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !651, retainedNodes: !1844)
!1844 = !{!1845}
!1845 = !DILocalVariable(name: "self", arg: 1, scope: !1843, file: !202, line: 34, type: !638)
!1846 = !DILocation(line: 34, column: 26, scope: !1843)
!1847 = !DILocation(line: 51, column: 36, scope: !1843)
!1848 = !DILocation(line: 51, column: 18, scope: !1843)
!1849 = !DILocation(line: 52, column: 6, scope: !1843)
!1850 = distinct !DISubprogram(name: "sub_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h292edb86da6528a0E", scope: !203, file: !202, line: 781, type: !1851, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1853)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!9, !208, !208}
!1853 = !{!1854, !1855, !1856, !1858}
!1854 = !DILocalVariable(name: "self", arg: 1, scope: !1850, file: !202, line: 781, type: !208)
!1855 = !DILocalVariable(name: "origin", arg: 2, scope: !1850, file: !202, line: 781, type: !208)
!1856 = !DILocalVariable(name: "this", scope: !1857, file: !202, line: 785, type: !208, align: 8)
!1857 = distinct !DILexicalBlock(scope: !1850, file: !202, line: 785, column: 9)
!1858 = !DILocalVariable(name: "pointee_size", scope: !1859, file: !202, line: 795, type: !9, align: 8)
!1859 = distinct !DILexicalBlock(scope: !1857, file: !202, line: 795, column: 9)
!1860 = !DILocation(line: 781, column: 33, scope: !1850)
!1861 = !DILocation(line: 785, column: 13, scope: !1857)
!1862 = !DILocation(line: 781, column: 39, scope: !1850)
!1863 = !DILocation(line: 789, column: 13, scope: !1857)
!1864 = !DILocation(line: 795, column: 28, scope: !1857)
!1865 = !DILocation(line: 795, column: 13, scope: !1859)
!1866 = !DILocation(line: 796, column: 17, scope: !1859)
!1867 = !DILocalVariable(name: "this", arg: 1, scope: !1868, file: !229, line: 2484, type: !208)
!1868 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr7runtime17hbc68420aebd61bbfE", scope: !1869, file: !229, line: 2484, type: !1870, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1872)
!1869 = !DINamespace(name: "sub_ptr", scope: !203)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{null, !208, !208}
!1872 = !{!1867, !1873}
!1873 = !DILocalVariable(name: "origin", arg: 2, scope: !1868, file: !229, line: 2484, type: !208)
!1874 = !DILocation(line: 2484, column: 39, scope: !1868, inlinedAt: !1875)
!1875 = distinct !DILocation(line: 789, column: 13, scope: !1857)
!1876 = !DILocation(line: 791, column: 58, scope: !1877, inlinedAt: !1875)
!1877 = !DILexicalBlockFile(scope: !1868, file: !202, discriminator: 0)
!1878 = !DILocation(line: 2485, column: 20, scope: !1868, inlinedAt: !1875)
!1879 = !DILocation(line: 2487, column: 21, scope: !1868, inlinedAt: !1875)
!1880 = !DILocation(line: 796, column: 37, scope: !1859)
!1881 = !DILocation(line: 796, column: 9, scope: !1859)
!1882 = !DILocation(line: 798, column: 18, scope: !1859)
!1883 = !DILocation(line: 799, column: 6, scope: !1850)
!1884 = distinct !DISubprogram(name: "len<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h350a4060caf8200cE", scope: !1885, file: !202, line: 1609, type: !1674, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1886)
!1885 = !DINamespace(name: "{impl#1}", scope: !204)
!1886 = !{!1887}
!1887 = !DILocalVariable(name: "self", arg: 1, scope: !1884, file: !202, line: 1609, type: !170)
!1888 = !DILocation(line: 1609, column: 22, scope: !1884)
!1889 = !DILocation(line: 1610, column: 9, scope: !1884)
!1890 = !DILocation(line: 1611, column: 6, scope: !1884)
!1891 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h54c6b9f4248a570dE", scope: !1885, file: !202, line: 1629, type: !1892, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1894)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{!208, !170}
!1894 = !{!1895}
!1895 = !DILocalVariable(name: "self", arg: 1, scope: !1891, file: !202, line: 1629, type: !170)
!1896 = !DILocation(line: 1629, column: 25, scope: !1891)
!1897 = !DILocation(line: 1631, column: 6, scope: !1891)
!1898 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hc1741b6a9d7e3c4bE", scope: !1900, file: !1899, line: 347, type: !1902, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1908, retainedNodes: !1905)
!1899 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "a3c36e35ceb67ad777a82e040f0657ec")
!1900 = !DINamespace(name: "{impl#15}", scope: !1901)
!1901 = !DINamespace(name: "array", scope: !143)
!1902 = !DISubroutineType(types: !1903)
!1903 = !{!323, !1904, !175, !327}
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!1905 = !{!1906, !1907}
!1906 = !DILocalVariable(name: "self", arg: 1, scope: !1898, file: !1899, line: 347, type: !1904)
!1907 = !DILocalVariable(name: "index", arg: 2, scope: !1898, file: !1899, line: 347, type: !175)
!1908 = !{!191, !1909}
!1909 = !DITemplateTypeParameter(name: "I", type: !175)
!1910 = !DILocation(line: 347, column: 14, scope: !1898)
!1911 = !DILocation(line: 347, column: 21, scope: !1898)
!1912 = !DILocation(line: 348, column: 9, scope: !1898)
!1913 = !DILocation(line: 349, column: 6, scope: !1898)
!1914 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>, 64>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h372658ec52d9075cE", scope: !1915, file: !1899, line: 359, type: !1916, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1908, retainedNodes: !1919)
!1915 = !DINamespace(name: "{impl#16}", scope: !1901)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!354, !1918, !175, !327}
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bootloader::bootinfo::memory_map::MemoryRegion; 64]", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!1919 = !{!1920, !1921}
!1920 = !DILocalVariable(name: "self", arg: 1, scope: !1914, file: !1899, line: 359, type: !1918)
!1921 = !DILocalVariable(name: "index", arg: 2, scope: !1914, file: !1899, line: 359, type: !175)
!1922 = !DILocation(line: 359, column: 18, scope: !1914)
!1923 = !DILocation(line: 359, column: 29, scope: !1914)
!1924 = !DILocation(line: 360, column: 9, scope: !1914)
!1925 = !DILocation(line: 361, column: 6, scope: !1914)
!1926 = distinct !DISubprogram(name: "split_at_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h59d0703bd83b67daE", scope: !1127, file: !1927, line: 1636, type: !1928, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1934)
!1927 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "0b3adda84e3d0ea3eafbebcfb4ca210d")
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!1930, !354, !9, !327}
!1930 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut [bootloader::bootinfo::memory_map::MemoryRegion], &mut [bootloader::bootinfo::memory_map::MemoryRegion])", file: !2, size: 256, align: 64, elements: !1931, templateParams: !24, identifier: "27e665523b3a8b378579639127367d4d")
!1931 = !{!1932, !1933}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1930, file: !2, baseType: !354, size: 128, align: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1930, file: !2, baseType: !354, size: 128, align: 64, offset: 128)
!1934 = !{!1935, !1936}
!1935 = !DILocalVariable(name: "self", arg: 1, scope: !1926, file: !1927, line: 1636, type: !354)
!1936 = !DILocalVariable(name: "mid", arg: 2, scope: !1926, file: !1927, line: 1636, type: !9)
!1937 = !DILocation(line: 1636, column: 31, scope: !1926)
!1938 = !DILocation(line: 1636, column: 42, scope: !1926)
!1939 = !DILocation(line: 1637, column: 17, scope: !1926)
!1940 = !DILocation(line: 1637, column: 9, scope: !1926)
!1941 = !DILocation(line: 1640, column: 18, scope: !1926)
!1942 = !DILocation(line: 1641, column: 6, scope: !1926)
!1943 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfabc2732da503c76E", scope: !1127, file: !1927, line: 398, type: !1944, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1949, retainedNodes: !1946)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!12, !323, !9}
!1946 = !{!1947, !1948}
!1947 = !DILocalVariable(name: "self", arg: 1, scope: !1943, file: !1927, line: 398, type: !323)
!1948 = !DILocalVariable(name: "index", arg: 2, scope: !1943, file: !1927, line: 398, type: !9)
!1949 = !{!191, !1950}
!1950 = !DITemplateTypeParameter(name: "I", type: !9)
!1951 = !DILocation(line: 398, column: 42, scope: !1943)
!1952 = !DILocation(line: 398, column: 49, scope: !1943)
!1953 = !DILocation(line: 405, column: 20, scope: !1943)
!1954 = !DILocation(line: 406, column: 6, scope: !1943)
!1955 = distinct !DISubprogram(name: "as_mut_ptr_range<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16as_mut_ptr_range17h2223e61848f7512aE", scope: !1127, file: !1927, line: 586, type: !1956, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1964)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{!1958, !354}
!1958 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<*mut bootloader::bootinfo::memory_map::MemoryRegion>", scope: !176, file: !2, size: 128, align: 64, elements: !1959, templateParams: !1962, identifier: "43cff5206d9508db159f3357f76c8060")
!1959 = !{!1960, !1961}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1958, file: !2, baseType: !272, size: 64, align: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1958, file: !2, baseType: !272, size: 64, align: 64, offset: 64)
!1962 = !{!1963}
!1963 = !DITemplateTypeParameter(name: "Idx", type: !272)
!1964 = !{!1965, !1966, !1968}
!1965 = !DILocalVariable(name: "self", arg: 1, scope: !1955, file: !1927, line: 586, type: !354)
!1966 = !DILocalVariable(name: "start", scope: !1967, file: !1927, line: 587, type: !272, align: 8)
!1967 = distinct !DILexicalBlock(scope: !1955, file: !1927, line: 587, column: 9)
!1968 = !DILocalVariable(name: "end", scope: !1969, file: !1927, line: 589, type: !272, align: 8)
!1969 = distinct !DILexicalBlock(scope: !1967, file: !1927, line: 589, column: 9)
!1970 = !DILocation(line: 586, column: 35, scope: !1955)
!1971 = !DILocalVariable(name: "self", arg: 1, scope: !1972, file: !1927, line: 506, type: !354)
!1972 = distinct !DISubprogram(name: "as_mut_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hac6c2b645bab733aE", scope: !1127, file: !1927, line: 506, type: !1973, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !1975)
!1973 = !DISubroutineType(types: !1974)
!1974 = !{!272, !354}
!1975 = !{!1971}
!1976 = !DILocation(line: 506, column: 29, scope: !1972, inlinedAt: !1977)
!1977 = distinct !DILocation(line: 587, column: 21, scope: !1955)
!1978 = !DILocation(line: 587, column: 21, scope: !1955)
!1979 = !DILocation(line: 587, column: 13, scope: !1967)
!1980 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !1981)
!1981 = distinct !DILocation(line: 589, column: 28, scope: !1967)
!1982 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !1981)
!1983 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !1984)
!1984 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !1981)
!1985 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !1984)
!1986 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !1984)
!1987 = !DILocation(line: 589, column: 28, scope: !1967)
!1988 = !DILocation(line: 589, column: 13, scope: !1969)
!1989 = !DILocation(line: 590, column: 9, scope: !1969)
!1990 = !DILocation(line: 591, column: 6, scope: !1955)
!1991 = distinct !DISubprogram(name: "sort_unstable_by<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by17h79a58ecc265a23b4E", scope: !1127, file: !1927, line: 2688, type: !1992, scopeLine: 2688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1997, retainedNodes: !1994)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{null, !354, !1131}
!1994 = !{!1995, !1996}
!1995 = !DILocalVariable(name: "self", arg: 1, scope: !1991, file: !1927, line: 2688, type: !354)
!1996 = !DILocalVariable(name: "compare", arg: 2, scope: !1991, file: !1927, line: 2688, type: !1131)
!1997 = !{!191, !1998}
!1998 = !DITemplateTypeParameter(name: "F", type: !1131)
!1999 = !DILocation(line: 2688, column: 32, scope: !1991)
!2000 = !DILocation(line: 2688, column: 43, scope: !1991)
!2001 = !DILocation(line: 2692, column: 31, scope: !1991)
!2002 = !DILocation(line: 2692, column: 9, scope: !1991)
!2003 = !{i64 1}
!2004 = !DILocation(line: 2693, column: 6, scope: !1991)
!2005 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16sort_unstable_by28_$u7b$$u7b$closure$u7d$$u7d$17h72c5253f3a69a3b3E", scope: !1126, file: !1927, line: 2692, type: !2006, scopeLine: 2692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1997, retainedNodes: !2008)
!2006 = !DISubroutineType(types: !2007)
!2007 = !{!421, !1124, !12, !12}
!2008 = !{!2009, !2010, !2011}
!2009 = !DILocalVariable(name: "a", arg: 2, scope: !2005, file: !1927, line: 2692, type: !12)
!2010 = !DILocalVariable(name: "b", arg: 3, scope: !2005, file: !1927, line: 2692, type: !12)
!2011 = !DILocalVariable(name: "compare", scope: !2005, file: !1927, line: 2688, type: !1131, align: 1)
!2012 = !DILocation(line: 2688, column: 47, scope: !2005)
!2013 = !DILocation(line: 2692, column: 32, scope: !2005)
!2014 = !DILocation(line: 2692, column: 35, scope: !2005)
!2015 = !DILocation(line: 2692, column: 38, scope: !2005)
!2016 = !DILocation(line: 2692, column: 69, scope: !2005)
!2017 = distinct !DISubprogram(name: "split_at_mut_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h70f505bca652d857E", scope: !1127, file: !1927, line: 1744, type: !2018, scopeLine: 1744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2020)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{!1930, !354, !9}
!2020 = !{!2021, !2022, !2023, !2025}
!2021 = !DILocalVariable(name: "self", arg: 1, scope: !2017, file: !1927, line: 1744, type: !354)
!2022 = !DILocalVariable(name: "mid", arg: 2, scope: !2017, file: !1927, line: 1744, type: !9)
!2023 = !DILocalVariable(name: "len", scope: !2024, file: !1927, line: 1745, type: !9, align: 8)
!2024 = distinct !DILexicalBlock(scope: !2017, file: !1927, line: 1745, column: 9)
!2025 = !DILocalVariable(name: "ptr", scope: !2026, file: !1927, line: 1746, type: !272, align: 8)
!2026 = distinct !DILexicalBlock(scope: !2024, file: !1927, line: 1746, column: 9)
!2027 = !DILocation(line: 1744, column: 48, scope: !2017)
!2028 = !DILocation(line: 1744, column: 59, scope: !2017)
!2029 = !DILocation(line: 1745, column: 19, scope: !2017)
!2030 = !DILocation(line: 1745, column: 13, scope: !2024)
!2031 = !DILocation(line: 506, column: 29, scope: !1972, inlinedAt: !2032)
!2032 = distinct !DILocation(line: 1746, column: 19, scope: !2024)
!2033 = !DILocation(line: 1746, column: 19, scope: !2024)
!2034 = !DILocation(line: 1746, column: 13, scope: !2026)
!2035 = !DILocation(line: 1753, column: 13, scope: !2026)
!2036 = !DILocation(line: 1757, column: 14, scope: !2026)
!2037 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2038)
!2038 = distinct !DILocation(line: 1757, column: 63, scope: !2026)
!2039 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2038)
!2040 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2041)
!2041 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2038)
!2042 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2041)
!2043 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2041)
!2044 = !DILocation(line: 1757, column: 77, scope: !2026)
!2045 = !DILocalVariable(name: "mid", arg: 1, scope: !2046, file: !229, line: 2484, type: !9)
!2046 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked7runtime17h1d933de8fb407671E", scope: !2047, file: !229, line: 2484, type: !2048, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2050)
!2047 = !DINamespace(name: "split_at_mut_unchecked", scope: !1127)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{null, !9, !9}
!2050 = !{!2045, !2051}
!2051 = !DILocalVariable(name: "len", arg: 2, scope: !2046, file: !229, line: 2484, type: !9)
!2052 = !DILocation(line: 2484, column: 39, scope: !2046, inlinedAt: !2053)
!2053 = distinct !DILocation(line: 1753, column: 13, scope: !2026)
!2054 = !DILocation(line: 1755, column: 45, scope: !2055, inlinedAt: !2053)
!2055 = !DILexicalBlockFile(scope: !2046, file: !1927, discriminator: 0)
!2056 = !DILocation(line: 2485, column: 20, scope: !2046, inlinedAt: !2053)
!2057 = !DILocation(line: 2487, column: 21, scope: !2046, inlinedAt: !2053)
!2058 = !DILocation(line: 1757, column: 44, scope: !2026)
!2059 = !DILocation(line: 1757, column: 13, scope: !2026)
!2060 = !DILocation(line: 1759, column: 6, scope: !2017)
!2061 = distinct !DISubprogram(name: "iter<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h2eb88a55d98b1b0cE", scope: !1127, file: !1927, line: 741, type: !2062, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2064)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!815, !323}
!2064 = !{!2065}
!2065 = !DILocalVariable(name: "self", arg: 1, scope: !2061, file: !1927, line: 741, type: !323)
!2066 = !DILocation(line: 741, column: 17, scope: !2061)
!2067 = !DILocation(line: 742, column: 9, scope: !2061)
!2068 = !DILocation(line: 743, column: 6, scope: !2061)
!2069 = distinct !DISubprogram(name: "swap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17h3698e108c8304892E", scope: !1127, file: !1927, line: 615, type: !2070, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2072)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !354, !9, !9, !327}
!2072 = !{!2073, !2074, !2075, !2076, !2078}
!2073 = !DILocalVariable(name: "self", arg: 1, scope: !2069, file: !1927, line: 615, type: !354)
!2074 = !DILocalVariable(name: "a", arg: 2, scope: !2069, file: !1927, line: 615, type: !9)
!2075 = !DILocalVariable(name: "b", arg: 3, scope: !2069, file: !1927, line: 615, type: !9)
!2076 = !DILocalVariable(name: "pa", scope: !2077, file: !1927, line: 618, type: !272, align: 8)
!2077 = distinct !DILexicalBlock(scope: !2069, file: !1927, line: 618, column: 9)
!2078 = !DILocalVariable(name: "pb", scope: !2079, file: !1927, line: 619, type: !272, align: 8)
!2079 = distinct !DILexicalBlock(scope: !2077, file: !1927, line: 619, column: 9)
!2080 = !DILocation(line: 615, column: 23, scope: !2069)
!2081 = !DILocation(line: 615, column: 34, scope: !2069)
!2082 = !DILocation(line: 615, column: 44, scope: !2069)
!2083 = !DILocation(line: 618, column: 36, scope: !2069)
!2084 = !DILocation(line: 618, column: 18, scope: !2069)
!2085 = !DILocation(line: 618, column: 13, scope: !2077)
!2086 = !DILocation(line: 619, column: 36, scope: !2077)
!2087 = !DILocation(line: 619, column: 18, scope: !2077)
!2088 = !DILocation(line: 619, column: 13, scope: !2079)
!2089 = !DILocation(line: 625, column: 13, scope: !2079)
!2090 = !DILocation(line: 627, column: 6, scope: !2069)
!2091 = distinct !DISubprogram(name: "reverse<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse17h877aede61715ec1dE", scope: !1127, file: !1927, line: 683, type: !2092, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2094)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{null, !354}
!2094 = !{!2095, !2096, !2098, !2100, !2101, !2103}
!2095 = !DILocalVariable(name: "self", arg: 1, scope: !2091, file: !1927, line: 683, type: !354)
!2096 = !DILocalVariable(name: "half_len", scope: !2097, file: !1927, line: 684, type: !9, align: 8)
!2097 = distinct !DILexicalBlock(scope: !2091, file: !1927, line: 684, column: 9)
!2098 = !DILocalVariable(name: "start", scope: !2099, file: !1927, line: 685, type: !272, align: 8)
!2099 = distinct !DILexicalBlock(scope: !2097, file: !1927, line: 685, column: 9)
!2100 = !DILocalVariable(name: "end", scope: !2099, file: !1927, line: 685, type: !272, align: 8)
!2101 = !DILocalVariable(name: "front_half", scope: !2102, file: !1927, line: 689, type: !354, align: 8)
!2102 = distinct !DILexicalBlock(scope: !2099, file: !1927, line: 689, column: 9)
!2103 = !DILocalVariable(name: "back_half", scope: !2102, file: !1927, line: 689, type: !354, align: 8)
!2104 = !DILocation(line: 683, column: 26, scope: !2091)
!2105 = !DILocation(line: 684, column: 24, scope: !2091)
!2106 = !DILocation(line: 684, column: 13, scope: !2097)
!2107 = !DILocation(line: 685, column: 36, scope: !2097)
!2108 = !DILocation(line: 685, column: 21, scope: !2097)
!2109 = !DILocation(line: 685, column: 21, scope: !2099)
!2110 = !DILocation(line: 685, column: 28, scope: !2097)
!2111 = !DILocation(line: 685, column: 28, scope: !2099)
!2112 = !DILocation(line: 695, column: 21, scope: !2099)
!2113 = !DILocalVariable(name: "self", arg: 1, scope: !2114, file: !267, line: 1098, type: !272)
!2114 = distinct !DISubprogram(name: "sub<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h800c6c69572493b0E", scope: !278, file: !267, line: 1098, type: !279, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2115)
!2115 = !{!2113, !2116}
!2116 = !DILocalVariable(name: "count", arg: 2, scope: !2114, file: !267, line: 1098, type: !9)
!2117 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !2118)
!2118 = distinct !DILocation(line: 696, column: 47, scope: !2099)
!2119 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !2118)
!2120 = !DILocalVariable(name: "self", arg: 1, scope: !2121, file: !2122, line: 1358, type: !218)
!2121 = distinct !DISubprogram(name: "wrapping_neg", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17h972ea4877bb3d029E", scope: !2123, file: !2122, line: 1358, type: !2124, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2126)
!2122 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "7c9d22d8d2e1d9742bccc1dbc079da0e")
!2123 = !DINamespace(name: "{impl#5}", scope: !1027)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!218, !218}
!2126 = !{!2120}
!2127 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !2128)
!2128 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !2118)
!2129 = !DILocalVariable(name: "self", arg: 1, scope: !2130, file: !2122, line: 1183, type: !218)
!2130 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_sub17ha69f0364fec32c5dE", scope: !2123, file: !2122, line: 1183, type: !2131, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !2133)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!218, !218, !218}
!2133 = !{!2129, !2134}
!2134 = !DILocalVariable(name: "rhs", arg: 2, scope: !2130, file: !2122, line: 1183, type: !218)
!2135 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !2136)
!2136 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !2128)
!2137 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !2136)
!2138 = !DILocation(line: 1184, column: 13, scope: !2130, inlinedAt: !2136)
!2139 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2140)
!2140 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !2118)
!2141 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2140)
!2142 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2140)
!2143 = !DILocation(line: 696, column: 21, scope: !2099)
!2144 = !DILocation(line: 694, column: 17, scope: !2099)
!2145 = !DILocation(line: 689, column: 14, scope: !2099)
!2146 = !DILocation(line: 689, column: 14, scope: !2102)
!2147 = !DILocation(line: 689, column: 26, scope: !2099)
!2148 = !DILocation(line: 689, column: 26, scope: !2102)
!2149 = !DILocation(line: 703, column: 9, scope: !2102)
!2150 = !DILocation(line: 722, column: 6, scope: !2091)
!2151 = distinct !DISubprogram(name: "revswap<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7reverse7revswap17h66cc69c3ef79de79E", scope: !2152, file: !1927, line: 706, type: !2153, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2155)
!2152 = !DINamespace(name: "reverse", scope: !1127)
!2153 = !DISubroutineType(types: !2154)
!2154 = !{null, !354, !354, !9}
!2155 = !{!2156, !2157, !2158, !2159, !2161, !2162}
!2156 = !DILocalVariable(name: "a", arg: 1, scope: !2151, file: !1927, line: 706, type: !354)
!2157 = !DILocalVariable(name: "b", arg: 2, scope: !2151, file: !1927, line: 706, type: !354)
!2158 = !DILocalVariable(name: "n", arg: 3, scope: !2151, file: !1927, line: 706, type: !9)
!2159 = !DILocalVariable(name: "a", scope: !2160, file: !1927, line: 714, type: !354, align: 8)
!2160 = distinct !DILexicalBlock(scope: !2151, file: !1927, line: 714, column: 13)
!2161 = !DILocalVariable(name: "b", scope: !2160, file: !1927, line: 714, type: !354, align: 8)
!2162 = !DILocalVariable(name: "i", scope: !2163, file: !1927, line: 716, type: !9, align: 8)
!2163 = distinct !DILexicalBlock(scope: !2160, file: !1927, line: 716, column: 13)
!2164 = !DILocation(line: 706, column: 29, scope: !2151)
!2165 = !DILocation(line: 706, column: 42, scope: !2151)
!2166 = !DILocation(line: 706, column: 55, scope: !2151)
!2167 = !DILocation(line: 716, column: 17, scope: !2163)
!2168 = !DILocation(line: 707, column: 13, scope: !2151)
!2169 = !DILocation(line: 708, column: 13, scope: !2151)
!2170 = !DILocation(line: 707, column: 27, scope: !2151)
!2171 = !DILocation(line: 714, column: 34, scope: !2151)
!2172 = !DILocation(line: 714, column: 32, scope: !2151)
!2173 = !DILocation(line: 714, column: 47, scope: !2151)
!2174 = !DILocation(line: 714, column: 45, scope: !2151)
!2175 = !DILocation(line: 714, column: 26, scope: !2151)
!2176 = !DILocation(line: 714, column: 18, scope: !2151)
!2177 = !DILocation(line: 714, column: 18, scope: !2160)
!2178 = !DILocation(line: 714, column: 21, scope: !2151)
!2179 = !DILocation(line: 714, column: 21, scope: !2160)
!2180 = !DILocation(line: 716, column: 25, scope: !2160)
!2181 = !DILocation(line: 717, column: 13, scope: !2163)
!2182 = !DILocation(line: 708, column: 27, scope: !2151)
!2183 = !DILocation(line: 717, column: 19, scope: !2163)
!2184 = !DILocation(line: 721, column: 10, scope: !2151)
!2185 = !DILocation(line: 718, column: 34, scope: !2163)
!2186 = !DILocation(line: 718, column: 32, scope: !2163)
!2187 = !DILocation(line: 718, column: 27, scope: !2163)
!2188 = !DILocation(line: 718, column: 45, scope: !2163)
!2189 = !DILocation(line: 718, column: 53, scope: !2163)
!2190 = !DILocation(line: 718, column: 43, scope: !2163)
!2191 = !DILocation(line: 718, column: 38, scope: !2163)
!2192 = !DILocation(line: 718, column: 17, scope: !2163)
!2193 = !DILocation(line: 719, column: 17, scope: !2163)
!2194 = distinct !DISubprogram(name: "from_raw_parts_mut<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17ha4273453c60b0721E", scope: !2196, file: !2195, line: 137, type: !2197, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2199)
!2195 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "4e9e8b780584cc248c586456197d9cf5")
!2196 = !DINamespace(name: "raw", scope: !167)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!354, !272, !9}
!2199 = !{!2200, !2201}
!2200 = !DILocalVariable(name: "data", arg: 1, scope: !2194, file: !2195, line: 137, type: !272)
!2201 = !DILocalVariable(name: "len", arg: 2, scope: !2194, file: !2195, line: 137, type: !9)
!2202 = !DILocation(line: 137, column: 47, scope: !2194)
!2203 = !DILocation(line: 137, column: 61, scope: !2194)
!2204 = !DILocation(line: 140, column: 9, scope: !2194)
!2205 = !DILocation(line: 145, column: 15, scope: !2194)
!2206 = !DILocation(line: 147, column: 2, scope: !2194)
!2207 = !DILocalVariable(name: "data", arg: 1, scope: !2208, file: !229, line: 2484, type: !272)
!2208 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17he875a49d99dcc66bE", scope: !2209, file: !229, line: 2484, type: !2210, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2212)
!2209 = !DINamespace(name: "from_raw_parts_mut", scope: !2196)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{null, !272, !9}
!2212 = !{!2207, !2213}
!2213 = !DILocalVariable(name: "len", arg: 2, scope: !2208, file: !229, line: 2484, type: !9)
!2214 = !DILocation(line: 2484, column: 39, scope: !2208, inlinedAt: !2215)
!2215 = distinct !DILocation(line: 140, column: 9, scope: !2194)
!2216 = !DILocation(line: 142, column: 46, scope: !2217, inlinedAt: !2215)
!2217 = !DILexicalBlockFile(scope: !2208, file: !2195, discriminator: 0)
!2218 = !DILocation(line: 143, column: 20, scope: !2217, inlinedAt: !2215)
!2219 = !DILocation(line: 2485, column: 20, scope: !2208, inlinedAt: !2215)
!2220 = !DILocation(line: 2487, column: 21, scope: !2208, inlinedAt: !2215)
!2221 = distinct !DISubprogram(name: "new<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h3d8827bb3ebf5aa2E", scope: !815, file: !2222, line: 84, type: !2062, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2223)
!2222 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "e411b17255ad853c98fae9ed49b09aee")
!2223 = !{!2224, !2225, !2227}
!2224 = !DILocalVariable(name: "slice", arg: 1, scope: !2221, file: !2222, line: 84, type: !323)
!2225 = !DILocalVariable(name: "ptr", scope: !2226, file: !2222, line: 85, type: !208, align: 8)
!2226 = distinct !DILexicalBlock(scope: !2221, file: !2222, line: 85, column: 9)
!2227 = !DILocalVariable(name: "end", scope: !2228, file: !2222, line: 90, type: !208, align: 8)
!2228 = distinct !DILexicalBlock(scope: !2226, file: !2222, line: 90, column: 13)
!2229 = !DILocation(line: 84, column: 23, scope: !2221)
!2230 = !DILocation(line: 90, column: 17, scope: !2228)
!2231 = !DILocalVariable(name: "self", arg: 1, scope: !2232, file: !1927, line: 476, type: !323)
!2232 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hff9c4386f76100d1E", scope: !1127, file: !1927, line: 476, type: !2233, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2235)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!208, !323}
!2235 = !{!2231}
!2236 = !DILocation(line: 476, column: 25, scope: !2232, inlinedAt: !2237)
!2237 = distinct !DILocation(line: 85, column: 19, scope: !2221)
!2238 = !DILocation(line: 85, column: 19, scope: !2221)
!2239 = !DILocation(line: 85, column: 13, scope: !2226)
!2240 = !DILocation(line: 88, column: 21, scope: !2226)
!2241 = !DILocation(line: 88, column: 20, scope: !2226)
!2242 = !DILocation(line: 88, column: 13, scope: !2226)
!2243 = !DILocation(line: 91, column: 20, scope: !2226)
!2244 = !DILocation(line: 915, column: 29, scope: !201, inlinedAt: !2245)
!2245 = distinct !DILocation(line: 91, column: 76, scope: !2226)
!2246 = !DILocation(line: 915, column: 35, scope: !201, inlinedAt: !2245)
!2247 = !DILocation(line: 460, column: 32, scope: !215, inlinedAt: !2248)
!2248 = distinct !DILocation(line: 920, column: 18, scope: !201, inlinedAt: !2245)
!2249 = !DILocation(line: 460, column: 38, scope: !215, inlinedAt: !2248)
!2250 = !DILocation(line: 465, column: 18, scope: !215, inlinedAt: !2248)
!2251 = !DILocation(line: 91, column: 76, scope: !2226)
!2252 = !DILocalVariable(name: "self", arg: 1, scope: !2253, file: !202, line: 1101, type: !208)
!2253 = distinct !DISubprogram(name: "wrapping_byte_add<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$17wrapping_byte_add17h56ed59056914e38eE", scope: !203, file: !202, line: 1101, type: !206, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2254)
!2254 = !{!2252, !2255}
!2255 = !DILocalVariable(name: "count", arg: 2, scope: !2253, file: !202, line: 1101, type: !9)
!2256 = !DILocation(line: 1101, column: 36, scope: !2253, inlinedAt: !2257)
!2257 = distinct !DILocation(line: 91, column: 32, scope: !2226)
!2258 = !DILocation(line: 1101, column: 42, scope: !2253, inlinedAt: !2257)
!2259 = !DILocalVariable(name: "self", arg: 1, scope: !2260, file: !202, line: 58, type: !208)
!2260 = distinct !DISubprogram(name: "cast<bootloader::bootinfo::memory_map::MemoryRegion, u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h3f850d08044ed39aE", scope: !203, file: !202, line: 58, type: !2261, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1243, retainedNodes: !2263)
!2261 = !DISubroutineType(types: !2262)
!2262 = !{!1801, !208}
!2263 = !{!2259}
!2264 = !DILocation(line: 58, column: 26, scope: !2260, inlinedAt: !2265)
!2265 = distinct !DILocation(line: 1102, column: 9, scope: !2253, inlinedAt: !2257)
!2266 = !DILocalVariable(name: "self", arg: 1, scope: !2267, file: !202, line: 1080, type: !1801)
!2267 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h5a664491d0ff9208E", scope: !203, file: !202, line: 1080, type: !2268, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !2270)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!1801, !1801, !9}
!2270 = !{!2266, !2271}
!2271 = !DILocalVariable(name: "count", arg: 2, scope: !2267, file: !202, line: 1080, type: !9)
!2272 = !DILocation(line: 1080, column: 31, scope: !2267, inlinedAt: !2273)
!2273 = distinct !DILocation(line: 1102, column: 9, scope: !2253, inlinedAt: !2257)
!2274 = !DILocation(line: 1080, column: 37, scope: !2267, inlinedAt: !2273)
!2275 = !DILocalVariable(name: "self", arg: 1, scope: !2276, file: !202, line: 540, type: !1801)
!2276 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h40a79691dcca7629E", scope: !203, file: !202, line: 540, type: !2277, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !2279)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{!1801, !1801, !218}
!2279 = !{!2275, !2280}
!2280 = !DILocalVariable(name: "count", arg: 2, scope: !2276, file: !202, line: 540, type: !218)
!2281 = !DILocation(line: 540, column: 34, scope: !2276, inlinedAt: !2282)
!2282 = distinct !DILocation(line: 1084, column: 9, scope: !2267, inlinedAt: !2273)
!2283 = !DILocation(line: 540, column: 40, scope: !2276, inlinedAt: !2282)
!2284 = !DILocation(line: 545, column: 18, scope: !2276, inlinedAt: !2282)
!2285 = !DILocation(line: 1102, column: 9, scope: !2253, inlinedAt: !2257)
!2286 = !DILocation(line: 91, column: 32, scope: !2226)
!2287 = !DILocation(line: 93, column: 25, scope: !2228)
!2288 = !DILocation(line: 93, column: 64, scope: !2228)
!2289 = !DILocation(line: 93, column: 13, scope: !2228)
!2290 = !DILocation(line: 95, column: 6, scope: !2221)
!2291 = distinct !DISubprogram(name: "insert_head<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_head17hddbfe8f747f25a4cE", scope: !1154, file: !2292, line: 88, type: !2293, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !2295)
!2292 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/sort.rs", directory: "", checksumkind: CSK_MD5, checksum: "2a4730537e81537c900c7577877ff201")
!2293 = !DISubroutineType(types: !2294)
!2294 = !{null, !354, !1124}
!2295 = !{!2296, !2297, !2298, !2300, !2302, !2304, !2306}
!2296 = !DILocalVariable(name: "v", arg: 1, scope: !2291, file: !2292, line: 88, type: !354)
!2297 = !DILocalVariable(name: "is_less", arg: 2, scope: !2291, file: !2292, line: 88, type: !1124)
!2298 = !DILocalVariable(name: "arr_ptr", scope: !2299, file: !2292, line: 97, type: !272, align: 8)
!2299 = distinct !DILexicalBlock(scope: !2291, file: !2292, line: 97, column: 13)
!2300 = !DILocalVariable(name: "tmp", scope: !2301, file: !2292, line: 116, type: !645, align: 8)
!2301 = distinct !DILexicalBlock(scope: !2299, file: !2292, line: 116, column: 13)
!2302 = !DILocalVariable(name: "hole", scope: !2303, file: !2292, line: 128, type: !1153, align: 8)
!2303 = distinct !DILexicalBlock(scope: !2301, file: !2292, line: 128, column: 13)
!2304 = !DILocalVariable(name: "iter", scope: !2305, file: !2292, line: 131, type: !175, align: 8)
!2305 = distinct !DILexicalBlock(scope: !2303, file: !2292, line: 131, column: 13)
!2306 = !DILocalVariable(name: "i", scope: !2307, file: !2292, line: 131, type: !9, align: 8)
!2307 = distinct !DILexicalBlock(scope: !2305, file: !2292, line: 131, column: 33)
!2308 = !{!191, !1143}
!2309 = !DILocation(line: 88, column: 29, scope: !2291)
!2310 = !DILocation(line: 88, column: 42, scope: !2291)
!2311 = !DILocation(line: 116, column: 17, scope: !2301)
!2312 = !DILocation(line: 128, column: 17, scope: !2303)
!2313 = !DILocation(line: 131, column: 22, scope: !2305)
!2314 = !DILocation(line: 92, column: 5, scope: !2291)
!2315 = !DILocation(line: 96, column: 20, scope: !2291)
!2316 = !DILocation(line: 96, column: 40, scope: !2291)
!2317 = !DILocation(line: 96, column: 12, scope: !2291)
!2318 = !DILocation(line: 92, column: 19, scope: !2291)
!2319 = !DILocation(line: 141, column: 2, scope: !2291)
!2320 = !DILocation(line: 506, column: 29, scope: !1972, inlinedAt: !2321)
!2321 = distinct !DILocation(line: 97, column: 27, scope: !2291)
!2322 = !DILocation(line: 97, column: 27, scope: !2291)
!2323 = !DILocation(line: 97, column: 17, scope: !2299)
!2324 = !DILocation(line: 116, column: 46, scope: !2299)
!2325 = !DILocation(line: 70, column: 22, scope: !1015, inlinedAt: !2326)
!2326 = distinct !DILocation(line: 116, column: 23, scope: !2299)
!2327 = !DILocation(line: 71, column: 9, scope: !1015, inlinedAt: !2326)
!2328 = !DILocalVariable(name: "self", arg: 1, scope: !2329, file: !1016, line: 153, type: !2333)
!2329 = distinct !DISubprogram(name: "deref<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb3c6226ed6c6d1beE", scope: !2330, file: !1016, line: 153, type: !2331, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2334)
!2330 = !DINamespace(name: "{impl#2}", scope: !646)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{!12, !2333}
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !645, size: 64, align: 64, dwarfAddressSpace: 0)
!2334 = !{!2328}
!2335 = !DILocation(line: 153, column: 14, scope: !2329, inlinedAt: !2336)
!2336 = distinct !DILocation(line: 128, column: 50, scope: !2301)
!2337 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2338)
!2338 = distinct !DILocation(line: 128, column: 62, scope: !2301)
!2339 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2338)
!2340 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2341)
!2341 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2338)
!2342 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2341)
!2343 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2341)
!2344 = !DILocation(line: 128, column: 28, scope: !2301)
!2345 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2346)
!2346 = distinct !DILocation(line: 129, column: 38, scope: !2303)
!2347 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2346)
!2348 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2349)
!2349 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2346)
!2350 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2349)
!2351 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2349)
!2352 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2353)
!2353 = distinct !DILocation(line: 129, column: 54, scope: !2303)
!2354 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2353)
!2355 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2356)
!2356 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2353)
!2357 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2356)
!2358 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2356)
!2359 = !DILocation(line: 129, column: 13, scope: !2303)
!2360 = !DILocation(line: 131, column: 22, scope: !2303)
!2361 = !DILocation(line: 131, column: 13, scope: !2305)
!2362 = !DILocation(line: 139, column: 9, scope: !2301)
!2363 = !DILocation(line: 131, column: 17, scope: !2305)
!2364 = !DILocation(line: 131, column: 17, scope: !2307)
!2365 = !DILocation(line: 132, column: 30, scope: !2307)
!2366 = !DILocation(line: 132, column: 29, scope: !2307)
!2367 = !DILocation(line: 153, column: 14, scope: !2329, inlinedAt: !2368)
!2368 = distinct !DILocation(line: 132, column: 51, scope: !2307)
!2369 = !DILocation(line: 132, column: 21, scope: !2307)
!2370 = !DILocation(line: 132, column: 20, scope: !2307)
!2371 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2372)
!2372 = distinct !DILocation(line: 135, column: 42, scope: !2307)
!2373 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2372)
!2374 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2375)
!2375 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2372)
!2376 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2375)
!2377 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2375)
!2378 = !DILocation(line: 135, column: 70, scope: !2307)
!2379 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2380)
!2380 = distinct !DILocation(line: 135, column: 58, scope: !2307)
!2381 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2380)
!2382 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2383)
!2383 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2380)
!2384 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2383)
!2385 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2383)
!2386 = !DILocation(line: 135, column: 17, scope: !2307)
!2387 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2388)
!2388 = distinct !DILocation(line: 136, column: 29, scope: !2307)
!2389 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2388)
!2390 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2391)
!2391 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2388)
!2392 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2391)
!2393 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2391)
!2394 = !DILocation(line: 136, column: 17, scope: !2307)
!2395 = distinct !DISubprogram(name: "insert_tail<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort11insert_tail17hbfcd2f9f558bf8c4E", scope: !1154, file: !2292, line: 35, type: !2293, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !2396)
!2396 = !{!2397, !2398, !2399, !2401, !2403, !2405, !2407, !2409, !2419, !2421}
!2397 = !DILocalVariable(name: "v", arg: 1, scope: !2395, file: !2292, line: 35, type: !354)
!2398 = !DILocalVariable(name: "is_less", arg: 2, scope: !2395, file: !2292, line: 35, type: !1124)
!2399 = !DILocalVariable(name: "arr_ptr", scope: !2400, file: !2292, line: 41, type: !272, align: 8)
!2400 = distinct !DILexicalBlock(scope: !2395, file: !2292, line: 41, column: 5)
!2401 = !DILocalVariable(name: "i", scope: !2402, file: !2292, line: 42, type: !9, align: 8)
!2402 = distinct !DILexicalBlock(scope: !2400, file: !2292, line: 42, column: 5)
!2403 = !DILocalVariable(name: "i_ptr", scope: !2404, file: !2292, line: 47, type: !272, align: 8)
!2404 = distinct !DILexicalBlock(scope: !2402, file: !2292, line: 47, column: 9)
!2405 = !DILocalVariable(name: "tmp", scope: !2406, file: !2292, line: 56, type: !645, align: 8)
!2406 = distinct !DILexicalBlock(scope: !2404, file: !2292, line: 56, column: 13)
!2407 = !DILocalVariable(name: "hole", scope: !2408, file: !2292, line: 67, type: !1153, align: 8)
!2408 = distinct !DILexicalBlock(scope: !2406, file: !2292, line: 67, column: 13)
!2409 = !DILocalVariable(name: "iter", scope: !2410, file: !2292, line: 71, type: !2411, align: 8)
!2410 = distinct !DILexicalBlock(scope: !2408, file: !2292, line: 71, column: 13)
!2411 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !2412, file: !2, size: 128, align: 64, elements: !2415, templateParams: !2417, identifier: "806d8e6b3b494f74d7573b781c2c7f3e")
!2412 = !DINamespace(name: "rev", scope: !2413)
!2413 = !DINamespace(name: "adapters", scope: !2414)
!2414 = !DINamespace(name: "iter", scope: !143)
!2415 = !{!2416}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2411, file: !2, baseType: !175, size: 128, align: 64)
!2417 = !{!2418}
!2418 = !DITemplateTypeParameter(name: "T", type: !175)
!2419 = !DILocalVariable(name: "j", scope: !2420, file: !2292, line: 71, type: !9, align: 8)
!2420 = distinct !DILexicalBlock(scope: !2410, file: !2292, line: 71, column: 41)
!2421 = !DILocalVariable(name: "j_ptr", scope: !2422, file: !2292, line: 72, type: !272, align: 8)
!2422 = distinct !DILexicalBlock(scope: !2420, file: !2292, line: 72, column: 17)
!2423 = !DILocation(line: 35, column: 29, scope: !2395)
!2424 = !DILocation(line: 35, column: 42, scope: !2395)
!2425 = !DILocation(line: 56, column: 17, scope: !2406)
!2426 = !DILocation(line: 67, column: 17, scope: !2408)
!2427 = !DILocation(line: 71, column: 22, scope: !2410)
!2428 = !DILocation(line: 39, column: 5, scope: !2395)
!2429 = !DILocation(line: 506, column: 29, scope: !1972, inlinedAt: !2430)
!2430 = distinct !DILocation(line: 41, column: 19, scope: !2395)
!2431 = !DILocation(line: 41, column: 19, scope: !2395)
!2432 = !DILocation(line: 41, column: 9, scope: !2400)
!2433 = !DILocation(line: 42, column: 13, scope: !2400)
!2434 = !DILocation(line: 39, column: 19, scope: !2395)
!2435 = !DILocation(line: 42, column: 9, scope: !2402)
!2436 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2437)
!2437 = distinct !DILocation(line: 47, column: 21, scope: !2402)
!2438 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2437)
!2439 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2440)
!2440 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2437)
!2441 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2440)
!2442 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2440)
!2443 = !DILocation(line: 47, column: 21, scope: !2402)
!2444 = !DILocation(line: 47, column: 13, scope: !2404)
!2445 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !2446)
!2446 = distinct !DILocation(line: 52, column: 31, scope: !2404)
!2447 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !2446)
!2448 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !2449)
!2449 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !2446)
!2450 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !2451)
!2451 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !2449)
!2452 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !2451)
!2453 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2454)
!2454 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !2446)
!2455 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2454)
!2456 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2454)
!2457 = !DILocation(line: 52, column: 12, scope: !2404)
!2458 = !DILocation(line: 83, column: 2, scope: !2395)
!2459 = !DILocation(line: 56, column: 46, scope: !2404)
!2460 = !DILocation(line: 70, column: 22, scope: !1015, inlinedAt: !2461)
!2461 = distinct !DILocation(line: 56, column: 23, scope: !2404)
!2462 = !DILocation(line: 71, column: 9, scope: !1015, inlinedAt: !2461)
!2463 = !DILocation(line: 153, column: 14, scope: !2329, inlinedAt: !2464)
!2464 = distinct !DILocation(line: 67, column: 50, scope: !2406)
!2465 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !2466)
!2466 = distinct !DILocation(line: 67, column: 62, scope: !2406)
!2467 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !2466)
!2468 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !2469)
!2469 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !2466)
!2470 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !2471)
!2471 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !2469)
!2472 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !2471)
!2473 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2474)
!2474 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !2466)
!2475 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2474)
!2476 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2474)
!2477 = !DILocation(line: 67, column: 28, scope: !2406)
!2478 = !DILocation(line: 68, column: 38, scope: !2408)
!2479 = !DILocation(line: 68, column: 13, scope: !2408)
!2480 = !DILocation(line: 71, column: 26, scope: !2408)
!2481 = !DILocation(line: 71, column: 22, scope: !2408)
!2482 = !DILocation(line: 71, column: 13, scope: !2410)
!2483 = !DILocation(line: 81, column: 9, scope: !2406)
!2484 = !DILocation(line: 71, column: 17, scope: !2410)
!2485 = !DILocation(line: 71, column: 17, scope: !2420)
!2486 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2487)
!2487 = distinct !DILocation(line: 72, column: 29, scope: !2420)
!2488 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2487)
!2489 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2490)
!2490 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2487)
!2491 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2490)
!2492 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2490)
!2493 = !DILocation(line: 72, column: 29, scope: !2420)
!2494 = !DILocation(line: 72, column: 21, scope: !2422)
!2495 = !DILocation(line: 153, column: 14, scope: !2329, inlinedAt: !2496)
!2496 = distinct !DILocation(line: 73, column: 30, scope: !2422)
!2497 = !DILocation(line: 73, column: 21, scope: !2422)
!2498 = !DILocation(line: 73, column: 20, scope: !2422)
!2499 = !DILocation(line: 77, column: 49, scope: !2422)
!2500 = !DILocation(line: 77, column: 17, scope: !2422)
!2501 = !DILocation(line: 78, column: 17, scope: !2422)
!2502 = distinct !DISubprogram(name: "choose_pivot<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot17h4482e449327c800fE", scope: !1154, file: !2292, line: 722, type: !2503, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !2505)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{!1042, !354, !1124}
!2505 = !{!2506, !2507, !2508, !2510, !2512, !2514, !2516, !2518, !2527, !2533}
!2506 = !DILocalVariable(name: "v", arg: 1, scope: !2502, file: !2292, line: 722, type: !354)
!2507 = !DILocalVariable(name: "is_less", arg: 2, scope: !2502, file: !2292, line: 722, type: !1124)
!2508 = !DILocalVariable(name: "len", scope: !2509, file: !2292, line: 732, type: !9, align: 8)
!2509 = distinct !DILexicalBlock(scope: !2502, file: !2292, line: 732, column: 5)
!2510 = !DILocalVariable(name: "a", scope: !2511, file: !2292, line: 735, type: !9, align: 8)
!2511 = distinct !DILexicalBlock(scope: !2509, file: !2292, line: 735, column: 5)
!2512 = !DILocalVariable(name: "b", scope: !2513, file: !2292, line: 736, type: !9, align: 8)
!2513 = distinct !DILexicalBlock(scope: !2511, file: !2292, line: 736, column: 5)
!2514 = !DILocalVariable(name: "c", scope: !2515, file: !2292, line: 737, type: !9, align: 8)
!2515 = distinct !DILexicalBlock(scope: !2513, file: !2292, line: 737, column: 5)
!2516 = !DILocalVariable(name: "swaps", scope: !2517, file: !2292, line: 740, type: !9, align: 8)
!2517 = distinct !DILexicalBlock(scope: !2515, file: !2292, line: 740, column: 5)
!2518 = !DILocalVariable(name: "sort2", scope: !2519, file: !2292, line: 750, type: !2520, align: 8)
!2519 = distinct !DILexicalBlock(scope: !2517, file: !2292, line: 750, column: 9)
!2520 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2521, file: !2, size: 256, align: 64, elements: !2522, templateParams: !24, identifier: "7a13e6c89c1b4634618fbb4f8c8595d5")
!2521 = !DINamespace(name: "choose_pivot", scope: !1154)
!2522 = !{!2523, !2524, !2525}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !2520, file: !2, baseType: !1124, size: 64, align: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__v", scope: !2520, file: !2, baseType: !323, size: 128, align: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__swaps", scope: !2520, file: !2, baseType: !2526, size: 64, align: 64, offset: 192)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2527 = !DILocalVariable(name: "sort3", scope: !2528, file: !2292, line: 758, type: !2529, align: 8)
!2528 = distinct !DILexicalBlock(scope: !2519, file: !2292, line: 758, column: 9)
!2529 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2521, file: !2, size: 64, align: 64, elements: !2530, templateParams: !24, identifier: "2a309782c3fb6c618ff39cb3d5cddc6c")
!2530 = !{!2531}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort2", scope: !2529, file: !2, baseType: !2532, size: 64, align: 64)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2520, size: 64, align: 64, dwarfAddressSpace: 0)
!2533 = !DILocalVariable(name: "sort_adjacent", scope: !2534, file: !2292, line: 766, type: !2535, align: 8)
!2534 = distinct !DILexicalBlock(scope: !2528, file: !2292, line: 766, column: 13)
!2535 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !2521, file: !2, size: 64, align: 64, elements: !2536, templateParams: !24, identifier: "71ca13f279826d84311e57fc4670663d")
!2536 = !{!2537}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__sort3", scope: !2535, file: !2, baseType: !2538, size: 64, align: 64)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2529, size: 64, align: 64, dwarfAddressSpace: 0)
!2539 = !DILocation(line: 722, column: 23, scope: !2502)
!2540 = !DILocation(line: 722, column: 36, scope: !2502)
!2541 = !DILocation(line: 735, column: 9, scope: !2511)
!2542 = !DILocation(line: 736, column: 9, scope: !2513)
!2543 = !DILocation(line: 737, column: 9, scope: !2515)
!2544 = !DILocation(line: 740, column: 9, scope: !2517)
!2545 = !DILocation(line: 750, column: 13, scope: !2519)
!2546 = !DILocation(line: 758, column: 13, scope: !2528)
!2547 = !DILocation(line: 766, column: 17, scope: !2534)
!2548 = !DILocation(line: 732, column: 15, scope: !2502)
!2549 = !DILocation(line: 732, column: 9, scope: !2509)
!2550 = !DILocation(line: 735, column: 17, scope: !2509)
!2551 = !DILocation(line: 736, column: 17, scope: !2511)
!2552 = !DILocation(line: 737, column: 17, scope: !2513)
!2553 = !DILocation(line: 740, column: 21, scope: !2515)
!2554 = !DILocation(line: 742, column: 8, scope: !2517)
!2555 = !DILocation(line: 781, column: 8, scope: !2517)
!2556 = !DILocation(line: 750, column: 25, scope: !2517)
!2557 = !DILocation(line: 758, column: 25, scope: !2519)
!2558 = !DILocation(line: 764, column: 12, scope: !2528)
!2559 = !DILocation(line: 778, column: 9, scope: !2528)
!2560 = !DILocation(line: 766, column: 37, scope: !2528)
!2561 = !DILocation(line: 772, column: 13, scope: !2534)
!2562 = !DILocation(line: 773, column: 13, scope: !2534)
!2563 = !DILocation(line: 774, column: 13, scope: !2534)
!2564 = !DILocation(line: 786, column: 9, scope: !2517)
!2565 = !DILocation(line: 787, column: 10, scope: !2517)
!2566 = !DILocation(line: 782, column: 10, scope: !2517)
!2567 = !DILocation(line: 782, column: 13, scope: !2517)
!2568 = !DILocation(line: 782, column: 9, scope: !2517)
!2569 = !DILocation(line: 781, column: 5, scope: !2517)
!2570 = !DILocation(line: 789, column: 2, scope: !2502)
!2571 = !DILocation(line: 787, column: 20, scope: !2517)
!2572 = !DILocation(line: 787, column: 9, scope: !2517)
!2573 = distinct !DISubprogram(name: "{closure#1}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h3cb0313f4eec197aE", scope: !2521, file: !2292, line: 758, type: !2574, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !2576)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{null, !2538, !2526, !2526, !2526}
!2576 = !{!2577, !2578, !2579, !2580}
!2577 = !DILocalVariable(name: "a", arg: 2, scope: !2573, file: !2292, line: 758, type: !2526)
!2578 = !DILocalVariable(name: "b", arg: 3, scope: !2573, file: !2292, line: 758, type: !2526)
!2579 = !DILocalVariable(name: "c", arg: 4, scope: !2573, file: !2292, line: 758, type: !2526)
!2580 = !DILocalVariable(name: "sort2", scope: !2573, file: !2292, line: 750, type: !2520, align: 8)
!2581 = !DILocation(line: 750, column: 17, scope: !2573)
!2582 = !DILocation(line: 758, column: 26, scope: !2573)
!2583 = !DILocation(line: 758, column: 41, scope: !2573)
!2584 = !DILocation(line: 758, column: 56, scope: !2573)
!2585 = !DILocation(line: 759, column: 13, scope: !2573)
!2586 = !DILocation(line: 760, column: 13, scope: !2573)
!2587 = !DILocation(line: 761, column: 13, scope: !2573)
!2588 = !DILocation(line: 762, column: 10, scope: !2573)
!2589 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17h9a0dde2ace4ef81dE", scope: !2521, file: !2292, line: 750, type: !2590, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !2592)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{null, !2532, !2526, !2526}
!2592 = !{!2593, !2594, !2595, !2596, !2597}
!2593 = !DILocalVariable(name: "a", arg: 2, scope: !2589, file: !2292, line: 750, type: !2526)
!2594 = !DILocalVariable(name: "b", arg: 3, scope: !2589, file: !2292, line: 750, type: !2526)
!2595 = !DILocalVariable(name: "is_less", scope: !2589, file: !2292, line: 722, type: !1125, align: 8)
!2596 = !DILocalVariable(name: "v", scope: !2589, file: !2292, line: 722, type: !13, align: 8)
!2597 = !DILocalVariable(name: "swaps", scope: !2589, file: !2292, line: 740, type: !9, align: 8)
!2598 = !DILocation(line: 722, column: 36, scope: !2589)
!2599 = !DILocation(line: 722, column: 23, scope: !2589)
!2600 = !DILocation(line: 740, column: 13, scope: !2589)
!2601 = !DILocation(line: 750, column: 26, scope: !2589)
!2602 = !DILocation(line: 750, column: 41, scope: !2589)
!2603 = !DILocation(line: 751, column: 16, scope: !2589)
!2604 = !DILocation(line: 751, column: 24, scope: !2589)
!2605 = !DILocation(line: 751, column: 40, scope: !2589)
!2606 = !DILocation(line: 751, column: 45, scope: !2589)
!2607 = !DILocation(line: 751, column: 61, scope: !2589)
!2608 = !DILocation(line: 755, column: 10, scope: !2589)
!2609 = !DILocation(line: 752, column: 17, scope: !2589)
!2610 = !DILocation(line: 753, column: 17, scope: !2589)
!2611 = !DILocation(line: 751, column: 13, scope: !2589)
!2612 = distinct !DISubprogram(name: "{closure#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort12choose_pivot28_$u7b$$u7b$closure$u7d$$u7d$17hb71a1ca753657207E", scope: !2521, file: !2292, line: 766, type: !2613, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !2616)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{null, !2615, !2526}
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::choose_pivot::{closure_env#2}<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !2535, size: 64, align: 64, dwarfAddressSpace: 0)
!2616 = !{!2617, !2618, !2619}
!2617 = !DILocalVariable(name: "a", arg: 2, scope: !2612, file: !2292, line: 766, type: !2526)
!2618 = !DILocalVariable(name: "sort3", scope: !2612, file: !2292, line: 758, type: !2529, align: 8)
!2619 = !DILocalVariable(name: "tmp", scope: !2620, file: !2292, line: 767, type: !9, align: 8)
!2620 = distinct !DILexicalBlock(scope: !2612, file: !2292, line: 767, column: 17)
!2621 = !DILocation(line: 758, column: 17, scope: !2612)
!2622 = !DILocation(line: 766, column: 38, scope: !2612)
!2623 = !DILocation(line: 767, column: 27, scope: !2612)
!2624 = !DILocation(line: 767, column: 21, scope: !2620)
!2625 = !DILocation(line: 768, column: 17, scope: !2620)
!2626 = !DILocation(line: 768, column: 28, scope: !2620)
!2627 = !DILocation(line: 768, column: 47, scope: !2620)
!2628 = !DILocation(line: 769, column: 14, scope: !2612)
!2629 = distinct !DISubprogram(name: "break_patterns<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns17h8ecba329f837a7b4E", scope: !1154, file: !2292, line: 673, type: !2092, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2630)
!2630 = !{!2631, !2632, !2634, !2636, !2642, !2644, !2646, !2648, !2650}
!2631 = !DILocalVariable(name: "v", arg: 1, scope: !2629, file: !2292, line: 673, type: !354)
!2632 = !DILocalVariable(name: "len", scope: !2633, file: !2292, line: 674, type: !9, align: 8)
!2633 = distinct !DILexicalBlock(scope: !2629, file: !2292, line: 674, column: 5)
!2634 = !DILocalVariable(name: "seed", scope: !2635, file: !2292, line: 676, type: !9, align: 8)
!2635 = distinct !DILexicalBlock(scope: !2633, file: !2292, line: 676, column: 9)
!2636 = !DILocalVariable(name: "gen_usize", scope: !2637, file: !2292, line: 677, type: !2638, align: 8)
!2637 = distinct !DILexicalBlock(scope: !2635, file: !2292, line: 677, column: 9)
!2638 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", scope: !2639, file: !2, size: 64, align: 64, elements: !2640, templateParams: !24, identifier: "eee1f2d0884f4f3f13e5f9083e54c4dc")
!2639 = !DINamespace(name: "break_patterns", scope: !1154)
!2640 = !{!2641}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__seed", scope: !2638, file: !2, baseType: !2526, size: 64, align: 64)
!2642 = !DILocalVariable(name: "modulus", scope: !2643, file: !2292, line: 698, type: !9, align: 8)
!2643 = distinct !DILexicalBlock(scope: !2637, file: !2292, line: 698, column: 9)
!2644 = !DILocalVariable(name: "pos", scope: !2645, file: !2292, line: 701, type: !9, align: 8)
!2645 = distinct !DILexicalBlock(scope: !2643, file: !2292, line: 701, column: 9)
!2646 = !DILocalVariable(name: "iter", scope: !2647, file: !2292, line: 703, type: !175, align: 8)
!2647 = distinct !DILexicalBlock(scope: !2645, file: !2292, line: 703, column: 9)
!2648 = !DILocalVariable(name: "i", scope: !2649, file: !2292, line: 703, type: !9, align: 8)
!2649 = distinct !DILexicalBlock(scope: !2647, file: !2292, line: 703, column: 23)
!2650 = !DILocalVariable(name: "other", scope: !2651, file: !2292, line: 707, type: !9, align: 8)
!2651 = distinct !DILexicalBlock(scope: !2649, file: !2292, line: 707, column: 13)
!2652 = !DILocation(line: 673, column: 22, scope: !2629)
!2653 = !DILocation(line: 676, column: 13, scope: !2635)
!2654 = !DILocation(line: 677, column: 13, scope: !2637)
!2655 = !DILocation(line: 703, column: 18, scope: !2647)
!2656 = !DILocation(line: 707, column: 17, scope: !2651)
!2657 = !DILocation(line: 674, column: 15, scope: !2629)
!2658 = !DILocation(line: 674, column: 9, scope: !2633)
!2659 = !DILocation(line: 675, column: 8, scope: !2633)
!2660 = !DILocation(line: 717, column: 2, scope: !2629)
!2661 = !DILocation(line: 676, column: 24, scope: !2633)
!2662 = !DILocation(line: 677, column: 29, scope: !2635)
!2663 = !DILocation(line: 698, column: 23, scope: !2637)
!2664 = !DILocation(line: 698, column: 13, scope: !2643)
!2665 = !DILocation(line: 701, column: 19, scope: !2643)
!2666 = !DILocation(line: 701, column: 13, scope: !2645)
!2667 = !DILocation(line: 703, column: 18, scope: !2645)
!2668 = !DILocation(line: 703, column: 9, scope: !2647)
!2669 = !DILocation(line: 703, column: 13, scope: !2647)
!2670 = !DILocation(line: 703, column: 13, scope: !2649)
!2671 = !DILocation(line: 707, column: 29, scope: !2649)
!2672 = !DILocation(line: 707, column: 43, scope: !2649)
!2673 = !DILocation(line: 710, column: 16, scope: !2651)
!2674 = !DILocation(line: 714, column: 20, scope: !2651)
!2675 = !DILocation(line: 711, column: 17, scope: !2651)
!2676 = !DILocation(line: 710, column: 13, scope: !2651)
!2677 = !DILocation(line: 714, column: 33, scope: !2651)
!2678 = !DILocation(line: 714, column: 13, scope: !2651)
!2679 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort14break_patterns28_$u7b$$u7b$closure$u7d$$u7d$17h64e1c413c9acb3ebE", scope: !2639, file: !2292, line: 677, type: !2680, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !2683)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!9, !2682}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::break_patterns::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !2638, size: 64, align: 64, dwarfAddressSpace: 0)
!2683 = !{!2684, !2685, !2687}
!2684 = !DILocalVariable(name: "seed", scope: !2679, file: !2292, line: 676, type: !9, align: 8)
!2685 = !DILocalVariable(name: "r", scope: !2686, file: !2292, line: 680, type: !27, align: 4)
!2686 = distinct !DILexicalBlock(scope: !2679, file: !2292, line: 680, column: 17)
!2687 = !DILocalVariable(name: "r", scope: !2688, file: !2292, line: 687, type: !22, align: 8)
!2688 = distinct !DILexicalBlock(scope: !2679, file: !2292, line: 687, column: 17)
!2689 = !DILocation(line: 676, column: 17, scope: !2679)
!2690 = !DILocation(line: 680, column: 21, scope: !2686)
!2691 = !DILocation(line: 687, column: 21, scope: !2688)
!2692 = !DILocation(line: 679, column: 16, scope: !2679)
!2693 = !DILocation(line: 687, column: 29, scope: !2679)
!2694 = !DILocation(line: 688, column: 22, scope: !2688)
!2695 = !DILocation(line: 688, column: 17, scope: !2688)
!2696 = !DILocation(line: 689, column: 22, scope: !2688)
!2697 = !DILocation(line: 689, column: 17, scope: !2688)
!2698 = !DILocation(line: 690, column: 22, scope: !2688)
!2699 = !DILocation(line: 690, column: 17, scope: !2688)
!2700 = !DILocation(line: 691, column: 24, scope: !2688)
!2701 = !DILocation(line: 691, column: 17, scope: !2688)
!2702 = !DILocation(line: 692, column: 17, scope: !2688)
!2703 = !DILocation(line: 679, column: 13, scope: !2679)
!2704 = !DILocation(line: 680, column: 29, scope: !2679)
!2705 = !DILocation(line: 681, column: 22, scope: !2686)
!2706 = !DILocation(line: 681, column: 17, scope: !2686)
!2707 = !DILocation(line: 682, column: 22, scope: !2686)
!2708 = !DILocation(line: 682, column: 17, scope: !2686)
!2709 = !DILocation(line: 683, column: 22, scope: !2686)
!2710 = !DILocation(line: 683, column: 17, scope: !2686)
!2711 = !DILocation(line: 684, column: 24, scope: !2686)
!2712 = !DILocation(line: 684, column: 17, scope: !2686)
!2713 = !DILocation(line: 685, column: 17, scope: !2686)
!2714 = !DILocation(line: 694, column: 10, scope: !2679)
!2715 = distinct !DISubprogram(name: "partition_equal<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort15partition_equal17h9d9f9d4265ea5a6dE", scope: !1154, file: !2292, line: 615, type: !2716, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !2718)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!9, !354, !9, !1124}
!2718 = !{!2719, !2720, !2721, !2722, !2724, !2725, !2727, !2729, !2731, !2733, !2735, !2737}
!2719 = !DILocalVariable(name: "v", arg: 1, scope: !2715, file: !2292, line: 615, type: !354)
!2720 = !DILocalVariable(name: "pivot", arg: 2, scope: !2715, file: !2292, line: 615, type: !9)
!2721 = !DILocalVariable(name: "is_less", arg: 3, scope: !2715, file: !2292, line: 615, type: !1124)
!2722 = !DILocalVariable(name: "pivot", scope: !2723, file: !2292, line: 621, type: !354, align: 8)
!2723 = distinct !DILexicalBlock(scope: !2715, file: !2292, line: 621, column: 5)
!2724 = !DILocalVariable(name: "v", scope: !2723, file: !2292, line: 621, type: !354, align: 8)
!2725 = !DILocalVariable(name: "pivot", scope: !2726, file: !2292, line: 622, type: !979, align: 8)
!2726 = distinct !DILexicalBlock(scope: !2723, file: !2292, line: 622, column: 5)
!2727 = !DILocalVariable(name: "tmp", scope: !2728, file: !2292, line: 627, type: !645, align: 8)
!2728 = distinct !DILexicalBlock(scope: !2726, file: !2292, line: 627, column: 5)
!2729 = !DILocalVariable(name: "_pivot_guard", scope: !2730, file: !2292, line: 628, type: !1153, align: 8)
!2730 = distinct !DILexicalBlock(scope: !2728, file: !2292, line: 628, column: 5)
!2731 = !DILocalVariable(name: "pivot", scope: !2732, file: !2292, line: 629, type: !12, align: 8)
!2732 = distinct !DILexicalBlock(scope: !2730, file: !2292, line: 629, column: 5)
!2733 = !DILocalVariable(name: "l", scope: !2734, file: !2292, line: 632, type: !9, align: 8)
!2734 = distinct !DILexicalBlock(scope: !2732, file: !2292, line: 632, column: 5)
!2735 = !DILocalVariable(name: "r", scope: !2736, file: !2292, line: 633, type: !9, align: 8)
!2736 = distinct !DILexicalBlock(scope: !2734, file: !2292, line: 633, column: 5)
!2737 = !DILocalVariable(name: "ptr", scope: !2738, file: !2292, line: 657, type: !272, align: 8)
!2738 = distinct !DILexicalBlock(scope: !2736, file: !2292, line: 657, column: 13)
!2739 = !DILocation(line: 615, column: 26, scope: !2715)
!2740 = !DILocation(line: 615, column: 39, scope: !2715)
!2741 = !DILocation(line: 615, column: 53, scope: !2715)
!2742 = !DILocation(line: 627, column: 9, scope: !2728)
!2743 = !DILocation(line: 628, column: 9, scope: !2730)
!2744 = !DILocation(line: 632, column: 9, scope: !2734)
!2745 = !DILocation(line: 633, column: 9, scope: !2736)
!2746 = !DILocation(line: 620, column: 5, scope: !2715)
!2747 = !DILocation(line: 621, column: 22, scope: !2715)
!2748 = !DILocation(line: 621, column: 10, scope: !2715)
!2749 = !DILocation(line: 621, column: 10, scope: !2723)
!2750 = !DILocation(line: 621, column: 17, scope: !2715)
!2751 = !DILocation(line: 621, column: 17, scope: !2723)
!2752 = !DILocation(line: 622, column: 22, scope: !2723)
!2753 = !DILocation(line: 622, column: 17, scope: !2723)
!2754 = !DILocation(line: 622, column: 9, scope: !2726)
!2755 = !DILocation(line: 627, column: 47, scope: !2726)
!2756 = !DILocation(line: 70, column: 22, scope: !1015, inlinedAt: !2757)
!2757 = distinct !DILocation(line: 627, column: 15, scope: !2726)
!2758 = !DILocation(line: 71, column: 9, scope: !1015, inlinedAt: !2757)
!2759 = !DILocation(line: 153, column: 14, scope: !2329, inlinedAt: !2760)
!2760 = distinct !DILocation(line: 628, column: 46, scope: !2728)
!2761 = !DILocation(line: 628, column: 24, scope: !2728)
!2762 = !DILocation(line: 153, column: 14, scope: !2329, inlinedAt: !2763)
!2763 = distinct !DILocation(line: 629, column: 18, scope: !2730)
!2764 = !DILocation(line: 629, column: 17, scope: !2730)
!2765 = !DILocation(line: 629, column: 9, scope: !2732)
!2766 = !DILocation(line: 632, column: 17, scope: !2732)
!2767 = !DILocation(line: 633, column: 17, scope: !2734)
!2768 = !DILocation(line: 634, column: 5, scope: !2736)
!2769 = !DILocation(line: 641, column: 19, scope: !2736)
!2770 = !DILocation(line: 641, column: 23, scope: !2736)
!2771 = !DILocation(line: 641, column: 60, scope: !2736)
!2772 = !DILocation(line: 641, column: 44, scope: !2736)
!2773 = !DILocation(line: 641, column: 29, scope: !2736)
!2774 = !DILocation(line: 641, column: 28, scope: !2736)
!2775 = !DILocation(line: 646, column: 19, scope: !2736)
!2776 = !DILocation(line: 646, column: 23, scope: !2736)
!2777 = !DILocation(line: 642, column: 17, scope: !2736)
!2778 = !DILocation(line: 641, column: 13, scope: !2736)
!2779 = !DILocation(line: 646, column: 59, scope: !2736)
!2780 = !DILocation(line: 646, column: 43, scope: !2736)
!2781 = !DILocation(line: 646, column: 28, scope: !2736)
!2782 = !DILocation(line: 651, column: 16, scope: !2736)
!2783 = !DILocation(line: 651, column: 21, scope: !2736)
!2784 = !DILocation(line: 647, column: 17, scope: !2736)
!2785 = !DILocation(line: 646, column: 13, scope: !2736)
!2786 = !DILocation(line: 656, column: 13, scope: !2736)
!2787 = !DILocation(line: 664, column: 5, scope: !2736)
!2788 = !DILocation(line: 668, column: 1, scope: !2728)
!2789 = !DILocation(line: 668, column: 2, scope: !2715)
!2790 = !DILocation(line: 506, column: 29, scope: !1972, inlinedAt: !2791)
!2791 = distinct !DILocation(line: 657, column: 23, scope: !2736)
!2792 = !DILocation(line: 657, column: 23, scope: !2736)
!2793 = !DILocation(line: 657, column: 17, scope: !2738)
!2794 = !DILocation(line: 658, column: 31, scope: !2738)
!2795 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2796)
!2796 = distinct !DILocation(line: 658, column: 23, scope: !2738)
!2797 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2796)
!2798 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2799)
!2799 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2796)
!2800 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2799)
!2801 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2799)
!2802 = !DILocation(line: 658, column: 43, scope: !2738)
!2803 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2804)
!2804 = distinct !DILocation(line: 658, column: 35, scope: !2738)
!2805 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2804)
!2806 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2807)
!2807 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2804)
!2808 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2807)
!2809 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2807)
!2810 = !DILocation(line: 658, column: 13, scope: !2738)
!2811 = !DILocation(line: 659, column: 13, scope: !2738)
!2812 = distinct !DISubprogram(name: "partition_in_blocks<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort19partition_in_blocks17h407c8ed58cf84055E", scope: !1154, file: !2292, line: 302, type: !2813, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !2815)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!9, !354, !12, !1124}
!2815 = !{!2816, !2817, !2818, !2819, !2821, !2823, !2825, !2827, !2839, !2841, !2843, !2845, !2847, !2849, !2851, !2853, !2855, !2857, !2859, !2861, !2863, !2865, !2867, !2869, !2871, !2876, !2877, !2880, !2883, !2884}
!2816 = !DILocalVariable(name: "v", arg: 1, scope: !2812, file: !2292, line: 302, type: !354)
!2817 = !DILocalVariable(name: "pivot", arg: 2, scope: !2812, file: !2292, line: 302, type: !12)
!2818 = !DILocalVariable(name: "is_less", arg: 3, scope: !2812, file: !2292, line: 302, type: !1124)
!2819 = !DILocalVariable(name: "l", scope: !2820, file: !2292, line: 323, type: !272, align: 8)
!2820 = distinct !DILexicalBlock(scope: !2812, file: !2292, line: 323, column: 5)
!2821 = !DILocalVariable(name: "block_l", scope: !2822, file: !2292, line: 324, type: !9, align: 8)
!2822 = distinct !DILexicalBlock(scope: !2820, file: !2292, line: 324, column: 5)
!2823 = !DILocalVariable(name: "start_l", scope: !2824, file: !2292, line: 325, type: !1178, align: 8)
!2824 = distinct !DILexicalBlock(scope: !2822, file: !2292, line: 325, column: 5)
!2825 = !DILocalVariable(name: "end_l", scope: !2826, file: !2292, line: 326, type: !1178, align: 8)
!2826 = distinct !DILexicalBlock(scope: !2824, file: !2292, line: 326, column: 5)
!2827 = !DILocalVariable(name: "offsets_l", scope: !2828, file: !2292, line: 327, type: !2829, align: 1)
!2828 = distinct !DILexicalBlock(scope: !2826, file: !2292, line: 327, column: 5)
!2829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2830, size: 1024, align: 8, elements: !2837)
!2830 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !640, file: !2, size: 8, align: 8, elements: !2831, templateParams: !1614, identifier: "c2b6b430daea55c1f18c1ee6e9c8497")
!2831 = !{!2832, !2833}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2830, file: !2, baseType: !7, align: 8)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2830, file: !2, baseType: !2834, size: 8, align: 8)
!2834 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !646, file: !2, size: 8, align: 8, elements: !2835, templateParams: !1614, identifier: "9ec356655a374a7f97b9d9c2f5c77c8f")
!2835 = !{!2836}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2834, file: !2, baseType: !123, size: 8, align: 8)
!2837 = !{!2838}
!2838 = !DISubrange(count: 128, lowerBound: 0)
!2839 = !DILocalVariable(name: "r", scope: !2840, file: !2292, line: 331, type: !272, align: 8)
!2840 = distinct !DILexicalBlock(scope: !2828, file: !2292, line: 331, column: 5)
!2841 = !DILocalVariable(name: "block_r", scope: !2842, file: !2292, line: 332, type: !9, align: 8)
!2842 = distinct !DILexicalBlock(scope: !2840, file: !2292, line: 332, column: 5)
!2843 = !DILocalVariable(name: "start_r", scope: !2844, file: !2292, line: 333, type: !1178, align: 8)
!2844 = distinct !DILexicalBlock(scope: !2842, file: !2292, line: 333, column: 5)
!2845 = !DILocalVariable(name: "end_r", scope: !2846, file: !2292, line: 334, type: !1178, align: 8)
!2846 = distinct !DILexicalBlock(scope: !2844, file: !2292, line: 334, column: 5)
!2847 = !DILocalVariable(name: "offsets_r", scope: !2848, file: !2292, line: 335, type: !2829, align: 1)
!2848 = distinct !DILexicalBlock(scope: !2846, file: !2292, line: 335, column: 5)
!2849 = !DILocalVariable(name: "is_done", scope: !2850, file: !2292, line: 351, type: !421, align: 1)
!2850 = distinct !DILexicalBlock(scope: !2848, file: !2292, line: 351, column: 9)
!2851 = !DILocalVariable(name: "rem", scope: !2852, file: !2292, line: 355, type: !9, align: 8)
!2852 = distinct !DILexicalBlock(scope: !2850, file: !2292, line: 355, column: 13)
!2853 = !DILocalVariable(name: "elem", scope: !2854, file: !2292, line: 381, type: !272, align: 8)
!2854 = distinct !DILexicalBlock(scope: !2850, file: !2292, line: 381, column: 13)
!2855 = !DILocalVariable(name: "iter", scope: !2856, file: !2292, line: 383, type: !175, align: 8)
!2856 = distinct !DILexicalBlock(scope: !2854, file: !2292, line: 383, column: 13)
!2857 = !DILocalVariable(name: "i", scope: !2858, file: !2292, line: 383, type: !9, align: 8)
!2858 = distinct !DILexicalBlock(scope: !2856, file: !2292, line: 383, column: 33)
!2859 = !DILocalVariable(name: "elem", scope: !2860, file: !2292, line: 407, type: !272, align: 8)
!2860 = distinct !DILexicalBlock(scope: !2850, file: !2292, line: 407, column: 13)
!2861 = !DILocalVariable(name: "iter", scope: !2862, file: !2292, line: 409, type: !175, align: 8)
!2862 = distinct !DILexicalBlock(scope: !2860, file: !2292, line: 409, column: 13)
!2863 = !DILocalVariable(name: "i", scope: !2864, file: !2292, line: 409, type: !9, align: 8)
!2864 = distinct !DILexicalBlock(scope: !2862, file: !2292, line: 409, column: 33)
!2865 = !DILocalVariable(name: "count", scope: !2866, file: !2292, line: 431, type: !9, align: 8)
!2866 = distinct !DILexicalBlock(scope: !2850, file: !2292, line: 431, column: 9)
!2867 = !DILocalVariable(name: "tmp", scope: !2868, file: !2292, line: 465, type: !13, align: 8)
!2868 = distinct !DILexicalBlock(scope: !2866, file: !2292, line: 465, column: 17)
!2869 = !DILocalVariable(name: "iter", scope: !2870, file: !2292, line: 468, type: !175, align: 8)
!2870 = distinct !DILexicalBlock(scope: !2868, file: !2292, line: 468, column: 17)
!2871 = !DILocalVariable(name: "left_val", scope: !2872, file: !2292, line: 514, type: !2875, align: 8)
!2872 = !DILexicalBlockFile(scope: !2873, file: !2292, discriminator: 0)
!2873 = distinct !DILexicalBlock(scope: !2848, file: !2874, line: 39, column: 13)
!2874 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "91316768fcef075409117716556d21a0")
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2876 = !DILocalVariable(name: "right_val", scope: !2872, file: !2292, line: 514, type: !2875, align: 8)
!2877 = !DILocalVariable(name: "kind", scope: !2878, file: !2292, line: 514, type: !156, align: 1)
!2878 = !DILexicalBlockFile(scope: !2879, file: !2292, discriminator: 0)
!2879 = distinct !DILexicalBlock(scope: !2873, file: !2874, line: 41, column: 21)
!2880 = !DILocalVariable(name: "left_val", scope: !2881, file: !2292, line: 537, type: !2875, align: 8)
!2881 = !DILexicalBlockFile(scope: !2882, file: !2292, discriminator: 0)
!2882 = distinct !DILexicalBlock(scope: !2848, file: !2874, line: 39, column: 13)
!2883 = !DILocalVariable(name: "right_val", scope: !2881, file: !2292, line: 537, type: !2875, align: 8)
!2884 = !DILocalVariable(name: "kind", scope: !2885, file: !2292, line: 537, type: !156, align: 1)
!2885 = !DILexicalBlockFile(scope: !2886, file: !2292, discriminator: 0)
!2886 = distinct !DILexicalBlock(scope: !2882, file: !2874, line: 41, column: 21)
!2887 = !DILocation(line: 302, column: 30, scope: !2812)
!2888 = !DILocation(line: 302, column: 43, scope: !2812)
!2889 = !DILocation(line: 302, column: 54, scope: !2812)
!2890 = !DILocation(line: 323, column: 9, scope: !2820)
!2891 = !DILocation(line: 324, column: 9, scope: !2822)
!2892 = !DILocation(line: 325, column: 9, scope: !2824)
!2893 = !DILocation(line: 326, column: 9, scope: !2826)
!2894 = !DILocation(line: 327, column: 9, scope: !2828)
!2895 = !DILocation(line: 331, column: 9, scope: !2840)
!2896 = !DILocation(line: 332, column: 9, scope: !2842)
!2897 = !DILocation(line: 333, column: 9, scope: !2844)
!2898 = !DILocation(line: 334, column: 9, scope: !2846)
!2899 = !DILocation(line: 335, column: 9, scope: !2848)
!2900 = !DILocation(line: 355, column: 17, scope: !2852)
!2901 = !DILocation(line: 381, column: 17, scope: !2854)
!2902 = !DILocation(line: 383, column: 22, scope: !2856)
!2903 = !DILocation(line: 407, column: 17, scope: !2860)
!2904 = !DILocation(line: 409, column: 22, scope: !2862)
!2905 = !DILocation(line: 465, column: 21, scope: !2868)
!2906 = !DILocation(line: 468, column: 26, scope: !2870)
!2907 = !DILocation(line: 514, column: 9, scope: !2878)
!2908 = !DILocation(line: 537, column: 9, scope: !2885)
!2909 = !DILocation(line: 506, column: 29, scope: !1972, inlinedAt: !2910)
!2910 = distinct !DILocation(line: 323, column: 17, scope: !2812)
!2911 = !DILocation(line: 323, column: 17, scope: !2812)
!2912 = !DILocation(line: 324, column: 23, scope: !2820)
!2913 = !DILocalVariable(name: "addr", arg: 1, scope: !2914, file: !1149, line: 593, type: !9)
!2914 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17ha753c8723ca3698aE", scope: !205, file: !1149, line: 593, type: !2915, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1735, retainedNodes: !2917)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!1292, !9}
!2917 = !{!2913}
!2918 = !DILocation(line: 593, column: 29, scope: !2914, inlinedAt: !2919)
!2919 = distinct !DILocation(line: 537, column: 24, scope: !2920, inlinedAt: !2923)
!2920 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hd44ad8da8dac2d26E", scope: !205, file: !1149, line: 536, type: !2921, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !24)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!1178}
!2923 = distinct !DILocation(line: 325, column: 23, scope: !2822)
!2924 = !DILocation(line: 537, column: 5, scope: !2920, inlinedAt: !2923)
!2925 = !DILocation(line: 325, column: 23, scope: !2822)
!2926 = !DILocation(line: 593, column: 29, scope: !2914, inlinedAt: !2927)
!2927 = distinct !DILocation(line: 537, column: 24, scope: !2920, inlinedAt: !2928)
!2928 = distinct !DILocation(line: 326, column: 21, scope: !2824)
!2929 = !DILocation(line: 537, column: 5, scope: !2920, inlinedAt: !2928)
!2930 = !DILocation(line: 326, column: 21, scope: !2824)
!2931 = !DILocation(line: 315, column: 6, scope: !2932, inlinedAt: !2935)
!2932 = distinct !DISubprogram(name: "uninit<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h72d35519f6c80f79E", scope: !2830, file: !1452, line: 313, type: !2933, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !24)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{!2830}
!2935 = distinct !DILocation(line: 327, column: 26, scope: !2826)
!2936 = !DILocation(line: 327, column: 25, scope: !2826)
!2937 = !DILocation(line: 331, column: 26, scope: !2828)
!2938 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !2939)
!2939 = distinct !DILocation(line: 331, column: 26, scope: !2828)
!2940 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !2939)
!2941 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !2942)
!2942 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !2939)
!2943 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !2942)
!2944 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !2942)
!2945 = !DILocation(line: 332, column: 23, scope: !2840)
!2946 = !DILocation(line: 593, column: 29, scope: !2914, inlinedAt: !2947)
!2947 = distinct !DILocation(line: 537, column: 24, scope: !2920, inlinedAt: !2948)
!2948 = distinct !DILocation(line: 333, column: 23, scope: !2842)
!2949 = !DILocation(line: 537, column: 5, scope: !2920, inlinedAt: !2948)
!2950 = !DILocation(line: 333, column: 23, scope: !2842)
!2951 = !DILocation(line: 593, column: 29, scope: !2914, inlinedAt: !2952)
!2952 = distinct !DILocation(line: 537, column: 24, scope: !2920, inlinedAt: !2953)
!2953 = distinct !DILocation(line: 334, column: 21, scope: !2844)
!2954 = !DILocation(line: 537, column: 5, scope: !2920, inlinedAt: !2953)
!2955 = !DILocation(line: 334, column: 21, scope: !2844)
!2956 = !DILocation(line: 315, column: 6, scope: !2932, inlinedAt: !2957)
!2957 = distinct !DILocation(line: 335, column: 26, scope: !2846)
!2958 = !DILocation(line: 335, column: 25, scope: !2846)
!2959 = !DILocation(line: 348, column: 5, scope: !2848)
!2960 = !DILocation(line: 351, column: 29, scope: !2848)
!2961 = !DILocation(line: 351, column: 32, scope: !2848)
!2962 = !DILocation(line: 351, column: 23, scope: !2848)
!2963 = !DILocation(line: 351, column: 38, scope: !2848)
!2964 = !DILocation(line: 351, column: 13, scope: !2850)
!2965 = !DILocation(line: 353, column: 12, scope: !2850)
!2966 = !DILocation(line: 377, column: 12, scope: !2850)
!2967 = !DILocation(line: 377, column: 23, scope: !2850)
!2968 = !DILocation(line: 355, column: 33, scope: !2850)
!2969 = !DILocation(line: 355, column: 36, scope: !2850)
!2970 = !DILocation(line: 355, column: 27, scope: !2850)
!2971 = !DILocation(line: 356, column: 16, scope: !2852)
!2972 = !DILocation(line: 356, column: 26, scope: !2852)
!2973 = !DILocation(line: 356, column: 35, scope: !2852)
!2974 = !DILocation(line: 356, column: 45, scope: !2852)
!2975 = !DILocation(line: 362, column: 16, scope: !2852)
!2976 = !DILocation(line: 362, column: 26, scope: !2852)
!2977 = !DILocation(line: 357, column: 17, scope: !2852)
!2978 = !DILocation(line: 356, column: 13, scope: !2852)
!2979 = !DILocation(line: 364, column: 23, scope: !2852)
!2980 = !DILocation(line: 364, column: 33, scope: !2852)
!2981 = !DILocation(line: 363, column: 27, scope: !2852)
!2982 = !DILocation(line: 363, column: 17, scope: !2852)
!2983 = !DILocation(line: 362, column: 13, scope: !2852)
!2984 = !DILocation(line: 373, column: 13, scope: !2852)
!2985 = !DILocation(line: 370, column: 27, scope: !2852)
!2986 = !DILocation(line: 370, column: 17, scope: !2852)
!2987 = !DILocation(line: 371, column: 27, scope: !2852)
!2988 = !DILocation(line: 371, column: 33, scope: !2852)
!2989 = !DILocation(line: 365, column: 27, scope: !2852)
!2990 = !DILocation(line: 365, column: 17, scope: !2852)
!2991 = !DILocation(line: 364, column: 20, scope: !2852)
!2992 = !DILocation(line: 371, column: 17, scope: !2852)
!2993 = !DILocation(line: 374, column: 13, scope: !2852)
!2994 = !DILocation(line: 373, column: 27, scope: !2852)
!2995 = !DILocation(line: 373, column: 47, scope: !2852)
!2996 = !DILocation(line: 374, column: 33, scope: !2852)
!2997 = !DILocation(line: 374, column: 36, scope: !2852)
!2998 = !DILocation(line: 374, column: 27, scope: !2852)
!2999 = !DILocation(line: 374, column: 42, scope: !2852)
!3000 = !DILocation(line: 374, column: 52, scope: !2852)
!3001 = !DILocation(line: 403, column: 12, scope: !2850)
!3002 = !DILocation(line: 403, column: 23, scope: !2850)
!3003 = !DILocalVariable(name: "this", arg: 1, scope: !3004, file: !1452, line: 1012, type: !3007)
!3004 = distinct !DISubprogram(name: "slice_as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16slice_as_mut_ptr17he445166f8850d3a4E", scope: !2830, file: !1452, line: 1012, type: !3005, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !3012)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{!1178, !3007}
!3007 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !3008, templateParams: !24, identifier: "94bd6238f8fb4bc167fbf872f9366381")
!3008 = !{!3009, !3011}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3007, file: !2, baseType: !3010, size: 64, align: 64)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64, align: 64, dwarfAddressSpace: 0)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3007, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3012 = !{!3003}
!3013 = !DILocation(line: 1012, column: 35, scope: !3004, inlinedAt: !3014)
!3014 = distinct !DILocation(line: 379, column: 23, scope: !2850)
!3015 = !DILocalVariable(name: "self", arg: 1, scope: !3016, file: !1927, line: 506, type: !3007)
!3016 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hf37bcb4eb330e1bfE", scope: !1127, file: !1927, line: 506, type: !3017, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3021, retainedNodes: !3020)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{!3019, !3007}
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !2830, size: 64, align: 64, dwarfAddressSpace: 0)
!3020 = !{!3015}
!3021 = !{!3022}
!3022 = !DITemplateTypeParameter(name: "T", type: !2830)
!3023 = !DILocation(line: 506, column: 29, scope: !3016, inlinedAt: !3024)
!3024 = distinct !DILocation(line: 1013, column: 9, scope: !3004, inlinedAt: !3014)
!3025 = !DILocation(line: 379, column: 13, scope: !2850)
!3026 = !DILocation(line: 380, column: 21, scope: !2850)
!3027 = !DILocation(line: 380, column: 13, scope: !2850)
!3028 = !DILocation(line: 381, column: 28, scope: !2850)
!3029 = !DILocation(line: 383, column: 25, scope: !2854)
!3030 = !DILocation(line: 383, column: 22, scope: !2854)
!3031 = !DILocation(line: 383, column: 13, scope: !2856)
!3032 = !DILocation(line: 383, column: 17, scope: !2856)
!3033 = !DILocation(line: 383, column: 17, scope: !2858)
!3034 = !DILocation(line: 396, column: 21, scope: !2858)
!3035 = !DILocation(line: 397, column: 29, scope: !2858)
!3036 = !DILocation(line: 397, column: 48, scope: !2858)
!3037 = !DILocation(line: 397, column: 40, scope: !2858)
!3038 = !DILocation(line: 397, column: 39, scope: !2858)
!3039 = !DILocalVariable(name: "self", arg: 1, scope: !3040, file: !267, line: 1015, type: !1178)
!3040 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h582df2d65f29d853E", scope: !278, file: !267, line: 1015, type: !3041, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !3043)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!1178, !1178, !9}
!3043 = !{!3039, !3044}
!3044 = !DILocalVariable(name: "count", arg: 2, scope: !3040, file: !267, line: 1015, type: !9)
!3045 = !DILocation(line: 1015, column: 29, scope: !3040, inlinedAt: !3046)
!3046 = distinct !DILocation(line: 397, column: 29, scope: !2858)
!3047 = !DILocation(line: 1015, column: 35, scope: !3040, inlinedAt: !3046)
!3048 = !DILocalVariable(name: "self", arg: 1, scope: !3049, file: !267, line: 472, type: !1178)
!3049 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h1b02f50382f67714E", scope: !278, file: !267, line: 472, type: !3050, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !3052)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!1178, !1178, !218}
!3052 = !{!3048, !3053}
!3053 = !DILocalVariable(name: "count", arg: 2, scope: !3049, file: !267, line: 472, type: !218)
!3054 = !DILocation(line: 472, column: 32, scope: !3049, inlinedAt: !3055)
!3055 = distinct !DILocation(line: 1020, column: 18, scope: !3040, inlinedAt: !3046)
!3056 = !DILocation(line: 472, column: 38, scope: !3049, inlinedAt: !3055)
!3057 = !DILocation(line: 479, column: 18, scope: !3049, inlinedAt: !3055)
!3058 = !DILocation(line: 397, column: 21, scope: !2858)
!3059 = !DILocation(line: 398, column: 28, scope: !2858)
!3060 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !3061)
!3061 = distinct !DILocation(line: 398, column: 28, scope: !2858)
!3062 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !3061)
!3063 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3064)
!3064 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !3061)
!3065 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3064)
!3066 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3064)
!3067 = !DILocation(line: 398, column: 21, scope: !2858)
!3068 = !DILocation(line: 431, column: 36, scope: !2850)
!3069 = !DILocation(line: 431, column: 45, scope: !2850)
!3070 = !DILocation(line: 431, column: 30, scope: !2850)
!3071 = !DILocation(line: 431, column: 59, scope: !2850)
!3072 = !DILocation(line: 431, column: 68, scope: !2850)
!3073 = !DILocation(line: 431, column: 53, scope: !2850)
!3074 = !DILocation(line: 431, column: 21, scope: !2850)
!3075 = !DILocation(line: 431, column: 13, scope: !2866)
!3076 = !DILocation(line: 433, column: 12, scope: !2866)
!3077 = !DILocation(line: 1012, column: 35, scope: !3004, inlinedAt: !3078)
!3078 = distinct !DILocation(line: 405, column: 23, scope: !2850)
!3079 = !DILocation(line: 506, column: 29, scope: !3016, inlinedAt: !3080)
!3080 = distinct !DILocation(line: 1013, column: 9, scope: !3004, inlinedAt: !3078)
!3081 = !DILocation(line: 405, column: 13, scope: !2850)
!3082 = !DILocation(line: 406, column: 21, scope: !2850)
!3083 = !DILocation(line: 406, column: 13, scope: !2850)
!3084 = !DILocation(line: 407, column: 28, scope: !2850)
!3085 = !DILocation(line: 409, column: 25, scope: !2860)
!3086 = !DILocation(line: 409, column: 22, scope: !2860)
!3087 = !DILocation(line: 409, column: 13, scope: !2862)
!3088 = !DILocation(line: 409, column: 17, scope: !2862)
!3089 = !DILocation(line: 409, column: 17, scope: !2864)
!3090 = !DILocation(line: 423, column: 28, scope: !2864)
!3091 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !3092)
!3092 = distinct !DILocation(line: 423, column: 28, scope: !2864)
!3093 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !3092)
!3094 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3095)
!3095 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !3092)
!3096 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3097)
!3097 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3095)
!3098 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3097)
!3099 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3100)
!3100 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !3092)
!3101 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3100)
!3102 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3100)
!3103 = !DILocation(line: 423, column: 21, scope: !2864)
!3104 = !DILocation(line: 424, column: 21, scope: !2864)
!3105 = !DILocation(line: 425, column: 29, scope: !2864)
!3106 = !DILocation(line: 425, column: 47, scope: !2864)
!3107 = !DILocation(line: 425, column: 39, scope: !2864)
!3108 = !DILocation(line: 1015, column: 29, scope: !3040, inlinedAt: !3109)
!3109 = distinct !DILocation(line: 425, column: 29, scope: !2864)
!3110 = !DILocation(line: 1015, column: 35, scope: !3040, inlinedAt: !3109)
!3111 = !DILocation(line: 472, column: 32, scope: !3049, inlinedAt: !3112)
!3112 = distinct !DILocation(line: 1020, column: 18, scope: !3040, inlinedAt: !3109)
!3113 = !DILocation(line: 472, column: 38, scope: !3049, inlinedAt: !3112)
!3114 = !DILocation(line: 479, column: 18, scope: !3049, inlinedAt: !3112)
!3115 = !DILocation(line: 425, column: 21, scope: !2864)
!3116 = !DILocation(line: 482, column: 12, scope: !2866)
!3117 = !DILocation(line: 482, column: 23, scope: !2866)
!3118 = !DILocation(line: 465, column: 37, scope: !2866)
!3119 = !DILocalVariable(name: "small", arg: 1, scope: !3120, file: !3121, line: 53, type: !123)
!3120 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h43754cc5e8cc59baE", scope: !3122, file: !3121, line: 53, type: !3125, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3127)
!3121 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "6b2e6a5be8ada6428316dd10706356d8")
!3122 = !DINamespace(name: "{impl#44}", scope: !3123)
!3123 = !DINamespace(name: "num", scope: !3124)
!3124 = !DINamespace(name: "convert", scope: !143)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!9, !123}
!3127 = !{!3119}
!3128 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3129)
!3129 = distinct !DILocation(line: 465, column: 37, scope: !2866)
!3130 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3129)
!3131 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !3132)
!3132 = distinct !DILocation(line: 465, column: 37, scope: !2866)
!3133 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !3132)
!3134 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3135)
!3135 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !3132)
!3136 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3135)
!3137 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3135)
!3138 = !DILocation(line: 465, column: 27, scope: !2866)
!3139 = !DILocation(line: 466, column: 42, scope: !2868)
!3140 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3141)
!3141 = distinct !DILocation(line: 466, column: 42, scope: !2868)
!3142 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3141)
!3143 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !3144)
!3144 = distinct !DILocation(line: 466, column: 42, scope: !2868)
!3145 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !3144)
!3146 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3147)
!3147 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !3144)
!3148 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3149)
!3149 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3147)
!3150 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3149)
!3151 = !DILocation(line: 1184, column: 13, scope: !2130, inlinedAt: !3149)
!3152 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3153)
!3153 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !3144)
!3154 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3153)
!3155 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3153)
!3156 = !DILocation(line: 466, column: 52, scope: !2868)
!3157 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3158)
!3158 = distinct !DILocation(line: 466, column: 52, scope: !2868)
!3159 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3158)
!3160 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !3161)
!3161 = distinct !DILocation(line: 466, column: 52, scope: !2868)
!3162 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !3161)
!3163 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3164)
!3164 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !3161)
!3165 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3164)
!3166 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3164)
!3167 = !DILocation(line: 466, column: 17, scope: !2868)
!3168 = !DILocation(line: 468, column: 26, scope: !2868)
!3169 = !DILocation(line: 468, column: 17, scope: !2870)
!3170 = !DILocation(line: 475, column: 48, scope: !2868)
!3171 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3172)
!3172 = distinct !DILocation(line: 475, column: 48, scope: !2868)
!3173 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3172)
!3174 = !DILocation(line: 469, column: 31, scope: !2870)
!3175 = !DILocation(line: 1015, column: 29, scope: !3040, inlinedAt: !3176)
!3176 = distinct !DILocation(line: 469, column: 31, scope: !2870)
!3177 = !DILocation(line: 1015, column: 35, scope: !3040, inlinedAt: !3176)
!3178 = !DILocation(line: 472, column: 32, scope: !3049, inlinedAt: !3179)
!3179 = distinct !DILocation(line: 1020, column: 18, scope: !3040, inlinedAt: !3176)
!3180 = !DILocation(line: 472, column: 38, scope: !3049, inlinedAt: !3179)
!3181 = !DILocation(line: 479, column: 18, scope: !3049, inlinedAt: !3179)
!3182 = !DILocation(line: 469, column: 21, scope: !2870)
!3183 = !DILocation(line: 470, column: 46, scope: !2870)
!3184 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3185)
!3185 = distinct !DILocation(line: 470, column: 46, scope: !2870)
!3186 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3185)
!3187 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !3188)
!3188 = distinct !DILocation(line: 470, column: 46, scope: !2870)
!3189 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !3188)
!3190 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3191)
!3191 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !3188)
!3192 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3191)
!3193 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3191)
!3194 = !DILocation(line: 470, column: 55, scope: !2870)
!3195 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3196)
!3196 = distinct !DILocation(line: 470, column: 55, scope: !2870)
!3197 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3196)
!3198 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !3199)
!3199 = distinct !DILocation(line: 470, column: 55, scope: !2870)
!3200 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !3199)
!3201 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3202)
!3202 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !3199)
!3203 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3204)
!3204 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3202)
!3205 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3204)
!3206 = !DILocation(line: 1184, column: 13, scope: !2130, inlinedAt: !3204)
!3207 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3208)
!3208 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !3199)
!3209 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3208)
!3210 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3208)
!3211 = !DILocation(line: 470, column: 21, scope: !2870)
!3212 = !DILocation(line: 471, column: 31, scope: !2870)
!3213 = !DILocation(line: 1015, column: 29, scope: !3040, inlinedAt: !3214)
!3214 = distinct !DILocation(line: 471, column: 31, scope: !2870)
!3215 = !DILocation(line: 1015, column: 35, scope: !3040, inlinedAt: !3214)
!3216 = !DILocation(line: 472, column: 32, scope: !3049, inlinedAt: !3217)
!3217 = distinct !DILocation(line: 1020, column: 18, scope: !3040, inlinedAt: !3214)
!3218 = !DILocation(line: 472, column: 38, scope: !3049, inlinedAt: !3217)
!3219 = !DILocation(line: 479, column: 18, scope: !3049, inlinedAt: !3217)
!3220 = !DILocation(line: 471, column: 21, scope: !2870)
!3221 = !DILocation(line: 472, column: 46, scope: !2870)
!3222 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3223)
!3223 = distinct !DILocation(line: 472, column: 46, scope: !2870)
!3224 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3223)
!3225 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !3226)
!3226 = distinct !DILocation(line: 472, column: 46, scope: !2870)
!3227 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !3226)
!3228 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3229)
!3229 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !3226)
!3230 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3231)
!3231 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3229)
!3232 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3231)
!3233 = !DILocation(line: 1184, column: 13, scope: !2130, inlinedAt: !3231)
!3234 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3235)
!3235 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !3226)
!3236 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3235)
!3237 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3235)
!3238 = !DILocation(line: 472, column: 56, scope: !2870)
!3239 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3240)
!3240 = distinct !DILocation(line: 472, column: 56, scope: !2870)
!3241 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3240)
!3242 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !3243)
!3243 = distinct !DILocation(line: 472, column: 56, scope: !2870)
!3244 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !3243)
!3245 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3246)
!3246 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !3243)
!3247 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3246)
!3248 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3246)
!3249 = !DILocation(line: 472, column: 21, scope: !2870)
!3250 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !3251)
!3251 = distinct !DILocation(line: 475, column: 48, scope: !2868)
!3252 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !3251)
!3253 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3254)
!3254 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !3251)
!3255 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3256)
!3256 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3254)
!3257 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3256)
!3258 = !DILocation(line: 1184, column: 13, scope: !2130, inlinedAt: !3256)
!3259 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3260)
!3260 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !3251)
!3261 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3260)
!3262 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3260)
!3263 = !DILocation(line: 475, column: 17, scope: !2868)
!3264 = !DILocation(line: 476, column: 29, scope: !2868)
!3265 = !DILocation(line: 476, column: 17, scope: !2868)
!3266 = !DILocation(line: 477, column: 27, scope: !2868)
!3267 = !DILocation(line: 1015, column: 29, scope: !3040, inlinedAt: !3268)
!3268 = distinct !DILocation(line: 477, column: 27, scope: !2868)
!3269 = !DILocation(line: 1015, column: 35, scope: !3040, inlinedAt: !3268)
!3270 = !DILocation(line: 472, column: 32, scope: !3049, inlinedAt: !3271)
!3271 = distinct !DILocation(line: 1020, column: 18, scope: !3040, inlinedAt: !3268)
!3272 = !DILocation(line: 472, column: 38, scope: !3049, inlinedAt: !3271)
!3273 = !DILocation(line: 479, column: 18, scope: !3049, inlinedAt: !3271)
!3274 = !DILocation(line: 477, column: 17, scope: !2868)
!3275 = !DILocation(line: 478, column: 27, scope: !2868)
!3276 = !DILocation(line: 1015, column: 29, scope: !3040, inlinedAt: !3277)
!3277 = distinct !DILocation(line: 478, column: 27, scope: !2868)
!3278 = !DILocation(line: 1015, column: 35, scope: !3040, inlinedAt: !3277)
!3279 = !DILocation(line: 472, column: 32, scope: !3049, inlinedAt: !3280)
!3280 = distinct !DILocation(line: 1020, column: 18, scope: !3040, inlinedAt: !3277)
!3281 = !DILocation(line: 472, column: 38, scope: !3049, inlinedAt: !3280)
!3282 = !DILocation(line: 479, column: 18, scope: !3049, inlinedAt: !3280)
!3283 = !DILocation(line: 478, column: 17, scope: !2868)
!3284 = !DILocation(line: 433, column: 9, scope: !2866)
!3285 = !DILocation(line: 494, column: 12, scope: !2866)
!3286 = !DILocation(line: 494, column: 23, scope: !2866)
!3287 = !DILocation(line: 491, column: 26, scope: !2866)
!3288 = !DILocation(line: 491, column: 32, scope: !2866)
!3289 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !3290)
!3290 = distinct !DILocation(line: 491, column: 26, scope: !2866)
!3291 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !3290)
!3292 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3293)
!3293 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !3290)
!3294 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3293)
!3295 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3293)
!3296 = !DILocation(line: 491, column: 13, scope: !2866)
!3297 = !DILocation(line: 482, column: 9, scope: !2866)
!3298 = !DILocation(line: 502, column: 12, scope: !2866)
!3299 = !DILocation(line: 499, column: 26, scope: !2866)
!3300 = !DILocation(line: 499, column: 32, scope: !2866)
!3301 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !3302)
!3302 = distinct !DILocation(line: 499, column: 26, scope: !2866)
!3303 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !3302)
!3304 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3305)
!3305 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !3302)
!3306 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3307)
!3307 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3305)
!3308 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3307)
!3309 = !DILocation(line: 1184, column: 13, scope: !2130, inlinedAt: !3307)
!3310 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3311)
!3311 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !3302)
!3312 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3311)
!3313 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3311)
!3314 = !DILocation(line: 499, column: 13, scope: !2866)
!3315 = !DILocation(line: 494, column: 9, scope: !2866)
!3316 = !DILocation(line: 511, column: 8, scope: !2848)
!3317 = !DILocation(line: 511, column: 18, scope: !2848)
!3318 = !DILocation(line: 534, column: 15, scope: !2848)
!3319 = !DILocation(line: 534, column: 25, scope: !2848)
!3320 = !DILocation(line: 514, column: 9, scope: !2848)
!3321 = !DILocation(line: 515, column: 15, scope: !2848)
!3322 = !DILocation(line: 515, column: 25, scope: !2848)
!3323 = !DILocation(line: 514, column: 32, scope: !2848)
!3324 = !DILocation(line: 514, column: 35, scope: !2848)
!3325 = !DILocation(line: 514, column: 26, scope: !2848)
!3326 = !DILocation(line: 514, column: 9, scope: !2872)
!3327 = !{i8 0, i8 3}
!3328 = !DILocation(line: 506, column: 29, scope: !1972, inlinedAt: !3329)
!3329 = distinct !DILocation(line: 533, column: 15, scope: !2848)
!3330 = !DILocation(line: 533, column: 31, scope: !2848)
!3331 = !DILocation(line: 533, column: 9, scope: !2848)
!3332 = !DILocation(line: 528, column: 25, scope: !2848)
!3333 = !DILocalVariable(name: "self", arg: 1, scope: !3334, file: !267, line: 1098, type: !1178)
!3334 = distinct !DISubprogram(name: "sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h5f4b4a26104964c8E", scope: !278, file: !267, line: 1098, type: !3041, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !3335)
!3335 = !{!3333, !3336}
!3336 = !DILocalVariable(name: "count", arg: 2, scope: !3334, file: !267, line: 1098, type: !9)
!3337 = !DILocation(line: 1098, column: 29, scope: !3334, inlinedAt: !3338)
!3338 = distinct !DILocation(line: 528, column: 25, scope: !2848)
!3339 = !DILocation(line: 1098, column: 35, scope: !3334, inlinedAt: !3338)
!3340 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3341)
!3341 = distinct !DILocation(line: 1103, column: 30, scope: !3334, inlinedAt: !3338)
!3342 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3343)
!3343 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3341)
!3344 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3343)
!3345 = !DILocation(line: 472, column: 32, scope: !3049, inlinedAt: !3346)
!3346 = distinct !DILocation(line: 1103, column: 18, scope: !3334, inlinedAt: !3338)
!3347 = !DILocation(line: 472, column: 38, scope: !3049, inlinedAt: !3346)
!3348 = !DILocation(line: 479, column: 18, scope: !3049, inlinedAt: !3346)
!3349 = !DILocation(line: 528, column: 17, scope: !2848)
!3350 = !DILocation(line: 529, column: 27, scope: !2848)
!3351 = !DILocation(line: 529, column: 45, scope: !2848)
!3352 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3353)
!3353 = distinct !DILocation(line: 529, column: 33, scope: !2848)
!3354 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3353)
!3355 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !3356)
!3356 = distinct !DILocation(line: 529, column: 27, scope: !2848)
!3357 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !3356)
!3358 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3359)
!3359 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !3356)
!3360 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3359)
!3361 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3359)
!3362 = !DILocation(line: 529, column: 55, scope: !2848)
!3363 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !3364)
!3364 = distinct !DILocation(line: 529, column: 55, scope: !2848)
!3365 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !3364)
!3366 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3367)
!3367 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !3364)
!3368 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3369)
!3369 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3367)
!3370 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3369)
!3371 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3372)
!3372 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !3364)
!3373 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3372)
!3374 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3372)
!3375 = !DILocation(line: 529, column: 17, scope: !2848)
!3376 = !DILocation(line: 530, column: 21, scope: !2848)
!3377 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !3378)
!3378 = distinct !DILocation(line: 530, column: 21, scope: !2848)
!3379 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !3378)
!3380 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3381)
!3381 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !3378)
!3382 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3383)
!3383 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3381)
!3384 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3383)
!3385 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3386)
!3386 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !3378)
!3387 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3386)
!3388 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3386)
!3389 = !DILocation(line: 530, column: 17, scope: !2848)
!3390 = !DILocation(line: 515, column: 9, scope: !2848)
!3391 = !DILocation(line: 551, column: 2, scope: !2812)
!3392 = !DILocation(line: 506, column: 29, scope: !1972, inlinedAt: !3393)
!3393 = distinct !DILocation(line: 549, column: 15, scope: !2848)
!3394 = !DILocation(line: 549, column: 31, scope: !2848)
!3395 = !DILocation(line: 549, column: 9, scope: !2848)
!3396 = !DILocation(line: 537, column: 9, scope: !2848)
!3397 = !DILocation(line: 538, column: 15, scope: !2848)
!3398 = !DILocation(line: 538, column: 25, scope: !2848)
!3399 = !DILocation(line: 537, column: 32, scope: !2848)
!3400 = !DILocation(line: 537, column: 35, scope: !2848)
!3401 = !DILocation(line: 537, column: 26, scope: !2848)
!3402 = !DILocation(line: 537, column: 9, scope: !2881)
!3403 = !DILocation(line: 506, column: 29, scope: !1972, inlinedAt: !3404)
!3404 = distinct !DILocation(line: 546, column: 15, scope: !2848)
!3405 = !DILocation(line: 546, column: 31, scope: !2848)
!3406 = !DILocation(line: 546, column: 9, scope: !2848)
!3407 = !DILocation(line: 541, column: 25, scope: !2848)
!3408 = !DILocation(line: 1098, column: 29, scope: !3334, inlinedAt: !3409)
!3409 = distinct !DILocation(line: 541, column: 25, scope: !2848)
!3410 = !DILocation(line: 1098, column: 35, scope: !3334, inlinedAt: !3409)
!3411 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3412)
!3412 = distinct !DILocation(line: 1103, column: 30, scope: !3334, inlinedAt: !3409)
!3413 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3414)
!3414 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3412)
!3415 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3414)
!3416 = !DILocation(line: 472, column: 32, scope: !3049, inlinedAt: !3417)
!3417 = distinct !DILocation(line: 1103, column: 18, scope: !3334, inlinedAt: !3409)
!3418 = !DILocation(line: 472, column: 38, scope: !3049, inlinedAt: !3417)
!3419 = !DILocation(line: 479, column: 18, scope: !3049, inlinedAt: !3417)
!3420 = !DILocation(line: 541, column: 17, scope: !2848)
!3421 = !DILocation(line: 542, column: 27, scope: !2848)
!3422 = !DILocation(line: 542, column: 30, scope: !2848)
!3423 = !DILocation(line: 542, column: 48, scope: !2848)
!3424 = !DILocation(line: 53, column: 21, scope: !3120, inlinedAt: !3425)
!3425 = distinct !DILocation(line: 542, column: 36, scope: !2848)
!3426 = !DILocation(line: 54, column: 17, scope: !3120, inlinedAt: !3425)
!3427 = !DILocation(line: 542, column: 36, scope: !2848)
!3428 = !DILocation(line: 1098, column: 29, scope: !2114, inlinedAt: !3429)
!3429 = distinct !DILocation(line: 542, column: 30, scope: !2848)
!3430 = !DILocation(line: 1098, column: 35, scope: !2114, inlinedAt: !3429)
!3431 = !DILocation(line: 1358, column: 35, scope: !2121, inlinedAt: !3432)
!3432 = distinct !DILocation(line: 1103, column: 30, scope: !2114, inlinedAt: !3429)
!3433 = !DILocation(line: 1183, column: 35, scope: !2130, inlinedAt: !3434)
!3434 = distinct !DILocation(line: 1359, column: 13, scope: !2121, inlinedAt: !3432)
!3435 = !DILocation(line: 1183, column: 41, scope: !2130, inlinedAt: !3434)
!3436 = !DILocation(line: 1184, column: 13, scope: !2130, inlinedAt: !3434)
!3437 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3438)
!3438 = distinct !DILocation(line: 1103, column: 18, scope: !2114, inlinedAt: !3429)
!3439 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3438)
!3440 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3438)
!3441 = !DILocation(line: 542, column: 17, scope: !2848)
!3442 = !DILocation(line: 543, column: 21, scope: !2848)
!3443 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !3444)
!3444 = distinct !DILocation(line: 543, column: 21, scope: !2848)
!3445 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !3444)
!3446 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !3447)
!3447 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !3444)
!3448 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !3447)
!3449 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !3447)
!3450 = !DILocation(line: 543, column: 17, scope: !2848)
!3451 = !DILocation(line: 538, column: 9, scope: !2848)
!3452 = distinct !DISubprogram(name: "width<u8>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h3cd960ddfd95367cE", scope: !3453, file: !2292, line: 341, type: !3454, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1614, retainedNodes: !3456)
!3453 = !DINamespace(name: "partition_in_blocks", scope: !1154)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!9, !1178, !1178}
!3456 = !{!3457, !3458}
!3457 = !DILocalVariable(name: "l", arg: 1, scope: !3452, file: !2292, line: 341, type: !1178)
!3458 = !DILocalVariable(name: "r", arg: 2, scope: !3452, file: !2292, line: 341, type: !1178)
!3459 = !DILocation(line: 341, column: 17, scope: !3452)
!3460 = !DILocation(line: 341, column: 28, scope: !3452)
!3461 = !DILocation(line: 342, column: 17, scope: !3452)
!3462 = !DILocation(line: 342, column: 9, scope: !3452)
!3463 = !DILocation(line: 209, column: 17, scope: !1610, inlinedAt: !3464)
!3464 = distinct !DILocation(line: 345, column: 10, scope: !3452)
!3465 = !DILocation(line: 57, column: 26, scope: !1619, inlinedAt: !3466)
!3466 = distinct !DILocation(line: 213, column: 33, scope: !1610, inlinedAt: !3464)
!3467 = !DILocation(line: 213, column: 18, scope: !1610, inlinedAt: !3464)
!3468 = !DILocation(line: 209, column: 17, scope: !1610, inlinedAt: !3469)
!3469 = distinct !DILocation(line: 345, column: 21, scope: !3452)
!3470 = !DILocation(line: 57, column: 26, scope: !1619, inlinedAt: !3471)
!3471 = distinct !DILocation(line: 213, column: 33, scope: !1610, inlinedAt: !3469)
!3472 = !DILocation(line: 213, column: 18, scope: !1610, inlinedAt: !3469)
!3473 = !DILocation(line: 345, column: 9, scope: !3452)
!3474 = !DILocation(line: 346, column: 6, scope: !3452)
!3475 = distinct !DISubprogram(name: "width<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4sort19partition_in_blocks5width17h97c19e3fdf8a01ebE", scope: !3453, file: !2292, line: 341, type: !3476, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !3478)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{!9, !272, !272}
!3478 = !{!3479, !3480}
!3479 = !DILocalVariable(name: "l", arg: 1, scope: !3475, file: !2292, line: 341, type: !272)
!3480 = !DILocalVariable(name: "r", arg: 2, scope: !3475, file: !2292, line: 341, type: !272)
!3481 = !DILocation(line: 341, column: 17, scope: !3475)
!3482 = !DILocation(line: 341, column: 28, scope: !3475)
!3483 = !DILocation(line: 342, column: 17, scope: !3475)
!3484 = !DILocation(line: 342, column: 9, scope: !3475)
!3485 = !DILocalVariable(name: "self", arg: 1, scope: !3486, file: !267, line: 209, type: !272)
!3486 = distinct !DISubprogram(name: "addr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hefff7a9d7b2631beE", scope: !278, file: !267, line: 209, type: !3487, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !3489)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!9, !272}
!3489 = !{!3485}
!3490 = !DILocation(line: 209, column: 17, scope: !3486, inlinedAt: !3491)
!3491 = distinct !DILocation(line: 345, column: 10, scope: !3475)
!3492 = !DILocation(line: 57, column: 26, scope: !1289, inlinedAt: !3493)
!3493 = distinct !DILocation(line: 213, column: 33, scope: !3486, inlinedAt: !3491)
!3494 = !DILocation(line: 213, column: 18, scope: !3486, inlinedAt: !3491)
!3495 = !DILocation(line: 209, column: 17, scope: !3486, inlinedAt: !3496)
!3496 = distinct !DILocation(line: 345, column: 21, scope: !3475)
!3497 = !DILocation(line: 57, column: 26, scope: !1289, inlinedAt: !3498)
!3498 = distinct !DILocation(line: 213, column: 33, scope: !3486, inlinedAt: !3496)
!3499 = !DILocation(line: 213, column: 18, scope: !3486, inlinedAt: !3496)
!3500 = !DILocation(line: 345, column: 9, scope: !3475)
!3501 = !DILocation(line: 346, column: 6, scope: !3475)
!3502 = distinct !DISubprogram(name: "partial_insertion_sort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort22partial_insertion_sort17h6ab531a20059253eE", scope: !1154, file: !2292, line: 198, type: !3503, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !3505)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!421, !354, !1124}
!3505 = !{!3506, !3507, !3508, !3510, !3512}
!3506 = !DILocalVariable(name: "v", arg: 1, scope: !3502, file: !2292, line: 198, type: !354)
!3507 = !DILocalVariable(name: "is_less", arg: 2, scope: !3502, file: !2292, line: 198, type: !1124)
!3508 = !DILocalVariable(name: "len", scope: !3509, file: !2292, line: 207, type: !9, align: 8)
!3509 = distinct !DILexicalBlock(scope: !3502, file: !2292, line: 207, column: 5)
!3510 = !DILocalVariable(name: "i", scope: !3511, file: !2292, line: 208, type: !9, align: 8)
!3511 = distinct !DILexicalBlock(scope: !3509, file: !2292, line: 208, column: 5)
!3512 = !DILocalVariable(name: "iter", scope: !3513, file: !2292, line: 210, type: !175, align: 8)
!3513 = distinct !DILexicalBlock(scope: !3511, file: !2292, line: 210, column: 5)
!3514 = !DILocation(line: 198, column: 33, scope: !3502)
!3515 = !DILocation(line: 198, column: 46, scope: !3502)
!3516 = !DILocation(line: 208, column: 9, scope: !3511)
!3517 = !DILocation(line: 210, column: 14, scope: !3513)
!3518 = !DILocation(line: 207, column: 15, scope: !3502)
!3519 = !DILocation(line: 207, column: 9, scope: !3509)
!3520 = !DILocation(line: 208, column: 17, scope: !3509)
!3521 = !DILocation(line: 210, column: 14, scope: !3511)
!3522 = !DILocation(line: 210, column: 5, scope: !3513)
!3523 = !DILocation(line: 243, column: 5, scope: !3511)
!3524 = !DILocation(line: 244, column: 2, scope: !3502)
!3525 = !DILocation(line: 215, column: 19, scope: !3513)
!3526 = !DILocation(line: 215, column: 55, scope: !3513)
!3527 = !DILocation(line: 215, column: 39, scope: !3513)
!3528 = !DILocation(line: 215, column: 75, scope: !3513)
!3529 = !DILocation(line: 215, column: 59, scope: !3513)
!3530 = !DILocation(line: 215, column: 31, scope: !3513)
!3531 = !DILocation(line: 215, column: 30, scope: !3513)
!3532 = !DILocation(line: 221, column: 12, scope: !3513)
!3533 = !DILocation(line: 216, column: 17, scope: !3513)
!3534 = !DILocation(line: 215, column: 13, scope: !3513)
!3535 = !DILocation(line: 226, column: 12, scope: !3513)
!3536 = !DILocation(line: 222, column: 20, scope: !3513)
!3537 = !DILocation(line: 1, column: 1, scope: !3538)
!3538 = !DILexicalBlockFile(scope: !3513, file: !3539, discriminator: 0)
!3539 = !DIFile(filename: "src/lib.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "ef3e180ca1e13bae3e0904cdd600c8e7")
!3540 = !DILocation(line: 231, column: 16, scope: !3513)
!3541 = !DILocation(line: 227, column: 20, scope: !3513)
!3542 = !DILocation(line: 231, column: 23, scope: !3513)
!3543 = !DILocation(line: 231, column: 9, scope: !3513)
!3544 = !DILocation(line: 233, column: 12, scope: !3513)
!3545 = !DILocation(line: 235, column: 48, scope: !3513)
!3546 = !DILocation(line: 235, column: 46, scope: !3513)
!3547 = !DILocation(line: 235, column: 44, scope: !3513)
!3548 = !DILocation(line: 235, column: 52, scope: !3513)
!3549 = !DILocation(line: 235, column: 13, scope: !3513)
!3550 = !DILocation(line: 238, column: 49, scope: !3513)
!3551 = !DILocation(line: 238, column: 47, scope: !3513)
!3552 = !DILocation(line: 238, column: 45, scope: !3513)
!3553 = !DILocation(line: 238, column: 13, scope: !3513)
!3554 = distinct !DISubprogram(name: "insertion_sort_shift_left<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort25insertion_sort_shift_left17ha5f50d1687ff8c98E", scope: !1154, file: !2292, line: 148, type: !3555, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !3557)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{null, !354, !9, !1124}
!3557 = !{!3558, !3559, !3560, !3561, !3563, !3565}
!3558 = !DILocalVariable(name: "v", arg: 1, scope: !3554, file: !2292, line: 148, type: !354)
!3559 = !DILocalVariable(name: "offset", arg: 2, scope: !3554, file: !2292, line: 148, type: !9)
!3560 = !DILocalVariable(name: "is_less", arg: 3, scope: !3554, file: !2292, line: 148, type: !1124)
!3561 = !DILocalVariable(name: "len", scope: !3562, file: !2292, line: 152, type: !9, align: 8)
!3562 = distinct !DILexicalBlock(scope: !3554, file: !2292, line: 152, column: 5)
!3563 = !DILocalVariable(name: "iter", scope: !3564, file: !2292, line: 158, type: !175, align: 8)
!3564 = distinct !DILexicalBlock(scope: !3562, file: !2292, line: 158, column: 5)
!3565 = !DILocalVariable(name: "i", scope: !3566, file: !2292, line: 158, type: !9, align: 8)
!3566 = distinct !DILexicalBlock(scope: !3564, file: !2292, line: 158, column: 26)
!3567 = !DILocation(line: 148, column: 36, scope: !3554)
!3568 = !DILocation(line: 148, column: 49, scope: !3554)
!3569 = !DILocation(line: 148, column: 64, scope: !3554)
!3570 = !DILocation(line: 158, column: 14, scope: !3564)
!3571 = !DILocation(line: 152, column: 15, scope: !3554)
!3572 = !DILocation(line: 152, column: 9, scope: !3562)
!3573 = !DILocation(line: 155, column: 13, scope: !3562)
!3574 = !DILocation(line: 155, column: 28, scope: !3562)
!3575 = !DILocation(line: 155, column: 5, scope: !3562)
!3576 = !DILocation(line: 158, column: 14, scope: !3562)
!3577 = !DILocation(line: 158, column: 5, scope: !3564)
!3578 = !DILocation(line: 166, column: 2, scope: !3554)
!3579 = !DILocation(line: 158, column: 9, scope: !3564)
!3580 = !DILocation(line: 158, column: 9, scope: !3566)
!3581 = !DILocation(line: 163, column: 32, scope: !3566)
!3582 = !DILocation(line: 163, column: 30, scope: !3566)
!3583 = !DILocation(line: 163, column: 13, scope: !3566)
!3584 = distinct !DISubprogram(name: "insertion_sort_shift_right<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort26insertion_sort_shift_right17hab9036c505b59be9E", scope: !1154, file: !2292, line: 173, type: !3555, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !3585)
!3585 = !{!3586, !3587, !3588, !3589, !3591, !3593}
!3586 = !DILocalVariable(name: "v", arg: 1, scope: !3584, file: !2292, line: 173, type: !354)
!3587 = !DILocalVariable(name: "offset", arg: 2, scope: !3584, file: !2292, line: 173, type: !9)
!3588 = !DILocalVariable(name: "is_less", arg: 3, scope: !3584, file: !2292, line: 173, type: !1124)
!3589 = !DILocalVariable(name: "len", scope: !3590, file: !2292, line: 177, type: !9, align: 8)
!3590 = distinct !DILexicalBlock(scope: !3584, file: !2292, line: 177, column: 5)
!3591 = !DILocalVariable(name: "iter", scope: !3592, file: !2292, line: 183, type: !2411, align: 8)
!3592 = distinct !DILexicalBlock(scope: !3590, file: !2292, line: 183, column: 5)
!3593 = !DILocalVariable(name: "i", scope: !3594, file: !2292, line: 183, type: !9, align: 8)
!3594 = distinct !DILexicalBlock(scope: !3592, file: !2292, line: 183, column: 32)
!3595 = !DILocation(line: 173, column: 37, scope: !3584)
!3596 = !DILocation(line: 173, column: 50, scope: !3584)
!3597 = !DILocation(line: 173, column: 65, scope: !3584)
!3598 = !DILocation(line: 183, column: 14, scope: !3592)
!3599 = !DILocation(line: 177, column: 15, scope: !3584)
!3600 = !DILocation(line: 177, column: 9, scope: !3590)
!3601 = !DILocation(line: 180, column: 13, scope: !3590)
!3602 = !DILocation(line: 180, column: 28, scope: !3590)
!3603 = !DILocation(line: 180, column: 45, scope: !3590)
!3604 = !DILocation(line: 180, column: 5, scope: !3590)
!3605 = !DILocation(line: 183, column: 14, scope: !3590)
!3606 = !DILocation(line: 183, column: 5, scope: !3592)
!3607 = !DILocation(line: 192, column: 2, scope: !3584)
!3608 = !DILocation(line: 183, column: 9, scope: !3592)
!3609 = !DILocation(line: 183, column: 9, scope: !3594)
!3610 = !DILocation(line: 189, column: 32, scope: !3594)
!3611 = !DILocation(line: 189, column: 30, scope: !3594)
!3612 = !DILocation(line: 189, column: 13, scope: !3594)
!3613 = distinct !DISubprogram(name: "recurse<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort7recurse17h23bf6e646aa98387E", scope: !1154, file: !2292, line: 797, type: !3614, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !3627)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{null, !354, !1124, !3616, !27}
!3616 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&bootloader::bootinfo::memory_map::MemoryRegion>", scope: !479, file: !2, size: 64, align: 64, elements: !3617, templateParams: !24, identifier: "ae12f64b7c5f21c8a7a587b34e11b499")
!3617 = !{!3618}
!3618 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3616, file: !2, size: 64, align: 64, elements: !3619, templateParams: !24, identifier: "2746c10df16f696f6e68b1ea0793fa78", discriminator: !3626)
!3619 = !{!3620, !3622}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3618, file: !2, baseType: !3621, size: 64, align: 64, extraData: i64 0)
!3621 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3616, file: !2, size: 64, align: 64, elements: !24, templateParams: !827, identifier: "d30a41e669aacbb8d281554456ed16e")
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3618, file: !2, baseType: !3623, size: 64, align: 64)
!3623 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3616, file: !2, size: 64, align: 64, elements: !3624, templateParams: !827, identifier: "64f3e90d04fbbb3c6ef16191f26a9fe8")
!3624 = !{!3625}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3623, file: !2, baseType: !12, size: 64, align: 64)
!3626 = !DIDerivedType(tag: DW_TAG_member, scope: !3616, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!3627 = !{!3628, !3629, !3630, !3631, !3632, !3634, !3636, !3638, !3640, !3641, !3643, !3645, !3647, !3648, !3650, !3651, !3653, !3654}
!3628 = !DILocalVariable(name: "v", arg: 1, scope: !3613, file: !2292, line: 797, type: !354)
!3629 = !DILocalVariable(name: "is_less", arg: 2, scope: !3613, file: !2292, line: 797, type: !1124)
!3630 = !DILocalVariable(name: "pred", arg: 3, scope: !3613, file: !2292, line: 797, type: !3616)
!3631 = !DILocalVariable(name: "limit", arg: 4, scope: !3613, file: !2292, line: 797, type: !27)
!3632 = !DILocalVariable(name: "was_balanced", scope: !3633, file: !2292, line: 805, type: !421, align: 1)
!3633 = distinct !DILexicalBlock(scope: !3613, file: !2292, line: 805, column: 5)
!3634 = !DILocalVariable(name: "was_partitioned", scope: !3635, file: !2292, line: 807, type: !421, align: 1)
!3635 = distinct !DILexicalBlock(scope: !3633, file: !2292, line: 807, column: 5)
!3636 = !DILocalVariable(name: "len", scope: !3637, file: !2292, line: 810, type: !9, align: 8)
!3637 = distinct !DILexicalBlock(scope: !3635, file: !2292, line: 810, column: 9)
!3638 = !DILocalVariable(name: "pivot", scope: !3639, file: !2292, line: 835, type: !9, align: 8)
!3639 = distinct !DILexicalBlock(scope: !3637, file: !2292, line: 835, column: 9)
!3640 = !DILocalVariable(name: "likely_sorted", scope: !3639, file: !2292, line: 835, type: !421, align: 1)
!3641 = !DILocalVariable(name: "p", scope: !3642, file: !2292, line: 850, type: !12, align: 8)
!3642 = distinct !DILexicalBlock(scope: !3639, file: !2292, line: 850, column: 31)
!3643 = !DILocalVariable(name: "mid", scope: !3644, file: !2292, line: 852, type: !9, align: 8)
!3644 = distinct !DILexicalBlock(scope: !3642, file: !2292, line: 852, column: 17)
!3645 = !DILocalVariable(name: "mid", scope: !3646, file: !2292, line: 861, type: !9, align: 8)
!3646 = distinct !DILexicalBlock(scope: !3639, file: !2292, line: 861, column: 9)
!3647 = !DILocalVariable(name: "was_p", scope: !3646, file: !2292, line: 861, type: !421, align: 1)
!3648 = !DILocalVariable(name: "left", scope: !3649, file: !2292, line: 866, type: !354, align: 8)
!3649 = distinct !DILexicalBlock(scope: !3646, file: !2292, line: 866, column: 9)
!3650 = !DILocalVariable(name: "right", scope: !3649, file: !2292, line: 866, type: !354, align: 8)
!3651 = !DILocalVariable(name: "pivot", scope: !3652, file: !2292, line: 867, type: !354, align: 8)
!3652 = distinct !DILexicalBlock(scope: !3649, file: !2292, line: 867, column: 9)
!3653 = !DILocalVariable(name: "right", scope: !3652, file: !2292, line: 867, type: !354, align: 8)
!3654 = !DILocalVariable(name: "pivot", scope: !3655, file: !2292, line: 868, type: !12, align: 8)
!3655 = distinct !DILexicalBlock(scope: !3652, file: !2292, line: 868, column: 9)
!3656 = !DILocation(line: 797, column: 22, scope: !3613)
!3657 = !DILocation(line: 797, column: 42, scope: !3613)
!3658 = !DILocation(line: 797, column: 59, scope: !3613)
!3659 = !DILocation(line: 797, column: 84, scope: !3613)
!3660 = !DILocation(line: 805, column: 9, scope: !3633)
!3661 = !DILocation(line: 807, column: 9, scope: !3635)
!3662 = !DILocation(line: 805, column: 28, scope: !3613)
!3663 = !DILocation(line: 807, column: 31, scope: !3633)
!3664 = !DILocation(line: 809, column: 5, scope: !3635)
!3665 = !DILocation(line: 810, column: 19, scope: !3635)
!3666 = !DILocation(line: 810, column: 13, scope: !3637)
!3667 = !DILocation(line: 813, column: 12, scope: !3637)
!3668 = !DILocation(line: 822, column: 12, scope: !3637)
!3669 = !DILocation(line: 814, column: 16, scope: !3637)
!3670 = !DILocation(line: 882, column: 2, scope: !3613)
!3671 = !DILocation(line: 815, column: 43, scope: !3637)
!3672 = !DILocation(line: 815, column: 17, scope: !3637)
!3673 = !DILocation(line: 823, column: 22, scope: !3637)
!3674 = !DILocation(line: 823, column: 13, scope: !3637)
!3675 = !DILocation(line: 829, column: 13, scope: !3637)
!3676 = !DILocation(line: 829, column: 12, scope: !3637)
!3677 = !DILocation(line: 835, column: 51, scope: !3637)
!3678 = !DILocation(line: 835, column: 38, scope: !3637)
!3679 = !DILocation(line: 835, column: 14, scope: !3637)
!3680 = !DILocation(line: 835, column: 14, scope: !3639)
!3681 = !DILocation(line: 835, column: 21, scope: !3637)
!3682 = !DILocation(line: 835, column: 21, scope: !3639)
!3683 = !DILocation(line: 839, column: 12, scope: !3639)
!3684 = !DILocation(line: 830, column: 28, scope: !3637)
!3685 = !DILocation(line: 830, column: 13, scope: !3637)
!3686 = !DILocation(line: 831, column: 13, scope: !3637)
!3687 = !DILocation(line: 829, column: 9, scope: !3637)
!3688 = !DILocation(line: 839, column: 28, scope: !3639)
!3689 = !DILocation(line: 850, column: 16, scope: !3642)
!3690 = !DILocation(line: 842, column: 39, scope: !3639)
!3691 = !DILocation(line: 842, column: 16, scope: !3639)
!3692 = !DILocation(line: 850, column: 21, scope: !3642)
!3693 = !DILocation(line: 851, column: 29, scope: !3642)
!3694 = !DILocation(line: 861, column: 38, scope: !3639)
!3695 = !DILocation(line: 861, column: 28, scope: !3639)
!3696 = !DILocation(line: 861, column: 14, scope: !3639)
!3697 = !DILocation(line: 861, column: 14, scope: !3646)
!3698 = !DILocation(line: 861, column: 19, scope: !3639)
!3699 = !DILocation(line: 861, column: 19, scope: !3646)
!3700 = !DILocation(line: 862, column: 38, scope: !3646)
!3701 = !DILocation(line: 851, column: 28, scope: !3642)
!3702 = !DILocation(line: 851, column: 17, scope: !3642)
!3703 = !DILocation(line: 851, column: 16, scope: !3642)
!3704 = !DILocation(line: 852, column: 43, scope: !3642)
!3705 = !DILocation(line: 852, column: 27, scope: !3642)
!3706 = !DILocation(line: 852, column: 21, scope: !3644)
!3707 = !DILocation(line: 855, column: 26, scope: !3644)
!3708 = !DILocation(line: 855, column: 28, scope: !3644)
!3709 = !DILocation(line: 855, column: 17, scope: !3644)
!3710 = !DILocation(line: 1, column: 1, scope: !3711)
!3711 = !DILexicalBlockFile(scope: !3635, file: !3539, discriminator: 0)
!3712 = !DILocation(line: 862, column: 24, scope: !3646)
!3713 = !DILocation(line: 862, column: 52, scope: !3646)
!3714 = !DILocation(line: 862, column: 9, scope: !3646)
!3715 = !DILocation(line: 863, column: 9, scope: !3646)
!3716 = !DILocation(line: 866, column: 29, scope: !3646)
!3717 = !DILocation(line: 866, column: 14, scope: !3646)
!3718 = !DILocation(line: 866, column: 14, scope: !3649)
!3719 = !DILocation(line: 866, column: 20, scope: !3646)
!3720 = !DILocation(line: 866, column: 20, scope: !3649)
!3721 = !DILocation(line: 867, column: 30, scope: !3649)
!3722 = !DILocation(line: 867, column: 14, scope: !3649)
!3723 = !DILocation(line: 867, column: 14, scope: !3652)
!3724 = !DILocation(line: 867, column: 21, scope: !3649)
!3725 = !DILocation(line: 867, column: 21, scope: !3652)
!3726 = !DILocation(line: 868, column: 22, scope: !3652)
!3727 = !DILocation(line: 868, column: 21, scope: !3652)
!3728 = !DILocation(line: 868, column: 13, scope: !3655)
!3729 = !DILocation(line: 873, column: 12, scope: !3655)
!3730 = !DILocation(line: 878, column: 37, scope: !3655)
!3731 = !DILocation(line: 878, column: 50, scope: !3655)
!3732 = !DILocation(line: 878, column: 13, scope: !3655)
!3733 = !DILocation(line: 879, column: 13, scope: !3655)
!3734 = !DILocation(line: 873, column: 9, scope: !3655)
!3735 = !DILocation(line: 874, column: 36, scope: !3655)
!3736 = !DILocation(line: 874, column: 42, scope: !3655)
!3737 = !DILocation(line: 874, column: 13, scope: !3655)
!3738 = !DILocation(line: 875, column: 13, scope: !3655)
!3739 = !DILocation(line: 876, column: 20, scope: !3655)
!3740 = !DILocation(line: 876, column: 13, scope: !3655)
!3741 = distinct !DISubprogram(name: "heapsort<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort17h2d7da8b0b4574961E", scope: !1154, file: !2292, line: 249, type: !2293, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3759, retainedNodes: !3742)
!3742 = !{!3743, !3744, !3745, !3751, !3753, !3755, !3757}
!3743 = !DILocalVariable(name: "v", arg: 1, scope: !3741, file: !2292, line: 249, type: !354)
!3744 = !DILocalVariable(name: "is_less", arg: 2, scope: !3741, file: !2292, line: 249, type: !1124)
!3745 = !DILocalVariable(name: "sift_down", scope: !3746, file: !2292, line: 254, type: !3747, align: 8)
!3746 = distinct !DILexicalBlock(scope: !3741, file: !2292, line: 254, column: 5)
!3747 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", scope: !3748, file: !2, size: 64, align: 64, elements: !3749, templateParams: !24, identifier: "d78c03b7b56aa6cf06eb49df2b3df12")
!3748 = !DINamespace(name: "heapsort", scope: !1154)
!3749 = !{!3750}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__is_less", scope: !3747, file: !2, baseType: !1123, size: 64, align: 64)
!3751 = !DILocalVariable(name: "iter", scope: !3752, file: !2292, line: 282, type: !2411, align: 8)
!3752 = distinct !DILexicalBlock(scope: !3746, file: !2292, line: 282, column: 5)
!3753 = !DILocalVariable(name: "i", scope: !3754, file: !2292, line: 282, type: !9, align: 8)
!3754 = distinct !DILexicalBlock(scope: !3752, file: !2292, line: 282, column: 37)
!3755 = !DILocalVariable(name: "iter", scope: !3756, file: !2292, line: 287, type: !2411, align: 8)
!3756 = distinct !DILexicalBlock(scope: !3746, file: !2292, line: 287, column: 5)
!3757 = !DILocalVariable(name: "i", scope: !3758, file: !2292, line: 287, type: !9, align: 8)
!3758 = distinct !DILexicalBlock(scope: !3756, file: !2292, line: 287, column: 33)
!3759 = !{!191, !3760}
!3760 = !DITemplateTypeParameter(name: "F", type: !1124)
!3761 = !DILocation(line: 249, column: 23, scope: !3741)
!3762 = !DILocation(line: 249, column: 36, scope: !3741)
!3763 = !DILocation(line: 254, column: 9, scope: !3746)
!3764 = !DILocation(line: 282, column: 14, scope: !3752)
!3765 = !DILocation(line: 287, column: 14, scope: !3756)
!3766 = !DILocation(line: 254, column: 25, scope: !3741)
!3767 = !DILocation(line: 282, column: 18, scope: !3746)
!3768 = !DILocation(line: 282, column: 14, scope: !3746)
!3769 = !DILocation(line: 282, column: 5, scope: !3752)
!3770 = !DILocation(line: 287, column: 14, scope: !3746)
!3771 = !DILocation(line: 287, column: 5, scope: !3756)
!3772 = !DILocation(line: 282, column: 9, scope: !3752)
!3773 = !DILocation(line: 282, column: 9, scope: !3754)
!3774 = !DILocation(line: 283, column: 9, scope: !3754)
!3775 = !DILocation(line: 291, column: 2, scope: !3741)
!3776 = !DILocation(line: 287, column: 9, scope: !3756)
!3777 = !DILocation(line: 287, column: 9, scope: !3758)
!3778 = !DILocation(line: 288, column: 9, scope: !3758)
!3779 = !DILocation(line: 289, column: 26, scope: !3758)
!3780 = !DILocation(line: 289, column: 24, scope: !3758)
!3781 = !DILocation(line: 289, column: 9, scope: !3758)
!3782 = distinct !DISubprogram(name: "{closure#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort8heapsort28_$u7b$$u7b$closure$u7d$$u7d$17h14d7d3d1900f16a8E", scope: !3748, file: !2292, line: 254, type: !3783, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3759, retainedNodes: !3786)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{null, !3785, !354, !9}
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::heapsort::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, &mut core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", baseType: !3747, size: 64, align: 64, dwarfAddressSpace: 0)
!3786 = !{!3787, !3788, !3789, !3790}
!3787 = !DILocalVariable(name: "v", arg: 2, scope: !3782, file: !2292, line: 254, type: !354)
!3788 = !DILocalVariable(name: "node", arg: 3, scope: !3782, file: !2292, line: 254, type: !9)
!3789 = !DILocalVariable(name: "is_less", scope: !3782, file: !2292, line: 249, type: !1124, align: 8)
!3790 = !DILocalVariable(name: "child", scope: !3791, file: !2292, line: 257, type: !9, align: 8)
!3791 = distinct !DILexicalBlock(scope: !3782, file: !2292, line: 257, column: 13)
!3792 = !DILocation(line: 249, column: 40, scope: !3782)
!3793 = !DILocation(line: 254, column: 26, scope: !3782)
!3794 = !DILocation(line: 254, column: 39, scope: !3782)
!3795 = !DILocation(line: 257, column: 17, scope: !3791)
!3796 = !DILocation(line: 255, column: 9, scope: !3782)
!3797 = !DILocation(line: 257, column: 33, scope: !3782)
!3798 = !DILocation(line: 257, column: 29, scope: !3782)
!3799 = !DILocation(line: 258, column: 16, scope: !3791)
!3800 = !DILocation(line: 263, column: 16, scope: !3791)
!3801 = !DILocation(line: 279, column: 6, scope: !3782)
!3802 = !DILocation(line: 271, column: 17, scope: !3791)
!3803 = !DILocation(line: 271, column: 28, scope: !3791)
!3804 = !DILocation(line: 271, column: 26, scope: !3791)
!3805 = !DILocation(line: 267, column: 26, scope: !3791)
!3806 = !DILocation(line: 267, column: 37, scope: !3791)
!3807 = !DILocation(line: 267, column: 35, scope: !3791)
!3808 = !DILocation(line: 267, column: 34, scope: !3791)
!3809 = !DILocation(line: 267, column: 48, scope: !3791)
!3810 = !DILocation(line: 267, column: 46, scope: !3791)
!3811 = !DILocation(line: 267, column: 45, scope: !3791)
!3812 = !DILocation(line: 267, column: 17, scope: !3791)
!3813 = !DILocation(line: 263, column: 13, scope: !3791)
!3814 = !DILocation(line: 271, column: 25, scope: !3791)
!3815 = !DILocation(line: 271, column: 38, scope: !3791)
!3816 = !DILocation(line: 271, column: 36, scope: !3791)
!3817 = !DILocation(line: 271, column: 35, scope: !3791)
!3818 = !DILocation(line: 271, column: 16, scope: !3791)
!3819 = !DILocation(line: 276, column: 20, scope: !3791)
!3820 = !DILocation(line: 276, column: 26, scope: !3791)
!3821 = !DILocation(line: 276, column: 13, scope: !3791)
!3822 = !DILocation(line: 277, column: 20, scope: !3791)
!3823 = !DILocation(line: 277, column: 13, scope: !3791)
!3824 = distinct !DISubprogram(name: "partition<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9partition17h87f2ea1a3de93f87E", scope: !1154, file: !2292, line: 560, type: !3825, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !3827)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{!1042, !354, !9, !1124}
!3827 = !{!3828, !3829, !3830, !3831, !3833, !3834, !3836, !3837, !3839, !3841, !3843, !3845, !3847}
!3828 = !DILocalVariable(name: "v", arg: 1, scope: !3824, file: !2292, line: 560, type: !354)
!3829 = !DILocalVariable(name: "pivot", arg: 2, scope: !3824, file: !2292, line: 560, type: !9)
!3830 = !DILocalVariable(name: "is_less", arg: 3, scope: !3824, file: !2292, line: 560, type: !1124)
!3831 = !DILocalVariable(name: "mid", scope: !3832, file: !2292, line: 564, type: !9, align: 8)
!3832 = distinct !DILexicalBlock(scope: !3824, file: !2292, line: 564, column: 5)
!3833 = !DILocalVariable(name: "was_partitioned", scope: !3832, file: !2292, line: 564, type: !421, align: 1)
!3834 = !DILocalVariable(name: "pivot", scope: !3835, file: !2292, line: 567, type: !354, align: 8)
!3835 = distinct !DILexicalBlock(scope: !3824, file: !2292, line: 567, column: 9)
!3836 = !DILocalVariable(name: "v", scope: !3835, file: !2292, line: 567, type: !354, align: 8)
!3837 = !DILocalVariable(name: "pivot", scope: !3838, file: !2292, line: 568, type: !979, align: 8)
!3838 = distinct !DILexicalBlock(scope: !3835, file: !2292, line: 568, column: 9)
!3839 = !DILocalVariable(name: "tmp", scope: !3840, file: !2292, line: 574, type: !645, align: 8)
!3840 = distinct !DILexicalBlock(scope: !3838, file: !2292, line: 574, column: 9)
!3841 = !DILocalVariable(name: "_pivot_guard", scope: !3842, file: !2292, line: 575, type: !1153, align: 8)
!3842 = distinct !DILexicalBlock(scope: !3840, file: !2292, line: 575, column: 9)
!3843 = !DILocalVariable(name: "pivot", scope: !3844, file: !2292, line: 576, type: !12, align: 8)
!3844 = distinct !DILexicalBlock(scope: !3842, file: !2292, line: 576, column: 9)
!3845 = !DILocalVariable(name: "l", scope: !3846, file: !2292, line: 579, type: !9, align: 8)
!3846 = distinct !DILexicalBlock(scope: !3844, file: !2292, line: 579, column: 9)
!3847 = !DILocalVariable(name: "r", scope: !3848, file: !2292, line: 580, type: !9, align: 8)
!3848 = distinct !DILexicalBlock(scope: !3846, file: !2292, line: 580, column: 9)
!3849 = !DILocation(line: 560, column: 20, scope: !3824)
!3850 = !DILocation(line: 560, column: 33, scope: !3824)
!3851 = !DILocation(line: 560, column: 47, scope: !3824)
!3852 = !DILocation(line: 574, column: 13, scope: !3840)
!3853 = !DILocation(line: 575, column: 13, scope: !3842)
!3854 = !DILocation(line: 579, column: 13, scope: !3846)
!3855 = !DILocation(line: 580, column: 13, scope: !3848)
!3856 = !DILocation(line: 566, column: 9, scope: !3824)
!3857 = !DILocation(line: 567, column: 26, scope: !3824)
!3858 = !DILocation(line: 567, column: 14, scope: !3824)
!3859 = !DILocation(line: 567, column: 14, scope: !3835)
!3860 = !DILocation(line: 567, column: 21, scope: !3824)
!3861 = !DILocation(line: 567, column: 21, scope: !3835)
!3862 = !DILocation(line: 568, column: 26, scope: !3835)
!3863 = !DILocation(line: 568, column: 21, scope: !3835)
!3864 = !DILocation(line: 568, column: 13, scope: !3838)
!3865 = !DILocation(line: 574, column: 51, scope: !3838)
!3866 = !DILocation(line: 70, column: 22, scope: !1015, inlinedAt: !3867)
!3867 = distinct !DILocation(line: 574, column: 19, scope: !3838)
!3868 = !DILocation(line: 71, column: 9, scope: !1015, inlinedAt: !3867)
!3869 = !DILocation(line: 153, column: 14, scope: !2329, inlinedAt: !3870)
!3870 = distinct !DILocation(line: 575, column: 50, scope: !3840)
!3871 = !DILocation(line: 575, column: 28, scope: !3840)
!3872 = !DILocation(line: 153, column: 14, scope: !2329, inlinedAt: !3873)
!3873 = distinct !DILocation(line: 576, column: 22, scope: !3842)
!3874 = !DILocation(line: 576, column: 21, scope: !3842)
!3875 = !DILocation(line: 576, column: 13, scope: !3844)
!3876 = !DILocation(line: 579, column: 21, scope: !3844)
!3877 = !DILocation(line: 580, column: 21, scope: !3846)
!3878 = !DILocation(line: 588, column: 13, scope: !3848)
!3879 = !DILocation(line: 588, column: 19, scope: !3848)
!3880 = !DILocation(line: 588, column: 23, scope: !3848)
!3881 = !DILocation(line: 588, column: 52, scope: !3848)
!3882 = !DILocation(line: 588, column: 36, scope: !3848)
!3883 = !DILocation(line: 588, column: 28, scope: !3848)
!3884 = !DILocation(line: 593, column: 19, scope: !3848)
!3885 = !DILocation(line: 593, column: 23, scope: !3848)
!3886 = !DILocation(line: 589, column: 17, scope: !3848)
!3887 = !DILocation(line: 593, column: 53, scope: !3848)
!3888 = !DILocation(line: 593, column: 37, scope: !3848)
!3889 = !DILocation(line: 593, column: 29, scope: !3848)
!3890 = !DILocation(line: 593, column: 28, scope: !3848)
!3891 = !DILocation(line: 598, column: 10, scope: !3848)
!3892 = !DILocation(line: 598, column: 41, scope: !3848)
!3893 = !DILocation(line: 598, column: 44, scope: !3848)
!3894 = !DILocation(line: 598, column: 39, scope: !3848)
!3895 = !DILocation(line: 598, column: 14, scope: !3848)
!3896 = !DILocation(line: 594, column: 17, scope: !3848)
!3897 = !DILocation(line: 593, column: 13, scope: !3848)
!3898 = !DILocation(line: 598, column: 65, scope: !3848)
!3899 = !DILocation(line: 598, column: 70, scope: !3848)
!3900 = !DILocation(line: 598, column: 9, scope: !3848)
!3901 = !DILocation(line: 603, column: 5, scope: !3840)
!3902 = !DILocation(line: 564, column: 10, scope: !3824)
!3903 = !DILocation(line: 564, column: 10, scope: !3832)
!3904 = !DILocation(line: 564, column: 15, scope: !3824)
!3905 = !DILocation(line: 564, column: 15, scope: !3832)
!3906 = !DILocation(line: 606, column: 5, scope: !3832)
!3907 = !DILocation(line: 608, column: 5, scope: !3832)
!3908 = !DILocation(line: 609, column: 2, scope: !3824)
!3909 = distinct !DISubprogram(name: "quicksort<bootloader::bootinfo::memory_map::MemoryRegion, core::slice::{impl#0}::sort_unstable_by::{closure_env#0}<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#0}>>", linkageName: "_ZN4core5slice4sort9quicksort17h903c0e9efaa64e95E", scope: !1154, file: !2292, line: 885, type: !3910, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !2308, retainedNodes: !3912)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{null, !354, !1125}
!3912 = !{!3913, !3914, !3915}
!3913 = !DILocalVariable(name: "v", arg: 1, scope: !3909, file: !2292, line: 885, type: !354)
!3914 = !DILocalVariable(name: "is_less", arg: 2, scope: !3909, file: !2292, line: 885, type: !1125)
!3915 = !DILocalVariable(name: "limit", scope: !3916, file: !2292, line: 895, type: !27, align: 4)
!3916 = distinct !DILexicalBlock(scope: !3909, file: !2292, line: 895, column: 5)
!3917 = !DILocation(line: 885, column: 24, scope: !3909)
!3918 = !DILocation(line: 885, column: 37, scope: !3909)
!3919 = !DILocation(line: 890, column: 8, scope: !3909)
!3920 = !DILocalVariable(name: "self", arg: 1, scope: !3921, file: !1025, line: 148, type: !9)
!3921 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13leading_zeros17hf9bcf93749a642b3E", scope: !1026, file: !1025, line: 148, type: !1209, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !3922)
!3922 = !{!3920}
!3923 = !DILocation(line: 148, column: 36, scope: !3921, inlinedAt: !3924)
!3924 = distinct !DILocation(line: 895, column: 31, scope: !3909)
!3925 = !DILocation(line: 149, column: 13, scope: !3921, inlinedAt: !3924)
!3926 = !DILocation(line: 895, column: 17, scope: !3909)
!3927 = !DILocation(line: 898, column: 1, scope: !3909)
!3928 = !DILocation(line: 898, column: 2, scope: !3909)
!3929 = !DILocation(line: 895, column: 9, scope: !3916)
!3930 = !DILocation(line: 897, column: 30, scope: !3916)
!3931 = !DILocation(line: 897, column: 5, scope: !3916)
!3932 = distinct !DISubprogram(name: "index<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hbe1026989b58af50E", scope: !3933, file: !164, line: 18, type: !3934, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1908, retainedNodes: !3936)
!3933 = !DINamespace(name: "{impl#0}", scope: !166)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{!323, !323, !175, !327}
!3936 = !{!3937, !3938}
!3937 = !DILocalVariable(name: "self", arg: 1, scope: !3932, file: !164, line: 18, type: !323)
!3938 = !DILocalVariable(name: "index", arg: 2, scope: !3932, file: !164, line: 18, type: !175)
!3939 = !DILocation(line: 18, column: 14, scope: !3932)
!3940 = !DILocation(line: 18, column: 21, scope: !3932)
!3941 = !DILocation(line: 19, column: 9, scope: !3932)
!3942 = !DILocation(line: 20, column: 6, scope: !3932)
!3943 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h176acecc10d58840E", scope: !3944, file: !164, line: 30, type: !3945, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1908, retainedNodes: !3947)
!3944 = !DINamespace(name: "{impl#1}", scope: !166)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!354, !354, !175, !327}
!3947 = !{!3948, !3949}
!3948 = !DILocalVariable(name: "self", arg: 1, scope: !3943, file: !164, line: 30, type: !354)
!3949 = !DILocalVariable(name: "index", arg: 2, scope: !3943, file: !164, line: 30, type: !175)
!3950 = !DILocation(line: 30, column: 18, scope: !3943)
!3951 = !DILocation(line: 30, column: 29, scope: !3943)
!3952 = !DILocation(line: 31, column: 9, scope: !3943)
!3953 = !DILocation(line: 32, column: 6, scope: !3943)
!3954 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h52cc5b82e1a95684E", scope: !3944, file: !164, line: 30, type: !3955, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3960, retainedNodes: !3957)
!3955 = !DISubroutineType(types: !3956)
!3956 = !{!354, !354, !373, !327}
!3957 = !{!3958, !3959}
!3958 = !DILocalVariable(name: "self", arg: 1, scope: !3954, file: !164, line: 30, type: !354)
!3959 = !DILocalVariable(name: "index", arg: 2, scope: !3954, file: !164, line: 30, type: !373)
!3960 = !{!191, !3961}
!3961 = !DITemplateTypeParameter(name: "I", type: !373)
!3962 = !DILocation(line: 30, column: 18, scope: !3954)
!3963 = !DILocation(line: 30, column: 29, scope: !3954)
!3964 = !DILocation(line: 31, column: 9, scope: !3954)
!3965 = !DILocation(line: 32, column: 6, scope: !3954)
!3966 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h53f902d89aab6c39E", scope: !3944, file: !164, line: 30, type: !3967, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3972, retainedNodes: !3969)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!354, !354, !387, !327}
!3969 = !{!3970, !3971}
!3970 = !DILocalVariable(name: "self", arg: 1, scope: !3966, file: !164, line: 30, type: !354)
!3971 = !DILocalVariable(name: "index", arg: 2, scope: !3966, file: !164, line: 30, type: !387)
!3972 = !{!191, !3973}
!3973 = !DITemplateTypeParameter(name: "I", type: !387)
!3974 = !DILocation(line: 30, column: 18, scope: !3966)
!3975 = !DILocation(line: 30, column: 29, scope: !3966)
!3976 = !DILocation(line: 31, column: 9, scope: !3966)
!3977 = !DILocation(line: 32, column: 6, scope: !3966)
!3978 = distinct !DISubprogram(name: "index_mut<bootloader::bootinfo::memory_map::MemoryRegion, core::ops::range::RangeToInclusive<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h7ba1bf620277e648E", scope: !3944, file: !164, line: 30, type: !3979, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !3984, retainedNodes: !3981)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!354, !354, !436, !327}
!3981 = !{!3982, !3983}
!3982 = !DILocalVariable(name: "self", arg: 1, scope: !3978, file: !164, line: 30, type: !354)
!3983 = !DILocalVariable(name: "index", arg: 2, scope: !3978, file: !164, line: 30, type: !436)
!3984 = !{!191, !3985}
!3985 = !DITemplateTypeParameter(name: "I", type: !436)
!3986 = !DILocation(line: 30, column: 18, scope: !3978)
!3987 = !DILocation(line: 30, column: 29, scope: !3978)
!3988 = !DILocation(line: 31, column: 9, scope: !3978)
!3989 = !DILocation(line: 32, column: 6, scope: !3978)
!3990 = distinct !DISubprogram(name: "unwrap_or<bootloader::bootinfo::TlsTemplate>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h583182ffc0284589E", scope: !3992, file: !3991, line: 971, type: !4003, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !1520, retainedNodes: !4005)
!3991 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "57ab105cef20f1dc79a065da4ca5bc2f")
!3992 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<bootloader::bootinfo::TlsTemplate>", scope: !479, file: !2, size: 256, align: 64, elements: !3993, templateParams: !24, identifier: "a448e4036a2f42f889ac91706c1fa69a")
!3993 = !{!3994}
!3994 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3992, file: !2, size: 256, align: 64, elements: !3995, templateParams: !24, identifier: "334b94f7fc8c6439786a12a8c57a5c", discriminator: !4002)
!3995 = !{!3996, !3998}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3994, file: !2, baseType: !3997, size: 256, align: 64, extraData: i64 0)
!3997 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3992, file: !2, size: 256, align: 64, elements: !24, templateParams: !1520, identifier: "c0341895136b8403926124b57e3c3f21")
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3994, file: !2, baseType: !3999, size: 256, align: 64, extraData: i64 1)
!3999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3992, file: !2, size: 256, align: 64, elements: !4000, templateParams: !1520, identifier: "1151d9670b342fbe3eed9d69bfd7288")
!4000 = !{!4001}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3999, file: !2, baseType: !109, size: 192, align: 64, offset: 64)
!4002 = !DIDerivedType(tag: DW_TAG_member, scope: !3992, file: !2, baseType: !22, size: 64, align: 64, flags: DIFlagArtificial)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!109, !3992, !109}
!4005 = !{!4006, !4007, !4008}
!4006 = !DILocalVariable(name: "self", arg: 1, scope: !3990, file: !3991, line: 971, type: !3992)
!4007 = !DILocalVariable(name: "default", arg: 2, scope: !3990, file: !3991, line: 971, type: !109)
!4008 = !DILocalVariable(name: "x", scope: !4009, file: !3991, line: 976, type: !109, align: 8)
!4009 = distinct !DILexicalBlock(scope: !3990, file: !3991, line: 976, column: 13)
!4010 = !DILocation(line: 971, column: 28, scope: !3990)
!4011 = !DILocation(line: 971, column: 34, scope: !3990)
!4012 = !DILocation(line: 976, column: 18, scope: !4009)
!4013 = !DILocation(line: 975, column: 15, scope: !3990)
!4014 = !DILocation(line: 975, column: 9, scope: !3990)
!4015 = !DILocation(line: 977, column: 21, scope: !3990)
!4016 = !DILocation(line: 976, column: 18, scope: !3990)
!4017 = !DILocation(line: 976, column: 24, scope: !4009)
!4018 = !DILocation(line: 976, column: 24, scope: !3990)
!4019 = !DILocation(line: 979, column: 5, scope: !3990)
!4020 = !DILocation(line: 979, column: 6, scope: !3990)
!4021 = distinct !DISubprogram(name: "eq", linkageName: "_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h29e22795268aad95E", scope: !4022, file: !728, line: 337, type: !4023, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4026)
!4022 = !DINamespace(name: "{impl#13}", scope: !150)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!421, !4025, !4025}
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cmp::Ordering", baseType: !149, size: 64, align: 64, dwarfAddressSpace: 0)
!4026 = !{!4027, !4028, !4029, !4031}
!4027 = !DILocalVariable(name: "self", arg: 1, scope: !4021, file: !728, line: 337, type: !4025)
!4028 = !DILocalVariable(name: "other", arg: 2, scope: !4021, file: !728, line: 337, type: !4025)
!4029 = !DILocalVariable(name: "__self_tag", scope: !4030, file: !728, line: 337, type: !151, align: 1)
!4030 = distinct !DILexicalBlock(scope: !4021, file: !728, line: 337, column: 33)
!4031 = !DILocalVariable(name: "__arg1_tag", scope: !4032, file: !728, line: 337, type: !151, align: 1)
!4032 = distinct !DILexicalBlock(scope: !4030, file: !728, line: 337, column: 33)
!4033 = !DILocation(line: 337, column: 33, scope: !4021)
!4034 = !DILocation(line: 337, column: 33, scope: !4030)
!4035 = !DILocation(line: 337, column: 33, scope: !4032)
!4036 = !DILocation(line: 337, column: 42, scope: !4021)
!4037 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3761bf7223d13674E", scope: !4039, file: !4038, line: 272, type: !4042, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4046, retainedNodes: !4044)
!4038 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "697d559cdba63f105535b8b53d6ea422")
!4039 = !DINamespace(name: "{impl#0}", scope: !4040)
!4040 = !DINamespace(name: "collect", scope: !4041)
!4041 = !DINamespace(name: "traits", scope: !2414)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!815, !815}
!4044 = !{!4045}
!4045 = !DILocalVariable(name: "self", arg: 1, scope: !4037, file: !4038, line: 272, type: !815)
!4046 = !{!838}
!4047 = !DILocation(line: 272, column: 18, scope: !4037)
!4048 = !DILocation(line: 274, column: 6, scope: !4037)
!4049 = distinct !DISubprogram(name: "get_unchecked<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h99d4e103d214d05bE", scope: !4050, file: !164, line: 230, type: !4051, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4053)
!4050 = !DINamespace(name: "{impl#2}", scope: !166)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!208, !9, !170}
!4053 = !{!4054, !4055, !4056}
!4054 = !DILocalVariable(name: "self", arg: 1, scope: !4049, file: !164, line: 230, type: !9)
!4055 = !DILocalVariable(name: "slice", arg: 2, scope: !4049, file: !164, line: 230, type: !170)
!4056 = !DILocalVariable(name: "this", scope: !4057, file: !164, line: 231, type: !9, align: 8)
!4057 = distinct !DILexicalBlock(scope: !4049, file: !164, line: 231, column: 9)
!4058 = !DILocation(line: 230, column: 29, scope: !4049)
!4059 = !DILocation(line: 231, column: 13, scope: !4057)
!4060 = !DILocation(line: 230, column: 35, scope: !4049)
!4061 = !DILocation(line: 237, column: 13, scope: !4057)
!4062 = !DILocation(line: 241, column: 13, scope: !4057)
!4063 = !DILocation(line: 915, column: 29, scope: !201, inlinedAt: !4064)
!4064 = distinct !DILocation(line: 241, column: 13, scope: !4057)
!4065 = !DILocation(line: 915, column: 35, scope: !201, inlinedAt: !4064)
!4066 = !DILocation(line: 460, column: 32, scope: !215, inlinedAt: !4067)
!4067 = distinct !DILocation(line: 920, column: 18, scope: !201, inlinedAt: !4064)
!4068 = !DILocation(line: 460, column: 38, scope: !215, inlinedAt: !4067)
!4069 = !DILocation(line: 465, column: 18, scope: !215, inlinedAt: !4067)
!4070 = !DILocation(line: 243, column: 6, scope: !4049)
!4071 = !DILocalVariable(name: "this", arg: 1, scope: !4072, file: !229, line: 2484, type: !9)
!4072 = distinct !DISubprogram(name: "runtime<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked7runtime17hb4d7400099143190E", scope: !4073, file: !229, line: 2484, type: !4074, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4076)
!4073 = !DINamespace(name: "get_unchecked", scope: !4050)
!4074 = !DISubroutineType(types: !4075)
!4075 = !{null, !9, !170}
!4076 = !{!4071, !4077}
!4077 = !DILocalVariable(name: "slice", arg: 2, scope: !4072, file: !229, line: 2484, type: !170)
!4078 = !DILocation(line: 2484, column: 39, scope: !4072, inlinedAt: !4079)
!4079 = distinct !DILocation(line: 237, column: 13, scope: !4057)
!4080 = !DILocation(line: 239, column: 63, scope: !4081, inlinedAt: !4079)
!4081 = !DILexicalBlockFile(scope: !4072, file: !164, discriminator: 0)
!4082 = !DILocation(line: 239, column: 56, scope: !4081, inlinedAt: !4079)
!4083 = !DILocation(line: 2485, column: 20, scope: !4072, inlinedAt: !4079)
!4084 = !DILocation(line: 2487, column: 21, scope: !4072, inlinedAt: !4079)
!4085 = distinct !DISubprogram(name: "drop<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN83_$LT$core..slice..sort..InsertionHole$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h459d39f427c87586E", scope: !4086, file: !2292, line: 23, type: !4087, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4090)
!4086 = !DINamespace(name: "{impl#0}", scope: !1154)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{null, !4089}
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::sort::InsertionHole<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !1153, size: 64, align: 64, dwarfAddressSpace: 0)
!4090 = !{!4091}
!4091 = !DILocalVariable(name: "self", arg: 1, scope: !4085, file: !2292, line: 23, type: !4089)
!4092 = !DILocation(line: 23, column: 13, scope: !4085)
!4093 = !DILocation(line: 28, column: 38, scope: !4085)
!4094 = !DILocation(line: 28, column: 48, scope: !4085)
!4095 = !DILocation(line: 28, column: 13, scope: !4085)
!4096 = !DILocation(line: 30, column: 6, scope: !4085)
!4097 = distinct !DISubprogram(name: "next<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h87ad7e6cefe6e715E", scope: !4099, file: !4098, line: 124, type: !4100, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4103)
!4098 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "e0a6a70bd5f0917f8a5f1ac67ed889a4")
!4099 = !DINamespace(name: "{impl#181}", scope: !816)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!3616, !4102}
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<bootloader::bootinfo::memory_map::MemoryRegion>", baseType: !815, size: 64, align: 64, dwarfAddressSpace: 0)
!4103 = !{!4104}
!4104 = !DILocalVariable(name: "self", arg: 1, scope: !4097, file: !4098, line: 124, type: !4102)
!4105 = !DILocation(line: 124, column: 21, scope: !4097)
!4106 = !DILocation(line: 132, column: 29, scope: !4097)
!4107 = !DILocalVariable(name: "self", arg: 1, scope: !4108, file: !1688, line: 325, type: !819)
!4108 = distinct !DISubprogram(name: "as_ptr<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hedd722923a3d67cbE", scope: !819, file: !1688, line: 325, type: !4109, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4111)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!272, !819}
!4111 = !{!4107}
!4112 = !DILocation(line: 325, column: 25, scope: !4108, inlinedAt: !4113)
!4113 = distinct !DILocation(line: 132, column: 29, scope: !4097)
!4114 = !DILocation(line: 132, column: 28, scope: !4097)
!4115 = !DILocation(line: 132, column: 21, scope: !4097)
!4116 = !DILocation(line: 133, column: 24, scope: !4097)
!4117 = !DILocation(line: 136, column: 24, scope: !4097)
!4118 = !DILocation(line: 325, column: 25, scope: !4108, inlinedAt: !4119)
!4119 = distinct !DILocation(line: 136, column: 24, scope: !4097)
!4120 = !DILocation(line: 134, column: 33, scope: !4097)
!4121 = !DILocation(line: 134, column: 32, scope: !4097)
!4122 = !DILocation(line: 134, column: 25, scope: !4097)
!4123 = !DILocation(line: 133, column: 21, scope: !4097)
!4124 = !DILocalVariable(name: "self", arg: 1, scope: !4125, file: !4098, line: 75, type: !4102)
!4125 = distinct !DISubprogram(name: "post_inc_start<bootloader::bootinfo::memory_map::MemoryRegion>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h6fbb0c3579efccc3E", scope: !815, file: !4098, line: 75, type: !4126, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !190, retainedNodes: !4128)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!208, !4102, !9}
!4128 = !{!4124, !4129, !4130}
!4129 = !DILocalVariable(name: "offset", arg: 2, scope: !4125, file: !4098, line: 75, type: !9)
!4130 = !DILocalVariable(name: "old", scope: !4131, file: !4098, line: 80, type: !272, align: 8)
!4131 = distinct !DILexicalBlock(scope: !4125, file: !4098, line: 80, column: 21)
!4132 = !DILocation(line: 75, column: 38, scope: !4125, inlinedAt: !4133)
!4133 = distinct !DILocation(line: 139, column: 30, scope: !4097)
!4134 = !DILocation(line: 75, column: 49, scope: !4125, inlinedAt: !4133)
!4135 = !DILocation(line: 80, column: 31, scope: !4125, inlinedAt: !4133)
!4136 = !DILocation(line: 325, column: 25, scope: !4108, inlinedAt: !4137)
!4137 = distinct !DILocation(line: 80, column: 31, scope: !4125, inlinedAt: !4133)
!4138 = !DILocation(line: 80, column: 25, scope: !4131, inlinedAt: !4133)
!4139 = !DILocation(line: 83, column: 64, scope: !4131, inlinedAt: !4133)
!4140 = !DILocation(line: 325, column: 25, scope: !4108, inlinedAt: !4141)
!4141 = distinct !DILocation(line: 83, column: 64, scope: !4131, inlinedAt: !4133)
!4142 = !DILocation(line: 1015, column: 29, scope: !277, inlinedAt: !4143)
!4143 = distinct !DILocation(line: 83, column: 64, scope: !4131, inlinedAt: !4133)
!4144 = !DILocation(line: 1015, column: 35, scope: !277, inlinedAt: !4143)
!4145 = !DILocation(line: 472, column: 32, scope: !287, inlinedAt: !4146)
!4146 = distinct !DILocation(line: 1020, column: 18, scope: !277, inlinedAt: !4143)
!4147 = !DILocation(line: 472, column: 38, scope: !287, inlinedAt: !4146)
!4148 = !DILocation(line: 479, column: 18, scope: !287, inlinedAt: !4146)
!4149 = !DILocation(line: 83, column: 41, scope: !4131, inlinedAt: !4133)
!4150 = !DILocation(line: 83, column: 21, scope: !4131, inlinedAt: !4133)
!4151 = !DILocation(line: 84, column: 21, scope: !4131, inlinedAt: !4133)
!4152 = !DILocation(line: 86, column: 14, scope: !4125, inlinedAt: !4133)
!4153 = !DILocation(line: 139, column: 25, scope: !4097)
!4154 = !DILocation(line: 136, column: 21, scope: !4097)
!4155 = !DILocation(line: 137, column: 25, scope: !4097)
!4156 = !DILocation(line: 142, column: 14, scope: !4097)
!4157 = distinct !DISubprogram(name: "position<bootloader::bootinfo::memory_map::MemoryRegion, bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17he1e266e8c4f61001E", scope: !4099, file: !4098, line: 278, type: !4158, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !4172, retainedNodes: !4161)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!478, !4102, !4160}
!4160 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !1132, file: !2, align: 8, elements: !24, identifier: "6527abba61724e9b85e6f2a8124dba84")
!4161 = !{!4162, !4163, !4164, !4166, !4168, !4170}
!4162 = !DILocalVariable(name: "self", arg: 1, scope: !4157, file: !4098, line: 278, type: !4102)
!4163 = !DILocalVariable(name: "predicate", arg: 2, scope: !4157, file: !4098, line: 278, type: !4160)
!4164 = !DILocalVariable(name: "n", scope: !4165, file: !4098, line: 282, type: !9, align: 8)
!4165 = distinct !DILexicalBlock(scope: !4157, file: !4098, line: 282, column: 17)
!4166 = !DILocalVariable(name: "start", scope: !4167, file: !4098, line: 282, type: !819, align: 8)
!4167 = distinct !DILexicalBlock(scope: !4157, file: !4098, line: 16, column: 9)
!4168 = !DILocalVariable(name: "i", scope: !4169, file: !4098, line: 283, type: !9, align: 8)
!4169 = distinct !DILexicalBlock(scope: !4165, file: !4098, line: 283, column: 17)
!4170 = !DILocalVariable(name: "x", scope: !4171, file: !4098, line: 284, type: !12, align: 8)
!4171 = distinct !DILexicalBlock(scope: !4169, file: !4098, line: 284, column: 49)
!4172 = !{!191, !4173}
!4173 = !DITemplateTypeParameter(name: "P", type: !4160)
!4174 = !DILocation(line: 278, column: 28, scope: !4157)
!4175 = !DILocation(line: 278, column: 39, scope: !4157)
!4176 = !DILocation(line: 282, column: 21, scope: !4165)
!4177 = !DILocation(line: 283, column: 21, scope: !4169)
!4178 = !DILocation(line: 282, column: 25, scope: !4157)
!4179 = !DILocation(line: 282, column: 25, scope: !4167)
!4180 = !DILocation(line: 325, column: 25, scope: !4108, inlinedAt: !4181)
!4181 = distinct !DILocation(line: 282, column: 25, scope: !4167)
!4182 = !DILocation(line: 203, column: 17, scope: !549, inlinedAt: !4183)
!4183 = distinct !DILocation(line: 282, column: 25, scope: !4167)
!4184 = !DILocation(line: 58, column: 26, scope: !556, inlinedAt: !4185)
!4185 = distinct !DILocation(line: 207, column: 33, scope: !549, inlinedAt: !4183)
!4186 = !DILocation(line: 207, column: 18, scope: !549, inlinedAt: !4183)
!4187 = !DILocation(line: 325, column: 25, scope: !4108, inlinedAt: !4188)
!4188 = distinct !DILocation(line: 282, column: 25, scope: !4167)
!4189 = !DILocation(line: 209, column: 17, scope: !3486, inlinedAt: !4190)
!4190 = distinct !DILocation(line: 282, column: 25, scope: !4167)
!4191 = !DILocation(line: 57, column: 26, scope: !1289, inlinedAt: !4192)
!4192 = distinct !DILocation(line: 213, column: 33, scope: !3486, inlinedAt: !4190)
!4193 = !DILocation(line: 213, column: 18, scope: !3486, inlinedAt: !4190)
!4194 = !DILocalVariable(name: "self", arg: 1, scope: !4195, file: !1025, line: 1229, type: !9)
!4195 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h4f18fdc61c865ee1E", scope: !1026, file: !1025, line: 1229, type: !4196, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4198)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{!9, !9, !9}
!4198 = !{!4194, !4199}
!4199 = !DILocalVariable(name: "rhs", arg: 2, scope: !4195, file: !1025, line: 1229, type: !9)
!4200 = !DILocation(line: 1229, column: 35, scope: !4195, inlinedAt: !4201)
!4201 = distinct !DILocation(line: 282, column: 25, scope: !4167)
!4202 = !DILocation(line: 1229, column: 41, scope: !4195, inlinedAt: !4201)
!4203 = !DILocation(line: 1230, column: 13, scope: !4195, inlinedAt: !4201)
!4204 = !DILocation(line: 283, column: 29, scope: !4165)
!4205 = !DILocation(line: 284, column: 17, scope: !4169)
!4206 = !DILocation(line: 284, column: 37, scope: !4171)
!4207 = !DILocation(line: 284, column: 27, scope: !4171)
!4208 = !DILocation(line: 284, column: 32, scope: !4171)
!4209 = !DILocation(line: 285, column: 24, scope: !4171)
!4210 = !DILocation(line: 293, column: 17, scope: !4169)
!4211 = !DILocation(line: 294, column: 13, scope: !4157)
!4212 = !DILocation(line: 294, column: 14, scope: !4157)
!4213 = !DILocation(line: 291, column: 21, scope: !4171)
!4214 = !DILocation(line: 288, column: 41, scope: !4171)
!4215 = !DILocation(line: 288, column: 45, scope: !4171)
!4216 = !DILocation(line: 288, column: 34, scope: !4171)
!4217 = !DILocation(line: 289, column: 37, scope: !4171)
!4218 = !DILocation(line: 289, column: 32, scope: !4171)
!4219 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap3new17h19581f2cdc968dfcE", scope: !94, file: !4220, line: 20, type: !4221, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !24)
!4220 = !DIFile(filename: "src/bootinfo/memory_map.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "e5c49912468d9331b5d84640370affee")
!4221 = !DISubroutineType(types: !4222)
!4222 = !{!94}
!4223 = !DILocation(line: 22, column: 23, scope: !4219)
!4224 = !DILocation(line: 22, column: 22, scope: !4219)
!4225 = !DILocation(line: 21, column: 9, scope: !4219)
!4226 = !DILocation(line: 25, column: 6, scope: !4219)
!4227 = distinct !DISubprogram(name: "add_region", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap10add_region17ha28c1bb8fc49505bE", scope: !94, file: !4220, line: 27, type: !4228, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4231)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{null, !4230, !13}
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4231 = !{!4232, !4233}
!4232 = !DILocalVariable(name: "self", arg: 1, scope: !4227, file: !4220, line: 27, type: !4230)
!4233 = !DILocalVariable(name: "region", arg: 2, scope: !4227, file: !4220, line: 27, type: !13)
!4234 = !DILocation(line: 27, column: 23, scope: !4227)
!4235 = !DILocation(line: 27, column: 34, scope: !4227)
!4236 = !DILocation(line: 29, column: 13, scope: !4227)
!4237 = !DILocation(line: 28, column: 9, scope: !4227)
!4238 = !DILocation(line: 32, column: 22, scope: !4227)
!4239 = !DILocation(line: 32, column: 9, scope: !4227)
!4240 = !DILocation(line: 33, column: 9, scope: !4227)
!4241 = !DILocation(line: 34, column: 9, scope: !4227)
!4242 = !DILocation(line: 35, column: 6, scope: !4227)
!4243 = distinct !DISubprogram(name: "sort", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort17h0675b1819533f2e2E", scope: !94, file: !4220, line: 37, type: !4244, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4246)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{null, !4230}
!4246 = !{!4247, !4248}
!4247 = !DILocalVariable(name: "self", arg: 1, scope: !4243, file: !4220, line: 37, type: !4230)
!4248 = !DILocalVariable(name: "first_zero_index", scope: !4249, file: !4220, line: 58, type: !9, align: 8)
!4249 = distinct !DILexicalBlock(scope: !4243, file: !4220, line: 58, column: 94)
!4250 = !DILocation(line: 37, column: 17, scope: !4243)
!4251 = !DILocation(line: 40, column: 9, scope: !4243)
!4252 = !DILocation(line: 58, column: 41, scope: !4249)
!4253 = !DILocation(line: 58, column: 16, scope: !4249)
!4254 = !DILocation(line: 58, column: 21, scope: !4249)
!4255 = !DILocation(line: 59, column: 13, scope: !4249)
!4256 = !DILocation(line: 58, column: 9, scope: !4243)
!4257 = !DILocation(line: 61, column: 6, scope: !4243)
!4258 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17h6df439cb131128d4E", scope: !1132, file: !4220, line: 40, type: !4259, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4261)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!149, !1130, !12, !12}
!4261 = !{!4262, !4263, !4264, !4266}
!4262 = !DILocalVariable(name: "r1", arg: 2, scope: !4258, file: !4220, line: 40, type: !12)
!4263 = !DILocalVariable(name: "r2", arg: 3, scope: !4258, file: !4220, line: 40, type: !12)
!4264 = !DILocalVariable(name: "ordering", scope: !4265, file: !4220, line: 46, type: !149, align: 1)
!4265 = distinct !DILexicalBlock(scope: !4258, file: !4220, line: 46, column: 17)
!4266 = !DILocalVariable(arg: 1, scope: !4258, file: !4220, line: 40, type: !1130)
!4267 = !DILocation(line: 40, column: 39, scope: !4258)
!4268 = !DILocation(line: 40, column: 40, scope: !4258)
!4269 = !DILocation(line: 40, column: 44, scope: !4258)
!4270 = !DILocation(line: 46, column: 21, scope: !4265)
!4271 = !DILocation(line: 41, column: 16, scope: !4258)
!4272 = !DILocation(line: 43, column: 23, scope: !4258)
!4273 = !DILocation(line: 42, column: 17, scope: !4258)
!4274 = !DILocation(line: 41, column: 13, scope: !4258)
!4275 = !DILocation(line: 57, column: 10, scope: !4258)
!4276 = !DILocation(line: 46, column: 32, scope: !4258)
!4277 = !DILocation(line: 51, column: 20, scope: !4265)
!4278 = !DILocation(line: 44, column: 17, scope: !4258)
!4279 = !DILocation(line: 43, column: 20, scope: !4258)
!4280 = !DILocation(line: 54, column: 21, scope: !4265)
!4281 = !DILocation(line: 51, column: 17, scope: !4265)
!4282 = !DILocation(line: 52, column: 21, scope: !4265)
!4283 = !DILocation(line: 52, column: 51, scope: !4265)
!4284 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap4sort28_$u7b$$u7b$closure$u7d$$u7d$17hdd03e0a910a0aaf0E", scope: !1132, file: !4220, line: 58, type: !4285, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4288)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{!421, !4287, !12}
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bootloader::bootinfo::memory_map::{impl#0}::sort::{closure_env#1}", baseType: !4160, size: 64, align: 64, dwarfAddressSpace: 0)
!4288 = !{!4289, !4290}
!4289 = !DILocalVariable(name: "r", arg: 2, scope: !4284, file: !4220, line: 58, type: !12)
!4290 = !DILocalVariable(arg: 1, scope: !4284, file: !4220, line: 58, type: !4287)
!4291 = !DILocation(line: 58, column: 70, scope: !4284)
!4292 = !DILocation(line: 58, column: 71, scope: !4284)
!4293 = !DILocation(line: 58, column: 74, scope: !4284)
!4294 = !DILocation(line: 58, column: 92, scope: !4284)
!4295 = distinct !DISubprogram(name: "next_entry_index", linkageName: "_ZN10bootloader8bootinfo10memory_map9MemoryMap16next_entry_index17h447656e1418596dcE", scope: !94, file: !4220, line: 63, type: !4296, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4299)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{!9, !4298}
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::MemoryMap", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!4299 = !{!4300}
!4300 = !DILocalVariable(name: "self", arg: 1, scope: !4295, file: !4220, line: 63, type: !4298)
!4301 = !DILocation(line: 63, column: 25, scope: !4295)
!4302 = !DILocation(line: 64, column: 9, scope: !4295)
!4303 = !DILocation(line: 65, column: 6, scope: !4295)
!4304 = distinct !DISubprogram(name: "deref", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..Deref$GT$5deref17he7ebf81a8ba9549eE", scope: !4305, file: !4220, line: 71, type: !4306, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4308)
!4305 = !DINamespace(name: "{impl#1}", scope: !14)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!323, !4298}
!4308 = !{!4309}
!4309 = !DILocalVariable(name: "self", arg: 1, scope: !4304, file: !4220, line: 71, type: !4298)
!4310 = !DILocation(line: 71, column: 14, scope: !4304)
!4311 = !DILocation(line: 72, column: 26, scope: !4304)
!4312 = !DILocation(line: 72, column: 23, scope: !4304)
!4313 = !DILocation(line: 72, column: 10, scope: !4304)
!4314 = !DILocation(line: 73, column: 6, scope: !4304)
!4315 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN90_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h5048dea0a15ea664E", scope: !4316, file: !4220, line: 77, type: !4317, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4319)
!4316 = !DINamespace(name: "{impl#2}", scope: !14)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{!354, !4230}
!4319 = !{!4320, !4321}
!4320 = !DILocalVariable(name: "self", arg: 1, scope: !4315, file: !4220, line: 77, type: !4230)
!4321 = !DILocalVariable(name: "next_index", scope: !4322, file: !4220, line: 78, type: !9, align: 8)
!4322 = distinct !DILexicalBlock(scope: !4315, file: !4220, line: 78, column: 9)
!4323 = !DILocation(line: 77, column: 18, scope: !4315)
!4324 = !DILocation(line: 78, column: 26, scope: !4315)
!4325 = !DILocation(line: 78, column: 13, scope: !4322)
!4326 = !DILocation(line: 79, column: 27, scope: !4322)
!4327 = !DILocation(line: 79, column: 14, scope: !4322)
!4328 = !DILocation(line: 80, column: 6, scope: !4315)
!4329 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN80_$LT$bootloader..bootinfo..memory_map..MemoryMap$u20$as$u20$core..fmt..Debug$GT$3fmt17h718019e44c05edf8E", scope: !4330, file: !4220, line: 84, type: !4331, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4333)
!4330 = !DINamespace(name: "{impl#3}", scope: !14)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{!451, !4298, !470}
!4333 = !{!4334, !4335}
!4334 = !DILocalVariable(name: "self", arg: 1, scope: !4329, file: !4220, line: 84, type: !4298)
!4335 = !DILocalVariable(name: "f", arg: 2, scope: !4329, file: !4220, line: 84, type: !470)
!4336 = !DILocation(line: 84, column: 12, scope: !4329)
!4337 = !DILocation(line: 84, column: 19, scope: !4329)
!4338 = !DILocation(line: 85, column: 9, scope: !4329)
!4339 = !DILocation(line: 85, column: 32, scope: !4329)
!4340 = !DILocation(line: 86, column: 6, scope: !4329)
!4341 = distinct !DISubprogram(name: "empty", linkageName: "_ZN10bootloader8bootinfo10memory_map12MemoryRegion5empty17h7846679ddb33f5d1E", scope: !13, file: !4220, line: 101, type: !4342, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !24)
!4342 = !DISubroutineType(types: !4343)
!4343 = !{!13}
!4344 = !DILocation(line: 103, column: 20, scope: !4341)
!4345 = !DILocation(line: 107, column: 26, scope: !4341)
!4346 = !DILocation(line: 102, column: 9, scope: !4341)
!4347 = !{i32 0, i32 15}
!4348 = !DILocation(line: 109, column: 6, scope: !4341)
!4349 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange3new17h145be941f8c3cf5bE", scope: !19, file: !4220, line: 132, type: !4350, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4352)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!19, !22, !22}
!4352 = !{!4353, !4354, !4355}
!4353 = !DILocalVariable(name: "start_addr", arg: 1, scope: !4349, file: !4220, line: 132, type: !22)
!4354 = !DILocalVariable(name: "end_addr", arg: 2, scope: !4349, file: !4220, line: 132, type: !22)
!4355 = !DILocalVariable(name: "last_byte", scope: !4356, file: !4220, line: 133, type: !22, align: 8)
!4356 = distinct !DILexicalBlock(scope: !4349, file: !4220, line: 133, column: 9)
!4357 = !DILocation(line: 132, column: 16, scope: !4349)
!4358 = !DILocation(line: 132, column: 33, scope: !4349)
!4359 = !DILocation(line: 133, column: 25, scope: !4349)
!4360 = !DILocation(line: 133, column: 13, scope: !4356)
!4361 = !DILocation(line: 135, column: 33, scope: !4356)
!4362 = !DILocation(line: 136, column: 31, scope: !4356)
!4363 = !DILocation(line: 134, column: 9, scope: !4356)
!4364 = !DILocation(line: 138, column: 6, scope: !4349)
!4365 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8is_empty17h3f5bd5fd6d0049e1E", scope: !19, file: !4220, line: 141, type: !4366, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4369)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{!421, !4368}
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::FrameRange", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!4369 = !{!4370}
!4370 = !DILocalVariable(name: "self", arg: 1, scope: !4365, file: !4220, line: 141, type: !4368)
!4371 = !DILocation(line: 141, column: 21, scope: !4365)
!4372 = !DILocation(line: 142, column: 9, scope: !4365)
!4373 = !DILocation(line: 142, column: 36, scope: !4365)
!4374 = !DILocation(line: 143, column: 6, scope: !4365)
!4375 = distinct !DISubprogram(name: "start_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange10start_addr17haa1e939e14c7f571E", scope: !19, file: !4220, line: 146, type: !4376, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4378)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!22, !4368}
!4378 = !{!4379}
!4379 = !DILocalVariable(name: "self", arg: 1, scope: !4375, file: !4220, line: 146, type: !4368)
!4380 = !DILocation(line: 146, column: 23, scope: !4375)
!4381 = !DILocation(line: 147, column: 9, scope: !4375)
!4382 = !DILocation(line: 148, column: 6, scope: !4375)
!4383 = distinct !DISubprogram(name: "end_addr", linkageName: "_ZN10bootloader8bootinfo10memory_map10FrameRange8end_addr17h8dd5e82363d5e28fE", scope: !19, file: !4220, line: 151, type: !4376, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4384)
!4384 = !{!4385}
!4385 = !DILocalVariable(name: "self", arg: 1, scope: !4383, file: !4220, line: 151, type: !4368)
!4386 = !DILocation(line: 151, column: 21, scope: !4383)
!4387 = !DILocation(line: 152, column: 9, scope: !4383)
!4388 = !DILocation(line: 153, column: 6, scope: !4383)
!4389 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN81_$LT$bootloader..bootinfo..memory_map..FrameRange$u20$as$u20$core..fmt..Debug$GT$3fmt17h9cd311b58a6b23e2E", scope: !4390, file: !4220, line: 157, type: !4391, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4393)
!4390 = !DINamespace(name: "{impl#6}", scope: !14)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{!451, !4368, !470}
!4393 = !{!4394, !4395}
!4394 = !DILocalVariable(name: "self", arg: 1, scope: !4389, file: !4220, line: 157, type: !4368)
!4395 = !DILocalVariable(name: "f", arg: 2, scope: !4389, file: !4220, line: 157, type: !470)
!4396 = !DILocation(line: 157, column: 12, scope: !4389)
!4397 = !DILocation(line: 157, column: 19, scope: !4389)
!4398 = !DILocation(line: 161, column: 13, scope: !4389)
!4399 = !DILocation(line: 158, column: 9, scope: !4389)
!4400 = !DILocation(line: 162, column: 13, scope: !4389)
!4401 = !{i8 0, i8 4}
!4402 = !{i64 0, i64 3}
!4403 = !DILocalVariable(name: "position", arg: 1, scope: !4404, file: !4405, line: 28, type: !9)
!4404 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core3fmt2rt2v18Argument3new17h5f45151c0e41afecE", scope: !871, file: !4405, line: 27, type: !4406, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4408)
!4405 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/rt/v1.rs", directory: "", checksumkind: CSK_MD5, checksum: "9501c7f9488d296f432c394ba18730ac")
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!871, !9, !475, !139, !27, !881, !881}
!4408 = !{!4403, !4409, !4410, !4411, !4412, !4413}
!4409 = !DILocalVariable(name: "fill", arg: 2, scope: !4404, file: !4405, line: 29, type: !475)
!4410 = !DILocalVariable(name: "align", arg: 3, scope: !4404, file: !4405, line: 30, type: !139)
!4411 = !DILocalVariable(name: "flags", arg: 4, scope: !4404, file: !4405, line: 31, type: !27)
!4412 = !DILocalVariable(name: "precision", arg: 5, scope: !4404, file: !4405, line: 32, type: !881)
!4413 = !DILocalVariable(name: "width", arg: 6, scope: !4404, file: !4405, line: 33, type: !881)
!4414 = !DILocation(line: 28, column: 9, scope: !4404, inlinedAt: !4415)
!4415 = distinct !DILocation(line: 158, column: 9, scope: !4389)
!4416 = !DILocation(line: 29, column: 9, scope: !4404, inlinedAt: !4415)
!4417 = !DILocation(line: 30, column: 9, scope: !4404, inlinedAt: !4415)
!4418 = !DILocation(line: 31, column: 9, scope: !4404, inlinedAt: !4415)
!4419 = !DILocation(line: 32, column: 9, scope: !4404, inlinedAt: !4415)
!4420 = !DILocation(line: 33, column: 9, scope: !4404, inlinedAt: !4415)
!4421 = !DILocation(line: 35, column: 34, scope: !4404, inlinedAt: !4415)
!4422 = !DILocation(line: 35, column: 9, scope: !4404, inlinedAt: !4415)
!4423 = !DILocation(line: 28, column: 9, scope: !4404, inlinedAt: !4424)
!4424 = distinct !DILocation(line: 158, column: 9, scope: !4389)
!4425 = !DILocation(line: 29, column: 9, scope: !4404, inlinedAt: !4424)
!4426 = !DILocation(line: 30, column: 9, scope: !4404, inlinedAt: !4424)
!4427 = !DILocation(line: 31, column: 9, scope: !4404, inlinedAt: !4424)
!4428 = !DILocation(line: 32, column: 9, scope: !4404, inlinedAt: !4424)
!4429 = !DILocation(line: 33, column: 9, scope: !4404, inlinedAt: !4424)
!4430 = !DILocation(line: 35, column: 34, scope: !4404, inlinedAt: !4424)
!4431 = !DILocation(line: 35, column: 9, scope: !4404, inlinedAt: !4424)
!4432 = !DILocation(line: 164, column: 6, scope: !4389)
!4433 = distinct !DISubprogram(name: "from", linkageName: "_ZN144_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..convert..From$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$GT$$GT$4from17h389087728973804bE", scope: !4434, file: !4220, line: 218, type: !4435, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4443)
!4434 = !DINamespace(name: "{impl#7}", scope: !14)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!13, !4437}
!4437 = !DICompositeType(tag: DW_TAG_structure_type, name: "E820MemoryRegion", scope: !14, file: !2, size: 192, align: 64, elements: !4438, templateParams: !24, identifier: "a8dbb41f512c6edfd539e466b4eddc08")
!4438 = !{!4439, !4440, !4441, !4442}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "start_addr", scope: !4437, file: !2, baseType: !22, size: 64, align: 64)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4437, file: !2, baseType: !22, size: 64, align: 64, offset: 64)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !4437, file: !2, baseType: !27, size: 32, align: 32, offset: 128)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_extended_attributes", scope: !4437, file: !2, baseType: !27, size: 32, align: 32, offset: 160)
!4443 = !{!4444, !4445, !4447}
!4444 = !DILocalVariable(name: "region", arg: 1, scope: !4433, file: !4220, line: 218, type: !4437)
!4445 = !DILocalVariable(name: "region_type", scope: !4446, file: !4220, line: 219, type: !26, align: 4)
!4446 = distinct !DILexicalBlock(scope: !4433, file: !4220, line: 219, column: 9)
!4447 = !DILocalVariable(name: "t", scope: !4448, file: !4220, line: 225, type: !27, align: 4)
!4448 = distinct !DILexicalBlock(scope: !4433, file: !4220, line: 225, column: 13)
!4449 = !DILocation(line: 218, column: 13, scope: !4433)
!4450 = !DILocation(line: 219, column: 13, scope: !4446)
!4451 = !DILocation(line: 225, column: 13, scope: !4448)
!4452 = !DILocation(line: 219, column: 27, scope: !4433)
!4453 = !DILocation(line: 225, column: 13, scope: !4433)
!4454 = !DILocation(line: 225, column: 18, scope: !4448)
!4455 = !DILocation(line: 220, column: 18, scope: !4433)
!4456 = !DILocation(line: 221, column: 18, scope: !4433)
!4457 = !DILocation(line: 222, column: 18, scope: !4433)
!4458 = !DILocation(line: 223, column: 18, scope: !4433)
!4459 = !DILocation(line: 224, column: 18, scope: !4433)
!4460 = !DILocation(line: 228, column: 36, scope: !4446)
!4461 = !DILocation(line: 228, column: 55, scope: !4446)
!4462 = !DILocation(line: 228, column: 75, scope: !4446)
!4463 = !DILocation(line: 228, column: 20, scope: !4446)
!4464 = !DILocation(line: 229, column: 13, scope: !4446)
!4465 = !DILocation(line: 227, column: 9, scope: !4446)
!4466 = !DILocation(line: 231, column: 6, scope: !4433)
!4467 = distinct !DISubprogram(name: "new", linkageName: "_ZN10bootloader8bootinfo8BootInfo3new17hf77ec1cee112fe9fE", scope: !4469, file: !4468, line: 53, type: !4474, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4476)
!4468 = !DIFile(filename: "src/bootinfo/mod.rs", directory: "/Users/yaw/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bootloader-0.9.23", checksumkind: CSK_MD5, checksum: "a171ea6c439575860461f3a713fd0ff5")
!4469 = !DICompositeType(tag: DW_TAG_structure_type, name: "BootInfo", scope: !15, file: !2, size: 12608, align: 64, elements: !4470, templateParams: !24, identifier: "625a329a5374891e2e12029c489e208f")
!4470 = !{!4471, !4472, !4473}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "memory_map", scope: !4469, file: !2, baseType: !94, size: 12352, align: 64)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "tls_template", scope: !4469, file: !2, baseType: !109, size: 192, align: 64, offset: 12352)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "_non_exhaustive", scope: !4469, file: !2, baseType: !123, size: 8, align: 8, offset: 12544)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!4469, !94, !3992, !22, !22}
!4476 = !{!4477, !4478, !4479, !4480, !4481}
!4477 = !DILocalVariable(name: "memory_map", arg: 1, scope: !4467, file: !4468, line: 54, type: !94)
!4478 = !DILocalVariable(name: "tls_template", arg: 2, scope: !4467, file: !4468, line: 55, type: !3992)
!4479 = !DILocalVariable(name: "recursive_page_table_addr", arg: 3, scope: !4467, file: !4468, line: 56, type: !22)
!4480 = !DILocalVariable(name: "physical_memory_offset", arg: 4, scope: !4467, file: !4468, line: 57, type: !22)
!4481 = !DILocalVariable(name: "tls_template", scope: !4482, file: !4468, line: 59, type: !109, align: 8)
!4482 = distinct !DILexicalBlock(scope: !4467, file: !4468, line: 59, column: 9)
!4483 = !DILocation(line: 54, column: 9, scope: !4467)
!4484 = !DILocation(line: 55, column: 9, scope: !4467)
!4485 = !DILocation(line: 56, column: 9, scope: !4467)
!4486 = !DILocation(line: 57, column: 9, scope: !4467)
!4487 = !DILocation(line: 59, column: 13, scope: !4482)
!4488 = !DILocation(line: 59, column: 51, scope: !4467)
!4489 = !DILocation(line: 59, column: 28, scope: !4467)
!4490 = !DILocation(line: 66, column: 13, scope: !4482)
!4491 = !DILocation(line: 64, column: 9, scope: !4482)
!4492 = !DILocation(line: 73, column: 6, scope: !4467)
!4493 = distinct !DISubprogram(name: "tls_template", linkageName: "_ZN10bootloader8bootinfo8BootInfo12tls_template17h0bc4711751e66ce9E", scope: !4469, file: !4468, line: 81, type: !4494, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4497)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{!3992, !4496}
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::BootInfo", baseType: !4469, size: 64, align: 64, dwarfAddressSpace: 0)
!4497 = !{!4498}
!4498 = !DILocalVariable(name: "self", arg: 1, scope: !4493, file: !4468, line: 81, type: !4496)
!4499 = !DILocation(line: 81, column: 25, scope: !4493)
!4500 = !DILocation(line: 82, column: 12, scope: !4493)
!4501 = !DILocation(line: 85, column: 13, scope: !4493)
!4502 = !DILocation(line: 82, column: 9, scope: !4493)
!4503 = !DILocation(line: 83, column: 18, scope: !4493)
!4504 = !DILocation(line: 83, column: 13, scope: !4493)
!4505 = !DILocation(line: 87, column: 6, scope: !4493)
!4506 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN83_$LT$bootloader..bootinfo..memory_map..MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h771e7cc3aaff61b4E", scope: !4507, file: !4220, line: 90, type: !4508, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4510)
!4507 = !DINamespace(name: "{impl#8}", scope: !14)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{!451, !12, !470}
!4510 = !{!4511, !4512}
!4511 = !DILocalVariable(name: "self", arg: 1, scope: !4506, file: !4220, line: 90, type: !12)
!4512 = !DILocalVariable(name: "f", arg: 2, scope: !4506, file: !4220, line: 90, type: !470)
!4513 = !DILocation(line: 90, column: 10, scope: !4506)
!4514 = !DILocation(line: 96, column: 5, scope: !4506)
!4515 = !DILocation(line: 90, column: 15, scope: !4506)
!4516 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..MemoryRegionType$u20$as$u20$core..fmt..Debug$GT$3fmt17h942619d28359881eE", scope: !4517, file: !4220, line: 168, type: !4518, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4520)
!4517 = !DINamespace(name: "{impl#21}", scope: !14)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!451, !60, !470}
!4520 = !{!4521, !4522}
!4521 = !DILocalVariable(name: "self", arg: 1, scope: !4516, file: !4220, line: 168, type: !60)
!4522 = !DILocalVariable(name: "f", arg: 2, scope: !4516, file: !4220, line: 168, type: !470)
!4523 = !DILocation(line: 168, column: 10, scope: !4516)
!4524 = !DILocation(line: 168, column: 14, scope: !4516)
!4525 = !DILocation(line: 168, column: 15, scope: !4516)
!4526 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN87_$LT$bootloader..bootinfo..memory_map..E820MemoryRegion$u20$as$u20$core..fmt..Debug$GT$3fmt17h01146dc618eaaa3bE", scope: !4527, file: !4220, line: 208, type: !4528, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4531)
!4527 = !DINamespace(name: "{impl#28}", scope: !14)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{!451, !4530, !470}
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::memory_map::E820MemoryRegion", baseType: !4437, size: 64, align: 64, dwarfAddressSpace: 0)
!4531 = !{!4532, !4533}
!4532 = !DILocalVariable(name: "self", arg: 1, scope: !4526, file: !4220, line: 208, type: !4530)
!4533 = !DILocalVariable(name: "f", arg: 2, scope: !4526, file: !4220, line: 208, type: !470)
!4534 = !DILocation(line: 208, column: 10, scope: !4526)
!4535 = !DILocation(line: 212, column: 5, scope: !4526)
!4536 = !DILocation(line: 213, column: 5, scope: !4526)
!4537 = !DILocation(line: 214, column: 5, scope: !4526)
!4538 = !DILocation(line: 208, column: 15, scope: !4526)
!4539 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN67_$LT$bootloader..bootinfo..BootInfo$u20$as$u20$core..fmt..Debug$GT$3fmt17h60b6c972ff4f913cE", scope: !4540, file: !4468, line: 22, type: !4541, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4543)
!4540 = !DINamespace(name: "{impl#1}", scope: !15)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!451, !4496, !470}
!4543 = !{!4544, !4545}
!4544 = !DILocalVariable(name: "self", arg: 1, scope: !4539, file: !4468, line: 22, type: !4496)
!4545 = !DILocalVariable(name: "f", arg: 2, scope: !4539, file: !4468, line: 22, type: !470)
!4546 = !DILocation(line: 22, column: 10, scope: !4539)
!4547 = !DILocation(line: 45, column: 5, scope: !4539)
!4548 = !DILocation(line: 46, column: 5, scope: !4539)
!4549 = !DILocation(line: 22, column: 15, scope: !4539)
!4550 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN70_$LT$bootloader..bootinfo..TlsTemplate$u20$as$u20$core..fmt..Debug$GT$3fmt17h86ced365e7ce4c2eE", scope: !4551, file: !4468, line: 103, type: !4552, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !136, templateParams: !24, retainedNodes: !4555)
!4551 = !DINamespace(name: "{impl#2}", scope: !15)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{!451, !4554, !470}
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bootloader::bootinfo::TlsTemplate", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!4555 = !{!4556, !4557}
!4556 = !DILocalVariable(name: "self", arg: 1, scope: !4550, file: !4468, line: 103, type: !4554)
!4557 = !DILocalVariable(name: "f", arg: 2, scope: !4550, file: !4468, line: 103, type: !470)
!4558 = !DILocation(line: 103, column: 10, scope: !4550)
!4559 = !DILocation(line: 111, column: 5, scope: !4550)
!4560 = !DILocation(line: 115, column: 5, scope: !4550)
!4561 = !DILocation(line: 103, column: 15, scope: !4550)
