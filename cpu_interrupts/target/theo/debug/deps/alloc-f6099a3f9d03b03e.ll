; ModuleID = 'alloc.86517141-cgu.0'
source_filename = "alloc.86517141-cgu.0"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-obuasi-unknown-none"

%"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, [closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]>>::{closure#0}]" = type {}
%"core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars<'_>>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>" = type { %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]", { ptr, ptr }, i8, [7 x i8] }
%"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]" = type {}
%"core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars<'_>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>" = type { %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39].0", { ptr, ptr }, i8, [7 x i8] }
%"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39].0" = type {}
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>" = type { [1 x i64], i64, [1 x i64] }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, { ptr, i64 } }
%"string::String" = type { %"vec::Vec<u8>" }
%"vec::Vec<u8>" = type { { i64, ptr }, i64 }
%"core::mem::maybe_uninit::MaybeUninit<alloc::Global>" = type { [0 x i8] }
%"core::mem::manually_drop::ManuallyDrop<string::String>" = type { %"string::String" }
%"core::mem::maybe_uninit::MaybeUninit<string::String>" = type { [3 x i64] }
%"borrow::Cow<'_, str>::Owned" = type { [1 x i64], %"string::String" }
%"core::ptr::metadata::PtrRepr<[i8]>" = type { [2 x i64] }
%"core::option::Option<core::convert::Infallible>::None" = type {}
%"core::str::iter::CharIndices<'_>" = type { { ptr, ptr }, i64 }
%"core::ops::range::RangeFull" = type {}
%"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>" = type { { ptr, ptr }, { i16, i16 }, [2 x i16] }
%"[closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]" = type {}
%"[closure@core::iter::adapters::map::map_fold<&&str, usize, usize, [closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, [closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]>>::{closure#0}]>::{closure#0}]" = type { %"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, [closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]>>::{closure#0}]", %"[closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]" }
%"core::error::private::Internal" = type {}
%"[closure@core::slice::index::range<core::ops::range::Range<usize>>::{closure#0}]" = type {}
%"[closure@core::slice::index::range<core::ops::range::Range<usize>>::{closure#1}]" = type {}
%"[closure@<core::str::iter::Chars<'_> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]" = type {}
%"core::result::Result<usize, collections::TryReserveErrorKind>" = type { [1 x i64], i64 }
%"core::fmt::Error" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>::Ok" = type { [1 x i64], { ptr, i64 } }
%"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:464:41: 464:44]" = type {}
%"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { ptr, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<string::String, ffi::c_str::IntoStringError>" = type { [24 x i8], i8, [7 x i8] }
%"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs:474:54: 474:57]" = type {}
%"string::FromUtf8Error" = type { %"core::str::error::Utf8Error", %"vec::Vec<u8>" }
%"core::str::error::Utf8Error" = type { i64, { i8, i8 }, [6 x i8] }
%"ffi::c_str::IntoStringError" = type { { ptr, i64 }, %"core::str::error::Utf8Error" }
%"core::result::Result<string::String, string::FromUtf8Error>" = type { [8 x i8], i8, [31 x i8] }
%"core::result::Result<string::String, string::FromUtf8Error>::Ok" = type { [2 x i64], %"string::String" }
%"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:495:26: 495:29]" = type {}
%"core::option::Option<core::fmt::Arguments<'_>>" = type { [2 x i64], ptr, [3 x i64] }
%"core::str::pattern::StrSearcher<'_, '_>" = type { { ptr, i64 }, { ptr, i64 }, %"core::str::pattern::StrSearcherImpl" }
%"core::str::pattern::StrSearcherImpl" = type { i64, [8 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { ptr, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { ptr, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, usize>" = type { [1 x i64], i64 }
%"core::option::Option<core::result::Result<char, core::char::decode::DecodeUtf16Error>>" = type { i16, [3 x i16] }
%"core::result::Result<char, core::char::decode::DecodeUtf16Error>" = type { i16, [3 x i16] }
%"core::result::Result<char, core::char::decode::DecodeUtf16Error>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<char, core::char::decode::DecodeUtf16Error>::Err" = type { [1 x i16], i16 }
%"alloc::Global" = type {}
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"<boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync + 'static)> as core::convert::From<string::String>>::from::StringError" = type { %"string::String" }
%"borrow::Cow<'_, str>" = type { i64, [3 x i64] }
%"borrow::Cow<'_, str>::Borrowed" = type { [1 x i64], { ptr, i64 } }
%"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err" = type { %"core::fmt::Error" }
%"ffi::c_str::FromVecWithNulError" = type { { i64, i64 }, %"vec::Vec<u8>" }
%"core::result::Result<ffi::c_str::CString, ffi::c_str::NulError>" = type { [2 x i64], ptr, [1 x i64] }
%"ffi::c_str::NulError" = type { i64, %"vec::Vec<u8>" }
%"core::result::Result<ffi::c_str::CString, ffi::c_str::FromVecWithNulError>" = type { i64, [4 x i64] }
%"core::result::Result<ffi::c_str::CString, ffi::c_str::FromVecWithNulError>::Ok" = type { [1 x i64], { ptr, i64 } }
%"core::result::Result<&str, core::str::error::Utf8Error>" = type { i64, [2 x i64] }
%"core::result::Result<&str, core::str::error::Utf8Error>::Err" = type { [1 x i64], %"core::str::error::Utf8Error" }
%"core::str::lossy::Utf8Chunk<'_>" = type { { ptr, i64 }, { ptr, i64 } }
%"core::option::Option<core::str::lossy::Utf8Chunk<'_>>" = type { ptr, [3 x i64] }
%"core::result::Result<string::String, string::FromUtf16Error>" = type { [1 x i64], ptr, [1 x i64] }
%"string::String::retain::SetLenOnDrop<'_>" = type { i64, i64, ptr }
%"core::fmt::builders::DebugTuple<'_, '_>" = type { i64, ptr, i8, i8, [6 x i8] }
%"vec::drain::Drain<'_, u8>" = type { { ptr, ptr }, i64, i64, ptr }
%"string::Drain<'_>" = type { { ptr, ptr }, ptr, i64, i64 }
%"core::mem::manually_drop::ManuallyDrop<vec::Vec<u8>>" = type { %"vec::Vec<u8>" }

@alloc_a1d063fc56d08794b1bf303ec0d8a16b = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned aligned and non-null" }>, align 1
@alloc_daed643f7d1c4ab3f5a3683bc711f4c0 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ffi/c_str.rs" }>, align 1
@alloc_7e9d09d970da31351a3a2baab06340b4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_daed643f7d1c4ab3f5a3683bc711f4c0, [16 x i8] c"m\00\00\00\00\00\00\00\A5\01\00\006\00\00\00" }>, align 8
@str.0 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc_858bb74fd281da4f8d7ba1064cf372e9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_daed643f7d1c4ab3f5a3683bc711f4c0, [16 x i8] c"m\00\00\00\00\00\00\00\A5\01\00\000\00\00\00" }>, align 8
@alloc_2aadb9d815d34bd6a9eb97b94a849bcf = private unnamed_addr constant <{ [66 x i8] }> <{ [66 x i8] c"assertion failed: !bytes.is_empty() && bytes[bytes.len() - 1] == 0" }>, align 1
@alloc_9d23f9ee21ea68ee2190adef8e985ab6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_daed643f7d1c4ab3f5a3683bc711f4c0, [16 x i8] c"m\00\00\00\00\00\00\00\A5\01\00\00\0D\00\00\00" }>, align 8
@alloc_dcd8707297622958cf4db4070c7dc808 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_daed643f7d1c4ab3f5a3683bc711f4c0, [16 x i8] c"m\00\00\00\00\00\00\006\02\00\00(\00\00\00" }>, align 8
@vtable.1 = private constant <{ ptr, [16 x i8], ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr54drop_in_place$LT$$RF$mut$u20$alloc..string..String$GT$17h0b890ab8f8f6221fE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hd1c3d17891a2d950E", ptr @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hc0934a2fde0a5e18E", ptr @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h9af8cf731126fe82E" }>, align 8, !dbg !0
@alloc_c5abb592cb74b08c04728308b178bcc8 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc_0f3bb02bc65dc1e76fd29ee3d1aa7b76 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c5abb592cb74b08c04728308b178bcc8, [16 x i8] c"k\00\00\00\00\00\00\00\BA\01\00\00.\00\00\00" }>, align 8
@alloc_47ee623a9f06017983b1b14793104f21 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c5abb592cb74b08c04728308b178bcc8, [16 x i8] c"k\00\00\00\00\00\00\00\92\01\00\008\00\00\00" }>, align 8
@str.2 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc_09d11aa498739cbf0519d318f9792c9b = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc_71b99a1804d93c013f301ec59bc480be = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_09d11aa498739cbf0519d318f9792c9b, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_2bfeba76c1438a46208a034153050220 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc_06016551127ebd46210a364dc7059aaa = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c5abb592cb74b08c04728308b178bcc8, [16 x i8] c"k\00\00\00\00\00\00\00\93\01\00\00\0D\00\00\00" }>, align 8
@alloc_fa95777c91a88ace608c067b20a99eef = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs" }>, align 1
@alloc_ae4b10a272bd9909bc9c09fa3f48c1a6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fa95777c91a88ace608c067b20a99eef, [16 x i8] c"k\00\00\00\00\00\00\00\FC\01\00\00\11\00\00\00" }>, align 8
@str.3 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc_197ff2b1f35e9df4c9071866b5a5c88f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_fa95777c91a88ace608c067b20a99eef, [16 x i8] c"k\00\00\00\00\00\00\00\E3\01\00\00\11\00\00\00" }>, align 8
@alloc_b2e55a4cbcb6887201afb45ca4813535 = private unnamed_addr constant <{ [89 x i8] }> <{ [89 x i8] c"unsafe precondition(s) violated: NonZeroUsize::new_unchecked requires a non-zero argument" }>, align 1
@alloc_0925410b7c4917ded038883dd048bfe8 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc_2816ee49767e721919b598d9f24c33d7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0925410b7c4917ded038883dd048bfe8, [16 x i8] c"k\00\00\00\00\00\00\00\E3\04\00\00\0D\00\00\00" }>, align 8
@alloc_9562f34aec96353760f71a2d048344df = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_0925410b7c4917ded038883dd048bfe8, [16 x i8] c"k\00\00\00\00\00\00\00\86\04\00\00\0D\00\00\00" }>, align 8
@alloc_efce4ff77543cc2403477cd546743a0c = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_98d916830fc7cab3c43d0ae7d762d17f = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_d0afbdd8e12853f26980a9342bb4d429 = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc_f87acf8c929a49cd44819755e05698cc = private unnamed_addr constant <{ [81 x i8] }> <{ [81 x i8] c"unsafe precondition(s) violated: Alignment::new_unchecked requires a power of two" }>, align 1
@alloc_e79f2aa950e86e6cb565ecb827afe5ce = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_4105d0742918b74e2c640d9349dca984 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e79f2aa950e86e6cb565ecb827afe5ce, [16 x i8] c"q\00\00\00\00\00\00\00#\06\00\00\1A\00\00\00" }>, align 8
@alloc_4ed5ec8bf80b80ae433a004a3507c2ef = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc_e5e5ee84beb26a7d629d956d12efff36 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_4ed5ec8bf80b80ae433a004a3507c2ef, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_360e68377b15a3e0dd13581a5ee2cd6d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e79f2aa950e86e6cb565ecb827afe5ce, [16 x i8] c"q\00\00\00\00\00\00\00\1E\06\00\00\0D\00\00\00" }>, align 8
@alloc_3eac478289b397b518722a8992f985e7 = private unnamed_addr constant <{ [115 x i8] }> <{ [115 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/validations.rs" }>, align 1
@alloc_063f7a84c62c81319e71ae37ddc8fa30 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3eac478289b397b518722a8992f985e7, [16 x i8] c"s\00\00\00\00\00\00\00\0C\00\00\00\0D\00\00\00" }>, align 8
@str.4 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc_7273c41473f00f86e42c393244ad94f5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3eac478289b397b518722a8992f985e7, [16 x i8] c"s\00\00\00\00\00\00\00^\00\00\00)\00\00\00" }>, align 8
@alloc_e4e36abea95a03db245d0863e70155c0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3eac478289b397b518722a8992f985e7, [16 x i8] c"s\00\00\00\00\00\00\00c\00\00\00-\00\00\00" }>, align 8
@alloc_1545cd1ebb0872a6ec5ebdd8a18d6546 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3eac478289b397b518722a8992f985e7, [16 x i8] c"s\00\00\00\00\00\00\00h\00\00\001\00\00\00" }>, align 8
@alloc_7a9c38d63e1b756b52c6cecbb970fb25 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs" }>, align 1
@alloc_38c8cd6434e73d50b2182c955ab961e0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7a9c38d63e1b756b52c6cecbb970fb25, [16 x i8] c"n\00\00\00\00\00\00\00\D5\00\00\00\13\00\00\00" }>, align 8
@alloc_c969049a883a8410a47f5b922739141d = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: str::get_unchecked requires that the range is within the string slice" }>, align 1
@alloc_72708b2488ca356088a99a4ac7282480 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/convert.rs" }>, align 1
@alloc_f47b99061b7d74d955e264e9e163dc80 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_72708b2488ca356088a99a4ac7282480, [16 x i8] c"p\00\00\00\00\00\00\00\1A\00\00\003\00\00\00" }>, align 8
@alloc_f035ff625bdb863e979e7d167d7513e0 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/methods.rs" }>, align 1
@alloc_cd65f6eec8b4e6b41cac5d8b9191bc46 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f035ff625bdb863e979e7d167d7513e0, [16 x i8] c"p\00\00\00\00\00\00\00\B3\06\00\00\16\00\00\00" }>, align 8
@alloc_c60dbbb04a129df5bc7f7f986da85346 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f035ff625bdb863e979e7d167d7513e0, [16 x i8] c"p\00\00\00\00\00\00\00\CD\06\00\00\0A\00\00\00" }>, align 8
@alloc_570f1697fe8be6fb3863e12e5c2d6c59 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc_05f35d52df396706b8f70b8cd9878ab0 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc_cfce99b89dbbaa177e38459ea5834dfe = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc_17eda000eed4fa50c9930631838b2137 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_570f1697fe8be6fb3863e12e5c2d6c59, [8 x i8] c"\12\00\00\00\00\00\00\00", ptr @alloc_05f35d52df396706b8f70b8cd9878ab0, [8 x i8] c"\13\00\00\00\00\00\00\00", ptr @alloc_cfce99b89dbbaa177e38459ea5834dfe, [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc_7c2f04411e058dac6a183b0d236738b2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f035ff625bdb863e979e7d167d7513e0, [16 x i8] c"p\00\00\00\00\00\00\00\C6\06\00\00\0E\00\00\00" }>, align 8
@alloc_a29f6f508d151c7ebbb0aeb4b1211a63 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/alloc/layout.rs" }>, align 1
@alloc_20a085c17f2c881db97732b2cf0b38fd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a29f6f508d151c7ebbb0aeb4b1211a63, [16 x i8] c"p\00\00\00\00\00\00\00/\01\00\00\18\00\00\00" }>, align 8
@alloc_d289cbc6d164b49a3dfa9a42cb95d879 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a29f6f508d151c7ebbb0aeb4b1211a63, [16 x i8] c"p\00\00\00\00\00\00\00]\00\00\00\1F\00\00\00" }>, align 8
@alloc_ffdb42e83584bd7c10adfc72ce12eabe = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a29f6f508d151c7ebbb0aeb4b1211a63, [16 x i8] c"p\00\00\00\00\00\00\00]\00\00\00\09\00\00\00" }>, align 8
@alloc_02f45c5ccc7b81d3bde0290dbb9a392f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a29f6f508d151c7ebbb0aeb4b1211a63, [16 x i8] c"p\00\00\00\00\00\00\00\C4\01\00\00)\00\00\00" }>, align 8
@str.5 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc_b3e3a8f01e57ea89155914a5657b3d48 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a29f6f508d151c7ebbb0aeb4b1211a63, [16 x i8] c"p\00\00\00\00\00\00\00\C8\01\00\00\1E\00\00\00" }>, align 8
@alloc_167d287dd54ac614eda347c3c2d978e2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a29f6f508d151c7ebbb0aeb4b1211a63, [16 x i8] c"p\00\00\00\00\00\00\00\81\01\00\00\16\00\00\00" }>, align 8
@alloc_1a3da72cf886500b2d934766a7a1d062 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a29f6f508d151c7ebbb0aeb4b1211a63, [16 x i8] c"p\00\00\00\00\00\00\00\82\01\00\00\18\00\00\00" }>, align 8
@alloc_7322928140fdc03ddb6b2ef2e6fddfc3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a29f6f508d151c7ebbb0aeb4b1211a63, [16 x i8] c"p\00\00\00\00\00\00\00\85\01\00\00\16\00\00\00" }>, align 8
@alloc_eb29d283dadbfac1e0da90551ac8d261 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_8f8ca95cb31c5f3162b21d773e7660f9 = private unnamed_addr constant <{ [111 x i8] }> <{ [111 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs" }>, align 1
@alloc_f446e7ca7075308174dde43056e6eb22 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8f8ca95cb31c5f3162b21d773e7660f9, [16 x i8] c"o\00\00\00\00\00\00\00\C1\02\00\004\00\00\00" }>, align 8
@alloc_fed8e75dfeeff8c27eef651baf293b43 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8f8ca95cb31c5f3162b21d773e7660f9, [16 x i8] c"o\00\00\00\00\00\00\00\C9\02\00\002\00\00\00" }>, align 8
@alloc_1eb6c23242465c5f19c2022a7a12d288 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/memchr.rs" }>, align 1
@alloc_7a6222c0398fdf1a39e96f26839bab7e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1eb6c23242465c5f19c2022a7a12d288, [16 x i8] c"p\00\00\00\00\00\00\00:\00\00\00\0C\00\00\00" }>, align 8
@alloc_80e6d1880504b883c53c5d815a87cff0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1eb6c23242465c5f19c2022a7a12d288, [16 x i8] c"p\00\00\00\00\00\00\00>\00\00\00\09\00\00\00" }>, align 8
@vtable.6 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17hc108cbe123dc37adE", [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h0cd1682f20b9dd77E" }>, align 8, !dbg !53
@alloc_24c9aed79b28e5b93fbc20adee13aef0 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.7 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17he05a8a1bf4c8fc09E", [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h7b1b1b0c8f69cf75E" }>, align 8, !dbg !63
@vtable.8 = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr55drop_in_place$LT$$RF$core..option..Option$LT$u8$GT$$GT$17h848328e1cf5ca3d2E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h89aa2bd3a4799f56E" }>, align 8, !dbg !74
@alloc_9994b1c6074626d50f3c935ba1910090 = private unnamed_addr constant <{ [117 x i8] }> <{ [117 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/accum.rs" }>, align 1
@alloc_c7344677dd41d0c35941541aa568b4d0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9994b1c6074626d50f3c935ba1910090, [16 x i8] c"u\00\00\00\00\00\00\00\95\00\00\00\01\00\00\00" }>, align 8
@alloc_18ca0805f8b71f31ac76ef9d667d311b = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: slice::get_unchecked_mut requires that the index is within the slice" }>, align 1
@alloc_5de95ea62957ceb4846a3d886d909c69 = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/iter.rs" }>, align 1
@alloc_7f10fad61f04c36f7b13eb20a67afb16 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_5de95ea62957ceb4846a3d886d909c69, [16 x i8] c"l\00\00\00\00\00\00\00:\00\00\00\0A\00\00\00" }>, align 8
@alloc_163ddd424740f2e23491ea382f7449b8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_5de95ea62957ceb4846a3d886d909c69, [16 x i8] c"l\00\00\00\00\00\00\00\91\00\00\00&\00\00\00" }>, align 8
@alloc_2b3f523e9e2c5f09fa11ae6558c01255 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_5de95ea62957ceb4846a3d886d909c69, [16 x i8] c"l\00\00\00\00\00\00\00\91\00\00\00\11\00\00\00" }>, align 8
@alloc_53294b26580165951d6dd1c6deb94a10 = private unnamed_addr constant <{ [111 x i8] }> <{ [111 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/decode.rs" }>, align 1
@alloc_fa54d430b27b5ac9d335d8eb42ea0f03 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_53294b26580165951d6dd1c6deb94a10, [16 x i8] c"o\00\00\00\00\00\00\00D\00\00\00\15\00\00\00" }>, align 8
@alloc_4dca7c50455e81c4b9f6dd7c3de59d88 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"`len` must be smaller than or equal to `self.capacity()`" }>, align 1
@alloc_99f15b03f3bfa75339564618e0666c4b = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_4dca7c50455e81c4b9f6dd7c3de59d88, [8 x i8] c"8\00\00\00\00\00\00\00" }>, align 8
@alloc_f5252e66217b9fa4bace4b8beb50ce2f = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs" }>, align 1
@alloc_1c210fcabb299bceb5cd2832a80973ef = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\9C\00\00\00\09\00\00\00" }>, align 8
@alloc_d3508941bd1314ad862e861ef6a1d679 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"assertion failed: additional > 0" }>, align 1
@alloc_94e90bae3af186068bc5eff3e8be1f9c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\82\01\00\00\09\00\00\00" }>, align 8
@alloc_ca73d4a7f3b47bdd6ee27b5651256d1d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\8B\01\00\00\1C\00\00\00" }>, align 8
@alloc_b0d2abe837007f946c701cf26af6b272 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\8F\01\00\00\1C\00\00\00" }>, align 8
@alloc_8354cad0daccd5be411414d5095631e5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\95\01\00\00\13\00\00\00" }>, align 8
@alloc_ad64aa38a833c3d5a5967dd6dbe76083 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\A4\01\00\00\13\00\00\00" }>, align 8
@alloc_85a446c1ecb346528560f53666524a51 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\A8\01\00\00\13\00\00\00" }>, align 8
@alloc_eb7f783e65ced90dbeb407f96bd71f23 = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"Tried to shrink to a larger capacity" }>, align 1
@alloc_3f013c2ff3b77455620c7b6030459892 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_eb7f783e65ced90dbeb407f96bd71f23, [8 x i8] c"$\00\00\00\00\00\00\00" }>, align 8
@alloc_dd850b3781d858ab4752fb03517d9dc6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\AF\01\00\00\09\00\00\00" }>, align 8
@alloc_4c7c158a760514eb3dbb50de0c5ebf0f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\B9\01\00\00\0D\00\00\00" }>, align 8
@alloc_aaf45724aeefb2c6a1bae46622d83c0b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\D0\01\00\00\16\00\00\00" }>, align 8
@alloc_a1f6e47b5a36ea7a9456db24008c1993 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\D2\01\00\00\05\00\00\00" }>, align 8
@alloc_8bab2e9119408a09adc6a32ea81797f0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\D5\01\00\00\09\00\00\00" }>, align 8
@alloc_d8b623796366cfc3ee7fa9ba650aaec9 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"capacity overflow" }>, align 1
@alloc_f1c3fdd4952167f08a45eb50e2155f84 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_d8b623796366cfc3ee7fa9ba650aaec9, [8 x i8] c"\11\00\00\00\00\00\00\00" }>, align 8
@alloc_27e9d3c6822f06b19afc0132a3987374 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f5252e66217b9fa4bace4b8beb50ce2f, [16 x i8] c"l\00\00\00\00\00\00\00\0D\02\00\00\05\00\00\00" }>, align 8
@alloc_887b25f508125e2737e766393cb675b3 = private unnamed_addr constant <{ [106 x i8] }> <{ [106 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/alloc.rs" }>, align 1
@alloc_2872501864a693c161a3561717ff8559 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00\B2\00\00\00\1B\00\00\00" }>, align 8
@alloc_1d41406411ecce6c01c45b934589836f = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"`new_layout.size()` must be greater than or equal to `old_layout.size()`" }>, align 1
@alloc_c7ae1f954522dd90a8f44baae431be9b = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_1d41406411ecce6c01c45b934589836f, [8 x i8] c"H\00\00\00\00\00\00\00" }>, align 8
@alloc_42a5b49c9776b0b33fbe13836c2b4582 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00\C1\00\00\00\09\00\00\00" }>, align 8
@alloc_5ba5b2714b896f0859d1ee0da6af33f1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00\D2\00\00\00\1B\00\00\00" }>, align 8
@alloc_1a9182a6a32222e32930dc0b0f8a3d32 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00\D4\00\00\00:\00\00\00" }>, align 8
@alloc_b9654aef1a48a42f4d2c4b2fa0500faf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00\DF\00\00\00\1F\00\00\00" }>, align 8
@alloc_f206476bd43b1c6099be0fc025f8fa2a = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"`new_layout.size()` must be smaller than or equal to `old_layout.size()`" }>, align 1
@alloc_295c34c5e2d6fdb08fc4b6bc306e1ee7 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_f206476bd43b1c6099be0fc025f8fa2a, [8 x i8] c"H\00\00\00\00\00\00\00" }>, align 8
@alloc_5ee2bbb77c0637aaa442027ef1fa39e3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00\1B\01\00\00\09\00\00\00" }>, align 8
@alloc_1e7ae1386431630e92494d74a0d85183 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00-\01\00\00\1B\00\00\00" }>, align 8
@alloc_35dfdc4542b0bb7bfbad545cd5525a84 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\007\01\00\00\1F\00\00\00" }>, align 8
@alloc_2af46b984fb8a0618661e3645ce38927 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"allocation failed" }>, align 1
@alloc_dfa5f7cf5e3f2df862c3d4059657cfe8 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_2af46b984fb8a0618661e3645ce38927, [8 x i8] c"\11\00\00\00\00\00\00\00" }>, align 8
@alloc_6afbb5a3d969e7c44f72297774c796a6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00|\01\00\00\09\00\00\00" }>, align 8
@__rust_alloc_error_handler_should_panic = external global i8
@alloc_c1a33bfa432a4fa61b581fd3090fb74b = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"memory allocation of " }>, align 1
@alloc_42f337f0650a4d15b81106ff80c390a6 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c" bytes failed" }>, align 1
@alloc_854e778decf79add00bb0a9150bedfd6 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_c1a33bfa432a4fa61b581fd3090fb74b, [8 x i8] c"\15\00\00\00\00\00\00\00", ptr @alloc_42f337f0650a4d15b81106ff80c390a6, [8 x i8] c"\0D\00\00\00\00\00\00\00" }>, align 8
@alloc_cbe954214f19b8f269230475688cf3e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00\9D\01\00\00\0D\00\00\00" }>, align 8
@alloc_62a007f8b0a57ed8a5806817f7ceb665 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_887b25f508125e2737e766393cb675b3, [16 x i8] c"j\00\00\00\00\00\00\00\9F\01\00\00\0D\00\00\00" }>, align 8
@alloc_27537360c484533d7d9126a82c87562d = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr205drop_in_place$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$GT$17h996a1f7630265b0eE", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN223_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h34dc5803b1268706E" }>, align 8
@vtable.9 = private constant <{ ptr, [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr205drop_in_place$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$GT$17h996a1f7630265b0eE", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN221_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17he6b554d75f9bf311E", ptr @"_ZN223_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h34dc5803b1268706E", ptr @alloc_27537360c484533d7d9126a82c87562d, ptr @_ZN4core5error5Error6source17h64834ca2e701851dE, ptr @_ZN4core5error5Error7type_id17h5b316b3835b36a28E, ptr @"_ZN223_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..error..Error$GT$11description17ha04aa3aedf33712bE", ptr @_ZN4core5error5Error5cause17h7571e2326d752b49E, ptr @_ZN4core5error5Error7provide17h0facdcbdc4ed310dE }>, align 8, !dbg !95
@alloc_3ef7a8cb2faf5c9e657d645555199e24 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc_b228939dbf23c76e6f69d61a32fc2e7a = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/borrow.rs" }>, align 1
@alloc_0f593a343d974519341042e8e5b41f3d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b228939dbf23c76e6f69d61a32fc2e7a, [16 x i8] c"k\00\00\00\00\00\00\00\17\01\00\00%\00\00\00" }>, align 8
@alloc_068e3c87972b8effe20f1830561f8e95 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b228939dbf23c76e6f69d61a32fc2e7a, [16 x i8] c"k\00\00\00\00\00\00\00\D6\01\00\003\00\00\00" }>, align 8
@alloc_1987c0da2b591ee4a82a52e15d549fa1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b228939dbf23c76e6f69d61a32fc2e7a, [16 x i8] c"k\00\00\00\00\00\00\00\E7\01\00\003\00\00\00" }>, align 8
@alloc_fca685c3a5d754d3fffe814a538cb9f8 = private unnamed_addr constant <{ [38 x i8] }> <{ [38 x i8] c"assertion failed: edge_idx <= CAPACITY" }>, align 1
@alloc_296faeeaa51ebbde85bba591d3b13e69 = private unnamed_addr constant <{ [123 x i8] }> <{ [123 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/collections/btree/node.rs" }>, align 1
@alloc_709e40febbd32ea7182ea83096e66eef = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_296faeeaa51ebbde85bba591d3b13e69, [16 x i8] c"{\00\00\00\00\00\00\00m\03\00\00\05\00\00\00" }>, align 8
@alloc_19abf371dbe1b11983996d7d3c133749 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_296faeeaa51ebbde85bba591d3b13e69, [16 x i8] c"{\00\00\00\00\00\00\00s\03\00\005\00\00\00" }>, align 8
@alloc_563b2d33981876a7fc39df820c94bae4 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"memory allocation failed" }>, align 1
@alloc_a8dc7f44160fc3d654e2b16de6a4f07c = private unnamed_addr constant <{ [116 x i8] }> <{ [116 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/collections/mod.rs" }>, align 1
@alloc_0b0286357274b4c9eaf3f5533930fa13 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a8dc7f44160fc3d654e2b16de6a4f07c, [16 x i8] c"t\00\00\00\00\00\00\00\88\00\00\00\09\00\00\00" }>, align 8
@alloc_f6ade82938a5b491d71dfc9097e36761 = private unnamed_addr constant <{ [47 x i8] }> <{ [47 x i8] c" because the memory allocator returned an error" }>, align 1
@alloc_c7b932db62d5bdcb5ca2fe37b37b7944 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c" because the computed capacity exceeded the collection's maximum" }>, align 1
@alloc_989dfdd4d9afd8a157043aa483a3ea3c = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs" }>, align 1
@alloc_a5b3eabf9c22cb61c05bc8e297096434 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989dfdd4d9afd8a157043aa483a3ea3c, [16 x i8] c"n\00\00\00\00\00\00\00\BB\00\00\00\0A\00\00\00" }>, align 8
@alloc_2afa95efdaceb1c5922c4b8a2e16a67d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989dfdd4d9afd8a157043aa483a3ea3c, [16 x i8] c"n\00\00\00\00\00\00\00\1B\01\00\007\00\00\00" }>, align 8
@alloc_5e5813a368e2861717aea807bfd3dab8 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"assertion failed: memchr::memchr(0, &v).is_none()" }>, align 1
@alloc_21eae8b1b78c21c4127420364ce37047 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989dfdd4d9afd8a157043aa483a3ea3c, [16 x i8] c"n\00\00\00\00\00\00\00U\01\00\00\09\00\00\00" }>, align 8
@alloc_e4479345af98ed73e24ee37f36dbc23a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989dfdd4d9afd8a157043aa483a3ea3c, [16 x i8] c"n\00\00\00\00\00\00\00\98\01\00\00\17\00\00\00" }>, align 8
@alloc_d1e2722b54ef8ec03f2047485c081942 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\01\00" }>, align 1
@alloc_b907c864b0f545588eec0b633078b1e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989dfdd4d9afd8a157043aa483a3ea3c, [16 x i8] c"n\00\00\00\00\00\00\00\F4\01\00\00\09\00\00\00" }>, align 8
@alloc_752ec64ad4297d322aadfa88b3472ebb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989dfdd4d9afd8a157043aa483a3ea3c, [16 x i8] c"n\00\00\00\00\00\00\00y\02\00\00-\00\00\00" }>, align 8
@alloc_aa57af6dfbaa5650830dfb1fee8cd9ef = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989dfdd4d9afd8a157043aa483a3ea3c, [16 x i8] c"n\00\00\00\00\00\00\00y\02\00\00\17\00\00\00" }>, align 8
@alloc_3df6d204130c5bfa5e2f056efb06b697 = private unnamed_addr constant <{ [63 x i8] }> <{ [63 x i8] c"assertion failed: memchr::memchr(0, &v).unwrap() + 1 == v.len()" }>, align 1
@alloc_f8ea6406c66a7ce76f083b51c92be73b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989dfdd4d9afd8a157043aa483a3ea3c, [16 x i8] c"n\00\00\00\00\00\00\00y\02\00\00\09\00\00\00" }>, align 8
@alloc_8eb2c3650813749787940e1e6e40b97c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989dfdd4d9afd8a157043aa483a3ea3c, [16 x i8] c"n\00\00\00\00\00\00\00\A6\02\00\00\1E\00\00\00" }>, align 8
@alloc_dbd3191b20a72f8f00d4fe85b704ac74 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"nul byte found in provided data at position: " }>, align 1
@alloc_1b43b30ce11b2325ac265e2f39339fd5 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_dbd3191b20a72f8f00d4fe85b704ac74, [8 x i8] c"-\00\00\00\00\00\00\00" }>, align 8
@alloc_636bae917ef5bbe7e6c4ea681f79c5bf = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"data provided is not nul terminated" }>, align 1
@alloc_6f7e1863f9eb0b975e014710d5491d4d = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_636bae917ef5bbe7e6c4ea681f79c5bf, [8 x i8] c"#\00\00\00\00\00\00\00" }>, align 8
@alloc_a13a52daaefdc286649dbca47fe12c19 = private unnamed_addr constant <{ [51 x i8] }> <{ [51 x i8] c"data provided contains an interior nul byte at pos " }>, align 1
@alloc_28948e56a703a1cfad9ad8b1fe5790eb = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_a13a52daaefdc286649dbca47fe12c19, [8 x i8] c"3\00\00\00\00\00\00\00" }>, align 8
@alloc_1add4574f5ab41a1316837f308f660f3 = private unnamed_addr constant <{ [33 x i8] }> <{ [33 x i8] c"C string contained non-utf8 bytes" }>, align 1
@alloc_2d0407af131f995f6ab914c51ddf2d12 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"nul byte found in data" }>, align 1
@alloc_1f5719c1cabc8abe76a764aa1edc5b0d = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h8722002bc00b874fE", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h6f070f97c6b024f0E" }>, align 8
@vtable.a = private constant <{ ptr, [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h8722002bc00b874fE", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17he8fc625818b35893E", ptr @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h6f070f97c6b024f0E", ptr @alloc_1f5719c1cabc8abe76a764aa1edc5b0d, ptr @_ZN4core5error5Error6source17h8d69b3ad77d08327E, ptr @_ZN4core5error5Error7type_id17h45fb35de5050bdc5E, ptr @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..error..Error$GT$11description17h3d1d1e88c080eb28E", ptr @_ZN4core5error5Error5cause17h4f3413bed4738be7E, ptr @_ZN4core5error5Error7provide17h9ded8b4725c23ab2E }>, align 8, !dbg !116
@alloc_0105dc2397ac7c966adc13e0ee71a018 = private unnamed_addr constant <{ [51 x i8] }> <{ [51 x i8] c"a formatting trait implementation returned an error" }>, align 1
@alloc_2bd9605d33476a4b9b33dadddaca593b = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/fmt.rs" }>, align 1
@alloc_94d00f93c1bf1ae927599c29067f4888 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2bd9605d33476a4b9b33dadddaca593b, [16 x i8] c"h\00\00\00\00\00\00\00d\02\00\00 \00\00\00" }>, align 8
@alloc_1c5f83cd77b797d121ee150552e68517 = private unnamed_addr constant <{ [103 x i8] }> <{ [103 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/rc.rs" }>, align 1
@alloc_692eaf18796bf7142ac5b58f8314fe17 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1c5f83cd77b797d121ee150552e68517, [16 x i8] c"g\00\00\00\00\00\00\00.\01\00\00/\00\00\00" }>, align 8
@alloc_4144cdbf29b693e982425a7ba5ad8d06 = private unnamed_addr constant <{ [106 x i8] }> <{ [106 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/slice.rs" }>, align 1
@alloc_aa2fb326309c571bd6804aef16b72d41 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_4144cdbf29b693e982425a7ba5ad8d06, [16 x i8] c"j\00\00\00\00\00\00\00\F7\01\00\002\00\00\00" }>, align 8
@alloc_4e9b3f228f56f0da67519e4729f2ed74 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_4144cdbf29b693e982425a7ba5ad8d06, [16 x i8] c"j\00\00\00\00\00\00\00\09\02\00\00!\00\00\00" }>, align 8
@alloc_e89e95604460e16501483f537c64bb3f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_4144cdbf29b693e982425a7ba5ad8d06, [16 x i8] c"j\00\00\00\00\00\00\00\12\02\00\00\17\00\00\00" }>, align 8
@alloc_7c58a935273a6e7e69b3ae5c4f2532c1 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs" }>, align 1
@alloc_a63230b74baa92f23482115faa65bbaf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00\BF\00\00\00\0A\00\00\00" }>, align 8
@alloc_ff3207273e189921ff430500eba35823 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00z\01\00\00\17\00\00\00" }>, align 8
@alloc_797840ed541c959df2e77a56b76cfb15 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"assertion failed: \\'\CE\A3\\'.len_utf8() == 2" }>, align 1
@alloc_b1a001e9d5f2d059c3feaa2c9220b939 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00\96\01\00\00\0D\00\00\00" }>, align 8
@alloc_bf38d0eb53f1bcc3766b65c9c2984b81 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00\97\01\00\00<\00\00\00" }>, align 8
@alloc_f263bbb188aa42b59bf2b2c0d48c5a8e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00\98\01\00\005\00\00\00" }>, align 8
@alloc_799b91a0ea3abe5e1030c8fbd3e9682c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00\98\01\00\000\00\00\00" }>, align 8
@alloc_0a6f3b2c3782af21135dace948aa7901 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\CF\82" }>, align 1
@alloc_f1aadf2fefd80bee2f8993682f83477f = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\CF\83" }>, align 1
@alloc_d437df2fae4ef9f6fed9560495d60e40 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00|\02\00\00\0F\00\00\00" }>, align 8
@alloc_7e08701eade7da3c360e001994f1aa3b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00~\02\00\00/\00\00\00" }>, align 8
@alloc_59b6c1bac895757c4e915f7838a90920 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00\7F\02\00\00K\00\00\00" }>, align 8
@alloc_f4e258cab95dd3d2687370c891e78fd4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c58a935273a6e7e69b3ae5c4f2532c1, [16 x i8] c"h\00\00\00\00\00\00\00\94\02\00\00\0D\00\00\00" }>, align 8
@alloc_f94fd91e544fe18db126bd037bca2593 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs" }>, align 1
@alloc_cb204d54ed5b86b77c53dcaa96356cac = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f94fd91e544fe18db126bd037bca2593, [16 x i8] c"k\00\00\00\00\00\00\00{\02\00\00\11\00\00\00" }>, align 8
@alloc_aa329616e90d5f6d8c9641ac2278f51f = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\EF\BF\BD" }>, align 1
@alloc_6564cfadb1513ab6a9e19a5883fd642f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f94fd91e544fe18db126bd037bca2593, [16 x i8] c"k\00\00\00\00\00\00\00\B8\05\00\00\1F\00\00\00" }>, align 8
@alloc_1b40162c2ad9290d2e87219ac6f22a34 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: new_len <= self.s.len()" }>, align 1
@alloc_cdb18e0ac2fdf07ff8d065001ccf4deb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f94fd91e544fe18db126bd037bca2593, [16 x i8] c"k\00\00\00\00\00\00\00\B9\05\00\00\11\00\00\00" }>, align 8
@alloc_c4f9797b0f1e481486cf1805b69152bb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f94fd91e544fe18db126bd037bca2593, [16 x i8] c"k\00\00\00\00\00\00\00\0C\06\00\00M\00\00\00" }>, align 8
@alloc_51756ffd9ef1692e98058c841f3b1d25 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f94fd91e544fe18db126bd037bca2593, [16 x i8] c"k\00\00\00\00\00\00\00\0C\06\00\00Y\00\00\00" }>, align 8
@alloc_179b204dd41604643e7e05e15770286f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f94fd91e544fe18db126bd037bca2593, [16 x i8] c"k\00\00\00\00\00\00\00\0E\06\00\00\1E\00\00\00" }>, align 8
@alloc_e7a54bfd3f40ffe1b4770061f50c2565 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f94fd91e544fe18db126bd037bca2593, [16 x i8] c"k\00\00\00\00\00\00\00m\07\00\00\0A\00\00\00" }>, align 8
@alloc_7e441d31300c821308b0a441ed1ccfa5 = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"invalid utf-16: lone surrogate found" }>, align 1
@alloc_46abab1c9fd8e8791359e4d0f3710c93 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"invalid utf-8" }>, align 1
@alloc_0348276978820a5ed4f30a14cea57144 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"invalid utf-16" }>, align 1
@alloc_2def5dfce2dcd52f802e5cbd740e3552 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f94fd91e544fe18db126bd037bca2593, [16 x i8] c"k\00\00\00\00\00\00\00\85\08\00\00\09\00\00\00" }>, align 8
@alloc_c3a853c9e224f646db894333f8d4e0c8 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Drain" }>, align 1
@vtable.b = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h425384f8669752d8E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he975b5950af71586E" }>, align 8, !dbg !137
@alloc_beb401aa303c19b9b9147d6b639c7a16 = private unnamed_addr constant <{ [105 x i8] }> <{ [105 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/sync.rs" }>, align 1
@alloc_3a3a41ed10ad0b95ca64ca5e7928adac = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_beb401aa303c19b9b9147d6b639c7a16, [16 x i8] c"i\00\00\00\00\00\00\00V\01\00\002\00\00\00" }>, align 8
@alloc_1f4c42c67292ffe6432cc82856fc2cf5 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/drain.rs" }>, align 1
@alloc_2f628df24e0dd1463907a30b78b3f33c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1f4c42c67292ffe6432cc82856fc2cf5, [16 x i8] c"n\00\00\00\00\00\00\00\D3\00\00\00\1D\00\00\00" }>, align 8
@alloc_6139328b7c88b831187aaec75c25f44d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1f4c42c67292ffe6432cc82856fc2cf5, [16 x i8] c"n\00\00\00\00\00\00\00\D4\00\00\00\1E\00\00\00" }>, align 8
@alloc_9acf83b40754c1656f9cdee18fdd39d4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1f4c42c67292ffe6432cc82856fc2cf5, [16 x i8] c"n\00\00\00\00\00\00\00\C2\00\00\00,\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00" }>, align 8
@alloc_2dc1f9066482a29f16cd5b38832168cd = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs" }>, align 1
@alloc_f6d6eaf1db965a6be09fd26ade1bc4eb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00\93\04\00\00!\00\00\00" }>, align 8
@alloc_c13931f7e9e9ebea27efae909e013fd2 = private unnamed_addr constant <{ [44 x i8] }> <{ [44 x i8] c"assertion failed: new_len <= self.capacity()" }>, align 1
@alloc_1ba0719c30b5d3d54d2645e185278fec = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00_\05\00\00\09\00\00\00" }>, align 8
@alloc_74fa3559d92ffac80cb074ff5820a44a = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"swap_remove index (is " }>, align 1
@alloc_2e2c85020d1d4202a78e407dc5f14bb6 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c") should be < len (is " }>, align 1
@alloc_bacb0500a8e518371fd52ddb8e3ff6e7 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc_1ee46c7ef9489069f10170c82c599b4a = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_74fa3559d92ffac80cb074ff5820a44a, [8 x i8] c"\16\00\00\00\00\00\00\00", ptr @alloc_2e2c85020d1d4202a78e407dc5f14bb6, [8 x i8] c"\16\00\00\00\00\00\00\00", ptr @alloc_bacb0500a8e518371fd52ddb8e3ff6e7, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_021ecaf3b9e9d10672a87d3fccfd178d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00\82\05\00\00\0D\00\00\00" }>, align 8
@alloc_bbbd8d868308fe748a42098ee7c1698e = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"insertion index (is " }>, align 1
@alloc_07a8dfa99906a23b6593562204ab5272 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c") should be <= len (is " }>, align 1
@alloc_0fc675edd11936a791c597fa39eb0cdc = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_bbbd8d868308fe748a42098ee7c1698e, [8 x i8] c"\14\00\00\00\00\00\00\00", ptr @alloc_07a8dfa99906a23b6593562204ab5272, [8 x i8] c"\17\00\00\00\00\00\00\00", ptr @alloc_bacb0500a8e518371fd52ddb8e3ff6e7, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_75eec5a9bf93217b91f0d85ef446d86d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00\AB\05\00\00\0D\00\00\00" }>, align 8
@alloc_5033bdab25dcee6bf7285cf95bd64a60 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"removal index (is " }>, align 1
@alloc_2ca41611c3f9af1c4961102fd5021961 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_5033bdab25dcee6bf7285cf95bd64a60, [8 x i8] c"\12\00\00\00\00\00\00\00", ptr @alloc_2e2c85020d1d4202a78e407dc5f14bb6, [8 x i8] c"\16\00\00\00\00\00\00\00", ptr @alloc_bacb0500a8e518371fd52ddb8e3ff6e7, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_b99318ccbf51b1bf7a9d2232279292ea = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\005\07\00\00\0D\00\00\00" }>, align 8
@alloc_191041be788d99199d297d0f6b497cc9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00|\07\00\00\11\00\00\00" }>, align 8
@alloc_678b85d2616044cae3ab040f83b9c2b7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00\A3\07\00\00\09\00\00\00" }>, align 8
@alloc_6f72c8639928306d8b274daf2f21be7d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00\D4\07\00\00$\00\00\00" }>, align 8
@alloc_918855f270549a980391bb633a1ed9d7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00\D9\07\00\00O\00\00\00" }>, align 8
@alloc_0cadfb3ea2bb7904c434fe7d632b6ea1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00\DC\07\00\00\1B\00\00\00" }>, align 8
@alloc_250f17991e1eefae877ca9ec690d667b = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"`at` split index (is " }>, align 1
@alloc_49b342258e20faddfe12440339703d6a = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_250f17991e1eefae877ca9ec690d667b, [8 x i8] c"\15\00\00\00\00\00\00\00", ptr @alloc_07a8dfa99906a23b6593562204ab5272, [8 x i8] c"\17\00\00\00\00\00\00\00", ptr @alloc_bacb0500a8e518371fd52ddb8e3ff6e7, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_2c87b7943a9ecddc828646051a024b77 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00>\08\00\00\0D\00\00\00" }>, align 8
@alloc_ea57f57400c824483b5c5230769f8fad = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_2dc1f9066482a29f16cd5b38832168cd, [16 x i8] c"l\00\00\00\00\00\00\00\C8\08\00\00\11\00\00\00" }>, align 8
@alloc_e873c9a97e8e44f67e8d3766fdac59f0 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Global" }>, align 1
@alloc_e703872a2c10cdc34127474aff6c4963 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"SetValZST" }>, align 1
@alloc_82b6d848cfc80ab1d9a0aefd21242bca = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"TryReserveError" }>, align 1
@alloc_c735c82aaaacbc2e8a3c93175de1f58d = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"kind" }>, align 1
@vtable.c = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr64drop_in_place$LT$$RF$alloc..collections..TryReserveErrorKind$GT$17hb943e1041e1118a1E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3525879dc69536aeE" }>, align 8, !dbg !150
@alloc_a6c7dd7aa492c2630267989583a5c43b = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"AllocError" }>, align 1
@alloc_b9b5b438fddc1a9ac3c2652ae34d59e0 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"layout" }>, align 1
@vtable.d = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr48drop_in_place$LT$core..alloc..layout..Layout$GT$17h40366a13cd7dfce8E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN64_$LT$core..alloc..layout..Layout$u20$as$u20$core..fmt..Debug$GT$3fmt17h710c88d4bb05476bE" }>, align 8, !dbg !247
@alloc_cf473b689ec9b095552d8d6273c13657 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"non_exhaustive" }>, align 1
@vtable.e = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17h42411c55286b31a8E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h48ab2cfcf08788adE" }>, align 8, !dbg !255
@alloc_c966fd153c036719e7d1550713127bf0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"CapacityOverflow" }>, align 1
@alloc_8c092c543c31c75ea0ddbfd3407361bc = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"NulError" }>, align 1
@vtable.f = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr26drop_in_place$LT$usize$GT$17h9af800b9ffc2209bE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hc0df83b4a7aeedffE" }>, align 8, !dbg !264
@vtable.g = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr50drop_in_place$LT$$RF$alloc..vec..Vec$LT$u8$GT$$GT$17h8a1c1afc14e91cc3E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hca3fecd557984023E" }>, align 8, !dbg !272
@alloc_a13e8fc0a6880042d51602b8537474b5 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"NotNulTerminated" }>, align 1
@alloc_4af9ea6bd86e597fca4c445911a6ff30 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"InteriorNul" }>, align 1
@vtable.h = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h9df263826f7fdbadE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2d36763529dcc5c8E" }>, align 8, !dbg !281
@alloc_77cb2fbc630e0a6db548f2c425431f8c = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"FromVecWithNulError" }>, align 1
@alloc_eb727971a8c0256e75ac27084e837dc2 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"error_kind" }>, align 1
@vtable.i = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr65drop_in_place$LT$alloc..ffi..c_str..FromBytesWithNulErrorKind$GT$17he5de423ab36c6fddE", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN81_$LT$alloc..ffi..c_str..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h71d4027fe13800b0E" }>, align 8, !dbg !290
@alloc_067cd0ecb808289752b17e63d2086487 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"bytes" }>, align 1
@alloc_073efc19633283e27d64bdcc0e32bf21 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"IntoStringError" }>, align 1
@alloc_1b49e3d41ebccbfcd0be63976b649f2c = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"inner" }>, align 1
@vtable.j = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h1855343d3c26b10dE", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN63_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..fmt..Debug$GT$3fmt17hff8af2778d2a7e4fE" }>, align 8, !dbg !311
@alloc_8b598a7aaf99963d6d65bec852f36b67 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"error" }>, align 1
@vtable.k = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr52drop_in_place$LT$$RF$core..str..error..Utf8Error$GT$17ha91a37f5545185bfE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h48dacd3e93df9961E" }>, align 8, !dbg !326
@alloc_a2ba53d8e8e6c9b4cfaadee4afdf5070 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"FromUtf8Error" }>, align 1
@vtable.l = private constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h8b2112aa825e6ef9E", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN65_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hd393aa0156f5d7a0E" }>, align 8, !dbg !335
@alloc_c5aa50b55a127b9a5daf41c471ea2b31 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"FromUtf16Error" }>, align 1

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: noredzone nounwind
define i64 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h6731b00e9f66dbe2E"(ptr %self.0, ptr %self.1, i64 %init) unnamed_addr #0 !dbg !375 {
start:
  %g.dbg.spill = alloca %"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, [closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]>>::{closure#0}]", align 1
  %init.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !416, metadata !DIExpression()), !dbg !423
  store i64 %init, ptr %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %init.dbg.spill, metadata !417, metadata !DIExpression()), !dbg !424
  call void @llvm.dbg.declare(metadata ptr %g.dbg.spill, metadata !418, metadata !DIExpression()), !dbg !425
; call core::iter::adapters::map::map_fold
  call void @_ZN4core4iter8adapters3map8map_fold17h4082c70a4f2cebe2E() #17, !dbg !426
; call core::iter::traits::iterator::Iterator::fold
  %2 = call i64 @_ZN4core4iter6traits8iterator8Iterator4fold17hb4d475b31ccfa8e3E(ptr %self.0, ptr %self.1, i64 %init) #17, !dbg !427
  ret i64 %2, !dbg !428
}

; <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define { i16, i16 } @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h236747a0ed2b2f8fE"(ptr align 8 %self) unnamed_addr #0 !dbg !429 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !469, metadata !DIExpression()), !dbg !471
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 2 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5b5bc9ce8c7bc0b7E"(ptr align 8 %self) #17, !dbg !472
; call core::option::Option<&T>::cloned
  %0 = call { i16, i16 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17he042b838fdc0bc1dE"(ptr align 2 %_2) #17, !dbg !472
  %1 = extractvalue { i16, i16 } %0, 0, !dbg !472
  %2 = extractvalue { i16, i16 } %0, 1, !dbg !472
  %3 = insertvalue { i16, i16 } undef, i16 %1, 0, !dbg !473
  %4 = insertvalue { i16, i16 } %3, i16 %2, 1, !dbg !473
  ret { i16, i16 } %4, !dbg !473
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7baf4f06fa1440fcE"(i32 %0) unnamed_addr #1 !dbg !474 {
start:
  %b.dbg.spill = alloca i32, align 4
  %1 = alloca i32, align 4
  %residual = alloca i32, align 4
  store i32 %0, ptr %residual, align 4
  call void @llvm.dbg.declare(metadata ptr %residual, metadata !518, metadata !DIExpression()), !dbg !521
  %b = load i32, ptr %residual, align 4, !dbg !522, !range !523, !noundef !45
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !522
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !519, metadata !DIExpression()), !dbg !524
  store i32 %b, ptr %1, align 4, !dbg !525
  %2 = load i32, ptr %1, align 4, !dbg !526, !range !527, !noundef !45
  ret i32 %2, !dbg !526
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4567bd3a028715ceE"(ptr align 8 %self) unnamed_addr #1 !dbg !528 {
start:
  %pred.dbg.spill = alloca ptr, align 8
  %flag.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !582, metadata !DIExpression()), !dbg !589
  %flag = getelementptr inbounds %"core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars<'_>>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>", ptr %self, i32 0, i32 2, !dbg !590
  store ptr %flag, ptr %flag.dbg.spill, align 8, !dbg !590
  call void @llvm.dbg.declare(metadata ptr %flag.dbg.spill, metadata !583, metadata !DIExpression()), !dbg !591
  store ptr %self, ptr %pred.dbg.spill, align 8, !dbg !592
  call void @llvm.dbg.declare(metadata ptr %pred.dbg.spill, metadata !586, metadata !DIExpression()), !dbg !593
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
  %0 = call { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h740395a9de9b7556E"(ptr align 1 %flag, ptr align 1 %self) #17, !dbg !594
  %_5.0 = extractvalue { ptr, ptr } %0, 0, !dbg !594
  %_5.1 = extractvalue { ptr, ptr } %0, 1, !dbg !594
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::find
  %1 = call i32 @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hbe1371b282d78156E"(ptr align 8 %self, ptr align 1 %_5.0, ptr align 1 %_5.1) #17, !dbg !595, !range !527
  ret i32 %1, !dbg !596
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5c77ee3a77e52598E"(ptr align 8 %self) unnamed_addr #1 !dbg !597 {
start:
  %pred.dbg.spill = alloca ptr, align 8
  %flag.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !611, metadata !DIExpression()), !dbg !617
  %flag = getelementptr inbounds %"core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars<'_>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>", ptr %self, i32 0, i32 2, !dbg !618
  store ptr %flag, ptr %flag.dbg.spill, align 8, !dbg !618
  call void @llvm.dbg.declare(metadata ptr %flag.dbg.spill, metadata !612, metadata !DIExpression()), !dbg !619
  store ptr %self, ptr %pred.dbg.spill, align 8, !dbg !620
  call void @llvm.dbg.declare(metadata ptr %pred.dbg.spill, metadata !614, metadata !DIExpression()), !dbg !621
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
  %0 = call { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h82c86c3488a72399E"(ptr align 1 %flag, ptr align 1 %self) #17, !dbg !622
  %_5.0 = extractvalue { ptr, ptr } %0, 0, !dbg !622
  %_5.1 = extractvalue { ptr, ptr } %0, 1, !dbg !622
; call core::iter::traits::iterator::Iterator::find
  %1 = call i32 @_ZN4core4iter6traits8iterator8Iterator4find17h0cb5f0aac3ff5547E(ptr align 8 %self, ptr align 1 %_5.0, ptr align 1 %_5.1) #17, !dbg !623, !range !527
  ret i32 %1, !dbg !624
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h740395a9de9b7556E"(ptr align 1 %flag, ptr align 1 %pred) unnamed_addr #0 !dbg !625 {
start:
  %pred.dbg.spill = alloca ptr, align 8
  %flag.dbg.spill = alloca ptr, align 8
  %0 = alloca { ptr, ptr }, align 8
  store ptr %flag, ptr %flag.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %flag.dbg.spill, metadata !635, metadata !DIExpression()), !dbg !639
  store ptr %pred, ptr %pred.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pred.dbg.spill, metadata !636, metadata !DIExpression()), !dbg !640
  store ptr %flag, ptr %0, align 8, !dbg !641
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !641
  store ptr %pred, ptr %1, align 8, !dbg !641
  %2 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !642
  %3 = load ptr, ptr %2, align 8, !dbg !642, !nonnull !45, !align !643, !noundef !45
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !642
  %5 = load ptr, ptr %4, align 8, !dbg !642, !nonnull !45, !align !643, !noundef !45
  %6 = insertvalue { ptr, ptr } undef, ptr %3, 0, !dbg !642
  %7 = insertvalue { ptr, ptr } %6, ptr %5, 1, !dbg !642
  ret { ptr, ptr } %7, !dbg !642
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h82c86c3488a72399E"(ptr align 1 %flag, ptr align 1 %pred) unnamed_addr #0 !dbg !644 {
start:
  %pred.dbg.spill = alloca ptr, align 8
  %flag.dbg.spill = alloca ptr, align 8
  %0 = alloca { ptr, ptr }, align 8
  store ptr %flag, ptr %flag.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %flag.dbg.spill, metadata !652, metadata !DIExpression()), !dbg !656
  store ptr %pred, ptr %pred.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pred.dbg.spill, metadata !653, metadata !DIExpression()), !dbg !657
  store ptr %flag, ptr %0, align 8, !dbg !658
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !658
  store ptr %pred, ptr %1, align 8, !dbg !658
  %2 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !659
  %3 = load ptr, ptr %2, align 8, !dbg !659, !nonnull !45, !align !643, !noundef !45
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !659
  %5 = load ptr, ptr %4, align 8, !dbg !659, !nonnull !45, !align !643, !noundef !45
  %6 = insertvalue { ptr, ptr } undef, ptr %3, 0, !dbg !659
  %7 = insertvalue { ptr, ptr } %6, ptr %5, 1, !dbg !659
  ret { ptr, ptr } %7, !dbg !659
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17h6861385569cb6a98E"(ptr align 8 %_1, ptr align 4 %x) unnamed_addr #1 !dbg !660 {
start:
  %x.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_7 = alloca ptr, align 8
  %_3 = alloca i8, align 1
  %0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !667, metadata !DIExpression(DW_OP_deref)), !dbg !669
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !668, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8)), !dbg !670
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !666, metadata !DIExpression()), !dbg !671
  %_8 = load ptr, ptr %_1, align 8, !dbg !672, !nonnull !45, !align !643, !noundef !45
  %1 = load i8, ptr %_8, align 1, !dbg !672, !range !673, !noundef !45
  %_4 = trunc i8 %1 to i1, !dbg !672
  br i1 %_4, label %bb1, label %bb2, !dbg !672

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_1, i32 0, i32 1, !dbg !674
  %_9 = load ptr, ptr %2, align 8, !dbg !674, !nonnull !45, !align !643, !noundef !45
  store ptr %x, ptr %_7, align 8, !dbg !674
  %3 = load ptr, ptr %_7, align 8, !dbg !674, !nonnull !45, !align !675, !noundef !45
; call alloc::str::<impl str>::to_lowercase::case_ignoreable_then_cased::{{closure}}
  %_6 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17hb3211b0d5234fad3E"(ptr align 1 %_9, ptr align 4 %3) #17, !dbg !674
  %_5 = xor i1 %_6, true, !dbg !676
  %4 = zext i1 %_5 to i8, !dbg !672
  store i8 %4, ptr %_3, align 1, !dbg !672
  br label %bb3, !dbg !672

bb1:                                              ; preds = %start
  store i8 1, ptr %_3, align 1, !dbg !672
  br label %bb3, !dbg !672

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, ptr %_3, align 1, !dbg !672, !range !673, !noundef !45
  %6 = trunc i8 %5 to i1, !dbg !672
  br i1 %6, label %bb5, label %bb6, !dbg !672

bb6:                                              ; preds = %bb3
  store i8 0, ptr %0, align 1, !dbg !677
  br label %bb7, !dbg !678

bb5:                                              ; preds = %bb3
  %_10 = load ptr, ptr %_1, align 8, !dbg !679, !nonnull !45, !align !643, !noundef !45
  store i8 1, ptr %_10, align 1, !dbg !679
  store i8 1, ptr %0, align 1, !dbg !680
  br label %bb7, !dbg !678

bb7:                                              ; preds = %bb6, %bb5
  %7 = load i8, ptr %0, align 1, !dbg !681, !range !673, !noundef !45
  %8 = trunc i8 %7 to i1, !dbg !681
  ret i1 %8, !dbg !681
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17hb307dce8a79ea034E"(ptr align 8 %_1, ptr align 4 %x) unnamed_addr #1 !dbg !682 {
start:
  %x.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_7 = alloca ptr, align 8
  %_3 = alloca i8, align 1
  %0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !688, metadata !DIExpression(DW_OP_deref)), !dbg !690
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !689, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8)), !dbg !691
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !687, metadata !DIExpression()), !dbg !692
  %_8 = load ptr, ptr %_1, align 8, !dbg !693, !nonnull !45, !align !643, !noundef !45
  %1 = load i8, ptr %_8, align 1, !dbg !693, !range !673, !noundef !45
  %_4 = trunc i8 %1 to i1, !dbg !693
  br i1 %_4, label %bb1, label %bb2, !dbg !693

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_1, i32 0, i32 1, !dbg !694
  %_9 = load ptr, ptr %2, align 8, !dbg !694, !nonnull !45, !align !643, !noundef !45
  store ptr %x, ptr %_7, align 8, !dbg !694
  %3 = load ptr, ptr %_7, align 8, !dbg !694, !nonnull !45, !align !675, !noundef !45
; call alloc::str::<impl str>::to_lowercase::case_ignoreable_then_cased::{{closure}}
  %_6 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17hb4b2b00fec2f862cE"(ptr align 1 %_9, ptr align 4 %3) #17, !dbg !694
  %_5 = xor i1 %_6, true, !dbg !695
  %4 = zext i1 %_5 to i8, !dbg !693
  store i8 %4, ptr %_3, align 1, !dbg !693
  br label %bb3, !dbg !693

bb1:                                              ; preds = %start
  store i8 1, ptr %_3, align 1, !dbg !693
  br label %bb3, !dbg !693

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, ptr %_3, align 1, !dbg !693, !range !673, !noundef !45
  %6 = trunc i8 %5 to i1, !dbg !693
  br i1 %6, label %bb5, label %bb6, !dbg !693

bb6:                                              ; preds = %bb3
  store i8 0, ptr %0, align 1, !dbg !696
  br label %bb7, !dbg !697

bb5:                                              ; preds = %bb3
  %_10 = load ptr, ptr %_1, align 8, !dbg !698, !nonnull !45, !align !643, !noundef !45
  store i8 1, ptr %_10, align 1, !dbg !698
  store i8 1, ptr %0, align 1, !dbg !699
  br label %bb7, !dbg !697

bb7:                                              ; preds = %bb6, %bb5
  %7 = load i8, ptr %0, align 1, !dbg !700, !range !673, !noundef !45
  %8 = trunc i8 %7 to i1, !dbg !700
  ret i1 %8, !dbg !700
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17ha4a5f23a1739fb8bE"(ptr %unique) unnamed_addr #1 !dbg !701 {
start:
  %unique.dbg.spill = alloca ptr, align 8
  store ptr %unique, ptr %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %unique.dbg.spill, metadata !707, metadata !DIExpression()), !dbg !708
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6c7e501aa8d05bbeE"(ptr %unique) #17, !dbg !709
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9eb1d87c9d7b337eE"(ptr %_2) #17, !dbg !710
  ret ptr %0, !dbg !711
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h48b8596408a422faE"(ptr %pointer) unnamed_addr #1 !dbg !712 {
start:
  %pointer.dbg.spill = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %pointer, ptr %pointer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pointer.dbg.spill, metadata !732, metadata !DIExpression()), !dbg !733
  store ptr %pointer, ptr %0, align 8, !dbg !734
  %1 = load ptr, ptr %0, align 8, !dbg !735, !nonnull !45, !noundef !45
  ret ptr %1, !dbg !735
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h5a77d6d20903ef2aE"(ptr %pointer.0, i64 %pointer.1) unnamed_addr #1 !dbg !736 {
start:
  %pointer.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pointer.dbg.spill, i32 0, i32 0
  store ptr %pointer.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pointer.dbg.spill, i32 0, i32 1
  store i64 %pointer.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pointer.dbg.spill, metadata !765, metadata !DIExpression()), !dbg !766
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !767
  store ptr %pointer.0, ptr %3, align 8, !dbg !767
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !767
  store i64 %pointer.1, ptr %4, align 8, !dbg !767
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !768
  %6 = load ptr, ptr %5, align 8, !dbg !768, !nonnull !45, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !768
  %8 = load i64, ptr %7, align 8, !dbg !768, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !768
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !768
  ret { ptr, i64 } %10, !dbg !768
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h6536788035efc0bdE"(ptr %pointer) unnamed_addr #1 !dbg !769 {
start:
  %pointer.dbg.spill = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %pointer, ptr %pointer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %pointer.dbg.spill, metadata !773, metadata !DIExpression()), !dbg !774
  store ptr %pointer, ptr %0, align 8, !dbg !775
  %1 = load ptr, ptr %0, align 8, !dbg !776, !nonnull !45, !noundef !45
  ret ptr %1, !dbg !776
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h8dfa8cec0e925604E"(ptr %pointer.0, i64 %pointer.1) unnamed_addr #1 !dbg !777 {
start:
  %pointer.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pointer.dbg.spill, i32 0, i32 0
  store ptr %pointer.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pointer.dbg.spill, i32 0, i32 1
  store i64 %pointer.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pointer.dbg.spill, metadata !793, metadata !DIExpression()), !dbg !794
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !795
  store ptr %pointer.0, ptr %3, align 8, !dbg !795
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !795
  store i64 %pointer.1, ptr %4, align 8, !dbg !795
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !796
  %6 = load ptr, ptr %5, align 8, !dbg !796, !nonnull !45, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !796
  %8 = load i64, ptr %7, align 8, !dbg !796, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !796
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !796
  ret { ptr, i64 } %10, !dbg !796
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha1829cc479268ba9E"(ptr %pointer.0, i64 %pointer.1) unnamed_addr #1 !dbg !797 {
start:
  %pointer.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pointer.dbg.spill, i32 0, i32 0
  store ptr %pointer.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pointer.dbg.spill, i32 0, i32 1
  store i64 %pointer.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pointer.dbg.spill, metadata !821, metadata !DIExpression()), !dbg !822
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !823
  store ptr %pointer.0, ptr %3, align 8, !dbg !823
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !823
  store i64 %pointer.1, ptr %4, align 8, !dbg !823
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !824
  %6 = load ptr, ptr %5, align 8, !dbg !824, !nonnull !45, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !824
  %8 = load i64, ptr %7, align 8, !dbg !824, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !824
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !824
  ret { ptr, i64 } %10, !dbg !824
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hbf2c858b77d1c5ebE"(ptr %pointer.0, i64 %pointer.1) unnamed_addr #1 !dbg !825 {
start:
  %pointer.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pointer.dbg.spill, i32 0, i32 0
  store ptr %pointer.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pointer.dbg.spill, i32 0, i32 1
  store i64 %pointer.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pointer.dbg.spill, metadata !841, metadata !DIExpression()), !dbg !842
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !843
  store ptr %pointer.0, ptr %3, align 8, !dbg !843
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !843
  store i64 %pointer.1, ptr %4, align 8, !dbg !843
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !844
  %6 = load ptr, ptr %5, align 8, !dbg !844, !nonnull !45, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !844
  %8 = load i64, ptr %7, align 8, !dbg !844, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !844
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !844
  ret { ptr, i64 } %10, !dbg !844
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1b03909c43de7f90E"(ptr align 8 %0) unnamed_addr #1 !dbg !845 {
start:
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %1 = alloca { ptr, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !891, metadata !DIExpression()), !dbg !896
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !892, metadata !DIExpression()), !dbg !897
  call void @llvm.dbg.declare(metadata ptr undef, metadata !898, metadata !DIExpression()), !dbg !907
  store ptr null, ptr %1, align 8, !dbg !909
  %2 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 0, !dbg !910
  %3 = load ptr, ptr %2, align 8, !dbg !910, !noundef !45
  %4 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !910
  %5 = load i64, ptr %4, align 8, !dbg !910
  %6 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !910
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !910
  ret { ptr, i64 } %7, !dbg !910
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h73bf25d0b11c1868E"(ptr sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") %0, ptr align 8 %1) unnamed_addr #1 !dbg !911 {
start:
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !948, metadata !DIExpression()), !dbg !953
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !949, metadata !DIExpression()), !dbg !954
  call void @llvm.dbg.declare(metadata ptr undef, metadata !955, metadata !DIExpression()), !dbg !962
  %2 = getelementptr inbounds %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", ptr %0, i32 0, i32 1, !dbg !964
  store i64 0, ptr %2, align 8, !dbg !964
  ret void, !dbg !965
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a0a8f0657d23512E"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #1 !dbg !966 {
start:
  %t.dbg.spill.i = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 0
  store i64 %0, ptr %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %residual, metadata !1002, metadata !DIExpression()), !dbg !1007
  %6 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 0, !dbg !1008
  %e.0 = load i64, ptr %6, align 8, !dbg !1008
  %7 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 1, !dbg !1008
  %e.1 = load i64, ptr %7, align 8, !dbg !1008, !range !1009, !noundef !45
  %8 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !1008
  store i64 %e.0, ptr %8, align 8, !dbg !1008
  %9 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !1008
  store i64 %e.1, ptr %9, align 8, !dbg !1008
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !1003, metadata !DIExpression()), !dbg !1010
  store i64 %e.0, ptr %t.dbg.spill.i, align 8
  %10 = getelementptr inbounds { i64, i64 }, ptr %t.dbg.spill.i, i32 0, i32 1
  store i64 %e.1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %t.dbg.spill.i, metadata !1011, metadata !DIExpression()), !dbg !1018
  %11 = insertvalue { i64, i64 } undef, i64 %e.0, 0, !dbg !1020
  %12 = insertvalue { i64, i64 } %11, i64 %e.1, 1, !dbg !1020
  %_3.0 = extractvalue { i64, i64 } %12, 0, !dbg !1021
  %_3.1 = extractvalue { i64, i64 } %12, 1, !dbg !1021
  %13 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 0, !dbg !1022
  store i64 %_3.0, ptr %13, align 8, !dbg !1022
  %14 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 1, !dbg !1022
  store i64 %_3.1, ptr %14, align 8, !dbg !1022
  %15 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 0, !dbg !1023
  %16 = load i64, ptr %15, align 8, !dbg !1023
  %17 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 1, !dbg !1023
  %18 = load i64, ptr %17, align 8, !dbg !1023, !range !1024, !noundef !45
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0, !dbg !1023
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1, !dbg !1023
  ret { i64, i64 } %20, !dbg !1023
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcf0d5a0139af7265E"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>") %0, i64 %1, i64 %2, ptr align 8 %3) unnamed_addr #1 !dbg !1025 {
start:
  %t.dbg.spill.i = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 0
  store i64 %1, ptr %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 1
  store i64 %2, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %residual, metadata !1043, metadata !DIExpression()), !dbg !1047
  %6 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 0, !dbg !1048
  %e.0 = load i64, ptr %6, align 8, !dbg !1048
  %7 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 1, !dbg !1048
  %e.1 = load i64, ptr %7, align 8, !dbg !1048, !range !1009, !noundef !45
  %8 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !1048
  store i64 %e.0, ptr %8, align 8, !dbg !1048
  %9 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !1048
  store i64 %e.1, ptr %9, align 8, !dbg !1048
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !1044, metadata !DIExpression()), !dbg !1049
  store i64 %e.0, ptr %t.dbg.spill.i, align 8
  %10 = getelementptr inbounds { i64, i64 }, ptr %t.dbg.spill.i, i32 0, i32 1
  store i64 %e.1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %t.dbg.spill.i, metadata !1011, metadata !DIExpression()), !dbg !1050
  %11 = insertvalue { i64, i64 } undef, i64 %e.0, 0, !dbg !1052
  %12 = insertvalue { i64, i64 } %11, i64 %e.1, 1, !dbg !1052
  %_3.0 = extractvalue { i64, i64 } %12, 0, !dbg !1053
  %_3.1 = extractvalue { i64, i64 } %12, 1, !dbg !1053
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>::Err", ptr %0, i32 0, i32 1, !dbg !1054
  %14 = getelementptr inbounds { i64, i64 }, ptr %13, i32 0, i32 0, !dbg !1054
  store i64 %_3.0, ptr %14, align 8, !dbg !1054
  %15 = getelementptr inbounds { i64, i64 }, ptr %13, i32 0, i32 1, !dbg !1054
  store i64 %_3.1, ptr %15, align 8, !dbg !1054
  store i64 1, ptr %0, align 8, !dbg !1054
  ret void, !dbg !1055
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd6f3d9742227c4e7E"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #1 !dbg !1056 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 0
  store i64 %0, ptr %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %residual, metadata !1074, metadata !DIExpression()), !dbg !1078
  %6 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 0, !dbg !1079
  %e.0 = load i64, ptr %6, align 8, !dbg !1079
  %7 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 1, !dbg !1079
  %e.1 = load i64, ptr %7, align 8, !dbg !1079, !range !1009, !noundef !45
  %8 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !1079
  store i64 %e.0, ptr %8, align 8, !dbg !1079
  %9 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !1079
  store i64 %e.1, ptr %9, align 8, !dbg !1079
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !1075, metadata !DIExpression()), !dbg !1080
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %10 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd6ef18c3114f3244E"(i64 %e.0, i64 %e.1) #17, !dbg !1081
  %_3.0 = extractvalue { i64, i64 } %10, 0, !dbg !1081
  %_3.1 = extractvalue { i64, i64 } %10, 1, !dbg !1081
  %11 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 0, !dbg !1082
  store i64 %_3.0, ptr %11, align 8, !dbg !1082
  %12 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 1, !dbg !1082
  store i64 %_3.1, ptr %12, align 8, !dbg !1082
  %13 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 0, !dbg !1083
  %14 = load i64, ptr %13, align 8, !dbg !1083
  %15 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 1, !dbg !1083
  %16 = load i64, ptr %15, align 8, !dbg !1083, !range !1024, !noundef !45
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !1083
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !1083
  ret { i64, i64 } %18, !dbg !1083
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17heaf6fce254c61816E"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>") %0, i64 %1, i64 %2, ptr align 8 %3) unnamed_addr #1 !dbg !1084 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 0
  store i64 %1, ptr %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 1
  store i64 %2, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %residual, metadata !1088, metadata !DIExpression()), !dbg !1092
  %6 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 0, !dbg !1093
  %e.0 = load i64, ptr %6, align 8, !dbg !1093
  %7 = getelementptr inbounds { i64, i64 }, ptr %residual, i32 0, i32 1, !dbg !1093
  %e.1 = load i64, ptr %7, align 8, !dbg !1093, !range !1009, !noundef !45
  %8 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !1093
  store i64 %e.0, ptr %8, align 8, !dbg !1093
  %9 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !1093
  store i64 %e.1, ptr %9, align 8, !dbg !1093
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !1089, metadata !DIExpression()), !dbg !1094
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %10 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd6ef18c3114f3244E"(i64 %e.0, i64 %e.1) #17, !dbg !1095
  %_3.0 = extractvalue { i64, i64 } %10, 0, !dbg !1095
  %_3.1 = extractvalue { i64, i64 } %10, 1, !dbg !1095
  %11 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>::Err", ptr %0, i32 0, i32 1, !dbg !1096
  %12 = getelementptr inbounds { i64, i64 }, ptr %11, i32 0, i32 0, !dbg !1096
  store i64 %_3.0, ptr %12, align 8, !dbg !1096
  %13 = getelementptr inbounds { i64, i64 }, ptr %11, i32 0, i32 1, !dbg !1096
  store i64 %_3.1, ptr %13, align 8, !dbg !1096
  store i64 1, ptr %0, align 8, !dbg !1096
  ret void, !dbg !1097
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3525879dc69536aeE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !1098 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1152, metadata !DIExpression()), !dbg !1156
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !1153, metadata !DIExpression()), !dbg !1157
  %_3 = load ptr, ptr %self, align 8, !dbg !1158, !nonnull !45, !align !1159, !noundef !45
; call <alloc::collections::TryReserveErrorKind as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN76_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h96f06e6fa50bef9fE"(ptr align 8 %_3, ptr align 8 %f) #17, !dbg !1160
  ret i1 %0, !dbg !1161
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h48dacd3e93df9961E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !1162 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1167, metadata !DIExpression()), !dbg !1171
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !1168, metadata !DIExpression()), !dbg !1172
  %_3 = load ptr, ptr %self, align 8, !dbg !1173, !nonnull !45, !align !1159, !noundef !45
; call <core::str::error::Utf8Error as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17he8fc625818b35893E"(ptr align 8 %_3, ptr align 8 %f) #17, !dbg !1174
  ret i1 %0, !dbg !1175
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hca3fecd557984023E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !1176 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1181, metadata !DIExpression()), !dbg !1185
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !1182, metadata !DIExpression()), !dbg !1186
  %_3 = load ptr, ptr %self, align 8, !dbg !1187, !nonnull !45, !align !1159, !noundef !45
; call <alloc::vec::Vec<T,A> as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN65_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hd393aa0156f5d7a0E"(ptr align 8 %_3, ptr align 8 %f) #17, !dbg !1188
  ret i1 %0, !dbg !1189
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h0189270e9eeaa4eaE(ptr %ptr) unnamed_addr #0 !dbg !1190 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1197, metadata !DIExpression()), !dbg !1200
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17he3b0d8532db41935E"(ptr %ptr) #17, !dbg !1201
  %_2 = xor i1 %_3, true, !dbg !1202
  br i1 %_2, label %bb2, label %bb1, !dbg !1202

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !1202
  br label %bb3, !dbg !1202

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17haee83d31f1c0c2faE"(ptr %ptr) #17, !dbg !1203
  %1 = zext i1 %_4 to i8, !dbg !1202
  store i8 %1, ptr %0, align 1, !dbg !1202
  br label %bb3, !dbg !1202

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !1204, !range !673, !noundef !45
  %3 = trunc i8 %2 to i1, !dbg !1204
  ret i1 %3, !dbg !1204
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h87cab91c3f15e57bE(ptr %ptr) unnamed_addr #0 !dbg !1205 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1210, metadata !DIExpression()), !dbg !1213
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdaa273b9fa89c3ccE"(ptr %ptr) #17, !dbg !1214
  %_2 = xor i1 %_3, true, !dbg !1215
  br i1 %_2, label %bb2, label %bb1, !dbg !1215

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !1215
  br label %bb3, !dbg !1215

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hf4183850a830a90aE"(ptr %ptr) #17, !dbg !1216
  %1 = zext i1 %_4 to i8, !dbg !1215
  store i8 %1, ptr %0, align 1, !dbg !1215
  br label %bb3, !dbg !1215

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !1217, !range !673, !noundef !45
  %3 = trunc i8 %2 to i1, !dbg !1217
  ret i1 %3, !dbg !1217
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h93e02132c34304b2E(ptr %ptr) unnamed_addr #0 !dbg !1218 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1223, metadata !DIExpression()), !dbg !1226
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hc241c24205100b20E"(ptr %ptr) #17, !dbg !1227
  %_2 = xor i1 %_3, true, !dbg !1228
  br i1 %_2, label %bb2, label %bb1, !dbg !1228

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !1228
  br label %bb3, !dbg !1228

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h851c7269c18c637eE"(ptr %ptr) #17, !dbg !1229
  %1 = zext i1 %_4 to i8, !dbg !1228
  store i8 %1, ptr %0, align 1, !dbg !1228
  br label %bb3, !dbg !1228

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !1230, !range !673, !noundef !45
  %3 = trunc i8 %2 to i1, !dbg !1230
  ret i1 %3, !dbg !1230
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hb8a5e17d810b5ea4E(ptr %ptr) unnamed_addr #0 !dbg !1231 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1236, metadata !DIExpression()), !dbg !1239
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hbce60e723f328289E"(ptr %ptr) #17, !dbg !1240
  %_2 = xor i1 %_3, true, !dbg !1241
  br i1 %_2, label %bb2, label %bb1, !dbg !1241

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !1241
  br label %bb3, !dbg !1241

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hf574e85fa51892e7E"(ptr %ptr) #17, !dbg !1242
  %1 = zext i1 %_4 to i8, !dbg !1241
  store i8 %1, ptr %0, align 1, !dbg !1241
  br label %bb3, !dbg !1241

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !1243, !range !673, !noundef !45
  %3 = trunc i8 %2 to i1, !dbg !1243
  ret i1 %3, !dbg !1243
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hd6978d6dcad3c904E(ptr %ptr) unnamed_addr #0 !dbg !1244 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1249, metadata !DIExpression()), !dbg !1252
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hcc8584ea6a3199b6E"(ptr %ptr) #17, !dbg !1253
  %_2 = xor i1 %_3, true, !dbg !1254
  br i1 %_2, label %bb2, label %bb1, !dbg !1254

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !1254
  br label %bb3, !dbg !1254

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h9423dce315c1306eE"(ptr %ptr) #17, !dbg !1255
  %1 = zext i1 %_4 to i8, !dbg !1254
  store i8 %1, ptr %0, align 1, !dbg !1254
  br label %bb3, !dbg !1254

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !1256, !range !673, !noundef !45
  %3 = trunc i8 %2 to i1, !dbg !1256
  ret i1 %3, !dbg !1256
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hdcee5023180a3051E(ptr %ptr) unnamed_addr #0 !dbg !1257 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1262, metadata !DIExpression()), !dbg !1265
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h2b08a9d8a36f86a9E"(ptr %ptr) #17, !dbg !1266
  %_2 = xor i1 %_3, true, !dbg !1267
  br i1 %_2, label %bb2, label %bb1, !dbg !1267

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !1267
  br label %bb3, !dbg !1267

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h48803f580c0446d4E"(ptr %ptr) #17, !dbg !1268
  %1 = zext i1 %_4 to i8, !dbg !1267
  store i8 %1, ptr %0, align 1, !dbg !1267
  br label %bb3, !dbg !1267

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !1269, !range !673, !noundef !45
  %3 = trunc i8 %2 to i1, !dbg !1269
  ret i1 %3, !dbg !1269
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hedbc77d5634e60acE(ptr %ptr) unnamed_addr #0 !dbg !1270 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !1275, metadata !DIExpression()), !dbg !1278
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h1b460fa366e2e140E"(ptr %ptr) #17, !dbg !1279
  %_2 = xor i1 %_3, true, !dbg !1280
  br i1 %_2, label %bb2, label %bb1, !dbg !1280

bb1:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !1280
  br label %bb3, !dbg !1280

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_aligned
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hd8077218c9a74275E"(ptr %ptr) #17, !dbg !1281
  %1 = zext i1 %_4 to i8, !dbg !1280
  store i8 %1, ptr %0, align 1, !dbg !1280
  br label %bb3, !dbg !1280

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %0, align 1, !dbg !1282, !range !673, !noundef !45
  %3 = trunc i8 %2 to i1, !dbg !1282
  ret i1 %3, !dbg !1282
}

; core::intrinsics::is_valid_allocation_size
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17h0e1d3c87edc4155dE(i64 %len) unnamed_addr #0 !dbg !1283 {
start:
  %max_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1287, metadata !DIExpression()), !dbg !1290
  store i64 9223372036854775807, ptr %max_len.dbg.spill, align 8, !dbg !1291
  call void @llvm.dbg.declare(metadata ptr %max_len.dbg.spill, metadata !1288, metadata !DIExpression()), !dbg !1292
  %0 = icmp ule i64 %len, 9223372036854775807, !dbg !1293
  ret i1 %0, !dbg !1294
}

; core::intrinsics::is_valid_allocation_size
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17ha2af378f09d1ecedE(i64 %len) unnamed_addr #0 !dbg !1295 {
start:
  %max_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1297, metadata !DIExpression()), !dbg !1300
  store i64 9223372036854775807, ptr %max_len.dbg.spill, align 8, !dbg !1301
  call void @llvm.dbg.declare(metadata ptr %max_len.dbg.spill, metadata !1298, metadata !DIExpression()), !dbg !1302
  %0 = icmp ule i64 %len, 9223372036854775807, !dbg !1303
  ret i1 %0, !dbg !1304
}

; core::intrinsics::copy
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core10intrinsics4copy17h6fea0d8c69cb5207E(ptr %src, ptr %dst, i64 %count) unnamed_addr #1 !dbg !1305 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_5 = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1310, metadata !DIExpression()), !dbg !1313
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !1311, metadata !DIExpression()), !dbg !1314
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !1312, metadata !DIExpression()), !dbg !1315
  store ptr %src, ptr %_5, align 8, !dbg !1316
  %0 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !1316
  store ptr %dst, ptr %0, align 8, !dbg !1316
  %1 = load ptr, ptr %_5, align 8, !dbg !1316, !noundef !45
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !1316
  %3 = load ptr, ptr %2, align 8, !dbg !1316, !noundef !45
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1317, metadata !DIExpression()), !dbg !1324
  store ptr %3, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1323, metadata !DIExpression()), !dbg !1324
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h8639f8001f0eeb5aE(ptr %1) #17, !dbg !1326
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !1326

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !1326
  br label %bb3.i, !dbg !1326

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %_6.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h8639f8001f0eeb5aE(ptr %3) #17, !dbg !1327
  %4 = zext i1 %_6.i to i8, !dbg !1326
  store i8 %4, ptr %_4.i, align 1, !dbg !1326
  br label %bb3.i, !dbg !1326

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !1328, !range !673, !noundef !45
  %6 = trunc i8 %5 to i1, !dbg !1328
  %_3.i = xor i1 %6, true, !dbg !1328
  br i1 %_3.i, label %bb6.i, label %_ZN4core10intrinsics4copy7runtime17hddfc2b2891de0632E.exit, !dbg !1328

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_a1d063fc56d08794b1bf303ec0d8a16b, i64 112) #18, !dbg !1329
  unreachable, !dbg !1329

_ZN4core10intrinsics4copy7runtime17hddfc2b2891de0632E.exit: ; preds = %bb3.i
  %7 = mul i64 1, %count, !dbg !1330
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %dst, ptr align 1 %src, i64 %7, i1 false), !dbg !1330
  ret void, !dbg !1331
}

; core::any::TypeId::of
; Function Attrs: noredzone nounwind
define i64 @_ZN4core3any6TypeId2of17haa644bb0c23b4121E() unnamed_addr #0 !dbg !1332 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 7787647907106037437, ptr %0, align 8, !dbg !1342
  %_1 = load i64, ptr %0, align 8, !dbg !1342, !noundef !45
  store i64 %_1, ptr %1, align 8, !dbg !1343
  %2 = load i64, ptr %1, align 8, !dbg !1344, !noundef !45
  ret i64 %2, !dbg !1344
}

; core::any::TypeId::of
; Function Attrs: noredzone nounwind
define i64 @_ZN4core3any6TypeId2of17hc5927e1264113188E() unnamed_addr #0 !dbg !1345 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 -7678071482048903663, ptr %0, align 8, !dbg !1346
  %_1 = load i64, ptr %0, align 8, !dbg !1346, !noundef !45
  store i64 %_1, ptr %1, align 8, !dbg !1347
  %2 = load i64, ptr %1, align 8, !dbg !1348, !noundef !45
  ret i64 %2, !dbg !1348
}

; core::cmp::Ord::max
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3cmp3Ord3max17h1cf295d047a72e91E(i64 %self, i64 %other) unnamed_addr #1 !dbg !1349 {
start:
  %other.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1355, metadata !DIExpression()), !dbg !1359
  store i64 %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !1356, metadata !DIExpression()), !dbg !1360
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17h301efbe0d394c258E(i64 %self, i64 %other) #17, !dbg !1361, !range !1362
  ret i64 %0, !dbg !1363
}

; core::cmp::max
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3cmp3max17ha1686a90d4959293E(i64 %v1, i64 %v2) unnamed_addr #1 !dbg !1364 {
start:
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  store i64 %v1, ptr %v1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %v1.dbg.spill, metadata !1366, metadata !DIExpression()), !dbg !1370
  store i64 %v2, ptr %v2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %v2.dbg.spill, metadata !1367, metadata !DIExpression()), !dbg !1371
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17h1cf295d047a72e91E(i64 %v1, i64 %v2) #17, !dbg !1372, !range !1362
  ret i64 %0, !dbg !1373
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h7b283cdbd8a6d95bE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 !dbg !1374 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1380, metadata !DIExpression()), !dbg !1382
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !1381, metadata !DIExpression()), !dbg !1383
  %_4 = load i64, ptr %self, align 8, !dbg !1384, !noundef !45
  %_5 = load i64, ptr %other, align 8, !dbg !1385, !noundef !45
  %_3 = icmp ult i64 %_4, %_5, !dbg !1384
  br i1 %_3, label %bb1, label %bb2, !dbg !1384

bb2:                                              ; preds = %start
  %_7 = load i64, ptr %self, align 8, !dbg !1386, !noundef !45
  %_8 = load i64, ptr %other, align 8, !dbg !1387, !noundef !45
  %_6 = icmp eq i64 %_7, %_8, !dbg !1386
  br i1 %_6, label %bb3, label %bb4, !dbg !1386

bb1:                                              ; preds = %start
  store i8 -1, ptr %0, align 1, !dbg !1388
  br label %bb5, !dbg !1389

bb5:                                              ; preds = %bb4, %bb3, %bb1
  %1 = load i8, ptr %0, align 1, !dbg !1390, !range !1391, !noundef !45
  ret i8 %1, !dbg !1390

bb4:                                              ; preds = %bb2
  store i8 1, ptr %0, align 1, !dbg !1392
  br label %bb5, !dbg !1393

bb3:                                              ; preds = %bb2
  store i8 0, ptr %0, align 1, !dbg !1394
  br label %bb5, !dbg !1393
}

; core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h644fe0bfe8698e8bE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #1 !dbg !1395 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1400, metadata !DIExpression()), !dbg !1402
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !1401, metadata !DIExpression()), !dbg !1403
  %_3 = load i8, ptr %self, align 1, !dbg !1404, !noundef !45
  %_4 = load i8, ptr %other, align 1, !dbg !1405, !noundef !45
  %0 = icmp eq i8 %_3, %_4, !dbg !1404
  ret i1 %0, !dbg !1406
}

; core::cmp::max_by
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3cmp6max_by17h301efbe0d394c258E(i64 %0, i64 %1) unnamed_addr #1 !dbg !1407 {
start:
  %compare.dbg.spill = alloca {}, align 1
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_5 = alloca { ptr, ptr }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, ptr %v1, align 8
  store i64 %1, ptr %v2, align 8
  call void @llvm.dbg.declare(metadata ptr %v1, metadata !1415, metadata !DIExpression()), !dbg !1420
  call void @llvm.dbg.declare(metadata ptr %v2, metadata !1416, metadata !DIExpression()), !dbg !1421
  call void @llvm.dbg.declare(metadata ptr %compare.dbg.spill, metadata !1417, metadata !DIExpression()), !dbg !1422
  store i8 0, ptr %_10, align 1, !dbg !1423
  store i8 0, ptr %_9, align 1, !dbg !1423
  store i8 1, ptr %_10, align 1, !dbg !1423
  store i8 1, ptr %_9, align 1, !dbg !1423
  store ptr %v1, ptr %_5, align 8, !dbg !1423
  %3 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !1423
  store ptr %v2, ptr %3, align 8, !dbg !1423
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 0, !dbg !1423
  %5 = load ptr, ptr %4, align 8, !dbg !1423, !nonnull !45, !align !1159, !noundef !45
  %6 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !1423
  %7 = load ptr, ptr %6, align 8, !dbg !1423, !nonnull !45, !align !1159, !noundef !45
; call core::ops::function::FnOnce::call_once
  %8 = call i8 @_ZN4core3ops8function6FnOnce9call_once17h823c194015f78686E(ptr align 8 %5, ptr align 8 %7) #17, !dbg !1423, !range !1391
  store i8 %8, ptr %_4, align 1, !dbg !1423
  %_8 = load i8, ptr %_4, align 1, !dbg !1423, !range !1391, !noundef !45
  switch i8 %_8, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !1424

bb3:                                              ; preds = %start
  unreachable, !dbg !1423

bb4:                                              ; preds = %start, %start
  store i8 0, ptr %_9, align 1, !dbg !1425
  %9 = load i64, ptr %v2, align 8, !dbg !1425, !range !1362, !noundef !45
  store i64 %9, ptr %2, align 8, !dbg !1425
  br label %bb5, !dbg !1425

bb2:                                              ; preds = %start
  store i8 0, ptr %_10, align 1, !dbg !1426
  %10 = load i64, ptr %v1, align 8, !dbg !1426, !range !1362, !noundef !45
  store i64 %10, ptr %2, align 8, !dbg !1426
  br label %bb5, !dbg !1426

bb5:                                              ; preds = %bb4, %bb2
  %11 = load i8, ptr %_9, align 1, !dbg !1427, !range !673, !noundef !45
  %12 = trunc i8 %11 to i1, !dbg !1427
  br i1 %12, label %bb8, label %bb6, !dbg !1427

bb6:                                              ; preds = %bb8, %bb5
  %13 = load i8, ptr %_10, align 1, !dbg !1427, !range !673, !noundef !45
  %14 = trunc i8 %13 to i1, !dbg !1427
  br i1 %14, label %bb9, label %bb7, !dbg !1427

bb8:                                              ; preds = %bb5
  br label %bb6, !dbg !1427

bb7:                                              ; preds = %bb9, %bb6
  %15 = load i64, ptr %2, align 8, !dbg !1428, !range !1362, !noundef !45
  ret i64 %15, !dbg !1428

bb9:                                              ; preds = %bb6
  br label %bb7, !dbg !1427
}

; core::ffi::c_str::CStr::to_bytes_with_nul
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17h38e806c05411979fE(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !1429 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1442, metadata !DIExpression()), !dbg !1443
  %2 = insertvalue { ptr, i64 } undef, ptr %self.0, 0, !dbg !1444
  %3 = insertvalue { ptr, i64 } %2, i64 %self.1, 1, !dbg !1444
  ret { ptr, i64 } %3, !dbg !1444
}

; core::ffi::c_str::CStr::from_bytes_with_nul_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17h2453c5391e5bedf4E(ptr align 1 %bytes.0, i64 %bytes.1) unnamed_addr #1 !dbg !1445 {
start:
  %bytes.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill, i32 0, i32 0
  store ptr %bytes.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill, i32 0, i32 1
  store i64 %bytes.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes.dbg.spill, metadata !1449, metadata !DIExpression()), !dbg !1450
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 0, !dbg !1451
  store ptr %bytes.0, ptr %2, align 8, !dbg !1451
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1451
  store i64 %bytes.1, ptr %3, align 8, !dbg !1451
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 0, !dbg !1452
  %5 = load ptr, ptr %4, align 8, !dbg !1452, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_2, i32 0, i32 1, !dbg !1452
  %7 = load i64, ptr %6, align 8, !dbg !1452, !noundef !45
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::rt_impl
  %8 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7rt_impl17h975bbc3c6d75c8a6E(ptr align 1 %5, i64 %7) #17, !dbg !1452
  %9 = extractvalue { ptr, i64 } %8, 0, !dbg !1452
  %10 = extractvalue { ptr, i64 } %8, 1, !dbg !1452
  %11 = insertvalue { ptr, i64 } undef, ptr %9, 0, !dbg !1453
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !1453
  ret { ptr, i64 } %12, !dbg !1453
}

; core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::rt_impl
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7rt_impl17h975bbc3c6d75c8a6E(ptr align 1 %bytes.0, i64 %bytes.1) unnamed_addr #1 !dbg !1454 {
start:
  %bytes.dbg.spill = alloca { ptr, i64 }, align 8
  %_3 = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill, i32 0, i32 0
  store ptr %bytes.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill, i32 0, i32 1
  store i64 %bytes.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes.dbg.spill, metadata !1458, metadata !DIExpression()), !dbg !1459
; call core::slice::<impl [T]>::is_empty
  %_5 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h08db4e672d7e3a62E"(ptr align 1 %bytes.0, i64 %bytes.1) #17, !dbg !1460
  %_4 = xor i1 %_5, true, !dbg !1461
  br i1 %_4, label %bb2, label %bb1, !dbg !1461

bb1:                                              ; preds = %start
  store i8 0, ptr %_3, align 1, !dbg !1461
  br label %bb3, !dbg !1461

bb2:                                              ; preds = %start
  %_10.0 = sub i64 %bytes.1, 1, !dbg !1462
  %_10.1 = icmp ult i64 %bytes.1, 1, !dbg !1462
  %2 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !1462
  br i1 %2, label %panic, label %bb5, !dbg !1462

bb5:                                              ; preds = %bb2
  %_12 = icmp ult i64 %_10.0, %bytes.1, !dbg !1463
  %3 = call i1 @llvm.expect.i1(i1 %_12, i1 true), !dbg !1463
  br i1 %3, label %bb6, label %panic1, !dbg !1463

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_7e9d09d970da31351a3a2baab06340b4) #18, !dbg !1462
  unreachable, !dbg !1462

bb6:                                              ; preds = %bb5
  %4 = getelementptr inbounds [0 x i8], ptr %bytes.0, i64 0, i64 %_10.0, !dbg !1463
  %_7 = load i8, ptr %4, align 1, !dbg !1463, !noundef !45
  %_6 = icmp eq i8 %_7, 0, !dbg !1463
  %5 = zext i1 %_6 to i8, !dbg !1461
  store i8 %5, ptr %_3, align 1, !dbg !1461
  br label %bb3, !dbg !1461

panic1:                                           ; preds = %bb5
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_10.0, i64 %bytes.1, ptr align 8 @alloc_858bb74fd281da4f8d7ba1064cf372e9) #18, !dbg !1463
  unreachable, !dbg !1463

bb3:                                              ; preds = %bb1, %bb6
  %6 = load i8, ptr %_3, align 1, !dbg !1464, !range !673, !noundef !45
  %7 = trunc i8 %6 to i1, !dbg !1464
  %_2 = xor i1 %7, true, !dbg !1464
  br i1 %_2, label %bb7, label %bb8, !dbg !1464

bb8:                                              ; preds = %bb3
  %8 = insertvalue { ptr, i64 } undef, ptr %bytes.0, 0, !dbg !1465
  %9 = insertvalue { ptr, i64 } %8, i64 %bytes.1, 1, !dbg !1465
  ret { ptr, i64 } %9, !dbg !1465

bb7:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_2aadb9d815d34bd6a9eb97b94a849bcf, i64 66, ptr align 8 @alloc_9d23f9ee21ea68ee2190adef8e985ab6) #18, !dbg !1464
  unreachable, !dbg !1464
}

; core::ffi::c_str::CStr::to_bytes
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3ffi5c_str4CStr8to_bytes17h82852abaa6893a37E(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !1466 {
start:
  %bytes.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_4 = alloca i64, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1468, metadata !DIExpression()), !dbg !1471
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %2 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17h38e806c05411979fE(ptr align 1 %self.0, i64 %self.1) #17, !dbg !1472
  %bytes.0 = extractvalue { ptr, i64 } %2, 0, !dbg !1472
  %bytes.1 = extractvalue { ptr, i64 } %2, 1, !dbg !1472
  %3 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill, i32 0, i32 0, !dbg !1472
  store ptr %bytes.0, ptr %3, align 8, !dbg !1472
  %4 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill, i32 0, i32 1, !dbg !1472
  store i64 %bytes.1, ptr %4, align 8, !dbg !1472
  call void @llvm.dbg.declare(metadata ptr %bytes.dbg.spill, metadata !1469, metadata !DIExpression()), !dbg !1473
  %_8.0 = sub i64 %bytes.1, 1, !dbg !1474
  %_8.1 = icmp ult i64 %bytes.1, 1, !dbg !1474
  %5 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !1474
  br i1 %5, label %panic, label %bb2, !dbg !1474

bb2:                                              ; preds = %start
  store i64 %_8.0, ptr %_4, align 8, !dbg !1475
  %6 = load i64, ptr %_4, align 8, !dbg !1476, !noundef !45
; call core::slice::<impl [T]>::get_unchecked
  %7 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h4fc3709c857d7bd4E"(ptr align 1 %bytes.0, i64 %bytes.1, i64 %6) #17, !dbg !1476
  %8 = extractvalue { ptr, i64 } %7, 0, !dbg !1476
  %9 = extractvalue { ptr, i64 } %7, 1, !dbg !1476
  %10 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !1477
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !1477
  ret { ptr, i64 } %11, !dbg !1477

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_dcd8707297622958cf4db4070c7dc808) #18, !dbg !1474
  unreachable, !dbg !1474
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hc0df83b4a7aeedffE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !1478 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1485, metadata !DIExpression()), !dbg !1487
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !1486, metadata !DIExpression()), !dbg !1488
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h8ae5bebd96008cd7E(ptr align 8 %f) #17, !dbg !1489
  br i1 %_3, label %bb2, label %bb3, !dbg !1489

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h15ce7912bcc9ca8eE(ptr align 8 %f) #17, !dbg !1490
  br i1 %_5, label %bb5, label %bb6, !dbg !1490

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hf98e14581fe3e2e0E"(ptr align 8 %self, ptr align 8 %f) #17, !dbg !1491
  %2 = zext i1 %1 to i8, !dbg !1491
  store i8 %2, ptr %0, align 1, !dbg !1491
  br label %bb7, !dbg !1491

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %3 = load i8, ptr %0, align 1, !dbg !1492, !range !673, !noundef !45
  %4 = trunc i8 %3 to i1, !dbg !1492
  ret i1 %4, !dbg !1492

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hc65172f96ee21bbaE"(ptr align 8 %self, ptr align 8 %f) #17, !dbg !1493
  %6 = zext i1 %5 to i8, !dbg !1493
  store i8 %6, ptr %0, align 1, !dbg !1493
  br label %bb7, !dbg !1493

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h229ff530b39bb162E"(ptr align 8 %self, ptr align 8 %f) #17, !dbg !1494
  %8 = zext i1 %7 to i8, !dbg !1494
  store i8 %8, ptr %0, align 1, !dbg !1494
  br label %bb7, !dbg !1494
}

; core::fmt::Write::write_fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17h253ba6ca3452f57eE(ptr align 8 %0, ptr %args) unnamed_addr #0 !dbg !1495 {
start:
  %1 = alloca %"core::fmt::Arguments<'_>", align 8
  %self = alloca ptr, align 8
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1569, metadata !DIExpression()), !dbg !1573
  call void @llvm.dbg.declare(metadata ptr %args, metadata !1570, metadata !DIExpression()), !dbg !1574
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %args, i64 48, i1 false), !dbg !1575
; call core::fmt::write
  %2 = call zeroext i1 @_ZN4core3fmt5write17h3bdd1810c8fc8ac3E(ptr align 1 %self, ptr align 8 @vtable.1, ptr %1) #17, !dbg !1575
  ret i1 %2, !dbg !1576
}

; core::fmt::Arguments::estimated_capacity
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3fmt9Arguments18estimated_capacity17h1abc4b7786dd4e08E(ptr align 8 %self) unnamed_addr #1 !dbg !1577 {
start:
  %pieces_length.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %0 = alloca i64, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1582, metadata !DIExpression()), !dbg !1585
  %1 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %self, i32 0, i32 1, !dbg !1586
  %2 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 0, !dbg !1586
  %_19.0 = load ptr, ptr %2, align 8, !dbg !1586, !nonnull !45, !align !1159, !noundef !45
  %3 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !1586
  %_19.1 = load i64, ptr %3, align 8, !dbg !1586, !noundef !45
; call core::slice::<impl [T]>::iter
  %4 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h665051f55ae64435E"(ptr align 8 %_19.0, i64 %_19.1) #17, !dbg !1586
  %_4.0 = extractvalue { ptr, ptr } %4, 0, !dbg !1586
  %_4.1 = extractvalue { ptr, ptr } %4, 1, !dbg !1586
; call core::iter::traits::iterator::Iterator::map
  %5 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h15ad5af0869f4c3aE(ptr %_4.0, ptr %_4.1) #17, !dbg !1586
  %_3.0 = extractvalue { ptr, ptr } %5, 0, !dbg !1586
  %_3.1 = extractvalue { ptr, ptr } %5, 1, !dbg !1586
; call core::iter::traits::iterator::Iterator::sum
  %pieces_length = call i64 @_ZN4core4iter6traits8iterator8Iterator3sum17hc807e64a1360c675E(ptr %_3.0, ptr %_3.1) #17, !dbg !1586
  store i64 %pieces_length, ptr %pieces_length.dbg.spill, align 8, !dbg !1586
  call void @llvm.dbg.declare(metadata ptr %pieces_length.dbg.spill, metadata !1583, metadata !DIExpression()), !dbg !1587
  %6 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %self, i32 0, i32 2, !dbg !1588
  %7 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 0, !dbg !1588
  %_20.0 = load ptr, ptr %7, align 8, !dbg !1588, !nonnull !45, !align !1159, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 1, !dbg !1588
  %_20.1 = load i64, ptr %8, align 8, !dbg !1588, !noundef !45
; call core::slice::<impl [T]>::is_empty
  %_6 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h30532b1325b0eddbE"(ptr align 8 %_20.0, i64 %_20.1) #17, !dbg !1588
  br i1 %_6, label %bb5, label %bb6, !dbg !1588

bb6:                                              ; preds = %start
  %9 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %self, i32 0, i32 1, !dbg !1589
  %10 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 0, !dbg !1589
  %_21.0 = load ptr, ptr %10, align 8, !dbg !1589, !nonnull !45, !align !1159, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %9, i32 0, i32 1, !dbg !1589
  %_21.1 = load i64, ptr %11, align 8, !dbg !1589, !noundef !45
; call core::slice::<impl [T]>::is_empty
  %_10 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hf05a1983d0ea83a1E"(ptr align 8 %_21.0, i64 %_21.1) #17, !dbg !1589
  %_9 = xor i1 %_10, true, !dbg !1590
  br i1 %_9, label %bb11, label %bb10, !dbg !1590

bb5:                                              ; preds = %start
  store i64 %pieces_length, ptr %0, align 8, !dbg !1591
  br label %bb19, !dbg !1592

bb19:                                             ; preds = %bb17, %bb16, %bb5
  %12 = load i64, ptr %0, align 8, !dbg !1593, !noundef !45
  ret i64 %12, !dbg !1593

bb10:                                             ; preds = %bb6
  store i8 0, ptr %_8, align 1, !dbg !1590
  br label %bb12, !dbg !1590

bb11:                                             ; preds = %bb6
  %13 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %self, i32 0, i32 1, !dbg !1594
  %14 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 0, !dbg !1594
  %_22.0 = load ptr, ptr %14, align 8, !dbg !1594, !nonnull !45, !align !1159, !noundef !45
  %15 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 1, !dbg !1594
  %_22.1 = load i64, ptr %15, align 8, !dbg !1594, !noundef !45
  %_14 = icmp ult i64 0, %_22.1, !dbg !1594
  %16 = call i1 @llvm.expect.i1(i1 %_14, i1 true), !dbg !1594
  br i1 %16, label %bb14, label %panic, !dbg !1594

bb14:                                             ; preds = %bb11
  %17 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %self, i32 0, i32 1, !dbg !1594
  %18 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 0, !dbg !1594
  %_23.0 = load ptr, ptr %18, align 8, !dbg !1594, !nonnull !45, !align !1159, !noundef !45
  %19 = getelementptr inbounds { ptr, i64 }, ptr %17, i32 0, i32 1, !dbg !1594
  %_23.1 = load i64, ptr %19, align 8, !dbg !1594, !noundef !45
  %20 = getelementptr inbounds [0 x { ptr, i64 }], ptr %_23.0, i64 0, i64 0, !dbg !1594
  %21 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 0, !dbg !1594
  %_24.0 = load ptr, ptr %21, align 8, !dbg !1594, !nonnull !45, !align !643, !noundef !45
  %22 = getelementptr inbounds { ptr, i64 }, ptr %20, i32 0, i32 1, !dbg !1594
  %_24.1 = load i64, ptr %22, align 8, !dbg !1594, !noundef !45
; call core::str::<impl str>::is_empty
  %_11 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h098534c0490344a9E"(ptr align 1 %_24.0, i64 %_24.1) #17, !dbg !1594
  %23 = zext i1 %_11 to i8, !dbg !1590
  store i8 %23, ptr %_8, align 1, !dbg !1590
  br label %bb12, !dbg !1590

panic:                                            ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 0, i64 %_22.1, ptr align 8 @alloc_0f3bb02bc65dc1e76fd29ee3d1aa7b76) #18, !dbg !1594
  unreachable, !dbg !1594

bb12:                                             ; preds = %bb10, %bb14
  %24 = load i8, ptr %_8, align 1, !dbg !1590, !range !673, !noundef !45
  %25 = trunc i8 %24 to i1, !dbg !1590
  br i1 %25, label %bb8, label %bb7, !dbg !1590

bb7:                                              ; preds = %bb12
  store i8 0, ptr %_7, align 1, !dbg !1590
  br label %bb9, !dbg !1590

bb8:                                              ; preds = %bb12
  %_15 = icmp ult i64 %pieces_length, 16, !dbg !1595
  %26 = zext i1 %_15 to i8, !dbg !1590
  store i8 %26, ptr %_7, align 1, !dbg !1590
  br label %bb9, !dbg !1590

bb9:                                              ; preds = %bb7, %bb8
  %27 = load i8, ptr %_7, align 1, !dbg !1590, !range !673, !noundef !45
  %28 = trunc i8 %27 to i1, !dbg !1590
  br i1 %28, label %bb16, label %bb17, !dbg !1590

bb17:                                             ; preds = %bb9
; call core::num::<impl usize>::checked_mul
  %29 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h9e4495e66fe1dbcbE"(i64 %pieces_length, i64 2) #17, !dbg !1596
  %_17.0 = extractvalue { i64, i64 } %29, 0, !dbg !1596
  %_17.1 = extractvalue { i64, i64 } %29, 1, !dbg !1596
; call core::option::Option<T>::unwrap_or
  %30 = call i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h883e5fd5c1257adfE"(i64 %_17.0, i64 %_17.1, i64 0) #17, !dbg !1596
  store i64 %30, ptr %0, align 8, !dbg !1596
  br label %bb19, !dbg !1596

bb16:                                             ; preds = %bb9
  store i64 0, ptr %0, align 8, !dbg !1597
  br label %bb19, !dbg !1598
}

; core::fmt::Arguments::estimated_capacity::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3fmt9Arguments18estimated_capacity28_$u7b$$u7b$closure$u7d$$u7d$17hcb8c60edd77b32ceE"(ptr align 1 %_1, ptr align 8 %x) unnamed_addr #1 !dbg !1599 {
start:
  %x.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1605, metadata !DIExpression()), !dbg !1606
  store ptr %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1604, metadata !DIExpression()), !dbg !1607
  %0 = getelementptr inbounds { ptr, i64 }, ptr %x, i32 0, i32 0, !dbg !1608
  %_3.0 = load ptr, ptr %0, align 8, !dbg !1608, !nonnull !45, !align !643, !noundef !45
  %1 = getelementptr inbounds { ptr, i64 }, ptr %x, i32 0, i32 1, !dbg !1608
  %_3.1 = load i64, ptr %1, align 8, !dbg !1608, !noundef !45
; call core::str::<impl str>::len
  %2 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hd16e42a8ff3d48d3E"(ptr align 1 %_3.0, i64 %_3.1) #17, !dbg !1608
  ret i64 %2, !dbg !1609
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #1 !dbg !1610 {
start:
  %args.dbg.spill = alloca { ptr, i64 }, align 8
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %_16 = alloca { ptr, i64 }, align 8
  %_13 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 0
  store ptr %pieces.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !1614, metadata !DIExpression()), !dbg !1616
  %3 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 0
  store ptr %args.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %args.dbg.spill, metadata !1615, metadata !DIExpression()), !dbg !1617
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !1618
  br i1 %_4, label %bb1, label %bb2, !dbg !1618

bb2:                                              ; preds = %start
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %args.1, i64 1), !dbg !1619
  %_11.0 = extractvalue { i64, i1 } %5, 0, !dbg !1619
  %_11.1 = extractvalue { i64, i1 } %5, 1, !dbg !1619
  %6 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !1619
  br i1 %6, label %panic, label %bb4, !dbg !1619

bb1:                                              ; preds = %start
  store i8 1, ptr %_3, align 1, !dbg !1618
  br label %bb3, !dbg !1618

bb3:                                              ; preds = %bb4, %bb1
  %7 = load i8, ptr %_3, align 1, !dbg !1618, !range !673, !noundef !45
  %8 = trunc i8 %7 to i1, !dbg !1618
  br i1 %8, label %bb5, label %bb7, !dbg !1618

bb4:                                              ; preds = %bb2
  %_7 = icmp ugt i64 %pieces.1, %_11.0, !dbg !1620
  %9 = zext i1 %_7 to i8, !dbg !1618
  store i8 %9, ptr %_3, align 1, !dbg !1618
  br label %bb3, !dbg !1618

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_47ee623a9f06017983b1b14793104f21) #18, !dbg !1619
  unreachable, !dbg !1619

bb7:                                              ; preds = %bb3
  store ptr null, ptr %_16, align 8, !dbg !1621
  %10 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 1, !dbg !1622
  %11 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 0, !dbg !1622
  store ptr %pieces.0, ptr %11, align 8, !dbg !1622
  %12 = getelementptr inbounds { ptr, i64 }, ptr %10, i32 0, i32 1, !dbg !1622
  store i64 %pieces.1, ptr %12, align 8, !dbg !1622
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 0, !dbg !1622
  %14 = load ptr, ptr %13, align 8, !dbg !1622, !align !1159, !noundef !45
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_16, i32 0, i32 1, !dbg !1622
  %16 = load i64, ptr %15, align 8, !dbg !1622
  %17 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !1622
  store ptr %14, ptr %17, align 8, !dbg !1622
  %18 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !1622
  store i64 %16, ptr %18, align 8, !dbg !1622
  %19 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %0, i32 0, i32 2, !dbg !1622
  %20 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 0, !dbg !1622
  store ptr %args.0, ptr %20, align 8, !dbg !1622
  %21 = getelementptr inbounds { ptr, i64 }, ptr %19, i32 0, i32 1, !dbg !1622
  store i64 %args.1, ptr %21, align 8, !dbg !1622
  ret void, !dbg !1623

bb5:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_13, ptr align 8 @alloc_71b99a1804d93c013f301ec59bc480be, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !1624
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_13, ptr align 8 @alloc_06016551127ebd46210a364dc7059aaa) #18, !dbg !1624
  unreachable, !dbg !1624
}

; core::mem::take
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem4take17hd1fe3ff22092d316E(ptr sret(%"string::String") %0, ptr align 8 %dest) unnamed_addr #1 !dbg !1625 {
start:
  %dest.dbg.spill = alloca ptr, align 8
  %_2 = alloca %"string::String", align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dest.dbg.spill, metadata !1630, metadata !DIExpression()), !dbg !1631
; call <alloc::string::String as core::default::Default>::default
  call void @"_ZN64_$LT$alloc..string..String$u20$as$u20$core..default..Default$GT$7default17h8023cf4ed4b338d5E"(ptr sret(%"string::String") %_2) #17, !dbg !1632
; call core::mem::replace
  call void @_ZN4core3mem7replace17hbc5f369c92de16b9E(ptr sret(%"string::String") %0, ptr align 8 %dest, ptr %_2) #17, !dbg !1633
  ret void, !dbg !1634
}

; core::mem::take
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3mem4take17hf906dd6faa23c314E(ptr align 8 %dest) unnamed_addr #1 !dbg !1635 {
start:
  %dest.dbg.spill = alloca ptr, align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dest.dbg.spill, metadata !1640, metadata !DIExpression()), !dbg !1641
; call <alloc::boxed::Box<[T]> as core::default::Default>::default
  %0 = call { ptr, i64 } @"_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17haf43f83bad54c92aE"() #17, !dbg !1642
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !1642
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !1642
; call core::mem::replace
  %1 = call { ptr, i64 } @_ZN4core3mem7replace17h8a979afdeed3700aE(ptr align 8 %dest, ptr align 1 %_2.0, i64 %_2.1) #17, !dbg !1643
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !1643
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !1643
  %4 = insertvalue { ptr, i64 } undef, ptr %2, 0, !dbg !1644
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1, !dbg !1644
  ret { ptr, i64 } %5, !dbg !1644
}

; core::mem::replace
; Function Attrs: inlinehint noredzone nounwind
define { i16, i16 } @_ZN4core3mem7replace17h8a74628870d2faacE(ptr align 2 %dest, i16 %src.0, i16 %src.1) unnamed_addr #1 !dbg !1645 {
start:
  %result.dbg.spill = alloca { i16, i16 }, align 2
  %src.dbg.spill = alloca { i16, i16 }, align 2
  %dest.dbg.spill = alloca ptr, align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dest.dbg.spill, metadata !1650, metadata !DIExpression()), !dbg !1654
  %0 = getelementptr inbounds { i16, i16 }, ptr %src.dbg.spill, i32 0, i32 0
  store i16 %src.0, ptr %0, align 2
  %1 = getelementptr inbounds { i16, i16 }, ptr %src.dbg.spill, i32 0, i32 1
  store i16 %src.1, ptr %1, align 2
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1651, metadata !DIExpression()), !dbg !1655
; call core::ptr::read
  %2 = call { i16, i16 } @_ZN4core3ptr4read17h50291c10125f9973E(ptr %dest) #17, !dbg !1656
  %result.0 = extractvalue { i16, i16 } %2, 0, !dbg !1656
  %result.1 = extractvalue { i16, i16 } %2, 1, !dbg !1656
  %3 = getelementptr inbounds { i16, i16 }, ptr %result.dbg.spill, i32 0, i32 0, !dbg !1656
  store i16 %result.0, ptr %3, align 2, !dbg !1656
  %4 = getelementptr inbounds { i16, i16 }, ptr %result.dbg.spill, i32 0, i32 1, !dbg !1656
  store i16 %result.1, ptr %4, align 2, !dbg !1656
  call void @llvm.dbg.declare(metadata ptr %result.dbg.spill, metadata !1652, metadata !DIExpression()), !dbg !1657
; call core::ptr::write
  call void @_ZN4core3ptr5write17h03104ae4e030edd1E(ptr %dest, i16 %src.0, i16 %src.1) #17, !dbg !1658
  %5 = insertvalue { i16, i16 } undef, i16 %result.0, 0, !dbg !1659
  %6 = insertvalue { i16, i16 } %5, i16 %result.1, 1, !dbg !1659
  ret { i16, i16 } %6, !dbg !1659
}

; core::mem::replace
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3mem7replace17h8a979afdeed3700aE(ptr align 8 %dest, ptr align 1 %src.0, i64 %src.1) unnamed_addr #1 !dbg !1660 {
start:
  %result.dbg.spill = alloca { ptr, i64 }, align 8
  %src.dbg.spill = alloca { ptr, i64 }, align 8
  %dest.dbg.spill = alloca ptr, align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dest.dbg.spill, metadata !1664, metadata !DIExpression()), !dbg !1668
  %0 = getelementptr inbounds { ptr, i64 }, ptr %src.dbg.spill, i32 0, i32 0
  store ptr %src.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1665, metadata !DIExpression()), !dbg !1669
; call core::ptr::read
  %2 = call { ptr, i64 } @_ZN4core3ptr4read17h26b3e0b6a817afa0E(ptr %dest) #17, !dbg !1670
  %result.0 = extractvalue { ptr, i64 } %2, 0, !dbg !1670
  %result.1 = extractvalue { ptr, i64 } %2, 1, !dbg !1670
  %3 = getelementptr inbounds { ptr, i64 }, ptr %result.dbg.spill, i32 0, i32 0, !dbg !1670
  store ptr %result.0, ptr %3, align 8, !dbg !1670
  %4 = getelementptr inbounds { ptr, i64 }, ptr %result.dbg.spill, i32 0, i32 1, !dbg !1670
  store i64 %result.1, ptr %4, align 8, !dbg !1670
  call void @llvm.dbg.declare(metadata ptr %result.dbg.spill, metadata !1666, metadata !DIExpression()), !dbg !1671
; call core::ptr::write
  call void @_ZN4core3ptr5write17h5f7fbf5ab9b1995eE(ptr %dest, ptr align 1 %src.0, i64 %src.1) #17, !dbg !1672
  %5 = insertvalue { ptr, i64 } undef, ptr %result.0, 0, !dbg !1673
  %6 = insertvalue { ptr, i64 } %5, i64 %result.1, 1, !dbg !1673
  ret { ptr, i64 } %6, !dbg !1673
}

; core::mem::replace
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3mem7replace17hbc5f369c92de16b9E(ptr sret(%"string::String") %result, ptr align 8 %dest, ptr %src) unnamed_addr #1 !dbg !1674 {
start:
  %dest.dbg.spill = alloca ptr, align 8, !dbg !1682
  call void @llvm.dbg.declare(metadata ptr %result, metadata !1680, metadata !DIExpression()), !dbg !1682
  store ptr %dest, ptr %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dest.dbg.spill, metadata !1678, metadata !DIExpression()), !dbg !1683
  call void @llvm.dbg.declare(metadata ptr %src, metadata !1679, metadata !DIExpression()), !dbg !1684
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb747880b223093e6E(ptr sret(%"string::String") %result, ptr %dest) #17, !dbg !1685
; call core::ptr::write
  call void @_ZN4core3ptr5write17h82a430e08389d3f6E(ptr %dest, ptr %src) #17, !dbg !1686
  ret void, !dbg !1687
}

; core::mem::replace
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @_ZN4core3mem7replace17hd4a8249c6fbb98e9E(ptr align 8 %dest, ptr %src.0, ptr %src.1) unnamed_addr #1 !dbg !1688 {
start:
  %result.dbg.spill = alloca { ptr, ptr }, align 8
  %src.dbg.spill = alloca { ptr, ptr }, align 8
  %dest.dbg.spill = alloca ptr, align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dest.dbg.spill, metadata !1693, metadata !DIExpression()), !dbg !1697
  %0 = getelementptr inbounds { ptr, ptr }, ptr %src.dbg.spill, i32 0, i32 0
  store ptr %src.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %src.dbg.spill, i32 0, i32 1
  store ptr %src.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1694, metadata !DIExpression()), !dbg !1698
; call core::ptr::read
  %2 = call { ptr, ptr } @_ZN4core3ptr4read17hcf41a14d447407e1E(ptr %dest) #17, !dbg !1699
  %result.0 = extractvalue { ptr, ptr } %2, 0, !dbg !1699
  %result.1 = extractvalue { ptr, ptr } %2, 1, !dbg !1699
  %3 = getelementptr inbounds { ptr, ptr }, ptr %result.dbg.spill, i32 0, i32 0, !dbg !1699
  store ptr %result.0, ptr %3, align 8, !dbg !1699
  %4 = getelementptr inbounds { ptr, ptr }, ptr %result.dbg.spill, i32 0, i32 1, !dbg !1699
  store ptr %result.1, ptr %4, align 8, !dbg !1699
  call void @llvm.dbg.declare(metadata ptr %result.dbg.spill, metadata !1695, metadata !DIExpression()), !dbg !1700
; call core::ptr::write
  call void @_ZN4core3ptr5write17he2c5432ed5b5c6f6E(ptr %dest, ptr %src.0, ptr %src.1) #17, !dbg !1701
  %5 = insertvalue { ptr, ptr } undef, ptr %result.0, 0, !dbg !1702
  %6 = insertvalue { ptr, ptr } %5, ptr %result.1, 1, !dbg !1702
  ret { ptr, ptr } %6, !dbg !1702
}

; core::num::<impl u8>::is_ascii_lowercase
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_lowercase17h401d527f685eee41E"(ptr align 1 %self) unnamed_addr #1 !dbg !1703 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1710, metadata !DIExpression()), !dbg !1711
  %1 = load i8, ptr %self, align 1, !dbg !1712, !noundef !45
  %_2 = icmp ule i8 97, %1, !dbg !1712
  br i1 %_2, label %bb1, label %bb2, !dbg !1712

bb2:                                              ; preds = %bb1, %start
  store i8 0, ptr %0, align 1, !dbg !1713
  br label %bb4, !dbg !1713

bb1:                                              ; preds = %start
  %2 = load i8, ptr %self, align 1, !dbg !1712, !noundef !45
  %_3 = icmp ule i8 %2, 122, !dbg !1712
  br i1 %_3, label %bb3, label %bb2, !dbg !1712

bb3:                                              ; preds = %bb1
  store i8 1, ptr %0, align 1, !dbg !1713
  br label %bb4, !dbg !1713

bb4:                                              ; preds = %bb2, %bb3
  %3 = load i8, ptr %0, align 1, !dbg !1714, !range !673, !noundef !45
  %4 = trunc i8 %3 to i1, !dbg !1714
  ret i1 %4, !dbg !1714
}

; core::num::<impl u8>::is_ascii_uppercase
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_uppercase17h46b96f0e09f123e5E"(ptr align 1 %self) unnamed_addr #1 !dbg !1715 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1717, metadata !DIExpression()), !dbg !1718
  %1 = load i8, ptr %self, align 1, !dbg !1719, !noundef !45
  %_2 = icmp ule i8 65, %1, !dbg !1719
  br i1 %_2, label %bb1, label %bb2, !dbg !1719

bb2:                                              ; preds = %bb1, %start
  store i8 0, ptr %0, align 1, !dbg !1720
  br label %bb4, !dbg !1720

bb1:                                              ; preds = %start
  %2 = load i8, ptr %self, align 1, !dbg !1719, !noundef !45
  %_3 = icmp ule i8 %2, 90, !dbg !1719
  br i1 %_3, label %bb3, label %bb2, !dbg !1719

bb3:                                              ; preds = %bb1
  store i8 1, ptr %0, align 1, !dbg !1720
  br label %bb4, !dbg !1720

bb4:                                              ; preds = %bb2, %bb3
  %3 = load i8, ptr %0, align 1, !dbg !1721, !range !673, !noundef !45
  %4 = trunc i8 %3 to i1, !dbg !1721
  ret i1 %4, !dbg !1721
}

; core::num::<impl u8>::to_ascii_lowercase
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_lowercase17h47f12909484410b6E"(ptr align 1 %self) unnamed_addr #1 !dbg !1722 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1726, metadata !DIExpression()), !dbg !1727
  %_2 = load i8, ptr %self, align 1, !dbg !1728, !noundef !45
; call core::num::<impl u8>::is_ascii_uppercase
  %_5 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_uppercase17h46b96f0e09f123e5E"(ptr align 1 %self) #17, !dbg !1729
  %_4 = zext i1 %_5 to i8, !dbg !1729
  %0 = call { i8, i1 } @llvm.umul.with.overflow.i8(i8 %_4, i8 32), !dbg !1730
  %_6.0 = extractvalue { i8, i1 } %0, 0, !dbg !1730
  %_6.1 = extractvalue { i8, i1 } %0, 1, !dbg !1730
  %1 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !1730
  br i1 %1, label %panic, label %bb2, !dbg !1730

bb2:                                              ; preds = %start
  %2 = or i8 %_2, %_6.0, !dbg !1728
  ret i8 %2, !dbg !1731

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 33, ptr align 8 @alloc_ae4b10a272bd9909bc9c09fa3f48c1a6) #18, !dbg !1730
  unreachable, !dbg !1730
}

; core::num::<impl u8>::to_ascii_uppercase
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_uppercase17hde8896b3594cca7dE"(ptr align 1 %self) unnamed_addr #1 !dbg !1732 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1734, metadata !DIExpression()), !dbg !1735
  %_2 = load i8, ptr %self, align 1, !dbg !1736, !noundef !45
; call core::num::<impl u8>::is_ascii_lowercase
  %_5 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_lowercase17h401d527f685eee41E"(ptr align 1 %self) #17, !dbg !1737
  %_4 = zext i1 %_5 to i8, !dbg !1738
  %0 = call { i8, i1 } @llvm.umul.with.overflow.i8(i8 %_4, i8 32), !dbg !1739
  %_6.0 = extractvalue { i8, i1 } %0, 0, !dbg !1739
  %_6.1 = extractvalue { i8, i1 } %0, 1, !dbg !1739
  %1 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !1739
  br i1 %1, label %panic, label %bb2, !dbg !1739

bb2:                                              ; preds = %start
  %2 = xor i8 %_2, %_6.0, !dbg !1736
  ret i8 %2, !dbg !1740

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 33, ptr align 8 @alloc_197ff2b1f35e9df4c9071866b5a5c88f) #18, !dbg !1739
  unreachable, !dbg !1739
}

; core::num::<impl u16>::is_utf16_surrogate
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17h65f3625dd0bb98dfE"(i16 %self) unnamed_addr #1 !dbg !1741 {
start:
  %self.dbg.spill = alloca i16, align 2
  %0 = alloca i8, align 1
  store i16 %self, ptr %self.dbg.spill, align 2
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1746, metadata !DIExpression()), !dbg !1747
  %_2 = icmp ule i16 -10240, %self, !dbg !1748
  br i1 %_2, label %bb1, label %bb2, !dbg !1748

bb2:                                              ; preds = %bb1, %start
  store i8 0, ptr %0, align 1, !dbg !1749
  br label %bb4, !dbg !1749

bb1:                                              ; preds = %start
  %_3 = icmp ule i16 %self, -8193, !dbg !1748
  br i1 %_3, label %bb3, label %bb2, !dbg !1748

bb3:                                              ; preds = %bb1
  store i8 1, ptr %0, align 1, !dbg !1749
  br label %bb4, !dbg !1749

bb4:                                              ; preds = %bb2, %bb3
  %1 = load i8, ptr %0, align 1, !dbg !1750, !range !673, !noundef !45
  %2 = trunc i8 %1 to i1, !dbg !1750
  ret i1 %2, !dbg !1750
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %self, i64 %rhs) unnamed_addr #1 !dbg !1751 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1757, metadata !DIExpression()), !dbg !1762
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !1758, metadata !DIExpression()), !dbg !1763
  store i64 %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1764, metadata !DIExpression()), !dbg !1777
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1773, metadata !DIExpression()), !dbg !1779
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1780
  %_5.0.i = extractvalue { i64, i1 } %3, 0, !dbg !1780
  %_5.1.i = extractvalue { i64, i1 } %3, 1, !dbg !1780
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !1781
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill.i, metadata !1774, metadata !DIExpression()), !dbg !1782
  %4 = zext i1 %_5.1.i to i8, !dbg !1783
  store i8 %4, ptr %b.dbg.spill.i, align 1, !dbg !1783
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill.i, metadata !1776, metadata !DIExpression()), !dbg !1784
  store i64 %_5.0.i, ptr %0, align 8, !dbg !1785
  %5 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1785
  %6 = zext i1 %_5.1.i to i8, !dbg !1785
  store i8 %6, ptr %5, align 8, !dbg !1785
  %7 = load i64, ptr %0, align 8, !dbg !1786, !noundef !45
  %8 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1786
  %9 = load i8, ptr %8, align 8, !dbg !1786, !range !673, !noundef !45
  %10 = trunc i8 %9 to i1, !dbg !1786
  %11 = zext i1 %10 to i8, !dbg !1786
  %12 = insertvalue { i64, i8 } undef, i64 %7, 0, !dbg !1786
  %13 = insertvalue { i64, i8 } %12, i8 %11, 1, !dbg !1786
  %_5.0 = extractvalue { i64, i8 } %13, 0, !dbg !1787
  %14 = extractvalue { i64, i8 } %13, 1, !dbg !1787
  %_5.1 = trunc i8 %14 to i1, !dbg !1787
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !1788
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !1759, metadata !DIExpression()), !dbg !1789
  %15 = zext i1 %_5.1 to i8, !dbg !1790
  store i8 %15, ptr %b.dbg.spill, align 1, !dbg !1790
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1761, metadata !DIExpression()), !dbg !1791
  %16 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1792
  %17 = zext i1 %16 to i8, !dbg !1792
  store i8 %17, ptr %1, align 1, !dbg !1792
  %18 = load i8, ptr %1, align 1, !dbg !1792, !range !673, !noundef !45
  %_6 = trunc i8 %18 to i1, !dbg !1792
  br i1 %_6, label %bb3, label %bb4, !dbg !1792

bb4:                                              ; preds = %start
  %19 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1793
  store i64 %_5.0, ptr %19, align 8, !dbg !1793
  store i64 1, ptr %2, align 8, !dbg !1793
  br label %bb5, !dbg !1794

bb3:                                              ; preds = %start
  store i64 0, ptr %2, align 8, !dbg !1795
  br label %bb5, !dbg !1794

bb5:                                              ; preds = %bb4, %bb3
  %20 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !1796
  %21 = load i64, ptr %20, align 8, !dbg !1796, !range !1797, !noundef !45
  %22 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1796
  %23 = load i64, ptr %22, align 8, !dbg !1796
  %24 = insertvalue { i64, i64 } undef, i64 %21, 0, !dbg !1796
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1, !dbg !1796
  ret { i64, i64 } %25, !dbg !1796
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h9e4495e66fe1dbcbE"(i64 %self, i64 %rhs) unnamed_addr #1 !dbg !1798 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1800, metadata !DIExpression()), !dbg !1805
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !1801, metadata !DIExpression()), !dbg !1806
  store i64 %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1807, metadata !DIExpression()), !dbg !1814
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1810, metadata !DIExpression()), !dbg !1816
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1817
  %_5.0.i = extractvalue { i64, i1 } %3, 0, !dbg !1817
  %_5.1.i = extractvalue { i64, i1 } %3, 1, !dbg !1817
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !1818
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill.i, metadata !1811, metadata !DIExpression()), !dbg !1819
  %4 = zext i1 %_5.1.i to i8, !dbg !1820
  store i8 %4, ptr %b.dbg.spill.i, align 1, !dbg !1820
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill.i, metadata !1813, metadata !DIExpression()), !dbg !1821
  store i64 %_5.0.i, ptr %0, align 8, !dbg !1822
  %5 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1822
  %6 = zext i1 %_5.1.i to i8, !dbg !1822
  store i8 %6, ptr %5, align 8, !dbg !1822
  %7 = load i64, ptr %0, align 8, !dbg !1823, !noundef !45
  %8 = getelementptr inbounds { i64, i8 }, ptr %0, i32 0, i32 1, !dbg !1823
  %9 = load i8, ptr %8, align 8, !dbg !1823, !range !673, !noundef !45
  %10 = trunc i8 %9 to i1, !dbg !1823
  %11 = zext i1 %10 to i8, !dbg !1823
  %12 = insertvalue { i64, i8 } undef, i64 %7, 0, !dbg !1823
  %13 = insertvalue { i64, i8 } %12, i8 %11, 1, !dbg !1823
  %_5.0 = extractvalue { i64, i8 } %13, 0, !dbg !1824
  %14 = extractvalue { i64, i8 } %13, 1, !dbg !1824
  %_5.1 = trunc i8 %14 to i1, !dbg !1824
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !1825
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !1802, metadata !DIExpression()), !dbg !1826
  %15 = zext i1 %_5.1 to i8, !dbg !1827
  store i8 %15, ptr %b.dbg.spill, align 1, !dbg !1827
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !1804, metadata !DIExpression()), !dbg !1828
  %16 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1829
  %17 = zext i1 %16 to i8, !dbg !1829
  store i8 %17, ptr %1, align 1, !dbg !1829
  %18 = load i8, ptr %1, align 1, !dbg !1829, !range !673, !noundef !45
  %_6 = trunc i8 %18 to i1, !dbg !1829
  br i1 %_6, label %bb3, label %bb4, !dbg !1829

bb4:                                              ; preds = %start
  %19 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1830
  store i64 %_5.0, ptr %19, align 8, !dbg !1830
  store i64 1, ptr %2, align 8, !dbg !1830
  br label %bb5, !dbg !1831

bb3:                                              ; preds = %start
  store i64 0, ptr %2, align 8, !dbg !1832
  br label %bb5, !dbg !1831

bb5:                                              ; preds = %bb4, %bb3
  %20 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !1833
  %21 = load i64, ptr %20, align 8, !dbg !1833, !range !1797, !noundef !45
  %22 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !1833
  %23 = load i64, ptr %22, align 8, !dbg !1833
  %24 = insertvalue { i64, i64 } undef, i64 %21, 0, !dbg !1833
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1, !dbg !1833
  ret { i64, i64 } %25, !dbg !1833
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17he00ee406346915ccE(i64 %n) unnamed_addr #1 !dbg !1834 {
start:
  %n.dbg.spill.i = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %_3 = alloca i64, align 8
  %0 = alloca i64, align 8
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !1843, metadata !DIExpression()), !dbg !1844
  store i64 %n, ptr %_3, align 8, !dbg !1845
  %1 = load i64, ptr %_3, align 8, !dbg !1845, !noundef !45
  store i64 %1, ptr %n.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill.i, metadata !1846, metadata !DIExpression()), !dbg !1853
  %_3.i = icmp ne i64 %1, 0, !dbg !1855
  %_2.i = xor i1 %_3.i, true, !dbg !1857
  br i1 %_2.i, label %bb1.i, label %_ZN4core3num7nonzero12NonZeroUsize13new_unchecked7runtime17hed38a25bfe80d5dcE.exit, !dbg !1857

bb1.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_b2e55a4cbcb6887201afb45ca4813535, i64 89) #18, !dbg !1858
  unreachable, !dbg !1858

_ZN4core3num7nonzero12NonZeroUsize13new_unchecked7runtime17hed38a25bfe80d5dcE.exit: ; preds = %start
  store i64 %n, ptr %0, align 8, !dbg !1859
  %2 = load i64, ptr %0, align 8, !dbg !1860, !range !1861, !noundef !45
  ret i64 %2, !dbg !1860
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17hf16ab339941c792cE(i64 %self) unnamed_addr #1 !dbg !1862 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !1866, metadata !DIExpression()), !dbg !1867
  ret i64 %self, !dbg !1868
}

; core::ops::control_flow::ControlFlow<B,C>::break_value
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h45732fb25270a50aE"(i32 %0) unnamed_addr #1 !dbg !1869 {
start:
  %x.dbg.spill = alloca i32, align 4
  %1 = alloca i32, align 4
  %self = alloca i32, align 4
  store i32 %0, ptr %self, align 4
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1873, metadata !DIExpression()), !dbg !1876
  %2 = load i32, ptr %self, align 4, !dbg !1877, !range !527, !noundef !45
  %3 = icmp eq i32 %2, 1114112, !dbg !1877
  %_2 = select i1 %3, i64 0, i64 1, !dbg !1877
  %4 = icmp eq i64 %_2, 0, !dbg !1878
  br i1 %4, label %bb3, label %bb1, !dbg !1878

bb3:                                              ; preds = %start
  store i32 1114112, ptr %1, align 4, !dbg !1879
  br label %bb6, !dbg !1879

bb1:                                              ; preds = %start
  %x = load i32, ptr %self, align 4, !dbg !1880, !range !523, !noundef !45
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !1880
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1874, metadata !DIExpression()), !dbg !1881
  store i32 %x, ptr %1, align 4, !dbg !1882
  br label %bb6, !dbg !1883

bb2:                                              ; No predecessors!
  unreachable, !dbg !1877

bb6:                                              ; preds = %bb3, %bb1
  %5 = load i32, ptr %self, align 4, !dbg !1884, !range !527, !noundef !45
  %6 = icmp eq i32 %5, 1114112, !dbg !1884
  %_4 = select i1 %6, i64 0, i64 1, !dbg !1884
  %7 = icmp eq i64 %_4, 1, !dbg !1884
  br i1 %7, label %bb4, label %bb5, !dbg !1884

bb4:                                              ; preds = %bb5, %bb6
  %8 = load i32, ptr %1, align 4, !dbg !1885, !range !527, !noundef !45
  ret i32 %8, !dbg !1885

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !1884
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h823c194015f78686E(ptr align 8 %0, ptr align 8 %1) unnamed_addr #1 !dbg !1886 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { ptr, ptr }, align 8
  store ptr %0, ptr %_2, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %_2, i32 0, i32 1
  store ptr %1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1893, metadata !DIExpression()), !dbg !1902
  call void @llvm.dbg.declare(metadata ptr %_2, metadata !1894, metadata !DIExpression()), !dbg !1902
  %3 = load ptr, ptr %_2, align 8, !dbg !1902, !nonnull !45, !align !1159, !noundef !45
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_2, i32 0, i32 1, !dbg !1902
  %5 = load ptr, ptr %4, align 8, !dbg !1902, !nonnull !45, !align !1159, !noundef !45
; call <core::ptr::alignment::Alignment as core::cmp::Ord>::cmp
  %6 = call i8 @"_ZN66_$LT$core..ptr..alignment..Alignment$u20$as$u20$core..cmp..Ord$GT$3cmp17hb62d92d1e772ae58E"(ptr align 8 %3, ptr align 8 %5) #17, !dbg !1902, !range !1391
  ret i8 %6, !dbg !1902
}

; core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<u8,alloc::alloc::Global>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17h17806681c05e0e09E"(ptr %_1) unnamed_addr #0 !dbg !1903 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1926, metadata !DIExpression()), !dbg !1929
; call <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h442aea4435ab282fE"(ptr align 8 %_1) #17, !dbg !1929
  ret void, !dbg !1929
}

; core::ptr::read_unaligned
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr14read_unaligned17hc3acd15732acb7b0E(ptr %src) unnamed_addr #1 !dbg !1930 {
start:
  %slot.dbg.spill.i = alloca i64, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %tmp = alloca i64, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !1935, metadata !DIExpression()), !dbg !1945
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1936, metadata !DIExpression()), !dbg !1946
  %1 = load i64, ptr %0, align 8, !dbg !1947
  store i64 %1, ptr %tmp, align 8, !dbg !1953
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1954, metadata !DIExpression()), !dbg !1961
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr %src, ptr %tmp, i64 8) #17, !dbg !1963
  %_9 = load i64, ptr %tmp, align 8, !dbg !1964
  store i64 %_9, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !1965, metadata !DIExpression()), !dbg !1970
  store i64 %_9, ptr %slot.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %slot.dbg.spill.i, metadata !1972, metadata !DIExpression()), !dbg !1978
  ret i64 %_9, !dbg !1980
}

; core::ptr::drop_in_place<<alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync> as core::convert::From<alloc::string::String>>::from::StringError>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr205drop_in_place$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$GT$17h996a1f7630265b0eE"(ptr %_1) unnamed_addr #0 !dbg !1981 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !1986, metadata !DIExpression()), !dbg !1987
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2254349ab55352cdE"(ptr %_1) #17, !dbg !1987
  ret void, !dbg !1987
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h853ec850d3fc3d0cE(ptr %data, i64 %len) unnamed_addr #1 !dbg !1988 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !1998, metadata !DIExpression()), !dbg !2000
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !1999, metadata !DIExpression()), !dbg !2001
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2002, metadata !DIExpression()), !dbg !2013
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hd94a776a912c3c9cE(ptr %data, i64 %len) #17, !dbg !2015
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !2015
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !2015
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !2016
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !2016
  ret { ptr, i64 } %4, !dbg !2016
}

; core::ptr::drop_in_place<usize>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr26drop_in_place$LT$usize$GT$17h9af800b9ffc2209bE"(ptr %_1) unnamed_addr #1 !dbg !2017 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2021, metadata !DIExpression()), !dbg !2022
  ret void, !dbg !2022
}

; core::ptr::drop_in_place<&str>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h425384f8669752d8E"(ptr %_1) unnamed_addr #1 !dbg !2023 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2028, metadata !DIExpression()), !dbg !2029
  ret void, !dbg !2029
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h9df263826f7fdbadE"(ptr %_1) unnamed_addr #1 !dbg !2030 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2035, metadata !DIExpression()), !dbg !2038
  ret void, !dbg !2038
}

; core::ptr::drop_in_place<&()>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17h42411c55286b31a8E"(ptr %_1) unnamed_addr #1 !dbg !2039 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2044, metadata !DIExpression()), !dbg !2047
  ret void, !dbg !2047
}

; core::ptr::drop_in_place<core::fmt::Error>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17hc108cbe123dc37adE"(ptr %_1) unnamed_addr #1 !dbg !2048 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2053, metadata !DIExpression()), !dbg !2056
  ret void, !dbg !2056
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2254349ab55352cdE"(ptr %_1) unnamed_addr #0 !dbg !2057 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2062, metadata !DIExpression()), !dbg !2063
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h8b2112aa825e6ef9E"(ptr %_1) #17, !dbg !2063
  ret void, !dbg !2063
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h8b2112aa825e6ef9E"(ptr %_1) unnamed_addr #0 !dbg !2064 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2069, metadata !DIExpression()), !dbg !2070
; call <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9452a7d31f766b00E"(ptr align 8 %_1) #17, !dbg !2070
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h3e57bfa2296415acE"(ptr %_1) #17, !dbg !2070
  ret void, !dbg !2070
}

; core::ptr::drop_in_place<alloc::ffi::c_str::CString>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h1855343d3c26b10dE"(ptr %_1) unnamed_addr #0 !dbg !2071 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2076, metadata !DIExpression()), !dbg !2079
; call <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h75b61064575e8165E"(ptr align 8 %_1) #17, !dbg !2079
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h394222bf9f2778faE"(ptr %_1) #17, !dbg !2079
  ret void, !dbg !2079
}

; core::ptr::drop_in_place<core::alloc::layout::Layout>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr48drop_in_place$LT$core..alloc..layout..Layout$GT$17h40366a13cd7dfce8E"(ptr %_1) unnamed_addr #1 !dbg !2080 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2085, metadata !DIExpression()), !dbg !2088
  ret void, !dbg !2088
}

; core::ptr::drop_in_place<core::str::error::Utf8Error>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h8722002bc00b874fE"(ptr %_1) unnamed_addr #1 !dbg !2089 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2094, metadata !DIExpression()), !dbg !2095
  ret void, !dbg !2095
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr4read17h26b3e0b6a817afa0E(ptr %src) unnamed_addr #1 !dbg !2096 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %slot.dbg.spill.i = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca { ptr, i64 }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !2100, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2101, metadata !DIExpression()), !dbg !2111
  %1 = load ptr, ptr %0, align 8, !dbg !2112
  %2 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2112
  %3 = load i64, ptr %2, align 8, !dbg !2112
  %4 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !2112
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1, !dbg !2112
  store { ptr, i64 } %5, ptr %tmp, align 8, !dbg !2117
  store ptr %src, ptr %_4, align 8, !dbg !2118
  %6 = load ptr, ptr %_4, align 8, !dbg !2118, !noundef !45
  store ptr %6, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !2119, metadata !DIExpression()), !dbg !2125
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hb8a5e17d810b5ea4E(ptr %6) #17, !dbg !2127
  %_2.i = xor i1 %_3.i, true, !dbg !2129
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17hf86868484263aa9eE.exit, !dbg !2129

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_efce4ff77543cc2403477cd546743a0c, i64 101) #18, !dbg !2130
  unreachable, !dbg !2130

_ZN4core3ptr4read7runtime17hf86868484263aa9eE.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2131, metadata !DIExpression()), !dbg !2138
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %src, i64 16, i1 false), !dbg !2140
  %7 = getelementptr inbounds { ptr, i64 }, ptr %tmp, i32 0, i32 0, !dbg !2141
  %_7.0 = load ptr, ptr %7, align 8, !dbg !2141
  %8 = getelementptr inbounds { ptr, i64 }, ptr %tmp, i32 0, i32 1, !dbg !2141
  %_7.1 = load i64, ptr %8, align 8, !dbg !2141
  store ptr %_7.0, ptr %self.dbg.spill.i1, align 8
  %9 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %_7.1, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2142, metadata !DIExpression()), !dbg !2147
  store ptr %_7.0, ptr %slot.dbg.spill.i, align 8
  %10 = getelementptr inbounds { ptr, i64 }, ptr %slot.dbg.spill.i, i32 0, i32 1
  store i64 %_7.1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %slot.dbg.spill.i, metadata !2149, metadata !DIExpression()), !dbg !2154
  %11 = insertvalue { ptr, i64 } undef, ptr %_7.0, 0, !dbg !2156
  %12 = insertvalue { ptr, i64 } %11, i64 %_7.1, 1, !dbg !2156
  %13 = extractvalue { ptr, i64 } %12, 0, !dbg !2157
  %14 = extractvalue { ptr, i64 } %12, 1, !dbg !2157
  %15 = extractvalue { ptr, i64 } %12, 0, !dbg !2141
  %16 = extractvalue { ptr, i64 } %12, 1, !dbg !2141
  %17 = insertvalue { ptr, i64 } undef, ptr %15, 0, !dbg !2158
  %18 = insertvalue { ptr, i64 } %17, i64 %16, 1, !dbg !2158
  ret { ptr, i64 } %18, !dbg !2158
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define { i16, i16 } @_ZN4core3ptr4read17h50291c10125f9973E(ptr %src) unnamed_addr #1 !dbg !2159 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %slot.dbg.spill.i = alloca { i16, i16 }, align 2
  %0 = alloca { i16, i16 }, align 2
  %self.dbg.spill.i1 = alloca { i16, i16 }, align 2
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca { i16, i16 }, align 2
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !2163, metadata !DIExpression()), !dbg !2173
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2164, metadata !DIExpression()), !dbg !2174
  %1 = load i16, ptr %0, align 2, !dbg !2175
  %2 = getelementptr inbounds { i16, i16 }, ptr %0, i32 0, i32 1, !dbg !2175
  %3 = load i16, ptr %2, align 2, !dbg !2175
  %4 = insertvalue { i16, i16 } undef, i16 %1, 0, !dbg !2175
  %5 = insertvalue { i16, i16 } %4, i16 %3, 1, !dbg !2175
  store { i16, i16 } %5, ptr %tmp, align 2, !dbg !2180
  store ptr %src, ptr %_4, align 8, !dbg !2181
  %6 = load ptr, ptr %_4, align 8, !dbg !2181, !noundef !45
  store ptr %6, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !2182, metadata !DIExpression()), !dbg !2187
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hedbc77d5634e60acE(ptr %6) #17, !dbg !2189
  %_2.i = xor i1 %_3.i, true, !dbg !2191
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17hedd9bd01a8c27126E.exit, !dbg !2191

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_efce4ff77543cc2403477cd546743a0c, i64 101) #18, !dbg !2192
  unreachable, !dbg !2192

_ZN4core3ptr4read7runtime17hedd9bd01a8c27126E.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2193, metadata !DIExpression()), !dbg !2200
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %tmp, ptr align 2 %src, i64 4, i1 false), !dbg !2202
  %7 = getelementptr inbounds { i16, i16 }, ptr %tmp, i32 0, i32 0, !dbg !2203
  %_7.0 = load i16, ptr %7, align 2, !dbg !2203
  %8 = getelementptr inbounds { i16, i16 }, ptr %tmp, i32 0, i32 1, !dbg !2203
  %_7.1 = load i16, ptr %8, align 2, !dbg !2203
  store i16 %_7.0, ptr %self.dbg.spill.i1, align 2
  %9 = getelementptr inbounds { i16, i16 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i16 %_7.1, ptr %9, align 2
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2204, metadata !DIExpression()), !dbg !2209
  store i16 %_7.0, ptr %slot.dbg.spill.i, align 2
  %10 = getelementptr inbounds { i16, i16 }, ptr %slot.dbg.spill.i, i32 0, i32 1
  store i16 %_7.1, ptr %10, align 2
  call void @llvm.dbg.declare(metadata ptr %slot.dbg.spill.i, metadata !2211, metadata !DIExpression()), !dbg !2216
  %11 = insertvalue { i16, i16 } undef, i16 %_7.0, 0, !dbg !2218
  %12 = insertvalue { i16, i16 } %11, i16 %_7.1, 1, !dbg !2218
  %13 = extractvalue { i16, i16 } %12, 0, !dbg !2219
  %14 = extractvalue { i16, i16 } %12, 1, !dbg !2219
  %15 = extractvalue { i16, i16 } %12, 0, !dbg !2203
  %16 = extractvalue { i16, i16 } %12, 1, !dbg !2203
  %17 = insertvalue { i16, i16 } undef, i16 %15, 0, !dbg !2220
  %18 = insertvalue { i16, i16 } %17, i16 %16, 1, !dbg !2220
  ret { i16, i16 } %18, !dbg !2220
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17h80f019b407802b95E(ptr %src) unnamed_addr #1 !dbg !2221 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::Global>", align 1
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !2225, metadata !DIExpression()), !dbg !2235
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2226, metadata !DIExpression()), !dbg !2236
  store ptr %src, ptr %_4, align 8, !dbg !2237
  %0 = load ptr, ptr %_4, align 8, !dbg !2237, !noundef !45
  store ptr %0, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !2238, metadata !DIExpression()), !dbg !2241
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h93e02132c34304b2E(ptr %0) #17, !dbg !2243
  %_2.i = xor i1 %_3.i, true, !dbg !2245
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h9f74fc90c840890bE.exit, !dbg !2245

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_efce4ff77543cc2403477cd546743a0c, i64 101) #18, !dbg !2246
  unreachable, !dbg !2246

_ZN4core3ptr4read7runtime17h9f74fc90c840890bE.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2247, metadata !DIExpression()), !dbg !2254
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp, ptr align 1 %src, i64 0, i1 false), !dbg !2256
  call void @llvm.dbg.declare(metadata ptr undef, metadata !2257, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.declare(metadata ptr undef, metadata !2264, metadata !DIExpression()), !dbg !2269
  ret void, !dbg !2271
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define { i64, ptr } @_ZN4core3ptr4read17h8b0a770eafd370a2E(ptr %src) unnamed_addr #1 !dbg !2272 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %slot.dbg.spill.i = alloca { i64, ptr }, align 8
  %0 = alloca { i64, ptr }, align 8
  %self.dbg.spill.i1 = alloca { i64, ptr }, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca { i64, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !2276, metadata !DIExpression()), !dbg !2286
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2277, metadata !DIExpression()), !dbg !2287
  %1 = load i64, ptr %0, align 8, !dbg !2288
  %2 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !2288
  %3 = load ptr, ptr %2, align 8, !dbg !2288
  %4 = insertvalue { i64, ptr } undef, i64 %1, 0, !dbg !2288
  %5 = insertvalue { i64, ptr } %4, ptr %3, 1, !dbg !2288
  store { i64, ptr } %5, ptr %tmp, align 8, !dbg !2293
  store ptr %src, ptr %_4, align 8, !dbg !2294
  %6 = load ptr, ptr %_4, align 8, !dbg !2294, !noundef !45
  store ptr %6, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !2295, metadata !DIExpression()), !dbg !2300
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h87cab91c3f15e57bE(ptr %6) #17, !dbg !2302
  %_2.i = xor i1 %_3.i, true, !dbg !2304
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h0c951c680e762f86E.exit, !dbg !2304

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_efce4ff77543cc2403477cd546743a0c, i64 101) #18, !dbg !2305
  unreachable, !dbg !2305

_ZN4core3ptr4read7runtime17h0c951c680e762f86E.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2306, metadata !DIExpression()), !dbg !2313
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %src, i64 16, i1 false), !dbg !2315
  %7 = getelementptr inbounds { i64, ptr }, ptr %tmp, i32 0, i32 0, !dbg !2316
  %_7.0 = load i64, ptr %7, align 8, !dbg !2316
  %8 = getelementptr inbounds { i64, ptr }, ptr %tmp, i32 0, i32 1, !dbg !2316
  %_7.1 = load ptr, ptr %8, align 8, !dbg !2316
  store i64 %_7.0, ptr %self.dbg.spill.i1, align 8
  %9 = getelementptr inbounds { i64, ptr }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store ptr %_7.1, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2317, metadata !DIExpression()), !dbg !2322
  store i64 %_7.0, ptr %slot.dbg.spill.i, align 8
  %10 = getelementptr inbounds { i64, ptr }, ptr %slot.dbg.spill.i, i32 0, i32 1
  store ptr %_7.1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %slot.dbg.spill.i, metadata !2324, metadata !DIExpression()), !dbg !2329
  %11 = insertvalue { i64, ptr } undef, i64 %_7.0, 0, !dbg !2331
  %12 = insertvalue { i64, ptr } %11, ptr %_7.1, 1, !dbg !2331
  %13 = extractvalue { i64, ptr } %12, 0, !dbg !2332
  %14 = extractvalue { i64, ptr } %12, 1, !dbg !2332
  %15 = extractvalue { i64, ptr } %12, 0, !dbg !2316
  %16 = extractvalue { i64, ptr } %12, 1, !dbg !2316
  %17 = insertvalue { i64, ptr } undef, i64 %15, 0, !dbg !2333
  %18 = insertvalue { i64, ptr } %17, ptr %16, 1, !dbg !2333
  ret { i64, ptr } %18, !dbg !2333
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr4read17hb747880b223093e6E(ptr sret(%"string::String") %0, ptr %src) unnamed_addr #1 !dbg !2334 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<string::String>", align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<string::String>", align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<string::String>", align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !2338, metadata !DIExpression()), !dbg !2348
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2339, metadata !DIExpression()), !dbg !2349
  store ptr %src, ptr %_4, align 8, !dbg !2350
  %1 = load ptr, ptr %_4, align 8, !dbg !2350, !noundef !45
  store ptr %1, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !2351, metadata !DIExpression()), !dbg !2356
; call core::intrinsics::is_aligned_and_not_null
  %_3.i1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hd6978d6dcad3c904E(ptr %1) #17, !dbg !2358
  %_2.i = xor i1 %_3.i1, true, !dbg !2360
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h67f2ee334fab8745E.exit, !dbg !2360

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_efce4ff77543cc2403477cd546743a0c, i64 101) #18, !dbg !2361
  unreachable, !dbg !2361

_ZN4core3ptr4read7runtime17h67f2ee334fab8745E.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2362, metadata !DIExpression()), !dbg !2368
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %src, i64 24, i1 false), !dbg !2370
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %tmp, i64 24, i1 false), !dbg !2371
  call void @llvm.dbg.declare(metadata ptr %_7, metadata !2372, metadata !DIExpression()), !dbg !2377
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3.i, ptr align 8 %_7, i64 24, i1 false), !dbg !2379
  call void @llvm.dbg.declare(metadata ptr %_3.i, metadata !2380, metadata !DIExpression()), !dbg !2385
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_3.i, i64 24, i1 false), !dbg !2387
  ret void, !dbg !2388
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @_ZN4core3ptr4read17hcf41a14d447407e1E(ptr %src) unnamed_addr #1 !dbg !2389 {
start:
  %src.dbg.spill.i = alloca ptr, align 8
  %slot.dbg.spill.i = alloca { ptr, ptr }, align 8
  %0 = alloca { ptr, ptr }, align 8
  %self.dbg.spill.i1 = alloca { ptr, ptr }, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %tmp = alloca { ptr, ptr }, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !2393, metadata !DIExpression()), !dbg !2403
  call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2394, metadata !DIExpression()), !dbg !2404
  %1 = load ptr, ptr %0, align 8, !dbg !2405
  %2 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !2405
  %3 = load ptr, ptr %2, align 8, !dbg !2405
  %4 = insertvalue { ptr, ptr } undef, ptr %1, 0, !dbg !2405
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1, !dbg !2405
  store { ptr, ptr } %5, ptr %tmp, align 8, !dbg !2410
  store ptr %src, ptr %_4, align 8, !dbg !2411
  %6 = load ptr, ptr %_4, align 8, !dbg !2411, !noundef !45
  store ptr %6, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !2412, metadata !DIExpression()), !dbg !2417
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hdcee5023180a3051E(ptr %6) #17, !dbg !2419
  %_2.i = xor i1 %_3.i, true, !dbg !2421
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr4read7runtime17h3dd36258d8310fb8E.exit, !dbg !2421

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_efce4ff77543cc2403477cd546743a0c, i64 101) #18, !dbg !2422
  unreachable, !dbg !2422

_ZN4core3ptr4read7runtime17h3dd36258d8310fb8E.exit: ; preds = %start
  store ptr %tmp, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2423, metadata !DIExpression()), !dbg !2430
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %src, i64 16, i1 false), !dbg !2432
  %7 = getelementptr inbounds { ptr, ptr }, ptr %tmp, i32 0, i32 0, !dbg !2433
  %_7.0 = load ptr, ptr %7, align 8, !dbg !2433
  %8 = getelementptr inbounds { ptr, ptr }, ptr %tmp, i32 0, i32 1, !dbg !2433
  %_7.1 = load ptr, ptr %8, align 8, !dbg !2433
  store ptr %_7.0, ptr %self.dbg.spill.i1, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store ptr %_7.1, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2434, metadata !DIExpression()), !dbg !2439
  store ptr %_7.0, ptr %slot.dbg.spill.i, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %slot.dbg.spill.i, i32 0, i32 1
  store ptr %_7.1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %slot.dbg.spill.i, metadata !2441, metadata !DIExpression()), !dbg !2446
  %11 = insertvalue { ptr, ptr } undef, ptr %_7.0, 0, !dbg !2448
  %12 = insertvalue { ptr, ptr } %11, ptr %_7.1, 1, !dbg !2448
  %13 = extractvalue { ptr, ptr } %12, 0, !dbg !2449
  %14 = extractvalue { ptr, ptr } %12, 1, !dbg !2449
  %15 = extractvalue { ptr, ptr } %12, 0, !dbg !2433
  %16 = extractvalue { ptr, ptr } %12, 1, !dbg !2433
  %17 = insertvalue { ptr, ptr } undef, ptr %15, 0, !dbg !2450
  %18 = insertvalue { ptr, ptr } %17, ptr %16, 1, !dbg !2450
  ret { ptr, ptr } %18, !dbg !2450
}

; core::ptr::drop_in_place<&alloc::vec::Vec<u8>>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr50drop_in_place$LT$$RF$alloc..vec..Vec$LT$u8$GT$$GT$17h8a1c1afc14e91cc3E"(ptr %_1) unnamed_addr #1 !dbg !2451 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2456, metadata !DIExpression()), !dbg !2459
  ret void, !dbg !2459
}

; core::ptr::drop_in_place<alloc::borrow::Cow<str>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h8dbac5b1553a9343E"(ptr %_1) unnamed_addr #0 !dbg !2460 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2481, metadata !DIExpression()), !dbg !2484
  %_2 = load i64, ptr %_1, align 8, !dbg !2484, !range !1797, !noundef !45
  %0 = icmp eq i64 %_2, 0, !dbg !2484
  br i1 %0, label %bb1, label %bb2, !dbg !2484

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !2484

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"borrow::Cow<'_, str>::Owned", ptr %_1, i32 0, i32 1, !dbg !2484
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2254349ab55352cdE"(ptr %1) #17, !dbg !2484
  br label %bb1, !dbg !2484
}

; core::ptr::drop_in_place<&core::str::error::Utf8Error>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr52drop_in_place$LT$$RF$core..str..error..Utf8Error$GT$17ha91a37f5545185bfE"(ptr %_1) unnamed_addr #1 !dbg !2485 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2490, metadata !DIExpression()), !dbg !2493
  ret void, !dbg !2493
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h3e57bfa2296415acE"(ptr %_1) unnamed_addr #0 !dbg !2494 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2498, metadata !DIExpression()), !dbg !2499
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h013463ec9eaded60E"(ptr align 8 %_1) #17, !dbg !2499
  ret void, !dbg !2499
}

; core::ptr::drop_in_place<core::alloc::layout::LayoutError>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17he05a8a1bf4c8fc09E"(ptr %_1) unnamed_addr #1 !dbg !2500 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2505, metadata !DIExpression()), !dbg !2506
  ret void, !dbg !2506
}

; core::ptr::drop_in_place<&mut alloc::string::String>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr54drop_in_place$LT$$RF$mut$u20$alloc..string..String$GT$17h0b890ab8f8f6221fE"(ptr %_1) unnamed_addr #1 !dbg !2507 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2512, metadata !DIExpression()), !dbg !2515
  ret void, !dbg !2515
}

; core::ptr::drop_in_place<&core::option::Option<u8>>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr55drop_in_place$LT$$RF$core..option..Option$LT$u8$GT$$GT$17h848328e1cf5ca3d2E"(ptr %_1) unnamed_addr #1 !dbg !2516 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2521, metadata !DIExpression()), !dbg !2524
  ret void, !dbg !2524
}

; core::ptr::drop_in_place<alloc::vec::drain::Drain<u8>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr55drop_in_place$LT$alloc..vec..drain..Drain$LT$u8$GT$$GT$17h978bbc390bc3cbeeE"(ptr %_1) unnamed_addr #0 !dbg !2525 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2530, metadata !DIExpression()), !dbg !2533
; call <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he5d017d9b75beb25E"(ptr align 8 %_1) #17, !dbg !2533
  ret void, !dbg !2533
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: noredzone nounwind
define void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h394222bf9f2778faE"(ptr %_1) unnamed_addr #0 !dbg !2534 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2538, metadata !DIExpression()), !dbg !2539
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2539
  %_4.0 = load ptr, ptr %0, align 8, !dbg !2539, !noundef !45
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2539
  %_4.1 = load i64, ptr %1, align 8, !dbg !2539, !noundef !45
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 0, !dbg !2539
  %3 = load ptr, ptr %2, align 8, !dbg !2539, !nonnull !45, !noundef !45
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_1, i32 0, i32 1, !dbg !2539
  %5 = load i64, ptr %4, align 8, !dbg !2539, !noundef !45
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h0357003df53c0fe9E(ptr %3, i64 %5) #17, !dbg !2539
  ret void, !dbg !2539
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h03104ae4e030edd1E(ptr %dst, i16 %0, i16 %1) unnamed_addr #1 !dbg !2540 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %src = alloca { i16, i16 }, align 2
  %2 = getelementptr inbounds { i16, i16 }, ptr %src, i32 0, i32 0
  store i16 %0, ptr %2, align 2
  %3 = getelementptr inbounds { i16, i16 }, ptr %src, i32 0, i32 1
  store i16 %1, ptr %3, align 2
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !2544, metadata !DIExpression()), !dbg !2546
  call void @llvm.dbg.declare(metadata ptr %src, metadata !2545, metadata !DIExpression()), !dbg !2547
  store ptr %dst, ptr %_4, align 8, !dbg !2548
  %4 = load ptr, ptr %_4, align 8, !dbg !2548, !noundef !45
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !2549, metadata !DIExpression()), !dbg !2555
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hedbc77d5634e60acE(ptr %4) #17, !dbg !2557
  %_2.i = xor i1 %_3.i, true, !dbg !2559
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17haaefcc50cb4329b0E.exit, !dbg !2559

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_98d916830fc7cab3c43d0ae7d762d17f, i64 102) #18, !dbg !2560
  unreachable, !dbg !2560

_ZN4core3ptr5write7runtime17haaefcc50cb4329b0E.exit: ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %dst, ptr align 2 %src, i64 4, i1 false), !dbg !2561
  ret void, !dbg !2562
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h5f7fbf5ab9b1995eE(ptr %dst, ptr align 1 %0, i64 %1) unnamed_addr #1 !dbg !2563 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %src = alloca { ptr, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %src, i32 0, i32 0
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %src, i32 0, i32 1
  store i64 %1, ptr %3, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !2567, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.declare(metadata ptr %src, metadata !2568, metadata !DIExpression()), !dbg !2570
  store ptr %dst, ptr %_4, align 8, !dbg !2571
  %4 = load ptr, ptr %_4, align 8, !dbg !2571, !noundef !45
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !2572, metadata !DIExpression()), !dbg !2575
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hb8a5e17d810b5ea4E(ptr %4) #17, !dbg !2577
  %_2.i = xor i1 %_3.i, true, !dbg !2579
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17h2d80debc63ad1f70E.exit, !dbg !2579

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_98d916830fc7cab3c43d0ae7d762d17f, i64 102) #18, !dbg !2580
  unreachable, !dbg !2580

_ZN4core3ptr5write7runtime17h2d80debc63ad1f70E.exit: ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 16, i1 false), !dbg !2581
  ret void, !dbg !2582
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17h82a430e08389d3f6E(ptr %dst, ptr %src) unnamed_addr #1 !dbg !2583 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !2587, metadata !DIExpression()), !dbg !2589
  call void @llvm.dbg.declare(metadata ptr %src, metadata !2588, metadata !DIExpression()), !dbg !2590
  store ptr %dst, ptr %_4, align 8, !dbg !2591
  %0 = load ptr, ptr %_4, align 8, !dbg !2591, !noundef !45
  store ptr %0, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !2592, metadata !DIExpression()), !dbg !2595
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hd6978d6dcad3c904E(ptr %0) #17, !dbg !2597
  %_2.i = xor i1 %_3.i, true, !dbg !2599
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17h5541617de79e91fdE.exit, !dbg !2599

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_98d916830fc7cab3c43d0ae7d762d17f, i64 102) #18, !dbg !2600
  unreachable, !dbg !2600

_ZN4core3ptr5write7runtime17h5541617de79e91fdE.exit: ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false), !dbg !2601
  ret void, !dbg !2602
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core3ptr5write17he2c5432ed5b5c6f6E(ptr %dst, ptr %0, ptr %1) unnamed_addr #1 !dbg !2603 {
start:
  %dst.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %src = alloca { ptr, ptr }, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %src, i32 0, i32 0
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %src, i32 0, i32 1
  store ptr %1, ptr %3, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !2607, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.declare(metadata ptr %src, metadata !2608, metadata !DIExpression()), !dbg !2610
  store ptr %dst, ptr %_4, align 8, !dbg !2611
  %4 = load ptr, ptr %_4, align 8, !dbg !2611, !noundef !45
  store ptr %4, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !2612, metadata !DIExpression()), !dbg !2617
; call core::intrinsics::is_aligned_and_not_null
  %_3.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hdcee5023180a3051E(ptr %4) #17, !dbg !2619
  %_2.i = xor i1 %_3.i, true, !dbg !2621
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr5write7runtime17hdf512cffeb660bf3E.exit, !dbg !2621

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_98d916830fc7cab3c43d0ae7d762d17f, i64 102) #18, !dbg !2622
  unreachable, !dbg !2622

_ZN4core3ptr5write7runtime17hdf512cffeb660bf3E.exit: ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 16, i1 false), !dbg !2623
  ret void, !dbg !2624
}

; core::ptr::drop_in_place<&alloc::collections::TryReserveErrorKind>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr64drop_in_place$LT$$RF$alloc..collections..TryReserveErrorKind$GT$17hb943e1041e1118a1E"(ptr %_1) unnamed_addr #1 !dbg !2625 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2630, metadata !DIExpression()), !dbg !2633
  ret void, !dbg !2633
}

; core::ptr::drop_in_place<alloc::ffi::c_str::FromBytesWithNulErrorKind>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr65drop_in_place$LT$alloc..ffi..c_str..FromBytesWithNulErrorKind$GT$17he5de423ab36c6fddE"(ptr %_1) unnamed_addr #1 !dbg !2634 {
start:
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !2639, metadata !DIExpression()), !dbg !2642
  ret void, !dbg !2642
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0aafb19549a69619E"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !2643 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2651, metadata !DIExpression()), !dbg !2652
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc2cb04b8c23666f6E"(ptr %ptr.0, i64 %ptr.1) #17, !dbg !2653
  %_2.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2653
  %_2.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2653
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2654
  store ptr %_2.0, ptr %4, align 8, !dbg !2654
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2654
  store i64 %_2.1, ptr %5, align 8, !dbg !2654
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2655
  %7 = load ptr, ptr %6, align 8, !dbg !2655, !nonnull !45, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2655
  %9 = load i64, ptr %8, align 8, !dbg !2655, !noundef !45
  %10 = insertvalue { ptr, i64 } undef, ptr %7, 0, !dbg !2655
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !2655
  ret { ptr, i64 } %11, !dbg !2655
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h927607014d416d51E"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !2656 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2664, metadata !DIExpression()), !dbg !2665
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h62e9a6650a9b11e5E"(ptr %ptr.0, i64 %ptr.1) #17, !dbg !2666
  %_2.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2666
  %_2.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2666
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2667
  store ptr %_2.0, ptr %4, align 8, !dbg !2667
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2667
  store i64 %_2.1, ptr %5, align 8, !dbg !2667
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2668
  %7 = load ptr, ptr %6, align 8, !dbg !2668, !nonnull !45, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2668
  %9 = load i64, ptr %8, align 8, !dbg !2668, !noundef !45
  %10 = insertvalue { ptr, i64 } undef, ptr %7, 0, !dbg !2668
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !2668
  ret { ptr, i64 } %11, !dbg !2668
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h97ce221bd4ae9d0dE"(ptr %ptr) unnamed_addr #1 !dbg !2669 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2673, metadata !DIExpression()), !dbg !2674
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9eb1d87c9d7b337eE"(ptr %ptr) #17, !dbg !2675
  store ptr %_2, ptr %0, align 8, !dbg !2676
  %1 = load ptr, ptr %0, align 8, !dbg !2677, !nonnull !45, !noundef !45
  ret ptr %1, !dbg !2677
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17haed075faf7848f85E"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !2678 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2686, metadata !DIExpression()), !dbg !2687
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h51d3e552a3d14ea4E"(ptr %ptr.0, i64 %ptr.1) #17, !dbg !2688
  %_2.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2688
  %_2.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2688
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2689
  store ptr %_2.0, ptr %4, align 8, !dbg !2689
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2689
  store i64 %_2.1, ptr %5, align 8, !dbg !2689
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2690
  %7 = load ptr, ptr %6, align 8, !dbg !2690, !nonnull !45, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2690
  %9 = load i64, ptr %8, align 8, !dbg !2690, !noundef !45
  %10 = insertvalue { ptr, i64 } undef, ptr %7, 0, !dbg !2690
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !2690
  ret { ptr, i64 } %11, !dbg !2690
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hce7e6adb62fafdfeE"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !2691 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2699, metadata !DIExpression()), !dbg !2700
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8270113c0a2fdf4cE"(ptr %ptr.0, i64 %ptr.1) #17, !dbg !2701
  %_2.0 = extractvalue { ptr, i64 } %3, 0, !dbg !2701
  %_2.1 = extractvalue { ptr, i64 } %3, 1, !dbg !2701
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2702
  store ptr %_2.0, ptr %4, align 8, !dbg !2702
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2702
  store i64 %_2.1, ptr %5, align 8, !dbg !2702
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2703
  %7 = load ptr, ptr %6, align 8, !dbg !2703, !nonnull !45, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2703
  %9 = load i64, ptr %8, align 8, !dbg !2703, !noundef !45
  %10 = insertvalue { ptr, i64 } undef, ptr %7, 0, !dbg !2703
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !2703
  ret { ptr, i64 } %11, !dbg !2703
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hac21323e41eff0e2E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !2704 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2708, metadata !DIExpression()), !dbg !2711
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3ed6410c6c7dbb96E"(ptr %self.0, i64 %self.1) #17, !dbg !2712
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %2 = call ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h6536788035efc0bdE"(ptr %_2) #17, !dbg !2713
  ret ptr %2, !dbg !2714
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcb3f6fdd6f42c681E"(ptr %self) unnamed_addr #1 !dbg !2715 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2719, metadata !DIExpression()), !dbg !2720
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hbde107f8170d262aE"(ptr %self) #17, !dbg !2721
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h6536788035efc0bdE"(ptr %_2) #17, !dbg !2722
  ret ptr %0, !dbg !2723
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6c7e501aa8d05bbeE"(ptr %self) unnamed_addr #1 !dbg !2724 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2728, metadata !DIExpression()), !dbg !2729
  store ptr %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2730, metadata !DIExpression()), !dbg !2735
  ret ptr %self, !dbg !2737
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8f39c16857b61dc9E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !2738 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2742, metadata !DIExpression()), !dbg !2743
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2744, metadata !DIExpression()), !dbg !2749
  %3 = insertvalue { ptr, i64 } undef, ptr %self.0, 0, !dbg !2751
  %4 = insertvalue { ptr, i64 } %3, i64 %self.1, 1, !dbg !2751
  %5 = extractvalue { ptr, i64 } %4, 0, !dbg !2752
  %6 = extractvalue { ptr, i64 } %4, 1, !dbg !2752
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !2753
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1, !dbg !2753
  ret { ptr, i64 } %8, !dbg !2753
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h97ba1af7a992b060E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !2754 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2758, metadata !DIExpression()), !dbg !2759
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2760, metadata !DIExpression()), !dbg !2765
  %3 = insertvalue { ptr, i64 } undef, ptr %self.0, 0, !dbg !2767
  %4 = insertvalue { ptr, i64 } %3, i64 %self.1, 1, !dbg !2767
  %5 = extractvalue { ptr, i64 } %4, 0, !dbg !2768
  %6 = extractvalue { ptr, i64 } %4, 1, !dbg !2768
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !2769
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1, !dbg !2769
  ret { ptr, i64 } %8, !dbg !2769
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf6edf88a3181498E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !2770 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2774, metadata !DIExpression()), !dbg !2775
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2776, metadata !DIExpression()), !dbg !2781
  %3 = insertvalue { ptr, i64 } undef, ptr %self.0, 0, !dbg !2783
  %4 = insertvalue { ptr, i64 } %3, i64 %self.1, 1, !dbg !2783
  %5 = extractvalue { ptr, i64 } %4, 0, !dbg !2784
  %6 = extractvalue { ptr, i64 } %4, 1, !dbg !2784
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !2785
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1, !dbg !2785
  ret { ptr, i64 } %8, !dbg !2785
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf04fcd59fc5933c1E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !2786 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2790, metadata !DIExpression()), !dbg !2791
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2792, metadata !DIExpression()), !dbg !2797
  %3 = insertvalue { ptr, i64 } undef, ptr %self.0, 0, !dbg !2799
  %4 = insertvalue { ptr, i64 } %3, i64 %self.1, 1, !dbg !2799
  %5 = extractvalue { ptr, i64 } %4, 0, !dbg !2800
  %6 = extractvalue { ptr, i64 } %4, 1, !dbg !2800
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !2801
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1, !dbg !2801
  ret { ptr, i64 } %8, !dbg !2801
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbdd312af9f64d83cE"(ptr align 8 %self) unnamed_addr #1 !dbg !2802 {
start:
  %self.dbg.spill.i.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2807, metadata !DIExpression()), !dbg !2808
  store ptr %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2809, metadata !DIExpression()), !dbg !2815
  %_3.0.i = load ptr, ptr %self, align 8, !dbg !2817, !nonnull !45, !noundef !45
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1, !dbg !2817
  %_3.1.i = load i64, ptr %0, align 8, !dbg !2817, !noundef !45
  store ptr %_3.0.i, ptr %self.dbg.spill.i.i, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i.i, i32 0, i32 1
  store i64 %_3.1.i, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !2760, metadata !DIExpression()), !dbg !2818
  %2 = insertvalue { ptr, i64 } undef, ptr %_3.0.i, 0, !dbg !2820
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1.i, 1, !dbg !2820
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0.i, 0, !dbg !2821
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1.i, 1, !dbg !2821
  %6 = extractvalue { ptr, i64 } %5, 0, !dbg !2822
  %7 = extractvalue { ptr, i64 } %5, 1, !dbg !2822
  %8 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !2823
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !2823
  ret { ptr, i64 } %9, !dbg !2823
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h43909fabac992d1aE"() unnamed_addr #1 !dbg !2824 {
start:
; call core::ptr::non_null::NonNull<T>::dangling
  %_1 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h6a19becc08bf6f15E"() #17, !dbg !2827
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h48b8596408a422faE"(ptr %_1) #17, !dbg !2828
  ret ptr %0, !dbg !2829
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17ha0c383fd86308f07E"() unnamed_addr #1 !dbg !2830 {
start:
; call core::ptr::non_null::NonNull<T>::dangling
  %_1 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hdfc682e11611b3e2E"() #17, !dbg !2833
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h6536788035efc0bdE"(ptr %_1) #17, !dbg !2834
  ret ptr %0, !dbg !2835
}

; core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h0c173e9648b2f39eE"(ptr %ptr) unnamed_addr #1 !dbg !2836 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2841, metadata !DIExpression()), !dbg !2842
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2843, metadata !DIExpression()), !dbg !2848
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2850, metadata !DIExpression()), !dbg !2856
  store ptr %ptr, ptr %0, align 8, !dbg !2858
  %1 = load i64, ptr %0, align 8, !dbg !2858, !noundef !45
  %2 = icmp eq i64 %1, 0, !dbg !2859
  ret i1 %2, !dbg !2860
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h010291aa30e487a0E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !2861 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca ptr, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2865, metadata !DIExpression()), !dbg !2866
  store ptr %self.0, ptr %_2, align 8, !dbg !2867
  %2 = load ptr, ptr %_2, align 8, !dbg !2868, !noundef !45
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h0c173e9648b2f39eE"(ptr %2) #17, !dbg !2868
  ret i1 %3, !dbg !2869
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h554c3e267abbbcbeE"(ptr %self) unnamed_addr #1 !dbg !2870 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2875, metadata !DIExpression()), !dbg !2876
  store ptr %self, ptr %_2, align 8, !dbg !2877
  %0 = load ptr, ptr %_2, align 8, !dbg !2878, !noundef !45
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h0c173e9648b2f39eE"(ptr %0) #17, !dbg !2878
  ret i1 %1, !dbg !2879
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h611bfd9ce03a98adE"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !2880 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca ptr, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2884, metadata !DIExpression()), !dbg !2885
  store ptr %self.0, ptr %_2, align 8, !dbg !2886
  %2 = load ptr, ptr %_2, align 8, !dbg !2887, !noundef !45
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h0c173e9648b2f39eE"(ptr %2) #17, !dbg !2887
  ret i1 %3, !dbg !2888
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7b0cebd5ce89c4baE"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !2889 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca ptr, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2893, metadata !DIExpression()), !dbg !2894
  store ptr %self.0, ptr %_2, align 8, !dbg !2895
  %2 = load ptr, ptr %_2, align 8, !dbg !2896, !noundef !45
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h0c173e9648b2f39eE"(ptr %2) #17, !dbg !2896
  ret i1 %3, !dbg !2897
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hab266658078c175cE"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !2898 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca ptr, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !2902, metadata !DIExpression()), !dbg !2903
  store ptr %self.0, ptr %_2, align 8, !dbg !2904
  %2 = load ptr, ptr %_2, align 8, !dbg !2905, !noundef !45
; call core::ptr::mut_ptr::<impl *mut T>::is_null::runtime_impl
  %3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h0c173e9648b2f39eE"(ptr %2) #17, !dbg !2905
  ret i1 %3, !dbg !2906
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hd94a776a912c3c9cE(ptr %data_address, i64 %metadata) unnamed_addr #1 !dbg !2907 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[i8]>", align 8
  store ptr %data_address, ptr %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data_address.dbg.spill, metadata !2913, metadata !DIExpression()), !dbg !2915
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %metadata.dbg.spill, metadata !2914, metadata !DIExpression()), !dbg !2916
  store ptr %data_address, ptr %_4, align 8, !dbg !2917
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !2917
  store i64 %metadata, ptr %0, align 8, !dbg !2917
  %1 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !2918
  %2 = load ptr, ptr %1, align 8, !dbg !2918, !noundef !45
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !2918
  %4 = load i64, ptr %3, align 8, !dbg !2918, !noundef !45
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !2918
  store ptr %2, ptr %5, align 8, !dbg !2918
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !2918
  store i64 %4, ptr %6, align 8, !dbg !2918
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !2918
  %8 = load ptr, ptr %7, align 8, !dbg !2918, !noundef !45
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !2918
  %10 = load i64, ptr %9, align 8, !dbg !2918, !noundef !45
  %11 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !2919
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !2919
  ret { ptr, i64 } %12, !dbg !2919
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3872c35e961a081aE"(ptr %ptr) unnamed_addr #1 !dbg !2920 {
start:
  %ptr.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2924, metadata !DIExpression()), !dbg !2925
  store ptr %ptr, ptr %_3, align 8, !dbg !2926
  %1 = load ptr, ptr %_3, align 8, !dbg !2926, !noundef !45
  store ptr %1, ptr %ptr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !2927, metadata !DIExpression()), !dbg !2934
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h554c3e267abbbcbeE"(ptr %1) #17, !dbg !2936
  %_3.i = xor i1 %_4.i, true, !dbg !2938
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17haad6106a538e1d2bE.exit", !dbg !2939

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_d0afbdd8e12853f26980a9342bb4d429, i64 93) #18, !dbg !2940
  unreachable, !dbg !2940

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17haad6106a538e1d2bE.exit": ; preds = %start
  store ptr %ptr, ptr %0, align 8, !dbg !2941
  %2 = load ptr, ptr %0, align 8, !dbg !2942, !nonnull !45, !noundef !45
  ret ptr %2, !dbg !2942
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h51d3e552a3d14ea4E"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !2943 {
start:
  %ptr.dbg.spill.i = alloca { ptr, i64 }, align 8
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_3 = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2947, metadata !DIExpression()), !dbg !2948
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !2949
  store ptr %ptr.0, ptr %3, align 8, !dbg !2949
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !2949
  store i64 %ptr.1, ptr %4, align 8, !dbg !2949
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !2949
  %6 = load ptr, ptr %5, align 8, !dbg !2949, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !2949
  %8 = load i64, ptr %7, align 8, !dbg !2949, !noundef !45
  store ptr %6, ptr %ptr.dbg.spill.i, align 8
  %9 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill.i, i32 0, i32 1
  store i64 %8, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !2950, metadata !DIExpression()), !dbg !2955
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hab266658078c175cE"(ptr %6, i64 %8) #17, !dbg !2957
  %_3.i = xor i1 %_4.i, true, !dbg !2959
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h9085382d6ff57dc7E.exit", !dbg !2960

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_d0afbdd8e12853f26980a9342bb4d429, i64 93) #18, !dbg !2961
  unreachable, !dbg !2961

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h9085382d6ff57dc7E.exit": ; preds = %start
  %10 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2962
  store ptr %ptr.0, ptr %10, align 8, !dbg !2962
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2962
  store i64 %ptr.1, ptr %11, align 8, !dbg !2962
  %12 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2963
  %13 = load ptr, ptr %12, align 8, !dbg !2963, !nonnull !45, !noundef !45
  %14 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2963
  %15 = load i64, ptr %14, align 8, !dbg !2963, !noundef !45
  %16 = insertvalue { ptr, i64 } undef, ptr %13, 0, !dbg !2963
  %17 = insertvalue { ptr, i64 } %16, i64 %15, 1, !dbg !2963
  ret { ptr, i64 } %17, !dbg !2963
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h62e9a6650a9b11e5E"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !2964 {
start:
  %ptr.dbg.spill.i = alloca { ptr, i64 }, align 8
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_3 = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2968, metadata !DIExpression()), !dbg !2969
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !2970
  store ptr %ptr.0, ptr %3, align 8, !dbg !2970
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !2970
  store i64 %ptr.1, ptr %4, align 8, !dbg !2970
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !2970
  %6 = load ptr, ptr %5, align 8, !dbg !2970, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !2970
  %8 = load i64, ptr %7, align 8, !dbg !2970, !noundef !45
  store ptr %6, ptr %ptr.dbg.spill.i, align 8
  %9 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill.i, i32 0, i32 1
  store i64 %8, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !2971, metadata !DIExpression()), !dbg !2976
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7b0cebd5ce89c4baE"(ptr %6, i64 %8) #17, !dbg !2978
  %_3.i = xor i1 %_4.i, true, !dbg !2980
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h096aa246c0ce3bcbE.exit", !dbg !2981

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_d0afbdd8e12853f26980a9342bb4d429, i64 93) #18, !dbg !2982
  unreachable, !dbg !2982

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h096aa246c0ce3bcbE.exit": ; preds = %start
  %10 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2983
  store ptr %ptr.0, ptr %10, align 8, !dbg !2983
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2983
  store i64 %ptr.1, ptr %11, align 8, !dbg !2983
  %12 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !2984
  %13 = load ptr, ptr %12, align 8, !dbg !2984, !nonnull !45, !noundef !45
  %14 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !2984
  %15 = load i64, ptr %14, align 8, !dbg !2984, !noundef !45
  %16 = insertvalue { ptr, i64 } undef, ptr %13, 0, !dbg !2984
  %17 = insertvalue { ptr, i64 } %16, i64 %15, 1, !dbg !2984
  ret { ptr, i64 } %17, !dbg !2984
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8270113c0a2fdf4cE"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !2985 {
start:
  %ptr.dbg.spill.i = alloca { ptr, i64 }, align 8
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_3 = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !2989, metadata !DIExpression()), !dbg !2990
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !2991
  store ptr %ptr.0, ptr %3, align 8, !dbg !2991
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !2991
  store i64 %ptr.1, ptr %4, align 8, !dbg !2991
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !2991
  %6 = load ptr, ptr %5, align 8, !dbg !2991, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !2991
  %8 = load i64, ptr %7, align 8, !dbg !2991, !noundef !45
  store ptr %6, ptr %ptr.dbg.spill.i, align 8
  %9 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill.i, i32 0, i32 1
  store i64 %8, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !2992, metadata !DIExpression()), !dbg !2997
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h010291aa30e487a0E"(ptr %6, i64 %8) #17, !dbg !2999
  %_3.i = xor i1 %_4.i, true, !dbg !3001
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h968a074c7eec7f30E.exit", !dbg !3002

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_d0afbdd8e12853f26980a9342bb4d429, i64 93) #18, !dbg !3003
  unreachable, !dbg !3003

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h968a074c7eec7f30E.exit": ; preds = %start
  %10 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !3004
  store ptr %ptr.0, ptr %10, align 8, !dbg !3004
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3004
  store i64 %ptr.1, ptr %11, align 8, !dbg !3004
  %12 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !3005
  %13 = load ptr, ptr %12, align 8, !dbg !3005, !nonnull !45, !noundef !45
  %14 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3005
  %15 = load i64, ptr %14, align 8, !dbg !3005, !noundef !45
  %16 = insertvalue { ptr, i64 } undef, ptr %13, 0, !dbg !3005
  %17 = insertvalue { ptr, i64 } %16, i64 %15, 1, !dbg !3005
  ret { ptr, i64 } %17, !dbg !3005
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc2cb04b8c23666f6E"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3006 {
start:
  %ptr.dbg.spill.i = alloca { ptr, i64 }, align 8
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %_3 = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !3010, metadata !DIExpression()), !dbg !3011
  %3 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !3012
  store ptr %ptr.0, ptr %3, align 8, !dbg !3012
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !3012
  store i64 %ptr.1, ptr %4, align 8, !dbg !3012
  %5 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 0, !dbg !3012
  %6 = load ptr, ptr %5, align 8, !dbg !3012, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_3, i32 0, i32 1, !dbg !3012
  %8 = load i64, ptr %7, align 8, !dbg !3012, !noundef !45
  store ptr %6, ptr %ptr.dbg.spill.i, align 8
  %9 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill.i, i32 0, i32 1
  store i64 %8, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill.i, metadata !3013, metadata !DIExpression()), !dbg !3018
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4.i = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h611bfd9ce03a98adE"(ptr %6, i64 %8) #17, !dbg !3020
  %_3.i = xor i1 %_4.i, true, !dbg !3022
  br i1 %_4.i, label %bb2.i, label %"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17ha30c83c7a2cb5ae4E.exit", !dbg !3023

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_d0afbdd8e12853f26980a9342bb4d429, i64 93) #18, !dbg !3024
  unreachable, !dbg !3024

"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17ha30c83c7a2cb5ae4E.exit": ; preds = %start
  %10 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !3025
  store ptr %ptr.0, ptr %10, align 8, !dbg !3025
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3025
  store i64 %ptr.1, ptr %11, align 8, !dbg !3025
  %12 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !3026
  %13 = load ptr, ptr %12, align 8, !dbg !3026, !nonnull !45, !noundef !45
  %14 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3026
  %15 = load i64, ptr %14, align 8, !dbg !3026, !noundef !45
  %16 = insertvalue { ptr, i64 } undef, ptr %13, 0, !dbg !3026
  %17 = insertvalue { ptr, i64 } %16, i64 %15, 1, !dbg !3026
  ret { ptr, i64 } %17, !dbg !3026
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hb99e8f889e8dfec0E"(ptr %ptr) unnamed_addr #1 !dbg !3027 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !3044, metadata !DIExpression()), !dbg !3045
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7895b0ae390f1c8aE"(ptr %ptr) #17, !dbg !3046
  %_2 = xor i1 %_3, true, !dbg !3047
  br i1 %_2, label %bb2, label %bb4, !dbg !3047

bb4:                                              ; preds = %start
  store ptr null, ptr %0, align 8, !dbg !3048
  br label %bb5, !dbg !3049

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_4 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9eb1d87c9d7b337eE"(ptr %ptr) #17, !dbg !3050
  store ptr %_4, ptr %0, align 8, !dbg !3051
  br label %bb5, !dbg !3049

bb5:                                              ; preds = %bb4, %bb2
  %1 = load ptr, ptr %0, align 8, !dbg !3052, !noundef !45
  ret ptr %1, !dbg !3052
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3ed6410c6c7dbb96E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !3053 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3057, metadata !DIExpression()), !dbg !3058
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2760, metadata !DIExpression()), !dbg !3059
  %3 = insertvalue { ptr, i64 } undef, ptr %self.0, 0, !dbg !3061
  %4 = insertvalue { ptr, i64 } %3, i64 %self.1, 1, !dbg !3061
  %_3.0 = extractvalue { ptr, i64 } %4, 0, !dbg !3062
  %_3.1 = extractvalue { ptr, i64 } %4, 1, !dbg !3062
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %5 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9eb1d87c9d7b337eE"(ptr %_3.0) #17, !dbg !3063
  ret ptr %5, !dbg !3064
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hbde107f8170d262aE"(ptr %self) unnamed_addr #1 !dbg !3065 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3069, metadata !DIExpression()), !dbg !3070
  store ptr %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2730, metadata !DIExpression()), !dbg !3071
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9eb1d87c9d7b337eE"(ptr %self) #17, !dbg !3073
  ret ptr %0, !dbg !3074
}

; core::ptr::non_null::NonNull<T>::dangling
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h6a19becc08bf6f15E"() unnamed_addr #1 !dbg !3075 {
start:
  %0 = alloca ptr, align 8
  %addr.dbg.spill.i = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8, !dbg !3081
  store i64 1, ptr %addr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i, metadata !3082, metadata !DIExpression()), !dbg !3087
  store i64 1, ptr %0, align 8, !dbg !3089
  %1 = load ptr, ptr %0, align 8, !dbg !3089, !noundef !45
  store ptr %1, ptr %ptr.dbg.spill, align 8, !dbg !3090
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !3079, metadata !DIExpression()), !dbg !3091
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3872c35e961a081aE"(ptr %1) #17, !dbg !3092
  ret ptr %2, !dbg !3093
}

; core::ptr::non_null::NonNull<T>::dangling
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hdfc682e11611b3e2E"() unnamed_addr #1 !dbg !3094 {
start:
  %0 = alloca ptr, align 8
  %addr.dbg.spill.i = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8, !dbg !3100
  store i64 1, ptr %addr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i, metadata !3101, metadata !DIExpression()), !dbg !3106
  store i64 1, ptr %0, align 8, !dbg !3108
  %1 = load ptr, ptr %0, align 8, !dbg !3108, !noundef !45
  store ptr %1, ptr %ptr.dbg.spill, align 8, !dbg !3109
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !3098, metadata !DIExpression()), !dbg !3110
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9eb1d87c9d7b337eE"(ptr %1) #17, !dbg !3111
  ret ptr %2, !dbg !3112
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17ha9fd9e9e2469caa6E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !3113 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3117, metadata !DIExpression()), !dbg !3118
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h1d994e881f6cd654E"(ptr %self.0, i64 %self.1) #17, !dbg !3119
  store ptr %_2, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2730, metadata !DIExpression()), !dbg !3120
  ret ptr %_2, !dbg !3122
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h1d994e881f6cd654E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !3123 {
start:
  %self.dbg.spill.i1 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3125, metadata !DIExpression()), !dbg !3126
  store ptr %self.0, ptr %self.dbg.spill.i1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i1, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2760, metadata !DIExpression()), !dbg !3127
  %3 = insertvalue { ptr, i64 } undef, ptr %self.0, 0, !dbg !3129
  %4 = insertvalue { ptr, i64 } %3, i64 %self.1, 1, !dbg !3129
  %_3.0 = extractvalue { ptr, i64 } %4, 0, !dbg !3130
  %_3.1 = extractvalue { ptr, i64 } %4, 1, !dbg !3130
  store ptr %_3.0, ptr %self.dbg.spill.i, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %_3.1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3131, metadata !DIExpression()), !dbg !3137
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %6 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9eb1d87c9d7b337eE"(ptr %_3.0) #17, !dbg !3139
  ret ptr %6, !dbg !3140
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc47f999b0766f8edE"(ptr %data, i64 %len) unnamed_addr #1 !dbg !3141 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !3145, metadata !DIExpression()), !dbg !3147
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3146, metadata !DIExpression()), !dbg !3148
  store ptr %data, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2730, metadata !DIExpression()), !dbg !3149
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hf71777480862c3a6E(ptr %data, i64 %len) #17, !dbg !3151
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !3151
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !3151
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h51d3e552a3d14ea4E"(ptr %_3.0, i64 %_3.1) #17, !dbg !3152
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !3152
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !3152
  %4 = insertvalue { ptr, i64 } undef, ptr %2, 0, !dbg !3153
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1, !dbg !3153
  ret { ptr, i64 } %5, !dbg !3153
}

; core::ptr::alignment::Alignment::as_nonzero
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3ptr9alignment9Alignment10as_nonzero17h403b42abfa1470b8E(i64 %self) unnamed_addr #1 !dbg !3154 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3159, metadata !DIExpression()), !dbg !3160
; call core::ptr::alignment::Alignment::as_usize
  %_2 = call i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h83336db9ab22898bE(i64 %self) #17, !dbg !3161
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %0 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17he00ee406346915ccE(i64 %_2) #17, !dbg !3162, !range !1861
  ret i64 %0, !dbg !3163
}

; core::ptr::alignment::Alignment::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3ptr9alignment9Alignment13new_unchecked17he86b18bd5fec2cb9E(i64 %align) unnamed_addr #1 !dbg !3164 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %align.dbg.spill.i = alloca i64, align 8
  %1 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %_3 = alloca i64, align 8
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !3168, metadata !DIExpression()), !dbg !3169
  store i64 %align, ptr %_3, align 8, !dbg !3170
  %2 = load i64, ptr %_3, align 8, !dbg !3170, !noundef !45
  store i64 %2, ptr %align.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !3171, metadata !DIExpression()), !dbg !3176
  store i64 %2, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !3178, metadata !DIExpression()), !dbg !3181
  store i64 %2, ptr %self.dbg.spill.i.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i.i, metadata !3184, metadata !DIExpression()), !dbg !3189
  %3 = call i64 @llvm.ctpop.i64(i64 %2), !dbg !3191
  store i64 %3, ptr %0, align 8, !dbg !3191
  %_2.i.i.i = load i64, ptr %0, align 8, !dbg !3191, !noundef !45
  %4 = trunc i64 %_2.i.i.i to i32, !dbg !3191
  %5 = icmp eq i32 %4, 1, !dbg !3192
  %_2.i = xor i1 %5, true, !dbg !3193
  br i1 %_2.i, label %bb2.i, label %_ZN4core3ptr9alignment9Alignment13new_unchecked7runtime17h993560930a551479E.exit, !dbg !3193

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_f87acf8c929a49cd44819755e05698cc, i64 81) #18, !dbg !3194
  unreachable, !dbg !3194

_ZN4core3ptr9alignment9Alignment13new_unchecked7runtime17h993560930a551479E.exit: ; preds = %start
  store i64 %align, ptr %1, align 8, !dbg !3195
  %6 = load i64, ptr %1, align 8, !dbg !3195, !range !1362, !noundef !45
  ret i64 %6, !dbg !3196
}

; core::ptr::alignment::Alignment::of
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core3ptr9alignment9Alignment2of17hd5f0d848ab7e7b8fE() unnamed_addr #1 !dbg !3197 {
start:
; call core::ptr::alignment::Alignment::new_unchecked
  %0 = call i64 @_ZN4core3ptr9alignment9Alignment13new_unchecked17he86b18bd5fec2cb9E(i64 1) #17, !dbg !3200, !range !1362
  ret i64 %0, !dbg !3201
}

; core::ptr::alignment::Alignment::as_usize
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h83336db9ab22898bE(i64 %self) unnamed_addr #1 !dbg !3202 {
start:
  %self.dbg.spill = alloca i64, align 8
  %_2 = alloca i64, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3206, metadata !DIExpression()), !dbg !3207
  store i64 %self, ptr %_2, align 8, !dbg !3208
  %_3 = load i64, ptr %_2, align 8, !dbg !3208, !range !1362, !noundef !45
  %_4 = icmp uge i64 -9223372036854775808, %_3, !dbg !3208
  call void @llvm.assume(i1 %_4), !dbg !3208
  %_5 = icmp ule i64 1, %_3, !dbg !3208
  call void @llvm.assume(i1 %_5), !dbg !3208
  ret i64 %_3, !dbg !3209
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h48803f580c0446d4E"(ptr %self) unnamed_addr #1 !dbg !3210 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3215, metadata !DIExpression()), !dbg !3216
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h41e0600c4608126aE"(ptr %self, i64 8) #17, !dbg !3217
  ret i1 %0, !dbg !3218
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h851c7269c18c637eE"(ptr %self) unnamed_addr #1 !dbg !3219 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3221, metadata !DIExpression()), !dbg !3222
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h42b2fb6fd8f51ddeE"(ptr %self, i64 1) #17, !dbg !3223
  ret i1 %0, !dbg !3224
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h9423dce315c1306eE"(ptr %self) unnamed_addr #1 !dbg !3225 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3227, metadata !DIExpression()), !dbg !3228
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hee5d6e60e6207424E"(ptr %self, i64 8) #17, !dbg !3229
  ret i1 %0, !dbg !3230
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17haee83d31f1c0c2faE"(ptr %self) unnamed_addr #1 !dbg !3231 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3233, metadata !DIExpression()), !dbg !3234
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17he4f18ebe232b39b8E"(ptr %self, i64 1) #17, !dbg !3235
  ret i1 %0, !dbg !3236
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hd8077218c9a74275E"(ptr %self) unnamed_addr #1 !dbg !3237 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3239, metadata !DIExpression()), !dbg !3240
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h7fc401089dc5c3f2E"(ptr %self, i64 2) #17, !dbg !3241
  ret i1 %0, !dbg !3242
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hf4183850a830a90aE"(ptr %self) unnamed_addr #1 !dbg !3243 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3245, metadata !DIExpression()), !dbg !3246
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17habf6aa2c78824367E"(ptr %self, i64 8) #17, !dbg !3247
  ret i1 %0, !dbg !3248
}

; core::ptr::const_ptr::<impl *const T>::is_aligned
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hf574e85fa51892e7E"(ptr %self) unnamed_addr #1 !dbg !3249 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3251, metadata !DIExpression()), !dbg !3252
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hd8e3bce9ee186d37E"(ptr %self, i64 8) #17, !dbg !3253
  ret i1 %0, !dbg !3254
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17ha0d96da057f9ab38E"(ptr %ptr, i64 %align) unnamed_addr #1 !dbg !3255 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %align.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !3260, metadata !DIExpression()), !dbg !3262
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !3261, metadata !DIExpression()), !dbg !3263
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3264, metadata !DIExpression()), !dbg !3270
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3272, metadata !DIExpression()), !dbg !3278
  store ptr %ptr, ptr %0, align 8, !dbg !3280
  %1 = load i64, ptr %0, align 8, !dbg !3280, !noundef !45
  %_6.0 = sub i64 %align, 1, !dbg !3281
  %_6.1 = icmp ult i64 %align, 1, !dbg !3281
  %2 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !3281
  br i1 %2, label %panic, label %bb2, !dbg !3281

bb2:                                              ; preds = %start
  %_3 = and i64 %1, %_6.0, !dbg !3282
  %3 = icmp eq i64 %_3, 0, !dbg !3282
  ret i1 %3, !dbg !3283

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4105d0742918b74e2c640d9349dca984) #18, !dbg !3281
  unreachable, !dbg !3281
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h41e0600c4608126aE"(ptr %self, i64 %align) unnamed_addr #1 !dbg !3284 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3288, metadata !DIExpression()), !dbg !3290
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !3289, metadata !DIExpression()), !dbg !3291
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3178, metadata !DIExpression()), !dbg !3292
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !3184, metadata !DIExpression()), !dbg !3294
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !3296
  store i64 %1, ptr %0, align 8, !dbg !3296
  %_2.i.i = load i64, ptr %0, align 8, !dbg !3296, !noundef !45
  %2 = trunc i64 %_2.i.i to i32, !dbg !3296
  %3 = icmp eq i32 %2, 1, !dbg !3297
  %_3 = xor i1 %3, true, !dbg !3298
  br i1 %_3, label %bb2, label %bb4, !dbg !3298

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3299, metadata !DIExpression()), !dbg !3305
  store ptr %self, ptr %_9, align 8, !dbg !3307
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3307
  store i64 %align, ptr %4, align 8, !dbg !3307
  %5 = load ptr, ptr %_9, align 8, !dbg !3308, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3308
  %7 = load i64, ptr %6, align 8, !dbg !3308, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17ha0d96da057f9ab38E"(ptr %5, i64 %7) #17, !dbg !3308
  ret i1 %8, !dbg !3309

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_e5e5ee84beb26a7d629d956d12efff36, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !3310
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_360e68377b15a3e0dd13581a5ee2cd6d) #18, !dbg !3310
  unreachable, !dbg !3310
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h42b2fb6fd8f51ddeE"(ptr %self, i64 %align) unnamed_addr #1 !dbg !3311 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3315, metadata !DIExpression()), !dbg !3317
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !3316, metadata !DIExpression()), !dbg !3318
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3178, metadata !DIExpression()), !dbg !3319
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !3184, metadata !DIExpression()), !dbg !3321
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !3323
  store i64 %1, ptr %0, align 8, !dbg !3323
  %_2.i.i = load i64, ptr %0, align 8, !dbg !3323, !noundef !45
  %2 = trunc i64 %_2.i.i to i32, !dbg !3323
  %3 = icmp eq i32 %2, 1, !dbg !3324
  %_3 = xor i1 %3, true, !dbg !3325
  br i1 %_3, label %bb2, label %bb4, !dbg !3325

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3326, metadata !DIExpression()), !dbg !3332
  store ptr %self, ptr %_9, align 8, !dbg !3334
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3334
  store i64 %align, ptr %4, align 8, !dbg !3334
  %5 = load ptr, ptr %_9, align 8, !dbg !3335, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3335
  %7 = load i64, ptr %6, align 8, !dbg !3335, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17ha0d96da057f9ab38E"(ptr %5, i64 %7) #17, !dbg !3335
  ret i1 %8, !dbg !3336

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_e5e5ee84beb26a7d629d956d12efff36, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !3337
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_360e68377b15a3e0dd13581a5ee2cd6d) #18, !dbg !3337
  unreachable, !dbg !3337
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h7fc401089dc5c3f2E"(ptr %self, i64 %align) unnamed_addr #1 !dbg !3338 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3342, metadata !DIExpression()), !dbg !3344
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !3343, metadata !DIExpression()), !dbg !3345
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3178, metadata !DIExpression()), !dbg !3346
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !3184, metadata !DIExpression()), !dbg !3348
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !3350
  store i64 %1, ptr %0, align 8, !dbg !3350
  %_2.i.i = load i64, ptr %0, align 8, !dbg !3350, !noundef !45
  %2 = trunc i64 %_2.i.i to i32, !dbg !3350
  %3 = icmp eq i32 %2, 1, !dbg !3351
  %_3 = xor i1 %3, true, !dbg !3352
  br i1 %_3, label %bb2, label %bb4, !dbg !3352

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3353, metadata !DIExpression()), !dbg !3359
  store ptr %self, ptr %_9, align 8, !dbg !3361
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3361
  store i64 %align, ptr %4, align 8, !dbg !3361
  %5 = load ptr, ptr %_9, align 8, !dbg !3362, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3362
  %7 = load i64, ptr %6, align 8, !dbg !3362, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17ha0d96da057f9ab38E"(ptr %5, i64 %7) #17, !dbg !3362
  ret i1 %8, !dbg !3363

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_e5e5ee84beb26a7d629d956d12efff36, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !3364
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_360e68377b15a3e0dd13581a5ee2cd6d) #18, !dbg !3364
  unreachable, !dbg !3364
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17habf6aa2c78824367E"(ptr %self, i64 %align) unnamed_addr #1 !dbg !3365 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3369, metadata !DIExpression()), !dbg !3371
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !3370, metadata !DIExpression()), !dbg !3372
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3178, metadata !DIExpression()), !dbg !3373
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !3184, metadata !DIExpression()), !dbg !3375
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !3377
  store i64 %1, ptr %0, align 8, !dbg !3377
  %_2.i.i = load i64, ptr %0, align 8, !dbg !3377, !noundef !45
  %2 = trunc i64 %_2.i.i to i32, !dbg !3377
  %3 = icmp eq i32 %2, 1, !dbg !3378
  %_3 = xor i1 %3, true, !dbg !3379
  br i1 %_3, label %bb2, label %bb4, !dbg !3379

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3380, metadata !DIExpression()), !dbg !3386
  store ptr %self, ptr %_9, align 8, !dbg !3388
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3388
  store i64 %align, ptr %4, align 8, !dbg !3388
  %5 = load ptr, ptr %_9, align 8, !dbg !3389, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3389
  %7 = load i64, ptr %6, align 8, !dbg !3389, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17ha0d96da057f9ab38E"(ptr %5, i64 %7) #17, !dbg !3389
  ret i1 %8, !dbg !3390

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_e5e5ee84beb26a7d629d956d12efff36, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !3391
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_360e68377b15a3e0dd13581a5ee2cd6d) #18, !dbg !3391
  unreachable, !dbg !3391
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hd8e3bce9ee186d37E"(ptr %self, i64 %align) unnamed_addr #1 !dbg !3392 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3396, metadata !DIExpression()), !dbg !3398
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !3397, metadata !DIExpression()), !dbg !3399
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3178, metadata !DIExpression()), !dbg !3400
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !3184, metadata !DIExpression()), !dbg !3402
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !3404
  store i64 %1, ptr %0, align 8, !dbg !3404
  %_2.i.i = load i64, ptr %0, align 8, !dbg !3404, !noundef !45
  %2 = trunc i64 %_2.i.i to i32, !dbg !3404
  %3 = icmp eq i32 %2, 1, !dbg !3405
  %_3 = xor i1 %3, true, !dbg !3406
  br i1 %_3, label %bb2, label %bb4, !dbg !3406

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3407, metadata !DIExpression()), !dbg !3413
  store ptr %self, ptr %_9, align 8, !dbg !3415
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3415
  store i64 %align, ptr %4, align 8, !dbg !3415
  %5 = load ptr, ptr %_9, align 8, !dbg !3416, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3416
  %7 = load i64, ptr %6, align 8, !dbg !3416, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17ha0d96da057f9ab38E"(ptr %5, i64 %7) #17, !dbg !3416
  ret i1 %8, !dbg !3417

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_e5e5ee84beb26a7d629d956d12efff36, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !3418
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_360e68377b15a3e0dd13581a5ee2cd6d) #18, !dbg !3418
  unreachable, !dbg !3418
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17he4f18ebe232b39b8E"(ptr %self, i64 %align) unnamed_addr #1 !dbg !3419 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3423, metadata !DIExpression()), !dbg !3425
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !3424, metadata !DIExpression()), !dbg !3426
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3178, metadata !DIExpression()), !dbg !3427
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !3184, metadata !DIExpression()), !dbg !3429
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !3431
  store i64 %1, ptr %0, align 8, !dbg !3431
  %_2.i.i = load i64, ptr %0, align 8, !dbg !3431, !noundef !45
  %2 = trunc i64 %_2.i.i to i32, !dbg !3431
  %3 = icmp eq i32 %2, 1, !dbg !3432
  %_3 = xor i1 %3, true, !dbg !3433
  br i1 %_3, label %bb2, label %bb4, !dbg !3433

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3434, metadata !DIExpression()), !dbg !3439
  store ptr %self, ptr %_9, align 8, !dbg !3441
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3441
  store i64 %align, ptr %4, align 8, !dbg !3441
  %5 = load ptr, ptr %_9, align 8, !dbg !3442, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3442
  %7 = load i64, ptr %6, align 8, !dbg !3442, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17ha0d96da057f9ab38E"(ptr %5, i64 %7) #17, !dbg !3442
  ret i1 %8, !dbg !3443

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_e5e5ee84beb26a7d629d956d12efff36, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !3444
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_360e68377b15a3e0dd13581a5ee2cd6d) #18, !dbg !3444
  unreachable, !dbg !3444
}

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hee5d6e60e6207424E"(ptr %self, i64 %align) unnamed_addr #1 !dbg !3445 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3449, metadata !DIExpression()), !dbg !3451
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !3450, metadata !DIExpression()), !dbg !3452
  store i64 %align, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3178, metadata !DIExpression()), !dbg !3453
  store i64 %align, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !3184, metadata !DIExpression()), !dbg !3455
  %1 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !3457
  store i64 %1, ptr %0, align 8, !dbg !3457
  %_2.i.i = load i64, ptr %0, align 8, !dbg !3457, !noundef !45
  %2 = trunc i64 %_2.i.i to i32, !dbg !3457
  %3 = icmp eq i32 %2, 1, !dbg !3458
  %_3 = xor i1 %3, true, !dbg !3459
  br i1 %_3, label %bb2, label %bb4, !dbg !3459

bb4:                                              ; preds = %start
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3460, metadata !DIExpression()), !dbg !3466
  store ptr %self, ptr %_9, align 8, !dbg !3468
  %4 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3468
  store i64 %align, ptr %4, align 8, !dbg !3468
  %5 = load ptr, ptr %_9, align 8, !dbg !3469, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %_9, i32 0, i32 1, !dbg !3469
  %7 = load i64, ptr %6, align 8, !dbg !3469, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to::runtime_impl
  %8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17ha0d96da057f9ab38E"(ptr %5, i64 %7) #17, !dbg !3469
  ret i1 %8, !dbg !3470

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_e5e5ee84beb26a7d629d956d12efff36, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !3471
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_360e68377b15a3e0dd13581a5ee2cd6d) #18, !dbg !3471
  unreachable, !dbg !3471
}

; core::ptr::const_ptr::<impl *const T>::read_unaligned
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$14read_unaligned17h22b8291af998f3b7E"(ptr %self) unnamed_addr #1 !dbg !3472 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3474, metadata !DIExpression()), !dbg !3475
; call core::ptr::read_unaligned
  %0 = call i64 @_ZN4core3ptr14read_unaligned17hc3acd15732acb7b0E(ptr %self) #17, !dbg !3476
  ret i64 %0, !dbg !3477
}

; core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17hcc2e138dd4a4e914E"(ptr %self, ptr %dest, i64 %count) unnamed_addr #1 !dbg !3478 {
start:
  %count.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3480, metadata !DIExpression()), !dbg !3483
  store ptr %dest, ptr %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dest.dbg.spill, metadata !3481, metadata !DIExpression()), !dbg !3484
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !3482, metadata !DIExpression()), !dbg !3485
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr %self, ptr %dest, i64 %count) #17, !dbg !3486
  ret void, !dbg !3487
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hf5a989fa79446e34E"(ptr %ptr) unnamed_addr #1 !dbg !3488 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !3493, metadata !DIExpression()), !dbg !3494
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3495, metadata !DIExpression()), !dbg !3500
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !3502, metadata !DIExpression()), !dbg !3507
  store ptr %ptr, ptr %0, align 8, !dbg !3509
  %1 = load i64, ptr %0, align 8, !dbg !3509, !noundef !45
  %2 = icmp eq i64 %1, 0, !dbg !3510
  ret i1 %2, !dbg !3511
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h1b460fa366e2e140E"(ptr %self) unnamed_addr #1 !dbg !3512 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3514, metadata !DIExpression()), !dbg !3515
  store ptr %self, ptr %_2, align 8, !dbg !3516
  %0 = load ptr, ptr %_2, align 8, !dbg !3517, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hf5a989fa79446e34E"(ptr %0) #17, !dbg !3517
  ret i1 %1, !dbg !3518
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h2b08a9d8a36f86a9E"(ptr %self) unnamed_addr #1 !dbg !3519 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3521, metadata !DIExpression()), !dbg !3522
  store ptr %self, ptr %_2, align 8, !dbg !3523
  %0 = load ptr, ptr %_2, align 8, !dbg !3524, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hf5a989fa79446e34E"(ptr %0) #17, !dbg !3524
  ret i1 %1, !dbg !3525
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hbce60e723f328289E"(ptr %self) unnamed_addr #1 !dbg !3526 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3528, metadata !DIExpression()), !dbg !3529
  store ptr %self, ptr %_2, align 8, !dbg !3530
  %0 = load ptr, ptr %_2, align 8, !dbg !3531, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hf5a989fa79446e34E"(ptr %0) #17, !dbg !3531
  ret i1 %1, !dbg !3532
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hc241c24205100b20E"(ptr %self) unnamed_addr #1 !dbg !3533 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3535, metadata !DIExpression()), !dbg !3536
  store ptr %self, ptr %_2, align 8, !dbg !3537
  %0 = load ptr, ptr %_2, align 8, !dbg !3538, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hf5a989fa79446e34E"(ptr %0) #17, !dbg !3538
  ret i1 %1, !dbg !3539
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hcc8584ea6a3199b6E"(ptr %self) unnamed_addr #1 !dbg !3540 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3542, metadata !DIExpression()), !dbg !3543
  store ptr %self, ptr %_2, align 8, !dbg !3544
  %0 = load ptr, ptr %_2, align 8, !dbg !3545, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hf5a989fa79446e34E"(ptr %0) #17, !dbg !3545
  ret i1 %1, !dbg !3546
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdaa273b9fa89c3ccE"(ptr %self) unnamed_addr #1 !dbg !3547 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3549, metadata !DIExpression()), !dbg !3550
  store ptr %self, ptr %_2, align 8, !dbg !3551
  %0 = load ptr, ptr %_2, align 8, !dbg !3552, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hf5a989fa79446e34E"(ptr %0) #17, !dbg !3552
  ret i1 %1, !dbg !3553
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17he3b0d8532db41935E"(ptr %self) unnamed_addr #1 !dbg !3554 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3556, metadata !DIExpression()), !dbg !3557
  store ptr %self, ptr %_2, align 8, !dbg !3558
  %0 = load ptr, ptr %_2, align 8, !dbg !3559, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime_impl
  %1 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hf5a989fa79446e34E"(ptr %0) #17, !dbg !3559
  ret i1 %1, !dbg !3560
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @_ZN4core3str11validations15utf8_first_byte17hd9e8b89ae70426deE(i8 %byte, i32 %width) unnamed_addr #1 !dbg !3561 {
start:
  %width.dbg.spill = alloca i32, align 4
  %byte.dbg.spill = alloca i8, align 1
  store i8 %byte, ptr %byte.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %byte.dbg.spill, metadata !3567, metadata !DIExpression()), !dbg !3569
  store i32 %width, ptr %width.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %width.dbg.spill, metadata !3568, metadata !DIExpression()), !dbg !3570
  %0 = and i32 %width, -8, !dbg !3571
  %_5.1 = icmp ne i32 %0, 0, !dbg !3571
  %1 = trunc i32 %width to i8, !dbg !3571
  %2 = and i8 %1, 7, !dbg !3571
  %_5.0 = lshr i8 127, %2, !dbg !3571
  %3 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !3571
  br i1 %3, label %panic, label %bb1, !dbg !3571

bb1:                                              ; preds = %start
  %_3 = and i8 %byte, %_5.0, !dbg !3572
  %4 = zext i8 %_3 to i32, !dbg !3572
  ret i32 %4, !dbg !3573

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.4, i64 36, ptr align 8 @alloc_063f7a84c62c81319e71ae37ddc8fa30) #18, !dbg !3571
  unreachable, !dbg !3571
}

; core::str::validations::utf8_is_cont_byte
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17h5f01b94942c567ceE(i8 %byte) unnamed_addr #1 !dbg !3574 {
start:
  %byte.dbg.spill = alloca i8, align 1
  store i8 %byte, ptr %byte.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %byte.dbg.spill, metadata !3578, metadata !DIExpression()), !dbg !3579
  %0 = icmp slt i8 %byte, -64, !dbg !3580
  ret i1 %0, !dbg !3581
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17he7bd8b4b9a7f1c90E(i32 %ch, i8 %byte) unnamed_addr #1 !dbg !3582 {
start:
  %byte.dbg.spill = alloca i8, align 1
  %ch.dbg.spill = alloca i32, align 4
  store i32 %ch, ptr %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %ch.dbg.spill, metadata !3586, metadata !DIExpression()), !dbg !3588
  store i8 %byte, ptr %byte.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %byte.dbg.spill, metadata !3587, metadata !DIExpression()), !dbg !3589
  %_4.0 = shl i32 %ch, 6, !dbg !3590
  %_6 = and i8 %byte, 63, !dbg !3591
  %_5 = zext i8 %_6 to i32, !dbg !3591
  %0 = or i32 %_4.0, %_5, !dbg !3590
  ret i32 %0, !dbg !3592
}

; core::str::validations::next_code_point_reverse
; Function Attrs: inlinehint noredzone nounwind
define { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17hf7af2c7429af4f18E(ptr align 8 %bytes) unnamed_addr #1 !dbg !3593 {
start:
  %x.dbg.spill = alloca i8, align 1
  %y.dbg.spill = alloca i8, align 1
  %z.dbg.spill = alloca i8, align 1
  %w.dbg.spill = alloca i8, align 1
  %next_byte.dbg.spill = alloca i8, align 1
  %val.dbg.spill = alloca ptr, align 8
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %bytes.dbg.spill = alloca ptr, align 8
  %ch = alloca i32, align 4
  %_2 = alloca ptr, align 8
  %0 = alloca { i32, i32 }, align 4
  store ptr %bytes, ptr %bytes.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes.dbg.spill, metadata !3610, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !3613, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.declare(metadata ptr %ch, metadata !3633, metadata !DIExpression()), !dbg !3645
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_3 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h97dc35910efc5416E"(ptr align 8 %bytes) #17, !dbg !3646
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call align 1 ptr @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha942b2caabbc5beaE"(ptr align 1 %_3) #17, !dbg !3646
  store ptr %1, ptr %_2, align 8, !dbg !3646
  %2 = load ptr, ptr %_2, align 8, !dbg !3646, !noundef !45
  %3 = ptrtoint ptr %2 to i64, !dbg !3646
  %4 = icmp eq i64 %3, 0, !dbg !3646
  %_4 = select i1 %4, i64 1, i64 0, !dbg !3646
  %5 = icmp eq i64 %_4, 0, !dbg !3646
  br i1 %5, label %bb3, label %bb5, !dbg !3646

bb3:                                              ; preds = %start
  %val = load ptr, ptr %_2, align 8, !dbg !3646, !nonnull !45, !align !643, !noundef !45
  store ptr %val, ptr %val.dbg.spill, align 8, !dbg !3646
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill, metadata !3626, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill, metadata !3630, metadata !DIExpression()), !dbg !3648
  %_10 = load i8, ptr %val, align 1, !dbg !3649, !noundef !45
  %_9 = icmp ult i8 %_10, -128, !dbg !3649
  br i1 %_9, label %bb6, label %bb7, !dbg !3649

bb5:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %6 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h907923f61b8f032aE"() #17, !dbg !3650
  store { i32, i32 } %6, ptr %0, align 4, !dbg !3650
  br label %bb26, !dbg !3650

bb4:                                              ; No predecessors!
  unreachable, !dbg !3646

bb26:                                             ; preds = %bb24, %bb6, %bb5
  %7 = getelementptr inbounds { i32, i32 }, ptr %0, i32 0, i32 0, !dbg !3651
  %8 = load i32, ptr %7, align 4, !dbg !3651, !range !3652, !noundef !45
  %9 = getelementptr inbounds { i32, i32 }, ptr %0, i32 0, i32 1, !dbg !3651
  %10 = load i32, ptr %9, align 4, !dbg !3651
  %11 = insertvalue { i32, i32 } undef, i32 %8, 0, !dbg !3651
  %12 = insertvalue { i32, i32 } %11, i32 %10, 1, !dbg !3651
  ret { i32, i32 } %12, !dbg !3651

bb7:                                              ; preds = %bb3
  %w = load i8, ptr %val, align 1, !dbg !3653, !noundef !45
  store i8 %w, ptr %w.dbg.spill, align 1, !dbg !3653
  call void @llvm.dbg.declare(metadata ptr %w.dbg.spill, metadata !3611, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata ptr %w.dbg.spill, metadata !3631, metadata !DIExpression()), !dbg !3655
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_16 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h97dc35910efc5416E"(ptr align 8 %bytes) #17, !dbg !3656
; call core::option::Option<T>::unwrap_unchecked
  %_15 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hd8888746ef0172ecE"(ptr align 1 %_16, ptr align 8 @alloc_7273c41473f00f86e42c393244ad94f5) #17, !dbg !3656
  %z = load i8, ptr %_15, align 1, !dbg !3657, !noundef !45
  store i8 %z, ptr %z.dbg.spill, align 1, !dbg !3657
  call void @llvm.dbg.declare(metadata ptr %z.dbg.spill, metadata !3635, metadata !DIExpression()), !dbg !3658
; call core::str::validations::utf8_first_byte
  %_17 = call i32 @_ZN4core3str11validations15utf8_first_byte17hd9e8b89ae70426deE(i8 %z, i32 2) #17, !dbg !3659
  store i32 %_17, ptr %ch, align 4, !dbg !3660
; call core::str::validations::utf8_is_cont_byte
  %_18 = call zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17h5f01b94942c567ceE(i8 %z) #17, !dbg !3661
  br i1 %_18, label %bb12, label %bb24, !dbg !3661

bb6:                                              ; preds = %bb3
  %next_byte = load i8, ptr %val, align 1, !dbg !3662, !noundef !45
  store i8 %next_byte, ptr %next_byte.dbg.spill, align 1, !dbg !3662
  call void @llvm.dbg.declare(metadata ptr %next_byte.dbg.spill, metadata !3628, metadata !DIExpression()), !dbg !3648
  %_11 = zext i8 %next_byte to i32, !dbg !3663
  %13 = getelementptr inbounds { i32, i32 }, ptr %0, i32 0, i32 1, !dbg !3664
  store i32 %_11, ptr %13, align 4, !dbg !3664
  store i32 1, ptr %0, align 4, !dbg !3664
  br label %bb26, !dbg !3665

bb24:                                             ; preds = %bb22, %bb7
  %_33 = load i32, ptr %ch, align 4, !dbg !3668, !noundef !45
; call core::str::validations::utf8_acc_cont_byte
  %_32 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17he7bd8b4b9a7f1c90E(i32 %_33, i8 %w) #17, !dbg !3669
  store i32 %_32, ptr %ch, align 4, !dbg !3670
  %_34 = load i32, ptr %ch, align 4, !dbg !3671, !noundef !45
  %14 = getelementptr inbounds { i32, i32 }, ptr %0, i32 0, i32 1, !dbg !3672
  store i32 %_34, ptr %14, align 4, !dbg !3672
  store i32 1, ptr %0, align 4, !dbg !3672
  br label %bb26, !dbg !3651

bb12:                                             ; preds = %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_21 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h97dc35910efc5416E"(ptr align 8 %bytes) #17, !dbg !3673
; call core::option::Option<T>::unwrap_unchecked
  %_20 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hd8888746ef0172ecE"(ptr align 1 %_21, ptr align 8 @alloc_e4e36abea95a03db245d0863e70155c0) #17, !dbg !3673
  %y = load i8, ptr %_20, align 1, !dbg !3674, !noundef !45
  store i8 %y, ptr %y.dbg.spill, align 1, !dbg !3674
  call void @llvm.dbg.declare(metadata ptr %y.dbg.spill, metadata !3637, metadata !DIExpression()), !dbg !3675
; call core::str::validations::utf8_first_byte
  %_22 = call i32 @_ZN4core3str11validations15utf8_first_byte17hd9e8b89ae70426deE(i8 %y, i32 3) #17, !dbg !3676
  store i32 %_22, ptr %ch, align 4, !dbg !3677
; call core::str::validations::utf8_is_cont_byte
  %_23 = call zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17h5f01b94942c567ceE(i8 %y) #17, !dbg !3678
  br i1 %_23, label %bb17, label %bb22, !dbg !3678

bb22:                                             ; preds = %bb17, %bb12
  %_31 = load i32, ptr %ch, align 4, !dbg !3679, !noundef !45
; call core::str::validations::utf8_acc_cont_byte
  %_30 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17he7bd8b4b9a7f1c90E(i32 %_31, i8 %z) #17, !dbg !3680
  store i32 %_30, ptr %ch, align 4, !dbg !3681
  br label %bb24, !dbg !3682

bb17:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_26 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h97dc35910efc5416E"(ptr align 8 %bytes) #17, !dbg !3683
; call core::option::Option<T>::unwrap_unchecked
  %_25 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hd8888746ef0172ecE"(ptr align 1 %_26, ptr align 8 @alloc_1545cd1ebb0872a6ec5ebdd8a18d6546) #17, !dbg !3683
  %x = load i8, ptr %_25, align 1, !dbg !3684, !noundef !45
  store i8 %x, ptr %x.dbg.spill, align 1, !dbg !3684
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !3639, metadata !DIExpression()), !dbg !3685
; call core::str::validations::utf8_first_byte
  %_27 = call i32 @_ZN4core3str11validations15utf8_first_byte17hd9e8b89ae70426deE(i8 %x, i32 4) #17, !dbg !3686
  store i32 %_27, ptr %ch, align 4, !dbg !3687
  %_29 = load i32, ptr %ch, align 4, !dbg !3688, !noundef !45
; call core::str::validations::utf8_acc_cont_byte
  %_28 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17he7bd8b4b9a7f1c90E(i32 %_29, i8 %y) #17, !dbg !3689
  store i32 %_28, ptr %ch, align 4, !dbg !3690
  br label %bb22, !dbg !3691
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hf9419be13ac38af9E"(ptr sret(%"core::str::iter::CharIndices<'_>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !3692 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3702, metadata !DIExpression()), !dbg !3703
; call core::str::<impl str>::chars
  %3 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hda4000287f8bce11E"(ptr align 1 %self.0, i64 %self.1) #17, !dbg !3704
  %_2.0 = extractvalue { ptr, ptr } %3, 0, !dbg !3704
  %_2.1 = extractvalue { ptr, ptr } %3, 1, !dbg !3704
  %4 = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %0, i32 0, i32 1, !dbg !3705
  store i64 0, ptr %4, align 8, !dbg !3705
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !3705
  store ptr %_2.0, ptr %5, align 8, !dbg !3705
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !3705
  store ptr %_2.1, ptr %6, align 8, !dbg !3705
  ret void, !dbg !3706
}

; core::str::<impl str>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17hfe802aaf3da9e611E"(ptr align 1 %self.0, i64 %self.1, i64 %i) unnamed_addr #1 !dbg !3707 {
start:
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3717, metadata !DIExpression()), !dbg !3721
  store i64 %i, ptr %i.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3718, metadata !DIExpression()), !dbg !3722
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
  %2 = call { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h4d88ca9382837ba6E"(i64 %i, ptr %self.0, i64 %self.1) #17, !dbg !3723
  %_3.0 = extractvalue { ptr, i64 } %2, 0, !dbg !3723
  %_3.1 = extractvalue { ptr, i64 } %2, 1, !dbg !3723
  %3 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !3724
  %4 = insertvalue { ptr, i64 } %3, i64 %_3.1, 1, !dbg !3724
  ret { ptr, i64 } %4, !dbg !3724
}

; core::str::<impl str>::len
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hd16e42a8ff3d48d3E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !3725 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3729, metadata !DIExpression()), !dbg !3730
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !3736
  store ptr %self.0, ptr %0, align 8, !dbg !3738
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3738
  store i64 %self.1, ptr %4, align 8, !dbg !3738
  %5 = load ptr, ptr %0, align 8, !dbg !3738, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3738
  %7 = load i64, ptr %6, align 8, !dbg !3738, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !3739
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !3739
  %_3.0 = extractvalue { ptr, i64 } %9, 0, !dbg !3740
  %_3.1 = extractvalue { ptr, i64 } %9, 1, !dbg !3740
  ret i64 %_3.1, !dbg !3741
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hda4000287f8bce11E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !3742 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = alloca { ptr, ptr }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3746, metadata !DIExpression()), !dbg !3747
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !3748
  store ptr %self.0, ptr %0, align 8, !dbg !3750
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3750
  store i64 %self.1, ptr %5, align 8, !dbg !3750
  %6 = load ptr, ptr %0, align 8, !dbg !3750, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3750
  %8 = load i64, ptr %7, align 8, !dbg !3750, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !3751
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !3751
  %_4.0 = extractvalue { ptr, i64 } %10, 0, !dbg !3752
  %_4.1 = extractvalue { ptr, i64 } %10, 1, !dbg !3752
; call core::slice::<impl [T]>::iter
  %11 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbce52b8616e0ed10E"(ptr align 1 %_4.0, i64 %_4.1) #17, !dbg !3752
  %_2.0 = extractvalue { ptr, ptr } %11, 0, !dbg !3752
  %_2.1 = extractvalue { ptr, ptr } %11, 1, !dbg !3752
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0, !dbg !3753
  store ptr %_2.0, ptr %12, align 8, !dbg !3753
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !3753
  store ptr %_2.1, ptr %13, align 8, !dbg !3753
  %14 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0, !dbg !3754
  %15 = load ptr, ptr %14, align 8, !dbg !3754, !noundef !45
  %16 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !3754
  %17 = load ptr, ptr %16, align 8, !dbg !3754, !nonnull !45, !noundef !45
  %18 = insertvalue { ptr, ptr } undef, ptr %15, 0, !dbg !3754
  %19 = insertvalue { ptr, ptr } %18, ptr %17, 1, !dbg !3754
  ret { ptr, ptr } %19, !dbg !3754
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h098534c0490344a9E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !3755 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3759, metadata !DIExpression()), !dbg !3760
; call core::str::<impl str>::len
  %_2 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hd16e42a8ff3d48d3E"(ptr align 1 %self.0, i64 %self.1) #17, !dbg !3761
  %2 = icmp eq i64 %_2, 0, !dbg !3761
  ret i1 %2, !dbg !3762
}

; core::str::iter::Chars::as_str
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3str4iter5Chars6as_str17hf978b6d0d8aeb1eeE(ptr align 8 %self) unnamed_addr #1 !dbg !3763 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3769, metadata !DIExpression()), !dbg !3770
; call core::slice::iter::Iter<T>::as_slice
  %0 = call { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hbe60bf6df0d376c6E"(ptr align 8 %self) #17, !dbg !3771
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !3771
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !3771
; call core::str::converts::from_utf8_unchecked
  %1 = call { ptr, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h75af16509ecede6dE(ptr align 1 %_3.0, i64 %_3.1) #17, !dbg !3772
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !3772
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !3772
  %4 = insertvalue { ptr, i64 } undef, ptr %2, 0, !dbg !3773
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1, !dbg !3773
  ret { ptr, i64 } %5, !dbg !3773
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h4a16bcbf4a5a581bE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !3774 {
start:
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca { i64, i64 }, align 8
  %_4.i = alloca i8, align 1
  %0 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %slice.dbg.spill1 = alloca { ptr, i64 }, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_7 = alloca { { i64, i64 }, { ptr, i64 } }, align 8
  %this = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3785, metadata !DIExpression()), !dbg !3795
  %3 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !3786, metadata !DIExpression()), !dbg !3796
  call void @llvm.dbg.declare(metadata ptr %this, metadata !3791, metadata !DIExpression()), !dbg !3797
  %5 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill1, i32 0, i32 0, !dbg !3798
  store ptr %slice.0, ptr %5, align 8, !dbg !3798
  %6 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill1, i32 0, i32 1, !dbg !3798
  store i64 %slice.1, ptr %6, align 8, !dbg !3798
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill1, metadata !3787, metadata !DIExpression()), !dbg !3799
  store i64 %self.0, ptr %this, align 8, !dbg !3800
  %7 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !3800
  store i64 %self.1, ptr %7, align 8, !dbg !3800
  %8 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 0, !dbg !3801
  %9 = load i64, ptr %8, align 8, !dbg !3801, !noundef !45
  %10 = getelementptr inbounds { i64, i64 }, ptr %this, i32 0, i32 1, !dbg !3801
  %11 = load i64, ptr %10, align 8, !dbg !3801, !noundef !45
  %12 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3801
  store i64 %9, ptr %12, align 8, !dbg !3801
  %13 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3801
  store i64 %11, ptr %13, align 8, !dbg !3801
  %14 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !3801
  %15 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 0, !dbg !3801
  store ptr %slice.0, ptr %15, align 8, !dbg !3801
  %16 = getelementptr inbounds { ptr, i64 }, ptr %14, i32 0, i32 1, !dbg !3801
  store i64 %slice.1, ptr %16, align 8, !dbg !3801
  %17 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !3801
  %18 = load i64, ptr %17, align 8, !dbg !3801, !noundef !45
  %19 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !3801
  %20 = load i64, ptr %19, align 8, !dbg !3801, !noundef !45
  %21 = getelementptr inbounds { { i64, i64 }, { ptr, i64 } }, ptr %_7, i32 0, i32 1, !dbg !3801
  %22 = getelementptr inbounds { ptr, i64 }, ptr %21, i32 0, i32 0, !dbg !3801
  %23 = load ptr, ptr %22, align 8, !dbg !3801, !noundef !45
  %24 = getelementptr inbounds { ptr, i64 }, ptr %21, i32 0, i32 1, !dbg !3801
  %25 = load i64, ptr %24, align 8, !dbg !3801, !noundef !45
  store i64 %18, ptr %this.dbg.spill.i, align 8
  %26 = getelementptr inbounds { i64, i64 }, ptr %this.dbg.spill.i, i32 0, i32 1
  store i64 %20, ptr %26, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !3802, metadata !DIExpression()), !dbg !3809
  store ptr %23, ptr %slice.dbg.spill.i, align 8
  %27 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %25, ptr %27, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !3808, metadata !DIExpression()), !dbg !3809
  %_5.i = icmp uge i64 %20, %18, !dbg !3811
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !3811

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !3811
  br label %bb3.i, !dbg !3811

bb2.i:                                            ; preds = %start
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10.i = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h843400ccc7fc9963E"(ptr %23, i64 %25) #17, !dbg !3813
  %_8.i = icmp ule i64 %20, %_10.i, !dbg !3814
  %28 = zext i1 %_8.i to i8, !dbg !3811
  store i8 %28, ptr %_4.i, align 1, !dbg !3811
  br label %bb3.i, !dbg !3811

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %29 = load i8, ptr %_4.i, align 1, !dbg !3815, !range !673, !noundef !45
  %30 = trunc i8 %29 to i1, !dbg !3815
  %_3.i = xor i1 %30, true, !dbg !3815
  br i1 %_3.i, label %bb5.i, label %"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked7runtime17h8fae230b2011c8c2E.exit", !dbg !3815

bb5.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_c969049a883a8410a47f5b922739141d, i64 102) #18, !dbg !3816
  unreachable, !dbg !3816

"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked7runtime17h8fae230b2011c8c2E.exit": ; preds = %bb3.i
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_8 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb18169b0fd854ff3E"(ptr %slice.0, i64 %slice.1) #17, !dbg !3817
  store ptr %_8, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3818, metadata !DIExpression()), !dbg !3824
  store i64 %self.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !3823, metadata !DIExpression()), !dbg !3826
  store ptr %_8, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !3827, metadata !DIExpression()), !dbg !3834
  store i64 %self.0, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !3833, metadata !DIExpression()), !dbg !3836
  %31 = getelementptr inbounds i8, ptr %_8, i64 %self.0, !dbg !3837
  store ptr %31, ptr %0, align 8, !dbg !3837
  %32 = load ptr, ptr %0, align 8, !dbg !3837, !noundef !45
  store ptr %32, ptr %ptr.dbg.spill, align 8, !dbg !3817
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !3789, metadata !DIExpression()), !dbg !3838
  %_13.0 = sub i64 %self.1, %self.0, !dbg !3839
  %_13.1 = icmp ult i64 %self.1, %self.0, !dbg !3839
  %33 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !3839
  br i1 %33, label %panic, label %bb4, !dbg !3839

bb4:                                              ; preds = %"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked7runtime17h8fae230b2011c8c2E.exit"
  store i64 %_13.0, ptr %len.dbg.spill, align 8, !dbg !3839
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3793, metadata !DIExpression()), !dbg !3840
; call core::ptr::slice_from_raw_parts
  %34 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h573a8e5041044b81E(ptr %32, i64 %_13.0) #17, !dbg !3841
  %_14.0 = extractvalue { ptr, i64 } %34, 0, !dbg !3841
  %_14.1 = extractvalue { ptr, i64 } %34, 1, !dbg !3841
  %35 = insertvalue { ptr, i64 } undef, ptr %_14.0, 0, !dbg !3842
  %36 = insertvalue { ptr, i64 } %35, i64 %_14.1, 1, !dbg !3842
  ret { ptr, i64 } %36, !dbg !3842

panic:                                            ; preds = %"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked7runtime17h8fae230b2011c8c2E.exit"
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_38c8cd6434e73d50b2182c955ab961e0) #18, !dbg !3839
  unreachable, !dbg !3839
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h4d88ca9382837ba6E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !3843 {
start:
  %len.dbg.spill = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i64 }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3848, metadata !DIExpression()), !dbg !3852
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !3849, metadata !DIExpression()), !dbg !3853
; call core::ptr::const_ptr::<impl *const [T]>::len
  %len = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h843400ccc7fc9963E"(ptr %slice.0, i64 %slice.1) #17, !dbg !3854
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !3854
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !3850, metadata !DIExpression()), !dbg !3855
  store i64 %self, ptr %_5, align 8, !dbg !3856
  %2 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !3856
  store i64 %len, ptr %2, align 8, !dbg !3856
  %3 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !3856
  %4 = load i64, ptr %3, align 8, !dbg !3856, !noundef !45
  %5 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !3856
  %6 = load i64, ptr %5, align 8, !dbg !3856, !noundef !45
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %7 = call { ptr, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h4a16bcbf4a5a581bE"(i64 %4, i64 %6, ptr %slice.0, i64 %slice.1) #17, !dbg !3856
  %8 = extractvalue { ptr, i64 } %7, 0, !dbg !3856
  %9 = extractvalue { ptr, i64 } %7, 1, !dbg !3856
  %10 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !3857
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !3857
  ret { ptr, i64 } %11, !dbg !3857
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h8c8952821cf88af3E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %0) unnamed_addr #1 !dbg !3858 {
start:
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3864, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !3865, metadata !DIExpression()), !dbg !3869
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFull>::index
  %3 = call { ptr, i64 } @"_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17h5cda99d6f95ed5c6E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %0) #17, !dbg !3870
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !3870
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !3870
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !3871
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !3871
  ret { ptr, i64 } %7, !dbg !3871
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFull>::index
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17h5cda99d6f95ed5c6E"(ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #1 !dbg !3872 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !3877, metadata !DIExpression()), !dbg !3879
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !3878, metadata !DIExpression()), !dbg !3880
  %3 = insertvalue { ptr, i64 } undef, ptr %slice.0, 0, !dbg !3881
  %4 = insertvalue { ptr, i64 } %3, i64 %slice.1, 1, !dbg !3881
  ret { ptr, i64 } %4, !dbg !3881
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h75af16509ecede6dE(ptr align 1 %v.0, i64 %v.1) unnamed_addr #1 !dbg !3882 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3888, metadata !DIExpression()), !dbg !3889
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !3890
  store ptr %v.0, ptr %3, align 8, !dbg !3890
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3890
  store i64 %v.1, ptr %4, align 8, !dbg !3890
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !3890
  %6 = load ptr, ptr %5, align 8, !dbg !3890, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !3890
  %8 = load i64, ptr %7, align 8, !dbg !3890, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !3891
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !3891
  ret { ptr, i64 } %10, !dbg !3891
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17had244af207d0d050E(ptr align 1 %v.0, i64 %v.1) unnamed_addr #1 !dbg !3892 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !3904, metadata !DIExpression()), !dbg !3905
  %2 = insertvalue { ptr, i64 } undef, ptr %v.0, 0, !dbg !3906
  %3 = insertvalue { ptr, i64 } %2, i64 %v.1, 1, !dbg !3906
  ret { ptr, i64 } %3, !dbg !3906
}

; core::char::decode::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core4char6decode12decode_utf1617h6d1a34466aa66eb0E(ptr sret(%"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>") %0, ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !3907 {
start:
  %iter.dbg.spill = alloca { ptr, ptr }, align 8
  %_3 = alloca { i16, i16 }, align 2
  %1 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 1
  store ptr %iter.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !3920, metadata !DIExpression()), !dbg !3921
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %3 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h75ac064585ddabaeE"(ptr %iter.0, ptr %iter.1) #17, !dbg !3922
  %_2.0 = extractvalue { ptr, ptr } %3, 0, !dbg !3922
  %_2.1 = extractvalue { ptr, ptr } %3, 1, !dbg !3922
  store i16 0, ptr %_3, align 2, !dbg !3923
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !3924
  store ptr %_2.0, ptr %4, align 8, !dbg !3924
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !3924
  store ptr %_2.1, ptr %5, align 8, !dbg !3924
  %6 = getelementptr inbounds { i16, i16 }, ptr %_3, i32 0, i32 0, !dbg !3924
  %7 = load i16, ptr %6, align 2, !dbg !3924, !range !3925, !noundef !45
  %8 = getelementptr inbounds { i16, i16 }, ptr %_3, i32 0, i32 1, !dbg !3924
  %9 = load i16, ptr %8, align 2, !dbg !3924
  %10 = getelementptr inbounds %"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>", ptr %0, i32 0, i32 1, !dbg !3924
  %11 = getelementptr inbounds { i16, i16 }, ptr %10, i32 0, i32 0, !dbg !3924
  store i16 %7, ptr %11, align 8, !dbg !3924
  %12 = getelementptr inbounds { i16, i16 }, ptr %10, i32 0, i32 1, !dbg !3924
  store i16 %9, ptr %12, align 2, !dbg !3924
  ret void, !dbg !3926
}

; core::char::convert::char_try_from_u32
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @_ZN4core4char7convert17char_try_from_u3217hf89f8c579f446a7cE(i32 %i) unnamed_addr #1 !dbg !3927 {
start:
  %rhs.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill.i = alloca i32, align 4
  %0 = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %1 = alloca i32, align 4
  store i32 %i, ptr %i.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3951, metadata !DIExpression()), !dbg !3952
  %_4 = xor i32 %i, 55296, !dbg !3953
  store i32 %_4, ptr %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3954, metadata !DIExpression()), !dbg !3961
  store i32 2048, ptr %rhs.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !3960, metadata !DIExpression()), !dbg !3963
  %2 = sub i32 %_4, 2048, !dbg !3964
  %_2 = icmp uge i32 %2, 1112064, !dbg !3953
  br i1 %_2, label %bb2, label %bb3, !dbg !3953

bb3:                                              ; preds = %start
  store i32 %i, ptr %0, align 4, !dbg !3965
  %_6 = load i32, ptr %0, align 4, !dbg !3965, !range !523, !noundef !45
  store i32 %_6, ptr %1, align 4, !dbg !3966
  br label %bb5, !dbg !3967

bb2:                                              ; preds = %start
  store i32 1114112, ptr %1, align 4, !dbg !3968
  br label %bb5, !dbg !3967

bb5:                                              ; preds = %bb3, %bb2
  %3 = load i32, ptr %1, align 4, !dbg !3969, !range !527, !noundef !45
  ret i32 %3, !dbg !3969
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17h8afc855a7be997e6E(i32 %i) unnamed_addr #1 !dbg !3970 {
start:
  %i.dbg.spill = alloca i32, align 4
  store i32 %i, ptr %i.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3974, metadata !DIExpression()), !dbg !3975
; call core::char::methods::<impl char>::from_u32
  %_2 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8from_u3217hfe4d08d27b4914deE"(i32 %i) #17, !dbg !3976, !range !527
; call core::option::Option<T>::unwrap
  %0 = call i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h87fec283b997148bE"(i32 %_2, ptr align 8 @alloc_f47b99061b7d74d955e264e9e163dc80) #17, !dbg !3976, !range !523
  ret i32 %0, !dbg !3977
}

; core::char::convert::from_u32
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @_ZN4core4char7convert8from_u3217he5b1745bbf813e1eE(i32 %i) unnamed_addr #1 !dbg !3978 {
start:
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %_2 = alloca i32, align 4
  %0 = alloca i32, align 4
  store i32 %i, ptr %i.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !3982, metadata !DIExpression()), !dbg !3985
; call core::char::convert::char_try_from_u32
  %1 = call i32 @_ZN4core4char7convert17char_try_from_u3217hf89f8c579f446a7cE(i32 %i) #17, !dbg !3986, !range !527
  store i32 %1, ptr %_2, align 4, !dbg !3986
  %2 = load i32, ptr %_2, align 4, !dbg !3986, !range !527, !noundef !45
  %3 = icmp eq i32 %2, 1114112, !dbg !3986
  %_3 = select i1 %3, i64 1, i64 0, !dbg !3986
  %4 = icmp eq i64 %_3, 0, !dbg !3987
  br i1 %4, label %bb4, label %bb2, !dbg !3987

bb4:                                              ; preds = %start
  %c = load i32, ptr %_2, align 4, !dbg !3988, !range !523, !noundef !45
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !3988
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !3983, metadata !DIExpression()), !dbg !3989
  store i32 %c, ptr %0, align 4, !dbg !3990
  br label %bb5, !dbg !3991

bb2:                                              ; preds = %start
  store i32 1114112, ptr %0, align 4, !dbg !3992
  br label %bb5, !dbg !3992

bb3:                                              ; No predecessors!
  unreachable, !dbg !3986

bb5:                                              ; preds = %bb4, %bb2
  %5 = load i32, ptr %0, align 4, !dbg !3993, !range !527, !noundef !45
  ret i32 %5, !dbg !3993
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17h06669393e841a7e8E(i32 %0, ptr align 1 %dst.0, i64 %dst.1) unnamed_addr #1 !dbg !3994 {
start:
  %a.dbg.spill12 = alloca ptr, align 8
  %b.dbg.spill10 = alloca ptr, align 8
  %a.dbg.spill8 = alloca ptr, align 8
  %c.dbg.spill6 = alloca ptr, align 8
  %b.dbg.spill4 = alloca ptr, align 8
  %a.dbg.spill2 = alloca ptr, align 8
  %d.dbg.spill = alloca ptr, align 8
  %c.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca ptr, align 8
  %a.dbg.spill = alloca ptr, align 8
  %dst.dbg.spill = alloca { ptr, i64 }, align 8
  %_76 = alloca i64, align 8
  %_73 = alloca i64, align 8
  %_66 = alloca [3 x { ptr, ptr }], align 8
  %_62 = alloca %"core::fmt::Arguments<'_>", align 8
  %_4 = alloca { i64, { ptr, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, ptr %code, align 4
  call void @llvm.dbg.declare(metadata ptr %code, metadata !4000, metadata !DIExpression()), !dbg !4019
  %1 = getelementptr inbounds { ptr, i64 }, ptr %dst.dbg.spill, i32 0, i32 0
  store ptr %dst.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %dst.dbg.spill, i32 0, i32 1
  store i64 %dst.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !4001, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.declare(metadata ptr %len, metadata !4002, metadata !DIExpression()), !dbg !4021
  %3 = load i32, ptr %code, align 4, !dbg !4022, !noundef !45
; call core::char::methods::len_utf8
  %4 = call i64 @_ZN4core4char7methods8len_utf817h32106d2870d2ae12E(i32 %3) #17, !dbg !4022
  store i64 %4, ptr %len, align 8, !dbg !4022
  %_5 = load i64, ptr %len, align 8, !dbg !4023, !noundef !45
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %5 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1df2881e6f51dc0aE"(ptr align 1 %dst.0, i64 %dst.1, ptr align 8 @alloc_cd65f6eec8b4e6b41cac5d8b9191bc46) #17, !dbg !4024
  %_7.0 = extractvalue { ptr, i64 } %5, 0, !dbg !4024
  %_7.1 = extractvalue { ptr, i64 } %5, 1, !dbg !4024
  store i64 %_5, ptr %_4, align 8, !dbg !4025
  %6 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4025
  %7 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 0, !dbg !4025
  store ptr %_7.0, ptr %7, align 8, !dbg !4025
  %8 = getelementptr inbounds { ptr, i64 }, ptr %6, i32 0, i32 1, !dbg !4025
  store i64 %_7.1, ptr %8, align 8, !dbg !4025
  %9 = load i64, ptr %_4, align 8, !dbg !4026, !noundef !45
  switch i64 %9, label %bb4 [
    i64 1, label %bb3
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
  ], !dbg !4026

bb4:                                              ; preds = %bb3, %bb5, %bb6, %bb7, %start
; call core::fmt::ArgumentV1::new_display
  %10 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %len) #17, !dbg !4027
  %_67.0 = extractvalue { ptr, ptr } %10, 0, !dbg !4027
  %_67.1 = extractvalue { ptr, ptr } %10, 1, !dbg !4027
; call core::fmt::ArgumentV1::new_upper_hex
  %11 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_upper_hex17h933a51c163f21ef7E(ptr align 4 %code) #17, !dbg !4027
  %_69.0 = extractvalue { ptr, ptr } %11, 0, !dbg !4027
  %_69.1 = extractvalue { ptr, ptr } %11, 1, !dbg !4027
  store i64 %dst.1, ptr %_73, align 8, !dbg !4028
; call core::fmt::ArgumentV1::new_display
  %12 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %_73) #17, !dbg !4027
  %_71.0 = extractvalue { ptr, ptr } %12, 0, !dbg !4027
  %_71.1 = extractvalue { ptr, ptr } %12, 1, !dbg !4027
  %13 = getelementptr inbounds [3 x { ptr, ptr }], ptr %_66, i64 0, i64 0, !dbg !4027
  %14 = getelementptr inbounds { ptr, ptr }, ptr %13, i32 0, i32 0, !dbg !4027
  store ptr %_67.0, ptr %14, align 8, !dbg !4027
  %15 = getelementptr inbounds { ptr, ptr }, ptr %13, i32 0, i32 1, !dbg !4027
  store ptr %_67.1, ptr %15, align 8, !dbg !4027
  %16 = getelementptr inbounds [3 x { ptr, ptr }], ptr %_66, i64 0, i64 1, !dbg !4027
  %17 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0, !dbg !4027
  store ptr %_69.0, ptr %17, align 8, !dbg !4027
  %18 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1, !dbg !4027
  store ptr %_69.1, ptr %18, align 8, !dbg !4027
  %19 = getelementptr inbounds [3 x { ptr, ptr }], ptr %_66, i64 0, i64 2, !dbg !4027
  %20 = getelementptr inbounds { ptr, ptr }, ptr %19, i32 0, i32 0, !dbg !4027
  store ptr %_71.0, ptr %20, align 8, !dbg !4027
  %21 = getelementptr inbounds { ptr, ptr }, ptr %19, i32 0, i32 1, !dbg !4027
  store ptr %_71.1, ptr %21, align 8, !dbg !4027
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_62, ptr align 8 @alloc_17eda000eed4fa50c9930631838b2137, i64 3, ptr align 8 %_66, i64 3) #17, !dbg !4027
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_62, ptr align 8 @alloc_7c2f04411e058dac6a183b0d236738b2) #18, !dbg !4027
  unreachable, !dbg !4027

bb3:                                              ; preds = %start
  %22 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4029
  %23 = getelementptr inbounds { ptr, i64 }, ptr %22, i32 0, i32 0, !dbg !4029
  %_79.0 = load ptr, ptr %23, align 8, !dbg !4029, !nonnull !45, !align !643, !noundef !45
  %24 = getelementptr inbounds { ptr, i64 }, ptr %22, i32 0, i32 1, !dbg !4029
  %_79.1 = load i64, ptr %24, align 8, !dbg !4029, !noundef !45
  %_11 = icmp uge i64 %_79.1, 1, !dbg !4029
  br i1 %_11, label %bb8, label %bb4, !dbg !4029

bb5:                                              ; preds = %start
  %25 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4030
  %26 = getelementptr inbounds { ptr, i64 }, ptr %25, i32 0, i32 0, !dbg !4030
  %_80.0 = load ptr, ptr %26, align 8, !dbg !4030, !nonnull !45, !align !643, !noundef !45
  %27 = getelementptr inbounds { ptr, i64 }, ptr %25, i32 0, i32 1, !dbg !4030
  %_80.1 = load i64, ptr %27, align 8, !dbg !4030, !noundef !45
  %_14 = icmp uge i64 %_80.1, 2, !dbg !4030
  br i1 %_14, label %bb9, label %bb4, !dbg !4030

bb6:                                              ; preds = %start
  %28 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4031
  %29 = getelementptr inbounds { ptr, i64 }, ptr %28, i32 0, i32 0, !dbg !4031
  %_81.0 = load ptr, ptr %29, align 8, !dbg !4031, !nonnull !45, !align !643, !noundef !45
  %30 = getelementptr inbounds { ptr, i64 }, ptr %28, i32 0, i32 1, !dbg !4031
  %_81.1 = load i64, ptr %30, align 8, !dbg !4031, !noundef !45
  %_17 = icmp uge i64 %_81.1, 3, !dbg !4031
  br i1 %_17, label %bb11, label %bb4, !dbg !4031

bb7:                                              ; preds = %start
  %31 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4032
  %32 = getelementptr inbounds { ptr, i64 }, ptr %31, i32 0, i32 0, !dbg !4032
  %_82.0 = load ptr, ptr %32, align 8, !dbg !4032, !nonnull !45, !align !643, !noundef !45
  %33 = getelementptr inbounds { ptr, i64 }, ptr %31, i32 0, i32 1, !dbg !4032
  %_82.1 = load i64, ptr %33, align 8, !dbg !4032, !noundef !45
  %_20 = icmp uge i64 %_82.1, 4, !dbg !4032
  br i1 %_20, label %bb14, label %bb4, !dbg !4032

bb14:                                             ; preds = %bb7
  %34 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4033
  %35 = getelementptr inbounds { ptr, i64 }, ptr %34, i32 0, i32 0, !dbg !4033
  %_89.0 = load ptr, ptr %35, align 8, !dbg !4033, !nonnull !45, !align !643, !noundef !45
  %36 = getelementptr inbounds { ptr, i64 }, ptr %34, i32 0, i32 1, !dbg !4033
  %_89.1 = load i64, ptr %36, align 8, !dbg !4033, !noundef !45
  %a = getelementptr inbounds [0 x i8], ptr %_89.0, i64 0, i64 0, !dbg !4033
  store ptr %a, ptr %a.dbg.spill, align 8, !dbg !4033
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !4014, metadata !DIExpression()), !dbg !4034
  %37 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4035
  %38 = getelementptr inbounds { ptr, i64 }, ptr %37, i32 0, i32 0, !dbg !4035
  %_90.0 = load ptr, ptr %38, align 8, !dbg !4035, !nonnull !45, !align !643, !noundef !45
  %39 = getelementptr inbounds { ptr, i64 }, ptr %37, i32 0, i32 1, !dbg !4035
  %_90.1 = load i64, ptr %39, align 8, !dbg !4035, !noundef !45
  %b = getelementptr inbounds [0 x i8], ptr %_90.0, i64 0, i64 1, !dbg !4035
  store ptr %b, ptr %b.dbg.spill, align 8, !dbg !4035
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !4016, metadata !DIExpression()), !dbg !4036
  %40 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4037
  %41 = getelementptr inbounds { ptr, i64 }, ptr %40, i32 0, i32 0, !dbg !4037
  %_91.0 = load ptr, ptr %41, align 8, !dbg !4037, !nonnull !45, !align !643, !noundef !45
  %42 = getelementptr inbounds { ptr, i64 }, ptr %40, i32 0, i32 1, !dbg !4037
  %_91.1 = load i64, ptr %42, align 8, !dbg !4037, !noundef !45
  %c = getelementptr inbounds [0 x i8], ptr %_91.0, i64 0, i64 2, !dbg !4037
  store ptr %c, ptr %c.dbg.spill, align 8, !dbg !4037
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !4017, metadata !DIExpression()), !dbg !4038
  %43 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4039
  %44 = getelementptr inbounds { ptr, i64 }, ptr %43, i32 0, i32 0, !dbg !4039
  %_92.0 = load ptr, ptr %44, align 8, !dbg !4039, !nonnull !45, !align !643, !noundef !45
  %45 = getelementptr inbounds { ptr, i64 }, ptr %43, i32 0, i32 1, !dbg !4039
  %_92.1 = load i64, ptr %45, align 8, !dbg !4039, !noundef !45
  %d = getelementptr inbounds [0 x i8], ptr %_92.0, i64 0, i64 3, !dbg !4039
  store ptr %d, ptr %d.dbg.spill, align 8, !dbg !4039
  call void @llvm.dbg.declare(metadata ptr %d.dbg.spill, metadata !4018, metadata !DIExpression()), !dbg !4040
  %46 = load i32, ptr %code, align 4, !dbg !4041, !noundef !45
  %_50.0 = lshr i32 %46, 18, !dbg !4041
  %_48 = and i32 %_50.0, 7, !dbg !4042
  %_47 = trunc i32 %_48 to i8, !dbg !4042
  %47 = or i8 %_47, -16, !dbg !4043
  store i8 %47, ptr %a, align 1, !dbg !4043
  %48 = load i32, ptr %code, align 4, !dbg !4044, !noundef !45
  %_54.0 = lshr i32 %48, 12, !dbg !4044
  %_52 = and i32 %_54.0, 63, !dbg !4045
  %_51 = trunc i32 %_52 to i8, !dbg !4045
  %49 = or i8 %_51, -128, !dbg !4046
  store i8 %49, ptr %b, align 1, !dbg !4046
  %50 = load i32, ptr %code, align 4, !dbg !4047, !noundef !45
  %_58.0 = lshr i32 %50, 6, !dbg !4047
  %_56 = and i32 %_58.0, 63, !dbg !4048
  %_55 = trunc i32 %_56 to i8, !dbg !4048
  %51 = or i8 %_55, -128, !dbg !4049
  store i8 %51, ptr %c, align 1, !dbg !4049
  %52 = load i32, ptr %code, align 4, !dbg !4050, !noundef !45
  %_60 = and i32 %52, 63, !dbg !4050
  %_59 = trunc i32 %_60 to i8, !dbg !4050
  %53 = or i8 %_59, -128, !dbg !4051
  store i8 %53, ptr %d, align 1, !dbg !4051
  br label %bb22, !dbg !4052

bb22:                                             ; preds = %bb8, %bb9, %bb11, %bb14
  %_77 = load i64, ptr %len, align 8, !dbg !4053, !noundef !45
  store i64 %_77, ptr %_76, align 8, !dbg !4054
  %54 = load i64, ptr %_76, align 8, !dbg !4055, !noundef !45
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %55 = call { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb31f7356848f961bE"(ptr align 1 %dst.0, i64 %dst.1, i64 %54, ptr align 8 @alloc_c60dbbb04a129df5bc7f7f986da85346) #17, !dbg !4055
  %_75.0 = extractvalue { ptr, i64 } %55, 0, !dbg !4055
  %_75.1 = extractvalue { ptr, i64 } %55, 1, !dbg !4055
  %56 = insertvalue { ptr, i64 } undef, ptr %_75.0, 0, !dbg !4056
  %57 = insertvalue { ptr, i64 } %56, i64 %_75.1, 1, !dbg !4056
  ret { ptr, i64 } %57, !dbg !4056

bb11:                                             ; preds = %bb6
  %58 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4057
  %59 = getelementptr inbounds { ptr, i64 }, ptr %58, i32 0, i32 0, !dbg !4057
  %_86.0 = load ptr, ptr %59, align 8, !dbg !4057, !nonnull !45, !align !643, !noundef !45
  %60 = getelementptr inbounds { ptr, i64 }, ptr %58, i32 0, i32 1, !dbg !4057
  %_86.1 = load i64, ptr %60, align 8, !dbg !4057, !noundef !45
  %a1 = getelementptr inbounds [0 x i8], ptr %_86.0, i64 0, i64 0, !dbg !4057
  store ptr %a1, ptr %a.dbg.spill2, align 8, !dbg !4057
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill2, metadata !4010, metadata !DIExpression()), !dbg !4058
  %61 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4059
  %62 = getelementptr inbounds { ptr, i64 }, ptr %61, i32 0, i32 0, !dbg !4059
  %_87.0 = load ptr, ptr %62, align 8, !dbg !4059, !nonnull !45, !align !643, !noundef !45
  %63 = getelementptr inbounds { ptr, i64 }, ptr %61, i32 0, i32 1, !dbg !4059
  %_87.1 = load i64, ptr %63, align 8, !dbg !4059, !noundef !45
  %b3 = getelementptr inbounds [0 x i8], ptr %_87.0, i64 0, i64 1, !dbg !4059
  store ptr %b3, ptr %b.dbg.spill4, align 8, !dbg !4059
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill4, metadata !4012, metadata !DIExpression()), !dbg !4060
  %64 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4061
  %65 = getelementptr inbounds { ptr, i64 }, ptr %64, i32 0, i32 0, !dbg !4061
  %_88.0 = load ptr, ptr %65, align 8, !dbg !4061, !nonnull !45, !align !643, !noundef !45
  %66 = getelementptr inbounds { ptr, i64 }, ptr %64, i32 0, i32 1, !dbg !4061
  %_88.1 = load i64, ptr %66, align 8, !dbg !4061, !noundef !45
  %c5 = getelementptr inbounds [0 x i8], ptr %_88.0, i64 0, i64 2, !dbg !4061
  store ptr %c5, ptr %c.dbg.spill6, align 8, !dbg !4061
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill6, metadata !4013, metadata !DIExpression()), !dbg !4062
  %67 = load i32, ptr %code, align 4, !dbg !4063, !noundef !45
  %_36.0 = lshr i32 %67, 12, !dbg !4063
  %_34 = and i32 %_36.0, 15, !dbg !4064
  %_33 = trunc i32 %_34 to i8, !dbg !4064
  %68 = or i8 %_33, -32, !dbg !4065
  store i8 %68, ptr %a1, align 1, !dbg !4065
  %69 = load i32, ptr %code, align 4, !dbg !4066, !noundef !45
  %_40.0 = lshr i32 %69, 6, !dbg !4066
  %_38 = and i32 %_40.0, 63, !dbg !4067
  %_37 = trunc i32 %_38 to i8, !dbg !4067
  %70 = or i8 %_37, -128, !dbg !4068
  store i8 %70, ptr %b3, align 1, !dbg !4068
  %71 = load i32, ptr %code, align 4, !dbg !4069, !noundef !45
  %_42 = and i32 %71, 63, !dbg !4069
  %_41 = trunc i32 %_42 to i8, !dbg !4069
  %72 = or i8 %_41, -128, !dbg !4070
  store i8 %72, ptr %c5, align 1, !dbg !4070
  br label %bb22, !dbg !4071

bb9:                                              ; preds = %bb5
  %73 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4072
  %74 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 0, !dbg !4072
  %_84.0 = load ptr, ptr %74, align 8, !dbg !4072, !nonnull !45, !align !643, !noundef !45
  %75 = getelementptr inbounds { ptr, i64 }, ptr %73, i32 0, i32 1, !dbg !4072
  %_84.1 = load i64, ptr %75, align 8, !dbg !4072, !noundef !45
  %a7 = getelementptr inbounds [0 x i8], ptr %_84.0, i64 0, i64 0, !dbg !4072
  store ptr %a7, ptr %a.dbg.spill8, align 8, !dbg !4072
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill8, metadata !4007, metadata !DIExpression()), !dbg !4073
  %76 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4074
  %77 = getelementptr inbounds { ptr, i64 }, ptr %76, i32 0, i32 0, !dbg !4074
  %_85.0 = load ptr, ptr %77, align 8, !dbg !4074, !nonnull !45, !align !643, !noundef !45
  %78 = getelementptr inbounds { ptr, i64 }, ptr %76, i32 0, i32 1, !dbg !4074
  %_85.1 = load i64, ptr %78, align 8, !dbg !4074, !noundef !45
  %b9 = getelementptr inbounds [0 x i8], ptr %_85.0, i64 0, i64 1, !dbg !4074
  store ptr %b9, ptr %b.dbg.spill10, align 8, !dbg !4074
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill10, metadata !4009, metadata !DIExpression()), !dbg !4075
  %79 = load i32, ptr %code, align 4, !dbg !4076, !noundef !45
  %_27.0 = lshr i32 %79, 6, !dbg !4076
  %_25 = and i32 %_27.0, 31, !dbg !4077
  %_24 = trunc i32 %_25 to i8, !dbg !4077
  %80 = or i8 %_24, -64, !dbg !4078
  store i8 %80, ptr %a7, align 1, !dbg !4078
  %81 = load i32, ptr %code, align 4, !dbg !4079, !noundef !45
  %_29 = and i32 %81, 63, !dbg !4079
  %_28 = trunc i32 %_29 to i8, !dbg !4079
  %82 = or i8 %_28, -128, !dbg !4080
  store i8 %82, ptr %b9, align 1, !dbg !4080
  br label %bb22, !dbg !4081

bb8:                                              ; preds = %bb3
  %83 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !4082
  %84 = getelementptr inbounds { ptr, i64 }, ptr %83, i32 0, i32 0, !dbg !4082
  %_83.0 = load ptr, ptr %84, align 8, !dbg !4082, !nonnull !45, !align !643, !noundef !45
  %85 = getelementptr inbounds { ptr, i64 }, ptr %83, i32 0, i32 1, !dbg !4082
  %_83.1 = load i64, ptr %85, align 8, !dbg !4082, !noundef !45
  %a11 = getelementptr inbounds [0 x i8], ptr %_83.0, i64 0, i64 0, !dbg !4082
  store ptr %a11, ptr %a.dbg.spill12, align 8, !dbg !4082
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill12, metadata !4004, metadata !DIExpression()), !dbg !4083
  %86 = load i32, ptr %code, align 4, !dbg !4084, !noundef !45
  %87 = trunc i32 %86 to i8, !dbg !4084
  store i8 %87, ptr %a11, align 1, !dbg !4084
  br label %bb22, !dbg !4085
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h32414824fbb65d00E"(i32 %self, ptr align 1 %dst.0, i64 %dst.1) unnamed_addr #1 !dbg !4086 {
start:
  %dst.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i32, align 4
  store i32 %self, ptr %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4091, metadata !DIExpression()), !dbg !4093
  %0 = getelementptr inbounds { ptr, i64 }, ptr %dst.dbg.spill, i32 0, i32 0
  store ptr %dst.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %dst.dbg.spill, i32 0, i32 1
  store i64 %dst.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !4092, metadata !DIExpression()), !dbg !4094
; call core::char::methods::encode_utf8_raw
  %2 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17h06669393e841a7e8E(i32 %self, ptr align 1 %dst.0, i64 %dst.1) #17, !dbg !4095
  %_5.0 = extractvalue { ptr, i64 } %2, 0, !dbg !4095
  %_5.1 = extractvalue { ptr, i64 } %2, 1, !dbg !4095
; call core::str::converts::from_utf8_unchecked_mut
  %3 = call { ptr, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17had244af207d0d050E(ptr align 1 %_5.0, i64 %_5.1) #17, !dbg !4096
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4096
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4096
  %4 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !4097
  %5 = insertvalue { ptr, i64 } %4, i64 %_3.1, 1, !dbg !4097
  ret { ptr, i64 } %5, !dbg !4097
}

; core::char::methods::<impl char>::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h9a75e41c0c306034E"(ptr sret(%"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>") %0, ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !4098 {
start:
  %iter.dbg.spill = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 1
  store ptr %iter.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !4100, metadata !DIExpression()), !dbg !4101
; call core::char::decode::decode_utf16
  call void @_ZN4core4char6decode12decode_utf1617h6d1a34466aa66eb0E(ptr sret(%"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>") %0, ptr %iter.0, ptr %iter.1) #17, !dbg !4102
  ret void, !dbg !4103
}

; core::char::methods::<impl char>::from_u32_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h991ddb6749a94a8bE"(i32 %i) unnamed_addr #1 !dbg !4104 {
start:
  %i.dbg.spill = alloca i32, align 4
  store i32 %i, ptr %i.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !4106, metadata !DIExpression()), !dbg !4107
; call core::char::convert::from_u32_unchecked
  %0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17h8afc855a7be997e6E(i32 %i) #17, !dbg !4108, !range !523
  ret i32 %0, !dbg !4109
}

; core::char::methods::<impl char>::from_u32
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8from_u3217hfe4d08d27b4914deE"(i32 %i) unnamed_addr #1 !dbg !4110 {
start:
  %i.dbg.spill = alloca i32, align 4
  store i32 %i, ptr %i.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !4112, metadata !DIExpression()), !dbg !4113
; call core::char::convert::from_u32
  %0 = call i32 @_ZN4core4char7convert8from_u3217he5b1745bbf813e1eE(i32 %i) #17, !dbg !4114, !range !527
  ret i32 %0, !dbg !4115
}

; core::char::methods::<impl char>::len_utf8
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hc910add14b1dec2eE"(i32 %self) unnamed_addr #1 !dbg !4116 {
start:
  %self.dbg.spill = alloca i32, align 4
  store i32 %self, ptr %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4120, metadata !DIExpression()), !dbg !4121
; call core::char::methods::len_utf8
  %0 = call i64 @_ZN4core4char7methods8len_utf817h32106d2870d2ae12E(i32 %self) #17, !dbg !4122
  ret i64 %0, !dbg !4123
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core4char7methods8len_utf817h32106d2870d2ae12E(i32 %code) unnamed_addr #1 !dbg !4124 {
start:
  %code.dbg.spill = alloca i32, align 4
  %0 = alloca i64, align 8
  store i32 %code, ptr %code.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %code.dbg.spill, metadata !4128, metadata !DIExpression()), !dbg !4129
  %_2 = icmp ult i32 %code, 128, !dbg !4130
  br i1 %_2, label %bb1, label %bb2, !dbg !4130

bb2:                                              ; preds = %start
  %_3 = icmp ult i32 %code, 2048, !dbg !4131
  br i1 %_3, label %bb3, label %bb4, !dbg !4131

bb1:                                              ; preds = %start
  store i64 1, ptr %0, align 8, !dbg !4132
  br label %bb7, !dbg !4133

bb7:                                              ; preds = %bb6, %bb5, %bb3, %bb1
  %1 = load i64, ptr %0, align 8, !dbg !4134, !noundef !45
  ret i64 %1, !dbg !4134

bb4:                                              ; preds = %bb2
  %_4 = icmp ult i32 %code, 65536, !dbg !4135
  br i1 %_4, label %bb5, label %bb6, !dbg !4135

bb3:                                              ; preds = %bb2
  store i64 2, ptr %0, align 8, !dbg !4136
  br label %bb7, !dbg !4137

bb6:                                              ; preds = %bb4
  store i64 4, ptr %0, align 8, !dbg !4138
  br label %bb7, !dbg !4139

bb5:                                              ; preds = %bb4
  store i64 3, ptr %0, align 8, !dbg !4140
  br label %bb7, !dbg !4139
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind
; Function Attrs: inlinehint noredzone nounwind
define i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind17hf65e20d09391b2fdE(ptr align 8 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !4141 {
start:
  %predicate.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4149, metadata !DIExpression()), !dbg !4154
  %0 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 0
  store ptr %predicate.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 1
  store ptr %predicate.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %predicate.dbg.spill, metadata !4150, metadata !DIExpression()), !dbg !4155
; call core::iter::traits::double_ended::DoubleEndedIterator::rfind::check
  %2 = call { ptr, ptr } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check17hddbbc58179dda83bE(ptr align 1 %predicate.0, ptr align 1 %predicate.1) #17, !dbg !4156
  %_5.0 = extractvalue { ptr, ptr } %2, 0, !dbg !4156
  %_5.1 = extractvalue { ptr, ptr } %2, 1, !dbg !4156
; call core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
  %_3 = call i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17h51874edc3c5c216dE(ptr align 8 %self, ptr align 1 %_5.0, ptr align 1 %_5.1) #17, !dbg !4157, !range !527
; call core::ops::control_flow::ControlFlow<B,C>::break_value
  %3 = call i32 @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h45732fb25270a50aE"(i32 %_3) #17, !dbg !4157, !range !527
  ret i32 %3, !dbg !4158
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind::check
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check17hddbbc58179dda83bE(ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !4159 {
start:
  %predicate.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 0
  store ptr %predicate.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 1
  store ptr %predicate.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %predicate.dbg.spill, metadata !4168, metadata !DIExpression()), !dbg !4171
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4172
  store ptr %predicate.0, ptr %3, align 8, !dbg !4172
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4172
  store ptr %predicate.1, ptr %4, align 8, !dbg !4172
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4173
  %6 = load ptr, ptr %5, align 8, !dbg !4173, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4173
  %8 = load ptr, ptr %7, align 8, !dbg !4173, !nonnull !45, !align !643, !noundef !45
  %9 = insertvalue { ptr, ptr } undef, ptr %6, 0, !dbg !4173
  %10 = insertvalue { ptr, ptr } %9, ptr %8, 1, !dbg !4173
  ret { ptr, ptr } %10, !dbg !4173
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h176e71ac55ce7e20E"(ptr align 8 %_1, i32 %0) unnamed_addr #1 !dbg !4174 {
start:
  %_2.dbg.spill = alloca {}, align 1
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca i8, align 1
  %_6 = alloca ptr, align 8
  %1 = alloca i32, align 4
  %x = alloca i32, align 4
  store i32 %0, ptr %x, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4180, metadata !DIExpression(DW_OP_deref)), !dbg !4182
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !4181, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.declare(metadata ptr %x, metadata !4179, metadata !DIExpression()), !dbg !4184
  store i8 0, ptr %_10, align 1, !dbg !4185
  store i8 1, ptr %_10, align 1, !dbg !4185
  store ptr %x, ptr %_6, align 8, !dbg !4185
  %2 = load ptr, ptr %_6, align 8, !dbg !4185, !nonnull !45, !align !675, !noundef !45
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
  %_4 = call zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17h6861385569cb6a98E"(ptr align 8 %_1, ptr align 4 %2) #17, !dbg !4185
  br i1 %_4, label %bb2, label %bb3, !dbg !4185

bb3:                                              ; preds = %start
  store i32 1114112, ptr %1, align 4, !dbg !4186
  br label %bb4, !dbg !4187

bb2:                                              ; preds = %start
  store i8 0, ptr %_10, align 1, !dbg !4188
  %_8 = load i32, ptr %x, align 4, !dbg !4188, !range !523, !noundef !45
  store i32 %_8, ptr %1, align 4, !dbg !4189
  br label %bb4, !dbg !4187

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i8, ptr %_10, align 1, !dbg !4190, !range !673, !noundef !45
  %4 = trunc i8 %3 to i1, !dbg !4190
  br i1 %4, label %bb6, label %bb5, !dbg !4190

bb5:                                              ; preds = %bb6, %bb4
  %5 = load i32, ptr %1, align 4, !dbg !4191, !range !527, !noundef !45
  ret i32 %5, !dbg !4191

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !4190
}

; core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
; Function Attrs: inlinehint noredzone nounwind
define i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17h51874edc3c5c216dE(ptr align 8 %self, ptr align 1 %0, ptr align 1 %1) unnamed_addr #1 !dbg !4192 {
start:
  %residual.dbg.spill = alloca i32, align 4
  %x.dbg.spill = alloca i32, align 4
  %val.dbg.spill = alloca {}, align 1
  %accum.dbg.spill = alloca {}, align 1
  %init.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca ptr, align 8
  %_11 = alloca i32, align 4
  %_8 = alloca i32, align 4
  %_5 = alloca i32, align 4
  %2 = alloca i32, align 4
  %f = alloca { ptr, ptr }, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %f, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %f, i32 0, i32 1
  store ptr %1, ptr %4, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4196, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.declare(metadata ptr %init.dbg.spill, metadata !4197, metadata !DIExpression()), !dbg !4212
  call void @llvm.dbg.declare(metadata ptr %f, metadata !4198, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.declare(metadata ptr %accum.dbg.spill, metadata !4199, metadata !DIExpression()), !dbg !4214
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill, metadata !4205, metadata !DIExpression()), !dbg !4215
  br label %bb1, !dbg !4216

bb1:                                              ; preds = %bb6, %start
; call <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %5 = call i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8b6fe0e82e9bd1c9E"(ptr align 8 %self) #17, !dbg !4217, !range !527
  store i32 %5, ptr %_5, align 4, !dbg !4217
  %6 = load i32, ptr %_5, align 4, !dbg !4218, !range !527, !noundef !45
  %7 = icmp eq i32 %6, 1114112, !dbg !4218
  %_6 = select i1 %7, i64 0, i64 1, !dbg !4218
  %8 = icmp eq i64 %_6, 1, !dbg !4218
  br i1 %8, label %bb3, label %bb10, !dbg !4218

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !4219, !range !523, !noundef !45
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !4219
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4201, metadata !DIExpression()), !dbg !4219
  store i32 %x, ptr %_11, align 4, !dbg !4220
  %9 = load i32, ptr %_11, align 4, !dbg !4220, !range !523, !noundef !45
; call core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
  %_9 = call i32 @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h176e71ac55ce7e20E"(ptr align 8 %f, i32 %9) #17, !dbg !4220, !range !527
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %10 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2de0f0ea9526867dE"(i32 %_9) #17, !dbg !4220, !range !527
  store i32 %10, ptr %_8, align 4, !dbg !4220
  %11 = load i32, ptr %_8, align 4, !dbg !4220, !range !527, !noundef !45
  %12 = icmp eq i32 %11, 1114112, !dbg !4220
  %_13 = select i1 %12, i64 0, i64 1, !dbg !4220
  %13 = icmp eq i64 %_13, 0, !dbg !4220
  br i1 %13, label %bb6, label %bb8, !dbg !4220

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %14 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h764ee8914d8afce4E"() #17, !dbg !4221, !range !527
  store i32 %14, ptr %2, align 4, !dbg !4221
  br label %bb13, !dbg !4222

bb13:                                             ; preds = %bb8, %bb10
  %15 = load i32, ptr %2, align 4, !dbg !4223, !range !527, !noundef !45
  ret i32 %15, !dbg !4223

bb6:                                              ; preds = %bb3
  br label %bb1, !dbg !4216

bb8:                                              ; preds = %bb3
  %residual = load i32, ptr %_8, align 4, !dbg !4224, !range !523, !noundef !45
  store i32 %residual, ptr %residual.dbg.spill, align 4, !dbg !4224
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !4203, metadata !DIExpression()), !dbg !4225
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %16 = call i32 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7baf4f06fa1440fcE"(i32 %residual) #17, !dbg !4226, !range !527
  store i32 %16, ptr %2, align 4, !dbg !4226
  br label %bb13, !dbg !4222

bb7:                                              ; No predecessors!
  unreachable, !dbg !4220
}

; core::iter::traits::iterator::Iterator::skip_while
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core4iter6traits8iterator8Iterator10skip_while17he62a34b0e4e01a5eE(ptr sret(%"core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars<'_>>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>") %0, ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !4227 {
start:
  %predicate.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]", align 1
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4234, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.declare(metadata ptr %predicate.dbg.spill, metadata !4235, metadata !DIExpression()), !dbg !4239
; call core::iter::adapters::skip_while::SkipWhile<I,P>::new
  call void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h0a5e978eda5de94cE"(ptr sret(%"core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars<'_>>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>") %0, ptr %self.0, ptr %self.1) #17, !dbg !4240
  ret void, !dbg !4241
}

; core::iter::traits::iterator::Iterator::skip_while
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN4core4iter6traits8iterator8Iterator10skip_while17he6a65d8ddc7dbbbaE(ptr sret(%"core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars<'_>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>") %0, ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !4242 {
start:
  %predicate.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39].0", align 1
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4246, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata ptr %predicate.dbg.spill, metadata !4247, metadata !DIExpression()), !dbg !4250
; call core::iter::adapters::skip_while::SkipWhile<I,P>::new
  call void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17hde80a76273c6c8a3E"(ptr sret(%"core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars<'_>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>") %0, ptr %self.0, ptr %self.1) #17, !dbg !4251
  ret void, !dbg !4252
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h15ad5af0869f4c3aE(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !4253 {
start:
  %f.dbg.spill = alloca %"[closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]", align 1
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4257, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4258, metadata !DIExpression()), !dbg !4262
; call core::iter::adapters::map::Map<I,F>::new
  %2 = call { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h78b8a3df4c03a1dfE"(ptr %self.0, ptr %self.1) #17, !dbg !4263
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !4263
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !4263
  %5 = insertvalue { ptr, ptr } undef, ptr %3, 0, !dbg !4264
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !4264
  ret { ptr, ptr } %6, !dbg !4264
}

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3rev17h1e7472311e1e6920E(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !4265 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4269, metadata !DIExpression()), !dbg !4271
; call core::iter::adapters::rev::Rev<T>::new
  %2 = call { ptr, ptr } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h4fd36a41abdca19bE"(ptr %self.0, ptr %self.1) #17, !dbg !4272
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !4272
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !4272
  %5 = insertvalue { ptr, ptr } undef, ptr %3, 0, !dbg !4273
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !4273
  ret { ptr, ptr } %6, !dbg !4273
}

; core::iter::traits::iterator::Iterator::sum
; Function Attrs: noredzone nounwind
define i64 @_ZN4core4iter6traits8iterator8Iterator3sum17hc807e64a1360c675E(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !4274 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4278, metadata !DIExpression()), !dbg !4282
; call <usize as core::iter::traits::accum::Sum>::sum
  %2 = call i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h18770b9c83593d13E"(ptr %self.0, ptr %self.1) #17, !dbg !4283
  ret i64 %2, !dbg !4284
}

; core::iter::traits::iterator::Iterator::find
; Function Attrs: inlinehint noredzone nounwind
define i32 @_ZN4core4iter6traits8iterator8Iterator4find17h0cb5f0aac3ff5547E(ptr align 8 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !4285 {
start:
  %predicate.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4289, metadata !DIExpression()), !dbg !4293
  %0 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 0
  store ptr %predicate.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 1
  store ptr %predicate.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %predicate.dbg.spill, metadata !4290, metadata !DIExpression()), !dbg !4294
; call core::iter::traits::iterator::Iterator::find::check
  %2 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator4find5check17hf8ce51fd4052ec5cE(ptr align 1 %predicate.0, ptr align 1 %predicate.1) #17, !dbg !4295
  %_5.0 = extractvalue { ptr, ptr } %2, 0, !dbg !4295
  %_5.1 = extractvalue { ptr, ptr } %2, 1, !dbg !4295
; call core::iter::traits::iterator::Iterator::try_fold
  %_3 = call i32 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hcf184aca2d7860f3E(ptr align 8 %self, ptr align 1 %_5.0, ptr align 1 %_5.1) #17, !dbg !4296, !range !527
; call core::ops::control_flow::ControlFlow<B,C>::break_value
  %3 = call i32 @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h45732fb25270a50aE"(i32 %_3) #17, !dbg !4296, !range !527
  ret i32 %3, !dbg !4297
}

; core::iter::traits::iterator::Iterator::find::check
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator4find5check17hf8ce51fd4052ec5cE(ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !4298 {
start:
  %predicate.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 0
  store ptr %predicate.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 1
  store ptr %predicate.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %predicate.dbg.spill, metadata !4307, metadata !DIExpression()), !dbg !4310
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4311
  store ptr %predicate.0, ptr %3, align 8, !dbg !4311
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4311
  store ptr %predicate.1, ptr %4, align 8, !dbg !4311
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4312
  %6 = load ptr, ptr %5, align 8, !dbg !4312, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4312
  %8 = load ptr, ptr %7, align 8, !dbg !4312, !nonnull !45, !align !643, !noundef !45
  %9 = insertvalue { ptr, ptr } undef, ptr %6, 0, !dbg !4312
  %10 = insertvalue { ptr, ptr } %9, ptr %8, 1, !dbg !4312
  ret { ptr, ptr } %10, !dbg !4312
}

; core::iter::traits::iterator::Iterator::find::check::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17hf2a9f5873cfdd238E"(ptr align 8 %_1, i32 %0) unnamed_addr #1 !dbg !4313 {
start:
  %_2.dbg.spill = alloca {}, align 1
  %_1.dbg.spill = alloca ptr, align 8
  %_10 = alloca i8, align 1
  %_6 = alloca ptr, align 8
  %1 = alloca i32, align 4
  %x = alloca i32, align 4
  store i32 %0, ptr %x, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4319, metadata !DIExpression(DW_OP_deref)), !dbg !4321
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !4320, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.declare(metadata ptr %x, metadata !4318, metadata !DIExpression()), !dbg !4323
  store i8 0, ptr %_10, align 1, !dbg !4324
  store i8 1, ptr %_10, align 1, !dbg !4324
  store ptr %x, ptr %_6, align 8, !dbg !4324
  %2 = load ptr, ptr %_6, align 8, !dbg !4324, !nonnull !45, !align !675, !noundef !45
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
  %_4 = call zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17hb307dce8a79ea034E"(ptr align 8 %_1, ptr align 4 %2) #17, !dbg !4324
  br i1 %_4, label %bb2, label %bb3, !dbg !4324

bb3:                                              ; preds = %start
  store i32 1114112, ptr %1, align 4, !dbg !4325
  br label %bb4, !dbg !4326

bb2:                                              ; preds = %start
  store i8 0, ptr %_10, align 1, !dbg !4327
  %_8 = load i32, ptr %x, align 4, !dbg !4327, !range !523, !noundef !45
  store i32 %_8, ptr %1, align 4, !dbg !4328
  br label %bb4, !dbg !4326

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i8, ptr %_10, align 1, !dbg !4329, !range !673, !noundef !45
  %4 = trunc i8 %3 to i1, !dbg !4329
  br i1 %4, label %bb6, label %bb5, !dbg !4329

bb5:                                              ; preds = %bb6, %bb4
  %5 = load i32, ptr %1, align 4, !dbg !4330, !range !527, !noundef !45
  ret i32 %5, !dbg !4330

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !4329
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint noredzone nounwind
define i64 @_ZN4core4iter6traits8iterator8Iterator4fold17hb4d475b31ccfa8e3E(ptr %0, ptr %1, i64 %init) unnamed_addr #1 !dbg !4331 {
start:
  %x.dbg.spill = alloca ptr, align 8
  %init.dbg.spill = alloca i64, align 8
  %_10 = alloca { i64, ptr }, align 8
  %_4 = alloca ptr, align 8
  %accum = alloca i64, align 8
  %f = alloca %"[closure@core::iter::adapters::map::map_fold<&&str, usize, usize, [closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, [closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]>>::{closure#0}]>::{closure#0}]", align 1
  %self = alloca { ptr, ptr }, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 0
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1
  store ptr %1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %accum, metadata !4343, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4340, metadata !DIExpression()), !dbg !4350
  store i64 %init, ptr %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %init.dbg.spill, metadata !4341, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.declare(metadata ptr %f, metadata !4342, metadata !DIExpression()), !dbg !4352
  store i64 %init, ptr %accum, align 8, !dbg !4353
  br label %bb1, !dbg !4354

bb1:                                              ; preds = %bb3, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %4 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h04a2c07ace5feab0E"(ptr align 8 %self) #17, !dbg !4355
  store ptr %4, ptr %_4, align 8, !dbg !4355
  %5 = load ptr, ptr %_4, align 8, !dbg !4356, !noundef !45
  %6 = ptrtoint ptr %5 to i64, !dbg !4356
  %7 = icmp eq i64 %6, 0, !dbg !4356
  %_6 = select i1 %7, i64 0, i64 1, !dbg !4356
  %8 = icmp eq i64 %_6, 1, !dbg !4356
  br i1 %8, label %bb3, label %bb5, !dbg !4356

bb3:                                              ; preds = %bb1
  %x = load ptr, ptr %_4, align 8, !dbg !4357, !nonnull !45, !align !1159, !noundef !45
  store ptr %x, ptr %x.dbg.spill, align 8, !dbg !4357
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4345, metadata !DIExpression()), !dbg !4357
  %_11 = load i64, ptr %accum, align 8, !dbg !4358, !noundef !45
  store i64 %_11, ptr %_10, align 8, !dbg !4359
  %9 = getelementptr inbounds { i64, ptr }, ptr %_10, i32 0, i32 1, !dbg !4359
  store ptr %x, ptr %9, align 8, !dbg !4359
  %10 = getelementptr inbounds { i64, ptr }, ptr %_10, i32 0, i32 0, !dbg !4359
  %11 = load i64, ptr %10, align 8, !dbg !4359, !noundef !45
  %12 = getelementptr inbounds { i64, ptr }, ptr %_10, i32 0, i32 1, !dbg !4359
  %13 = load ptr, ptr %12, align 8, !dbg !4359, !nonnull !45, !align !1159, !noundef !45
; call core::iter::adapters::map::map_fold::{{closure}}
  %_8 = call i64 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hcf7ed2282c118b80E"(ptr align 1 %f, i64 %11, ptr align 8 %13) #17, !dbg !4359
  store i64 %_8, ptr %accum, align 8, !dbg !4360
  br label %bb1, !dbg !4354

bb5:                                              ; preds = %bb1
  %14 = load i64, ptr %accum, align 8, !dbg !4361, !noundef !45
  ret i64 %14, !dbg !4361
}

; core::iter::traits::iterator::Iterator::cloned
; Function Attrs: noredzone nounwind
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6cloned17h531107f53cfaa0c1E(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !4362 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4366, metadata !DIExpression()), !dbg !4369
; call core::iter::adapters::cloned::Cloned<I>::new
  %2 = call { ptr, ptr } @"_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17hb670fd75d7cac394E"(ptr %self.0, ptr %self.1) #17, !dbg !4370
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !4370
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !4370
  %5 = insertvalue { ptr, ptr } undef, ptr %3, 0, !dbg !4371
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !4371
  ret { ptr, ptr } %6, !dbg !4371
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint noredzone nounwind
define i32 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hcf184aca2d7860f3E(ptr align 8 %self, ptr align 1 %0, ptr align 1 %1) unnamed_addr #1 !dbg !4372 {
start:
  %residual.dbg.spill = alloca i32, align 4
  %x.dbg.spill = alloca i32, align 4
  %val.dbg.spill = alloca {}, align 1
  %accum.dbg.spill = alloca {}, align 1
  %init.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca ptr, align 8
  %_11 = alloca i32, align 4
  %_8 = alloca i32, align 4
  %_5 = alloca i32, align 4
  %2 = alloca i32, align 4
  %f = alloca { ptr, ptr }, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %f, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %f, i32 0, i32 1
  store ptr %1, ptr %4, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4376, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.declare(metadata ptr %init.dbg.spill, metadata !4377, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.declare(metadata ptr %f, metadata !4378, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.declare(metadata ptr %accum.dbg.spill, metadata !4379, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill, metadata !4385, metadata !DIExpression()), !dbg !4393
  br label %bb1, !dbg !4394

bb1:                                              ; preds = %bb6, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6b408331ae9cadd1E"(ptr align 8 %self) #17, !dbg !4395, !range !527
  store i32 %5, ptr %_5, align 4, !dbg !4395
  %6 = load i32, ptr %_5, align 4, !dbg !4396, !range !527, !noundef !45
  %7 = icmp eq i32 %6, 1114112, !dbg !4396
  %_6 = select i1 %7, i64 0, i64 1, !dbg !4396
  %8 = icmp eq i64 %_6, 1, !dbg !4396
  br i1 %8, label %bb3, label %bb10, !dbg !4396

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !4397, !range !523, !noundef !45
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !4397
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !4381, metadata !DIExpression()), !dbg !4397
  store i32 %x, ptr %_11, align 4, !dbg !4398
  %9 = load i32, ptr %_11, align 4, !dbg !4398, !range !523, !noundef !45
; call core::iter::traits::iterator::Iterator::find::check::{{closure}}
  %_9 = call i32 @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17hf2a9f5873cfdd238E"(ptr align 8 %f, i32 %9) #17, !dbg !4398, !range !527
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %10 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2de0f0ea9526867dE"(i32 %_9) #17, !dbg !4398, !range !527
  store i32 %10, ptr %_8, align 4, !dbg !4398
  %11 = load i32, ptr %_8, align 4, !dbg !4398, !range !527, !noundef !45
  %12 = icmp eq i32 %11, 1114112, !dbg !4398
  %_13 = select i1 %12, i64 0, i64 1, !dbg !4398
  %13 = icmp eq i64 %_13, 0, !dbg !4398
  br i1 %13, label %bb6, label %bb8, !dbg !4398

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %14 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h764ee8914d8afce4E"() #17, !dbg !4399, !range !527
  store i32 %14, ptr %2, align 4, !dbg !4399
  br label %bb13, !dbg !4400

bb13:                                             ; preds = %bb8, %bb10
  %15 = load i32, ptr %2, align 4, !dbg !4401, !range !527, !noundef !45
  ret i32 %15, !dbg !4401

bb6:                                              ; preds = %bb3
  br label %bb1, !dbg !4394

bb8:                                              ; preds = %bb3
  %residual = load i32, ptr %_8, align 4, !dbg !4402, !range !523, !noundef !45
  store i32 %residual, ptr %residual.dbg.spill, align 4, !dbg !4402
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !4383, metadata !DIExpression()), !dbg !4403
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %16 = call i32 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7baf4f06fa1440fcE"(i32 %residual) #17, !dbg !4404, !range !527
  store i32 %16, ptr %2, align 4, !dbg !4404
  br label %bb13, !dbg !4400

bb7:                                              ; No predecessors!
  unreachable, !dbg !4398
}

; core::iter::adapters::skip_while::SkipWhile<I,P>::new
; Function Attrs: noredzone nounwind
define void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h0a5e978eda5de94cE"(ptr sret(%"core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars<'_>>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>") %0, ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !4405 {
start:
  %predicate.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]", align 1
  %iter.dbg.spill = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 1
  store ptr %iter.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !4407, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.declare(metadata ptr %predicate.dbg.spill, metadata !4408, metadata !DIExpression()), !dbg !4410
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4411
  store ptr %iter.0, ptr %3, align 8, !dbg !4411
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4411
  store ptr %iter.1, ptr %4, align 8, !dbg !4411
  %5 = getelementptr inbounds %"core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars<'_>>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>", ptr %0, i32 0, i32 2, !dbg !4411
  store i8 0, ptr %5, align 8, !dbg !4411
  ret void, !dbg !4412
}

; core::iter::adapters::skip_while::SkipWhile<I,P>::new
; Function Attrs: noredzone nounwind
define void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17hde80a76273c6c8a3E"(ptr sret(%"core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars<'_>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>") %0, ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !4413 {
start:
  %predicate.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39].0", align 1
  %iter.dbg.spill = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 1
  store ptr %iter.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !4415, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.declare(metadata ptr %predicate.dbg.spill, metadata !4416, metadata !DIExpression()), !dbg !4418
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4419
  store ptr %iter.0, ptr %3, align 8, !dbg !4419
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4419
  store ptr %iter.1, ptr %4, align 8, !dbg !4419
  %5 = getelementptr inbounds %"core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars<'_>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>", ptr %0, i32 0, i32 2, !dbg !4419
  store i8 0, ptr %5, align 8, !dbg !4419
  ret void, !dbg !4420
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h78b8a3df4c03a1dfE"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !4421 {
start:
  %f.dbg.spill = alloca %"[closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]", align 1
  %iter.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 1
  store ptr %iter.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !4423, metadata !DIExpression()), !dbg !4425
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4424, metadata !DIExpression()), !dbg !4426
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4427
  store ptr %iter.0, ptr %3, align 8, !dbg !4427
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4427
  store ptr %iter.1, ptr %4, align 8, !dbg !4427
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4428
  %6 = load ptr, ptr %5, align 8, !dbg !4428, !noundef !45
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4428
  %8 = load ptr, ptr %7, align 8, !dbg !4428, !nonnull !45, !noundef !45
  %9 = insertvalue { ptr, ptr } undef, ptr %6, 0, !dbg !4428
  %10 = insertvalue { ptr, ptr } %9, ptr %8, 1, !dbg !4428
  ret { ptr, ptr } %10, !dbg !4428
}

; core::iter::adapters::map::map_fold
; Function Attrs: noredzone nounwind
define void @_ZN4core4iter8adapters3map8map_fold17h4082c70a4f2cebe2E() unnamed_addr #0 !dbg !4429 {
start:
  %g.dbg.spill = alloca %"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, [closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]>>::{closure#0}]", align 1
  %f.dbg.spill = alloca %"[closure@core::fmt::Arguments<'_>::estimated_capacity::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !4433, metadata !DIExpression()), !dbg !4438
  call void @llvm.dbg.declare(metadata ptr %g.dbg.spill, metadata !4434, metadata !DIExpression()), !dbg !4439
  ret void, !dbg !4440
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hcf7ed2282c118b80E"(ptr align 1 %_1, i64 %acc, ptr align 8 %elt) unnamed_addr #1 !dbg !4441 {
start:
  %elt.dbg.spill = alloca ptr, align 8
  %acc.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_8 = alloca ptr, align 8
  %_5 = alloca { i64, i64 }, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4448, metadata !DIExpression(DW_OP_deref)), !dbg !4450
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !4449, metadata !DIExpression(DW_OP_deref)), !dbg !4451
  store i64 %acc, ptr %acc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %acc.dbg.spill, metadata !4446, metadata !DIExpression()), !dbg !4452
  store ptr %elt, ptr %elt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %elt.dbg.spill, metadata !4447, metadata !DIExpression()), !dbg !4453
  store ptr %elt, ptr %_8, align 8, !dbg !4454
  %0 = load ptr, ptr %_8, align 8, !dbg !4454, !nonnull !45, !align !1159, !noundef !45
; call core::fmt::Arguments::estimated_capacity::{{closure}}
  %_6 = call i64 @"_ZN4core3fmt9Arguments18estimated_capacity28_$u7b$$u7b$closure$u7d$$u7d$17hcb8c60edd77b32ceE"(ptr align 1 %_1, ptr align 8 %0) #17, !dbg !4454
  store i64 %acc, ptr %_5, align 8, !dbg !4455
  %1 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4455
  store i64 %_6, ptr %1, align 8, !dbg !4455
  %2 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !4455
  %3 = load i64, ptr %2, align 8, !dbg !4455, !noundef !45
  %4 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !4455
  %5 = load i64, ptr %4, align 8, !dbg !4455, !noundef !45
; call <usize as core::iter::traits::accum::Sum>::sum::{{closure}}
  %6 = call i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h3098f19d02191346E"(ptr align 1 %_1, i64 %3, i64 %5) #17, !dbg !4455
  ret i64 %6, !dbg !4456
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h4fd36a41abdca19bE"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !4457 {
start:
  %iter.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 1
  store ptr %iter.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !4460, metadata !DIExpression()), !dbg !4461
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4462
  store ptr %iter.0, ptr %3, align 8, !dbg !4462
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4462
  store ptr %iter.1, ptr %4, align 8, !dbg !4462
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4463
  %6 = load ptr, ptr %5, align 8, !dbg !4463, !noundef !45
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4463
  %8 = load ptr, ptr %7, align 8, !dbg !4463, !nonnull !45, !noundef !45
  %9 = insertvalue { ptr, ptr } undef, ptr %6, 0, !dbg !4463
  %10 = insertvalue { ptr, ptr } %9, ptr %8, 1, !dbg !4463
  ret { ptr, ptr } %10, !dbg !4463
}

; core::iter::adapters::cloned::Cloned<I>::new
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17hb670fd75d7cac394E"(ptr %it.0, ptr %it.1) unnamed_addr #0 !dbg !4464 {
start:
  %it.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = alloca { ptr, ptr }, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %it.dbg.spill, i32 0, i32 0
  store ptr %it.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %it.dbg.spill, i32 0, i32 1
  store ptr %it.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %it.dbg.spill, metadata !4466, metadata !DIExpression()), !dbg !4467
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4468
  store ptr %it.0, ptr %3, align 8, !dbg !4468
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4468
  store ptr %it.1, ptr %4, align 8, !dbg !4468
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4469
  %6 = load ptr, ptr %5, align 8, !dbg !4469, !noundef !45
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4469
  %8 = load ptr, ptr %7, align 8, !dbg !4469, !nonnull !45, !noundef !45
  %9 = insertvalue { ptr, ptr } undef, ptr %6, 0, !dbg !4469
  %10 = insertvalue { ptr, ptr } %9, ptr %8, 1, !dbg !4469
  ret { ptr, ptr } %10, !dbg !4469
}

; core::alloc::layout::size_align
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h637d3bcd890a4515E() unnamed_addr #0 !dbg !4470 {
start:
  %0 = alloca { i64, i64 }, align 8
  store i64 16, ptr %0, align 8, !dbg !4493
  %1 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4493
  store i64 8, ptr %1, align 8, !dbg !4493
  %2 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4494
  %3 = load i64, ptr %2, align 8, !dbg !4494, !noundef !45
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4494
  %5 = load i64, ptr %4, align 8, !dbg !4494, !noundef !45
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !4494
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !4494
  ret { i64, i64 } %7, !dbg !4494
}

; core::alloc::layout::size_align
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h71e1de6cc74e16b0E() unnamed_addr #0 !dbg !4495 {
start:
  %0 = alloca { i64, i64 }, align 8
  store i64 16, ptr %0, align 8, !dbg !4509
  %1 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4509
  store i64 8, ptr %1, align 8, !dbg !4509
  %2 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4510
  %3 = load i64, ptr %2, align 8, !dbg !4510, !noundef !45
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4510
  %5 = load i64, ptr %4, align 8, !dbg !4510, !noundef !45
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !4510
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !4510
  ret { i64, i64 } %7, !dbg !4510
}

; core::alloc::layout::Layout::pad_to_align
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h582b5e21e5a39c47E(ptr align 8 %self) unnamed_addr #1 !dbg !4511 {
start:
  %new_size.dbg.spill = alloca i64, align 8
  %pad.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4516, metadata !DIExpression()), !dbg !4521
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %self) #17, !dbg !4522
; call core::alloc::layout::Layout::padding_needed_for
  %pad = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17h241b8d0e7f2d8864E(ptr align 8 %self, i64 %_3) #17, !dbg !4523
  store i64 %pad, ptr %pad.dbg.spill, align 8, !dbg !4523
  call void @llvm.dbg.declare(metadata ptr %pad.dbg.spill, metadata !4517, metadata !DIExpression()), !dbg !4524
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %self) #17, !dbg !4525
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_5, i64 %pad), !dbg !4525
  %_7.0 = extractvalue { i64, i1 } %0, 0, !dbg !4525
  %_7.1 = extractvalue { i64, i1 } %0, 1, !dbg !4525
  %1 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !4525
  br i1 %1, label %panic, label %bb4, !dbg !4525

bb4:                                              ; preds = %start
  store i64 %_7.0, ptr %new_size.dbg.spill, align 8, !dbg !4525
  call void @llvm.dbg.declare(metadata ptr %new_size.dbg.spill, metadata !4519, metadata !DIExpression()), !dbg !4526
; call core::alloc::layout::Layout::align
  %_8 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %self) #17, !dbg !4527
; call core::alloc::layout::Layout::from_size_align_unchecked
  %2 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE(i64 %_7.0, i64 %_8) #17, !dbg !4528
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !4528
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !4528
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !4529
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !4529
  ret { i64, i64 } %6, !dbg !4529

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_20a085c17f2c881db97732b2cf0b38fd) #18, !dbg !4525
  unreachable, !dbg !4525
}

; core::alloc::layout::Layout::padding_needed_for
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17h241b8d0e7f2d8864E(ptr align 8 %self, i64 %align) unnamed_addr #1 !dbg !4530 {
start:
  %rhs.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca i64, align 8
  %rhs.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca i64, align 8
  %rhs.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %len_rounded_up.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4534, metadata !DIExpression()), !dbg !4540
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !4535, metadata !DIExpression()), !dbg !4541
; call core::alloc::layout::Layout::size
  %len = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %self) #17, !dbg !4542
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !4542
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !4536, metadata !DIExpression()), !dbg !4543
  store i64 %len, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4544, metadata !DIExpression()), !dbg !4550
  store i64 %align, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !4549, metadata !DIExpression()), !dbg !4552
  %0 = add i64 %len, %align, !dbg !4553
  store i64 %0, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !4554, metadata !DIExpression()), !dbg !4558
  store i64 1, ptr %rhs.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i5, metadata !4557, metadata !DIExpression()), !dbg !4560
  %1 = sub i64 %0, 1, !dbg !4561
  store i64 %align, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !4554, metadata !DIExpression()), !dbg !4562
  store i64 1, ptr %rhs.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i3, metadata !4557, metadata !DIExpression()), !dbg !4564
  %2 = sub i64 %align, 1, !dbg !4565
  %_8 = xor i64 %2, -1, !dbg !4566
  %len_rounded_up = and i64 %1, %_8, !dbg !4567
  store i64 %len_rounded_up, ptr %len_rounded_up.dbg.spill, align 8, !dbg !4567
  call void @llvm.dbg.declare(metadata ptr %len_rounded_up.dbg.spill, metadata !4538, metadata !DIExpression()), !dbg !4568
  store i64 %len_rounded_up, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !4554, metadata !DIExpression()), !dbg !4569
  store i64 %len, ptr %rhs.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i1, metadata !4557, metadata !DIExpression()), !dbg !4571
  %3 = sub i64 %len_rounded_up, %len, !dbg !4572
  ret i64 %3, !dbg !4573
}

; core::alloc::layout::Layout::from_size_alignment
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout19from_size_alignment17hb10d5172e43f2ff6E(i64 %size, i64 %align) unnamed_addr #1 !dbg !4574 {
start:
  %align.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, ptr %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !4592, metadata !DIExpression()), !dbg !4594
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !4593, metadata !DIExpression()), !dbg !4595
  store i64 %align, ptr %align.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !4596, metadata !DIExpression()), !dbg !4599
; call core::ptr::alignment::Alignment::as_usize
  %_4.i = call i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h83336db9ab22898bE(i64 %align) #17, !dbg !4601
  %_5.0.i = sub i64 %_4.i, 1, !dbg !4602
  %_5.1.i = icmp ult i64 %_4.i, 1, !dbg !4602
  %1 = call i1 @llvm.expect.i1(i1 %_5.1.i, i1 false), !dbg !4602
  br i1 %1, label %panic.i, label %bb2.i, !dbg !4602

bb2.i:                                            ; preds = %start
  %_6.0.i = sub i64 9223372036854775807, %_5.0.i, !dbg !4603
  %_6.1.i = icmp ult i64 9223372036854775807, %_5.0.i, !dbg !4603
  %2 = call i1 @llvm.expect.i1(i1 %_6.1.i, i1 false), !dbg !4603
  br i1 %2, label %panic1.i, label %_ZN4core5alloc6layout6Layout18max_size_for_align17hcea85426744c29b3E.exit, !dbg !4603

panic.i:                                          ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_d289cbc6d164b49a3dfa9a42cb95d879) #18, !dbg !4602
  unreachable, !dbg !4602

panic1.i:                                         ; preds = %bb2.i
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_ffdb42e83584bd7c10adfc72ce12eabe) #18, !dbg !4603
  unreachable, !dbg !4603

_ZN4core5alloc6layout6Layout18max_size_for_align17hcea85426744c29b3E.exit: ; preds = %bb2.i
  %_3 = icmp ugt i64 %size, %_6.0.i, !dbg !4604
  br i1 %_3, label %bb2, label %bb3, !dbg !4604

bb3:                                              ; preds = %_ZN4core5alloc6layout6Layout18max_size_for_align17hcea85426744c29b3E.exit
  store i64 %size, ptr %_6, align 8, !dbg !4605
  %3 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4605
  store i64 %align, ptr %3, align 8, !dbg !4605
  %4 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !4606
  %5 = load i64, ptr %4, align 8, !dbg !4606, !noundef !45
  %6 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !4606
  %7 = load i64, ptr %6, align 8, !dbg !4606, !range !1362, !noundef !45
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4606
  store i64 %5, ptr %8, align 8, !dbg !4606
  %9 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4606
  store i64 %7, ptr %9, align 8, !dbg !4606
  br label %bb4, !dbg !4607

bb2:                                              ; preds = %_ZN4core5alloc6layout6Layout18max_size_for_align17hcea85426744c29b3E.exit
  %10 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4608
  store i64 0, ptr %10, align 8, !dbg !4608
  br label %bb4, !dbg !4607

bb4:                                              ; preds = %bb3, %bb2
  %11 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4607
  %12 = load i64, ptr %11, align 8, !dbg !4607
  %13 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4607
  %14 = load i64, ptr %13, align 8, !dbg !4607, !range !1009, !noundef !45
  %15 = insertvalue { i64, i64 } undef, i64 %12, 0, !dbg !4607
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !4607
  ret { i64, i64 } %16, !dbg !4607
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE(i64 %size, i64 %align) unnamed_addr #1 !dbg !4609 {
start:
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, ptr %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !4613, metadata !DIExpression()), !dbg !4615
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !4614, metadata !DIExpression()), !dbg !4616
; call core::ptr::alignment::Alignment::new_unchecked
  %_3 = call i64 @_ZN4core3ptr9alignment9Alignment13new_unchecked17he86b18bd5fec2cb9E(i64 %align) #17, !dbg !4617, !range !1362
  store i64 %size, ptr %0, align 8, !dbg !4618
  %1 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4618
  store i64 %_3, ptr %1, align 8, !dbg !4618
  %2 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4619
  %3 = load i64, ptr %2, align 8, !dbg !4619, !noundef !45
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4619
  %5 = load i64, ptr %4, align 8, !dbg !4619, !range !1362, !noundef !45
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !4619
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !4619
  ret { i64, i64 } %7, !dbg !4619
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h3e89a21e3a03b808E() unnamed_addr #1 !dbg !4620 {
start:
  %align.dbg.spill = alloca i64, align 8, !dbg !4627
  %size.dbg.spill = alloca i64, align 8, !dbg !4627
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h637d3bcd890a4515E() #17, !dbg !4627
  %_3.0 = extractvalue { i64, i64 } %0, 0, !dbg !4627
  %_3.1 = extractvalue { i64, i64 } %0, 1, !dbg !4627
  store i64 %_3.0, ptr %size.dbg.spill, align 8, !dbg !4628
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !4624, metadata !DIExpression()), !dbg !4629
  store i64 %_3.1, ptr %align.dbg.spill, align 8, !dbg !4630
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !4626, metadata !DIExpression()), !dbg !4631
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE(i64 %_3.0, i64 %_3.1) #17, !dbg !4632
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !4632
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !4632
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !4633
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !4633
  ret { i64, i64 } %5, !dbg !4633
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h567bd363ed49f0d2E() unnamed_addr #1 !dbg !4634 {
start:
  %align.dbg.spill = alloca i64, align 8, !dbg !4639
  %size.dbg.spill = alloca i64, align 8, !dbg !4639
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h71e1de6cc74e16b0E() #17, !dbg !4639
  %_3.0 = extractvalue { i64, i64 } %0, 0, !dbg !4639
  %_3.1 = extractvalue { i64, i64 } %0, 1, !dbg !4639
  store i64 %_3.0, ptr %size.dbg.spill, align 8, !dbg !4640
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !4636, metadata !DIExpression()), !dbg !4641
  store i64 %_3.1, ptr %align.dbg.spill, align 8, !dbg !4642
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !4638, metadata !DIExpression()), !dbg !4643
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE(i64 %_3.0, i64 %_3.1) #17, !dbg !4644
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !4644
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !4644
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !4645
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !4645
  ret { i64, i64 } %5, !dbg !4645
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %self) unnamed_addr #1 !dbg !4646 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4650, metadata !DIExpression()), !dbg !4651
  %0 = load i64, ptr %self, align 8, !dbg !4652, !noundef !45
  ret i64 %0, !dbg !4653
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %self) unnamed_addr #1 !dbg !4654 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4656, metadata !DIExpression()), !dbg !4657
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4658
  %_2 = load i64, ptr %0, align 8, !dbg !4658, !range !1362, !noundef !45
; call core::ptr::alignment::Alignment::as_usize
  %1 = call i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h83336db9ab22898bE(i64 %_2) #17, !dbg !4658
  ret i64 %1, !dbg !4659
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h7f5629849fc914bdE(i64 %n) unnamed_addr #1 !dbg !4660 {
start:
  %n.dbg.spill = alloca i64, align 8
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !4664, metadata !DIExpression()), !dbg !4665
; call core::ptr::alignment::Alignment::of
  %_3 = call i64 @_ZN4core3ptr9alignment9Alignment2of17hd5f0d848ab7e7b8fE() #17, !dbg !4666, !range !1362
; call core::alloc::layout::Layout::array::inner
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17he6d70d3d35d2d108E(i64 1, i64 %_3, i64 %n) #17, !dbg !4667
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !4667
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !4667
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !4668
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !4668
  ret { i64, i64 } %4, !dbg !4668
}

; core::alloc::layout::Layout::array::inner
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17he6d70d3d35d2d108E(i64 %element_size, i64 %align, i64 %n) unnamed_addr #1 !dbg !4669 {
start:
  %align.dbg.spill.i = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %element_size.dbg.spill = alloca i64, align 8
  %_4 = alloca i8, align 1
  %0 = alloca { i64, i64 }, align 8
  store i64 %element_size, ptr %element_size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %element_size.dbg.spill, metadata !4675, metadata !DIExpression()), !dbg !4680
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !4676, metadata !DIExpression()), !dbg !4681
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !4677, metadata !DIExpression()), !dbg !4682
  %1 = icmp eq i64 %element_size, 0, !dbg !4683
  br i1 %1, label %bb1, label %bb2, !dbg !4683

bb1:                                              ; preds = %start
  store i8 0, ptr %_4, align 1, !dbg !4683
  br label %bb3, !dbg !4683

bb2:                                              ; preds = %start
  store i64 %align, ptr %align.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill.i, metadata !4596, metadata !DIExpression()), !dbg !4684
; call core::ptr::alignment::Alignment::as_usize
  %_4.i = call i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h83336db9ab22898bE(i64 %align) #17, !dbg !4686
  %_5.0.i = sub i64 %_4.i, 1, !dbg !4687
  %_5.1.i = icmp ult i64 %_4.i, 1, !dbg !4687
  %2 = call i1 @llvm.expect.i1(i1 %_5.1.i, i1 false), !dbg !4687
  br i1 %2, label %panic.i, label %bb2.i, !dbg !4687

bb2.i:                                            ; preds = %bb2
  %_6.0.i = sub i64 9223372036854775807, %_5.0.i, !dbg !4688
  %_6.1.i = icmp ult i64 9223372036854775807, %_5.0.i, !dbg !4688
  %3 = call i1 @llvm.expect.i1(i1 %_6.1.i, i1 false), !dbg !4688
  br i1 %3, label %panic1.i, label %_ZN4core5alloc6layout6Layout18max_size_for_align17hcea85426744c29b3E.exit, !dbg !4688

panic.i:                                          ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_d289cbc6d164b49a3dfa9a42cb95d879) #18, !dbg !4687
  unreachable, !dbg !4687

panic1.i:                                         ; preds = %bb2.i
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_ffdb42e83584bd7c10adfc72ce12eabe) #18, !dbg !4688
  unreachable, !dbg !4688

_ZN4core5alloc6layout6Layout18max_size_for_align17hcea85426744c29b3E.exit: ; preds = %bb2.i
  %_8 = icmp eq i64 %element_size, 0, !dbg !4689
  %4 = call i1 @llvm.expect.i1(i1 %_8, i1 false), !dbg !4689
  br i1 %4, label %panic, label %bb5, !dbg !4689

bb5:                                              ; preds = %_ZN4core5alloc6layout6Layout18max_size_for_align17hcea85426744c29b3E.exit
  %_6 = udiv i64 %_6.0.i, %element_size, !dbg !4689
  %_5 = icmp ugt i64 %n, %_6, !dbg !4690
  %5 = zext i1 %_5 to i8, !dbg !4683
  store i8 %5, ptr %_4, align 1, !dbg !4683
  br label %bb3, !dbg !4683

panic:                                            ; preds = %_ZN4core5alloc6layout6Layout18max_size_for_align17hcea85426744c29b3E.exit
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.5, i64 25, ptr align 8 @alloc_02f45c5ccc7b81d3bde0290dbb9a392f) #18, !dbg !4689
  unreachable, !dbg !4689

bb3:                                              ; preds = %bb1, %bb5
  %6 = load i8, ptr %_4, align 1, !dbg !4683, !range !673, !noundef !45
  %7 = trunc i8 %6 to i1, !dbg !4683
  br i1 %7, label %bb6, label %bb7, !dbg !4683

bb7:                                              ; preds = %bb3
  %8 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %element_size, i64 %n), !dbg !4691
  %_11.0 = extractvalue { i64, i1 } %8, 0, !dbg !4691
  %_11.1 = extractvalue { i64, i1 } %8, 1, !dbg !4691
  %9 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !4691
  br i1 %9, label %panic1, label %bb8, !dbg !4691

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4692
  store i64 0, ptr %10, align 8, !dbg !4692
  br label %bb11, !dbg !4693

bb11:                                             ; preds = %bb8, %bb6
  %11 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4693
  %12 = load i64, ptr %11, align 8, !dbg !4693
  %13 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4693
  %14 = load i64, ptr %13, align 8, !dbg !4693, !range !1009, !noundef !45
  %15 = insertvalue { i64, i64 } undef, i64 %12, 0, !dbg !4693
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !4693
  ret { i64, i64 } %16, !dbg !4693

bb8:                                              ; preds = %bb7
  store i64 %_11.0, ptr %array_size.dbg.spill, align 8, !dbg !4691
  call void @llvm.dbg.declare(metadata ptr %array_size.dbg.spill, metadata !4678, metadata !DIExpression()), !dbg !4694
; call core::ptr::alignment::Alignment::as_usize
  %_13 = call i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h83336db9ab22898bE(i64 %align) #17, !dbg !4695
; call core::alloc::layout::Layout::from_size_align_unchecked
  %17 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE(i64 %_11.0, i64 %_13) #17, !dbg !4696
  %_12.0 = extractvalue { i64, i64 } %17, 0, !dbg !4696
  %_12.1 = extractvalue { i64, i64 } %17, 1, !dbg !4696
  %18 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !4697
  store i64 %_12.0, ptr %18, align 8, !dbg !4697
  %19 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !4697
  store i64 %_12.1, ptr %19, align 8, !dbg !4697
  br label %bb11, !dbg !4693

panic1:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 33, ptr align 8 @alloc_b3e3a8f01e57ea89155914a5657b3d48) #18, !dbg !4691
  unreachable, !dbg !4691
}

; core::alloc::layout::Layout::extend
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core5alloc6layout6Layout6extend17hf1cb85f7a69e01e3E(ptr sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") %0, ptr align 8 %self, i64 %1, i64 %2) unnamed_addr #1 !dbg !4698 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %offset.dbg.spill = alloca i64, align 8
  %pad.dbg.spill = alloca i64, align 8
  %new_align.dbg.spill = alloca i64, align 8
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill1 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %self.dbg.spill = alloca ptr, align 8
  %_36 = alloca { { i64, i64 }, i64 }, align 8
  %_29 = alloca { i64, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_9 = alloca { i64, i64 }, align 8
  %next = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %next, i32 0, i32 0
  store i64 %1, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %next, i32 0, i32 1
  store i64 %2, ptr %4, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4702, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.declare(metadata ptr %next, metadata !4703, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !4710, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill1, metadata !4716, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill2, metadata !4722, metadata !DIExpression()), !dbg !4730
  %5 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !4731
  %_4 = load i64, ptr %5, align 8, !dbg !4731, !range !1362, !noundef !45
  %6 = getelementptr inbounds { i64, i64 }, ptr %next, i32 0, i32 1, !dbg !4732
  %_5 = load i64, ptr %6, align 8, !dbg !4732, !range !1362, !noundef !45
; call core::cmp::max
  %new_align = call i64 @_ZN4core3cmp3max17ha1686a90d4959293E(i64 %_4, i64 %_5) #17, !dbg !4733, !range !1362
  store i64 %new_align, ptr %new_align.dbg.spill, align 8, !dbg !4733
  call void @llvm.dbg.declare(metadata ptr %new_align.dbg.spill, metadata !4704, metadata !DIExpression()), !dbg !4734
; call core::alloc::layout::Layout::align
  %_7 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %next) #17, !dbg !4735
; call core::alloc::layout::Layout::padding_needed_for
  %pad = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17h241b8d0e7f2d8864E(ptr align 8 %self, i64 %_7) #17, !dbg !4736
  store i64 %pad, ptr %pad.dbg.spill, align 8, !dbg !4736
  call void @llvm.dbg.declare(metadata ptr %pad.dbg.spill, metadata !4706, metadata !DIExpression()), !dbg !4737
; call core::alloc::layout::Layout::size
  %_12 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %self) #17, !dbg !4738
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %_12, i64 %pad) #17, !dbg !4738
  %_11.0 = extractvalue { i64, i64 } %7, 0, !dbg !4738
  %_11.1 = extractvalue { i64, i64 } %7, 1, !dbg !4738
; call core::option::Option<T>::ok_or
  %8 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hf1ea23987e18f8baE"(i64 %_11.0, i64 %_11.1) #17, !dbg !4738
  %_10.0 = extractvalue { i64, i64 } %8, 0, !dbg !4738
  %_10.1 = extractvalue { i64, i64 } %8, 1, !dbg !4738
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %9 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5a020fd026a170c9E"(i64 %_10.0, i64 %_10.1) #17, !dbg !4738
  store { i64, i64 } %9, ptr %_9, align 8, !dbg !4738
  %_15 = load i64, ptr %_9, align 8, !dbg !4738, !range !1797, !noundef !45
  %10 = icmp eq i64 %_15, 0, !dbg !4738
  br i1 %10, label %bb8, label %bb10, !dbg !4738

bb8:                                              ; preds = %start
  %11 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 1, !dbg !4738
  %offset = load i64, ptr %11, align 8, !dbg !4738, !noundef !45
  store i64 %offset, ptr %offset.dbg.spill, align 8, !dbg !4738
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !4708, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !4712, metadata !DIExpression()), !dbg !4740
; call core::alloc::layout::Layout::size
  %_22 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %next) #17, !dbg !4741
; call core::num::<impl usize>::checked_add
  %12 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %offset, i64 %_22) #17, !dbg !4742
  %_21.0 = extractvalue { i64, i64 } %12, 0, !dbg !4742
  %_21.1 = extractvalue { i64, i64 } %12, 1, !dbg !4742
; call core::option::Option<T>::ok_or
  %13 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hf1ea23987e18f8baE"(i64 %_21.0, i64 %_21.1) #17, !dbg !4742
  %_20.0 = extractvalue { i64, i64 } %13, 0, !dbg !4742
  %_20.1 = extractvalue { i64, i64 } %13, 1, !dbg !4742
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %14 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5a020fd026a170c9E"(i64 %_20.0, i64 %_20.1) #17, !dbg !4742
  store { i64, i64 } %14, ptr %_19, align 8, !dbg !4742
  %_25 = load i64, ptr %_19, align 8, !dbg !4742, !range !1797, !noundef !45
  %15 = icmp eq i64 %_25, 0, !dbg !4742
  br i1 %15, label %bb15, label %bb17, !dbg !4742

bb10:                                             ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h73bf25d0b11c1868E"(ptr sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") %0, ptr align 8 @alloc_167d287dd54ac614eda347c3c2d978e2) #17, !dbg !4743
  br label %bb23, !dbg !4743

bb9:                                              ; No predecessors!
  unreachable, !dbg !4738

bb23:                                             ; preds = %bb20, %bb22, %bb17, %bb10
  ret void, !dbg !4744

bb15:                                             ; preds = %bb8
  %16 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !4742
  %new_size = load i64, ptr %16, align 8, !dbg !4742, !noundef !45
  store i64 %new_size, ptr %new_size.dbg.spill, align 8, !dbg !4742
  call void @llvm.dbg.declare(metadata ptr %new_size.dbg.spill, metadata !4714, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.declare(metadata ptr %new_size.dbg.spill, metadata !4718, metadata !DIExpression()), !dbg !4746
; call core::alloc::layout::Layout::from_size_alignment
  %17 = call { i64, i64 } @_ZN4core5alloc6layout6Layout19from_size_alignment17hb10d5172e43f2ff6E(i64 %new_size, i64 %new_align) #17, !dbg !4747
  %_30.0 = extractvalue { i64, i64 } %17, 0, !dbg !4747
  %_30.1 = extractvalue { i64, i64 } %17, 1, !dbg !4747
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %18 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5c5715714b30109aE"(i64 %_30.0, i64 %_30.1) #17, !dbg !4747
  store { i64, i64 } %18, ptr %_29, align 8, !dbg !4747
  %19 = getelementptr inbounds { i64, i64 }, ptr %_29, i32 0, i32 1, !dbg !4747
  %20 = load i64, ptr %19, align 8, !dbg !4747, !range !1009, !noundef !45
  %21 = icmp eq i64 %20, 0, !dbg !4747
  %_32 = select i1 %21, i64 1, i64 0, !dbg !4747
  %22 = icmp eq i64 %_32, 0, !dbg !4747
  br i1 %22, label %bb20, label %bb22, !dbg !4747

bb17:                                             ; preds = %bb8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h73bf25d0b11c1868E"(ptr sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") %0, ptr align 8 @alloc_1a3da72cf886500b2d934766a7a1d062) #17, !dbg !4748
  br label %bb23, !dbg !4748

bb16:                                             ; No predecessors!
  unreachable, !dbg !4742

bb20:                                             ; preds = %bb15
  %23 = getelementptr inbounds { i64, i64 }, ptr %_29, i32 0, i32 0, !dbg !4747
  %layout.0 = load i64, ptr %23, align 8, !dbg !4747, !noundef !45
  %24 = getelementptr inbounds { i64, i64 }, ptr %_29, i32 0, i32 1, !dbg !4747
  %layout.1 = load i64, ptr %24, align 8, !dbg !4747, !range !1362, !noundef !45
  %25 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0, !dbg !4747
  store i64 %layout.0, ptr %25, align 8, !dbg !4747
  %26 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1, !dbg !4747
  store i64 %layout.1, ptr %26, align 8, !dbg !4747
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !4720, metadata !DIExpression()), !dbg !4749
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !4724, metadata !DIExpression()), !dbg !4750
  %27 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 0, !dbg !4751
  store i64 %layout.0, ptr %27, align 8, !dbg !4751
  %28 = getelementptr inbounds { i64, i64 }, ptr %_36, i32 0, i32 1, !dbg !4751
  store i64 %layout.1, ptr %28, align 8, !dbg !4751
  %29 = getelementptr inbounds { { i64, i64 }, i64 }, ptr %_36, i32 0, i32 1, !dbg !4751
  store i64 %offset, ptr %29, align 8, !dbg !4751
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_36, i64 24, i1 false), !dbg !4752
  br label %bb23, !dbg !4744

bb22:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h73bf25d0b11c1868E"(ptr sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") %0, ptr align 8 @alloc_7322928140fdc03ddb6b2ef2e6fddfc3) #17, !dbg !4753
  br label %bb23, !dbg !4753

bb21:                                             ; No predecessors!
  unreachable, !dbg !4747
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN4core5alloc6layout6Layout8dangling17h70829427c732de9cE(ptr align 8 %self) unnamed_addr #1 !dbg !4754 {
start:
  %0 = alloca ptr, align 8
  %addr.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4758, metadata !DIExpression()), !dbg !4759
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %self) #17, !dbg !4760
  store i64 %_3, ptr %addr.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %addr.dbg.spill.i, metadata !3101, metadata !DIExpression()), !dbg !4761
  store i64 %_3, ptr %0, align 8, !dbg !4763
  %1 = load ptr, ptr %0, align 8, !dbg !4763, !noundef !45
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9eb1d87c9d7b337eE"(ptr %1) #17, !dbg !4764
  ret ptr %2, !dbg !4765
}

; core::error::Error::cause
; Function Attrs: noredzone nounwind
define { ptr, ptr } @_ZN4core5error5Error5cause17h4f3413bed4738be7E(ptr align 8 %self) unnamed_addr #0 !dbg !4766 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4792, metadata !DIExpression()), !dbg !4795
; call core::error::Error::source
  %0 = call { ptr, ptr } @_ZN4core5error5Error6source17h8d69b3ad77d08327E(ptr align 8 %self) #17, !dbg !4796
  %1 = extractvalue { ptr, ptr } %0, 0, !dbg !4796
  %2 = extractvalue { ptr, ptr } %0, 1, !dbg !4796
  %3 = insertvalue { ptr, ptr } undef, ptr %1, 0, !dbg !4797
  %4 = insertvalue { ptr, ptr } %3, ptr %2, 1, !dbg !4797
  ret { ptr, ptr } %4, !dbg !4797
}

; core::error::Error::cause
; Function Attrs: noredzone nounwind
define { ptr, ptr } @_ZN4core5error5Error5cause17h7571e2326d752b49E(ptr align 8 %self) unnamed_addr #0 !dbg !4798 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4803, metadata !DIExpression()), !dbg !4806
; call core::error::Error::source
  %0 = call { ptr, ptr } @_ZN4core5error5Error6source17h64834ca2e701851dE(ptr align 8 %self) #17, !dbg !4807
  %1 = extractvalue { ptr, ptr } %0, 0, !dbg !4807
  %2 = extractvalue { ptr, ptr } %0, 1, !dbg !4807
  %3 = insertvalue { ptr, ptr } undef, ptr %1, 0, !dbg !4808
  %4 = insertvalue { ptr, ptr } %3, ptr %2, 1, !dbg !4808
  ret { ptr, ptr } %4, !dbg !4808
}

; core::error::Error::source
; Function Attrs: noredzone nounwind
define { ptr, ptr } @_ZN4core5error5Error6source17h64834ca2e701851dE(ptr align 8 %self) unnamed_addr #0 !dbg !4809 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4811, metadata !DIExpression()), !dbg !4812
  store ptr null, ptr %0, align 8, !dbg !4813
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4814
  %2 = load ptr, ptr %1, align 8, !dbg !4814, !align !643, !noundef !45
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4814
  %4 = load ptr, ptr %3, align 8, !dbg !4814
  %5 = insertvalue { ptr, ptr } undef, ptr %2, 0, !dbg !4814
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !4814
  ret { ptr, ptr } %6, !dbg !4814
}

; core::error::Error::source
; Function Attrs: noredzone nounwind
define { ptr, ptr } @_ZN4core5error5Error6source17h8d69b3ad77d08327E(ptr align 8 %self) unnamed_addr #0 !dbg !4815 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4817, metadata !DIExpression()), !dbg !4818
  store ptr null, ptr %0, align 8, !dbg !4819
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !4820
  %2 = load ptr, ptr %1, align 8, !dbg !4820, !align !643, !noundef !45
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !4820
  %4 = load ptr, ptr %3, align 8, !dbg !4820
  %5 = insertvalue { ptr, ptr } undef, ptr %2, 0, !dbg !4820
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !4820
  ret { ptr, ptr } %6, !dbg !4820
}

; core::error::Error::provide
; Function Attrs: noredzone nounwind
define void @_ZN4core5error5Error7provide17h0facdcbdc4ed310dE(ptr align 8 %self, ptr align 1 %demand.0, ptr align 8 %demand.1) unnamed_addr #0 !dbg !4821 {
start:
  %demand.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4834, metadata !DIExpression()), !dbg !4836
  %0 = getelementptr inbounds { ptr, ptr }, ptr %demand.dbg.spill, i32 0, i32 0
  store ptr %demand.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %demand.dbg.spill, i32 0, i32 1
  store ptr %demand.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %demand.dbg.spill, metadata !4835, metadata !DIExpression()), !dbg !4837
  ret void, !dbg !4838
}

; core::error::Error::provide
; Function Attrs: noredzone nounwind
define void @_ZN4core5error5Error7provide17h9ded8b4725c23ab2E(ptr align 8 %self, ptr align 1 %demand.0, ptr align 8 %demand.1) unnamed_addr #0 !dbg !4839 {
start:
  %demand.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4843, metadata !DIExpression()), !dbg !4845
  %0 = getelementptr inbounds { ptr, ptr }, ptr %demand.dbg.spill, i32 0, i32 0
  store ptr %demand.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %demand.dbg.spill, i32 0, i32 1
  store ptr %demand.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %demand.dbg.spill, metadata !4844, metadata !DIExpression()), !dbg !4846
  ret void, !dbg !4847
}

; core::error::Error::type_id
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5error5Error7type_id17h45fb35de5050bdc5E(ptr align 8 %self) unnamed_addr #0 !dbg !4848 {
start:
  %_2.dbg.spill = alloca %"core::error::private::Internal", align 1
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4854, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !4855, metadata !DIExpression()), !dbg !4857
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17hc5927e1264113188E() #17, !dbg !4858
  ret i64 %0, !dbg !4859
}

; core::error::Error::type_id
; Function Attrs: noredzone nounwind
define i64 @_ZN4core5error5Error7type_id17h5b316b3835b36a28E(ptr align 8 %self) unnamed_addr #0 !dbg !4860 {
start:
  %_2.dbg.spill = alloca %"core::error::private::Internal", align 1
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4864, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !4865, metadata !DIExpression()), !dbg !4867
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17haa644bb0c23b4121E() #17, !dbg !4868
  ret i64 %0, !dbg !4869
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h448cf53dade18bf3E"(ptr align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1) unnamed_addr #1 !dbg !4870 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4876, metadata !DIExpression()), !dbg !4880
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4877, metadata !DIExpression()), !dbg !4881
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h04e1b965a6a86275E"(i64 %index.0, i64 %index.1, ptr %self.0, i64 %self.1) #17, !dbg !4882
  %_3.0 = extractvalue { ptr, i64 } %4, 0, !dbg !4882
  %_3.1 = extractvalue { ptr, i64 } %4, 1, !dbg !4882
  %5 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !4883
  %6 = insertvalue { ptr, i64 } %5, i64 %_3.1, 1, !dbg !4883
  ret { ptr, i64 } %6, !dbg !4883
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h3f0ce64aec9622b2E"(ptr align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 !dbg !4884 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4888, metadata !DIExpression()), !dbg !4892
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4889, metadata !DIExpression()), !dbg !4893
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1df41719abeb19a3E"(i64 %index, ptr %self.0, i64 %self.1) #17, !dbg !4894
  ret ptr %_3, !dbg !4895
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h641f73b43a551cdeE"(ptr align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 !dbg !4896 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4905, metadata !DIExpression()), !dbg !4908
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4906, metadata !DIExpression()), !dbg !4909
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hfc5adc511c706331E"(i64 %index, ptr %self.0, i64 %self.1) #17, !dbg !4910
  ret ptr %_3, !dbg !4911
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hb2446c878806870fE"(ptr align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1) unnamed_addr #1 !dbg !4912 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4916, metadata !DIExpression()), !dbg !4919
  %2 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !4917, metadata !DIExpression()), !dbg !4920
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %4 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h300f550249475dfbE"(i64 %index.0, i64 %index.1, ptr %self.0, i64 %self.1) #17, !dbg !4921
  %_3.0 = extractvalue { ptr, i64 } %4, 0, !dbg !4921
  %_3.1 = extractvalue { ptr, i64 } %4, 1, !dbg !4921
  %5 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !4922
  %6 = insertvalue { ptr, i64 } %5, i64 %_3.1, 1, !dbg !4922
  ret { ptr, i64 } %6, !dbg !4922
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h30532b1325b0eddbE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #1 !dbg !4923 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4927, metadata !DIExpression()), !dbg !4930
  %2 = icmp eq i64 %self.1, 0, !dbg !4931
  ret i1 %2, !dbg !4932
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hf05a1983d0ea83a1E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #1 !dbg !4933 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !4937, metadata !DIExpression()), !dbg !4938
  %2 = icmp eq i64 %self.1, 0, !dbg !4939
  ret i1 %2, !dbg !4940
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h30c1ee3fd8e53edbE(ptr %data, i64 %len) unnamed_addr #1 !dbg !4941 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !4951, metadata !DIExpression()), !dbg !4953
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !4952, metadata !DIExpression()), !dbg !4954
  store ptr %data, ptr %_4, align 8, !dbg !4955
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !4955
  store i64 %len, ptr %0, align 8, !dbg !4955
  %1 = load ptr, ptr %_4, align 8, !dbg !4955, !noundef !45
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !4955
  %3 = load i64, ptr %2, align 8, !dbg !4955, !noundef !45
  store ptr %1, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !4956, metadata !DIExpression()), !dbg !4963
  store i64 %3, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !4962, metadata !DIExpression()), !dbg !4963
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h0189270e9eeaa4eaE(ptr %1) #17, !dbg !4965
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !4965

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !4965
  br label %bb3.i, !dbg !4965

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_valid_allocation_size
  %_7.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17h0e1d3c87edc4155dE(i64 %3) #17, !dbg !4967
  %4 = zext i1 %_7.i to i8, !dbg !4965
  store i8 %4, ptr %_4.i, align 1, !dbg !4965
  br label %bb3.i, !dbg !4965

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !4968, !range !673, !noundef !45
  %6 = trunc i8 %5 to i1, !dbg !4968
  %_3.i = xor i1 %6, true, !dbg !4968
  br i1 %_3.i, label %bb6.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17h038edde8e8e8854cE.exit, !dbg !4968

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_eb29d283dadbfac1e0da90551ac8d261, i64 166) #18, !dbg !4969
  unreachable, !dbg !4969

_ZN4core5slice3raw18from_raw_parts_mut7runtime17h038edde8e8e8854cE.exit: ; preds = %bb3.i
; call core::ptr::slice_from_raw_parts_mut
  %7 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h853ec850d3fc3d0cE(ptr %data, i64 %len) #17, !dbg !4970
  %_5.0 = extractvalue { ptr, i64 } %7, 0, !dbg !4970
  %_5.1 = extractvalue { ptr, i64 } %7, 1, !dbg !4970
  %8 = insertvalue { ptr, i64 } undef, ptr %_5.0, 0, !dbg !4971
  %9 = insertvalue { ptr, i64 } %8, i64 %_5.1, 1, !dbg !4971
  ret { ptr, i64 } %9, !dbg !4971
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h7c6310f89568fcfdE(ptr %data, i64 %len) unnamed_addr #1 !dbg !4972 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !4976, metadata !DIExpression()), !dbg !4978
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !4977, metadata !DIExpression()), !dbg !4979
  store ptr %data, ptr %_4, align 8, !dbg !4980
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !4980
  store i64 %len, ptr %0, align 8, !dbg !4980
  %1 = load ptr, ptr %_4, align 8, !dbg !4980, !noundef !45
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !4980
  %3 = load i64, ptr %2, align 8, !dbg !4980, !noundef !45
  store ptr %1, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !4981, metadata !DIExpression()), !dbg !4987
  store i64 %3, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !4986, metadata !DIExpression()), !dbg !4987
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h8639f8001f0eeb5aE(ptr %1) #17, !dbg !4989
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !4989

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !4989
  br label %bb3.i, !dbg !4989

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_valid_allocation_size
  %_7.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17h1a9eb85667d98e4bE(i64 %3) #17, !dbg !4991
  %4 = zext i1 %_7.i to i8, !dbg !4989
  store i8 %4, ptr %_4.i, align 1, !dbg !4989
  br label %bb3.i, !dbg !4989

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !4992, !range !673, !noundef !45
  %6 = trunc i8 %5 to i1, !dbg !4992
  %_3.i = xor i1 %6, true, !dbg !4992
  br i1 %_3.i, label %bb6.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17hee436a42c256032cE.exit, !dbg !4992

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_eb29d283dadbfac1e0da90551ac8d261, i64 166) #18, !dbg !4993
  unreachable, !dbg !4993

_ZN4core5slice3raw18from_raw_parts_mut7runtime17hee436a42c256032cE.exit: ; preds = %bb3.i
; call core::ptr::slice_from_raw_parts_mut
  %7 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hf71777480862c3a6E(ptr %data, i64 %len) #17, !dbg !4994
  %_5.0 = extractvalue { ptr, i64 } %7, 0, !dbg !4994
  %_5.1 = extractvalue { ptr, i64 } %7, 1, !dbg !4994
  %8 = insertvalue { ptr, i64 } undef, ptr %_5.0, 0, !dbg !4995
  %9 = insertvalue { ptr, i64 } %8, i64 %_5.1, 1, !dbg !4995
  ret { ptr, i64 } %9, !dbg !4995
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h9e0de942ef190a92E(ptr %data, i64 %len) unnamed_addr #1 !dbg !4996 {
start:
  %len.dbg.spill.i = alloca i64, align 8
  %data.dbg.spill.i = alloca ptr, align 8
  %_4.i = alloca i8, align 1
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca ptr, align 8
  %_4 = alloca { ptr, i64 }, align 8
  store ptr %data, ptr %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill, metadata !5001, metadata !DIExpression()), !dbg !5003
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !5002, metadata !DIExpression()), !dbg !5004
  store ptr %data, ptr %_4, align 8, !dbg !5005
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !5005
  store i64 %len, ptr %0, align 8, !dbg !5005
  %1 = load ptr, ptr %_4, align 8, !dbg !5005, !noundef !45
  %2 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !5005
  %3 = load i64, ptr %2, align 8, !dbg !5005, !noundef !45
  store ptr %1, ptr %data.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %data.dbg.spill.i, metadata !5006, metadata !DIExpression()), !dbg !5012
  store i64 %3, ptr %len.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill.i, metadata !5011, metadata !DIExpression()), !dbg !5012
; call core::intrinsics::is_aligned_and_not_null
  %_5.i = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h906283959d1dc186E(ptr %1) #17, !dbg !5014
  br i1 %_5.i, label %bb2.i, label %bb1.i, !dbg !5014

bb1.i:                                            ; preds = %start
  store i8 0, ptr %_4.i, align 1, !dbg !5014
  br label %bb3.i, !dbg !5014

bb2.i:                                            ; preds = %start
; call core::intrinsics::is_valid_allocation_size
  %_7.i = call zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17ha2af378f09d1ecedE(i64 %3) #17, !dbg !5016
  %4 = zext i1 %_7.i to i8, !dbg !5014
  store i8 %4, ptr %_4.i, align 1, !dbg !5014
  br label %bb3.i, !dbg !5014

bb3.i:                                            ; preds = %bb2.i, %bb1.i
  %5 = load i8, ptr %_4.i, align 1, !dbg !5017, !range !673, !noundef !45
  %6 = trunc i8 %5 to i1, !dbg !5017
  %_3.i = xor i1 %6, true, !dbg !5017
  br i1 %_3.i, label %bb6.i, label %_ZN4core5slice3raw18from_raw_parts_mut7runtime17hc80df4dca38100f2E.exit, !dbg !5017

bb6.i:                                            ; preds = %bb3.i
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_eb29d283dadbfac1e0da90551ac8d261, i64 166) #18, !dbg !5018
  unreachable, !dbg !5018

_ZN4core5slice3raw18from_raw_parts_mut7runtime17hc80df4dca38100f2E.exit: ; preds = %bb3.i
; call core::ptr::slice_from_raw_parts_mut
  %7 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha38f20e9e0c3bd6dE(ptr %data, i64 %len) #17, !dbg !5019
  %_5.0 = extractvalue { ptr, i64 } %7, 0, !dbg !5019
  %_5.1 = extractvalue { ptr, i64 } %7, 1, !dbg !5019
  %8 = insertvalue { ptr, i64 } undef, ptr %_5.0, 0, !dbg !5020
  %9 = insertvalue { ptr, i64 } %8, i64 %_5.1, 1, !dbg !5020
  ret { ptr, i64 } %9, !dbg !5020
}

; core::slice::index::range
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN4core5slice5index5range17h2ac62bcd5c2d856eE(i64 %0, i64 %1, i64 %bounds, ptr align 8 %2) unnamed_addr #0 !dbg !5021 {
start:
  %end.dbg.spill9 = alloca ptr, align 8
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill6 = alloca i64, align 8
  %start.dbg.spill = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %bounds.dbg.spill = alloca i64, align 8
  %end3 = alloca i64, align 8
  %end = alloca { i64, ptr }, align 8
  %start2 = alloca i64, align 8
  %start1 = alloca { i64, ptr }, align 8
  %3 = alloca { i64, i64 }, align 8
  %range = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %range, i32 0, i32 0
  store i64 %0, ptr %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, ptr %range, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %range, metadata !5030, metadata !DIExpression()), !dbg !5067
  store i64 %bounds, ptr %bounds.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %bounds.dbg.spill, metadata !5031, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.declare(metadata ptr %start1, metadata !5034, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.declare(metadata ptr %start2, metadata !5051, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.declare(metadata ptr %end, metadata !5057, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.declare(metadata ptr %end3, metadata !5059, metadata !DIExpression()), !dbg !5072
  store i64 %bounds, ptr %len.dbg.spill, align 8, !dbg !5073
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !5032, metadata !DIExpression()), !dbg !5074
; call <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound
  %6 = call { i64, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h41440c2060a192a3E"(ptr align 8 %range) #17, !dbg !5075
  store { i64, ptr } %6, ptr %start1, align 8, !dbg !5075
  %_7 = load i64, ptr %start1, align 8, !dbg !5076, !range !5077, !noundef !45
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
    i64 2, label %bb2
  ], !dbg !5078

bb3:                                              ; preds = %start
  unreachable, !dbg !5076

bb4:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, ptr }, ptr %start1, i32 0, i32 1, !dbg !5079
  %_34 = load ptr, ptr %7, align 8, !dbg !5079, !nonnull !45, !align !1159, !noundef !45
  %start5 = load i64, ptr %_34, align 8, !dbg !5079, !noundef !45
  store i64 %start5, ptr %start.dbg.spill6, align 8, !dbg !5079
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill6, metadata !5053, metadata !DIExpression()), !dbg !5080
  store i64 %start5, ptr %start2, align 8, !dbg !5081
  br label %bb7, !dbg !5082

bb5:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, ptr }, ptr %start1, i32 0, i32 1, !dbg !5083
  %start4 = load ptr, ptr %8, align 8, !dbg !5083, !nonnull !45, !align !1159, !noundef !45
  store ptr %start4, ptr %start.dbg.spill, align 8, !dbg !5083
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !5055, metadata !DIExpression()), !dbg !5084
  %_11 = load i64, ptr %start4, align 8, !dbg !5085, !noundef !45
; call core::num::<impl usize>::checked_add
  %9 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %_11, i64 1) #17, !dbg !5085
  %_10.0 = extractvalue { i64, i64 } %9, 0, !dbg !5085
  %_10.1 = extractvalue { i64, i64 } %9, 1, !dbg !5085
; call core::option::Option<T>::unwrap_or_else
  %10 = call i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hbfde16003b128d5fE"(i64 %_10.0, i64 %_10.1) #17, !dbg !5085
  store i64 %10, ptr %start2, align 8, !dbg !5085
  br label %bb7, !dbg !5085

bb2:                                              ; preds = %start
  store i64 0, ptr %start2, align 8, !dbg !5086
  br label %bb7, !dbg !5086

bb7:                                              ; preds = %bb4, %bb5, %bb2
; call <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound
  %11 = call { i64, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17h6273a30cf1c50dedE"(ptr align 8 %range) #17, !dbg !5087
  store { i64, ptr } %11, ptr %end, align 8, !dbg !5087
  %_16 = load i64, ptr %end, align 8, !dbg !5088, !range !5077, !noundef !45
  switch i64 %_16, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb13
    i64 2, label %bb9
  ], !dbg !5089

bb10:                                             ; preds = %bb7
  unreachable, !dbg !5088

bb11:                                             ; preds = %bb7
  %12 = getelementptr inbounds { i64, ptr }, ptr %end, i32 0, i32 1, !dbg !5090
  %end8 = load ptr, ptr %12, align 8, !dbg !5090, !nonnull !45, !align !1159, !noundef !45
  store ptr %end8, ptr %end.dbg.spill9, align 8, !dbg !5090
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill9, metadata !5061, metadata !DIExpression()), !dbg !5091
  %_19 = load i64, ptr %end8, align 8, !dbg !5092, !noundef !45
; call core::num::<impl usize>::checked_add
  %13 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %_19, i64 1) #17, !dbg !5092
  %_18.0 = extractvalue { i64, i64 } %13, 0, !dbg !5092
  %_18.1 = extractvalue { i64, i64 } %13, 1, !dbg !5092
; call core::option::Option<T>::unwrap_or_else
  %14 = call i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h860e43b924132f29E"(i64 %_18.0, i64 %_18.1) #17, !dbg !5092
  store i64 %14, ptr %end3, align 8, !dbg !5092
  br label %bb14, !dbg !5092

bb13:                                             ; preds = %bb7
  %15 = getelementptr inbounds { i64, ptr }, ptr %end, i32 0, i32 1, !dbg !5093
  %_35 = load ptr, ptr %15, align 8, !dbg !5093, !nonnull !45, !align !1159, !noundef !45
  %end7 = load i64, ptr %_35, align 8, !dbg !5093, !noundef !45
  store i64 %end7, ptr %end.dbg.spill, align 8, !dbg !5093
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !5063, metadata !DIExpression()), !dbg !5094
  store i64 %end7, ptr %end3, align 8, !dbg !5095
  br label %bb14, !dbg !5096

bb9:                                              ; preds = %bb7
  store i64 %bounds, ptr %end3, align 8, !dbg !5097
  br label %bb14, !dbg !5097

bb14:                                             ; preds = %bb11, %bb13, %bb9
  %_23 = load i64, ptr %start2, align 8, !dbg !5098, !noundef !45
  %_24 = load i64, ptr %end3, align 8, !dbg !5099, !noundef !45
  %_22 = icmp ugt i64 %_23, %_24, !dbg !5098
  br i1 %_22, label %bb15, label %bb16, !dbg !5098

bb16:                                             ; preds = %bb14
  %_29 = load i64, ptr %end3, align 8, !dbg !5100, !noundef !45
  %_28 = icmp ugt i64 %_29, %bounds, !dbg !5100
  br i1 %_28, label %bb17, label %bb18, !dbg !5100

bb15:                                             ; preds = %bb14
  %_26 = load i64, ptr %start2, align 8, !dbg !5101, !noundef !45
  %_27 = load i64, ptr %end3, align 8, !dbg !5102, !noundef !45
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h8c73cb10d9ab3329E(i64 %_26, i64 %_27, ptr align 8 %2) #18, !dbg !5103
  unreachable, !dbg !5103

bb18:                                             ; preds = %bb16
  %_32 = load i64, ptr %start2, align 8, !dbg !5104, !noundef !45
  %_33 = load i64, ptr %end3, align 8, !dbg !5105, !noundef !45
  store i64 %_32, ptr %3, align 8, !dbg !5106
  %16 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 1, !dbg !5106
  store i64 %_33, ptr %16, align 8, !dbg !5106
  %17 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 0, !dbg !5107
  %18 = load i64, ptr %17, align 8, !dbg !5107, !noundef !45
  %19 = getelementptr inbounds { i64, i64 }, ptr %3, i32 0, i32 1, !dbg !5107
  %20 = load i64, ptr %19, align 8, !dbg !5107, !noundef !45
  %21 = insertvalue { i64, i64 } undef, i64 %18, 0, !dbg !5107
  %22 = insertvalue { i64, i64 } %21, i64 %20, 1, !dbg !5107
  ret { i64, i64 } %22, !dbg !5107

bb17:                                             ; preds = %bb16
  %_31 = load i64, ptr %end3, align 8, !dbg !5108, !noundef !45
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h1cd0176f9202aacaE(i64 %_31, i64 %bounds, ptr align 8 %2) #18, !dbg !5109
  unreachable, !dbg !5109
}

; core::slice::index::range::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17hbbb94a70b5246ac5E"() unnamed_addr #1 !dbg !5110 {
start:
  %_1.dbg.spill = alloca %"[closure@core::slice::index::range<core::ops::range::Range<usize>>::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !5116, metadata !DIExpression()), !dbg !5117
; call core::slice::index::slice_start_index_overflow_fail
  call void @_ZN4core5slice5index31slice_start_index_overflow_fail17h3851c120c926e7fbE(ptr align 8 @alloc_f446e7ca7075308174dde43056e6eb22) #18, !dbg !5118
  unreachable, !dbg !5118
}

; core::slice::index::range::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17hdeeab8095d4c12c9E"() unnamed_addr #1 !dbg !5119 {
start:
  %_1.dbg.spill = alloca %"[closure@core::slice::index::range<core::ops::range::Range<usize>>::{closure#1}]", align 1
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !5124, metadata !DIExpression()), !dbg !5125
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17h17280eb0c6479a4dE(ptr align 8 @alloc_fed8e75dfeeff8c27eef651baf293b43) #18, !dbg !5126
  unreachable, !dbg !5126
}

; core::slice::memchr::memchr_naive
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17hc9a7344593c5a011E(i8 %x, ptr align 1 %text.0, i64 %text.1) unnamed_addr #1 !dbg !5127 {
start:
  %text.dbg.spill = alloca { ptr, i64 }, align 8
  %x.dbg.spill = alloca i8, align 1
  %i = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i8 %x, ptr %x.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !5133, metadata !DIExpression()), !dbg !5137
  %1 = getelementptr inbounds { ptr, i64 }, ptr %text.dbg.spill, i32 0, i32 0
  store ptr %text.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %text.dbg.spill, i32 0, i32 1
  store i64 %text.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %text.dbg.spill, metadata !5134, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.declare(metadata ptr %i, metadata !5135, metadata !DIExpression()), !dbg !5139
  store i64 0, ptr %i, align 8, !dbg !5140
  br label %bb1, !dbg !5141

bb1:                                              ; preds = %bb6, %start
  %_5 = load i64, ptr %i, align 8, !dbg !5142, !noundef !45
  %_4 = icmp ult i64 %_5, %text.1, !dbg !5142
  br i1 %_4, label %bb2, label %bb7, !dbg !5142

bb7:                                              ; preds = %bb1
  store i64 0, ptr %0, align 8, !dbg !5143
  br label %bb8, !dbg !5144

bb2:                                              ; preds = %bb1
  %_9 = load i64, ptr %i, align 8, !dbg !5145, !noundef !45
  %_11 = icmp ult i64 %_9, %text.1, !dbg !5146
  %3 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !5146
  br i1 %3, label %bb3, label %panic, !dbg !5146

bb3:                                              ; preds = %bb2
  %4 = getelementptr inbounds [0 x i8], ptr %text.0, i64 0, i64 %_9, !dbg !5146
  %_8 = load i8, ptr %4, align 1, !dbg !5146, !noundef !45
  %_7 = icmp eq i8 %_8, %x, !dbg !5146
  br i1 %_7, label %bb4, label %bb5, !dbg !5146

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64 %_9, i64 %text.1, ptr align 8 @alloc_7a6222c0398fdf1a39e96f26839bab7e) #18, !dbg !5146
  unreachable, !dbg !5146

bb5:                                              ; preds = %bb3
  %5 = load i64, ptr %i, align 8, !dbg !5147, !noundef !45
  %6 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 1), !dbg !5147
  %_13.0 = extractvalue { i64, i1 } %6, 0, !dbg !5147
  %_13.1 = extractvalue { i64, i1 } %6, 1, !dbg !5147
  %7 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !5147
  br i1 %7, label %panic1, label %bb6, !dbg !5147

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !5148, !noundef !45
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !5149
  store i64 %_12, ptr %8, align 8, !dbg !5149
  store i64 1, ptr %0, align 8, !dbg !5149
  br label %bb8, !dbg !5144

bb8:                                              ; preds = %bb7, %bb4
  %9 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !5144
  %10 = load i64, ptr %9, align 8, !dbg !5144, !range !1797, !noundef !45
  %11 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !5144
  %12 = load i64, ptr %11, align 8, !dbg !5144
  %13 = insertvalue { i64, i64 } undef, i64 %10, 0, !dbg !5144
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1, !dbg !5144
  ret { i64, i64 } %14, !dbg !5144

bb6:                                              ; preds = %bb5
  store i64 %_13.0, ptr %i, align 8, !dbg !5147
  br label %bb1, !dbg !5141

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_80e6d1880504b883c53c5d815a87cff0) #18, !dbg !5147
  unreachable, !dbg !5147
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5slice6memchr6memchr17ha28a2edbeacdfa43E(i8 %x, ptr align 1 %text.0, i64 %text.1) unnamed_addr #1 !dbg !5150 {
start:
  %text.dbg.spill = alloca { ptr, i64 }, align 8
  %x.dbg.spill = alloca i8, align 1
  %0 = alloca { i64, i64 }, align 8
  store i8 %x, ptr %x.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !5152, metadata !DIExpression()), !dbg !5154
  %1 = getelementptr inbounds { ptr, i64 }, ptr %text.dbg.spill, i32 0, i32 0
  store ptr %text.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %text.dbg.spill, i32 0, i32 1
  store i64 %text.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %text.dbg.spill, metadata !5153, metadata !DIExpression()), !dbg !5155
  %_3 = icmp ult i64 %text.1, 16, !dbg !5156
  br i1 %_3, label %bb1, label %bb2, !dbg !5156

bb2:                                              ; preds = %start
; call core::slice::memchr::memchr_aligned
  %3 = call { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h4bc76a1ea75ca5b4E(i8 %x, ptr align 1 %text.0, i64 %text.1) #17, !dbg !5157
  store { i64, i64 } %3, ptr %0, align 8, !dbg !5157
  br label %bb3, !dbg !5157

bb1:                                              ; preds = %start
; call core::slice::memchr::memchr_naive
  %4 = call { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17hc9a7344593c5a011E(i8 %x, ptr align 1 %text.0, i64 %text.1) #17, !dbg !5158
  store { i64, i64 } %4, ptr %0, align 8, !dbg !5158
  br label %bb3, !dbg !5158

bb3:                                              ; preds = %bb2, %bb1
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !5159
  %6 = load i64, ptr %5, align 8, !dbg !5159, !range !1797, !noundef !45
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !5159
  %8 = load i64, ptr %7, align 8, !dbg !5159
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !5159
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !5159
  ret { i64, i64 } %10, !dbg !5159
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h860e43b924132f29E"(i64 %0, i64 %1) unnamed_addr #1 !dbg !5160 {
start:
  %x.dbg.spill = alloca i64, align 8
  %f.dbg.spill = alloca %"[closure@core::slice::index::range<core::ops::range::Range<usize>>::{closure#1}]", align 1
  %_7 = alloca i8, align 1
  %2 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5165, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !5166, metadata !DIExpression()), !dbg !5172
  store i8 0, ptr %_7, align 1, !dbg !5173
  store i8 1, ptr %_7, align 1, !dbg !5173
  %_3 = load i64, ptr %self, align 8, !dbg !5173, !range !1797, !noundef !45
  %5 = icmp eq i64 %_3, 0, !dbg !5174
  br i1 %5, label %bb1, label %bb3, !dbg !5174

bb1:                                              ; preds = %start
  store i8 0, ptr %_7, align 1, !dbg !5175
; call core::slice::index::range::{{closure}}
  %6 = call i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17hdeeab8095d4c12c9E"() #17, !dbg !5175
  store i64 %6, ptr %2, align 8, !dbg !5175
  br label %bb6, !dbg !5175

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5176
  %x = load i64, ptr %7, align 8, !dbg !5176, !noundef !45
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !5176
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !5167, metadata !DIExpression()), !dbg !5177
  store i64 %x, ptr %2, align 8, !dbg !5178
  br label %bb6, !dbg !5179

bb2:                                              ; No predecessors!
  unreachable, !dbg !5173

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, ptr %_7, align 1, !dbg !5180, !range !673, !noundef !45
  %9 = trunc i8 %8 to i1, !dbg !5180
  br i1 %9, label %bb5, label %bb4, !dbg !5180

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i64, ptr %2, align 8, !dbg !5181, !noundef !45
  ret i64 %10, !dbg !5181

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !5180
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hbfde16003b128d5fE"(i64 %0, i64 %1) unnamed_addr #1 !dbg !5182 {
start:
  %x.dbg.spill = alloca i64, align 8
  %f.dbg.spill = alloca %"[closure@core::slice::index::range<core::ops::range::Range<usize>>::{closure#0}]", align 1
  %_7 = alloca i8, align 1
  %2 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5186, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !5187, metadata !DIExpression()), !dbg !5193
  store i8 0, ptr %_7, align 1, !dbg !5194
  store i8 1, ptr %_7, align 1, !dbg !5194
  %_3 = load i64, ptr %self, align 8, !dbg !5194, !range !1797, !noundef !45
  %5 = icmp eq i64 %_3, 0, !dbg !5195
  br i1 %5, label %bb1, label %bb3, !dbg !5195

bb1:                                              ; preds = %start
  store i8 0, ptr %_7, align 1, !dbg !5196
; call core::slice::index::range::{{closure}}
  %6 = call i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17hbbb94a70b5246ac5E"() #17, !dbg !5196
  store i64 %6, ptr %2, align 8, !dbg !5196
  br label %bb6, !dbg !5196

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5197
  %x = load i64, ptr %7, align 8, !dbg !5197, !noundef !45
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !5197
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !5188, metadata !DIExpression()), !dbg !5198
  store i64 %x, ptr %2, align 8, !dbg !5199
  br label %bb6, !dbg !5200

bb2:                                              ; No predecessors!
  unreachable, !dbg !5194

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, ptr %_7, align 1, !dbg !5201, !range !673, !noundef !45
  %9 = trunc i8 %8 to i1, !dbg !5201
  br i1 %9, label %bb5, label %bb4, !dbg !5201

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i64, ptr %2, align 8, !dbg !5202, !noundef !45
  ret i64 %10, !dbg !5202

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !5201
}

; core::option::Option<T>::map
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17he0bced72114984cdE"(i32 %0, i32 %1) unnamed_addr #1 !dbg !5203 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca %"[closure@<core::str::iter::Chars<'_> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]", align 1
  %_8 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, ptr %self, i32 0, i32 0
  store i32 %0, ptr %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, ptr %self, i32 0, i32 1
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5210, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !5211, metadata !DIExpression()), !dbg !5218
  store i8 0, ptr %_8, align 1, !dbg !5219
  store i8 1, ptr %_8, align 1, !dbg !5219
  %5 = load i32, ptr %self, align 4, !dbg !5219, !range !3652, !noundef !45
  %_3 = zext i32 %5 to i64, !dbg !5219
  %6 = icmp eq i64 %_3, 0, !dbg !5220
  br i1 %6, label %bb1, label %bb3, !dbg !5220

bb1:                                              ; preds = %start
  store i32 1114112, ptr %2, align 4, !dbg !5221
  br label %bb7, !dbg !5221

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, ptr %self, i32 0, i32 1, !dbg !5222
  %x = load i32, ptr %7, align 4, !dbg !5222, !noundef !45
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !5222
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !5212, metadata !DIExpression()), !dbg !5223
  store i8 0, ptr %_8, align 1, !dbg !5224
  store i32 %x, ptr %_7, align 4, !dbg !5224
  %8 = load i32, ptr %_7, align 4, !dbg !5224, !noundef !45
; call <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
  %_5 = call i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h838120a02046a358E"(i32 %8) #17, !dbg !5224, !range !523
  store i32 %_5, ptr %2, align 4, !dbg !5225
  br label %bb7, !dbg !5226

bb2:                                              ; No predecessors!
  unreachable, !dbg !5219

bb7:                                              ; preds = %bb1, %bb3
  %9 = load i8, ptr %_8, align 1, !dbg !5227, !range !673, !noundef !45
  %10 = trunc i8 %9 to i1, !dbg !5227
  br i1 %10, label %bb6, label %bb5, !dbg !5227

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i32, ptr %2, align 4, !dbg !5228, !range !527, !noundef !45
  ret i32 %11, !dbg !5228

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5227
}

; core::option::Option<T>::take
; Function Attrs: inlinehint noredzone nounwind
define { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17h32df2c97e4d03a48E"(ptr align 2 %self) unnamed_addr #1 !dbg !5229 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca { i16, i16 }, align 2
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5233, metadata !DIExpression()), !dbg !5234
  store i16 0, ptr %_2, align 2, !dbg !5235
  %0 = getelementptr inbounds { i16, i16 }, ptr %_2, i32 0, i32 0, !dbg !5236
  %1 = load i16, ptr %0, align 2, !dbg !5236, !range !3925, !noundef !45
  %2 = getelementptr inbounds { i16, i16 }, ptr %_2, i32 0, i32 1, !dbg !5236
  %3 = load i16, ptr %2, align 2, !dbg !5236
; call core::mem::replace
  %4 = call { i16, i16 } @_ZN4core3mem7replace17h8a74628870d2faacE(ptr align 2 %self, i16 %1, i16 %3) #17, !dbg !5236
  %5 = extractvalue { i16, i16 } %4, 0, !dbg !5236
  %6 = extractvalue { i16, i16 } %4, 1, !dbg !5236
  %7 = insertvalue { i16, i16 } undef, i16 %5, 0, !dbg !5237
  %8 = insertvalue { i16, i16 } %7, i16 %6, 1, !dbg !5237
  ret { i16, i16 } %8, !dbg !5237
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h76ecb13723e7e032E"(ptr sret(%"core::result::Result<usize, collections::TryReserveErrorKind>") %0, i64 %1, i64 %2, i64 %err.0, i64 %err.1) unnamed_addr #1 !dbg !5238 {
start:
  %v.dbg.spill = alloca i64, align 8
  %err.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %1, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %2, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5256, metadata !DIExpression()), !dbg !5260
  %5 = getelementptr inbounds { i64, i64 }, ptr %err.dbg.spill, i32 0, i32 0
  store i64 %err.0, ptr %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, ptr %err.dbg.spill, i32 0, i32 1
  store i64 %err.1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %err.dbg.spill, metadata !5257, metadata !DIExpression()), !dbg !5261
  store i8 0, ptr %_6, align 1, !dbg !5262
  store i8 1, ptr %_6, align 1, !dbg !5262
  %_3 = load i64, ptr %self, align 8, !dbg !5262, !range !1797, !noundef !45
  %7 = icmp eq i64 %_3, 0, !dbg !5263
  br i1 %7, label %bb1, label %bb3, !dbg !5263

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !5264
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !5265
  store i64 %err.0, ptr %8, align 8, !dbg !5265
  %9 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !5265
  store i64 %err.1, ptr %9, align 8, !dbg !5265
  br label %bb6, !dbg !5266

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5267
  %v = load i64, ptr %10, align 8, !dbg !5267, !noundef !45
  store i64 %v, ptr %v.dbg.spill, align 8, !dbg !5267
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !5258, metadata !DIExpression()), !dbg !5268
  store i64 %v, ptr %0, align 8, !dbg !5269
  %11 = getelementptr inbounds %"core::result::Result<usize, collections::TryReserveErrorKind>", ptr %0, i32 0, i32 1, !dbg !5269
  store i64 -9223372036854775807, ptr %11, align 8, !dbg !5269
  br label %bb6, !dbg !5270

bb2:                                              ; No predecessors!
  unreachable, !dbg !5262

bb6:                                              ; preds = %bb1, %bb3
  %12 = load i8, ptr %_6, align 1, !dbg !5271, !range !673, !noundef !45
  %13 = trunc i8 %12 to i1, !dbg !5271
  br i1 %13, label %bb5, label %bb4, !dbg !5271

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !5272

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !5271
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17hab1230ae13a015aaE"(ptr %0) unnamed_addr #1 !dbg !5273 {
start:
  %v.dbg.spill = alloca ptr, align 8
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_6 = alloca i8, align 1
  %1 = alloca ptr, align 8
  %self = alloca ptr, align 8
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5291, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.declare(metadata ptr %err.dbg.spill, metadata !5292, metadata !DIExpression()), !dbg !5296
  store i8 0, ptr %_6, align 1, !dbg !5297
  store i8 1, ptr %_6, align 1, !dbg !5297
  %2 = load ptr, ptr %self, align 8, !dbg !5297, !noundef !45
  %3 = ptrtoint ptr %2 to i64, !dbg !5297
  %4 = icmp eq i64 %3, 0, !dbg !5297
  %_3 = select i1 %4, i64 0, i64 1, !dbg !5297
  %5 = icmp eq i64 %_3, 0, !dbg !5298
  br i1 %5, label %bb1, label %bb3, !dbg !5298

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !5299
  store ptr null, ptr %1, align 8, !dbg !5300
  br label %bb6, !dbg !5301

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 8, !dbg !5302, !nonnull !45, !noundef !45
  store ptr %v, ptr %v.dbg.spill, align 8, !dbg !5302
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !5293, metadata !DIExpression()), !dbg !5303
  store ptr %v, ptr %1, align 8, !dbg !5304
  br label %bb6, !dbg !5305

bb2:                                              ; No predecessors!
  unreachable, !dbg !5297

bb6:                                              ; preds = %bb1, %bb3
  %6 = load i8, ptr %_6, align 1, !dbg !5306, !range !673, !noundef !45
  %7 = trunc i8 %6 to i1, !dbg !5306
  br i1 %7, label %bb5, label %bb4, !dbg !5306

bb4:                                              ; preds = %bb5, %bb6
  %8 = load ptr, ptr %1, align 8, !dbg !5307, !noundef !45
  ret ptr %8, !dbg !5307

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !5306
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hf1ea23987e18f8baE"(i64 %0, i64 %1) unnamed_addr #1 !dbg !5308 {
start:
  %v.dbg.spill = alloca i64, align 8
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_6 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5326, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.declare(metadata ptr %err.dbg.spill, metadata !5327, metadata !DIExpression()), !dbg !5331
  store i8 0, ptr %_6, align 1, !dbg !5332
  store i8 1, ptr %_6, align 1, !dbg !5332
  %_3 = load i64, ptr %self, align 8, !dbg !5332, !range !1797, !noundef !45
  %5 = icmp eq i64 %_3, 0, !dbg !5333
  br i1 %5, label %bb1, label %bb3, !dbg !5333

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !5334
  store i64 1, ptr %2, align 8, !dbg !5335
  br label %bb6, !dbg !5336

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5337
  %v = load i64, ptr %6, align 8, !dbg !5337, !noundef !45
  store i64 %v, ptr %v.dbg.spill, align 8, !dbg !5337
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !5328, metadata !DIExpression()), !dbg !5338
  %7 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !5339
  store i64 %v, ptr %7, align 8, !dbg !5339
  store i64 0, ptr %2, align 8, !dbg !5339
  br label %bb6, !dbg !5340

bb2:                                              ; No predecessors!
  unreachable, !dbg !5332

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, ptr %_6, align 1, !dbg !5341, !range !673, !noundef !45
  %9 = trunc i8 %8 to i1, !dbg !5341
  br i1 %9, label %bb5, label %bb4, !dbg !5341

bb4:                                              ; preds = %bb5, %bb6
  %10 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !5342
  %11 = load i64, ptr %10, align 8, !dbg !5342, !range !1797, !noundef !45
  %12 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !5342
  %13 = load i64, ptr %12, align 8, !dbg !5342
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !5342
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !5342
  ret { i64, i64 } %15, !dbg !5342

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !5341
}

; core::option::Option<T>::expect
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN4core6option15Option$LT$T$GT$6expect17hbb4f8d02aff80201E"(i64 %0, i64 %1, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %2) unnamed_addr #1 !dbg !5343 {
start:
  %val.dbg.spill = alloca i64, align 8
  %msg.dbg.spill = alloca { ptr, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5347, metadata !DIExpression()), !dbg !5351
  %5 = getelementptr inbounds { ptr, i64 }, ptr %msg.dbg.spill, i32 0, i32 0
  store ptr %msg.0, ptr %5, align 8
  %6 = getelementptr inbounds { ptr, i64 }, ptr %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %msg.dbg.spill, metadata !5348, metadata !DIExpression()), !dbg !5352
  %_3 = load i64, ptr %self, align 8, !dbg !5353, !range !1797, !noundef !45
  %7 = icmp eq i64 %_3, 0, !dbg !5354
  br i1 %7, label %bb1, label %bb3, !dbg !5354

bb1:                                              ; preds = %start
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17hbff91b6deea9603bE(ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %2) #18, !dbg !5355
  unreachable, !dbg !5355

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5356
  %val = load i64, ptr %8, align 8, !dbg !5356, !noundef !45
  store i64 %val, ptr %val.dbg.spill, align 8, !dbg !5356
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill, metadata !5349, metadata !DIExpression()), !dbg !5357
  ret i64 %val, !dbg !5358

bb2:                                              ; No predecessors!
  unreachable, !dbg !5353
}

; core::option::Option<&T>::cloned
; Function Attrs: noredzone nounwind
define { i16, i16 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17he042b838fdc0bc1dE"(ptr align 2 %0) unnamed_addr #0 !dbg !5359 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %t.dbg.spill = alloca ptr, align 8
  %1 = alloca { i16, i16 }, align 2
  %self = alloca ptr, align 8
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5374, metadata !DIExpression()), !dbg !5377
  %2 = load ptr, ptr %self, align 8, !dbg !5378, !noundef !45
  %3 = ptrtoint ptr %2 to i64, !dbg !5378
  %4 = icmp eq i64 %3, 0, !dbg !5378
  %_2 = select i1 %4, i64 0, i64 1, !dbg !5378
  %5 = icmp eq i64 %_2, 0, !dbg !5379
  br i1 %5, label %bb1, label %bb3, !dbg !5379

bb1:                                              ; preds = %start
  store i16 0, ptr %1, align 2, !dbg !5380
  br label %bb5, !dbg !5380

bb3:                                              ; preds = %start
  %t = load ptr, ptr %self, align 8, !dbg !5381, !nonnull !45, !align !5382, !noundef !45
  store ptr %t, ptr %t.dbg.spill, align 8, !dbg !5381
  call void @llvm.dbg.declare(metadata ptr %t.dbg.spill, metadata !5375, metadata !DIExpression()), !dbg !5383
  store ptr %t, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5384, metadata !DIExpression()), !dbg !5393
  %6 = load i16, ptr %t, align 2, !dbg !5395, !noundef !45
  %7 = getelementptr inbounds { i16, i16 }, ptr %1, i32 0, i32 1, !dbg !5396
  store i16 %6, ptr %7, align 2, !dbg !5396
  store i16 1, ptr %1, align 2, !dbg !5396
  br label %bb5, !dbg !5397

bb2:                                              ; No predecessors!
  unreachable, !dbg !5378

bb5:                                              ; preds = %bb1, %bb3
  %8 = getelementptr inbounds { i16, i16 }, ptr %1, i32 0, i32 0, !dbg !5398
  %9 = load i16, ptr %8, align 2, !dbg !5398, !range !3925, !noundef !45
  %10 = getelementptr inbounds { i16, i16 }, ptr %1, i32 0, i32 1, !dbg !5398
  %11 = load i16, ptr %10, align 2, !dbg !5398
  %12 = insertvalue { i16, i16 } undef, i16 %9, 0, !dbg !5398
  %13 = insertvalue { i16, i16 } %12, i16 %11, 1, !dbg !5398
  ret { i16, i16 } %13, !dbg !5398
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h21606e20b3dfc0f8E"(i1 zeroext %0, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %1) unnamed_addr #1 !dbg !5399 {
start:
  %msg.dbg.spill = alloca { ptr, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %e = alloca %"core::fmt::Error", align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
  call void @llvm.dbg.declare(metadata ptr %t.dbg.spill, metadata !5405, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5403, metadata !DIExpression()), !dbg !5410
  %3 = getelementptr inbounds { ptr, i64 }, ptr %msg.dbg.spill, i32 0, i32 0
  store ptr %msg.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %msg.dbg.spill, metadata !5404, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.declare(metadata ptr %e, metadata !5407, metadata !DIExpression()), !dbg !5412
  %5 = load i8, ptr %self, align 1, !dbg !5413, !range !673, !noundef !45
  %6 = trunc i8 %5 to i1, !dbg !5413
  %_3 = zext i1 %6 to i64, !dbg !5413
  %7 = icmp eq i64 %_3, 0, !dbg !5414
  br i1 %7, label %bb3, label %bb1, !dbg !5414

bb3:                                              ; preds = %start
  ret void, !dbg !5415

bb1:                                              ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h48c1b0ff8f31f7ddE(ptr align 1 %msg.0, i64 %msg.1, ptr align 1 %e, ptr align 8 @vtable.6, ptr align 8 %1) #18, !dbg !5416
  unreachable, !dbg !5416

bb2:                                              ; No predecessors!
  unreachable, !dbg !5413
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0ecce73e6461ffd3E"(ptr sret({ { i64, i64 }, i64 }) %t, ptr %self, ptr align 8 %0) unnamed_addr #1 !dbg !5417 {
start:
  %e = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata ptr %t, metadata !5422, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5421, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.declare(metadata ptr %e, metadata !5424, metadata !DIExpression()), !dbg !5428
  %1 = getelementptr inbounds %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", ptr %self, i32 0, i32 1, !dbg !5429
  %2 = load i64, ptr %1, align 8, !dbg !5429, !range !1009, !noundef !45
  %3 = icmp eq i64 %2, 0, !dbg !5429
  %_2 = select i1 %3, i64 1, i64 0, !dbg !5429
  %4 = icmp eq i64 %_2, 0, !dbg !5430
  br i1 %4, label %bb3, label %bb1, !dbg !5430

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 24, i1 false), !dbg !5431
  ret void, !dbg !5432

bb1:                                              ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h48c1b0ff8f31f7ddE(ptr align 1 @alloc_24c9aed79b28e5b93fbc20adee13aef0, i64 43, ptr align 1 %e, ptr align 8 @vtable.7, ptr align 8 %0) #18, !dbg !5433
  unreachable, !dbg !5433

bb2:                                              ; No predecessors!
  unreachable, !dbg !5429
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h31c44feed17dee11E"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>") %0, ptr %1, i64 %2, ptr align 8 %op) unnamed_addr #1 !dbg !5434 {
start:
  %t.dbg.spill = alloca { ptr, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca ptr, align 8
  %_9 = alloca i8, align 1
  %self = alloca { ptr, i64 }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1
  store i64 %2, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5442, metadata !DIExpression()), !dbg !5450
  store ptr %op, ptr %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %op.dbg.spill, metadata !5443, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !5446, metadata !DIExpression()), !dbg !5452
  store i8 0, ptr %_9, align 1, !dbg !5453
  store i8 1, ptr %_9, align 1, !dbg !5453
  %5 = load ptr, ptr %self, align 8, !dbg !5453, !noundef !45
  %6 = ptrtoint ptr %5 to i64, !dbg !5453
  %7 = icmp eq i64 %6, 0, !dbg !5453
  %_3 = select i1 %7, i64 1, i64 0, !dbg !5453
  %8 = icmp eq i64 %_3, 0, !dbg !5454
  br i1 %8, label %bb3, label %bb1, !dbg !5454

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0, !dbg !5455
  %t.0 = load ptr, ptr %9, align 8, !dbg !5455, !nonnull !45, !noundef !45
  %10 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1, !dbg !5455
  %t.1 = load i64, ptr %10, align 8, !dbg !5455, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %t.dbg.spill, i32 0, i32 0, !dbg !5455
  store ptr %t.0, ptr %11, align 8, !dbg !5455
  %12 = getelementptr inbounds { ptr, i64 }, ptr %t.dbg.spill, i32 0, i32 1, !dbg !5455
  store i64 %t.1, ptr %12, align 8, !dbg !5455
  call void @llvm.dbg.declare(metadata ptr %t.dbg.spill, metadata !5444, metadata !DIExpression()), !dbg !5456
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>::Ok", ptr %0, i32 0, i32 1, !dbg !5457
  %14 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 0, !dbg !5457
  store ptr %t.0, ptr %14, align 8, !dbg !5457
  %15 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 1, !dbg !5457
  store i64 %t.1, ptr %15, align 8, !dbg !5457
  store i64 0, ptr %0, align 8, !dbg !5457
  br label %bb7, !dbg !5458

bb1:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !5459
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h82b13999f26244c5E"(ptr align 8 %op) #17, !dbg !5459
  %_6.0 = extractvalue { i64, i64 } %16, 0, !dbg !5459
  %_6.1 = extractvalue { i64, i64 } %16, 1, !dbg !5459
  %17 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>::Err", ptr %0, i32 0, i32 1, !dbg !5460
  %18 = getelementptr inbounds { i64, i64 }, ptr %17, i32 0, i32 0, !dbg !5460
  store i64 %_6.0, ptr %18, align 8, !dbg !5460
  %19 = getelementptr inbounds { i64, i64 }, ptr %17, i32 0, i32 1, !dbg !5460
  store i64 %_6.1, ptr %19, align 8, !dbg !5460
  store i64 1, ptr %0, align 8, !dbg !5460
  br label %bb7, !dbg !5461

bb2:                                              ; No predecessors!
  unreachable, !dbg !5453

bb7:                                              ; preds = %bb3, %bb1
  %20 = load i8, ptr %_9, align 1, !dbg !5462, !range !673, !noundef !45
  %21 = trunc i8 %20 to i1, !dbg !5462
  br i1 %21, label %bb6, label %bb5, !dbg !5462

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !5463

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5462
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4386f93c5dcfd662E"(ptr sret(%"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #1 !dbg !5464 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:464:41: 464:44]", align 1
  %_9 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %1, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %2, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5483, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.declare(metadata ptr %op.dbg.spill, metadata !5484, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !5487, metadata !DIExpression()), !dbg !5494
  store i8 0, ptr %_9, align 1, !dbg !5495
  store i8 1, ptr %_9, align 1, !dbg !5495
  %5 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5495
  %6 = load i64, ptr %5, align 8, !dbg !5495, !range !1009, !noundef !45
  %7 = icmp eq i64 %6, 0, !dbg !5495
  %_3 = select i1 %7, i64 1, i64 0, !dbg !5495
  %8 = icmp eq i64 %_3, 0, !dbg !5496
  br i1 %8, label %bb3, label %bb1, !dbg !5496

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0, !dbg !5497
  %t.0 = load i64, ptr %9, align 8, !dbg !5497, !noundef !45
  %10 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5497
  %t.1 = load i64, ptr %10, align 8, !dbg !5497, !range !1362, !noundef !45
  %11 = getelementptr inbounds { i64, i64 }, ptr %t.dbg.spill, i32 0, i32 0, !dbg !5497
  store i64 %t.0, ptr %11, align 8, !dbg !5497
  %12 = getelementptr inbounds { i64, i64 }, ptr %t.dbg.spill, i32 0, i32 1, !dbg !5497
  store i64 %t.1, ptr %12, align 8, !dbg !5497
  call void @llvm.dbg.declare(metadata ptr %t.dbg.spill, metadata !5485, metadata !DIExpression()), !dbg !5498
  %13 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>::Ok", ptr %0, i32 0, i32 1, !dbg !5499
  %14 = getelementptr inbounds { i64, i64 }, ptr %13, i32 0, i32 0, !dbg !5499
  store i64 %t.0, ptr %14, align 8, !dbg !5499
  %15 = getelementptr inbounds { i64, i64 }, ptr %13, i32 0, i32 1, !dbg !5499
  store i64 %t.1, ptr %15, align 8, !dbg !5499
  store i64 0, ptr %0, align 8, !dbg !5499
  br label %bb7, !dbg !5500

bb1:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !5501
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hce5445e8c9461545E"() #17, !dbg !5501
  %_6.0 = extractvalue { i64, i64 } %16, 0, !dbg !5501
  %_6.1 = extractvalue { i64, i64 } %16, 1, !dbg !5501
  %17 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>::Err", ptr %0, i32 0, i32 1, !dbg !5502
  %18 = getelementptr inbounds { i64, i64 }, ptr %17, i32 0, i32 0, !dbg !5502
  store i64 %_6.0, ptr %18, align 8, !dbg !5502
  %19 = getelementptr inbounds { i64, i64 }, ptr %17, i32 0, i32 1, !dbg !5502
  store i64 %_6.1, ptr %19, align 8, !dbg !5502
  store i64 1, ptr %0, align 8, !dbg !5502
  br label %bb7, !dbg !5503

bb2:                                              ; No predecessors!
  unreachable, !dbg !5495

bb7:                                              ; preds = %bb3, %bb1
  %20 = load i8, ptr %_9, align 1, !dbg !5504, !range !673, !noundef !45
  %21 = trunc i8 %20 to i1, !dbg !5504
  br i1 %21, label %bb6, label %bb5, !dbg !5504

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !5505

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5504
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h532dd6c3e8297f41E"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>") %0, ptr %1, i64 %2, ptr align 8 %op) unnamed_addr #1 !dbg !5506 {
start:
  %t.dbg.spill = alloca { ptr, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca ptr, align 8
  %_9 = alloca i8, align 1
  %self = alloca { ptr, i64 }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1
  store i64 %2, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5529, metadata !DIExpression()), !dbg !5537
  store ptr %op, ptr %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %op.dbg.spill, metadata !5530, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !5533, metadata !DIExpression()), !dbg !5539
  store i8 0, ptr %_9, align 1, !dbg !5540
  store i8 1, ptr %_9, align 1, !dbg !5540
  %5 = load ptr, ptr %self, align 8, !dbg !5540, !noundef !45
  %6 = ptrtoint ptr %5 to i64, !dbg !5540
  %7 = icmp eq i64 %6, 0, !dbg !5540
  %_3 = select i1 %7, i64 1, i64 0, !dbg !5540
  %8 = icmp eq i64 %_3, 0, !dbg !5541
  br i1 %8, label %bb3, label %bb1, !dbg !5541

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0, !dbg !5542
  %t.0 = load ptr, ptr %9, align 8, !dbg !5542, !nonnull !45, !noundef !45
  %10 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1, !dbg !5542
  %t.1 = load i64, ptr %10, align 8, !dbg !5542, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %t.dbg.spill, i32 0, i32 0, !dbg !5542
  store ptr %t.0, ptr %11, align 8, !dbg !5542
  %12 = getelementptr inbounds { ptr, i64 }, ptr %t.dbg.spill, i32 0, i32 1, !dbg !5542
  store i64 %t.1, ptr %12, align 8, !dbg !5542
  call void @llvm.dbg.declare(metadata ptr %t.dbg.spill, metadata !5531, metadata !DIExpression()), !dbg !5543
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>::Ok", ptr %0, i32 0, i32 1, !dbg !5544
  %14 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 0, !dbg !5544
  store ptr %t.0, ptr %14, align 8, !dbg !5544
  %15 = getelementptr inbounds { ptr, i64 }, ptr %13, i32 0, i32 1, !dbg !5544
  store i64 %t.1, ptr %15, align 8, !dbg !5544
  store i64 0, ptr %0, align 8, !dbg !5544
  br label %bb7, !dbg !5545

bb1:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !5546
; call alloc::raw_vec::RawVec<T,A>::shrink::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6shrink28_$u7b$$u7b$closure$u7d$$u7d$17h8e9b43de07767fe1E"(ptr align 8 %op) #17, !dbg !5546
  %_6.0 = extractvalue { i64, i64 } %16, 0, !dbg !5546
  %_6.1 = extractvalue { i64, i64 } %16, 1, !dbg !5546
  %17 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>::Err", ptr %0, i32 0, i32 1, !dbg !5547
  %18 = getelementptr inbounds { i64, i64 }, ptr %17, i32 0, i32 0, !dbg !5547
  store i64 %_6.0, ptr %18, align 8, !dbg !5547
  %19 = getelementptr inbounds { i64, i64 }, ptr %17, i32 0, i32 1, !dbg !5547
  store i64 %_6.1, ptr %19, align 8, !dbg !5547
  store i64 1, ptr %0, align 8, !dbg !5547
  br label %bb7, !dbg !5548

bb2:                                              ; No predecessors!
  unreachable, !dbg !5540

bb7:                                              ; preds = %bb3, %bb1
  %20 = load i8, ptr %_9, align 1, !dbg !5549, !range !673, !noundef !45
  %21 = trunc i8 %20 to i1, !dbg !5549
  br i1 %21, label %bb6, label %bb5, !dbg !5549

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !5550

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5549
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h96554ad26ce9ff2fE"(ptr sret(%"core::result::Result<string::String, ffi::c_str::IntoStringError>") %0, ptr %self) unnamed_addr #1 !dbg !5551 {
start:
  %op.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs:474:54: 474:57]", align 1
  %_9 = alloca i8, align 1
  %_8 = alloca { %"string::FromUtf8Error" }, align 8
  %_6 = alloca %"ffi::c_str::IntoStringError", align 8
  %e = alloca %"string::FromUtf8Error", align 8
  %t = alloca %"string::String", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5596, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.declare(metadata ptr %op.dbg.spill, metadata !5597, metadata !DIExpression()), !dbg !5606
  call void @llvm.dbg.declare(metadata ptr %t, metadata !5598, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata ptr %e, metadata !5600, metadata !DIExpression()), !dbg !5608
  store i8 0, ptr %_9, align 1, !dbg !5609
  store i8 1, ptr %_9, align 1, !dbg !5609
  %1 = getelementptr inbounds %"core::result::Result<string::String, string::FromUtf8Error>", ptr %self, i32 0, i32 1, !dbg !5609
  %2 = load i8, ptr %1, align 8, !dbg !5609, !range !5610, !noundef !45
  %3 = icmp eq i8 %2, 2, !dbg !5609
  %_3 = select i1 %3, i64 0, i64 1, !dbg !5609
  %4 = icmp eq i64 %_3, 0, !dbg !5611
  br i1 %4, label %bb3, label %bb1, !dbg !5611

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds %"core::result::Result<string::String, string::FromUtf8Error>::Ok", ptr %self, i32 0, i32 1, !dbg !5612
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %5, i64 24, i1 false), !dbg !5612
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %t, i64 24, i1 false), !dbg !5613
  %6 = getelementptr inbounds %"core::result::Result<string::String, ffi::c_str::IntoStringError>", ptr %0, i32 0, i32 1, !dbg !5613
  store i8 2, ptr %6, align 8, !dbg !5613
  br label %bb7, !dbg !5614

bb1:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %self, i64 40, i1 false), !dbg !5615
  store i8 0, ptr %_9, align 1, !dbg !5616
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %e, i64 40, i1 false), !dbg !5616
; call alloc::ffi::c_str::CString::into_string::{{closure}}
  call void @"_ZN5alloc3ffi5c_str7CString11into_string28_$u7b$$u7b$closure$u7d$$u7d$17hba6701cc4040fa31E"(ptr sret(%"ffi::c_str::IntoStringError") %_6, ptr %_8) #17, !dbg !5616
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_6, i64 32, i1 false), !dbg !5617
  br label %bb7, !dbg !5618

bb2:                                              ; No predecessors!
  unreachable, !dbg !5609

bb7:                                              ; preds = %bb3, %bb1
  %7 = load i8, ptr %_9, align 1, !dbg !5619, !range !673, !noundef !45
  %8 = trunc i8 %7 to i1, !dbg !5619
  br i1 %8, label %bb6, label %bb5, !dbg !5619

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !5620

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5619
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17heb5048f883dbca67E"(i64 %0, i64 %1) unnamed_addr #1 !dbg !5621 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:495:26: 495:29]", align 1
  %_9 = alloca i8, align 1
  %_8 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5641, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata ptr %op.dbg.spill, metadata !5642, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.declare(metadata ptr %t.dbg.spill, metadata !5643, metadata !DIExpression()), !dbg !5651
  store i8 0, ptr %_9, align 1, !dbg !5652
  store i8 1, ptr %_9, align 1, !dbg !5652
  %5 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5652
  %6 = load i64, ptr %5, align 8, !dbg !5652, !range !1024, !noundef !45
  %7 = icmp eq i64 %6, -9223372036854775807, !dbg !5652
  %_3 = select i1 %7, i64 0, i64 1, !dbg !5652
  %8 = icmp eq i64 %_3, 0, !dbg !5653
  br i1 %8, label %bb3, label %bb1, !dbg !5653

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !5654
  store i64 -9223372036854775807, ptr %9, align 8, !dbg !5654
  br label %bb7, !dbg !5655

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0, !dbg !5656
  %e.0 = load i64, ptr %10, align 8, !dbg !5656
  %11 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5656
  %e.1 = load i64, ptr %11, align 8, !dbg !5656, !range !1009, !noundef !45
  %12 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !5656
  store i64 %e.0, ptr %12, align 8, !dbg !5656
  %13 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !5656
  store i64 %e.1, ptr %13, align 8, !dbg !5656
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !5645, metadata !DIExpression()), !dbg !5657
  store i8 0, ptr %_9, align 1, !dbg !5658
  %14 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 0, !dbg !5658
  store i64 %e.0, ptr %14, align 8, !dbg !5658
  %15 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !5658
  store i64 %e.1, ptr %15, align 8, !dbg !5658
  %16 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 0, !dbg !5658
  %17 = load i64, ptr %16, align 8, !dbg !5658
  %18 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !5658
  %19 = load i64, ptr %18, align 8, !dbg !5658, !range !1009, !noundef !45
; call alloc::raw_vec::handle_reserve::{{closure}}
  %20 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h575467add90393b2E"(i64 %17, i64 %19) #17, !dbg !5658
  %_6.0 = extractvalue { i64, i64 } %20, 0, !dbg !5658
  %_6.1 = extractvalue { i64, i64 } %20, 1, !dbg !5658
  %21 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !5659
  store i64 %_6.0, ptr %21, align 8, !dbg !5659
  %22 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !5659
  store i64 %_6.1, ptr %22, align 8, !dbg !5659
  br label %bb7, !dbg !5660

bb2:                                              ; No predecessors!
  unreachable, !dbg !5652

bb7:                                              ; preds = %bb3, %bb1
  %23 = load i8, ptr %_9, align 1, !dbg !5661, !range !673, !noundef !45
  %24 = trunc i8 %23 to i1, !dbg !5661
  br i1 %24, label %bb6, label %bb5, !dbg !5661

bb5:                                              ; preds = %bb6, %bb7
  %25 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !5662
  %26 = load i64, ptr %25, align 8, !dbg !5662
  %27 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !5662
  %28 = load i64, ptr %27, align 8, !dbg !5662, !range !1024, !noundef !45
  %29 = insertvalue { i64, i64 } undef, i64 %26, 0, !dbg !5662
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1, !dbg !5662
  ret { i64, i64 } %30, !dbg !5662

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !5661
}

; core::panicking::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
define void @_ZN4core9panicking13assert_failed17hdde847a6ce9e5b7bE(i8 %kind, ptr align 1 %0, ptr align 1 %1, ptr %args, ptr align 8 %2) unnamed_addr #2 !dbg !5663 {
start:
  %3 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %kind.dbg.spill = alloca i8, align 1
  %right = alloca ptr, align 8
  %left = alloca ptr, align 8
  store ptr %0, ptr %left, align 8
  store ptr %1, ptr %right, align 8
  store i8 %kind, ptr %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %kind.dbg.spill, metadata !5681, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.declare(metadata ptr %left, metadata !5682, metadata !DIExpression()), !dbg !5689
  call void @llvm.dbg.declare(metadata ptr %right, metadata !5683, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata ptr %args, metadata !5684, metadata !DIExpression()), !dbg !5691
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %args, i64 48, i1 false), !dbg !5692
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h99f4f1cf0550cc2aE(i8 %kind, ptr align 1 %left, ptr align 8 @vtable.8, ptr align 1 %right, ptr align 8 @vtable.8, ptr %3, ptr align 8 %2) #18, !dbg !5692
  unreachable, !dbg !5692
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hc0934a2fde0a5e18E"(ptr align 8 %self, i32 %c) unnamed_addr #0 !dbg !5693 {
start:
  %c.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5699, metadata !DIExpression()), !dbg !5703
  store i32 %c, ptr %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !5700, metadata !DIExpression()), !dbg !5704
  %_3 = load ptr, ptr %self, align 8, !dbg !5705, !nonnull !45, !align !1159, !noundef !45
; call <alloc::string::String as core::fmt::Write>::write_char
  %0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h6a3696f36e1df853E"(ptr align 8 %_3, i32 %c) #17, !dbg !5705
  ret i1 %0, !dbg !5706
}

; <&mut W as core::fmt::Write>::write_fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h9af8cf731126fe82E"(ptr align 8 %self, ptr %args) unnamed_addr #0 !dbg !5707 {
start:
  %0 = alloca %"core::fmt::Arguments<'_>", align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5711, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.declare(metadata ptr %args, metadata !5712, metadata !DIExpression()), !dbg !5714
  %_3 = load ptr, ptr %self, align 8, !dbg !5715, !nonnull !45, !align !1159, !noundef !45
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %args, i64 48, i1 false), !dbg !5715
; call core::fmt::Write::write_fmt
  %1 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h253ba6ca3452f57eE(ptr align 8 %_3, ptr %0) #17, !dbg !5715
  ret i1 %1, !dbg !5716
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hd1c3d17891a2d950E"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !5717 {
start:
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5721, metadata !DIExpression()), !dbg !5723
  %0 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !5722, metadata !DIExpression()), !dbg !5724
  %_3 = load ptr, ptr %self, align 8, !dbg !5725, !nonnull !45, !align !1159, !noundef !45
; call <alloc::string::String as core::fmt::Write>::write_str
  %2 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h51025f4043ad4965E"(ptr align 8 %_3, ptr align 1 %s.0, i64 %s.1) #17, !dbg !5725
  ret i1 %2, !dbg !5726
}

; <T as core::convert::Into<U>>::into
; Function Attrs: noredzone nounwind
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1ff85623d6cefe36E"(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !5727 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5732, metadata !DIExpression()), !dbg !5735
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd6ef18c3114f3244E"(i64 %self.0, i64 %self.1) #17, !dbg !5736
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !5736
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !5736
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !5737
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !5737
  ret { i64, i64 } %6, !dbg !5737
}

; <T as core::convert::Into<U>>::into
; Function Attrs: noredzone nounwind
define ptr @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h6cef30de0f98774cE"(ptr %self) unnamed_addr #0 !dbg !5738 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5740, metadata !DIExpression()), !dbg !5744
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call ptr @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17ha4a5f23a1739fb8bE"(ptr %self) #17, !dbg !5745
  ret ptr %0, !dbg !5746
}

; <T as core::convert::Into<U>>::into
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h75eaf413a11e3e99E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !5747 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5751, metadata !DIExpression()), !dbg !5755
; call <alloc::boxed::Box<[T]> as core::convert::From<&[T]>>::from
  %2 = call { ptr, i64 } @"_ZN99_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17hd50dd409d0b139b9E"(ptr align 1 %self.0, i64 %self.1) #17, !dbg !5756
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !5756
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !5756
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !5757
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !5757
  ret { ptr, i64 } %6, !dbg !5757
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h1ac80bc32b7fd2dcE"(ptr sret(%"core::str::pattern::StrSearcher<'_, '_>") %0, ptr align 1 %self.0, i64 %self.1, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 !dbg !5758 {
start:
  %haystack.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5800, metadata !DIExpression()), !dbg !5802
  %3 = getelementptr inbounds { ptr, i64 }, ptr %haystack.dbg.spill, i32 0, i32 0
  store ptr %haystack.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %haystack.dbg.spill, metadata !5801, metadata !DIExpression()), !dbg !5803
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h4d93508280f8333aE(ptr sret(%"core::str::pattern::StrSearcher<'_, '_>") %0, ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %self.0, i64 %self.1) #17, !dbg !5804
  ret void, !dbg !5805
}

; <T as core::option::SpecOptionPartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN55_$LT$T$u20$as$u20$core..option..SpecOptionPartialEq$GT$2eq17h2b4075adb41865d4E"(ptr align 1 %l, ptr align 1 %r) unnamed_addr #1 !dbg !5806 {
start:
  %r.dbg.spill4 = alloca ptr, align 8
  %l.dbg.spill2 = alloca ptr, align 8
  %r.dbg.spill = alloca ptr, align 8
  %l.dbg.spill = alloca ptr, align 8
  %_3 = alloca { ptr, ptr }, align 8
  %0 = alloca i8, align 1
  store ptr %l, ptr %l.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !5811, metadata !DIExpression()), !dbg !5816
  store ptr %r, ptr %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !5812, metadata !DIExpression()), !dbg !5817
  store ptr %l, ptr %_3, align 8, !dbg !5818
  %1 = getelementptr inbounds { ptr, ptr }, ptr %_3, i32 0, i32 1, !dbg !5818
  store ptr %r, ptr %1, align 8, !dbg !5818
  %_9 = load ptr, ptr %_3, align 8, !dbg !5818, !nonnull !45, !align !643, !noundef !45
  %2 = load i8, ptr %_9, align 1, !dbg !5818, !range !673, !noundef !45
  %3 = trunc i8 %2 to i1, !dbg !5818
  %_6 = zext i1 %3 to i64, !dbg !5818
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !5819

bb2:                                              ; preds = %bb1, %bb3, %start
  store i8 0, ptr %0, align 1, !dbg !5820
  br label %bb6, !dbg !5820

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_3, i32 0, i32 1, !dbg !5818
  %_10 = load ptr, ptr %4, align 8, !dbg !5818, !nonnull !45, !align !643, !noundef !45
  %5 = load i8, ptr %_10, align 1, !dbg !5818, !range !673, !noundef !45
  %6 = trunc i8 %5 to i1, !dbg !5818
  %_4 = zext i1 %6 to i64, !dbg !5818
  %7 = icmp eq i64 %_4, 0, !dbg !5819
  br i1 %7, label %bb5, label %bb2, !dbg !5819

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { ptr, ptr }, ptr %_3, i32 0, i32 1, !dbg !5818
  %_11 = load ptr, ptr %8, align 8, !dbg !5818, !nonnull !45, !align !643, !noundef !45
  %9 = load i8, ptr %_11, align 1, !dbg !5818, !range !673, !noundef !45
  %10 = trunc i8 %9 to i1, !dbg !5818
  %_5 = zext i1 %10 to i64, !dbg !5818
  %11 = icmp eq i64 %_5, 1, !dbg !5819
  br i1 %11, label %bb4, label %bb2, !dbg !5819

bb4:                                              ; preds = %bb3
  %_12 = load ptr, ptr %_3, align 8, !dbg !5821, !nonnull !45, !align !643, !noundef !45
  %l1 = getelementptr inbounds { i8, i8 }, ptr %_12, i32 0, i32 1, !dbg !5821
  store ptr %l1, ptr %l.dbg.spill2, align 8, !dbg !5821
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill2, metadata !5813, metadata !DIExpression()), !dbg !5822
  %12 = getelementptr inbounds { ptr, ptr }, ptr %_3, i32 0, i32 1, !dbg !5823
  %_13 = load ptr, ptr %12, align 8, !dbg !5823, !nonnull !45, !align !643, !noundef !45
  %r3 = getelementptr inbounds { i8, i8 }, ptr %_13, i32 0, i32 1, !dbg !5823
  store ptr %r3, ptr %r.dbg.spill4, align 8, !dbg !5823
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill4, metadata !5815, metadata !DIExpression()), !dbg !5824
; call core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
  %13 = call zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h644fe0bfe8698e8bE"(ptr align 1 %l1, ptr align 1 %r3) #17, !dbg !5825
  %14 = zext i1 %13 to i8, !dbg !5825
  store i8 %14, ptr %0, align 1, !dbg !5825
  br label %bb6, !dbg !5825

bb6:                                              ; preds = %bb5, %bb2, %bb4
  %15 = load i8, ptr %0, align 1, !dbg !5826, !range !673, !noundef !45
  %16 = trunc i8 %15 to i1, !dbg !5826
  ret i1 %16, !dbg !5826

bb5:                                              ; preds = %bb1
  store i8 1, ptr %0, align 1, !dbg !5827
  br label %bb6, !dbg !5827
}

; <usize as core::iter::traits::accum::Sum>::sum
; Function Attrs: noredzone nounwind
define i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h18770b9c83593d13E"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !5828 {
start:
  %iter.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 1
  store ptr %iter.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !5831, metadata !DIExpression()), !dbg !5834
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  %2 = call i64 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h6731b00e9f66dbe2E"(ptr %iter.0, ptr %iter.1, i64 0) #17, !dbg !5835
  ret i64 %2, !dbg !5836
}

; <usize as core::iter::traits::accum::Sum>::sum::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h3098f19d02191346E"(ptr align 1 %_1, i64 %a, i64 %b) unnamed_addr #1 !dbg !5837 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !5844, metadata !DIExpression()), !dbg !5845
  store i64 %a, ptr %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !5842, metadata !DIExpression()), !dbg !5846
  store i64 %b, ptr %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !5843, metadata !DIExpression()), !dbg !5847
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %a, i64 %b), !dbg !5848
  %_4.0 = extractvalue { i64, i1 } %0, 0, !dbg !5848
  %_4.1 = extractvalue { i64, i1 } %0, 1, !dbg !5848
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !5848
  br i1 %1, label %panic, label %bb1, !dbg !5848

bb1:                                              ; preds = %start
  ret i64 %_4.0, !dbg !5849

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_c7344677dd41d0c35941541aa568b4d0) #18, !dbg !5848
  unreachable, !dbg !5848
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4b6c6319404baca6E"(ptr sret(%"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>") %0, ptr %self) unnamed_addr #1 !dbg !5850 {
start:
  call void @llvm.dbg.declare(metadata ptr %self, metadata !5857, metadata !DIExpression()), !dbg !5860
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %self, i64 24, i1 false), !dbg !5861
  ret void, !dbg !5862
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h75ac064585ddabaeE"(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !5863 {
start:
  %self.dbg.spill = alloca { ptr, ptr }, align 8
  %0 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %self.dbg.spill, i32 0, i32 1
  store ptr %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5867, metadata !DIExpression()), !dbg !5868
  %2 = insertvalue { ptr, ptr } undef, ptr %self.0, 0, !dbg !5869
  %3 = insertvalue { ptr, ptr } %2, ptr %self.1, 1, !dbg !5869
  ret { ptr, ptr } %3, !dbg !5869
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h101e7442eb6ee0e2E"(ptr align 8 %self) unnamed_addr #1 !dbg !5870 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5873, metadata !DIExpression()), !dbg !5874
  %0 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0, !dbg !5874
  %1 = load i64, ptr %0, align 8, !dbg !5874, !noundef !45
  %2 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !5874
  %3 = load i64, ptr %2, align 8, !dbg !5874, !range !1362, !noundef !45
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !5875
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !5875
  ret { i64, i64 } %5, !dbg !5875
}

; <core::ptr::alignment::Alignment as core::cmp::Ord>::cmp
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN66_$LT$core..ptr..alignment..Alignment$u20$as$u20$core..cmp..Ord$GT$3cmp17hb62d92d1e772ae58E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 !dbg !5876 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca i64, align 8
  %_4 = alloca i64, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5879, metadata !DIExpression()), !dbg !5881
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !5880, metadata !DIExpression()), !dbg !5882
  %_6 = load i64, ptr %self, align 8, !dbg !5883, !range !1362, !noundef !45
; call core::ptr::alignment::Alignment::as_nonzero
  %_5 = call i64 @_ZN4core3ptr9alignment9Alignment10as_nonzero17h403b42abfa1470b8E(i64 %_6) #17, !dbg !5883, !range !1861
; call core::num::nonzero::NonZeroUsize::get
  %0 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17hf16ab339941c792cE(i64 %_5) #17, !dbg !5883
  store i64 %0, ptr %_4, align 8, !dbg !5883
  %_10 = load i64, ptr %other, align 8, !dbg !5884, !range !1362, !noundef !45
; call core::ptr::alignment::Alignment::as_nonzero
  %_9 = call i64 @_ZN4core3ptr9alignment9Alignment10as_nonzero17h403b42abfa1470b8E(i64 %_10) #17, !dbg !5884, !range !1861
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17hf16ab339941c792cE(i64 %_9) #17, !dbg !5884
  store i64 %1, ptr %_8, align 8, !dbg !5884
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %2 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h7b283cdbd8a6d95bE"(ptr align 8 %_4, ptr align 8 %_8) #17, !dbg !5883, !range !1391
  ret i8 %2, !dbg !5885
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h5627319f47faaf19E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #1 !dbg !5886 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5889, metadata !DIExpression()), !dbg !5891
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !5890, metadata !DIExpression()), !dbg !5892
; call <T as core::option::SpecOptionPartialEq>::eq
  %0 = call zeroext i1 @"_ZN55_$LT$T$u20$as$u20$core..option..SpecOptionPartialEq$GT$2eq17h2b4075adb41865d4E"(ptr align 1 %self, ptr align 1 %other) #17, !dbg !5893
  ret i1 %0, !dbg !5894
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1df41719abeb19a3E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !5895 {
start:
  %self.dbg.spill.i.i = alloca { ptr, i64 }, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i3 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, { ptr, i64 } }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5900, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5902, metadata !DIExpression()), !dbg !5905
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !5901, metadata !DIExpression()), !dbg !5906
  store i64 %self, ptr %_4, align 8, !dbg !5907
  %3 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !5907
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !5907
  store ptr %slice.0, ptr %4, align 8, !dbg !5907
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !5907
  store i64 %slice.1, ptr %5, align 8, !dbg !5907
  %6 = load i64, ptr %_4, align 8, !dbg !5907, !noundef !45
  %7 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !5907
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !5907
  %9 = load ptr, ptr %8, align 8, !dbg !5907, !noundef !45
  %10 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !5907
  %11 = load i64, ptr %10, align 8, !dbg !5907, !noundef !45
  store i64 %6, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !5908, metadata !DIExpression()), !dbg !5915
  store ptr %9, ptr %slice.dbg.spill.i, align 8
  %12 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %11, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !5914, metadata !DIExpression()), !dbg !5915
  store ptr %9, ptr %self.dbg.spill.i.i, align 8
  %13 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i.i, i32 0, i32 1
  store i64 %11, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !5917, metadata !DIExpression()), !dbg !5922
; call core::ptr::metadata::metadata
  %14 = call i64 @_ZN4core3ptr8metadata8metadata17h9665877a59ac6f81E(ptr %9, i64 %11) #17, !dbg !5925
  %_4.i = icmp ult i64 %6, %14, !dbg !5926
  %_3.i4 = xor i1 %_4.i, true, !dbg !5927
  br i1 %_3.i4, label %bb2.i, label %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h5549ce02721df4b0E.exit", !dbg !5927

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_18ca0805f8b71f31ac76ef9d667d311b, i64 101) #18, !dbg !5928
  unreachable, !dbg !5928

"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h5549ce02721df4b0E.exit": ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i3, align 8
  %15 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i3, i32 0, i32 1
  store i64 %slice.1, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !3131, metadata !DIExpression()), !dbg !5929
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5931, metadata !DIExpression()), !dbg !5937
  store i64 %self, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5936, metadata !DIExpression()), !dbg !5939
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !5940, metadata !DIExpression()), !dbg !5946
  store i64 %self, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !5945, metadata !DIExpression()), !dbg !5948
  %16 = getelementptr inbounds i8, ptr %slice.0, i64 %self, !dbg !5949
  store ptr %16, ptr %0, align 8, !dbg !5949
  %_3.i = load ptr, ptr %0, align 8, !dbg !5949, !noundef !45
  ret ptr %_3.i, !dbg !5950
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hfc5adc511c706331E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !5951 {
start:
  %self.dbg.spill.i.i = alloca { ptr, i64 }, align 8
  %slice.dbg.spill.i = alloca { ptr, i64 }, align 8
  %this.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i3 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, { ptr, i64 } }, align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5955, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !5957, metadata !DIExpression()), !dbg !5960
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !5956, metadata !DIExpression()), !dbg !5961
  store i64 %self, ptr %_4, align 8, !dbg !5962
  %3 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !5962
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !5962
  store ptr %slice.0, ptr %4, align 8, !dbg !5962
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !5962
  store i64 %slice.1, ptr %5, align 8, !dbg !5962
  %6 = load i64, ptr %_4, align 8, !dbg !5962, !noundef !45
  %7 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_4, i32 0, i32 1, !dbg !5962
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !5962
  %9 = load ptr, ptr %8, align 8, !dbg !5962, !noundef !45
  %10 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !5962
  %11 = load i64, ptr %10, align 8, !dbg !5962, !noundef !45
  store i64 %6, ptr %this.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %this.dbg.spill.i, metadata !5963, metadata !DIExpression()), !dbg !5969
  store ptr %9, ptr %slice.dbg.spill.i, align 8
  %12 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill.i, i32 0, i32 1
  store i64 %11, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill.i, metadata !5968, metadata !DIExpression()), !dbg !5969
  store ptr %9, ptr %self.dbg.spill.i.i, align 8
  %13 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i.i, i32 0, i32 1
  store i64 %11, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !5971, metadata !DIExpression()), !dbg !5976
; call core::ptr::metadata::metadata
  %14 = call i64 @_ZN4core3ptr8metadata8metadata17h07ab14d6ec5c4ef2E(ptr %9, i64 %11) #17, !dbg !5979
  %_4.i = icmp ult i64 %6, %14, !dbg !5980
  %_3.i4 = xor i1 %_4.i, true, !dbg !5981
  br i1 %_3.i4, label %bb2.i, label %"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h61d0038e81e91653E.exit", !dbg !5981

bb2.i:                                            ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1 @alloc_18ca0805f8b71f31ac76ef9d667d311b, i64 101) #18, !dbg !5982
  unreachable, !dbg !5982

"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h61d0038e81e91653E.exit": ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i3, align 8
  %15 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i3, i32 0, i32 1
  store i64 %slice.1, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !5983, metadata !DIExpression()), !dbg !5988
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5990, metadata !DIExpression()), !dbg !5996
  store i64 %self, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5995, metadata !DIExpression()), !dbg !5998
  store ptr %slice.0, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !5999, metadata !DIExpression()), !dbg !6005
  store i64 %self, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !6004, metadata !DIExpression()), !dbg !6007
  %16 = getelementptr inbounds i8, ptr %slice.0, i64 %self, !dbg !6008
  store ptr %16, ptr %0, align 8, !dbg !6008
  %_3.i = load ptr, ptr %0, align 8, !dbg !6008, !noundef !45
  ret ptr %_3.i, !dbg !6009
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h51099eb434296544E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>") %0, ptr %self) unnamed_addr #1 !dbg !6010 {
start:
  %v.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6031, metadata !DIExpression()), !dbg !6036
  %_2 = load i64, ptr %self, align 8, !dbg !6037, !range !1797, !noundef !45
  %1 = icmp eq i64 %_2, 0, !dbg !6038
  br i1 %1, label %bb3, label %bb1, !dbg !6038

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>::Ok", ptr %self, i32 0, i32 1, !dbg !6039
  %3 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !6039
  %v.0 = load i64, ptr %3, align 8, !dbg !6039, !noundef !45
  %4 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !6039
  %v.1 = load i64, ptr %4, align 8, !dbg !6039, !range !1362, !noundef !45
  %5 = getelementptr inbounds { i64, i64 }, ptr %v.dbg.spill, i32 0, i32 0, !dbg !6039
  store i64 %v.0, ptr %5, align 8, !dbg !6039
  %6 = getelementptr inbounds { i64, i64 }, ptr %v.dbg.spill, i32 0, i32 1, !dbg !6039
  store i64 %v.1, ptr %6, align 8, !dbg !6039
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !6032, metadata !DIExpression()), !dbg !6040
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", ptr %0, i32 0, i32 1, !dbg !6041
  %8 = getelementptr inbounds { i64, i64 }, ptr %7, i32 0, i32 0, !dbg !6041
  store i64 %v.0, ptr %8, align 8, !dbg !6041
  %9 = getelementptr inbounds { i64, i64 }, ptr %7, i32 0, i32 1, !dbg !6041
  store i64 %v.1, ptr %9, align 8, !dbg !6041
  store i64 0, ptr %0, align 8, !dbg !6041
  br label %bb4, !dbg !6042

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>::Err", ptr %self, i32 0, i32 1, !dbg !6043
  %11 = getelementptr inbounds { i64, i64 }, ptr %10, i32 0, i32 0, !dbg !6043
  %e.0 = load i64, ptr %11, align 8, !dbg !6043
  %12 = getelementptr inbounds { i64, i64 }, ptr %10, i32 0, i32 1, !dbg !6043
  %e.1 = load i64, ptr %12, align 8, !dbg !6043, !range !1009, !noundef !45
  %13 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !6043
  store i64 %e.0, ptr %13, align 8, !dbg !6043
  %14 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !6043
  store i64 %e.1, ptr %14, align 8, !dbg !6043
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !6034, metadata !DIExpression()), !dbg !6044
  %15 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6045
  store i64 %e.0, ptr %15, align 8, !dbg !6045
  %16 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6045
  store i64 %e.1, ptr %16, align 8, !dbg !6045
  %17 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6046
  %18 = load i64, ptr %17, align 8, !dbg !6046
  %19 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6046
  %20 = load i64, ptr %19, align 8, !dbg !6046, !range !1009, !noundef !45
  %21 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", ptr %0, i32 0, i32 1, !dbg !6046
  %22 = getelementptr inbounds { i64, i64 }, ptr %21, i32 0, i32 0, !dbg !6046
  store i64 %18, ptr %22, align 8, !dbg !6046
  %23 = getelementptr inbounds { i64, i64 }, ptr %21, i32 0, i32 1, !dbg !6046
  store i64 %20, ptr %23, align 8, !dbg !6046
  store i64 1, ptr %0, align 8, !dbg !6046
  br label %bb4, !dbg !6047

bb2:                                              ; No predecessors!
  unreachable, !dbg !6037

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !6048
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5a020fd026a170c9E"(i64 %0, i64 %1) unnamed_addr #1 !dbg !6049 {
start:
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6069, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !6072, metadata !DIExpression()), !dbg !6075
  %_2 = load i64, ptr %self, align 8, !dbg !6076, !range !1797, !noundef !45
  %5 = icmp eq i64 %_2, 0, !dbg !6077
  br i1 %5, label %bb3, label %bb1, !dbg !6077

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !6078
  %v = load i64, ptr %6, align 8, !dbg !6078, !noundef !45
  store i64 %v, ptr %v.dbg.spill, align 8, !dbg !6078
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !6070, metadata !DIExpression()), !dbg !6079
  %7 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !6080
  store i64 %v, ptr %7, align 8, !dbg !6080
  store i64 0, ptr %2, align 8, !dbg !6080
  br label %bb4, !dbg !6081

bb1:                                              ; preds = %start
  store i64 1, ptr %2, align 8, !dbg !6082
  br label %bb4, !dbg !6083

bb2:                                              ; No predecessors!
  unreachable, !dbg !6076

bb4:                                              ; preds = %bb3, %bb1
  %8 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !6084
  %9 = load i64, ptr %8, align 8, !dbg !6084, !range !1797, !noundef !45
  %10 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !6084
  %11 = load i64, ptr %10, align 8, !dbg !6084
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0, !dbg !6084
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1, !dbg !6084
  ret { i64, i64 } %13, !dbg !6084
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5c5715714b30109aE"(i64 %0, i64 %1) unnamed_addr #1 !dbg !6085 {
start:
  %v.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6103, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !6106, metadata !DIExpression()), !dbg !6109
  %5 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !6110
  %6 = load i64, ptr %5, align 8, !dbg !6110, !range !1009, !noundef !45
  %7 = icmp eq i64 %6, 0, !dbg !6110
  %_2 = select i1 %7, i64 1, i64 0, !dbg !6110
  %8 = icmp eq i64 %_2, 0, !dbg !6111
  br i1 %8, label %bb3, label %bb1, !dbg !6111

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0, !dbg !6112
  %v.0 = load i64, ptr %9, align 8, !dbg !6112, !noundef !45
  %10 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !6112
  %v.1 = load i64, ptr %10, align 8, !dbg !6112, !range !1362, !noundef !45
  %11 = getelementptr inbounds { i64, i64 }, ptr %v.dbg.spill, i32 0, i32 0, !dbg !6112
  store i64 %v.0, ptr %11, align 8, !dbg !6112
  %12 = getelementptr inbounds { i64, i64 }, ptr %v.dbg.spill, i32 0, i32 1, !dbg !6112
  store i64 %v.1, ptr %12, align 8, !dbg !6112
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !6104, metadata !DIExpression()), !dbg !6113
  %13 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !6114
  store i64 %v.0, ptr %13, align 8, !dbg !6114
  %14 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !6114
  store i64 %v.1, ptr %14, align 8, !dbg !6114
  br label %bb4, !dbg !6115

bb1:                                              ; preds = %start
  %15 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !6116
  store i64 0, ptr %15, align 8, !dbg !6116
  br label %bb4, !dbg !6117

bb2:                                              ; No predecessors!
  unreachable, !dbg !6110

bb4:                                              ; preds = %bb3, %bb1
  %16 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !6118
  %17 = load i64, ptr %16, align 8, !dbg !6118
  %18 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !6118
  %19 = load i64, ptr %18, align 8, !dbg !6118, !range !1009, !noundef !45
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !6118
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !6118
  ret { i64, i64 } %21, !dbg !6118
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6003ae7f068e1a55E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") %0, ptr %self) unnamed_addr #1 !dbg !6119 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6139, metadata !DIExpression()), !dbg !6144
  %_2 = load i64, ptr %self, align 8, !dbg !6145, !range !1797, !noundef !45
  %1 = icmp eq i64 %_2, 0, !dbg !6146
  br i1 %1, label %bb3, label %bb1, !dbg !6146

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>::Ok", ptr %self, i32 0, i32 1, !dbg !6147
  %3 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !6147
  %v.0 = load ptr, ptr %3, align 8, !dbg !6147, !nonnull !45, !noundef !45
  %4 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !6147
  %v.1 = load i64, ptr %4, align 8, !dbg !6147, !noundef !45
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0, !dbg !6147
  store ptr %v.0, ptr %5, align 8, !dbg !6147
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1, !dbg !6147
  store i64 %v.1, ptr %6, align 8, !dbg !6147
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !6140, metadata !DIExpression()), !dbg !6148
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %0, i32 0, i32 1, !dbg !6149
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !6149
  store ptr %v.0, ptr %8, align 8, !dbg !6149
  %9 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !6149
  store i64 %v.1, ptr %9, align 8, !dbg !6149
  store i64 0, ptr %0, align 8, !dbg !6149
  br label %bb4, !dbg !6150

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>::Err", ptr %self, i32 0, i32 1, !dbg !6151
  %11 = getelementptr inbounds { i64, i64 }, ptr %10, i32 0, i32 0, !dbg !6151
  %e.0 = load i64, ptr %11, align 8, !dbg !6151
  %12 = getelementptr inbounds { i64, i64 }, ptr %10, i32 0, i32 1, !dbg !6151
  %e.1 = load i64, ptr %12, align 8, !dbg !6151, !range !1009, !noundef !45
  %13 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !6151
  store i64 %e.0, ptr %13, align 8, !dbg !6151
  %14 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !6151
  store i64 %e.1, ptr %14, align 8, !dbg !6151
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !6142, metadata !DIExpression()), !dbg !6152
  %15 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6153
  store i64 %e.0, ptr %15, align 8, !dbg !6153
  %16 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6153
  store i64 %e.1, ptr %16, align 8, !dbg !6153
  %17 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6154
  %18 = load i64, ptr %17, align 8, !dbg !6154
  %19 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6154
  %20 = load i64, ptr %19, align 8, !dbg !6154, !range !1009, !noundef !45
  %21 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %0, i32 0, i32 1, !dbg !6154
  %22 = getelementptr inbounds { i64, i64 }, ptr %21, i32 0, i32 0, !dbg !6154
  store i64 %18, ptr %22, align 8, !dbg !6154
  %23 = getelementptr inbounds { i64, i64 }, ptr %21, i32 0, i32 1, !dbg !6154
  store i64 %20, ptr %23, align 8, !dbg !6154
  store i64 1, ptr %0, align 8, !dbg !6154
  br label %bb4, !dbg !6155

bb2:                                              ; No predecessors!
  unreachable, !dbg !6145

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !6156
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8ec2df2520998989E"(ptr %0) unnamed_addr #1 !dbg !6157 {
start:
  %v.dbg.spill = alloca ptr, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %1 = alloca ptr, align 8
  %self = alloca ptr, align 8
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6177, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !6180, metadata !DIExpression()), !dbg !6183
  %2 = load ptr, ptr %self, align 8, !dbg !6184, !noundef !45
  %3 = ptrtoint ptr %2 to i64, !dbg !6184
  %4 = icmp eq i64 %3, 0, !dbg !6184
  %_2 = select i1 %4, i64 1, i64 0, !dbg !6184
  %5 = icmp eq i64 %_2, 0, !dbg !6185
  br i1 %5, label %bb3, label %bb1, !dbg !6185

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 8, !dbg !6186, !nonnull !45, !noundef !45
  store ptr %v, ptr %v.dbg.spill, align 8, !dbg !6186
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !6178, metadata !DIExpression()), !dbg !6187
  store ptr %v, ptr %1, align 8, !dbg !6188
  br label %bb4, !dbg !6189

bb1:                                              ; preds = %start
  store ptr null, ptr %1, align 8, !dbg !6190
  br label %bb4, !dbg !6191

bb2:                                              ; No predecessors!
  unreachable, !dbg !6184

bb4:                                              ; preds = %bb3, %bb1
  %6 = load ptr, ptr %1, align 8, !dbg !6192, !noundef !45
  ret ptr %6, !dbg !6192
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd472b4c890546766E"(i64 %0, i64 %1) unnamed_addr #1 !dbg !6193 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %_5 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0
  store i64 %0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6211, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !6212, metadata !DIExpression()), !dbg !6217
  %5 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !6218
  %6 = load i64, ptr %5, align 8, !dbg !6218, !range !1024, !noundef !45
  %7 = icmp eq i64 %6, -9223372036854775807, !dbg !6218
  %_2 = select i1 %7, i64 0, i64 1, !dbg !6218
  %8 = icmp eq i64 %_2, 0, !dbg !6219
  br i1 %8, label %bb3, label %bb1, !dbg !6219

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !6220
  store i64 -9223372036854775807, ptr %9, align 8, !dbg !6220
  br label %bb4, !dbg !6221

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0, !dbg !6222
  %e.0 = load i64, ptr %10, align 8, !dbg !6222
  %11 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !6222
  %e.1 = load i64, ptr %11, align 8, !dbg !6222, !range !1009, !noundef !45
  %12 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !6222
  store i64 %e.0, ptr %12, align 8, !dbg !6222
  %13 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !6222
  store i64 %e.1, ptr %13, align 8, !dbg !6222
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !6214, metadata !DIExpression()), !dbg !6223
  %14 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6224
  store i64 %e.0, ptr %14, align 8, !dbg !6224
  %15 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6224
  store i64 %e.1, ptr %15, align 8, !dbg !6224
  %16 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6225
  %17 = load i64, ptr %16, align 8, !dbg !6225
  %18 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6225
  %19 = load i64, ptr %18, align 8, !dbg !6225, !range !1009, !noundef !45
  %20 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !6225
  store i64 %17, ptr %20, align 8, !dbg !6225
  %21 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !6225
  store i64 %19, ptr %21, align 8, !dbg !6225
  br label %bb4, !dbg !6226

bb2:                                              ; No predecessors!
  unreachable, !dbg !6218

bb4:                                              ; preds = %bb3, %bb1
  %22 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !6227
  %23 = load i64, ptr %22, align 8, !dbg !6227
  %24 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !6227
  %25 = load i64, ptr %24, align 8, !dbg !6227, !range !1024, !noundef !45
  %26 = insertvalue { i64, i64 } undef, i64 %23, 0, !dbg !6227
  %27 = insertvalue { i64, i64 } %26, i64 %25, 1, !dbg !6227
  ret { i64, i64 } %27, !dbg !6227
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdf3f46318328a39cE"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>") %0, ptr %self) unnamed_addr #1 !dbg !6228 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6246, metadata !DIExpression()), !dbg !6251
  %_2 = load i64, ptr %self, align 8, !dbg !6252, !range !1797, !noundef !45
  %1 = icmp eq i64 %_2, 0, !dbg !6253
  br i1 %1, label %bb3, label %bb1, !dbg !6253

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>::Ok", ptr %self, i32 0, i32 1, !dbg !6254
  %3 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !6254
  %v.0 = load ptr, ptr %3, align 8, !dbg !6254, !nonnull !45, !noundef !45
  %4 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !6254
  %v.1 = load i64, ptr %4, align 8, !dbg !6254, !noundef !45
  %5 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0, !dbg !6254
  store ptr %v.0, ptr %5, align 8, !dbg !6254
  %6 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1, !dbg !6254
  store i64 %v.1, ptr %6, align 8, !dbg !6254
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !6247, metadata !DIExpression()), !dbg !6255
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %0, i32 0, i32 1, !dbg !6256
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !6256
  store ptr %v.0, ptr %8, align 8, !dbg !6256
  %9 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !6256
  store i64 %v.1, ptr %9, align 8, !dbg !6256
  store i64 0, ptr %0, align 8, !dbg !6256
  br label %bb4, !dbg !6257

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>::Err", ptr %self, i32 0, i32 1, !dbg !6258
  %11 = getelementptr inbounds { i64, i64 }, ptr %10, i32 0, i32 0, !dbg !6258
  %e.0 = load i64, ptr %11, align 8, !dbg !6258
  %12 = getelementptr inbounds { i64, i64 }, ptr %10, i32 0, i32 1, !dbg !6258
  %e.1 = load i64, ptr %12, align 8, !dbg !6258, !range !1009, !noundef !45
  %13 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !6258
  store i64 %e.0, ptr %13, align 8, !dbg !6258
  %14 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !6258
  store i64 %e.1, ptr %14, align 8, !dbg !6258
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !6249, metadata !DIExpression()), !dbg !6259
  %15 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6260
  store i64 %e.0, ptr %15, align 8, !dbg !6260
  %16 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6260
  store i64 %e.1, ptr %16, align 8, !dbg !6260
  %17 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6261
  %18 = load i64, ptr %17, align 8, !dbg !6261
  %19 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6261
  %20 = load i64, ptr %19, align 8, !dbg !6261, !range !1009, !noundef !45
  %21 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %0, i32 0, i32 1, !dbg !6261
  %22 = getelementptr inbounds { i64, i64 }, ptr %21, i32 0, i32 0, !dbg !6261
  store i64 %18, ptr %22, align 8, !dbg !6261
  %23 = getelementptr inbounds { i64, i64 }, ptr %21, i32 0, i32 1, !dbg !6261
  store i64 %20, ptr %23, align 8, !dbg !6261
  store i64 1, ptr %0, align 8, !dbg !6261
  br label %bb4, !dbg !6262

bb2:                                              ; No predecessors!
  unreachable, !dbg !6252

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !6263
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heb249f893b3cbe1fE"(ptr %0, i64 %1) unnamed_addr #1 !dbg !6264 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %2 = alloca { ptr, i64 }, align 8
  %self = alloca { ptr, i64 }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6282, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !6285, metadata !DIExpression()), !dbg !6288
  %5 = load ptr, ptr %self, align 8, !dbg !6289, !noundef !45
  %6 = ptrtoint ptr %5 to i64, !dbg !6289
  %7 = icmp eq i64 %6, 0, !dbg !6289
  %_2 = select i1 %7, i64 1, i64 0, !dbg !6289
  %8 = icmp eq i64 %_2, 0, !dbg !6290
  br i1 %8, label %bb3, label %bb1, !dbg !6290

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0, !dbg !6291
  %v.0 = load ptr, ptr %9, align 8, !dbg !6291, !nonnull !45, !noundef !45
  %10 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1, !dbg !6291
  %v.1 = load i64, ptr %10, align 8, !dbg !6291, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0, !dbg !6291
  store ptr %v.0, ptr %11, align 8, !dbg !6291
  %12 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1, !dbg !6291
  store i64 %v.1, ptr %12, align 8, !dbg !6291
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !6283, metadata !DIExpression()), !dbg !6292
  %13 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !6293
  store ptr %v.0, ptr %13, align 8, !dbg !6293
  %14 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !6293
  store i64 %v.1, ptr %14, align 8, !dbg !6293
  br label %bb4, !dbg !6294

bb1:                                              ; preds = %start
  store ptr null, ptr %2, align 8, !dbg !6295
  br label %bb4, !dbg !6296

bb2:                                              ; No predecessors!
  unreachable, !dbg !6289

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !6297
  %16 = load ptr, ptr %15, align 8, !dbg !6297, !noundef !45
  %17 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !6297
  %18 = load i64, ptr %17, align 8, !dbg !6297
  %19 = insertvalue { ptr, i64 } undef, ptr %16, 0, !dbg !6297
  %20 = insertvalue { ptr, i64 } %19, i64 %18, 1, !dbg !6297
  ret { ptr, i64 } %20, !dbg !6297
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf9c0162c02d55595E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, usize>") %0, ptr %self) unnamed_addr #1 !dbg !6298 {
start:
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6316, metadata !DIExpression()), !dbg !6321
  %1 = getelementptr inbounds %"core::result::Result<usize, collections::TryReserveErrorKind>", ptr %self, i32 0, i32 1, !dbg !6322
  %2 = load i64, ptr %1, align 8, !dbg !6322, !range !1024, !noundef !45
  %3 = icmp eq i64 %2, -9223372036854775807, !dbg !6322
  %_2 = select i1 %3, i64 0, i64 1, !dbg !6322
  %4 = icmp eq i64 %_2, 0, !dbg !6323
  br i1 %4, label %bb3, label %bb1, !dbg !6323

bb3:                                              ; preds = %start
  %v = load i64, ptr %self, align 8, !dbg !6324, !noundef !45
  store i64 %v, ptr %v.dbg.spill, align 8, !dbg !6324
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !6317, metadata !DIExpression()), !dbg !6325
  store i64 %v, ptr %0, align 8, !dbg !6326
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, usize>", ptr %0, i32 0, i32 1, !dbg !6326
  store i64 -9223372036854775807, ptr %5, align 8, !dbg !6326
  br label %bb4, !dbg !6327

bb1:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 0, !dbg !6328
  %e.0 = load i64, ptr %6, align 8, !dbg !6328
  %7 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !6328
  %e.1 = load i64, ptr %7, align 8, !dbg !6328, !range !1009, !noundef !45
  %8 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 0, !dbg !6328
  store i64 %e.0, ptr %8, align 8, !dbg !6328
  %9 = getelementptr inbounds { i64, i64 }, ptr %e.dbg.spill, i32 0, i32 1, !dbg !6328
  store i64 %e.1, ptr %9, align 8, !dbg !6328
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !6319, metadata !DIExpression()), !dbg !6329
  %10 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6330
  store i64 %e.0, ptr %10, align 8, !dbg !6330
  %11 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6330
  store i64 %e.1, ptr %11, align 8, !dbg !6330
  %12 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !6331
  %13 = load i64, ptr %12, align 8, !dbg !6331
  %14 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !6331
  %15 = load i64, ptr %14, align 8, !dbg !6331, !range !1009, !noundef !45
  %16 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !6331
  store i64 %13, ptr %16, align 8, !dbg !6331
  %17 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !6331
  store i64 %15, ptr %17, align 8, !dbg !6331
  br label %bb4, !dbg !6332

bb2:                                              ; No predecessors!
  unreachable, !dbg !6322

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !6333
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6b408331ae9cadd1E"(ptr align 8 %self) unnamed_addr #1 !dbg !6334 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6339, metadata !DIExpression()), !dbg !6340
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h2f55c19c44a2b949E(ptr align 8 %self) #17, !dbg !6341
  %_2.0 = extractvalue { i32, i32 } %0, 0, !dbg !6341
  %_2.1 = extractvalue { i32, i32 } %0, 1, !dbg !6341
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h43947862de07f8cdE"(i32 %_2.0, i32 %_2.1) #17, !dbg !6341, !range !527
  ret i32 %1, !dbg !6342
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h55868fced12bd259E"(ptr sret({ i64, { i64, i64 } }) %0, ptr align 8 %self) unnamed_addr #1 !dbg !6343 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %start.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %1 = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6351, metadata !DIExpression()), !dbg !6354
  store ptr %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !6355, metadata !DIExpression()), !dbg !6365
  %2 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !6367
  %start1.i = load ptr, ptr %2, align 8, !dbg !6367, !nonnull !45, !noundef !45
  store ptr %start1.i, ptr %start.dbg.spill.i, align 8, !dbg !6367
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill.i, metadata !6363, metadata !DIExpression()), !dbg !6368
  %_8.i = load ptr, ptr %self, align 8, !dbg !6368, !noundef !45
  store ptr %start1.i, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !2730, metadata !DIExpression()), !dbg !6369
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %3 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h2fc70a669a1a2a29E"(ptr %_8.i, ptr %start1.i) #17, !dbg !6368
  store i64 %3, ptr %1, align 8, !dbg !6368
  %4 = load i64, ptr %1, align 8, !dbg !6371, !noundef !45
  store i64 %4, ptr %len.dbg.spill, align 8, !dbg !6372
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !6352, metadata !DIExpression()), !dbg !6373
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %4, i64 3), !dbg !6374
  %_7.0 = extractvalue { i64, i1 } %5, 0, !dbg !6374
  %_7.1 = extractvalue { i64, i1 } %5, 1, !dbg !6374
  %6 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !6374
  br i1 %6, label %panic, label %bb2, !dbg !6374

bb2:                                              ; preds = %start
  %_4 = udiv i64 %_7.0, 4, !dbg !6374
  %7 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !6375
  store i64 %4, ptr %7, align 8, !dbg !6375
  store i64 1, ptr %_8, align 8, !dbg !6375
  store i64 %_4, ptr %0, align 8, !dbg !6376
  %8 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 0, !dbg !6376
  %9 = load i64, ptr %8, align 8, !dbg !6376, !range !1797, !noundef !45
  %10 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !6376
  %11 = load i64, ptr %10, align 8, !dbg !6376
  %12 = getelementptr inbounds { i64, { i64, i64 } }, ptr %0, i32 0, i32 1, !dbg !6376
  %13 = getelementptr inbounds { i64, i64 }, ptr %12, i32 0, i32 0, !dbg !6376
  store i64 %9, ptr %13, align 8, !dbg !6376
  %14 = getelementptr inbounds { i64, i64 }, ptr %12, i32 0, i32 1, !dbg !6376
  store i64 %11, ptr %14, align 8, !dbg !6376
  ret void, !dbg !6377

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_7f10fad61f04c36f7b13eb20a67afb16) #18, !dbg !6374
  unreachable, !dbg !6374
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h282c14b6b9721ca1E"() unnamed_addr #1 !dbg !6378 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %0 = alloca %"core::option::Option<core::result::Result<char, core::char::decode::DecodeUtf16Error>>", align 4
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !6414, metadata !DIExpression()), !dbg !6415
  store i16 2, ptr %0, align 4, !dbg !6416
  %1 = load i64, ptr %0, align 4, !dbg !6417
  ret i64 %1, !dbg !6417
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8e38e1f4f1275e75E"(ptr align 8 %self) unnamed_addr #1 !dbg !6418 {
start:
  %self.dbg.spill.i8 = alloca ptr, align 8
  %self.dbg.spill.i7 = alloca ptr, align 8
  %start.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %start.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %1 = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %index.dbg.spill = alloca i64, align 8
  %ch.dbg.spill = alloca i32, align 4
  %pre_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_16 = alloca { i64, i32 }, align 8
  %_4 = alloca i32, align 4
  %2 = alloca { i64, i32 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6441, metadata !DIExpression()), !dbg !6450
  store ptr %self, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !6355, metadata !DIExpression()), !dbg !6451
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !6453
  %start1.i4 = load ptr, ptr %3, align 8, !dbg !6453, !nonnull !45, !noundef !45
  store ptr %start1.i4, ptr %start.dbg.spill.i2, align 8, !dbg !6453
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill.i2, metadata !6363, metadata !DIExpression()), !dbg !6454
  %_8.i5 = load ptr, ptr %self, align 8, !dbg !6454, !noundef !45
  store ptr %start1.i4, ptr %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i7, metadata !2730, metadata !DIExpression()), !dbg !6455
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %4 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h2fc70a669a1a2a29E"(ptr %_8.i5, ptr %start1.i4) #17, !dbg !6454
  store i64 %4, ptr %0, align 8, !dbg !6454
  %5 = load i64, ptr %0, align 8, !dbg !6457, !noundef !45
  store i64 %5, ptr %pre_len.dbg.spill, align 8, !dbg !6458
  call void @llvm.dbg.declare(metadata ptr %pre_len.dbg.spill, metadata !6442, metadata !DIExpression()), !dbg !6459
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %6 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6b408331ae9cadd1E"(ptr align 8 %self) #17, !dbg !6460, !range !527
  store i32 %6, ptr %_4, align 4, !dbg !6460
  %7 = load i32, ptr %_4, align 4, !dbg !6460, !range !527, !noundef !45
  %8 = icmp eq i32 %7, 1114112, !dbg !6460
  %_6 = select i1 %8, i64 0, i64 1, !dbg !6460
  %9 = icmp eq i64 %_6, 0, !dbg !6461
  br i1 %9, label %bb5, label %bb3, !dbg !6461

bb5:                                              ; preds = %start
  %10 = getelementptr inbounds { i64, i32 }, ptr %2, i32 0, i32 1, !dbg !6462
  store i32 1114112, ptr %10, align 8, !dbg !6462
  br label %bb9, !dbg !6462

bb3:                                              ; preds = %start
  %ch = load i32, ptr %_4, align 4, !dbg !6463, !range !523, !noundef !45
  store i32 %ch, ptr %ch.dbg.spill, align 4, !dbg !6463
  call void @llvm.dbg.declare(metadata ptr %ch.dbg.spill, metadata !6444, metadata !DIExpression()), !dbg !6464
  %11 = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %self, i32 0, i32 1, !dbg !6465
  %index = load i64, ptr %11, align 8, !dbg !6465, !noundef !45
  store i64 %index, ptr %index.dbg.spill, align 8, !dbg !6465
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !6446, metadata !DIExpression()), !dbg !6466
  store ptr %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !6355, metadata !DIExpression()), !dbg !6467
  %12 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !6469
  %start1.i = load ptr, ptr %12, align 8, !dbg !6469, !nonnull !45, !noundef !45
  store ptr %start1.i, ptr %start.dbg.spill.i, align 8, !dbg !6469
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill.i, metadata !6363, metadata !DIExpression()), !dbg !6470
  %_8.i = load ptr, ptr %self, align 8, !dbg !6470, !noundef !45
  store ptr %start1.i, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !2730, metadata !DIExpression()), !dbg !6471
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %13 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h2fc70a669a1a2a29E"(ptr %_8.i, ptr %start1.i) #17, !dbg !6470
  store i64 %13, ptr %1, align 8, !dbg !6470
  %14 = load i64, ptr %1, align 8, !dbg !6473, !noundef !45
  store i64 %14, ptr %len.dbg.spill, align 8, !dbg !6474
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !6448, metadata !DIExpression()), !dbg !6475
  %_14.0 = sub i64 %5, %14, !dbg !6476
  %_14.1 = icmp ult i64 %5, %14, !dbg !6476
  %15 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false), !dbg !6476
  br i1 %15, label %panic, label %bb7, !dbg !6476

bb4:                                              ; No predecessors!
  unreachable, !dbg !6460

bb7:                                              ; preds = %bb3
  %16 = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %self, i32 0, i32 1, !dbg !6477
  %17 = load i64, ptr %16, align 8, !dbg !6477, !noundef !45
  %18 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %17, i64 %_14.0), !dbg !6477
  %_15.0 = extractvalue { i64, i1 } %18, 0, !dbg !6477
  %_15.1 = extractvalue { i64, i1 } %18, 1, !dbg !6477
  %19 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !6477
  br i1 %19, label %panic1, label %bb8, !dbg !6477

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_163ddd424740f2e23491ea382f7449b8) #18, !dbg !6476
  unreachable, !dbg !6476

bb8:                                              ; preds = %bb7
  %20 = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %self, i32 0, i32 1, !dbg !6477
  store i64 %_15.0, ptr %20, align 8, !dbg !6477
  store i64 %index, ptr %_16, align 8, !dbg !6478
  %21 = getelementptr inbounds { i64, i32 }, ptr %_16, i32 0, i32 1, !dbg !6478
  store i32 %ch, ptr %21, align 8, !dbg !6478
  %22 = getelementptr inbounds { i64, i32 }, ptr %_16, i32 0, i32 0, !dbg !6479
  %23 = load i64, ptr %22, align 8, !dbg !6479, !noundef !45
  %24 = getelementptr inbounds { i64, i32 }, ptr %_16, i32 0, i32 1, !dbg !6479
  %25 = load i32, ptr %24, align 8, !dbg !6479, !range !523, !noundef !45
  %26 = getelementptr inbounds { i64, i32 }, ptr %2, i32 0, i32 0, !dbg !6479
  store i64 %23, ptr %26, align 8, !dbg !6479
  %27 = getelementptr inbounds { i64, i32 }, ptr %2, i32 0, i32 1, !dbg !6479
  store i32 %25, ptr %27, align 8, !dbg !6479
  br label %bb9, !dbg !6480

panic1:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_2b3f523e9e2c5f09fa11ae6558c01255) #18, !dbg !6477
  unreachable, !dbg !6477

bb9:                                              ; preds = %bb5, %bb8
  %28 = getelementptr inbounds { i64, i32 }, ptr %2, i32 0, i32 0, !dbg !6481
  %29 = load i64, ptr %28, align 8, !dbg !6481
  %30 = getelementptr inbounds { i64, i32 }, ptr %2, i32 0, i32 1, !dbg !6481
  %31 = load i32, ptr %30, align 8, !dbg !6481, !range !527, !noundef !45
  %32 = insertvalue { i64, i32 } undef, i64 %29, 0, !dbg !6481
  %33 = insertvalue { i64, i32 } %32, i32 %31, 1, !dbg !6481
  ret { i64, i32 } %33, !dbg !6481
}

; <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound
; Function Attrs: noredzone nounwind
define { i64, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h41440c2060a192a3E"(ptr align 8 %self) unnamed_addr #0 !dbg !6482 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca { i64, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6489, metadata !DIExpression()), !dbg !6490
  %1 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !6491
  store ptr %self, ptr %1, align 8, !dbg !6491
  store i64 0, ptr %0, align 8, !dbg !6491
  %2 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 0, !dbg !6492
  %3 = load i64, ptr %2, align 8, !dbg !6492, !range !5077, !noundef !45
  %4 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !6492
  %5 = load ptr, ptr %4, align 8, !dbg !6492
  %6 = insertvalue { i64, ptr } undef, i64 %3, 0, !dbg !6492
  %7 = insertvalue { i64, ptr } %6, ptr %5, 1, !dbg !6492
  ret { i64, ptr } %7, !dbg !6492
}

; <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound
; Function Attrs: noredzone nounwind
define { i64, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17h6273a30cf1c50dedE"(ptr align 8 %self) unnamed_addr #0 !dbg !6493 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca { i64, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6495, metadata !DIExpression()), !dbg !6496
  %_2 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !6497
  %1 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !6498
  store ptr %_2, ptr %1, align 8, !dbg !6498
  store i64 1, ptr %0, align 8, !dbg !6498
  %2 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 0, !dbg !6499
  %3 = load i64, ptr %2, align 8, !dbg !6499, !range !5077, !noundef !45
  %4 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !6499
  %5 = load ptr, ptr %4, align 8, !dbg !6499
  %6 = insertvalue { i64, ptr } undef, i64 %3, 0, !dbg !6499
  %7 = insertvalue { i64, ptr } %6, ptr %5, 1, !dbg !6499
  ret { i64, ptr } %7, !dbg !6499
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h04a2c07ace5feab0E"(ptr align 8 %self) unnamed_addr #1 !dbg !6500 {
start:
  %self.dbg.spill.i5.i = alloca ptr, align 8
  %self.dbg.spill.i4.i = alloca ptr, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca ptr, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %old.dbg.spill.i = alloca ptr, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6517, metadata !DIExpression()), !dbg !6518
  %3 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !6519
  %_5 = load ptr, ptr %3, align 8, !dbg !6519, !nonnull !45, !noundef !45
  store ptr %_5, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !6520, metadata !DIExpression()), !dbg !6525
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hef57bdc5be76045bE"(ptr %_5) #17, !dbg !6519
  %_2 = xor i1 %_3, true, !dbg !6527
  call void @llvm.assume(i1 %_2), !dbg !6528
  br i1 true, label %bb3, label %bb5, !dbg !6529

bb5:                                              ; preds = %bb3, %start
  %4 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !6530
  %_13 = load ptr, ptr %4, align 8, !dbg !6530, !nonnull !45, !noundef !45
  store ptr %_13, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !6520, metadata !DIExpression()), !dbg !6531
  %_14 = load ptr, ptr %self, align 8, !dbg !6530, !noundef !45
  %_10 = icmp eq ptr %_13, %_14, !dbg !6530
  br i1 %_10, label %bb7, label %bb8, !dbg !6530

bb3:                                              ; preds = %start
  %_9 = load ptr, ptr %self, align 8, !dbg !6533, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h563d52a450f48a7fE"(ptr %_9) #17, !dbg !6533
  %_7 = xor i1 %_8, true, !dbg !6534
  call void @llvm.assume(i1 %_7), !dbg !6535
  br label %bb5, !dbg !6536

bb8:                                              ; preds = %bb5
  store ptr %self, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !6537, metadata !DIExpression()), !dbg !6545
  store i64 1, ptr %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill.i, metadata !6542, metadata !DIExpression()), !dbg !6547
  %5 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !6548
  %_9.i = load ptr, ptr %5, align 8, !dbg !6548, !nonnull !45, !noundef !45
  store ptr %_9.i, ptr %self.dbg.spill.i5.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5.i, metadata !6520, metadata !DIExpression()), !dbg !6549
  store ptr %_9.i, ptr %old.dbg.spill.i, align 8, !dbg !6548
  call void @llvm.dbg.declare(metadata ptr %old.dbg.spill.i, metadata !6543, metadata !DIExpression()), !dbg !6551
  %6 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !6552
  %_13.i = load ptr, ptr %6, align 8, !dbg !6552, !nonnull !45, !noundef !45
  store ptr %_13.i, ptr %self.dbg.spill.i4.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4.i, metadata !6520, metadata !DIExpression()), !dbg !6553
  store ptr %_13.i, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !6555, metadata !DIExpression()), !dbg !6561
  store i64 1, ptr %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i.i, metadata !6560, metadata !DIExpression()), !dbg !6563
  store ptr %_13.i, ptr %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2.i, metadata !6564, metadata !DIExpression()), !dbg !6570
  store i64 1, ptr %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1.i, metadata !6569, metadata !DIExpression()), !dbg !6572
  %7 = getelementptr inbounds { ptr, i64 }, ptr %_13.i, i64 1, !dbg !6573
  store ptr %7, ptr %0, align 8, !dbg !6573
  %_3.i.i = load ptr, ptr %0, align 8, !dbg !6573, !noundef !45
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_10.i = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h7a4f4845fc541a9fE"(ptr %_3.i.i) #17, !dbg !6574
  %8 = getelementptr inbounds { ptr, ptr }, ptr %self, i32 0, i32 1, !dbg !6575
  store ptr %_10.i, ptr %8, align 8, !dbg !6575
  store ptr %_9.i, ptr %1, align 8, !dbg !6576
  %9 = load ptr, ptr %1, align 8, !dbg !6577, !noundef !45
  store ptr %9, ptr %2, align 8, !dbg !6578
  br label %bb10, !dbg !6579

bb7:                                              ; preds = %bb5
  store ptr null, ptr %2, align 8, !dbg !6580
  br label %bb10, !dbg !6579

bb10:                                             ; preds = %bb8, %bb7
  %10 = load ptr, ptr %2, align 8, !dbg !6581, !align !1159, !noundef !45
  ret ptr %10, !dbg !6581
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h764ee8914d8afce4E"() unnamed_addr #1 !dbg !6582 {
start:
  %output.dbg.spill = alloca {}, align 1
  %0 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %output.dbg.spill, metadata !6587, metadata !DIExpression()), !dbg !6588
  store i32 1114112, ptr %0, align 4, !dbg !6589
  %1 = load i32, ptr %0, align 4, !dbg !6590, !range !527, !noundef !45
  ret i32 %1, !dbg !6590
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2de0f0ea9526867dE"(i32 %0) unnamed_addr #1 !dbg !6591 {
start:
  %b.dbg.spill = alloca i32, align 4
  %c.dbg.spill = alloca {}, align 1
  %_5 = alloca i32, align 4
  %1 = alloca i32, align 4
  %self = alloca i32, align 4
  store i32 %0, ptr %self, align 4
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6610, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !6611, metadata !DIExpression()), !dbg !6616
  %2 = load i32, ptr %self, align 4, !dbg !6617, !range !527, !noundef !45
  %3 = icmp eq i32 %2, 1114112, !dbg !6617
  %_2 = select i1 %3, i64 0, i64 1, !dbg !6617
  %4 = icmp eq i64 %_2, 0, !dbg !6618
  br i1 %4, label %bb3, label %bb1, !dbg !6618

bb3:                                              ; preds = %start
  store i32 1114112, ptr %1, align 4, !dbg !6619
  br label %bb4, !dbg !6620

bb1:                                              ; preds = %start
  %b = load i32, ptr %self, align 4, !dbg !6621, !range !523, !noundef !45
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !6621
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !6613, metadata !DIExpression()), !dbg !6622
  store i32 %b, ptr %_5, align 4, !dbg !6623
  %5 = load i32, ptr %_5, align 4, !dbg !6624, !range !523, !noundef !45
  store i32 %5, ptr %1, align 4, !dbg !6624
  br label %bb4, !dbg !6625

bb2:                                              ; No predecessors!
  unreachable, !dbg !6617

bb4:                                              ; preds = %bb3, %bb1
  %6 = load i32, ptr %1, align 4, !dbg !6626, !range !527, !noundef !45
  ret i32 %6, !dbg !6626
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h00d17420f9382b19E"(ptr align 1 %reference.0, i64 %reference.1) unnamed_addr #1 !dbg !6627 {
start:
  %reference.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 0
  store ptr %reference.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 1
  store i64 %reference.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %reference.dbg.spill, metadata !6632, metadata !DIExpression()), !dbg !6633
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %2 = call { ptr, i64 } @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3595142e05cbf24eE"(ptr align 1 %reference.0, i64 %reference.1) #17, !dbg !6634
  %_2.0 = extractvalue { ptr, i64 } %2, 0, !dbg !6634
  %_2.1 = extractvalue { ptr, i64 } %2, 1, !dbg !6634
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %3 = call { ptr, i64 } @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hbf2c858b77d1c5ebE"(ptr %_2.0, i64 %_2.1) #17, !dbg !6635
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !6635
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !6635
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !6636
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !6636
  ret { ptr, i64 } %7, !dbg !6636
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hcf377dff5374381eE"(ptr align 1 %reference.0, i64 %reference.1) unnamed_addr #1 !dbg !6637 {
start:
  %reference.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 0
  store ptr %reference.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 1
  store i64 %reference.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %reference.dbg.spill, metadata !6645, metadata !DIExpression()), !dbg !6646
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %2 = call { ptr, i64 } @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h1b6c4e887c24bdbbE"(ptr align 1 %reference.0, i64 %reference.1) #17, !dbg !6647
  %_2.0 = extractvalue { ptr, i64 } %2, 0, !dbg !6647
  %_2.1 = extractvalue { ptr, i64 } %2, 1, !dbg !6647
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %3 = call { ptr, i64 } @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha1829cc479268ba9E"(ptr %_2.0, i64 %_2.1) #17, !dbg !6648
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !6648
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !6648
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !6649
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !6649
  ret { ptr, i64 } %7, !dbg !6649
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hd35d9bf1649aa795E"(ptr align 1 %reference.0, i64 %reference.1) unnamed_addr #1 !dbg !6650 {
start:
  %reference.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 0
  store ptr %reference.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 1
  store i64 %reference.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %reference.dbg.spill, metadata !6654, metadata !DIExpression()), !dbg !6655
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %2 = call { ptr, i64 } @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc253556abe3717b3E"(ptr align 1 %reference.0, i64 %reference.1) #17, !dbg !6656
  %_2.0 = extractvalue { ptr, i64 } %2, 0, !dbg !6656
  %_2.1 = extractvalue { ptr, i64 } %2, 1, !dbg !6656
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %3 = call { ptr, i64 } @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h5a77d6d20903ef2aE"(ptr %_2.0, i64 %_2.1) #17, !dbg !6657
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !6657
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !6657
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !6658
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !6658
  ret { ptr, i64 } %7, !dbg !6658
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hdfe988f1a1c2e898E"(ptr align 1 %reference.0, i64 %reference.1) unnamed_addr #1 !dbg !6659 {
start:
  %reference.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 0
  store ptr %reference.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 1
  store i64 %reference.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %reference.dbg.spill, metadata !6663, metadata !DIExpression()), !dbg !6664
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %2 = call { ptr, i64 } @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h574bcc3163345f80E"(ptr align 1 %reference.0, i64 %reference.1) #17, !dbg !6665
  %_2.0 = extractvalue { ptr, i64 } %2, 0, !dbg !6665
  %_2.1 = extractvalue { ptr, i64 } %2, 1, !dbg !6665
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %3 = call { ptr, i64 } @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h8dfa8cec0e925604E"(ptr %_2.0, i64 %_2.1) #17, !dbg !6666
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !6666
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !6666
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !6667
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !6667
  ret { ptr, i64 } %7, !dbg !6667
}

; <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8b6fe0e82e9bd1c9E"(ptr align 8 %self) unnamed_addr #1 !dbg !6668 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6670, metadata !DIExpression()), !dbg !6671
; call core::str::validations::next_code_point_reverse
  %0 = call { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17hf7af2c7429af4f18E(ptr align 8 %self) #17, !dbg !6672
  %_2.0 = extractvalue { i32, i32 } %0, 0, !dbg !6672
  %_2.1 = extractvalue { i32, i32 } %0, 1, !dbg !6672
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17he0bced72114984cdE"(i32 %_2.0, i32 %_2.1) #17, !dbg !6672, !range !527
  ret i32 %1, !dbg !6673
}

; <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h838120a02046a358E"(i32 %ch) unnamed_addr #1 !dbg !6674 {
start:
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<core::str::iter::Chars<'_> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !6679, metadata !DIExpression()), !dbg !6680
  store i32 %ch, ptr %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %ch.dbg.spill, metadata !6678, metadata !DIExpression()), !dbg !6681
; call core::char::methods::<impl char>::from_u32_unchecked
  %0 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h991ddb6749a94a8bE"(i32 %ch) #17, !dbg !6682, !range !523
  ret i32 %0, !dbg !6683
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::find
; Function Attrs: inlinehint noredzone nounwind
define i32 @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hbe1371b282d78156E"(ptr align 8 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !6684 {
start:
  %predicate.dbg.spill = alloca { ptr, ptr }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6690, metadata !DIExpression()), !dbg !6693
  %0 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 0
  store ptr %predicate.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, ptr }, ptr %predicate.dbg.spill, i32 0, i32 1
  store ptr %predicate.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %predicate.dbg.spill, metadata !6691, metadata !DIExpression()), !dbg !6694
; call core::iter::traits::double_ended::DoubleEndedIterator::rfind
  %2 = call i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind17hf65e20d09391b2fdE(ptr align 8 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) #17, !dbg !6695, !range !527
  ret i32 %2, !dbg !6696
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h1b6c4e887c24bdbbE"(ptr align 1 %reference.0, i64 %reference.1) unnamed_addr #1 !dbg !6697 {
start:
  %reference.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 0
  store ptr %reference.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 1
  store i64 %reference.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %reference.dbg.spill, metadata !6702, metadata !DIExpression()), !dbg !6703
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !6704
  store ptr %reference.0, ptr %3, align 8, !dbg !6704
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !6704
  store i64 %reference.1, ptr %4, align 8, !dbg !6704
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !6705
  %6 = load ptr, ptr %5, align 8, !dbg !6705, !nonnull !45, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !6705
  %8 = load i64, ptr %7, align 8, !dbg !6705, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !6705
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !6705
  ret { ptr, i64 } %10, !dbg !6705
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3595142e05cbf24eE"(ptr align 1 %reference.0, i64 %reference.1) unnamed_addr #1 !dbg !6706 {
start:
  %reference.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 0
  store ptr %reference.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 1
  store i64 %reference.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %reference.dbg.spill, metadata !6710, metadata !DIExpression()), !dbg !6711
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !6712
  store ptr %reference.0, ptr %3, align 8, !dbg !6712
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !6712
  store i64 %reference.1, ptr %4, align 8, !dbg !6712
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !6713
  %6 = load ptr, ptr %5, align 8, !dbg !6713, !nonnull !45, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !6713
  %8 = load i64, ptr %7, align 8, !dbg !6713, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !6713
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !6713
  ret { ptr, i64 } %10, !dbg !6713
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h574bcc3163345f80E"(ptr align 1 %reference.0, i64 %reference.1) unnamed_addr #1 !dbg !6714 {
start:
  %reference.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 0
  store ptr %reference.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 1
  store i64 %reference.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %reference.dbg.spill, metadata !6718, metadata !DIExpression()), !dbg !6719
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !6720
  store ptr %reference.0, ptr %3, align 8, !dbg !6720
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !6720
  store i64 %reference.1, ptr %4, align 8, !dbg !6720
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !6721
  %6 = load ptr, ptr %5, align 8, !dbg !6721, !nonnull !45, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !6721
  %8 = load i64, ptr %7, align 8, !dbg !6721, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !6721
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !6721
  ret { ptr, i64 } %10, !dbg !6721
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17habb15163be7335dcE"(ptr align 8 %reference) unnamed_addr #1 !dbg !6722 {
start:
  %reference.dbg.spill = alloca ptr, align 8
  %0 = alloca ptr, align 8
  store ptr %reference, ptr %reference.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %reference.dbg.spill, metadata !6727, metadata !DIExpression()), !dbg !6728
  store ptr %reference, ptr %0, align 8, !dbg !6729
  %1 = load ptr, ptr %0, align 8, !dbg !6730, !nonnull !45, !noundef !45
  ret ptr %1, !dbg !6730
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc253556abe3717b3E"(ptr align 1 %reference.0, i64 %reference.1) unnamed_addr #1 !dbg !6731 {
start:
  %reference.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 0
  store ptr %reference.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %reference.dbg.spill, i32 0, i32 1
  store i64 %reference.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %reference.dbg.spill, metadata !6735, metadata !DIExpression()), !dbg !6736
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !6737
  store ptr %reference.0, ptr %3, align 8, !dbg !6737
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !6737
  store i64 %reference.1, ptr %4, align 8, !dbg !6737
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !6738
  %6 = load ptr, ptr %5, align 8, !dbg !6738, !nonnull !45, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !6738
  %8 = load i64, ptr %7, align 8, !dbg !6738, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !6738
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !6738
  ret { ptr, i64 } %10, !dbg !6738
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hed8bcff8ac78ad8aE"(ptr align 8 %self) unnamed_addr #0 !dbg !6739 {
start:
  %c.dbg.spill = alloca i32, align 4
  %u2.dbg.spill = alloca i16, align 2
  %val.dbg.spill = alloca i16, align 2
  %0 = alloca i64, align 8
  %buf.dbg.spill = alloca i16, align 2
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca ptr, align 8
  %_50 = alloca %"core::result::Result<char, core::char::decode::DecodeUtf16Error>", align 4
  %_38 = alloca i16, align 2
  %_37 = alloca %"core::result::Result<char, core::char::decode::DecodeUtf16Error>", align 4
  %_36 = alloca { i16, i16 }, align 2
  %_33 = alloca i8, align 1
  %_31 = alloca i16, align 2
  %_30 = alloca %"core::result::Result<char, core::char::decode::DecodeUtf16Error>", align 4
  %_26 = alloca { i16, i16 }, align 2
  %_24 = alloca i16, align 2
  %_23 = alloca %"core::result::Result<char, core::char::decode::DecodeUtf16Error>", align 4
  %_17 = alloca %"core::result::Result<char, core::char::decode::DecodeUtf16Error>", align 4
  %_7 = alloca { i16, i16 }, align 2
  %_3 = alloca { i16, i16 }, align 2
  %u = alloca i16, align 2
  %1 = alloca %"core::option::Option<core::result::Result<char, core::char::decode::DecodeUtf16Error>>", align 4
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6745, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.declare(metadata ptr %u, metadata !6746, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !6750, metadata !DIExpression()), !dbg !6762
  %_4 = getelementptr inbounds %"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>", ptr %self, i32 0, i32 1, !dbg !6763
; call core::option::Option<T>::take
  %2 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17h32df2c97e4d03a48E"(ptr align 2 %_4) #17, !dbg !6763
  store { i16, i16 } %2, ptr %_3, align 2, !dbg !6763
  %3 = load i16, ptr %_3, align 2, !dbg !6763, !range !3925, !noundef !45
  %_5 = zext i16 %3 to i64, !dbg !6763
  %4 = icmp eq i64 %_5, 0, !dbg !6764
  br i1 %4, label %bb2, label %bb4, !dbg !6764

bb2:                                              ; preds = %start
; call <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next
  %5 = call { i16, i16 } @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h236747a0ed2b2f8fE"(ptr align 8 %self) #17, !dbg !6765
  %_8.0 = extractvalue { i16, i16 } %5, 0, !dbg !6765
  %_8.1 = extractvalue { i16, i16 } %5, 1, !dbg !6765
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %6 = call { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1149a61eb05c825aE"(i16 %_8.0, i16 %_8.1) #17, !dbg !6765
  store { i16, i16 } %6, ptr %_7, align 2, !dbg !6765
  %7 = load i16, ptr %_7, align 2, !dbg !6765, !range !3925, !noundef !45
  %_10 = zext i16 %7 to i64, !dbg !6765
  %8 = icmp eq i64 %_10, 0, !dbg !6765
  br i1 %8, label %bb7, label %bb9, !dbg !6765

bb4:                                              ; preds = %start
  %9 = getelementptr inbounds { i16, i16 }, ptr %_3, i32 0, i32 1, !dbg !6766
  %buf = load i16, ptr %9, align 2, !dbg !6766, !noundef !45
  store i16 %buf, ptr %buf.dbg.spill, align 2, !dbg !6766
  call void @llvm.dbg.declare(metadata ptr %buf.dbg.spill, metadata !6748, metadata !DIExpression()), !dbg !6767
  store i16 %buf, ptr %u, align 2, !dbg !6768
  br label %bb10, !dbg !6769

bb3:                                              ; No predecessors!
  unreachable, !dbg !6763

bb10:                                             ; preds = %bb7, %bb4
  %_16 = load i16, ptr %u, align 2, !dbg !6770, !noundef !45
; call core::num::<impl u16>::is_utf16_surrogate
  %_15 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17h65f3625dd0bb98dfE"(i16 %_16) #17, !dbg !6770
  %_14 = xor i1 %_15, true, !dbg !6771
  br i1 %_14, label %bb12, label %bb14, !dbg !6771

bb7:                                              ; preds = %bb2
  %10 = getelementptr inbounds { i16, i16 }, ptr %_7, i32 0, i32 1, !dbg !6765
  %val = load i16, ptr %10, align 2, !dbg !6765, !noundef !45
  store i16 %val, ptr %val.dbg.spill, align 2, !dbg !6765
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill, metadata !6752, metadata !DIExpression()), !dbg !6772
  store i16 %val, ptr %u, align 2, !dbg !6772
  br label %bb10, !dbg !6773

bb9:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %11 = call i64 @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h282c14b6b9721ca1E"() #17, !dbg !6774
  store i64 %11, ptr %0, align 8, !dbg !6774
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1, ptr align 8 %0, i64 8, i1 false), !dbg !6774
  br label %bb29, !dbg !6774

bb8:                                              ; No predecessors!
  unreachable, !dbg !6765

bb29:                                             ; preds = %bb18, %bb27, %bb24, %bb15, %bb12, %bb9
  %12 = load i64, ptr %1, align 4, !dbg !6775
  ret i64 %12, !dbg !6775

bb14:                                             ; preds = %bb10
  %_22 = load i16, ptr %u, align 2, !dbg !6776, !noundef !45
  %_21 = icmp uge i16 %_22, -9216, !dbg !6776
  br i1 %_21, label %bb15, label %bb16, !dbg !6776

bb12:                                             ; preds = %bb10
  %_20 = load i16, ptr %u, align 2, !dbg !6777, !noundef !45
  %_19 = zext i16 %_20 to i32, !dbg !6777
; call core::char::methods::<impl char>::from_u32_unchecked
  %_18 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h991ddb6749a94a8bE"(i32 %_19) #17, !dbg !6778, !range !523
  %13 = getelementptr inbounds %"core::result::Result<char, core::char::decode::DecodeUtf16Error>::Ok", ptr %_17, i32 0, i32 1, !dbg !6779
  store i32 %_18, ptr %13, align 4, !dbg !6779
  store i16 0, ptr %_17, align 4, !dbg !6779
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1, ptr align 4 %_17, i64 8, i1 false), !dbg !6780
  br label %bb29, !dbg !6781

bb16:                                             ; preds = %bb14
; call <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next
  %14 = call { i16, i16 } @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h236747a0ed2b2f8fE"(ptr align 8 %self) #17, !dbg !6782
  store { i16, i16 } %14, ptr %_26, align 2, !dbg !6782
  %15 = load i16, ptr %_26, align 2, !dbg !6782, !range !3925, !noundef !45
  %_28 = zext i16 %15 to i64, !dbg !6782
  %16 = icmp eq i64 %_28, 0, !dbg !6783
  br i1 %16, label %bb18, label %bb20, !dbg !6783

bb15:                                             ; preds = %bb14
  %_25 = load i16, ptr %u, align 2, !dbg !6784, !noundef !45
  store i16 %_25, ptr %_24, align 2, !dbg !6785
  %17 = load i16, ptr %_24, align 2, !dbg !6786, !noundef !45
  %18 = getelementptr inbounds %"core::result::Result<char, core::char::decode::DecodeUtf16Error>::Err", ptr %_23, i32 0, i32 1, !dbg !6786
  store i16 %17, ptr %18, align 2, !dbg !6786
  store i16 1, ptr %_23, align 4, !dbg !6786
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1, ptr align 4 %_23, i64 8, i1 false), !dbg !6787
  br label %bb29, !dbg !6788

bb18:                                             ; preds = %bb16
  %_32 = load i16, ptr %u, align 2, !dbg !6789, !noundef !45
  store i16 %_32, ptr %_31, align 2, !dbg !6790
  %19 = load i16, ptr %_31, align 2, !dbg !6791, !noundef !45
  %20 = getelementptr inbounds %"core::result::Result<char, core::char::decode::DecodeUtf16Error>::Err", ptr %_30, i32 0, i32 1, !dbg !6791
  store i16 %19, ptr %20, align 2, !dbg !6791
  store i16 1, ptr %_30, align 4, !dbg !6791
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1, ptr align 4 %_30, i64 8, i1 false), !dbg !6792
  br label %bb29, !dbg !6793

bb20:                                             ; preds = %bb16
  %21 = getelementptr inbounds { i16, i16 }, ptr %_26, i32 0, i32 1, !dbg !6795
  %u2 = load i16, ptr %21, align 2, !dbg !6795, !noundef !45
  store i16 %u2, ptr %u2.dbg.spill, align 2, !dbg !6795
  call void @llvm.dbg.declare(metadata ptr %u2.dbg.spill, metadata !6754, metadata !DIExpression()), !dbg !6796
  call void @llvm.dbg.declare(metadata ptr %u2.dbg.spill, metadata !6756, metadata !DIExpression()), !dbg !6797
  %_34 = icmp ult i16 %u2, -9216, !dbg !6798
  br i1 %_34, label %bb21, label %bb22, !dbg !6798

bb19:                                             ; No predecessors!
  unreachable, !dbg !6782

bb22:                                             ; preds = %bb20
  %_35 = icmp ugt i16 %u2, -8193, !dbg !6799
  %22 = zext i1 %_35 to i8, !dbg !6798
  store i8 %22, ptr %_33, align 1, !dbg !6798
  br label %bb23, !dbg !6798

bb21:                                             ; preds = %bb20
  store i8 1, ptr %_33, align 1, !dbg !6798
  br label %bb23, !dbg !6798

bb23:                                             ; preds = %bb22, %bb21
  %23 = load i8, ptr %_33, align 1, !dbg !6798, !range !673, !noundef !45
  %24 = trunc i8 %23 to i1, !dbg !6798
  br i1 %24, label %bb24, label %bb25, !dbg !6798

bb25:                                             ; preds = %bb23
  %_45 = load i16, ptr %u, align 2, !dbg !6800, !noundef !45
  %_44 = and i16 %_45, 1023, !dbg !6801
  %_43 = zext i16 %_44 to i32, !dbg !6802
  %_46.0 = shl i32 %_43, 10, !dbg !6802
  %_48 = and i16 %u2, 1023, !dbg !6803
  %_47 = zext i16 %_48 to i32, !dbg !6803
  %_41 = or i32 %_46.0, %_47, !dbg !6804
  %25 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_41, i32 65536), !dbg !6804
  %_49.0 = extractvalue { i32, i1 } %25, 0, !dbg !6804
  %_49.1 = extractvalue { i32, i1 } %25, 1, !dbg !6804
  %26 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false), !dbg !6804
  br i1 %26, label %panic, label %bb27, !dbg !6804

bb24:                                             ; preds = %bb23
  %27 = getelementptr inbounds { i16, i16 }, ptr %_36, i32 0, i32 1, !dbg !6805
  store i16 %u2, ptr %27, align 2, !dbg !6805
  store i16 1, ptr %_36, align 2, !dbg !6805
  %28 = getelementptr inbounds %"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>", ptr %self, i32 0, i32 1, !dbg !6806
  %29 = getelementptr inbounds { i16, i16 }, ptr %_36, i32 0, i32 0, !dbg !6806
  %30 = load i16, ptr %29, align 2, !dbg !6806, !range !3925, !noundef !45
  %31 = getelementptr inbounds { i16, i16 }, ptr %_36, i32 0, i32 1, !dbg !6806
  %32 = load i16, ptr %31, align 2, !dbg !6806
  %33 = getelementptr inbounds { i16, i16 }, ptr %28, i32 0, i32 0, !dbg !6806
  store i16 %30, ptr %33, align 8, !dbg !6806
  %34 = getelementptr inbounds { i16, i16 }, ptr %28, i32 0, i32 1, !dbg !6806
  store i16 %32, ptr %34, align 2, !dbg !6806
  %_39 = load i16, ptr %u, align 2, !dbg !6807, !noundef !45
  store i16 %_39, ptr %_38, align 2, !dbg !6808
  %35 = load i16, ptr %_38, align 2, !dbg !6809, !noundef !45
  %36 = getelementptr inbounds %"core::result::Result<char, core::char::decode::DecodeUtf16Error>::Err", ptr %_37, i32 0, i32 1, !dbg !6809
  store i16 %35, ptr %36, align 2, !dbg !6809
  store i16 1, ptr %_37, align 4, !dbg !6809
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1, ptr align 4 %_37, i64 8, i1 false), !dbg !6810
  br label %bb29, !dbg !6811

bb27:                                             ; preds = %bb25
  store i32 %_49.0, ptr %c.dbg.spill, align 4, !dbg !6804
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !6758, metadata !DIExpression()), !dbg !6813
; call core::char::methods::<impl char>::from_u32_unchecked
  %_51 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h991ddb6749a94a8bE"(i32 %_49.0) #17, !dbg !6814, !range !523
  %37 = getelementptr inbounds %"core::result::Result<char, core::char::decode::DecodeUtf16Error>::Ok", ptr %_50, i32 0, i32 1, !dbg !6815
  store i32 %_51, ptr %37, align 4, !dbg !6815
  store i16 0, ptr %_50, align 4, !dbg !6815
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1, ptr align 4 %_50, i64 8, i1 false), !dbg !6816
  br label %bb29, !dbg !6788

panic:                                            ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_fa54d430b27b5ac9d335d8eb42ea0f03) #18, !dbg !6804
  unreachable, !dbg !6804
}

; alloc::raw_vec::RawVec<T>::with_capacity
; Function Attrs: inlinehint noredzone nounwind
define { i64, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17hcc8bc95703f7facbE"(i64 %capacity) unnamed_addr #1 !dbg !6817 {
start:
  %capacity.dbg.spill = alloca i64, align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !6822, metadata !DIExpression()), !dbg !6823
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hebe5006f60e6830aE"(i64 %capacity) #17, !dbg !6824
  %1 = extractvalue { i64, ptr } %0, 0, !dbg !6824
  %2 = extractvalue { i64, ptr } %0, 1, !dbg !6824
  %3 = insertvalue { i64, ptr } undef, i64 %1, 0, !dbg !6825
  %4 = insertvalue { i64, ptr } %3, ptr %2, 1, !dbg !6825
  ret { i64, ptr } %4, !dbg !6825
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: noredzone nounwind
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17hd97159fb56d5769fE"() unnamed_addr #0 !dbg !6826 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %0 = alloca { i64, ptr }, align 8
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !6830, metadata !DIExpression()), !dbg !6831
; call core::ptr::unique::Unique<T>::dangling
  %_2 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17ha0c383fd86308f07E"() #17, !dbg !6832
  %1 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !6833
  store ptr %_2, ptr %1, align 8, !dbg !6833
  store i64 0, ptr %0, align 8, !dbg !6833
  %2 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 0, !dbg !6834
  %3 = load i64, ptr %2, align 8, !dbg !6834, !noundef !45
  %4 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !6834
  %5 = load ptr, ptr %4, align 8, !dbg !6834, !nonnull !45, !noundef !45
  %6 = insertvalue { i64, ptr } undef, i64 %3, 0, !dbg !6834
  %7 = insertvalue { i64, ptr } %6, ptr %5, 1, !dbg !6834
  ret { i64, ptr } %7, !dbg !6834
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint noredzone nounwind
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hebe5006f60e6830aE"(i64 %capacity) unnamed_addr #1 !dbg !6835 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %capacity.dbg.spill = alloca i64, align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !6839, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !6840, metadata !DIExpression()), !dbg !6842
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h5e2538b2d9d66557E"(i64 %capacity, i1 zeroext false) #17, !dbg !6843
  %1 = extractvalue { i64, ptr } %0, 0, !dbg !6843
  %2 = extractvalue { i64, ptr } %0, 1, !dbg !6843
  %3 = insertvalue { i64, ptr } undef, i64 %1, 0, !dbg !6844
  %4 = insertvalue { i64, ptr } %3, ptr %2, 1, !dbg !6844
  ret { i64, ptr } %4, !dbg !6844
}

; alloc::raw_vec::RawVec<T,A>::into_box
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17h18156297655b9365E"(i64 %0, ptr %1, i64 %len) unnamed_addr #0 !dbg !6845 {
start:
  %self.dbg.spill.i2 = alloca ptr, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %value.dbg.spill.i = alloca { i64, ptr }, align 8
  %3 = alloca { i64, ptr }, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %len.dbg.spill = alloca i64, align 8
  %me = alloca { i64, ptr }, align 8
  %_8 = alloca %"core::fmt::Arguments<'_>", align 8
  %self = alloca { i64, ptr }, align 8
  %4 = getelementptr inbounds { i64, ptr }, ptr %self, i32 0, i32 0
  store i64 %0, ptr %4, align 8
  %5 = getelementptr inbounds { i64, ptr }, ptr %self, i32 0, i32 1
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !6853, metadata !DIExpression()), !dbg !6859
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !6854, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.declare(metadata ptr %me, metadata !6855, metadata !DIExpression()), !dbg !6861
  store ptr %self, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !6862, metadata !DIExpression()), !dbg !6868
  %6 = load i64, ptr %self, align 8, !dbg !6870, !noundef !45
  store i64 %6, ptr %2, align 8, !dbg !6870
  %7 = load i64, ptr %2, align 8, !dbg !6871, !noundef !45
  %_4 = icmp ule i64 %len, %7, !dbg !6872
  %_3 = xor i1 %_4, true, !dbg !6873
  br i1 %_3, label %bb2, label %bb4, !dbg !6873

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, ptr }, ptr %self, i32 0, i32 0, !dbg !6874
  %_12.0 = load i64, ptr %8, align 8, !dbg !6874, !noundef !45
  %9 = getelementptr inbounds { i64, ptr }, ptr %self, i32 0, i32 1, !dbg !6874
  %_12.1 = load ptr, ptr %9, align 8, !dbg !6874, !nonnull !45, !noundef !45
  store i64 %_12.0, ptr %value.dbg.spill.i, align 8
  %10 = getelementptr inbounds { i64, ptr }, ptr %value.dbg.spill.i, i32 0, i32 1
  store ptr %_12.1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill.i, metadata !6875, metadata !DIExpression()), !dbg !6880
  store i64 %_12.0, ptr %3, align 8, !dbg !6882
  %11 = getelementptr inbounds { i64, ptr }, ptr %3, i32 0, i32 1, !dbg !6882
  store ptr %_12.1, ptr %11, align 8, !dbg !6882
  %12 = load i64, ptr %3, align 8, !dbg !6883, !noundef !45
  %13 = getelementptr inbounds { i64, ptr }, ptr %3, i32 0, i32 1, !dbg !6883
  %14 = load ptr, ptr %13, align 8, !dbg !6883, !nonnull !45, !noundef !45
  %15 = insertvalue { i64, ptr } undef, i64 %12, 0, !dbg !6883
  %16 = insertvalue { i64, ptr } %15, ptr %14, 1, !dbg !6883
  store { i64, ptr } %16, ptr %me, align 8, !dbg !6884
  store ptr %me, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !6885, metadata !DIExpression()), !dbg !6892
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_15 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h98d1ca09fe1851acE"(ptr align 8 %me) #17, !dbg !6894
; call core::slice::raw::from_raw_parts_mut
  %17 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h9e0de942ef190a92E(ptr %_15, i64 %len) #17, !dbg !6895
  %slice.0 = extractvalue { ptr, i64 } %17, 0, !dbg !6895
  %slice.1 = extractvalue { ptr, i64 } %17, 1, !dbg !6895
  %18 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0, !dbg !6895
  store ptr %slice.0, ptr %18, align 8, !dbg !6895
  %19 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1, !dbg !6895
  store i64 %slice.1, ptr %19, align 8, !dbg !6895
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !6857, metadata !DIExpression()), !dbg !6896
  store ptr %me, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !6885, metadata !DIExpression()), !dbg !6897
; call core::ptr::read
  call void @_ZN4core3ptr4read17h80f019b407802b95E(ptr %me) #17, !dbg !6899
; call alloc::boxed::Box<T,A>::from_raw_in
  %20 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17ha6515cd7e425a1d2E"(ptr %slice.0, i64 %slice.1) #17, !dbg !6900
  %21 = extractvalue { ptr, i64 } %20, 0, !dbg !6900
  %22 = extractvalue { ptr, i64 } %20, 1, !dbg !6900
  %23 = insertvalue { ptr, i64 } undef, ptr %21, 0, !dbg !6901
  %24 = insertvalue { ptr, i64 } %23, i64 %22, 1, !dbg !6901
  ret { ptr, i64 } %24, !dbg !6901

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_8, ptr align 8 @alloc_99f15b03f3bfa75339564618e0666c4b, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !6873
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_8, ptr align 8 @alloc_1c210fcabb299bceb5cd2832a80973ef) #18, !dbg !6873
  unreachable, !dbg !6873
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: noredzone nounwind
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h5e2538b2d9d66557E"(i64 %capacity, i1 zeroext %0) unnamed_addr #0 !dbg !6902 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %result = alloca { ptr, i64 }, align 8
  %_12 = alloca { i64, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %1 = alloca { i64, ptr }, align 8
  %alloc = alloca %"alloc::Global", align 1
  %init = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %init, align 1
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !6906, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.declare(metadata ptr %init, metadata !6907, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.declare(metadata ptr %alloc, metadata !6908, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.declare(metadata ptr %layout, metadata !6909, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.declare(metadata ptr %result, metadata !6913, metadata !DIExpression()), !dbg !6923
  br i1 false, label %bb1, label %bb2, !dbg !6924

bb2:                                              ; preds = %start
  %_5 = icmp eq i64 %capacity, 0, !dbg !6925
  %3 = zext i1 %_5 to i8, !dbg !6924
  store i8 %3, ptr %_4, align 1, !dbg !6924
  br label %bb3, !dbg !6924

bb1:                                              ; preds = %start
  store i8 1, ptr %_4, align 1, !dbg !6924
  br label %bb3, !dbg !6924

bb3:                                              ; preds = %bb2, %bb1
  %4 = load i8, ptr %_4, align 1, !dbg !6924, !range !673, !noundef !45
  %5 = trunc i8 %4 to i1, !dbg !6924
  br i1 %5, label %bb4, label %bb5, !dbg !6924

bb5:                                              ; preds = %bb3
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h7f5629849fc914bdE(i64 %capacity) #17, !dbg !6926
  store { i64, i64 } %6, ptr %_8, align 8, !dbg !6926
  %7 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !6926
  %8 = load i64, ptr %7, align 8, !dbg !6926, !range !1009, !noundef !45
  %9 = icmp eq i64 %8, 0, !dbg !6926
  %_9 = select i1 %9, i64 1, i64 0, !dbg !6926
  %10 = icmp eq i64 %_9, 0, !dbg !6927
  br i1 %10, label %bb9, label %bb7, !dbg !6927

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::new_in
  %11 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17hd97159fb56d5769fE"() #17, !dbg !6928
  store { i64, ptr } %11, ptr %1, align 8, !dbg !6928
  br label %bb25, !dbg !6928

bb25:                                             ; preds = %bb21, %bb4
  %12 = getelementptr inbounds { i64, ptr }, ptr %1, i32 0, i32 0, !dbg !6929
  %13 = load i64, ptr %12, align 8, !dbg !6929, !noundef !45
  %14 = getelementptr inbounds { i64, ptr }, ptr %1, i32 0, i32 1, !dbg !6929
  %15 = load ptr, ptr %14, align 8, !dbg !6929, !nonnull !45, !noundef !45
  %16 = insertvalue { i64, ptr } undef, i64 %13, 0, !dbg !6929
  %17 = insertvalue { i64, ptr } %16, ptr %15, 1, !dbg !6929
  ret { i64, ptr } %17, !dbg !6929

bb9:                                              ; preds = %bb5
  %18 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 0, !dbg !6930
  %layout.0 = load i64, ptr %18, align 8, !dbg !6930, !noundef !45
  %19 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !6930
  %layout.1 = load i64, ptr %19, align 8, !dbg !6930, !range !1362, !noundef !45
  %20 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0, !dbg !6930
  store i64 %layout.0, ptr %20, align 8, !dbg !6930
  %21 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1, !dbg !6930
  store i64 %layout.1, ptr %21, align 8, !dbg !6930
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !6911, metadata !DIExpression()), !dbg !6931
  %22 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0, !dbg !6932
  store i64 %layout.0, ptr %22, align 8, !dbg !6932
  %23 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1, !dbg !6932
  store i64 %layout.1, ptr %23, align 8, !dbg !6932
; call core::alloc::layout::Layout::size
  %_13 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %layout) #17, !dbg !6933
; call alloc::raw_vec::alloc_guard
  %24 = call { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17hc650f0e0913c3514E(i64 %_13) #17, !dbg !6934
  store { i64, i64 } %24, ptr %_12, align 8, !dbg !6934
  %25 = getelementptr inbounds { i64, i64 }, ptr %_12, i32 0, i32 1, !dbg !6934
  %26 = load i64, ptr %25, align 8, !dbg !6934, !range !1024, !noundef !45
  %27 = icmp eq i64 %26, -9223372036854775807, !dbg !6934
  %_15 = select i1 %27, i64 0, i64 1, !dbg !6934
  %28 = icmp eq i64 %_15, 0, !dbg !6935
  br i1 %28, label %bb14, label %bb12, !dbg !6935

bb7:                                              ; preds = %bb5
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17ha8c8f9bec62c17b6E() #18, !dbg !6936
  unreachable, !dbg !6936

bb8:                                              ; No predecessors!
  unreachable, !dbg !6926

bb14:                                             ; preds = %bb9
  %29 = load i8, ptr %init, align 1, !dbg !6937, !range !673, !noundef !45
  %30 = trunc i8 %29 to i1, !dbg !6937
  %_18 = zext i1 %30 to i64, !dbg !6937
  %31 = icmp eq i64 %_18, 0, !dbg !6938
  br i1 %31, label %bb17, label %bb15, !dbg !6938

bb12:                                             ; preds = %bb9
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17ha8c8f9bec62c17b6E() #18, !dbg !6939
  unreachable, !dbg !6939

bb13:                                             ; No predecessors!
  unreachable, !dbg !6934

bb17:                                             ; preds = %bb14
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %32 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h893fc493e6a4e468E"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1) #17, !dbg !6940
  store { ptr, i64 } %32, ptr %result, align 8, !dbg !6940
  br label %bb18, !dbg !6940

bb15:                                             ; preds = %bb14
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %33 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h6db2ad8a3d16dc6aE"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1) #17, !dbg !6941
  store { ptr, i64 } %33, ptr %result, align 8, !dbg !6941
  br label %bb18, !dbg !6941

bb16:                                             ; No predecessors!
  unreachable, !dbg !6937

bb18:                                             ; preds = %bb17, %bb15
  %34 = load ptr, ptr %result, align 8, !dbg !6942, !noundef !45
  %35 = ptrtoint ptr %34 to i64, !dbg !6942
  %36 = icmp eq i64 %35, 0, !dbg !6942
  %_21 = select i1 %36, i64 1, i64 0, !dbg !6942
  %37 = icmp eq i64 %_21, 0, !dbg !6943
  br i1 %37, label %bb21, label %bb19, !dbg !6943

bb21:                                             ; preds = %bb18
  %38 = getelementptr inbounds { ptr, i64 }, ptr %result, i32 0, i32 0, !dbg !6944
  %ptr.0 = load ptr, ptr %38, align 8, !dbg !6944, !nonnull !45, !noundef !45
  %39 = getelementptr inbounds { ptr, i64 }, ptr %result, i32 0, i32 1, !dbg !6944
  %ptr.1 = load i64, ptr %39, align 8, !dbg !6944, !noundef !45
  %40 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0, !dbg !6944
  store ptr %ptr.0, ptr %40, align 8, !dbg !6944
  %41 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1, !dbg !6944
  store i64 %ptr.1, ptr %41, align 8, !dbg !6944
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !6915, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !6917, metadata !DIExpression()), !dbg !6946
; call core::ptr::non_null::NonNull<T>::cast
  %_26 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3ed6410c6c7dbb96E"(ptr %ptr.0, i64 %ptr.1) #17, !dbg !6947
  store ptr %_26, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2730, metadata !DIExpression()), !dbg !6948
; call core::ptr::unique::Unique<T>::new_unchecked
  %_24 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h97ce221bd4ae9d0dE"(ptr %_26) #17, !dbg !6950
  %42 = getelementptr inbounds { i64, ptr }, ptr %1, i32 0, i32 1, !dbg !6951
  store ptr %_24, ptr %42, align 8, !dbg !6951
  store i64 %capacity, ptr %1, align 8, !dbg !6951
  br label %bb25, !dbg !6952

bb19:                                             ; preds = %bb18
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h3c6d18769aaa0402E(i64 %layout.0, i64 %layout.1) #18, !dbg !6953
  unreachable, !dbg !6953

bb20:                                             ; No predecessors!
  unreachable, !dbg !6942
}

; alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint noredzone nounwind
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h96720079c6f073bdE"(ptr %ptr, i64 %capacity) unnamed_addr #1 !dbg !6954 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %capacity.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca { i64, ptr }, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !6958, metadata !DIExpression()), !dbg !6961
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !6959, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !6960, metadata !DIExpression()), !dbg !6963
; call core::ptr::unique::Unique<T>::new_unchecked
  %_4 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h97ce221bd4ae9d0dE"(ptr %ptr) #17, !dbg !6964
  %1 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !6965
  store ptr %_4, ptr %1, align 8, !dbg !6965
  store i64 %capacity, ptr %0, align 8, !dbg !6965
  %2 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 0, !dbg !6966
  %3 = load i64, ptr %2, align 8, !dbg !6966, !noundef !45
  %4 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !6966
  %5 = load ptr, ptr %4, align 8, !dbg !6966, !nonnull !45, !noundef !45
  %6 = insertvalue { i64, ptr } undef, i64 %3, 0, !dbg !6966
  %7 = insertvalue { i64, ptr } %6, ptr %5, 1, !dbg !6966
  ret { i64, ptr } %7, !dbg !6966
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h98d1ca09fe1851acE"(ptr align 8 %self) unnamed_addr #1 !dbg !6967 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6971, metadata !DIExpression()), !dbg !6972
  %0 = getelementptr inbounds { i64, ptr }, ptr %self, i32 0, i32 1, !dbg !6973
  %_2 = load ptr, ptr %0, align 8, !dbg !6973, !nonnull !45, !noundef !45
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6c7e501aa8d05bbeE"(ptr %_2) #17, !dbg !6973
  ret ptr %1, !dbg !6974
}

; alloc::raw_vec::RawVec<T,A>::allocator
; Function Attrs: noredzone nounwind
define align 1 ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h24543f4cbde208fcE"(ptr align 8 %self) unnamed_addr #0 !dbg !6975 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !6980, metadata !DIExpression()), !dbg !6981
  ret ptr %self, !dbg !6982
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h70a09d7d32d826f3E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, ptr align 8 %self) unnamed_addr #0 !dbg !6983 {
start:
  %1 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %size.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_12 = alloca { ptr, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7004, metadata !DIExpression()), !dbg !7011
  br i1 false, label %bb1, label %bb2, !dbg !7012

bb2:                                              ; preds = %start
  %_4 = load i64, ptr %self, align 8, !dbg !7013, !noundef !45
  %_3 = icmp eq i64 %_4, 0, !dbg !7013
  %2 = zext i1 %_3 to i8, !dbg !7012
  store i8 %2, ptr %_2, align 1, !dbg !7012
  br label %bb3, !dbg !7012

bb1:                                              ; preds = %start
  store i8 1, ptr %_2, align 1, !dbg !7012
  br label %bb3, !dbg !7012

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, ptr %_2, align 1, !dbg !7012, !range !673, !noundef !45
  %4 = trunc i8 %3 to i1, !dbg !7012
  br i1 %4, label %bb4, label %bb5, !dbg !7012

bb5:                                              ; preds = %bb3
  store i64 1, ptr %align.dbg.spill, align 8, !dbg !7014
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !7005, metadata !DIExpression()), !dbg !7015
  %_8 = load i64, ptr %self, align 8, !dbg !7016, !noundef !45
  store i64 1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !7017, metadata !DIExpression()), !dbg !7021
  store i64 %_8, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !7020, metadata !DIExpression()), !dbg !7023
  store i64 %_8, ptr %1, align 8, !dbg !7024
  %5 = load i64, ptr %1, align 8, !dbg !7024, !noundef !45
  store i64 %5, ptr %size.dbg.spill, align 8, !dbg !7025
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !7007, metadata !DIExpression()), !dbg !7026
; call core::alloc::layout::Layout::from_size_align_unchecked
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE(i64 %5, i64 1) #17, !dbg !7027
  %layout.0 = extractvalue { i64, i64 } %6, 0, !dbg !7027
  %layout.1 = extractvalue { i64, i64 } %6, 1, !dbg !7027
  %7 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0, !dbg !7027
  store i64 %layout.0, ptr %7, align 8, !dbg !7027
  %8 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1, !dbg !7027
  store i64 %layout.1, ptr %8, align 8, !dbg !7027
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !7009, metadata !DIExpression()), !dbg !7028
  %9 = getelementptr inbounds { i64, ptr }, ptr %self, i32 0, i32 1, !dbg !7029
  %_15 = load ptr, ptr %9, align 8, !dbg !7029, !nonnull !45, !noundef !45
; call core::ptr::unique::Unique<T>::cast
  %_14 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcb3f6fdd6f42c681E"(ptr %_15) #17, !dbg !7029
; call <T as core::convert::Into<U>>::into
  %_13 = call ptr @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h6cef30de0f98774cE"(ptr %_14) #17, !dbg !7029
  store ptr %_13, ptr %_12, align 8, !dbg !7030
  %10 = getelementptr inbounds { ptr, { i64, i64 } }, ptr %_12, i32 0, i32 1, !dbg !7030
  %11 = getelementptr inbounds { i64, i64 }, ptr %10, i32 0, i32 0, !dbg !7030
  store i64 %layout.0, ptr %11, align 8, !dbg !7030
  %12 = getelementptr inbounds { i64, i64 }, ptr %10, i32 0, i32 1, !dbg !7030
  store i64 %layout.1, ptr %12, align 8, !dbg !7030
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_12, i64 24, i1 false), !dbg !7031
  br label %bb12, !dbg !7032

bb4:                                              ; preds = %bb3
  %13 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %0, i32 0, i32 1, !dbg !7033
  store i64 0, ptr %13, align 8, !dbg !7033
  br label %bb12, !dbg !7032

bb12:                                             ; preds = %bb5, %bb4
  ret void, !dbg !7034
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17he91f62674650ed5dE"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !7035 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7040, metadata !DIExpression()), !dbg !7043
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !7041, metadata !DIExpression()), !dbg !7044
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !7042, metadata !DIExpression()), !dbg !7045
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h2fe5fafd682504dfE"(ptr align 8 %self, i64 %len, i64 %additional) #17, !dbg !7046
  br i1 %_4, label %bb2, label %bb3, !dbg !7046

bb3:                                              ; preds = %bb2, %start
  ret void, !dbg !7047

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h5eb58b0e98fad5c5E"(ptr align 8 %self, i64 %len, i64 %additional) #17, !dbg !7048
  br label %bb3, !dbg !7048
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold noredzone nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h5eb58b0e98fad5c5E"(ptr align 8 %slf, i64 %len, i64 %additional) unnamed_addr #3 !dbg !7049 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca ptr, align 8
  store ptr %slf, ptr %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %slf.dbg.spill, metadata !7053, metadata !DIExpression()), !dbg !7056
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !7054, metadata !DIExpression()), !dbg !7057
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !7055, metadata !DIExpression()), !dbg !7058
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17ha1ad65c857805dd0E"(ptr align 8 %slf, i64 %len, i64 %additional) #17, !dbg !7059
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !7059
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !7059
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17hcc9be2f7d2ec10d7E(i64 %_5.0, i64 %_5.1) #17, !dbg !7060
  ret void, !dbg !7061
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline noredzone nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hccd83727ffa4b254E"(ptr align 8 %self, i64 %len) unnamed_addr #4 !dbg !7062 {
start:
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7066, metadata !DIExpression()), !dbg !7068
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !7067, metadata !DIExpression()), !dbg !7069
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17ha1ad65c857805dd0E"(ptr align 8 %self, i64 %len, i64 1) #17, !dbg !7070
  %_4.0 = extractvalue { i64, i64 } %0, 0, !dbg !7070
  %_4.1 = extractvalue { i64, i64 } %0, 1, !dbg !7070
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17hcc9be2f7d2ec10d7E(i64 %_4.0, i64 %_4.1) #17, !dbg !7071
  ret void, !dbg !7072
}

; alloc::raw_vec::RawVec<T,A>::try_reserve
; Function Attrs: noredzone nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h132c36d1cef1ec75E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !7073 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7077, metadata !DIExpression()), !dbg !7080
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !7078, metadata !DIExpression()), !dbg !7081
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !7079, metadata !DIExpression()), !dbg !7082
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h2fe5fafd682504dfE"(ptr align 8 %self, i64 %len, i64 %additional) #17, !dbg !7083
  br i1 %_4, label %bb2, label %bb3, !dbg !7083

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7084
  store i64 -9223372036854775807, ptr %1, align 8, !dbg !7084
  br label %bb4, !dbg !7085

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %2 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17ha1ad65c857805dd0E"(ptr align 8 %self, i64 %len, i64 %additional) #17, !dbg !7086
  store { i64, i64 } %2, ptr %0, align 8, !dbg !7086
  br label %bb4, !dbg !7086

bb4:                                              ; preds = %bb3, %bb2
  %3 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !7087
  %4 = load i64, ptr %3, align 8, !dbg !7087
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7087
  %6 = load i64, ptr %5, align 8, !dbg !7087, !range !1024, !noundef !45
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !7087
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !7087
  ret { i64, i64 } %8, !dbg !7087
}

; alloc::raw_vec::RawVec<T,A>::reserve_exact
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17h28b190c42f639233E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !7088 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7090, metadata !DIExpression()), !dbg !7093
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !7091, metadata !DIExpression()), !dbg !7094
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !7092, metadata !DIExpression()), !dbg !7095
; call alloc::raw_vec::RawVec<T,A>::try_reserve_exact
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17he95387f16b2f53cfE"(ptr align 8 %self, i64 %len, i64 %additional) #17, !dbg !7096
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !7096
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !7096
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17hcc9be2f7d2ec10d7E(i64 %_5.0, i64 %_5.1) #17, !dbg !7097
  ret void, !dbg !7098
}

; alloc::raw_vec::RawVec<T,A>::try_reserve_exact
; Function Attrs: noredzone nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17he95387f16b2f53cfE"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !7099 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7101, metadata !DIExpression()), !dbg !7104
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !7102, metadata !DIExpression()), !dbg !7105
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !7103, metadata !DIExpression()), !dbg !7106
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h2fe5fafd682504dfE"(ptr align 8 %self, i64 %len, i64 %additional) #17, !dbg !7107
  br i1 %_4, label %bb2, label %bb3, !dbg !7107

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7108
  store i64 -9223372036854775807, ptr %1, align 8, !dbg !7108
  br label %bb4, !dbg !7109

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVec<T,A>::grow_exact
  %2 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$10grow_exact17h43cf91d721d5808eE"(ptr align 8 %self, i64 %len, i64 %additional) #17, !dbg !7110
  store { i64, i64 } %2, ptr %0, align 8, !dbg !7110
  br label %bb4, !dbg !7110

bb4:                                              ; preds = %bb3, %bb2
  %3 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !7111
  %4 = load i64, ptr %3, align 8, !dbg !7111
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7111
  %6 = load i64, ptr %5, align 8, !dbg !7111, !range !1024, !noundef !45
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !7111
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !7111
  ret { i64, i64 } %8, !dbg !7111
}

; alloc::raw_vec::RawVec<T,A>::shrink_to_fit
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17h92029a7382a8e2bbE"(ptr align 8 %self, i64 %cap) unnamed_addr #0 !dbg !7112 {
start:
  %cap.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7114, metadata !DIExpression()), !dbg !7116
  store i64 %cap, ptr %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %cap.dbg.spill, metadata !7115, metadata !DIExpression()), !dbg !7117
; call alloc::raw_vec::RawVec<T,A>::shrink
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6shrink17h3ffc7206ac5732dbE"(ptr align 8 %self, i64 %cap) #17, !dbg !7118
  %_4.0 = extractvalue { i64, i64 } %0, 0, !dbg !7118
  %_4.1 = extractvalue { i64, i64 } %0, 1, !dbg !7118
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17hcc9be2f7d2ec10d7E(i64 %_4.0, i64 %_4.1) #17, !dbg !7119
  ret void, !dbg !7120
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h2fe5fafd682504dfE"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !7121 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7125, metadata !DIExpression()), !dbg !7128
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !7126, metadata !DIExpression()), !dbg !7129
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !7127, metadata !DIExpression()), !dbg !7130
  store ptr %self, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !6862, metadata !DIExpression()), !dbg !7131
  %1 = load i64, ptr %self, align 8, !dbg !7133, !noundef !45
  store i64 %1, ptr %0, align 8, !dbg !7133
  %2 = load i64, ptr %0, align 8, !dbg !7134, !noundef !45
  store i64 %2, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !4554, metadata !DIExpression()), !dbg !7135
  store i64 %len, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !4557, metadata !DIExpression()), !dbg !7137
  %3 = sub i64 %2, %len, !dbg !7138
  %4 = icmp ugt i64 %additional, %3, !dbg !7139
  ret i1 %4, !dbg !7140
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hab8881cfa1cfb4a7E"(ptr align 8 %self, ptr %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #0 !dbg !7141 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7145, metadata !DIExpression()), !dbg !7148
  %0 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0
  store ptr %ptr.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7146, metadata !DIExpression()), !dbg !7149
  store i64 %cap, ptr %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %cap.dbg.spill, metadata !7147, metadata !DIExpression()), !dbg !7150
; call core::ptr::non_null::NonNull<T>::cast
  %_6 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3ed6410c6c7dbb96E"(ptr %ptr.0, i64 %ptr.1) #17, !dbg !7151
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2730, metadata !DIExpression()), !dbg !7152
; call core::ptr::unique::Unique<T>::new_unchecked
  %_4 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h97ce221bd4ae9d0dE"(ptr %_6) #17, !dbg !7154
  %2 = getelementptr inbounds { i64, ptr }, ptr %self, i32 0, i32 1, !dbg !7155
  store ptr %_4, ptr %2, align 8, !dbg !7155
  store i64 %cap, ptr %self, align 8, !dbg !7156
  ret void, !dbg !7157
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: noredzone nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17ha1ad65c857805dd0E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !7158 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %residual.dbg.spill5 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill2 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_28 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_26 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>", align 8
  %_25 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_11 = alloca %"core::result::Result<usize, collections::TryReserveErrorKind>", align 8
  %_10 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, usize>", align 8
  %_9 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7160, metadata !DIExpression()), !dbg !7181
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !7161, metadata !DIExpression()), !dbg !7182
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !7162, metadata !DIExpression()), !dbg !7183
  %_5 = icmp ugt i64 %additional, 0, !dbg !7184
  %_4 = xor i1 %_5, true, !dbg !7185
  br i1 %_4, label %bb1, label %bb2, !dbg !7185

bb2:                                              ; preds = %start
  br i1 false, label %bb3, label %bb5, !dbg !7186

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_d3508941bd1314ad862e861ef6a1d679, i64 32, ptr align 8 @alloc_94e90bae3af186068bc5eff3e8be1f9c) #18, !dbg !7185
  unreachable, !dbg !7185

bb5:                                              ; preds = %bb2
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %len, i64 %additional) #17, !dbg !7187
  %_12.0 = extractvalue { i64, i64 } %1, 0, !dbg !7187
  %_12.1 = extractvalue { i64, i64 } %1, 1, !dbg !7187
  %2 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !7188
  store i64 0, ptr %2, align 8, !dbg !7188
  %3 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 0, !dbg !7187
  %4 = load i64, ptr %3, align 8, !dbg !7187
  %5 = getelementptr inbounds { i64, i64 }, ptr %_13, i32 0, i32 1, !dbg !7187
  %6 = load i64, ptr %5, align 8, !dbg !7187, !range !1009, !noundef !45
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h76ecb13723e7e032E"(ptr sret(%"core::result::Result<usize, collections::TryReserveErrorKind>") %_11, i64 %_12.0, i64 %_12.1, i64 %4, i64 %6) #17, !dbg !7187
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf9c0162c02d55595E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, usize>") %_10, ptr %_11) #17, !dbg !7187
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, usize>", ptr %_10, i32 0, i32 1, !dbg !7187
  %8 = load i64, ptr %7, align 8, !dbg !7187, !range !1024, !noundef !45
  %9 = icmp eq i64 %8, -9223372036854775807, !dbg !7187
  %_14 = select i1 %9, i64 0, i64 1, !dbg !7187
  %10 = icmp eq i64 %_14, 0, !dbg !7187
  br i1 %10, label %bb9, label %bb11, !dbg !7187

bb3:                                              ; preds = %bb2
  %11 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 1, !dbg !7189
  store i64 0, ptr %11, align 8, !dbg !7189
  %12 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 0, !dbg !7189
  %13 = load i64, ptr %12, align 8, !dbg !7189
  %14 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 1, !dbg !7189
  %15 = load i64, ptr %14, align 8, !dbg !7189, !range !1009, !noundef !45
; call <T as core::convert::Into<U>>::into
  %16 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1ff85623d6cefe36E"(i64 %13, i64 %15) #17, !dbg !7189
  %_8.0 = extractvalue { i64, i64 } %16, 0, !dbg !7189
  %_8.1 = extractvalue { i64, i64 } %16, 1, !dbg !7189
  %17 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !7190
  store i64 %_8.0, ptr %17, align 8, !dbg !7190
  %18 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7190
  store i64 %_8.1, ptr %18, align 8, !dbg !7190
  br label %bb23, !dbg !7191

bb23:                                             ; preds = %bb19, %bb21, %bb11, %bb3
  %19 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !7193
  %20 = load i64, ptr %19, align 8, !dbg !7193
  %21 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7193
  %22 = load i64, ptr %21, align 8, !dbg !7193, !range !1024, !noundef !45
  %23 = insertvalue { i64, i64 } undef, i64 %20, 0, !dbg !7193
  %24 = insertvalue { i64, i64 } %23, i64 %22, 1, !dbg !7193
  ret { i64, i64 } %24, !dbg !7193

bb9:                                              ; preds = %bb5
  %required_cap = load i64, ptr %_10, align 8, !dbg !7187, !noundef !45
  store i64 %required_cap, ptr %required_cap.dbg.spill, align 8, !dbg !7187
  call void @llvm.dbg.declare(metadata ptr %required_cap.dbg.spill, metadata !7163, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.declare(metadata ptr %required_cap.dbg.spill, metadata !7167, metadata !DIExpression()), !dbg !7195
  %_19 = load i64, ptr %self, align 8, !dbg !7196, !noundef !45
  %25 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_19, i64 2), !dbg !7196
  %_20.0 = extractvalue { i64, i1 } %25, 0, !dbg !7196
  %_20.1 = extractvalue { i64, i1 } %25, 1, !dbg !7196
  %26 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !7196
  br i1 %26, label %panic, label %bb12, !dbg !7196

bb11:                                             ; preds = %bb5
  %27 = getelementptr inbounds { i64, i64 }, ptr %_10, i32 0, i32 0, !dbg !7197
  %residual.0 = load i64, ptr %27, align 8, !dbg !7197
  %28 = getelementptr inbounds { i64, i64 }, ptr %_10, i32 0, i32 1, !dbg !7197
  %residual.1 = load i64, ptr %28, align 8, !dbg !7197, !range !1009, !noundef !45
  %29 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill, i32 0, i32 0, !dbg !7197
  store i64 %residual.0, ptr %29, align 8, !dbg !7197
  %30 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill, i32 0, i32 1, !dbg !7197
  store i64 %residual.1, ptr %30, align 8, !dbg !7197
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !7165, metadata !DIExpression()), !dbg !7198
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %31 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd6f3d9742227c4e7E"(i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_ca73d4a7f3b47bdd6ee27b5651256d1d) #17, !dbg !7199
  store { i64, i64 } %31, ptr %0, align 8, !dbg !7199
  br label %bb23, !dbg !7199

bb10:                                             ; No predecessors!
  unreachable, !dbg !7187

bb12:                                             ; preds = %bb9
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h25fb54eb7f7e73a7E(i64 %_20.0, i64 %required_cap) #17, !dbg !7200
  store i64 %cap, ptr %cap.dbg.spill, align 8, !dbg !7200
  call void @llvm.dbg.declare(metadata ptr %cap.dbg.spill, metadata !7169, metadata !DIExpression()), !dbg !7201
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h25fb54eb7f7e73a7E(i64 8, i64 %cap) #17, !dbg !7202
  store i64 %cap1, ptr %cap.dbg.spill2, align 8, !dbg !7202
  call void @llvm.dbg.declare(metadata ptr %cap.dbg.spill2, metadata !7171, metadata !DIExpression()), !dbg !7203
; call core::alloc::layout::Layout::array
  %32 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h7f5629849fc914bdE(i64 %cap1) #17, !dbg !7204
  %new_layout.0 = extractvalue { i64, i64 } %32, 0, !dbg !7204
  %new_layout.1 = extractvalue { i64, i64 } %32, 1, !dbg !7204
  %33 = getelementptr inbounds { i64, i64 }, ptr %new_layout.dbg.spill, i32 0, i32 0, !dbg !7204
  store i64 %new_layout.0, ptr %33, align 8, !dbg !7204
  %34 = getelementptr inbounds { i64, i64 }, ptr %new_layout.dbg.spill, i32 0, i32 1, !dbg !7204
  store i64 %new_layout.1, ptr %34, align 8, !dbg !7204
  call void @llvm.dbg.declare(metadata ptr %new_layout.dbg.spill, metadata !7173, metadata !DIExpression()), !dbg !7205
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h70a09d7d32d826f3E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_28, ptr align 8 %self) #17, !dbg !7206
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h6eb141d566cd47c9E(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>") %_26, i64 %new_layout.0, i64 %new_layout.1, ptr %_28, ptr align 1 %self) #17, !dbg !7207
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6003ae7f068e1a55E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") %_25, ptr %_26) #17, !dbg !7207
  %_31 = load i64, ptr %_25, align 8, !dbg !7207, !range !1797, !noundef !45
  %35 = icmp eq i64 %_31, 0, !dbg !7207
  br i1 %35, label %bb19, label %bb21, !dbg !7207

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 33, ptr align 8 @alloc_b0d2abe837007f946c701cf26af6b272) #18, !dbg !7196
  unreachable, !dbg !7196

bb19:                                             ; preds = %bb12
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_25, i32 0, i32 1, !dbg !7207
  %37 = getelementptr inbounds { ptr, i64 }, ptr %36, i32 0, i32 0, !dbg !7207
  %ptr.0 = load ptr, ptr %37, align 8, !dbg !7207, !nonnull !45, !noundef !45
  %38 = getelementptr inbounds { ptr, i64 }, ptr %36, i32 0, i32 1, !dbg !7207
  %ptr.1 = load i64, ptr %38, align 8, !dbg !7207, !noundef !45
  %39 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0, !dbg !7207
  store ptr %ptr.0, ptr %39, align 8, !dbg !7207
  %40 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1, !dbg !7207
  store i64 %ptr.1, ptr %40, align 8, !dbg !7207
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7175, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7179, metadata !DIExpression()), !dbg !7209
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hab8881cfa1cfb4a7E"(ptr align 8 %self, ptr %ptr.0, i64 %ptr.1, i64 %cap1) #17, !dbg !7210
  %41 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7211
  store i64 -9223372036854775807, ptr %41, align 8, !dbg !7211
  br label %bb23, !dbg !7193

bb21:                                             ; preds = %bb12
  %42 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_25, i32 0, i32 1, !dbg !7212
  %43 = getelementptr inbounds { i64, i64 }, ptr %42, i32 0, i32 0, !dbg !7212
  %residual.03 = load i64, ptr %43, align 8, !dbg !7212
  %44 = getelementptr inbounds { i64, i64 }, ptr %42, i32 0, i32 1, !dbg !7212
  %residual.14 = load i64, ptr %44, align 8, !dbg !7212, !range !1009, !noundef !45
  %45 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill5, i32 0, i32 0, !dbg !7212
  store i64 %residual.03, ptr %45, align 8, !dbg !7212
  %46 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill5, i32 0, i32 1, !dbg !7212
  store i64 %residual.14, ptr %46, align 8, !dbg !7212
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill5, metadata !7177, metadata !DIExpression()), !dbg !7213
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %47 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a0a8f0657d23512E"(i64 %residual.03, i64 %residual.14, ptr align 8 @alloc_8354cad0daccd5be411414d5095631e5) #17, !dbg !7214
  store { i64, i64 } %47, ptr %0, align 8, !dbg !7214
  br label %bb23, !dbg !7214

bb20:                                             ; No predecessors!
  unreachable, !dbg !7207
}

; alloc::raw_vec::RawVec<T,A>::grow_exact
; Function Attrs: noredzone nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$10grow_exact17h43cf91d721d5808eE"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !7215 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %residual.dbg.spill3 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_18 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_16 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>", align 8
  %_15 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_10 = alloca { i64, i64 }, align 8
  %_8 = alloca %"core::result::Result<usize, collections::TryReserveErrorKind>", align 8
  %_7 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7217, metadata !DIExpression()), !dbg !7234
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !7218, metadata !DIExpression()), !dbg !7235
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !7219, metadata !DIExpression()), !dbg !7236
  br i1 false, label %bb1, label %bb3, !dbg !7237

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %len, i64 %additional) #17, !dbg !7238
  %_9.0 = extractvalue { i64, i64 } %1, 0, !dbg !7238
  %_9.1 = extractvalue { i64, i64 } %1, 1, !dbg !7238
  %2 = getelementptr inbounds { i64, i64 }, ptr %_10, i32 0, i32 1, !dbg !7239
  store i64 0, ptr %2, align 8, !dbg !7239
  %3 = getelementptr inbounds { i64, i64 }, ptr %_10, i32 0, i32 0, !dbg !7238
  %4 = load i64, ptr %3, align 8, !dbg !7238
  %5 = getelementptr inbounds { i64, i64 }, ptr %_10, i32 0, i32 1, !dbg !7238
  %6 = load i64, ptr %5, align 8, !dbg !7238, !range !1009, !noundef !45
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h76ecb13723e7e032E"(ptr sret(%"core::result::Result<usize, collections::TryReserveErrorKind>") %_8, i64 %_9.0, i64 %_9.1, i64 %4, i64 %6) #17, !dbg !7238
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf9c0162c02d55595E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, usize>") %_7, ptr %_8) #17, !dbg !7238
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, usize>", ptr %_7, i32 0, i32 1, !dbg !7238
  %8 = load i64, ptr %7, align 8, !dbg !7238, !range !1024, !noundef !45
  %9 = icmp eq i64 %8, -9223372036854775807, !dbg !7238
  %_11 = select i1 %9, i64 0, i64 1, !dbg !7238
  %10 = icmp eq i64 %_11, 0, !dbg !7238
  br i1 %10, label %bb7, label %bb9, !dbg !7238

bb1:                                              ; preds = %start
  %11 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !7240
  store i64 0, ptr %11, align 8, !dbg !7240
  %12 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !7240
  %13 = load i64, ptr %12, align 8, !dbg !7240
  %14 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !7240
  %15 = load i64, ptr %14, align 8, !dbg !7240, !range !1009, !noundef !45
; call <T as core::convert::Into<U>>::into
  %16 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1ff85623d6cefe36E"(i64 %13, i64 %15) #17, !dbg !7240
  %_5.0 = extractvalue { i64, i64 } %16, 0, !dbg !7240
  %_5.1 = extractvalue { i64, i64 } %16, 1, !dbg !7240
  %17 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !7241
  store i64 %_5.0, ptr %17, align 8, !dbg !7241
  %18 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7241
  store i64 %_5.1, ptr %18, align 8, !dbg !7241
  br label %bb18, !dbg !7242

bb18:                                             ; preds = %bb14, %bb16, %bb9, %bb1
  %19 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !7244
  %20 = load i64, ptr %19, align 8, !dbg !7244
  %21 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7244
  %22 = load i64, ptr %21, align 8, !dbg !7244, !range !1024, !noundef !45
  %23 = insertvalue { i64, i64 } undef, i64 %20, 0, !dbg !7244
  %24 = insertvalue { i64, i64 } %23, i64 %22, 1, !dbg !7244
  ret { i64, i64 } %24, !dbg !7244

bb7:                                              ; preds = %bb3
  %cap = load i64, ptr %_7, align 8, !dbg !7238, !noundef !45
  store i64 %cap, ptr %cap.dbg.spill, align 8, !dbg !7238
  call void @llvm.dbg.declare(metadata ptr %cap.dbg.spill, metadata !7220, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.declare(metadata ptr %cap.dbg.spill, metadata !7224, metadata !DIExpression()), !dbg !7246
; call core::alloc::layout::Layout::array
  %25 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h7f5629849fc914bdE(i64 %cap) #17, !dbg !7247
  %new_layout.0 = extractvalue { i64, i64 } %25, 0, !dbg !7247
  %new_layout.1 = extractvalue { i64, i64 } %25, 1, !dbg !7247
  %26 = getelementptr inbounds { i64, i64 }, ptr %new_layout.dbg.spill, i32 0, i32 0, !dbg !7247
  store i64 %new_layout.0, ptr %26, align 8, !dbg !7247
  %27 = getelementptr inbounds { i64, i64 }, ptr %new_layout.dbg.spill, i32 0, i32 1, !dbg !7247
  store i64 %new_layout.1, ptr %27, align 8, !dbg !7247
  call void @llvm.dbg.declare(metadata ptr %new_layout.dbg.spill, metadata !7226, metadata !DIExpression()), !dbg !7248
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h70a09d7d32d826f3E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_18, ptr align 8 %self) #17, !dbg !7249
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h6eb141d566cd47c9E(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>") %_16, i64 %new_layout.0, i64 %new_layout.1, ptr %_18, ptr align 1 %self) #17, !dbg !7250
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6003ae7f068e1a55E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") %_15, ptr %_16) #17, !dbg !7250
  %_21 = load i64, ptr %_15, align 8, !dbg !7250, !range !1797, !noundef !45
  %28 = icmp eq i64 %_21, 0, !dbg !7250
  br i1 %28, label %bb14, label %bb16, !dbg !7250

bb9:                                              ; preds = %bb3
  %29 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 0, !dbg !7251
  %residual.0 = load i64, ptr %29, align 8, !dbg !7251
  %30 = getelementptr inbounds { i64, i64 }, ptr %_7, i32 0, i32 1, !dbg !7251
  %residual.1 = load i64, ptr %30, align 8, !dbg !7251, !range !1009, !noundef !45
  %31 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill, i32 0, i32 0, !dbg !7251
  store i64 %residual.0, ptr %31, align 8, !dbg !7251
  %32 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill, i32 0, i32 1, !dbg !7251
  store i64 %residual.1, ptr %32, align 8, !dbg !7251
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !7222, metadata !DIExpression()), !dbg !7252
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %33 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd6f3d9742227c4e7E"(i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_ad64aa38a833c3d5a5967dd6dbe76083) #17, !dbg !7253
  store { i64, i64 } %33, ptr %0, align 8, !dbg !7253
  br label %bb18, !dbg !7253

bb8:                                              ; No predecessors!
  unreachable, !dbg !7238

bb14:                                             ; preds = %bb7
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_15, i32 0, i32 1, !dbg !7250
  %35 = getelementptr inbounds { ptr, i64 }, ptr %34, i32 0, i32 0, !dbg !7250
  %ptr.0 = load ptr, ptr %35, align 8, !dbg !7250, !nonnull !45, !noundef !45
  %36 = getelementptr inbounds { ptr, i64 }, ptr %34, i32 0, i32 1, !dbg !7250
  %ptr.1 = load i64, ptr %36, align 8, !dbg !7250, !noundef !45
  %37 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0, !dbg !7250
  store ptr %ptr.0, ptr %37, align 8, !dbg !7250
  %38 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1, !dbg !7250
  store i64 %ptr.1, ptr %38, align 8, !dbg !7250
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7228, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7232, metadata !DIExpression()), !dbg !7255
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hab8881cfa1cfb4a7E"(ptr align 8 %self, ptr %ptr.0, i64 %ptr.1, i64 %cap) #17, !dbg !7256
  %39 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7257
  store i64 -9223372036854775807, ptr %39, align 8, !dbg !7257
  br label %bb18, !dbg !7244

bb16:                                             ; preds = %bb7
  %40 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_15, i32 0, i32 1, !dbg !7258
  %41 = getelementptr inbounds { i64, i64 }, ptr %40, i32 0, i32 0, !dbg !7258
  %residual.01 = load i64, ptr %41, align 8, !dbg !7258
  %42 = getelementptr inbounds { i64, i64 }, ptr %40, i32 0, i32 1, !dbg !7258
  %residual.12 = load i64, ptr %42, align 8, !dbg !7258, !range !1009, !noundef !45
  %43 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill3, i32 0, i32 0, !dbg !7258
  store i64 %residual.01, ptr %43, align 8, !dbg !7258
  %44 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill3, i32 0, i32 1, !dbg !7258
  store i64 %residual.12, ptr %44, align 8, !dbg !7258
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill3, metadata !7230, metadata !DIExpression()), !dbg !7259
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %45 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a0a8f0657d23512E"(i64 %residual.01, i64 %residual.12, ptr align 8 @alloc_85a446c1ecb346528560f53666524a51) #17, !dbg !7260
  store { i64, i64 } %45, ptr %0, align 8, !dbg !7260
  br label %bb18, !dbg !7260

bb15:                                             ; No predecessors!
  unreachable, !dbg !7250
}

; alloc::raw_vec::RawVec<T,A>::shrink
; Function Attrs: noredzone nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6shrink17h3ffc7206ac5732dbE"(ptr align 8 %self, i64 %cap) unnamed_addr #0 !dbg !7261 {
start:
  %self.dbg.spill.i2 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %ptr.dbg.spill1 = alloca { ptr, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %cap.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_29 = alloca ptr, align 8
  %_25 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>", align 8
  %_24 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %mem = alloca { ptr, { i64, i64 } }, align 8
  %_13 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %layout = alloca { i64, i64 }, align 8
  %_8 = alloca %"core::fmt::Arguments<'_>", align 8
  %2 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7265, metadata !DIExpression()), !dbg !7282
  store i64 %cap, ptr %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %cap.dbg.spill, metadata !7266, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.declare(metadata ptr %layout, metadata !7269, metadata !DIExpression()), !dbg !7284
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !7270, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.declare(metadata ptr %new_layout, metadata !7276, metadata !DIExpression()), !dbg !7286
  store ptr %self, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !6862, metadata !DIExpression()), !dbg !7287
  %3 = load i64, ptr %self, align 8, !dbg !7289, !noundef !45
  store i64 %3, ptr %0, align 8, !dbg !7289
  %4 = load i64, ptr %0, align 8, !dbg !7290, !noundef !45
  %_4 = icmp ule i64 %cap, %4, !dbg !7291
  %_3 = xor i1 %_4, true, !dbg !7292
  br i1 %_3, label %bb2, label %bb4, !dbg !7292

bb4:                                              ; preds = %start
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h70a09d7d32d826f3E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_13, ptr align 8 %self) #17, !dbg !7293
  %5 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_13, i32 0, i32 1, !dbg !7294
  %6 = load i64, ptr %5, align 8, !dbg !7294, !range !1009, !noundef !45
  %7 = icmp eq i64 %6, 0, !dbg !7294
  %_15 = select i1 %7, i64 0, i64 1, !dbg !7294
  %8 = icmp eq i64 %_15, 1, !dbg !7294
  br i1 %8, label %bb6, label %bb7, !dbg !7294

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_8, ptr align 8 @alloc_3f013c2ff3b77455620c7b6030459892, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !7292
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_8, ptr align 8 @alloc_dd850b3781d858ab4752fb03517d9dc6) #18, !dbg !7292
  unreachable, !dbg !7292

bb6:                                              ; preds = %bb4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %mem, ptr align 8 %_13, i64 24, i1 false), !dbg !7285
  %ptr = load ptr, ptr %mem, align 8, !dbg !7295, !nonnull !45, !noundef !45
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !7295
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7267, metadata !DIExpression()), !dbg !7296
  %9 = getelementptr inbounds { ptr, { i64, i64 } }, ptr %mem, i32 0, i32 1, !dbg !7297
  %10 = getelementptr inbounds { i64, i64 }, ptr %9, i32 0, i32 0, !dbg !7297
  %11 = load i64, ptr %10, align 8, !dbg !7297, !noundef !45
  %12 = getelementptr inbounds { i64, i64 }, ptr %9, i32 0, i32 1, !dbg !7297
  %13 = load i64, ptr %12, align 8, !dbg !7297, !range !1362, !noundef !45
  %14 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0, !dbg !7297
  store i64 %11, ptr %14, align 8, !dbg !7297
  %15 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1, !dbg !7297
  store i64 %13, ptr %15, align 8, !dbg !7297
  store i64 1, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !7017, metadata !DIExpression()), !dbg !7298
  store i64 %cap, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !7020, metadata !DIExpression()), !dbg !7300
  store i64 %cap, ptr %1, align 8, !dbg !7301
  %16 = load i64, ptr %1, align 8, !dbg !7301, !noundef !45
  store i64 %16, ptr %new_size.dbg.spill, align 8, !dbg !7302
  call void @llvm.dbg.declare(metadata ptr %new_size.dbg.spill, metadata !7274, metadata !DIExpression()), !dbg !7303
; call core::alloc::layout::Layout::align
  %_22 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %layout) #17, !dbg !7304
; call core::alloc::layout::Layout::from_size_align_unchecked
  %17 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE(i64 %16, i64 %_22) #17, !dbg !7305
  store { i64, i64 } %17, ptr %new_layout, align 8, !dbg !7305
  %18 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 0, !dbg !7306
  %_28.0 = load i64, ptr %18, align 8, !dbg !7306, !noundef !45
  %19 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 1, !dbg !7306
  %_28.1 = load i64, ptr %19, align 8, !dbg !7306, !range !1362, !noundef !45
  %20 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0, !dbg !7307
  %21 = load i64, ptr %20, align 8, !dbg !7307, !noundef !45
  %22 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1, !dbg !7307
  %23 = load i64, ptr %22, align 8, !dbg !7307, !range !1362, !noundef !45
; call <alloc::alloc::Global as core::alloc::Allocator>::shrink
  %24 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17h19cee89dbf023187E"(ptr align 1 %self, ptr %ptr, i64 %21, i64 %23, i64 %_28.0, i64 %_28.1) #17, !dbg !7307
  %_26.0 = extractvalue { ptr, i64 } %24, 0, !dbg !7307
  %_26.1 = extractvalue { ptr, i64 } %24, 1, !dbg !7307
  store ptr %new_layout, ptr %_29, align 8, !dbg !7308
  %25 = load ptr, ptr %_29, align 8, !dbg !7307, !nonnull !45, !align !1159, !noundef !45
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h532dd6c3e8297f41E"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveErrorKind>") %_25, ptr %_26.0, i64 %_26.1, ptr align 8 %25) #17, !dbg !7307
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdf3f46318328a39cE"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>") %_24, ptr %_25) #17, !dbg !7307
  %_31 = load i64, ptr %_24, align 8, !dbg !7307, !range !1797, !noundef !45
  %26 = icmp eq i64 %_31, 0, !dbg !7307
  br i1 %26, label %bb15, label %bb17, !dbg !7307

bb7:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !7309
  store i64 -9223372036854775807, ptr %27, align 8, !dbg !7309
  br label %bb19, !dbg !7310

bb19:                                             ; preds = %bb15, %bb17, %bb7
  %28 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 0, !dbg !7312
  %29 = load i64, ptr %28, align 8, !dbg !7312
  %30 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !7312
  %31 = load i64, ptr %30, align 8, !dbg !7312, !range !1024, !noundef !45
  %32 = insertvalue { i64, i64 } undef, i64 %29, 0, !dbg !7312
  %33 = insertvalue { i64, i64 } %32, i64 %31, 1, !dbg !7312
  ret { i64, i64 } %33, !dbg !7312

bb15:                                             ; preds = %bb6
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_24, i32 0, i32 1, !dbg !7307
  %35 = getelementptr inbounds { ptr, i64 }, ptr %34, i32 0, i32 0, !dbg !7307
  %ptr.0 = load ptr, ptr %35, align 8, !dbg !7307, !nonnull !45, !noundef !45
  %36 = getelementptr inbounds { ptr, i64 }, ptr %34, i32 0, i32 1, !dbg !7307
  %ptr.1 = load i64, ptr %36, align 8, !dbg !7307, !noundef !45
  %37 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill1, i32 0, i32 0, !dbg !7307
  store ptr %ptr.0, ptr %37, align 8, !dbg !7307
  %38 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill1, i32 0, i32 1, !dbg !7307
  store i64 %ptr.1, ptr %38, align 8, !dbg !7307
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill1, metadata !7272, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill1, metadata !7280, metadata !DIExpression()), !dbg !7314
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hab8881cfa1cfb4a7E"(ptr align 8 %self, ptr %ptr.0, i64 %ptr.1, i64 %cap) #17, !dbg !7315
  %39 = getelementptr inbounds { i64, i64 }, ptr %2, i32 0, i32 1, !dbg !7316
  store i64 -9223372036854775807, ptr %39, align 8, !dbg !7316
  br label %bb19, !dbg !7312

bb17:                                             ; preds = %bb6
  %40 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_24, i32 0, i32 1, !dbg !7317
  %41 = getelementptr inbounds { i64, i64 }, ptr %40, i32 0, i32 0, !dbg !7317
  %residual.0 = load i64, ptr %41, align 8, !dbg !7317
  %42 = getelementptr inbounds { i64, i64 }, ptr %40, i32 0, i32 1, !dbg !7317
  %residual.1 = load i64, ptr %42, align 8, !dbg !7317, !range !1009, !noundef !45
  %43 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill, i32 0, i32 0, !dbg !7317
  store i64 %residual.0, ptr %43, align 8, !dbg !7317
  %44 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill, i32 0, i32 1, !dbg !7317
  store i64 %residual.1, ptr %44, align 8, !dbg !7317
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !7278, metadata !DIExpression()), !dbg !7318
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %45 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd6f3d9742227c4e7E"(i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_4c7c158a760514eb3dbb50de0c5ebf0f) #17, !dbg !7319
  store { i64, i64 } %45, ptr %2, align 8, !dbg !7319
  br label %bb19, !dbg !7319

bb16:                                             ; No predecessors!
  unreachable, !dbg !7307
}

; alloc::raw_vec::RawVec<T,A>::shrink::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6shrink28_$u7b$$u7b$closure$u7d$$u7d$17h8e9b43de07767fe1E"(ptr align 8 %0) unnamed_addr #1 !dbg !7320 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %1 = alloca { i64, i64 }, align 8
  %_1 = alloca ptr, align 8
  store ptr %0, ptr %_1, align 8
  call void @llvm.dbg.declare(metadata ptr %_1, metadata !7324, metadata !DIExpression(DW_OP_deref)), !dbg !7326
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !7325, metadata !DIExpression()), !dbg !7327
  %_5 = load ptr, ptr %_1, align 8, !dbg !7328, !nonnull !45, !align !1159, !noundef !45
  %2 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 0, !dbg !7328
  %_3.0 = load i64, ptr %2, align 8, !dbg !7328, !noundef !45
  %3 = getelementptr inbounds { i64, i64 }, ptr %_5, i32 0, i32 1, !dbg !7328
  %_3.1 = load i64, ptr %3, align 8, !dbg !7328, !range !1362, !noundef !45
  %4 = getelementptr inbounds { i64, i64 }, ptr %1, i32 0, i32 0, !dbg !7329
  store i64 %_3.0, ptr %4, align 8, !dbg !7329
  %5 = getelementptr inbounds { i64, i64 }, ptr %1, i32 0, i32 1, !dbg !7329
  store i64 %_3.1, ptr %5, align 8, !dbg !7329
  %6 = getelementptr inbounds { i64, i64 }, ptr %1, i32 0, i32 0, !dbg !7330
  %7 = load i64, ptr %6, align 8, !dbg !7330
  %8 = getelementptr inbounds { i64, i64 }, ptr %1, i32 0, i32 1, !dbg !7330
  %9 = load i64, ptr %8, align 8, !dbg !7330, !range !1009, !noundef !45
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0, !dbg !7330
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1, !dbg !7330
  ret { i64, i64 } %11, !dbg !7330
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline noredzone nounwind
define void @_ZN5alloc7raw_vec11finish_grow17h6eb141d566cd47c9E(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, ptr %current_memory, ptr align 1 %alloc) unnamed_addr #4 !dbg !7331 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %residual.dbg.spill4 = alloca { i64, i64 }, align 8
  %val.dbg.spill1 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca ptr, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %_46 = alloca ptr, align 8
  %_37 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %_27 = alloca i64, align 8
  %_24 = alloca i64, align 8
  %_22 = alloca { ptr, ptr }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { ptr, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %new_layout.dbg.spill, metadata !7336, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.declare(metadata ptr %current_memory, metadata !7337, metadata !DIExpression()), !dbg !7364
  store ptr %alloc, ptr %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !7338, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.declare(metadata ptr %new_layout, metadata !7339, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill, metadata !7347, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.declare(metadata ptr %memory, metadata !7349, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.declare(metadata ptr %old_layout, metadata !7353, metadata !DIExpression()), !dbg !7369
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4386f93c5dcfd662E"(ptr sret(%"core::result::Result<core::alloc::layout::Layout, collections::TryReserveErrorKind>") %_6, i64 %new_layout.0, i64 %new_layout.1) #17, !dbg !7370
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h51099eb434296544E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>") %_5, ptr %_6) #17, !dbg !7370
  %_8 = load i64, ptr %_5, align 8, !dbg !7370, !range !1797, !noundef !45
  %3 = icmp eq i64 %_8, 0, !dbg !7370
  br i1 %3, label %bb3, label %bb5, !dbg !7370

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", ptr %_5, i32 0, i32 1, !dbg !7370
  %5 = getelementptr inbounds { i64, i64 }, ptr %4, i32 0, i32 0, !dbg !7370
  %val.0 = load i64, ptr %5, align 8, !dbg !7370, !noundef !45
  %6 = getelementptr inbounds { i64, i64 }, ptr %4, i32 0, i32 1, !dbg !7370
  %val.1 = load i64, ptr %6, align 8, !dbg !7370, !range !1362, !noundef !45
  %7 = getelementptr inbounds { i64, i64 }, ptr %val.dbg.spill1, i32 0, i32 0, !dbg !7370
  store i64 %val.0, ptr %7, align 8, !dbg !7370
  %8 = getelementptr inbounds { i64, i64 }, ptr %val.dbg.spill1, i32 0, i32 1, !dbg !7370
  store i64 %val.1, ptr %8, align 8, !dbg !7370
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill1, metadata !7343, metadata !DIExpression()), !dbg !7371
  %9 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 0, !dbg !7371
  store i64 %val.0, ptr %9, align 8, !dbg !7371
  %10 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 1, !dbg !7371
  store i64 %val.1, ptr %10, align 8, !dbg !7371
; call core::alloc::layout::Layout::size
  %_13 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %new_layout) #17, !dbg !7372
; call alloc::raw_vec::alloc_guard
  %11 = call { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17hc650f0e0913c3514E(i64 %_13) #17, !dbg !7373
  %_12.0 = extractvalue { i64, i64 } %11, 0, !dbg !7373
  %_12.1 = extractvalue { i64, i64 } %11, 1, !dbg !7373
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd472b4c890546766E"(i64 %_12.0, i64 %_12.1) #17, !dbg !7373
  store { i64, i64 } %12, ptr %_11, align 8, !dbg !7373
  %13 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !7373
  %14 = load i64, ptr %13, align 8, !dbg !7373, !range !1024, !noundef !45
  %15 = icmp eq i64 %14, -9223372036854775807, !dbg !7373
  %_15 = select i1 %15, i64 0, i64 1, !dbg !7373
  %16 = icmp eq i64 %_15, 0, !dbg !7373
  br i1 %16, label %bb9, label %bb11, !dbg !7373

bb5:                                              ; preds = %start
  %17 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", ptr %_5, i32 0, i32 1, !dbg !7374
  %18 = getelementptr inbounds { i64, i64 }, ptr %17, i32 0, i32 0, !dbg !7374
  %residual.0 = load i64, ptr %18, align 8, !dbg !7374
  %19 = getelementptr inbounds { i64, i64 }, ptr %17, i32 0, i32 1, !dbg !7374
  %residual.1 = load i64, ptr %19, align 8, !dbg !7374, !range !1009, !noundef !45
  %20 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill, i32 0, i32 0, !dbg !7374
  store i64 %residual.0, ptr %20, align 8, !dbg !7374
  %21 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill, i32 0, i32 1, !dbg !7374
  store i64 %residual.1, ptr %21, align 8, !dbg !7374
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !7341, metadata !DIExpression()), !dbg !7375
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17heaf6fce254c61816E"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>") %0, i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_aaf45724aeefb2c6a1bae46622d83c0b) #17, !dbg !7376
  br label %bb21, !dbg !7376

bb4:                                              ; No predecessors!
  unreachable, !dbg !7370

bb21:                                             ; preds = %bb20, %bb11, %bb5
  ret void, !dbg !7377

bb9:                                              ; preds = %bb3
  %22 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %current_memory, i32 0, i32 1, !dbg !7378
  %23 = load i64, ptr %22, align 8, !dbg !7378, !range !1009, !noundef !45
  %24 = icmp eq i64 %23, 0, !dbg !7378
  %_19 = select i1 %24, i64 0, i64 1, !dbg !7378
  %25 = icmp eq i64 %_19, 1, !dbg !7378
  br i1 %25, label %bb13, label %bb12, !dbg !7378

bb11:                                             ; preds = %bb3
  %26 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 0, !dbg !7379
  %residual.02 = load i64, ptr %26, align 8, !dbg !7379
  %27 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !7379
  %residual.13 = load i64, ptr %27, align 8, !dbg !7379, !range !1009, !noundef !45
  %28 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill4, i32 0, i32 0, !dbg !7379
  store i64 %residual.02, ptr %28, align 8, !dbg !7379
  %29 = getelementptr inbounds { i64, i64 }, ptr %residual.dbg.spill4, i32 0, i32 1, !dbg !7379
  store i64 %residual.13, ptr %29, align 8, !dbg !7379
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill4, metadata !7345, metadata !DIExpression()), !dbg !7380
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcf0d5a0139af7265E"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>") %0, i64 %residual.02, i64 %residual.13, ptr align 8 @alloc_a1f6e47b5a36ea7a9456db24008c1993) #17, !dbg !7381
  br label %bb21, !dbg !7381

bb10:                                             ; No predecessors!
  unreachable, !dbg !7373

bb13:                                             ; preds = %bb9
  %ptr = load ptr, ptr %current_memory, align 8, !dbg !7382, !nonnull !45, !noundef !45
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !7382
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7351, metadata !DIExpression()), !dbg !7382
  %30 = getelementptr inbounds { ptr, { i64, i64 } }, ptr %current_memory, i32 0, i32 1, !dbg !7369
  %31 = getelementptr inbounds { i64, i64 }, ptr %30, i32 0, i32 0, !dbg !7369
  %32 = load i64, ptr %31, align 8, !dbg !7369, !noundef !45
  %33 = getelementptr inbounds { i64, i64 }, ptr %30, i32 0, i32 1, !dbg !7369
  %34 = load i64, ptr %33, align 8, !dbg !7369, !range !1362, !noundef !45
  %35 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 0, !dbg !7369
  store i64 %32, ptr %35, align 8, !dbg !7369
  %36 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 1, !dbg !7369
  store i64 %34, ptr %36, align 8, !dbg !7369
; call core::alloc::layout::Layout::align
  %37 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %old_layout) #17, !dbg !7383
  store i64 %37, ptr %_24, align 8, !dbg !7383
; call core::alloc::layout::Layout::align
  %38 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %new_layout) #17, !dbg !7384
  store i64 %38, ptr %_27, align 8, !dbg !7384
  store ptr %_24, ptr %_22, align 8, !dbg !7385
  %39 = getelementptr inbounds { ptr, ptr }, ptr %_22, i32 0, i32 1, !dbg !7385
  store ptr %_27, ptr %39, align 8, !dbg !7385
  %left_val = load ptr, ptr %_22, align 8, !dbg !7385, !nonnull !45, !align !1159, !noundef !45
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !7385
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !7354, metadata !DIExpression()), !dbg !7386
  %40 = getelementptr inbounds { ptr, ptr }, ptr %_22, i32 0, i32 1, !dbg !7385
  %right_val = load ptr, ptr %40, align 8, !dbg !7385, !nonnull !45, !align !1159, !noundef !45
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !7385
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !7358, metadata !DIExpression()), !dbg !7386
  %_33 = load i64, ptr %left_val, align 8, !dbg !7386, !noundef !45
  %_34 = load i64, ptr %right_val, align 8, !dbg !7386, !noundef !45
  %_32 = icmp eq i64 %_33, %_34, !dbg !7386
  %_31 = xor i1 %_32, true, !dbg !7386
  br i1 %_31, label %bb16, label %bb17, !dbg !7386

bb12:                                             ; preds = %bb9
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %41 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h893fc493e6a4e468E"(ptr align 1 %alloc, i64 %val.0, i64 %val.1) #17, !dbg !7387
  store { ptr, i64 } %41, ptr %memory, align 8, !dbg !7387
  br label %bb20, !dbg !7387

bb20:                                             ; preds = %bb17, %bb12
  %42 = getelementptr inbounds { ptr, i64 }, ptr %memory, i32 0, i32 0, !dbg !7388
  %_45.0 = load ptr, ptr %42, align 8, !dbg !7388, !noundef !45
  %43 = getelementptr inbounds { ptr, i64 }, ptr %memory, i32 0, i32 1, !dbg !7388
  %_45.1 = load i64, ptr %43, align 8, !dbg !7388
  store ptr %new_layout, ptr %_46, align 8, !dbg !7389
  %44 = load ptr, ptr %_46, align 8, !dbg !7388, !nonnull !45, !align !1159, !noundef !45
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h31c44feed17dee11E"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, collections::TryReserveError>") %0, ptr %_45.0, i64 %_45.1, ptr align 8 %44) #17, !dbg !7388
  br label %bb21, !dbg !7388

bb17:                                             ; preds = %bb13
; call core::alloc::layout::Layout::align
  %_39 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %old_layout) #17, !dbg !7390
; call core::alloc::layout::Layout::align
  %_41 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %new_layout) #17, !dbg !7391
  %_38 = icmp eq i64 %_39, %_41, !dbg !7390
  call void @llvm.assume(i1 %_38), !dbg !7392
  %45 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 0, !dbg !7393
  %46 = load i64, ptr %45, align 8, !dbg !7393, !noundef !45
  %47 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 1, !dbg !7393
  %48 = load i64, ptr %47, align 8, !dbg !7393, !range !1362, !noundef !45
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %49 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h49653852f7ae1679E"(ptr align 1 %alloc, ptr %ptr, i64 %46, i64 %48, i64 %val.0, i64 %val.1) #17, !dbg !7393
  store { ptr, i64 } %49, ptr %memory, align 8, !dbg !7393
  br label %bb20, !dbg !7393

bb16:                                             ; preds = %bb13
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !7386
  call void @llvm.dbg.declare(metadata ptr %kind.dbg.spill, metadata !7359, metadata !DIExpression()), !dbg !7394
  %50 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_37, i32 0, i32 1, !dbg !7394
  store ptr null, ptr %50, align 8, !dbg !7394
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha2a9c290507d1ce0E(i8 0, ptr align 8 %left_val, ptr align 8 %right_val, ptr %_37, ptr align 8 @alloc_8bab2e9119408a09adc6a32ea81797f0) #18, !dbg !7394
  unreachable, !dbg !7394
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hce5445e8c9461545E"() unnamed_addr #1 !dbg !7395 {
start:
  %_2.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:464:41: 464:44]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !7399, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !7400, metadata !DIExpression()), !dbg !7402
  %1 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7403
  store i64 0, ptr %1, align 8, !dbg !7403
  %2 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !7404
  %3 = load i64, ptr %2, align 8, !dbg !7404
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7404
  %5 = load i64, ptr %4, align 8, !dbg !7404, !range !1009, !noundef !45
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !7404
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !7404
  ret { i64, i64 } %7, !dbg !7404
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h82b13999f26244c5E"(ptr align 8 %0) unnamed_addr #1 !dbg !7405 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_3 = alloca { i64, i64 }, align 8
  %_1 = alloca ptr, align 8
  store ptr %0, ptr %_1, align 8
  call void @llvm.dbg.declare(metadata ptr %_1, metadata !7409, metadata !DIExpression(DW_OP_deref)), !dbg !7411
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !7410, metadata !DIExpression()), !dbg !7412
  %_6 = load ptr, ptr %_1, align 8, !dbg !7413, !nonnull !45, !align !1159, !noundef !45
  %1 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 0, !dbg !7413
  %_4.0 = load i64, ptr %1, align 8, !dbg !7413, !noundef !45
  %2 = getelementptr inbounds { i64, i64 }, ptr %_6, i32 0, i32 1, !dbg !7413
  %_4.1 = load i64, ptr %2, align 8, !dbg !7413, !range !1362, !noundef !45
  %3 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !7414
  store i64 %_4.0, ptr %3, align 8, !dbg !7414
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !7414
  store i64 %_4.1, ptr %4, align 8, !dbg !7414
  %5 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !7414
  %6 = load i64, ptr %5, align 8, !dbg !7414
  %7 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !7414
  %8 = load i64, ptr %7, align 8, !dbg !7414, !range !1009, !noundef !45
; call <T as core::convert::Into<U>>::into
  %9 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1ff85623d6cefe36E"(i64 %6, i64 %8) #17, !dbg !7414
  %10 = extractvalue { i64, i64 } %9, 0, !dbg !7414
  %11 = extractvalue { i64, i64 } %9, 1, !dbg !7414
  %12 = insertvalue { i64, i64 } undef, i64 %10, 0, !dbg !7415
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1, !dbg !7415
  ret { i64, i64 } %13, !dbg !7415
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h013463ec9eaded60E"(ptr align 8 %self) unnamed_addr #0 !dbg !7416 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7421, metadata !DIExpression()), !dbg !7425
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h70a09d7d32d826f3E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, ptr align 8 %self) #17, !dbg !7426
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1, !dbg !7427
  %1 = load i64, ptr %0, align 8, !dbg !7427, !range !1009, !noundef !45
  %2 = icmp eq i64 %1, 0, !dbg !7427
  %_4 = select i1 %2, i64 0, i64 1, !dbg !7427
  %3 = icmp eq i64 %_4, 1, !dbg !7427
  br i1 %3, label %bb2, label %bb3, !dbg !7427

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !dbg !7428, !nonnull !45, !noundef !45
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !7428
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7422, metadata !DIExpression()), !dbg !7428
  %4 = getelementptr inbounds { ptr, { i64, i64 } }, ptr %_2, i32 0, i32 1, !dbg !7429
  %5 = getelementptr inbounds { i64, i64 }, ptr %4, i32 0, i32 0, !dbg !7429
  %layout.0 = load i64, ptr %5, align 8, !dbg !7429, !noundef !45
  %6 = getelementptr inbounds { i64, i64 }, ptr %4, i32 0, i32 1, !dbg !7429
  %layout.1 = load i64, ptr %6, align 8, !dbg !7429, !range !1362, !noundef !45
  %7 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0, !dbg !7429
  store i64 %layout.0, ptr %7, align 8, !dbg !7429
  %8 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1, !dbg !7429
  store i64 %layout.1, ptr %8, align 8, !dbg !7429
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !7424, metadata !DIExpression()), !dbg !7429
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0c95d486c0bac77cE"(ptr align 1 %self, ptr %ptr, i64 %layout.0, i64 %layout.1) #17, !dbg !7430
  br label %bb3, !dbg !7430

bb3:                                              ; preds = %bb2, %start
  ret void, !dbg !7431
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc7raw_vec14handle_reserve17hcc9be2f7d2ec10d7E(i64 %result.0, i64 %result.1) unnamed_addr #1 !dbg !7432 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %result.dbg.spill = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %result.dbg.spill, i32 0, i32 0
  store i64 %result.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %result.dbg.spill, i32 0, i32 1
  store i64 %result.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %result.dbg.spill, metadata !7436, metadata !DIExpression()), !dbg !7439
; call core::result::Result<T,E>::map_err
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17heb5048f883dbca67E"(i64 %result.0, i64 %result.1) #17, !dbg !7440
  store { i64, i64 } %2, ptr %_2, align 8, !dbg !7440
  %3 = getelementptr inbounds { i64, i64 }, ptr %_2, i32 0, i32 1, !dbg !7440
  %4 = load i64, ptr %3, align 8, !dbg !7440, !range !1024, !noundef !45
  %5 = icmp eq i64 %4, -9223372036854775807, !dbg !7440
  %_5 = select i1 %5, i64 0, i64 1, !dbg !7440
  %6 = icmp eq i64 %_5, 0, !dbg !7441
  br i1 %6, label %bb2, label %bb3, !dbg !7441

bb2:                                              ; preds = %start
  ret void, !dbg !7442

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, ptr %_2, i32 0, i32 1, !dbg !7440
  %8 = load i64, ptr %7, align 8, !dbg !7440, !range !1009, !noundef !45
  %9 = icmp eq i64 %8, 0, !dbg !7440
  %_4 = select i1 %9, i64 0, i64 1, !dbg !7440
  %10 = icmp eq i64 %_4, 0, !dbg !7441
  br i1 %10, label %bb5, label %bb6, !dbg !7441

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17ha8c8f9bec62c17b6E() #18, !dbg !7443
  unreachable, !dbg !7443

bb6:                                              ; preds = %bb3
  %11 = getelementptr inbounds { i64, i64 }, ptr %_2, i32 0, i32 0, !dbg !7444
  %layout.0 = load i64, ptr %11, align 8, !dbg !7444, !noundef !45
  %12 = getelementptr inbounds { i64, i64 }, ptr %_2, i32 0, i32 1, !dbg !7444
  %layout.1 = load i64, ptr %12, align 8, !dbg !7444, !range !1362, !noundef !45
  %13 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0, !dbg !7444
  store i64 %layout.0, ptr %13, align 8, !dbg !7444
  %14 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1, !dbg !7444
  store i64 %layout.1, ptr %14, align 8, !dbg !7444
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !7437, metadata !DIExpression()), !dbg !7445
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h3c6d18769aaa0402E(i64 %layout.0, i64 %layout.1) #18, !dbg !7446
  unreachable, !dbg !7446

bb4:                                              ; No predecessors!
  unreachable, !dbg !7440
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h575467add90393b2E"(i64 %0, i64 %1) unnamed_addr #1 !dbg !7447 {
start:
  %_1.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:495:26: 495:29]", align 1
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %e, i32 0, i32 0
  store i64 %0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %e, i32 0, i32 1
  store i64 %1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !7452, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.declare(metadata ptr %e, metadata !7451, metadata !DIExpression()), !dbg !7454
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17hc069ae9f8e46f190E(ptr align 8 %e) #17, !dbg !7455
  %5 = extractvalue { i64, i64 } %4, 0, !dbg !7455
  %6 = extractvalue { i64, i64 } %4, 1, !dbg !7455
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !7456
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !7456
  ret { i64, i64 } %8, !dbg !7456
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17hc650f0e0913c3514E(i64 %alloc_size) unnamed_addr #1 !dbg !7457 {
start:
  %alloc_size.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %alloc_size, ptr %alloc_size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %alloc_size.dbg.spill, metadata !7461, metadata !DIExpression()), !dbg !7462
  br i1 false, label %bb1, label %bb3, !dbg !7463

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7464
  store i64 -9223372036854775807, ptr %1, align 8, !dbg !7464
  br label %bb4, !dbg !7465

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !7466
  store i64 0, ptr %2, align 8, !dbg !7466
  %3 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 0, !dbg !7466
  %4 = load i64, ptr %3, align 8, !dbg !7466
  %5 = getelementptr inbounds { i64, i64 }, ptr %_4, i32 0, i32 1, !dbg !7466
  %6 = load i64, ptr %5, align 8, !dbg !7466, !range !1009, !noundef !45
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1ff85623d6cefe36E"(i64 %4, i64 %6) #17, !dbg !7466
  %_3.0 = extractvalue { i64, i64 } %7, 0, !dbg !7466
  %_3.1 = extractvalue { i64, i64 } %7, 1, !dbg !7466
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !7467
  store i64 %_3.0, ptr %8, align 8, !dbg !7467
  %9 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7467
  store i64 %_3.1, ptr %9, align 8, !dbg !7467
  br label %bb4, !dbg !7465

bb4:                                              ; preds = %bb3, %bb1
  %10 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !7468
  %11 = load i64, ptr %10, align 8, !dbg !7468
  %12 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !7468
  %13 = load i64, ptr %12, align 8, !dbg !7468, !range !1024, !noundef !45
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !7468
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !7468
  ret { i64, i64 } %15, !dbg !7468
}

; alloc::raw_vec::capacity_overflow
; Function Attrs: noredzone noreturn nounwind
define void @_ZN5alloc7raw_vec17capacity_overflow17ha8c8f9bec62c17b6E() unnamed_addr #5 !dbg !7469 {
start:
  %_2 = alloca %"core::fmt::Arguments<'_>", align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_2, ptr align 8 @alloc_f1c3fdd4952167f08a45eb50e2155f84, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !7472
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_2, ptr align 8 @alloc_27e9d3c6822f06b19afc0132a3987374) #18, !dbg !7472
  unreachable, !dbg !7472
}

; alloc::alloc::alloc
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN5alloc5alloc5alloc17h6d0f54158a10339aE(i64 %0, i64 %1) unnamed_addr #1 !dbg !7473 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0
  store i64 %0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1
  store i64 %1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %layout, metadata !7478, metadata !DIExpression()), !dbg !7479
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %layout) #17, !dbg !7480
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %layout) #17, !dbg !7481
  %4 = call ptr @__rust_alloc(i64 %_2, i64 %_4) #17, !dbg !7482
  ret ptr %4, !dbg !7483
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc5alloc7dealloc17ha6a467ba90738352E(ptr %ptr, i64 %0, i64 %1) unnamed_addr #1 !dbg !7484 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0
  store i64 %0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1
  store i64 %1, ptr %3, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7488, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.declare(metadata ptr %layout, metadata !7489, metadata !DIExpression()), !dbg !7491
; call core::alloc::layout::Layout::size
  %_3 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %layout) #17, !dbg !7492
; call core::alloc::layout::Layout::align
  %_5 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %layout) #17, !dbg !7493
  call void @__rust_dealloc(ptr %ptr, i64 %_3, i64 %_5) #17, !dbg !7494
  ret void, !dbg !7495
}

; alloc::alloc::realloc
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN5alloc5alloc7realloc17h49b59fb143fd4ef5E(ptr %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #1 !dbg !7496 {
start:
  %new_size.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0
  store i64 %0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1
  store i64 %1, ptr %3, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7500, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.declare(metadata ptr %layout, metadata !7501, metadata !DIExpression()), !dbg !7504
  store i64 %new_size, ptr %new_size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %new_size.dbg.spill, metadata !7502, metadata !DIExpression()), !dbg !7505
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %layout) #17, !dbg !7506
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %layout) #17, !dbg !7507
  %4 = call ptr @__rust_realloc(ptr %ptr, i64 %_4, i64 %_6, i64 %new_size) #17, !dbg !7508
  ret ptr %4, !dbg !7509
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN5alloc5alloc12alloc_zeroed17h8d9f1dc708e4d1eaE(i64 %0, i64 %1) unnamed_addr #1 !dbg !7510 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0
  store i64 %0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1
  store i64 %1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %layout, metadata !7512, metadata !DIExpression()), !dbg !7513
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %layout) #17, !dbg !7514
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %layout) #17, !dbg !7515
  %4 = call ptr @__rust_alloc_zeroed(i64 %_2, i64 %_4) #17, !dbg !7516
  ret ptr %4, !dbg !7517
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc552379f930e6ff1E(ptr align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #1 !dbg !7518 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %size.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca ptr, align 8
  %_11 = alloca ptr, align 8
  %raw_ptr = alloca ptr, align 8
  %2 = alloca { ptr, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0
  store i64 %0, ptr %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7522, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.declare(metadata ptr %layout, metadata !7523, metadata !DIExpression()), !dbg !7536
  %5 = zext i1 %zeroed to i8
  store i8 %5, ptr %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %zeroed.dbg.spill, metadata !7524, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.declare(metadata ptr %raw_ptr, metadata !7527, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !7531, metadata !DIExpression()), !dbg !7539
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %layout) #17, !dbg !7540
  %6 = icmp eq i64 %_4, 0, !dbg !7541
  br i1 %6, label %bb3, label %bb2, !dbg !7541

bb3:                                              ; preds = %start
; call core::alloc::layout::Layout::dangling
  %_7 = call ptr @_ZN4core5alloc6layout6Layout8dangling17h70829427c732de9cE(ptr align 8 %layout) #17, !dbg !7542
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %7 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc47f999b0766f8edE"(ptr %_7, i64 0) #17, !dbg !7543
  %_6.0 = extractvalue { ptr, i64 } %7, 0, !dbg !7543
  %_6.1 = extractvalue { ptr, i64 } %7, 1, !dbg !7543
  %8 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !7544
  store ptr %_6.0, ptr %8, align 8, !dbg !7544
  %9 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !7544
  store i64 %_6.1, ptr %9, align 8, !dbg !7544
  br label %bb16, !dbg !7545

bb2:                                              ; preds = %start
  store i64 %_4, ptr %size.dbg.spill, align 8, !dbg !7546
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !7525, metadata !DIExpression()), !dbg !7547
  br i1 %zeroed, label %bb6, label %bb7, !dbg !7548

bb7:                                              ; preds = %bb2
  %10 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0, !dbg !7549
  %11 = load i64, ptr %10, align 8, !dbg !7549, !noundef !45
  %12 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1, !dbg !7549
  %13 = load i64, ptr %12, align 8, !dbg !7549, !range !1362, !noundef !45
; call alloc::alloc::alloc
  %14 = call ptr @_ZN5alloc5alloc5alloc17h6d0f54158a10339aE(i64 %11, i64 %13) #17, !dbg !7549
  store ptr %14, ptr %raw_ptr, align 8, !dbg !7549
  br label %bb8, !dbg !7549

bb6:                                              ; preds = %bb2
  %15 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0, !dbg !7550
  %16 = load i64, ptr %15, align 8, !dbg !7550, !noundef !45
  %17 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1, !dbg !7550
  %18 = load i64, ptr %17, align 8, !dbg !7550, !range !1362, !noundef !45
; call alloc::alloc::alloc_zeroed
  %19 = call ptr @_ZN5alloc5alloc12alloc_zeroed17h8d9f1dc708e4d1eaE(i64 %16, i64 %18) #17, !dbg !7550
  store ptr %19, ptr %raw_ptr, align 8, !dbg !7550
  br label %bb8, !dbg !7550

bb8:                                              ; preds = %bb7, %bb6
  %_14 = load ptr, ptr %raw_ptr, align 8, !dbg !7551, !noundef !45
; call core::ptr::non_null::NonNull<T>::new
  %_13 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hb99e8f889e8dfec0E"(ptr %_14) #17, !dbg !7552
; call core::option::Option<T>::ok_or
  %_12 = call ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17hab1230ae13a015aaE"(ptr %_13) #17, !dbg !7552
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %20 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8ec2df2520998989E"(ptr %_12) #17, !dbg !7552
  store ptr %20, ptr %_11, align 8, !dbg !7552
  %21 = load ptr, ptr %_11, align 8, !dbg !7552, !noundef !45
  %22 = ptrtoint ptr %21 to i64, !dbg !7552
  %23 = icmp eq i64 %22, 0, !dbg !7552
  %_16 = select i1 %23, i64 1, i64 0, !dbg !7552
  %24 = icmp eq i64 %_16, 0, !dbg !7552
  br i1 %24, label %bb12, label %bb14, !dbg !7552

bb12:                                             ; preds = %bb8
  %ptr = load ptr, ptr %_11, align 8, !dbg !7552, !nonnull !45, !noundef !45
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !7552
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7529, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7533, metadata !DIExpression()), !dbg !7554
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %25 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc47f999b0766f8edE"(ptr %ptr, i64 %_4) #17, !dbg !7555
  %_20.0 = extractvalue { ptr, i64 } %25, 0, !dbg !7555
  %_20.1 = extractvalue { ptr, i64 } %25, 1, !dbg !7555
  %26 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !7556
  store ptr %_20.0, ptr %26, align 8, !dbg !7556
  %27 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !7556
  store i64 %_20.1, ptr %27, align 8, !dbg !7556
  br label %bb16, !dbg !7557

bb14:                                             ; preds = %bb8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1b03909c43de7f90E"(ptr align 8 @alloc_2872501864a693c161a3561717ff8559) #17, !dbg !7558
  store { ptr, i64 } %28, ptr %2, align 8, !dbg !7558
  br label %bb16, !dbg !7558

bb13:                                             ; No predecessors!
  unreachable, !dbg !7552

bb16:                                             ; preds = %bb3, %bb12, %bb14
  %29 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !7559
  %30 = load ptr, ptr %29, align 8, !dbg !7559, !noundef !45
  %31 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !7559
  %32 = load i64, ptr %31, align 8, !dbg !7559
  %33 = insertvalue { ptr, i64 } undef, ptr %30, 0, !dbg !7559
  %34 = insertvalue { ptr, i64 } %33, i64 %32, 1, !dbg !7559
  ret { ptr, i64 } %34, !dbg !7559
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc5alloc6Global9grow_impl17h910a929faaea79c7E(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #1 !dbg !7560 {
start:
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i11 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %val.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i = alloca ptr, align 8
  %new_ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %old_size.dbg.spill6 = alloca i64, align 8
  %ptr.dbg.spill4 = alloca ptr, align 8
  %raw_ptr.dbg.spill = alloca ptr, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %old_size.dbg.spill2 = alloca i64, align 8
  %old_size.dbg.spill = alloca ptr, align 8
  %residual.dbg.spill1 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_52 = alloca { ptr, i64 }, align 8
  %_34 = alloca ptr, align 8
  %_16 = alloca i64, align 8
  %_13 = alloca %"core::fmt::Arguments<'_>", align 8
  %5 = alloca { ptr, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 0
  store i64 %0, ptr %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 1
  store i64 %1, ptr %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 0
  store i64 %2, ptr %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 1
  store i64 %3, ptr %9, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7564, metadata !DIExpression()), !dbg !7590
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7565, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.declare(metadata ptr %old_layout, metadata !7566, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.declare(metadata ptr %new_layout, metadata !7567, metadata !DIExpression()), !dbg !7593
  %10 = zext i1 %zeroed to i8
  store i8 %10, ptr %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %zeroed.dbg.spill, metadata !7568, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !7578, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill1, metadata !7586, metadata !DIExpression()), !dbg !7596
; call core::alloc::layout::Layout::size
  %_8 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %new_layout) #17, !dbg !7597
; call core::alloc::layout::Layout::size
  %_10 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %old_layout) #17, !dbg !7598
  %_7 = icmp uge i64 %_8, %_10, !dbg !7597
  %_6 = xor i1 %_7, true, !dbg !7599
  br i1 %_6, label %bb3, label %bb5, !dbg !7599

bb5:                                              ; preds = %start
; call core::alloc::layout::Layout::size
  %11 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %old_layout) #17, !dbg !7600
  store i64 %11, ptr %_16, align 8, !dbg !7600
  %12 = load i64, ptr %_16, align 8, !dbg !7601, !noundef !45
  %13 = icmp eq i64 %12, 0, !dbg !7601
  br i1 %13, label %bb7, label %bb8, !dbg !7601

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_13, ptr align 8 @alloc_c7ae1f954522dd90a8f44baae431be9b, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !7599
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_13, ptr align 8 @alloc_42a5b49c9776b0b33fbe13836c2b4582) #18, !dbg !7599
  unreachable, !dbg !7599

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 0, !dbg !7602
  %15 = load i64, ptr %14, align 8, !dbg !7602, !noundef !45
  %16 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 1, !dbg !7602
  %17 = load i64, ptr %16, align 8, !dbg !7602, !range !1362, !noundef !45
; call alloc::alloc::Global::alloc_impl
  %18 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc552379f930e6ff1E(ptr align 1 %self, i64 %15, i64 %17, i1 zeroext %zeroed) #17, !dbg !7602
  store { ptr, i64 } %18, ptr %5, align 8, !dbg !7602
  br label %bb37, !dbg !7602

bb8:                                              ; preds = %bb5
  store ptr %_16, ptr %old_size.dbg.spill, align 8, !dbg !7603
  call void @llvm.dbg.declare(metadata ptr %old_size.dbg.spill, metadata !7571, metadata !DIExpression()), !dbg !7604
; call core::alloc::layout::Layout::align
  %_21 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %old_layout) #17, !dbg !7605
; call core::alloc::layout::Layout::align
  %_23 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %new_layout) #17, !dbg !7606
  %_20 = icmp eq i64 %_21, %_23, !dbg !7605
  br i1 %_20, label %bb11, label %bb12, !dbg !7605

bb12:                                             ; preds = %bb8
  %old_size5 = load i64, ptr %_16, align 8, !dbg !7607, !noundef !45
  store i64 %old_size5, ptr %old_size.dbg.spill6, align 8, !dbg !7607
  call void @llvm.dbg.declare(metadata ptr %old_size.dbg.spill6, metadata !7582, metadata !DIExpression()), !dbg !7608
  %19 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 0, !dbg !7609
  %20 = load i64, ptr %19, align 8, !dbg !7609, !noundef !45
  %21 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 1, !dbg !7609
  %22 = load i64, ptr %21, align 8, !dbg !7609, !range !1362, !noundef !45
; call alloc::alloc::Global::alloc_impl
  %23 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc552379f930e6ff1E(ptr align 1 %self, i64 %20, i64 %22, i1 zeroext %zeroed) #17, !dbg !7609
  %_53.0 = extractvalue { ptr, i64 } %23, 0, !dbg !7609
  %_53.1 = extractvalue { ptr, i64 } %23, 1, !dbg !7609
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %24 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heb249f893b3cbe1fE"(ptr %_53.0, i64 %_53.1) #17, !dbg !7609
  store { ptr, i64 } %24, ptr %_52, align 8, !dbg !7609
  %25 = load ptr, ptr %_52, align 8, !dbg !7609, !noundef !45
  %26 = ptrtoint ptr %25 to i64, !dbg !7609
  %27 = icmp eq i64 %26, 0, !dbg !7609
  %_54 = select i1 %27, i64 1, i64 0, !dbg !7609
  %28 = icmp eq i64 %_54, 0, !dbg !7609
  br i1 %28, label %bb30, label %bb32, !dbg !7609

bb11:                                             ; preds = %bb8
  %old_size = load i64, ptr %_16, align 8, !dbg !7603, !noundef !45
  store i64 %old_size, ptr %old_size.dbg.spill2, align 8, !dbg !7603
  call void @llvm.dbg.declare(metadata ptr %old_size.dbg.spill2, metadata !7569, metadata !DIExpression()), !dbg !7604
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %new_layout) #17, !dbg !7610
  store i64 %new_size, ptr %new_size.dbg.spill, align 8, !dbg !7610
  call void @llvm.dbg.declare(metadata ptr %new_size.dbg.spill, metadata !7572, metadata !DIExpression()), !dbg !7611
; call core::alloc::layout::Layout::size
  %_29 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %old_layout) #17, !dbg !7612
  %_27 = icmp uge i64 %new_size, %_29, !dbg !7613
  call void @llvm.assume(i1 %_27), !dbg !7614
  store ptr %ptr, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !2730, metadata !DIExpression()), !dbg !7615
  %29 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 0, !dbg !7617
  %30 = load i64, ptr %29, align 8, !dbg !7617, !noundef !45
  %31 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 1, !dbg !7617
  %32 = load i64, ptr %31, align 8, !dbg !7617, !range !1362, !noundef !45
; call alloc::alloc::realloc
  %raw_ptr = call ptr @_ZN5alloc5alloc7realloc17h49b59fb143fd4ef5E(ptr %ptr, i64 %30, i64 %32, i64 %new_size) #17, !dbg !7617
  store ptr %raw_ptr, ptr %raw_ptr.dbg.spill, align 8, !dbg !7617
  call void @llvm.dbg.declare(metadata ptr %raw_ptr.dbg.spill, metadata !7574, metadata !DIExpression()), !dbg !7618
; call core::ptr::non_null::NonNull<T>::new
  %_36 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hb99e8f889e8dfec0E"(ptr %raw_ptr) #17, !dbg !7619
; call core::option::Option<T>::ok_or
  %_35 = call ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17hab1230ae13a015aaE"(ptr %_36) #17, !dbg !7619
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %33 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8ec2df2520998989E"(ptr %_35) #17, !dbg !7619
  store ptr %33, ptr %_34, align 8, !dbg !7619
  %34 = load ptr, ptr %_34, align 8, !dbg !7619, !noundef !45
  %35 = ptrtoint ptr %34 to i64, !dbg !7619
  %36 = icmp eq i64 %35, 0, !dbg !7619
  %_39 = select i1 %36, i64 1, i64 0, !dbg !7619
  %37 = icmp eq i64 %_39, 0, !dbg !7619
  br i1 %37, label %bb20, label %bb22, !dbg !7619

bb20:                                             ; preds = %bb11
  %ptr3 = load ptr, ptr %_34, align 8, !dbg !7619, !nonnull !45, !noundef !45
  store ptr %ptr3, ptr %ptr.dbg.spill4, align 8, !dbg !7619
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill4, metadata !7576, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill4, metadata !7580, metadata !DIExpression()), !dbg !7621
  br i1 %zeroed, label %bb23, label %bb26, !dbg !7622

bb22:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %38 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1b03909c43de7f90E"(ptr align 8 @alloc_5ba5b2714b896f0859d1ee0da6af33f1) #17, !dbg !7623
  store { ptr, i64 } %38, ptr %5, align 8, !dbg !7623
  br label %bb37, !dbg !7623

bb21:                                             ; No predecessors!
  unreachable, !dbg !7619

bb37:                                             ; preds = %bb7, %bb30, %bb32, %bb26, %bb22
  %39 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 0, !dbg !7624
  %40 = load ptr, ptr %39, align 8, !dbg !7624, !noundef !45
  %41 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 1, !dbg !7624
  %42 = load i64, ptr %41, align 8, !dbg !7624
  %43 = insertvalue { ptr, i64 } undef, ptr %40, 0, !dbg !7624
  %44 = insertvalue { ptr, i64 } %43, i64 %42, 1, !dbg !7624
  ret { ptr, i64 } %44, !dbg !7624

bb26:                                             ; preds = %bb25, %bb20
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %45 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc47f999b0766f8edE"(ptr %ptr3, i64 %new_size) #17, !dbg !7625
  %_49.0 = extractvalue { ptr, i64 } %45, 0, !dbg !7625
  %_49.1 = extractvalue { ptr, i64 } %45, 1, !dbg !7625
  %46 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 0, !dbg !7626
  store ptr %_49.0, ptr %46, align 8, !dbg !7626
  %47 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 1, !dbg !7626
  store i64 %_49.1, ptr %47, align 8, !dbg !7626
  br label %bb37, !dbg !7627

bb23:                                             ; preds = %bb20
  store ptr %raw_ptr, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !5931, metadata !DIExpression()), !dbg !7628
  store i64 %old_size, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !5936, metadata !DIExpression()), !dbg !7630
  store ptr %raw_ptr, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !5940, metadata !DIExpression()), !dbg !7631
  store i64 %old_size, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !5945, metadata !DIExpression()), !dbg !7633
  %48 = getelementptr inbounds i8, ptr %raw_ptr, i64 %old_size, !dbg !7634
  store ptr %48, ptr %4, align 8, !dbg !7634
  %_3.i = load ptr, ptr %4, align 8, !dbg !7634, !noundef !45
  %_48.0 = sub i64 %new_size, %old_size, !dbg !7635
  %_48.1 = icmp ult i64 %new_size, %old_size, !dbg !7635
  %49 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false), !dbg !7635
  br i1 %49, label %panic, label %bb25, !dbg !7635

bb25:                                             ; preds = %bb23
  store ptr %_3.i, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !7636, metadata !DIExpression()), !dbg !7643
  store i8 0, ptr %val.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill.i, metadata !7641, metadata !DIExpression()), !dbg !7645
  store i64 %_48.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !7642, metadata !DIExpression()), !dbg !7646
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17h72c5c797464fd770E(ptr %_3.i, i8 0, i64 %_48.0) #17, !dbg !7647
  br label %bb26, !dbg !7648

panic:                                            ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_1a9182a6a32222e32930dc0b0f8a3d32) #18, !dbg !7635
  unreachable, !dbg !7635

bb30:                                             ; preds = %bb12
  %50 = getelementptr inbounds { ptr, i64 }, ptr %_52, i32 0, i32 0, !dbg !7609
  %new_ptr.0 = load ptr, ptr %50, align 8, !dbg !7609, !nonnull !45, !noundef !45
  %51 = getelementptr inbounds { ptr, i64 }, ptr %_52, i32 0, i32 1, !dbg !7609
  %new_ptr.1 = load i64, ptr %51, align 8, !dbg !7609, !noundef !45
  %52 = getelementptr inbounds { ptr, i64 }, ptr %new_ptr.dbg.spill, i32 0, i32 0, !dbg !7609
  store ptr %new_ptr.0, ptr %52, align 8, !dbg !7609
  %53 = getelementptr inbounds { ptr, i64 }, ptr %new_ptr.dbg.spill, i32 0, i32 1, !dbg !7609
  store i64 %new_ptr.1, ptr %53, align 8, !dbg !7609
  call void @llvm.dbg.declare(metadata ptr %new_ptr.dbg.spill, metadata !7584, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.declare(metadata ptr %new_ptr.dbg.spill, metadata !7588, metadata !DIExpression()), !dbg !7650
  store ptr %ptr, ptr %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !2730, metadata !DIExpression()), !dbg !7651
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_61 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17ha9fd9e9e2469caa6E"(ptr %new_ptr.0, i64 %new_ptr.1) #17, !dbg !7653
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr %ptr, ptr %_61, i64 %old_size5) #17, !dbg !7654
  %54 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 0, !dbg !7655
  %55 = load i64, ptr %54, align 8, !dbg !7655, !noundef !45
  %56 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 1, !dbg !7655
  %57 = load i64, ptr %56, align 8, !dbg !7655, !range !1362, !noundef !45
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0c95d486c0bac77cE"(ptr align 1 %self, ptr %ptr, i64 %55, i64 %57) #17, !dbg !7655
  %58 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 0, !dbg !7656
  store ptr %new_ptr.0, ptr %58, align 8, !dbg !7656
  %59 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 1, !dbg !7656
  store i64 %new_ptr.1, ptr %59, align 8, !dbg !7656
  br label %bb37, !dbg !7657

bb32:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %60 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1b03909c43de7f90E"(ptr align 8 @alloc_b9654aef1a48a42f4d2c4b2fa0500faf) #17, !dbg !7658
  store { ptr, i64 } %60, ptr %5, align 8, !dbg !7658
  br label %bb37, !dbg !7658

bb31:                                             ; No predecessors!
  unreachable, !dbg !7609
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h893fc493e6a4e468E"(ptr align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #1 !dbg !7659 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7664, metadata !DIExpression()), !dbg !7666
  %0 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !7665, metadata !DIExpression()), !dbg !7667
; call alloc::alloc::Global::alloc_impl
  %2 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc552379f930e6ff1E(ptr align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false) #17, !dbg !7668
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !7668
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !7668
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !7669
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !7669
  ret { ptr, i64 } %6, !dbg !7669
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h6db2ad8a3d16dc6aE"(ptr align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #1 !dbg !7670 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7672, metadata !DIExpression()), !dbg !7674
  %0 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !7673, metadata !DIExpression()), !dbg !7675
; call alloc::alloc::Global::alloc_impl
  %2 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc552379f930e6ff1E(ptr align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true) #17, !dbg !7676
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !7676
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !7676
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !7677
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !7677
  ret { ptr, i64 } %6, !dbg !7677
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0c95d486c0bac77cE"(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1) unnamed_addr #1 !dbg !7678 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0
  store i64 %0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1
  store i64 %1, ptr %3, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7682, metadata !DIExpression()), !dbg !7685
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7683, metadata !DIExpression()), !dbg !7686
  call void @llvm.dbg.declare(metadata ptr %layout, metadata !7684, metadata !DIExpression()), !dbg !7687
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %layout) #17, !dbg !7688
  %4 = icmp eq i64 %_4, 0, !dbg !7688
  br i1 %4, label %bb4, label %bb2, !dbg !7688

bb4:                                              ; preds = %bb2, %start
  ret void, !dbg !7689

bb2:                                              ; preds = %start
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2730, metadata !DIExpression()), !dbg !7690
  %5 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0, !dbg !7692
  %6 = load i64, ptr %5, align 8, !dbg !7692, !noundef !45
  %7 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1, !dbg !7692
  %8 = load i64, ptr %7, align 8, !dbg !7692, !range !1362, !noundef !45
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17ha6a467ba90738352E(ptr %ptr, i64 %6, i64 %8) #17, !dbg !7692
  br label %bb4, !dbg !7692
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h49653852f7ae1679E"(ptr align 1 %self, ptr %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #1 !dbg !7693 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7697, metadata !DIExpression()), !dbg !7701
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7698, metadata !DIExpression()), !dbg !7702
  %0 = getelementptr inbounds { i64, i64 }, ptr %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %old_layout.dbg.spill, metadata !7699, metadata !DIExpression()), !dbg !7703
  %2 = getelementptr inbounds { i64, i64 }, ptr %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %new_layout.dbg.spill, metadata !7700, metadata !DIExpression()), !dbg !7704
; call alloc::alloc::Global::grow_impl
  %4 = call { ptr, i64 } @_ZN5alloc5alloc6Global9grow_impl17h910a929faaea79c7E(ptr align 1 %self, ptr %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false) #17, !dbg !7705
  %5 = extractvalue { ptr, i64 } %4, 0, !dbg !7705
  %6 = extractvalue { ptr, i64 } %4, 1, !dbg !7705
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !7706
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1, !dbg !7706
  ret { ptr, i64 } %8, !dbg !7706
}

; <alloc::alloc::Global as core::alloc::Allocator>::shrink
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17h19cee89dbf023187E"(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1, i64 %2, i64 %3) unnamed_addr #1 !dbg !7707 {
start:
  %self.dbg.spill.i7 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %new_ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %new_size.dbg.spill6 = alloca i64, align 8
  %ptr.dbg.spill4 = alloca ptr, align 8
  %raw_ptr.dbg.spill = alloca ptr, align 8
  %new_size.dbg.spill2 = alloca i64, align 8
  %new_size.dbg.spill = alloca ptr, align 8
  %residual.dbg.spill1 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %ptr.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_44 = alloca { ptr, i64 }, align 8
  %_33 = alloca ptr, align 8
  %_15 = alloca i64, align 8
  %_12 = alloca %"core::fmt::Arguments<'_>", align 8
  %4 = alloca { ptr, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 0
  store i64 %0, ptr %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 1
  store i64 %1, ptr %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 0
  store i64 %2, ptr %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 1
  store i64 %3, ptr %8, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7709, metadata !DIExpression()), !dbg !7732
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7710, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.declare(metadata ptr %old_layout, metadata !7711, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.declare(metadata ptr %new_layout, metadata !7712, metadata !DIExpression()), !dbg !7735
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !7720, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill1, metadata !7728, metadata !DIExpression()), !dbg !7737
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %new_layout) #17, !dbg !7738
; call core::alloc::layout::Layout::size
  %_9 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %old_layout) #17, !dbg !7739
  %_6 = icmp ule i64 %_7, %_9, !dbg !7738
  %_5 = xor i1 %_6, true, !dbg !7740
  br i1 %_5, label %bb3, label %bb5, !dbg !7740

bb5:                                              ; preds = %start
; call core::alloc::layout::Layout::size
  %9 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %new_layout) #17, !dbg !7741
  store i64 %9, ptr %_15, align 8, !dbg !7741
  %10 = load i64, ptr %_15, align 8, !dbg !7742, !noundef !45
  %11 = icmp eq i64 %10, 0, !dbg !7742
  br i1 %11, label %bb7, label %bb11, !dbg !7742

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_12, ptr align 8 @alloc_295c34c5e2d6fdb08fc4b6bc306e1ee7, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !7740
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_12, ptr align 8 @alloc_5ee2bbb77c0637aaa442027ef1fa39e3) #18, !dbg !7740
  unreachable, !dbg !7740

bb7:                                              ; preds = %bb5
  %12 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 0, !dbg !7743
  %13 = load i64, ptr %12, align 8, !dbg !7743, !noundef !45
  %14 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 1, !dbg !7743
  %15 = load i64, ptr %14, align 8, !dbg !7743, !range !1362, !noundef !45
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0c95d486c0bac77cE"(ptr align 1 %self, ptr %ptr, i64 %13, i64 %15) #17, !dbg !7743
; call core::alloc::layout::Layout::dangling
  %_19 = call ptr @_ZN4core5alloc6layout6Layout8dangling17h70829427c732de9cE(ptr align 8 %new_layout) #17, !dbg !7744
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %16 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc47f999b0766f8edE"(ptr %_19, i64 0) #17, !dbg !7745
  %_18.0 = extractvalue { ptr, i64 } %16, 0, !dbg !7745
  %_18.1 = extractvalue { ptr, i64 } %16, 1, !dbg !7745
  %17 = getelementptr inbounds { ptr, i64 }, ptr %4, i32 0, i32 0, !dbg !7746
  store ptr %_18.0, ptr %17, align 8, !dbg !7746
  %18 = getelementptr inbounds { ptr, i64 }, ptr %4, i32 0, i32 1, !dbg !7746
  store i64 %_18.1, ptr %18, align 8, !dbg !7746
  br label %bb35, !dbg !7747

bb11:                                             ; preds = %bb5
  store ptr %_15, ptr %new_size.dbg.spill, align 8, !dbg !7748
  call void @llvm.dbg.declare(metadata ptr %new_size.dbg.spill, metadata !7715, metadata !DIExpression()), !dbg !7749
; call core::alloc::layout::Layout::align
  %_24 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %old_layout) #17, !dbg !7750
; call core::alloc::layout::Layout::align
  %_26 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %new_layout) #17, !dbg !7751
  %_23 = icmp eq i64 %_24, %_26, !dbg !7750
  br i1 %_23, label %bb14, label %bb15, !dbg !7750

bb15:                                             ; preds = %bb11
  %new_size5 = load i64, ptr %_15, align 8, !dbg !7752, !noundef !45
  store i64 %new_size5, ptr %new_size.dbg.spill6, align 8, !dbg !7752
  call void @llvm.dbg.declare(metadata ptr %new_size.dbg.spill6, metadata !7724, metadata !DIExpression()), !dbg !7753
  %19 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 0, !dbg !7754
  %20 = load i64, ptr %19, align 8, !dbg !7754, !noundef !45
  %21 = getelementptr inbounds { i64, i64 }, ptr %new_layout, i32 0, i32 1, !dbg !7754
  %22 = load i64, ptr %21, align 8, !dbg !7754, !range !1362, !noundef !45
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %23 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h893fc493e6a4e468E"(ptr align 1 %self, i64 %20, i64 %22) #17, !dbg !7754
  %_45.0 = extractvalue { ptr, i64 } %23, 0, !dbg !7754
  %_45.1 = extractvalue { ptr, i64 } %23, 1, !dbg !7754
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %24 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heb249f893b3cbe1fE"(ptr %_45.0, i64 %_45.1) #17, !dbg !7754
  store { ptr, i64 } %24, ptr %_44, align 8, !dbg !7754
  %25 = load ptr, ptr %_44, align 8, !dbg !7754, !noundef !45
  %26 = ptrtoint ptr %25 to i64, !dbg !7754
  %27 = icmp eq i64 %26, 0, !dbg !7754
  %_46 = select i1 %27, i64 1, i64 0, !dbg !7754
  %28 = icmp eq i64 %_46, 0, !dbg !7754
  br i1 %28, label %bb28, label %bb30, !dbg !7754

bb14:                                             ; preds = %bb11
  %new_size = load i64, ptr %_15, align 8, !dbg !7748, !noundef !45
  store i64 %new_size, ptr %new_size.dbg.spill2, align 8, !dbg !7748
  call void @llvm.dbg.declare(metadata ptr %new_size.dbg.spill2, metadata !7713, metadata !DIExpression()), !dbg !7749
; call core::alloc::layout::Layout::size
  %_29 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %old_layout) #17, !dbg !7755
  %_28 = icmp ule i64 %new_size, %_29, !dbg !7756
  call void @llvm.assume(i1 %_28), !dbg !7757
  store ptr %ptr, ptr %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i7, metadata !2730, metadata !DIExpression()), !dbg !7758
  %29 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 0, !dbg !7760
  %30 = load i64, ptr %29, align 8, !dbg !7760, !noundef !45
  %31 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 1, !dbg !7760
  %32 = load i64, ptr %31, align 8, !dbg !7760, !range !1362, !noundef !45
; call alloc::alloc::realloc
  %raw_ptr = call ptr @_ZN5alloc5alloc7realloc17h49b59fb143fd4ef5E(ptr %ptr, i64 %30, i64 %32, i64 %new_size) #17, !dbg !7760
  store ptr %raw_ptr, ptr %raw_ptr.dbg.spill, align 8, !dbg !7760
  call void @llvm.dbg.declare(metadata ptr %raw_ptr.dbg.spill, metadata !7716, metadata !DIExpression()), !dbg !7761
; call core::ptr::non_null::NonNull<T>::new
  %_35 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hb99e8f889e8dfec0E"(ptr %raw_ptr) #17, !dbg !7762
; call core::option::Option<T>::ok_or
  %_34 = call ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17hab1230ae13a015aaE"(ptr %_35) #17, !dbg !7762
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %33 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8ec2df2520998989E"(ptr %_34) #17, !dbg !7762
  store ptr %33, ptr %_33, align 8, !dbg !7762
  %34 = load ptr, ptr %_33, align 8, !dbg !7762, !noundef !45
  %35 = ptrtoint ptr %34 to i64, !dbg !7762
  %36 = icmp eq i64 %35, 0, !dbg !7762
  %_38 = select i1 %36, i64 1, i64 0, !dbg !7762
  %37 = icmp eq i64 %_38, 0, !dbg !7762
  br i1 %37, label %bb22, label %bb24, !dbg !7762

bb22:                                             ; preds = %bb14
  %ptr3 = load ptr, ptr %_33, align 8, !dbg !7762, !nonnull !45, !noundef !45
  store ptr %ptr3, ptr %ptr.dbg.spill4, align 8, !dbg !7762
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill4, metadata !7718, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill4, metadata !7722, metadata !DIExpression()), !dbg !7764
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %38 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc47f999b0766f8edE"(ptr %ptr3, i64 %new_size) #17, !dbg !7765
  %_42.0 = extractvalue { ptr, i64 } %38, 0, !dbg !7765
  %_42.1 = extractvalue { ptr, i64 } %38, 1, !dbg !7765
  %39 = getelementptr inbounds { ptr, i64 }, ptr %4, i32 0, i32 0, !dbg !7766
  store ptr %_42.0, ptr %39, align 8, !dbg !7766
  %40 = getelementptr inbounds { ptr, i64 }, ptr %4, i32 0, i32 1, !dbg !7766
  store i64 %_42.1, ptr %40, align 8, !dbg !7766
  br label %bb35, !dbg !7767

bb24:                                             ; preds = %bb14
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %41 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1b03909c43de7f90E"(ptr align 8 @alloc_1e7ae1386431630e92494d74a0d85183) #17, !dbg !7768
  store { ptr, i64 } %41, ptr %4, align 8, !dbg !7768
  br label %bb35, !dbg !7768

bb23:                                             ; No predecessors!
  unreachable, !dbg !7762

bb35:                                             ; preds = %bb7, %bb28, %bb30, %bb22, %bb24
  %42 = getelementptr inbounds { ptr, i64 }, ptr %4, i32 0, i32 0, !dbg !7769
  %43 = load ptr, ptr %42, align 8, !dbg !7769, !noundef !45
  %44 = getelementptr inbounds { ptr, i64 }, ptr %4, i32 0, i32 1, !dbg !7769
  %45 = load i64, ptr %44, align 8, !dbg !7769
  %46 = insertvalue { ptr, i64 } undef, ptr %43, 0, !dbg !7769
  %47 = insertvalue { ptr, i64 } %46, i64 %45, 1, !dbg !7769
  ret { ptr, i64 } %47, !dbg !7769

bb28:                                             ; preds = %bb15
  %48 = getelementptr inbounds { ptr, i64 }, ptr %_44, i32 0, i32 0, !dbg !7754
  %new_ptr.0 = load ptr, ptr %48, align 8, !dbg !7754, !nonnull !45, !noundef !45
  %49 = getelementptr inbounds { ptr, i64 }, ptr %_44, i32 0, i32 1, !dbg !7754
  %new_ptr.1 = load i64, ptr %49, align 8, !dbg !7754, !noundef !45
  %50 = getelementptr inbounds { ptr, i64 }, ptr %new_ptr.dbg.spill, i32 0, i32 0, !dbg !7754
  store ptr %new_ptr.0, ptr %50, align 8, !dbg !7754
  %51 = getelementptr inbounds { ptr, i64 }, ptr %new_ptr.dbg.spill, i32 0, i32 1, !dbg !7754
  store i64 %new_ptr.1, ptr %51, align 8, !dbg !7754
  call void @llvm.dbg.declare(metadata ptr %new_ptr.dbg.spill, metadata !7726, metadata !DIExpression()), !dbg !7770
  call void @llvm.dbg.declare(metadata ptr %new_ptr.dbg.spill, metadata !7730, metadata !DIExpression()), !dbg !7771
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !2730, metadata !DIExpression()), !dbg !7772
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_53 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17ha9fd9e9e2469caa6E"(ptr %new_ptr.0, i64 %new_ptr.1) #17, !dbg !7774
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr %ptr, ptr %_53, i64 %new_size5) #17, !dbg !7775
  %52 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 0, !dbg !7776
  %53 = load i64, ptr %52, align 8, !dbg !7776, !noundef !45
  %54 = getelementptr inbounds { i64, i64 }, ptr %old_layout, i32 0, i32 1, !dbg !7776
  %55 = load i64, ptr %54, align 8, !dbg !7776, !range !1362, !noundef !45
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0c95d486c0bac77cE"(ptr align 1 %self, ptr %ptr, i64 %53, i64 %55) #17, !dbg !7776
  %56 = getelementptr inbounds { ptr, i64 }, ptr %4, i32 0, i32 0, !dbg !7777
  store ptr %new_ptr.0, ptr %56, align 8, !dbg !7777
  %57 = getelementptr inbounds { ptr, i64 }, ptr %4, i32 0, i32 1, !dbg !7777
  store i64 %new_ptr.1, ptr %57, align 8, !dbg !7777
  br label %bb35, !dbg !7778

bb30:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %58 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1b03909c43de7f90E"(ptr align 8 @alloc_35dfdc4542b0bb7bfbad545cd5525a84) #17, !dbg !7779
  store { ptr, i64 } %58, ptr %4, align 8, !dbg !7779
  br label %bb35, !dbg !7779

bb29:                                             ; No predecessors!
  unreachable, !dbg !7754
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN5alloc5alloc15exchange_malloc17h14ff5e8c882553c0E(i64 %size, i64 %align) unnamed_addr #1 !dbg !7780 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_4 = alloca { ptr, i64 }, align 8
  store i64 %size, ptr %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !7784, metadata !DIExpression()), !dbg !7790
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !7785, metadata !DIExpression()), !dbg !7791
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE(i64 %size, i64 %align) #17, !dbg !7792
  %layout.0 = extractvalue { i64, i64 } %0, 0, !dbg !7792
  %layout.1 = extractvalue { i64, i64 } %0, 1, !dbg !7792
  %1 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0, !dbg !7792
  store i64 %layout.0, ptr %1, align 8, !dbg !7792
  %2 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1, !dbg !7792
  store i64 %layout.1, ptr %2, align 8, !dbg !7792
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !7786, metadata !DIExpression()), !dbg !7793
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %3 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h893fc493e6a4e468E"(ptr align 1 @alloc_2bfeba76c1438a46208a034153050220, i64 %layout.0, i64 %layout.1) #17, !dbg !7794
  store { ptr, i64 } %3, ptr %_4, align 8, !dbg !7794
  %4 = load ptr, ptr %_4, align 8, !dbg !7794, !noundef !45
  %5 = ptrtoint ptr %4 to i64, !dbg !7794
  %6 = icmp eq i64 %5, 0, !dbg !7794
  %_6 = select i1 %6, i64 1, i64 0, !dbg !7794
  %7 = icmp eq i64 %_6, 0, !dbg !7795
  br i1 %7, label %bb5, label %bb3, !dbg !7795

bb5:                                              ; preds = %start
  %8 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 0, !dbg !7796
  %ptr.0 = load ptr, ptr %8, align 8, !dbg !7796, !nonnull !45, !noundef !45
  %9 = getelementptr inbounds { ptr, i64 }, ptr %_4, i32 0, i32 1, !dbg !7796
  %ptr.1 = load i64, ptr %9, align 8, !dbg !7796, !noundef !45
  %10 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0, !dbg !7796
  store ptr %ptr.0, ptr %10, align 8, !dbg !7796
  %11 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1, !dbg !7796
  store i64 %ptr.1, ptr %11, align 8, !dbg !7796
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !7788, metadata !DIExpression()), !dbg !7797
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %12 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17ha9fd9e9e2469caa6E"(ptr %ptr.0, i64 %ptr.1) #17, !dbg !7798
  ret ptr %12, !dbg !7799

bb3:                                              ; preds = %start
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h3c6d18769aaa0402E(i64 %layout.0, i64 %layout.1) #18, !dbg !7800
  unreachable, !dbg !7800

bb4:                                              ; No predecessors!
  unreachable, !dbg !7794
}

; alloc::alloc::box_free
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN5alloc5alloc8box_free17h0357003df53c0fe9E(ptr %0, i64 %1) unnamed_addr #1 !dbg !7801 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %align.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %3 = alloca i64, align 8
  %alloc = alloca %"alloc::Global", align 1
  %ptr = alloca { ptr, i64 }, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %ptr, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, i64 }, ptr %ptr, i32 0, i32 1
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !7805, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.declare(metadata ptr %alloc, metadata !7806, metadata !DIExpression()), !dbg !7814
; call core::ptr::unique::Unique<T>::as_ref
  %6 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbdd312af9f64d83cE"(ptr align 8 %ptr) #17, !dbg !7815
  %_5.0 = extractvalue { ptr, i64 } %6, 0, !dbg !7815
  %_5.1 = extractvalue { ptr, i64 } %6, 1, !dbg !7815
  %7 = mul nsw i64 %_5.1, 1, !dbg !7816
  store i64 %7, ptr %3, align 8, !dbg !7816
  %size = load i64, ptr %3, align 8, !dbg !7816, !noundef !45
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !7816
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !7807, metadata !DIExpression()), !dbg !7817
; call core::ptr::unique::Unique<T>::as_ref
  %8 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbdd312af9f64d83cE"(ptr align 8 %ptr) #17, !dbg !7818
  %_9.0 = extractvalue { ptr, i64 } %8, 0, !dbg !7818
  %_9.1 = extractvalue { ptr, i64 } %8, 1, !dbg !7818
  %9 = mul nsw i64 %_9.1, 1, !dbg !7819
  store i64 1, ptr %2, align 8, !dbg !7819
  %align = load i64, ptr %2, align 8, !dbg !7819, !noundef !45
  store i64 %align, ptr %align.dbg.spill, align 8, !dbg !7819
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !7809, metadata !DIExpression()), !dbg !7820
; call core::alloc::layout::Layout::from_size_align_unchecked
  %10 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE(i64 %size, i64 %align) #17, !dbg !7821
  %layout.0 = extractvalue { i64, i64 } %10, 0, !dbg !7821
  %layout.1 = extractvalue { i64, i64 } %10, 1, !dbg !7821
  %11 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0, !dbg !7821
  store i64 %layout.0, ptr %11, align 8, !dbg !7821
  %12 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1, !dbg !7821
  store i64 %layout.1, ptr %12, align 8, !dbg !7821
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !7811, metadata !DIExpression()), !dbg !7822
  %13 = getelementptr inbounds { ptr, i64 }, ptr %ptr, i32 0, i32 0, !dbg !7823
  %14 = load ptr, ptr %13, align 8, !dbg !7823, !nonnull !45, !noundef !45
  %15 = getelementptr inbounds { ptr, i64 }, ptr %ptr, i32 0, i32 1, !dbg !7823
  %16 = load i64, ptr %15, align 8, !dbg !7823, !noundef !45
; call core::ptr::unique::Unique<T>::cast
  %_16 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hac21323e41eff0e2E"(ptr %14, i64 %16) #17, !dbg !7823
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %_15 = call ptr @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17ha4a5f23a1739fb8bE"(ptr %_16) #17, !dbg !7824
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0c95d486c0bac77cE"(ptr align 1 %alloc, ptr %_15, i64 %layout.0, i64 %layout.1) #17, !dbg !7825
  ret void, !dbg !7826
}

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noredzone noreturn nounwind
define void @_ZN5alloc5alloc18handle_alloc_error17h3c6d18769aaa0402E(i64 %layout.0, i64 %layout.1) unnamed_addr #6 !dbg !7827 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !7831, metadata !DIExpression()), !dbg !7832
  %2 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !7833
  store i64 %layout.0, ptr %2, align 8, !dbg !7833
  %3 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !7833
  store i64 %layout.1, ptr %3, align 8, !dbg !7833
  %4 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 0, !dbg !7834
  %5 = load i64, ptr %4, align 8, !dbg !7834, !noundef !45
  %6 = getelementptr inbounds { i64, i64 }, ptr %_3, i32 0, i32 1, !dbg !7834
  %7 = load i64, ptr %6, align 8, !dbg !7834, !range !1362, !noundef !45
; call alloc::alloc::handle_alloc_error::rt_error
  call void @_ZN5alloc5alloc18handle_alloc_error8rt_error17ha40d3dfb08fb30d9E(i64 %5, i64 %7) #18, !dbg !7834
  unreachable, !dbg !7834
}

; alloc::alloc::handle_alloc_error::ct_error
; Function Attrs: noredzone noreturn nounwind
define void @_ZN5alloc5alloc18handle_alloc_error8ct_error17h7aa52e49dea33779E(i64 %_1.0, i64 %_1.1) unnamed_addr #5 !dbg !7835 {
start:
  %_1.dbg.spill = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %_1.dbg.spill, i32 0, i32 0
  store i64 %_1.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %_1.dbg.spill, i32 0, i32 1
  store i64 %_1.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !7838, metadata !DIExpression()), !dbg !7839
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_3, ptr align 8 @alloc_dfa5f7cf5e3f2df862c3d4059657cfe8, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !7840
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_3, ptr align 8 @alloc_6afbb5a3d969e7c44f72297774c796a6) #18, !dbg !7840
  unreachable, !dbg !7840
}

; alloc::alloc::handle_alloc_error::rt_error
; Function Attrs: noredzone noreturn nounwind
define void @_ZN5alloc5alloc18handle_alloc_error8rt_error17ha40d3dfb08fb30d9E(i64 %0, i64 %1) unnamed_addr #5 !dbg !7841 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 0
  store i64 %0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %layout, i32 0, i32 1
  store i64 %1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %layout, metadata !7843, metadata !DIExpression()), !dbg !7844
; call core::alloc::layout::Layout::size
  %_3 = call i64 @_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E(ptr align 8 %layout) #17, !dbg !7845
; call core::alloc::layout::Layout::align
  %_5 = call i64 @_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E(ptr align 8 %layout) #17, !dbg !7846
  call void @__rust_alloc_error_handler(i64 %_3, i64 %_5) #18, !dbg !7847
  unreachable, !dbg !7847
}

; Function Attrs: noredzone noreturn nounwind
define void @__rdl_oom(i64 %0, i64 %_align) unnamed_addr #5 !dbg !7848 {
start:
  %_align.dbg.spill = alloca i64, align 8
  %_18 = alloca [1 x { ptr, ptr }], align 8
  %_14 = alloca %"core::fmt::Arguments<'_>", align 8
  %_10 = alloca [1 x { ptr, ptr }], align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  %size = alloca i64, align 8
  store i64 %0, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !7853, metadata !DIExpression()), !dbg !7855
  store i64 %_align, ptr %_align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_align.dbg.spill, metadata !7854, metadata !DIExpression()), !dbg !7856
  %_3 = load i8, ptr @__rust_alloc_error_handler_should_panic, align 1, !dbg !7857, !noundef !45
  %1 = icmp eq i8 %_3, 0, !dbg !7858
  br i1 %1, label %bb4, label %bb1, !dbg !7858

bb4:                                              ; preds = %start
; call core::fmt::ArgumentV1::new_display
  %2 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %size) #17, !dbg !7859
  %_19.0 = extractvalue { ptr, ptr } %2, 0, !dbg !7859
  %_19.1 = extractvalue { ptr, ptr } %2, 1, !dbg !7859
  %3 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_18, i64 0, i64 0, !dbg !7859
  %4 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 0, !dbg !7859
  store ptr %_19.0, ptr %4, align 8, !dbg !7859
  %5 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 1, !dbg !7859
  store ptr %_19.1, ptr %5, align 8, !dbg !7859
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_14, ptr align 8 @alloc_854e778decf79add00bb0a9150bedfd6, i64 2, ptr align 8 %_18, i64 1) #17, !dbg !7859
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17hca29746e69cbccadE(ptr %_14, ptr align 8 @alloc_62a007f8b0a57ed8a5806817f7ceb665) #18, !dbg !7860
  unreachable, !dbg !7860

bb1:                                              ; preds = %start
; call core::fmt::ArgumentV1::new_display
  %6 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %size) #17, !dbg !7861
  %_11.0 = extractvalue { ptr, ptr } %6, 0, !dbg !7861
  %_11.1 = extractvalue { ptr, ptr } %6, 1, !dbg !7861
  %7 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_10, i64 0, i64 0, !dbg !7861
  %8 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 0, !dbg !7861
  store ptr %_11.0, ptr %8, align 8, !dbg !7861
  %9 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 1, !dbg !7861
  store ptr %_11.1, ptr %9, align 8, !dbg !7861
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_6, ptr align 8 @alloc_854e778decf79add00bb0a9150bedfd6, i64 2, ptr align 8 %_10, i64 1) #17, !dbg !7861
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_6, ptr align 8 @alloc_cbe954214f19b8f269230475688cf3e8) #18, !dbg !7861
  unreachable, !dbg !7861
}

; alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<T>],A>::assume_init
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17h2627310e69e6a6beE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !7862 {
start:
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !7868, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !7871, metadata !DIExpression()), !dbg !7873
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h77529361676bfd03E"(ptr align 1 %self.0, i64 %self.1) #17, !dbg !7874
  %_4.0 = extractvalue { ptr, i64 } %2, 0, !dbg !7874
  %_4.1 = extractvalue { ptr, i64 } %2, 1, !dbg !7874
  %3 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0, !dbg !7875
  store ptr %_4.0, ptr %3, align 8, !dbg !7875
  %4 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1, !dbg !7875
  store i64 %_4.1, ptr %4, align 8, !dbg !7875
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !7869, metadata !DIExpression()), !dbg !7876
; call alloc::boxed::Box<T,A>::from_raw_in
  %5 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h3d9b7433846aff57E"(ptr %_4.0, i64 %_4.1) #17, !dbg !7877
  %6 = extractvalue { ptr, i64 } %5, 0, !dbg !7877
  %7 = extractvalue { ptr, i64 } %5, 1, !dbg !7877
  %8 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !7878
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !7878
  ret { ptr, i64 } %9, !dbg !7878
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h72705765b0082205E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !7879 {
start:
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0
  store ptr %raw.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1
  store i64 %raw.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !7884, metadata !DIExpression()), !dbg !7885
; call alloc::boxed::Box<T,A>::from_raw_in
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h3d9b7433846aff57E"(ptr %raw.0, i64 %raw.1) #17, !dbg !7886
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !7886
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !7886
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !7887
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !7887
  ret { ptr, i64 } %6, !dbg !7887
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h74c1addf447a4215E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !7888 {
start:
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0
  store ptr %raw.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1
  store i64 %raw.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !7896, metadata !DIExpression()), !dbg !7897
; call alloc::boxed::Box<T,A>::from_raw_in
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hdeed2e33af0bc7d7E"(ptr %raw.0, i64 %raw.1) #17, !dbg !7898
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !7898
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !7898
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !7899
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !7899
  ret { ptr, i64 } %6, !dbg !7899
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hbf4facd7117989c6E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !7900 {
start:
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0
  store ptr %raw.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1
  store i64 %raw.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !7908, metadata !DIExpression()), !dbg !7909
; call alloc::boxed::Box<T,A>::from_raw_in
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hd33534e910dbd945E"(ptr %raw.0, i64 %raw.1) #17, !dbg !7910
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !7910
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !7910
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !7911
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !7911
  ret { ptr, i64 } %6, !dbg !7911
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h3d9b7433846aff57E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !7912 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0
  store ptr %raw.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1
  store i64 %raw.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !7918, metadata !DIExpression()), !dbg !7920
; call core::ptr::unique::Unique<T>::new_unchecked
  %3 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17haed075faf7848f85E"(ptr %raw.0, i64 %raw.1) #17, !dbg !7921
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !7921
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !7921
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7922
  store ptr %_3.0, ptr %4, align 8, !dbg !7922
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7922
  store i64 %_3.1, ptr %5, align 8, !dbg !7922
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7923
  %7 = load ptr, ptr %6, align 8, !dbg !7923, !nonnull !45, !align !643, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7923
  %9 = load i64, ptr %8, align 8, !dbg !7923, !noundef !45
  %10 = insertvalue { ptr, i64 } undef, ptr %7, 0, !dbg !7923
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !7923
  ret { ptr, i64 } %11, !dbg !7923
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17ha6515cd7e425a1d2E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !7924 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0
  store ptr %raw.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1
  store i64 %raw.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !7928, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !7929, metadata !DIExpression()), !dbg !7932
; call core::ptr::unique::Unique<T>::new_unchecked
  %3 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h927607014d416d51E"(ptr %raw.0, i64 %raw.1) #17, !dbg !7933
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !7933
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !7933
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7934
  store ptr %_3.0, ptr %4, align 8, !dbg !7934
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7934
  store i64 %_3.1, ptr %5, align 8, !dbg !7934
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7935
  %7 = load ptr, ptr %6, align 8, !dbg !7935, !nonnull !45, !align !643, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7935
  %9 = load i64, ptr %8, align 8, !dbg !7935, !noundef !45
  %10 = insertvalue { ptr, i64 } undef, ptr %7, 0, !dbg !7935
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !7935
  ret { ptr, i64 } %11, !dbg !7935
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hd33534e910dbd945E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !7936 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0
  store ptr %raw.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1
  store i64 %raw.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !7940, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !7941, metadata !DIExpression()), !dbg !7944
; call core::ptr::unique::Unique<T>::new_unchecked
  %3 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0aafb19549a69619E"(ptr %raw.0, i64 %raw.1) #17, !dbg !7945
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !7945
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !7945
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7946
  store ptr %_3.0, ptr %4, align 8, !dbg !7946
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7946
  store i64 %_3.1, ptr %5, align 8, !dbg !7946
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7947
  %7 = load ptr, ptr %6, align 8, !dbg !7947, !nonnull !45, !align !643, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7947
  %9 = load i64, ptr %8, align 8, !dbg !7947, !noundef !45
  %10 = insertvalue { ptr, i64 } undef, ptr %7, 0, !dbg !7947
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !7947
  ret { ptr, i64 } %11, !dbg !7947
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hdeed2e33af0bc7d7E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !7948 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0
  store ptr %raw.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1
  store i64 %raw.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !7952, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !7953, metadata !DIExpression()), !dbg !7955
; call core::ptr::unique::Unique<T>::new_unchecked
  %3 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hce7e6adb62fafdfeE"(ptr %raw.0, i64 %raw.1) #17, !dbg !7956
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !7956
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !7956
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7957
  store ptr %_3.0, ptr %4, align 8, !dbg !7957
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7957
  store i64 %_3.1, ptr %5, align 8, !dbg !7957
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7958
  %7 = load ptr, ptr %6, align 8, !dbg !7958, !nonnull !45, !align !643, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7958
  %9 = load i64, ptr %8, align 8, !dbg !7958, !noundef !45
  %10 = insertvalue { ptr, i64 } undef, ptr %7, 0, !dbg !7958
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !7958
  ret { ptr, i64 } %11, !dbg !7958
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h330b78636c2bf5fbE"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !7959 {
start:
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !7963, metadata !DIExpression()), !dbg !7964
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hae1fd25b2641d527E"(ptr align 1 %b.0, i64 %b.1) #17, !dbg !7965
  %_2.0 = extractvalue { ptr, i64 } %2, 0, !dbg !7965
  %_2.1 = extractvalue { ptr, i64 } %2, 1, !dbg !7965
  %3 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !7966
  %4 = insertvalue { ptr, i64 } %3, i64 %_2.1, 1, !dbg !7966
  ret { ptr, i64 } %4, !dbg !7966
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h85192d6a2499a0d4E"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !7967 {
start:
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !7971, metadata !DIExpression()), !dbg !7972
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hb8722fbf626eded6E"(ptr align 1 %b.0, i64 %b.1) #17, !dbg !7973
  %_2.0 = extractvalue { ptr, i64 } %2, 0, !dbg !7973
  %_2.1 = extractvalue { ptr, i64 } %2, 1, !dbg !7973
  %3 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !7974
  %4 = insertvalue { ptr, i64 } %3, i64 %_2.1, 1, !dbg !7974
  ret { ptr, i64 } %4, !dbg !7974
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h45df7eb930a0de8dE"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !7975 {
start:
  %leaked.dbg.spill = alloca { ptr, i64 }, align 8
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !7983, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !7986, metadata !DIExpression()), !dbg !7988
; call alloc::boxed::Box<T,A>::into_unique
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h23c1039d5bb4d33eE"(ptr align 1 %b.0, i64 %b.1) #17, !dbg !7989
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !7989
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !7989
  %4 = getelementptr inbounds { ptr, i64 }, ptr %leaked.dbg.spill, i32 0, i32 0, !dbg !7990
  store ptr %_4.0, ptr %4, align 8, !dbg !7990
  %5 = getelementptr inbounds { ptr, i64 }, ptr %leaked.dbg.spill, i32 0, i32 1, !dbg !7990
  store i64 %_4.1, ptr %5, align 8, !dbg !7990
  call void @llvm.dbg.declare(metadata ptr %leaked.dbg.spill, metadata !7984, metadata !DIExpression()), !dbg !7991
; call core::ptr::unique::Unique<T>::as_ptr
  %6 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8f39c16857b61dc9E"(ptr %_4.0, i64 %_4.1) #17, !dbg !7992
  %_5.0 = extractvalue { ptr, i64 } %6, 0, !dbg !7992
  %_5.1 = extractvalue { ptr, i64 } %6, 1, !dbg !7992
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7993
  store ptr %_5.0, ptr %7, align 8, !dbg !7993
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7993
  store i64 %_5.1, ptr %8, align 8, !dbg !7993
  %9 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !7994
  %10 = load ptr, ptr %9, align 8, !dbg !7994, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !7994
  %12 = load i64, ptr %11, align 8, !dbg !7994, !noundef !45
  %13 = insertvalue { ptr, i64 } undef, ptr %10, 0, !dbg !7994
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !7994
  ret { ptr, i64 } %14, !dbg !7994
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h77529361676bfd03E"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !7995 {
start:
  %leaked.dbg.spill = alloca { ptr, i64 }, align 8
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !8003, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !8006, metadata !DIExpression()), !dbg !8008
; call alloc::boxed::Box<T,A>::into_unique
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hd022ea0a0f9bbac0E"(ptr align 1 %b.0, i64 %b.1) #17, !dbg !8009
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !8009
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !8009
  %4 = getelementptr inbounds { ptr, i64 }, ptr %leaked.dbg.spill, i32 0, i32 0, !dbg !8010
  store ptr %_4.0, ptr %4, align 8, !dbg !8010
  %5 = getelementptr inbounds { ptr, i64 }, ptr %leaked.dbg.spill, i32 0, i32 1, !dbg !8010
  store i64 %_4.1, ptr %5, align 8, !dbg !8010
  call void @llvm.dbg.declare(metadata ptr %leaked.dbg.spill, metadata !8004, metadata !DIExpression()), !dbg !8011
; call core::ptr::unique::Unique<T>::as_ptr
  %6 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf04fcd59fc5933c1E"(ptr %_4.0, i64 %_4.1) #17, !dbg !8012
  %_5.0 = extractvalue { ptr, i64 } %6, 0, !dbg !8012
  %_5.1 = extractvalue { ptr, i64 } %6, 1, !dbg !8012
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8013
  store ptr %_5.0, ptr %7, align 8, !dbg !8013
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8013
  store i64 %_5.1, ptr %8, align 8, !dbg !8013
  %9 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8014
  %10 = load ptr, ptr %9, align 8, !dbg !8014, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8014
  %12 = load i64, ptr %11, align 8, !dbg !8014, !noundef !45
  %13 = insertvalue { ptr, i64 } undef, ptr %10, 0, !dbg !8014
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !8014
  ret { ptr, i64 } %14, !dbg !8014
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hae1fd25b2641d527E"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !8015 {
start:
  %leaked.dbg.spill = alloca { ptr, i64 }, align 8
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !8023, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !8026, metadata !DIExpression()), !dbg !8028
; call alloc::boxed::Box<T,A>::into_unique
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hc72353817cce6111E"(ptr align 1 %b.0, i64 %b.1) #17, !dbg !8029
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !8029
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !8029
  %4 = getelementptr inbounds { ptr, i64 }, ptr %leaked.dbg.spill, i32 0, i32 0, !dbg !8030
  store ptr %_4.0, ptr %4, align 8, !dbg !8030
  %5 = getelementptr inbounds { ptr, i64 }, ptr %leaked.dbg.spill, i32 0, i32 1, !dbg !8030
  store i64 %_4.1, ptr %5, align 8, !dbg !8030
  call void @llvm.dbg.declare(metadata ptr %leaked.dbg.spill, metadata !8024, metadata !DIExpression()), !dbg !8031
; call core::ptr::unique::Unique<T>::as_ptr
  %6 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h97ba1af7a992b060E"(ptr %_4.0, i64 %_4.1) #17, !dbg !8032
  %_5.0 = extractvalue { ptr, i64 } %6, 0, !dbg !8032
  %_5.1 = extractvalue { ptr, i64 } %6, 1, !dbg !8032
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8033
  store ptr %_5.0, ptr %7, align 8, !dbg !8033
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8033
  store i64 %_5.1, ptr %8, align 8, !dbg !8033
  %9 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8034
  %10 = load ptr, ptr %9, align 8, !dbg !8034, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8034
  %12 = load i64, ptr %11, align 8, !dbg !8034, !noundef !45
  %13 = insertvalue { ptr, i64 } undef, ptr %10, 0, !dbg !8034
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !8034
  ret { ptr, i64 } %14, !dbg !8034
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hb8722fbf626eded6E"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !8035 {
start:
  %leaked.dbg.spill = alloca { ptr, i64 }, align 8
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !8043, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !8046, metadata !DIExpression()), !dbg !8048
; call alloc::boxed::Box<T,A>::into_unique
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17he9cd28273d931223E"(ptr align 1 %b.0, i64 %b.1) #17, !dbg !8049
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !8049
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !8049
  %4 = getelementptr inbounds { ptr, i64 }, ptr %leaked.dbg.spill, i32 0, i32 0, !dbg !8050
  store ptr %_4.0, ptr %4, align 8, !dbg !8050
  %5 = getelementptr inbounds { ptr, i64 }, ptr %leaked.dbg.spill, i32 0, i32 1, !dbg !8050
  store i64 %_4.1, ptr %5, align 8, !dbg !8050
  call void @llvm.dbg.declare(metadata ptr %leaked.dbg.spill, metadata !8044, metadata !DIExpression()), !dbg !8051
; call core::ptr::unique::Unique<T>::as_ptr
  %6 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf6edf88a3181498E"(ptr %_4.0, i64 %_4.1) #17, !dbg !8052
  %_5.0 = extractvalue { ptr, i64 } %6, 0, !dbg !8052
  %_5.1 = extractvalue { ptr, i64 } %6, 1, !dbg !8052
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8053
  store ptr %_5.0, ptr %7, align 8, !dbg !8053
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8053
  store i64 %_5.1, ptr %8, align 8, !dbg !8053
  %9 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8054
  %10 = load ptr, ptr %9, align 8, !dbg !8054, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8054
  %12 = load i64, ptr %11, align 8, !dbg !8054, !noundef !45
  %13 = insertvalue { ptr, i64 } undef, ptr %10, 0, !dbg !8054
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !8054
  ret { ptr, i64 } %14, !dbg !8054
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h23c1039d5bb4d33eE"(ptr align 1 %0, i64 %1) unnamed_addr #1 !dbg !8055 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %2 = alloca { ptr, i64 }, align 8
  %b = alloca { ptr, i64 }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %b, metadata !8063, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !8064, metadata !DIExpression()), !dbg !8067
; call core::ptr::read
  call void @_ZN4core3ptr4read17h80f019b407802b95E(ptr %b) #17, !dbg !8068
  %5 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 0, !dbg !8069
  %_7.0 = load ptr, ptr %5, align 8, !dbg !8069, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 1, !dbg !8069
  %_7.1 = load i64, ptr %6, align 8, !dbg !8069, !noundef !45
; call alloc::boxed::Box<T,A>::leak
  %7 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hae50aca8c28c290eE"(ptr align 1 %_7.0, i64 %_7.1) #17, !dbg !8070
  %_6.0 = extractvalue { ptr, i64 } %7, 0, !dbg !8070
  %_6.1 = extractvalue { ptr, i64 } %7, 1, !dbg !8070
; call <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %8 = call { ptr, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hdfe988f1a1c2e898E"(ptr align 1 %_6.0, i64 %_6.1) #17, !dbg !8071
  %_5.0 = extractvalue { ptr, i64 } %8, 0, !dbg !8071
  %_5.1 = extractvalue { ptr, i64 } %8, 1, !dbg !8071
  %9 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8072
  store ptr %_5.0, ptr %9, align 8, !dbg !8072
  %10 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8072
  store i64 %_5.1, ptr %10, align 8, !dbg !8072
  %11 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8073
  %12 = load ptr, ptr %11, align 8, !dbg !8073, !nonnull !45, !noundef !45
  %13 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8073
  %14 = load i64, ptr %13, align 8, !dbg !8073, !noundef !45
  %15 = insertvalue { ptr, i64 } undef, ptr %12, 0, !dbg !8073
  %16 = insertvalue { ptr, i64 } %15, i64 %14, 1, !dbg !8073
  ret { ptr, i64 } %16, !dbg !8073
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hc72353817cce6111E"(ptr align 1 %0, i64 %1) unnamed_addr #1 !dbg !8074 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %2 = alloca { ptr, i64 }, align 8
  %b = alloca { ptr, i64 }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %b, metadata !8082, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !8083, metadata !DIExpression()), !dbg !8086
; call core::ptr::read
  call void @_ZN4core3ptr4read17h80f019b407802b95E(ptr %b) #17, !dbg !8087
  %5 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 0, !dbg !8088
  %_7.0 = load ptr, ptr %5, align 8, !dbg !8088, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 1, !dbg !8088
  %_7.1 = load i64, ptr %6, align 8, !dbg !8088, !noundef !45
; call alloc::boxed::Box<T,A>::leak
  %7 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h5f7bd4cc70ce9c6eE"(ptr align 1 %_7.0, i64 %_7.1) #17, !dbg !8089
  %_6.0 = extractvalue { ptr, i64 } %7, 0, !dbg !8089
  %_6.1 = extractvalue { ptr, i64 } %7, 1, !dbg !8089
; call <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %8 = call { ptr, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h00d17420f9382b19E"(ptr align 1 %_6.0, i64 %_6.1) #17, !dbg !8090
  %_5.0 = extractvalue { ptr, i64 } %8, 0, !dbg !8090
  %_5.1 = extractvalue { ptr, i64 } %8, 1, !dbg !8090
  %9 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8091
  store ptr %_5.0, ptr %9, align 8, !dbg !8091
  %10 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8091
  store i64 %_5.1, ptr %10, align 8, !dbg !8091
  %11 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8092
  %12 = load ptr, ptr %11, align 8, !dbg !8092, !nonnull !45, !noundef !45
  %13 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8092
  %14 = load i64, ptr %13, align 8, !dbg !8092, !noundef !45
  %15 = insertvalue { ptr, i64 } undef, ptr %12, 0, !dbg !8092
  %16 = insertvalue { ptr, i64 } %15, i64 %14, 1, !dbg !8092
  ret { ptr, i64 } %16, !dbg !8092
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hd022ea0a0f9bbac0E"(ptr align 1 %0, i64 %1) unnamed_addr #1 !dbg !8093 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %2 = alloca { ptr, i64 }, align 8
  %b = alloca { ptr, i64 }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %b, metadata !8101, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !8102, metadata !DIExpression()), !dbg !8105
; call core::ptr::read
  call void @_ZN4core3ptr4read17h80f019b407802b95E(ptr %b) #17, !dbg !8106
  %5 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 0, !dbg !8107
  %_7.0 = load ptr, ptr %5, align 8, !dbg !8107, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 1, !dbg !8107
  %_7.1 = load i64, ptr %6, align 8, !dbg !8107, !noundef !45
; call alloc::boxed::Box<T,A>::leak
  %7 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17ha5ffc87c436a263fE"(ptr align 1 %_7.0, i64 %_7.1) #17, !dbg !8108
  %_6.0 = extractvalue { ptr, i64 } %7, 0, !dbg !8108
  %_6.1 = extractvalue { ptr, i64 } %7, 1, !dbg !8108
; call <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %8 = call { ptr, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hd35d9bf1649aa795E"(ptr align 1 %_6.0, i64 %_6.1) #17, !dbg !8109
  %_5.0 = extractvalue { ptr, i64 } %8, 0, !dbg !8109
  %_5.1 = extractvalue { ptr, i64 } %8, 1, !dbg !8109
  %9 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8110
  store ptr %_5.0, ptr %9, align 8, !dbg !8110
  %10 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8110
  store i64 %_5.1, ptr %10, align 8, !dbg !8110
  %11 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8111
  %12 = load ptr, ptr %11, align 8, !dbg !8111, !nonnull !45, !noundef !45
  %13 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8111
  %14 = load i64, ptr %13, align 8, !dbg !8111, !noundef !45
  %15 = insertvalue { ptr, i64 } undef, ptr %12, 0, !dbg !8111
  %16 = insertvalue { ptr, i64 } %15, i64 %14, 1, !dbg !8111
  ret { ptr, i64 } %16, !dbg !8111
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17he9cd28273d931223E"(ptr align 1 %0, i64 %1) unnamed_addr #1 !dbg !8112 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %2 = alloca { ptr, i64 }, align 8
  %b = alloca { ptr, i64 }, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %b, metadata !8120, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !8121, metadata !DIExpression()), !dbg !8124
; call core::ptr::read
  call void @_ZN4core3ptr4read17h80f019b407802b95E(ptr %b) #17, !dbg !8125
  %5 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 0, !dbg !8126
  %_7.0 = load ptr, ptr %5, align 8, !dbg !8126, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %b, i32 0, i32 1, !dbg !8126
  %_7.1 = load i64, ptr %6, align 8, !dbg !8126, !noundef !45
; call alloc::boxed::Box<T,A>::leak
  %7 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb65efef6d9b82370E"(ptr align 1 %_7.0, i64 %_7.1) #17, !dbg !8127
  %_6.0 = extractvalue { ptr, i64 } %7, 0, !dbg !8127
  %_6.1 = extractvalue { ptr, i64 } %7, 1, !dbg !8127
; call <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %8 = call { ptr, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hcf377dff5374381eE"(ptr align 1 %_6.0, i64 %_6.1) #17, !dbg !8128
  %_5.0 = extractvalue { ptr, i64 } %8, 0, !dbg !8128
  %_5.1 = extractvalue { ptr, i64 } %8, 1, !dbg !8128
  %9 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8129
  store ptr %_5.0, ptr %9, align 8, !dbg !8129
  %10 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8129
  store i64 %_5.1, ptr %10, align 8, !dbg !8129
  %11 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8130
  %12 = load ptr, ptr %11, align 8, !dbg !8130, !nonnull !45, !noundef !45
  %13 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8130
  %14 = load i64, ptr %13, align 8, !dbg !8130, !noundef !45
  %15 = insertvalue { ptr, i64 } undef, ptr %12, 0, !dbg !8130
  %16 = insertvalue { ptr, i64 } %15, i64 %14, 1, !dbg !8130
  ret { ptr, i64 } %16, !dbg !8130
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h5f7bd4cc70ce9c6eE"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !8131 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %value.dbg.spill.i = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %_6 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !8135, metadata !DIExpression()), !dbg !8136
  store ptr %b.0, ptr %value.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %value.dbg.spill.i, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill.i, metadata !8137, metadata !DIExpression()), !dbg !8142
  store ptr %b.0, ptr %0, align 8, !dbg !8144
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8144
  store i64 %b.1, ptr %4, align 8, !dbg !8144
  %5 = load ptr, ptr %0, align 8, !dbg !8145, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8145
  %7 = load i64, ptr %6, align 8, !dbg !8145, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !8145
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !8145
  store { ptr, i64 } %9, ptr %_6, align 8, !dbg !8146
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !8147, metadata !DIExpression()), !dbg !8154
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_6, i32 0, i32 0, !dbg !8146
  %_3.0 = load ptr, ptr %10, align 8, !dbg !8146, !nonnull !45, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !8146
  %_3.1 = load i64, ptr %11, align 8, !dbg !8146, !noundef !45
; call core::ptr::unique::Unique<T>::as_ptr
  %12 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h97ba1af7a992b060E"(ptr %_3.0, i64 %_3.1) #17, !dbg !8146
  %_2.0 = extractvalue { ptr, i64 } %12, 0, !dbg !8146
  %_2.1 = extractvalue { ptr, i64 } %12, 1, !dbg !8146
  %13 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !8156
  %14 = insertvalue { ptr, i64 } %13, i64 %_2.1, 1, !dbg !8156
  ret { ptr, i64 } %14, !dbg !8156
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17ha5ffc87c436a263fE"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !8157 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %value.dbg.spill.i = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %_6 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !8161, metadata !DIExpression()), !dbg !8162
  store ptr %b.0, ptr %value.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %value.dbg.spill.i, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill.i, metadata !8163, metadata !DIExpression()), !dbg !8173
  store ptr %b.0, ptr %0, align 8, !dbg !8175
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8175
  store i64 %b.1, ptr %4, align 8, !dbg !8175
  %5 = load ptr, ptr %0, align 8, !dbg !8176, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8176
  %7 = load i64, ptr %6, align 8, !dbg !8176, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !8176
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !8176
  store { ptr, i64 } %9, ptr %_6, align 8, !dbg !8177
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !8178, metadata !DIExpression()), !dbg !8185
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_6, i32 0, i32 0, !dbg !8177
  %_3.0 = load ptr, ptr %10, align 8, !dbg !8177, !nonnull !45, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !8177
  %_3.1 = load i64, ptr %11, align 8, !dbg !8177, !noundef !45
; call core::ptr::unique::Unique<T>::as_ptr
  %12 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf04fcd59fc5933c1E"(ptr %_3.0, i64 %_3.1) #17, !dbg !8177
  %_2.0 = extractvalue { ptr, i64 } %12, 0, !dbg !8177
  %_2.1 = extractvalue { ptr, i64 } %12, 1, !dbg !8177
  %13 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !8187
  %14 = insertvalue { ptr, i64 } %13, i64 %_2.1, 1, !dbg !8187
  ret { ptr, i64 } %14, !dbg !8187
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hae50aca8c28c290eE"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !8188 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %value.dbg.spill.i = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %_6 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !8192, metadata !DIExpression()), !dbg !8193
  store ptr %b.0, ptr %value.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %value.dbg.spill.i, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill.i, metadata !8194, metadata !DIExpression()), !dbg !8204
  store ptr %b.0, ptr %0, align 8, !dbg !8206
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8206
  store i64 %b.1, ptr %4, align 8, !dbg !8206
  %5 = load ptr, ptr %0, align 8, !dbg !8207, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8207
  %7 = load i64, ptr %6, align 8, !dbg !8207, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !8207
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !8207
  store { ptr, i64 } %9, ptr %_6, align 8, !dbg !8208
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !8209, metadata !DIExpression()), !dbg !8216
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_6, i32 0, i32 0, !dbg !8208
  %_3.0 = load ptr, ptr %10, align 8, !dbg !8208, !nonnull !45, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !8208
  %_3.1 = load i64, ptr %11, align 8, !dbg !8208, !noundef !45
; call core::ptr::unique::Unique<T>::as_ptr
  %12 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8f39c16857b61dc9E"(ptr %_3.0, i64 %_3.1) #17, !dbg !8208
  %_2.0 = extractvalue { ptr, i64 } %12, 0, !dbg !8208
  %_2.1 = extractvalue { ptr, i64 } %12, 1, !dbg !8208
  %13 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !8218
  %14 = insertvalue { ptr, i64 } %13, i64 %_2.1, 1, !dbg !8218
  ret { ptr, i64 } %14, !dbg !8218
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb65efef6d9b82370E"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !8219 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %value.dbg.spill.i = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %_6 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !8223, metadata !DIExpression()), !dbg !8224
  store ptr %b.0, ptr %value.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %value.dbg.spill.i, i32 0, i32 1
  store i64 %b.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill.i, metadata !8225, metadata !DIExpression()), !dbg !8235
  store ptr %b.0, ptr %0, align 8, !dbg !8237
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8237
  store i64 %b.1, ptr %4, align 8, !dbg !8237
  %5 = load ptr, ptr %0, align 8, !dbg !8238, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8238
  %7 = load i64, ptr %6, align 8, !dbg !8238, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !8238
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !8238
  store { ptr, i64 } %9, ptr %_6, align 8, !dbg !8239
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !8240, metadata !DIExpression()), !dbg !8247
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_6, i32 0, i32 0, !dbg !8239
  %_3.0 = load ptr, ptr %10, align 8, !dbg !8239, !nonnull !45, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %_6, i32 0, i32 1, !dbg !8239
  %_3.1 = load i64, ptr %11, align 8, !dbg !8239, !noundef !45
; call core::ptr::unique::Unique<T>::as_ptr
  %12 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf6edf88a3181498E"(ptr %_3.0, i64 %_3.1) #17, !dbg !8239
  %_2.0 = extractvalue { ptr, i64 } %12, 0, !dbg !8239
  %_2.1 = extractvalue { ptr, i64 } %12, 1, !dbg !8239
  %13 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !8249
  %14 = insertvalue { ptr, i64 } %13, i64 %_2.1, 1, !dbg !8249
  ret { ptr, i64 } %14, !dbg !8249
}

; <alloc::boxed::Box<[T]> as core::default::Default>::default
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17haf43f83bad54c92aE"() unnamed_addr #1 !dbg !8250 {
start:
  %ptr.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
; call core::ptr::unique::Unique<T>::dangling
  %_2 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h43909fabac992d1aE"() #17, !dbg !8257
  %1 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 0, !dbg !8257
  store ptr %_2, ptr %1, align 8, !dbg !8257
  %2 = getelementptr inbounds { ptr, i64 }, ptr %ptr.dbg.spill, i32 0, i32 1, !dbg !8257
  store i64 0, ptr %2, align 8, !dbg !8257
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !8255, metadata !DIExpression()), !dbg !8258
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8259
  store ptr %_2, ptr %3, align 8, !dbg !8259
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8259
  store i64 0, ptr %4, align 8, !dbg !8259
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8260
  %6 = load ptr, ptr %5, align 8, !dbg !8260, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8260
  %8 = load i64, ptr %7, align 8, !dbg !8260, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !8260
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !8260
  ret { ptr, i64 } %10, !dbg !8260
}

; <alloc::boxed::Box<str> as core::clone::Clone>::clone
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN67_$LT$alloc..boxed..Box$LT$str$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h1660e7eef4688308E"(ptr align 8 %self) unnamed_addr #0 !dbg !8261 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %buf.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8266, metadata !DIExpression()), !dbg !8269
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0, !dbg !8270
  %_7.0 = load ptr, ptr %1, align 8, !dbg !8270, !nonnull !45, !align !643, !noundef !45
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1, !dbg !8270
  %_7.1 = load i64, ptr %2, align 8, !dbg !8270, !noundef !45
  store ptr %_7.0, ptr %self.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %_7.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !8271
  store ptr %_7.0, ptr %0, align 8, !dbg !8273
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8273
  store i64 %_7.1, ptr %4, align 8, !dbg !8273
  %5 = load ptr, ptr %0, align 8, !dbg !8273, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8273
  %7 = load i64, ptr %6, align 8, !dbg !8273, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !8274
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !8274
  %_4.0 = extractvalue { ptr, i64 } %9, 0, !dbg !8270
  %_4.1 = extractvalue { ptr, i64 } %9, 1, !dbg !8270
; call <T as core::convert::Into<U>>::into
  %10 = call { ptr, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h75eaf413a11e3e99E"(ptr align 1 %_4.0, i64 %_4.1) #17, !dbg !8270
  %buf.0 = extractvalue { ptr, i64 } %10, 0, !dbg !8270
  %buf.1 = extractvalue { ptr, i64 } %10, 1, !dbg !8270
  %11 = getelementptr inbounds { ptr, i64 }, ptr %buf.dbg.spill, i32 0, i32 0, !dbg !8270
  store ptr %buf.0, ptr %11, align 8, !dbg !8270
  %12 = getelementptr inbounds { ptr, i64 }, ptr %buf.dbg.spill, i32 0, i32 1, !dbg !8270
  store i64 %buf.1, ptr %12, align 8, !dbg !8270
  call void @llvm.dbg.declare(metadata ptr %buf.dbg.spill, metadata !8267, metadata !DIExpression()), !dbg !8275
; call alloc::str::from_boxed_utf8_unchecked
  %13 = call { ptr, i64 } @_ZN5alloc3str25from_boxed_utf8_unchecked17h968dd5804f8c5001E(ptr align 1 %buf.0, i64 %buf.1) #17, !dbg !8276
  %14 = extractvalue { ptr, i64 } %13, 0, !dbg !8276
  %15 = extractvalue { ptr, i64 } %13, 1, !dbg !8276
  %16 = insertvalue { ptr, i64 } undef, ptr %14, 0, !dbg !8277
  %17 = insertvalue { ptr, i64 } %16, i64 %15, 1, !dbg !8277
  ret { ptr, i64 } %17, !dbg !8277
}

; <alloc::boxed::Box<[T]> as core::convert::From<&[T]>>::from
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN99_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17hd50dd409d0b139b9E"(ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !8278 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %len.dbg.spill = alloca i64, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %buf = alloca { i64, ptr }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0
  store ptr %slice.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !8281, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.declare(metadata ptr %buf, metadata !8284, metadata !DIExpression()), !dbg !8287
  store i64 %slice.1, ptr %len.dbg.spill, align 8, !dbg !8288
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !8282, metadata !DIExpression()), !dbg !8289
; call alloc::raw_vec::RawVec<T>::with_capacity
  %2 = call { i64, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17hcc8bc95703f7facbE"(i64 %slice.1) #17, !dbg !8290
  store { i64, ptr } %2, ptr %buf, align 8, !dbg !8290
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !8291, metadata !DIExpression()), !dbg !8296
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_6 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h98d1ca09fe1851acE"(ptr align 8 %buf) #17, !dbg !8298
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr %slice.0, ptr %_6, i64 %slice.1) #17, !dbg !8299
  %4 = getelementptr inbounds { i64, ptr }, ptr %buf, i32 0, i32 0, !dbg !8300
  %_9.0 = load i64, ptr %4, align 8, !dbg !8300, !noundef !45
  %5 = getelementptr inbounds { i64, ptr }, ptr %buf, i32 0, i32 1, !dbg !8300
  %_9.1 = load ptr, ptr %5, align 8, !dbg !8300, !nonnull !45, !noundef !45
; call alloc::raw_vec::RawVec<T,A>::into_box
  %6 = call { ptr, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17h18156297655b9365E"(i64 %_9.0, ptr %_9.1, i64 %slice.1) #17, !dbg !8300
  %_8.0 = extractvalue { ptr, i64 } %6, 0, !dbg !8300
  %_8.1 = extractvalue { ptr, i64 } %6, 1, !dbg !8300
; call alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<T>],A>::assume_init
  %7 = call { ptr, i64 } @"_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17h2627310e69e6a6beE"(ptr align 1 %_8.0, i64 %_8.1) #17, !dbg !8300
  %8 = extractvalue { ptr, i64 } %7, 0, !dbg !8300
  %9 = extractvalue { ptr, i64 } %7, 1, !dbg !8300
  %10 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !8301
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !8301
  ret { ptr, i64 } %11, !dbg !8301
}

; <alloc::boxed::Box<[u8],A> as core::convert::From<alloc::boxed::Box<str,A>>>::from
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN121_$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$C$A$GT$$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$C$A$GT$$GT$$GT$4from17h40aa3eaff54c9056E"(ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !8302 {
start:
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !8307, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !8310, metadata !DIExpression()), !dbg !8312
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h45df7eb930a0de8dE"(ptr align 1 %s.0, i64 %s.1) #17, !dbg !8313
  %_4.0 = extractvalue { ptr, i64 } %2, 0, !dbg !8313
  %_4.1 = extractvalue { ptr, i64 } %2, 1, !dbg !8313
  %3 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0, !dbg !8314
  store ptr %_4.0, ptr %3, align 8, !dbg !8314
  %4 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1, !dbg !8314
  store i64 %_4.1, ptr %4, align 8, !dbg !8314
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !8308, metadata !DIExpression()), !dbg !8315
; call alloc::boxed::Box<T,A>::from_raw_in
  %5 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h3d9b7433846aff57E"(ptr %_4.0, i64 %_4.1) #17, !dbg !8316
  %6 = extractvalue { ptr, i64 } %5, 0, !dbg !8316
  %7 = extractvalue { ptr, i64 } %5, 1, !dbg !8316
  %8 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !8317
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !8317
  ret { ptr, i64 } %9, !dbg !8317
}

; <alloc::boxed::Box<[T]> as core::convert::From<[T; N]>>::from
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN106_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$u5b$T$u3b$$u20$N$u5d$$GT$$GT$4from17hab32856c14b32396E"(i8 %0) unnamed_addr #0 !dbg !8318 {
start:
  %1 = alloca i8, align 1
  %x.i = alloca [1 x i8], align 1
  %2 = alloca i8, align 1
  %array = alloca [1 x i8], align 1
  store i8 %0, ptr %2, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array, ptr align 1 %2, i64 1, i1 false)
  call void @llvm.dbg.declare(metadata ptr %array, metadata !8326, metadata !DIExpression()), !dbg !8327
  %3 = load i8, ptr %array, align 1, !dbg !8328
  store i8 %3, ptr %1, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %x.i, ptr align 1 %1, i64 1, i1 false)
  call void @llvm.dbg.declare(metadata ptr %x.i, metadata !8329, metadata !DIExpression()), !dbg !8338
; call alloc::alloc::exchange_malloc
  %_4.i = call ptr @_ZN5alloc5alloc15exchange_malloc17h14ff5e8c882553c0E(i64 1, i64 1) #17, !dbg !8340
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_4.i, ptr align 1 %x.i, i64 1, i1 false), !dbg !8341
  %4 = insertvalue { ptr, i64 } undef, ptr %_4.i, 0, !dbg !8342
  %5 = insertvalue { ptr, i64 } %4, i64 1, 1, !dbg !8342
  ret { ptr, i64 } %5, !dbg !8342
}

; <alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync> as core::convert::From<alloc::string::String>>::from
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, ptr } @"_ZN166_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$4from17ha3283e6d7e1db2a0E"(ptr %err) unnamed_addr #1 !dbg !8343 {
start:
  %_3 = alloca %"<boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync + 'static)> as core::convert::From<string::String>>::from::StringError", align 8
  call void @llvm.dbg.declare(metadata ptr %err, metadata !8353, metadata !DIExpression()), !dbg !8354
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %err, i64 24, i1 false), !dbg !8355
  call void @llvm.dbg.declare(metadata ptr %_3, metadata !8356, metadata !DIExpression()), !dbg !8362
; call alloc::alloc::exchange_malloc
  %_4.i = call ptr @_ZN5alloc5alloc15exchange_malloc17h14ff5e8c882553c0E(i64 24, i64 8) #17, !dbg !8364
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4.i, ptr align 8 %_3, i64 24, i1 false), !dbg !8365
  %0 = insertvalue { ptr, ptr } undef, ptr %_4.i, 0, !dbg !8366
  %1 = insertvalue { ptr, ptr } %0, ptr @vtable.9, 1, !dbg !8366
  ret { ptr, ptr } %1, !dbg !8366
}

; <<alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync> as core::convert::From<alloc::string::String>>::from::StringError as core::error::Error>::description
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN223_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..error..Error$GT$11description17ha04aa3aedf33712bE"(ptr align 8 %self) unnamed_addr #0 !dbg !8367 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8372, metadata !DIExpression()), !dbg !8373
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb13427143583ffc1E"(ptr align 8 %self) #17, !dbg !8374
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !8374
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !8374
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !8375
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !8375
  ret { ptr, i64 } %4, !dbg !8375
}

; <<alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync> as core::convert::From<alloc::string::String>>::from::StringError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN223_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h34dc5803b1268706E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !8376 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8381, metadata !DIExpression()), !dbg !8383
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !8382, metadata !DIExpression()), !dbg !8384
; call <alloc::string::String as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17heabcdd83e3a4c7ceE"(ptr align 8 %self, ptr align 8 %f) #17, !dbg !8385
  ret i1 %0, !dbg !8386
}

; <<alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync> as core::convert::From<alloc::string::String>>::from::StringError as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN221_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17he6b554d75f9bf311E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !8387 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8390, metadata !DIExpression()), !dbg !8392
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !8391, metadata !DIExpression()), !dbg !8393
; call <alloc::string::String as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17h4b91c28887671176E"(ptr align 8 %self, ptr align 8 %f) #17, !dbg !8394
  ret i1 %0, !dbg !8395
}

; <alloc::boxed::Box<dyn core::error::Error> as core::convert::From<alloc::string::String>>::from
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN120_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$4from17hd41ff04fe458fda8E"(ptr %str_err) unnamed_addr #0 !dbg !8396 {
start:
  %err2.dbg.spill = alloca { ptr, ptr }, align 8, !dbg !8410
  %err1.dbg.spill = alloca { ptr, ptr }, align 8, !dbg !8410
  call void @llvm.dbg.declare(metadata ptr %str_err, metadata !8405, metadata !DIExpression()), !dbg !8410
; call <alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync> as core::convert::From<alloc::string::String>>::from
  %0 = call { ptr, ptr } @"_ZN166_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$4from17ha3283e6d7e1db2a0E"(ptr %str_err) #17, !dbg !8411
  %err1.0 = extractvalue { ptr, ptr } %0, 0, !dbg !8411
  %err1.1 = extractvalue { ptr, ptr } %0, 1, !dbg !8411
  %1 = getelementptr inbounds { ptr, ptr }, ptr %err1.dbg.spill, i32 0, i32 0, !dbg !8411
  store ptr %err1.0, ptr %1, align 8, !dbg !8411
  %2 = getelementptr inbounds { ptr, ptr }, ptr %err1.dbg.spill, i32 0, i32 1, !dbg !8411
  store ptr %err1.1, ptr %2, align 8, !dbg !8411
  call void @llvm.dbg.declare(metadata ptr %err1.dbg.spill, metadata !8406, metadata !DIExpression()), !dbg !8412
  %3 = getelementptr inbounds { ptr, ptr }, ptr %err2.dbg.spill, i32 0, i32 0, !dbg !8413
  store ptr %err1.0, ptr %3, align 8, !dbg !8413
  %4 = getelementptr inbounds { ptr, ptr }, ptr %err2.dbg.spill, i32 0, i32 1, !dbg !8413
  store ptr %err1.1, ptr %4, align 8, !dbg !8413
  call void @llvm.dbg.declare(metadata ptr %err2.dbg.spill, metadata !8408, metadata !DIExpression()), !dbg !8414
  %5 = insertvalue { ptr, ptr } undef, ptr %err1.0, 0, !dbg !8415
  %6 = insertvalue { ptr, ptr } %5, ptr %err1.1, 1, !dbg !8415
  ret { ptr, ptr } %6, !dbg !8415
}

; <alloc::boxed::Box<dyn core::error::Error> as core::convert::From<&str>>::from
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN106_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h2c59eb3c33072a7dE"(ptr align 1 %err.0, i64 %err.1) unnamed_addr #0 !dbg !8416 {
start:
  %err.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca %"string::String", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %err.dbg.spill, i32 0, i32 0
  store ptr %err.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %err.dbg.spill, i32 0, i32 1
  store i64 %err.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %err.dbg.spill, metadata !8421, metadata !DIExpression()), !dbg !8422
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h7a304be07f46f987E"(ptr sret(%"string::String") %_2, ptr align 1 %err.0, i64 %err.1) #17, !dbg !8423
; call <alloc::boxed::Box<dyn core::error::Error> as core::convert::From<alloc::string::String>>::from
  %2 = call { ptr, ptr } @"_ZN120_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$4from17hd41ff04fe458fda8E"(ptr %_2) #17, !dbg !8424
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !8424
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !8424
  %5 = insertvalue { ptr, ptr } undef, ptr %3, 0, !dbg !8425
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1, !dbg !8425
  ret { ptr, ptr } %6, !dbg !8425
}

; <alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync> as core::convert::From<alloc::borrow::Cow<str>>>::from
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN174_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17hf5efcbefd2cdf166E"(ptr %err) unnamed_addr #0 !dbg !8426 {
start:
  %_2 = alloca %"string::String", align 8
  call void @llvm.dbg.declare(metadata ptr %err, metadata !8431, metadata !DIExpression()), !dbg !8432
; call <alloc::string::String as core::convert::From<alloc::borrow::Cow<str>>>::from
  call void @"_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h36c7163ed7b362dfE"(ptr sret(%"string::String") %_2, ptr %err) #17, !dbg !8433
; call <alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync> as core::convert::From<alloc::string::String>>::from
  %0 = call { ptr, ptr } @"_ZN166_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$4from17ha3283e6d7e1db2a0E"(ptr %_2) #17, !dbg !8434
  %1 = extractvalue { ptr, ptr } %0, 0, !dbg !8434
  %2 = extractvalue { ptr, ptr } %0, 1, !dbg !8434
  %3 = insertvalue { ptr, ptr } undef, ptr %1, 0, !dbg !8435
  %4 = insertvalue { ptr, ptr } %3, ptr %2, 1, !dbg !8435
  ret { ptr, ptr } %4, !dbg !8435
}

; <alloc::boxed::Box<dyn core::error::Error> as core::convert::From<alloc::borrow::Cow<str>>>::from
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN128_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17hcdbecd5ffc25fac5E"(ptr %err) unnamed_addr #0 !dbg !8436 {
start:
  %_2 = alloca %"string::String", align 8
  call void @llvm.dbg.declare(metadata ptr %err, metadata !8441, metadata !DIExpression()), !dbg !8442
; call <alloc::string::String as core::convert::From<alloc::borrow::Cow<str>>>::from
  call void @"_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h36c7163ed7b362dfE"(ptr sret(%"string::String") %_2, ptr %err) #17, !dbg !8443
; call <alloc::boxed::Box<dyn core::error::Error> as core::convert::From<alloc::string::String>>::from
  %0 = call { ptr, ptr } @"_ZN120_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$4from17hd41ff04fe458fda8E"(ptr %_2) #17, !dbg !8444
  %1 = extractvalue { ptr, ptr } %0, 0, !dbg !8444
  %2 = extractvalue { ptr, ptr } %0, 1, !dbg !8444
  %3 = insertvalue { ptr, ptr } undef, ptr %1, 0, !dbg !8445
  %4 = insertvalue { ptr, ptr } %3, ptr %2, 1, !dbg !8445
  ret { ptr, ptr } %4, !dbg !8445
}

; alloc::borrow::Cow<B>::to_mut
; Function Attrs: noredzone nounwind
define align 8 ptr @"_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h87096cc238b4bc83E"(ptr align 8 %self) unnamed_addr #0 !dbg !8446 {
start:
  %owned.dbg.spill2 = alloca ptr, align 8
  %borrowed.dbg.spill = alloca { ptr, i64 }, align 8
  %owned.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca %"string::String", align 8
  %_5 = alloca %"borrow::Cow<'_, str>", align 8
  %_2 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8452, metadata !DIExpression()), !dbg !8459
  %_3 = load i64, ptr %self, align 8, !dbg !8460, !range !1797, !noundef !45
  %0 = icmp eq i64 %_3, 0, !dbg !8461
  br i1 %0, label %bb3, label %bb1, !dbg !8461

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds %"borrow::Cow<'_, str>::Borrowed", ptr %self, i32 0, i32 1, !dbg !8462
  %2 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 0, !dbg !8462
  %borrowed.0 = load ptr, ptr %2, align 8, !dbg !8462, !nonnull !45, !align !643, !noundef !45
  %3 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !8462
  %borrowed.1 = load i64, ptr %3, align 8, !dbg !8462, !noundef !45
  %4 = getelementptr inbounds { ptr, i64 }, ptr %borrowed.dbg.spill, i32 0, i32 0, !dbg !8462
  store ptr %borrowed.0, ptr %4, align 8, !dbg !8462
  %5 = getelementptr inbounds { ptr, i64 }, ptr %borrowed.dbg.spill, i32 0, i32 1, !dbg !8462
  store i64 %borrowed.1, ptr %5, align 8, !dbg !8462
  call void @llvm.dbg.declare(metadata ptr %borrowed.dbg.spill, metadata !8453, metadata !DIExpression()), !dbg !8463
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hc87e400e78bb2238E"(ptr sret(%"string::String") %_6, ptr align 1 %borrowed.0, i64 %borrowed.1) #17, !dbg !8464
  %6 = getelementptr inbounds %"borrow::Cow<'_, str>::Owned", ptr %_5, i32 0, i32 1, !dbg !8465
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %_6, i64 24, i1 false), !dbg !8465
  store i64 1, ptr %_5, align 8, !dbg !8465
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h8dbac5b1553a9343E"(ptr %self) #17, !dbg !8466
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_5, i64 32, i1 false), !dbg !8466
  %_7 = load i64, ptr %self, align 8, !dbg !8467, !range !1797, !noundef !45
  %7 = icmp eq i64 %_7, 0, !dbg !8468
  br i1 %7, label %bb8, label %bb6, !dbg !8468

bb1:                                              ; preds = %start
  %owned = getelementptr inbounds %"borrow::Cow<'_, str>::Owned", ptr %self, i32 0, i32 1, !dbg !8469
  store ptr %owned, ptr %owned.dbg.spill, align 8, !dbg !8469
  call void @llvm.dbg.declare(metadata ptr %owned.dbg.spill, metadata !8457, metadata !DIExpression()), !dbg !8470
  store ptr %owned, ptr %_2, align 8, !dbg !8471
  br label %bb9, !dbg !8472

bb2:                                              ; No predecessors!
  unreachable, !dbg !8460

bb9:                                              ; preds = %bb6, %bb1
  %8 = load ptr, ptr %_2, align 8, !dbg !8461, !nonnull !45, !align !1159, !noundef !45
  ret ptr %8, !dbg !8473

bb8:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_3ef7a8cb2faf5c9e657d645555199e24, i64 40, ptr align 8 @alloc_0f593a343d974519341042e8e5b41f3d) #18, !dbg !8474
  unreachable, !dbg !8474

bb6:                                              ; preds = %bb3
  %owned1 = getelementptr inbounds %"borrow::Cow<'_, str>::Owned", ptr %self, i32 0, i32 1, !dbg !8475
  store ptr %owned1, ptr %owned.dbg.spill2, align 8, !dbg !8475
  call void @llvm.dbg.declare(metadata ptr %owned.dbg.spill2, metadata !8455, metadata !DIExpression()), !dbg !8476
  store ptr %owned1, ptr %_2, align 8, !dbg !8468
  br label %bb9, !dbg !8477

bb7:                                              ; No predecessors!
  unreachable, !dbg !8467
}

; alloc::borrow::Cow<B>::into_owned
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17h102310ff1190052aE"(ptr sret(%"string::String") %0, ptr %self) unnamed_addr #0 !dbg !8478 {
start:
  %borrowed.dbg.spill = alloca { ptr, i64 }, align 8
  %owned = alloca %"string::String", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !8482, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.declare(metadata ptr %owned, metadata !8485, metadata !DIExpression()), !dbg !8488
  %_2 = load i64, ptr %self, align 8, !dbg !8489, !range !1797, !noundef !45
  %1 = icmp eq i64 %_2, 0, !dbg !8490
  br i1 %1, label %bb3, label %bb1, !dbg !8490

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"borrow::Cow<'_, str>::Borrowed", ptr %self, i32 0, i32 1, !dbg !8491
  %3 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8491
  %borrowed.0 = load ptr, ptr %3, align 8, !dbg !8491, !nonnull !45, !align !643, !noundef !45
  %4 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8491
  %borrowed.1 = load i64, ptr %4, align 8, !dbg !8491, !noundef !45
  %5 = getelementptr inbounds { ptr, i64 }, ptr %borrowed.dbg.spill, i32 0, i32 0, !dbg !8491
  store ptr %borrowed.0, ptr %5, align 8, !dbg !8491
  %6 = getelementptr inbounds { ptr, i64 }, ptr %borrowed.dbg.spill, i32 0, i32 1, !dbg !8491
  store i64 %borrowed.1, ptr %6, align 8, !dbg !8491
  call void @llvm.dbg.declare(metadata ptr %borrowed.dbg.spill, metadata !8483, metadata !DIExpression()), !dbg !8492
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hc87e400e78bb2238E"(ptr sret(%"string::String") %0, ptr align 1 %borrowed.0, i64 %borrowed.1) #17, !dbg !8493
  br label %bb4, !dbg !8493

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds %"borrow::Cow<'_, str>::Owned", ptr %self, i32 0, i32 1, !dbg !8494
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %owned, ptr align 8 %7, i64 24, i1 false), !dbg !8494
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %owned, i64 24, i1 false), !dbg !8495
  br label %bb4, !dbg !8496

bb2:                                              ; No predecessors!
  unreachable, !dbg !8489

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !8497
}

; <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6782cf229586bef9E"(ptr align 8 %self) unnamed_addr #0 !dbg !8498 {
start:
  %borrowed.dbg.spill = alloca { ptr, i64 }, align 8
  %owned.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca { ptr, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8504, metadata !DIExpression()), !dbg !8510
  %_2 = load i64, ptr %self, align 8, !dbg !8511, !range !1797, !noundef !45
  %1 = icmp eq i64 %_2, 0, !dbg !8512
  br i1 %1, label %bb3, label %bb1, !dbg !8512

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"borrow::Cow<'_, str>::Borrowed", ptr %self, i32 0, i32 1, !dbg !8513
  %3 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 0, !dbg !8513
  %borrowed.0 = load ptr, ptr %3, align 8, !dbg !8513, !nonnull !45, !align !643, !noundef !45
  %4 = getelementptr inbounds { ptr, i64 }, ptr %2, i32 0, i32 1, !dbg !8513
  %borrowed.1 = load i64, ptr %4, align 8, !dbg !8513, !noundef !45
  %5 = getelementptr inbounds { ptr, i64 }, ptr %borrowed.dbg.spill, i32 0, i32 0, !dbg !8513
  store ptr %borrowed.0, ptr %5, align 8, !dbg !8513
  %6 = getelementptr inbounds { ptr, i64 }, ptr %borrowed.dbg.spill, i32 0, i32 1, !dbg !8513
  store i64 %borrowed.1, ptr %6, align 8, !dbg !8513
  call void @llvm.dbg.declare(metadata ptr %borrowed.dbg.spill, metadata !8505, metadata !DIExpression()), !dbg !8514
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8515
  store ptr %borrowed.0, ptr %7, align 8, !dbg !8515
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8515
  store i64 %borrowed.1, ptr %8, align 8, !dbg !8515
  br label %bb5, !dbg !8516

bb1:                                              ; preds = %start
  %owned = getelementptr inbounds %"borrow::Cow<'_, str>::Owned", ptr %self, i32 0, i32 1, !dbg !8517
  store ptr %owned, ptr %owned.dbg.spill, align 8, !dbg !8517
  call void @llvm.dbg.declare(metadata ptr %owned.dbg.spill, metadata !8507, metadata !DIExpression()), !dbg !8518
; call alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
  %9 = call { ptr, i64 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17h9031218db36dc1feE"(ptr align 8 %owned) #17, !dbg !8519
  %_5.0 = extractvalue { ptr, i64 } %9, 0, !dbg !8519
  %_5.1 = extractvalue { ptr, i64 } %9, 1, !dbg !8519
  %10 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8519
  store ptr %_5.0, ptr %10, align 8, !dbg !8519
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8519
  store i64 %_5.1, ptr %11, align 8, !dbg !8519
  br label %bb5, !dbg !8520

bb2:                                              ; No predecessors!
  unreachable, !dbg !8511

bb5:                                              ; preds = %bb3, %bb1
  %12 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8521
  %13 = load ptr, ptr %12, align 8, !dbg !8521, !nonnull !45, !align !643, !noundef !45
  %14 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8521
  %15 = load i64, ptr %14, align 8, !dbg !8521, !noundef !45
  %16 = insertvalue { ptr, i64 } undef, ptr %13, 0, !dbg !8521
  %17 = insertvalue { ptr, i64 } %16, i64 %15, 1, !dbg !8521
  ret { ptr, i64 } %17, !dbg !8521
}

; <alloc::borrow::Cow<str> as core::ops::arith::AddAssign<&str>>::add_assign
; Function Attrs: noredzone nounwind
define void @"_ZN92_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$LT$$RF$str$GT$$GT$10add_assign17h572f9ced3245ec4bE"(ptr align 8 %self, ptr align 1 %rhs.0, i64 %rhs.1) unnamed_addr #0 !dbg !8522 {
start:
  %lhs.dbg.spill = alloca { ptr, i64 }, align 8
  %rhs.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_20 = alloca %"string::String", align 8
  %_19 = alloca %"borrow::Cow<'_, str>", align 8
  %s = alloca %"string::String", align 8
  %_7 = alloca %"borrow::Cow<'_, str>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8527, metadata !DIExpression()), !dbg !8533
  %0 = getelementptr inbounds { ptr, i64 }, ptr %rhs.dbg.spill, i32 0, i32 0
  store ptr %rhs.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %rhs.dbg.spill, i32 0, i32 1
  store i64 %rhs.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !8528, metadata !DIExpression()), !dbg !8534
  call void @llvm.dbg.declare(metadata ptr %s, metadata !8531, metadata !DIExpression()), !dbg !8535
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %2 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6782cf229586bef9E"(ptr align 8 %self) #17, !dbg !8536
  %_5.0 = extractvalue { ptr, i64 } %2, 0, !dbg !8536
  %_5.1 = extractvalue { ptr, i64 } %2, 1, !dbg !8536
; call core::str::<impl str>::is_empty
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h098534c0490344a9E"(ptr align 1 %_5.0, i64 %_5.1) #17, !dbg !8536
  br i1 %_3, label %bb3, label %bb5, !dbg !8536

bb5:                                              ; preds = %start
; call core::str::<impl str>::is_empty
  %_9 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h098534c0490344a9E"(ptr align 1 %rhs.0, i64 %rhs.1) #17, !dbg !8537
  %_8 = xor i1 %_9, true, !dbg !8538
  br i1 %_8, label %bb7, label %bb17, !dbg !8538

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds %"borrow::Cow<'_, str>::Borrowed", ptr %_7, i32 0, i32 1, !dbg !8539
  %4 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 0, !dbg !8539
  store ptr %rhs.0, ptr %4, align 8, !dbg !8539
  %5 = getelementptr inbounds { ptr, i64 }, ptr %3, i32 0, i32 1, !dbg !8539
  store i64 %rhs.1, ptr %5, align 8, !dbg !8539
  store i64 0, ptr %_7, align 8, !dbg !8539
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h8dbac5b1553a9343E"(ptr %self) #17, !dbg !8540
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_7, i64 32, i1 false), !dbg !8540
  br label %bb17, !dbg !8541

bb17:                                             ; preds = %bb15, %bb5, %bb3
  ret void, !dbg !8542

bb7:                                              ; preds = %bb5
  %_10 = load i64, ptr %self, align 8, !dbg !8543, !range !1797, !noundef !45
  %6 = icmp eq i64 %_10, 0, !dbg !8543
  br i1 %6, label %bb8, label %bb15, !dbg !8543

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds %"borrow::Cow<'_, str>::Borrowed", ptr %self, i32 0, i32 1, !dbg !8544
  %8 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 0, !dbg !8544
  %lhs.0 = load ptr, ptr %8, align 8, !dbg !8544, !nonnull !45, !align !643, !noundef !45
  %9 = getelementptr inbounds { ptr, i64 }, ptr %7, i32 0, i32 1, !dbg !8544
  %lhs.1 = load i64, ptr %9, align 8, !dbg !8544, !noundef !45
  %10 = getelementptr inbounds { ptr, i64 }, ptr %lhs.dbg.spill, i32 0, i32 0, !dbg !8544
  store ptr %lhs.0, ptr %10, align 8, !dbg !8544
  %11 = getelementptr inbounds { ptr, i64 }, ptr %lhs.dbg.spill, i32 0, i32 1, !dbg !8544
  store i64 %lhs.1, ptr %11, align 8, !dbg !8544
  call void @llvm.dbg.declare(metadata ptr %lhs.dbg.spill, metadata !8529, metadata !DIExpression()), !dbg !8544
; call core::str::<impl str>::len
  %_14 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hd16e42a8ff3d48d3E"(ptr align 1 %lhs.0, i64 %lhs.1) #17, !dbg !8545
; call core::str::<impl str>::len
  %_15 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hd16e42a8ff3d48d3E"(ptr align 1 %rhs.0, i64 %rhs.1) #17, !dbg !8546
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_14, i64 %_15), !dbg !8545
  %_16.0 = extractvalue { i64, i1 } %12, 0, !dbg !8545
  %_16.1 = extractvalue { i64, i1 } %12, 1, !dbg !8545
  %13 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !8545
  br i1 %13, label %panic, label %bb11, !dbg !8545

bb15:                                             ; preds = %bb11, %bb7
; call alloc::borrow::Cow<B>::to_mut
  %_23 = call align 8 ptr @"_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h87096cc238b4bc83E"(ptr align 8 %self) #17, !dbg !8547
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %_23, ptr align 1 %rhs.0, i64 %rhs.1) #17, !dbg !8547
  br label %bb17, !dbg !8547

bb11:                                             ; preds = %bb8
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h7f86b8a278fea577E(ptr sret(%"string::String") %s, i64 %_16.0) #17, !dbg !8548
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %s, ptr align 1 %lhs.0, i64 %lhs.1) #17, !dbg !8549
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_20, ptr align 8 %s, i64 24, i1 false), !dbg !8550
  %14 = getelementptr inbounds %"borrow::Cow<'_, str>::Owned", ptr %_19, i32 0, i32 1, !dbg !8551
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %_20, i64 24, i1 false), !dbg !8551
  store i64 1, ptr %_19, align 8, !dbg !8551
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h8dbac5b1553a9343E"(ptr %self) #17, !dbg !8552
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_19, i64 32, i1 false), !dbg !8552
  br label %bb15, !dbg !8553

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_068e3c87972b8effe20f1830561f8e95) #18, !dbg !8545
  unreachable, !dbg !8545
}

; <alloc::borrow::Cow<str> as core::ops::arith::AddAssign>::add_assign
; Function Attrs: noredzone nounwind
define void @"_ZN77_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hbe1c9d56b100d876E"(ptr align 8 %self, ptr %rhs) unnamed_addr #0 !dbg !8554 {
start:
  %lhs.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_34 = alloca i8, align 1
  %_26 = alloca %"string::String", align 8
  %_25 = alloca %"borrow::Cow<'_, str>", align 8
  %s = alloca %"string::String", align 8
  %_7 = alloca %"borrow::Cow<'_, str>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8559, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.declare(metadata ptr %rhs, metadata !8560, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata ptr %s, metadata !8563, metadata !DIExpression()), !dbg !8567
  store i8 0, ptr %_34, align 1, !dbg !8568
  store i8 1, ptr %_34, align 1, !dbg !8568
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6782cf229586bef9E"(ptr align 8 %self) #17, !dbg !8568
  %_5.0 = extractvalue { ptr, i64 } %0, 0, !dbg !8568
  %_5.1 = extractvalue { ptr, i64 } %0, 1, !dbg !8568
; call core::str::<impl str>::is_empty
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h098534c0490344a9E"(ptr align 1 %_5.0, i64 %_5.1) #17, !dbg !8568
  br i1 %_3, label %bb3, label %bb5, !dbg !8568

bb5:                                              ; preds = %start
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6782cf229586bef9E"(ptr align 8 %rhs) #17, !dbg !8569
  %_11.0 = extractvalue { ptr, i64 } %1, 0, !dbg !8569
  %_11.1 = extractvalue { ptr, i64 } %1, 1, !dbg !8569
; call core::str::<impl str>::is_empty
  %_9 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h098534c0490344a9E"(ptr align 1 %_11.0, i64 %_11.1) #17, !dbg !8569
  %_8 = xor i1 %_9, true, !dbg !8570
  br i1 %_8, label %bb8, label %bb20, !dbg !8570

bb3:                                              ; preds = %start
  store i8 0, ptr %_34, align 1, !dbg !8571
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %rhs, i64 32, i1 false), !dbg !8571
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h8dbac5b1553a9343E"(ptr %self) #17, !dbg !8572
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_7, i64 32, i1 false), !dbg !8572
  br label %bb20, !dbg !8573

bb20:                                             ; preds = %bb17, %bb5, %bb3
  %2 = load i8, ptr %_34, align 1, !dbg !8574, !range !673, !noundef !45
  %3 = trunc i8 %2 to i1, !dbg !8574
  br i1 %3, label %bb22, label %bb21, !dbg !8574

bb8:                                              ; preds = %bb5
  %_13 = load i64, ptr %self, align 8, !dbg !8575, !range !1797, !noundef !45
  %4 = icmp eq i64 %_13, 0, !dbg !8575
  br i1 %4, label %bb9, label %bb17, !dbg !8575

bb9:                                              ; preds = %bb8
  %5 = getelementptr inbounds %"borrow::Cow<'_, str>::Borrowed", ptr %self, i32 0, i32 1, !dbg !8576
  %6 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 0, !dbg !8576
  %lhs.0 = load ptr, ptr %6, align 8, !dbg !8576, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %5, i32 0, i32 1, !dbg !8576
  %lhs.1 = load i64, ptr %7, align 8, !dbg !8576, !noundef !45
  %8 = getelementptr inbounds { ptr, i64 }, ptr %lhs.dbg.spill, i32 0, i32 0, !dbg !8576
  store ptr %lhs.0, ptr %8, align 8, !dbg !8576
  %9 = getelementptr inbounds { ptr, i64 }, ptr %lhs.dbg.spill, i32 0, i32 1, !dbg !8576
  store i64 %lhs.1, ptr %9, align 8, !dbg !8576
  call void @llvm.dbg.declare(metadata ptr %lhs.dbg.spill, metadata !8561, metadata !DIExpression()), !dbg !8576
; call core::str::<impl str>::len
  %_17 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hd16e42a8ff3d48d3E"(ptr align 1 %lhs.0, i64 %lhs.1) #17, !dbg !8577
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %10 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6782cf229586bef9E"(ptr align 8 %rhs) #17, !dbg !8578
  %_20.0 = extractvalue { ptr, i64 } %10, 0, !dbg !8578
  %_20.1 = extractvalue { ptr, i64 } %10, 1, !dbg !8578
; call core::str::<impl str>::len
  %_18 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hd16e42a8ff3d48d3E"(ptr align 1 %_20.0, i64 %_20.1) #17, !dbg !8578
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_17, i64 %_18), !dbg !8577
  %_22.0 = extractvalue { i64, i1 } %11, 0, !dbg !8577
  %_22.1 = extractvalue { i64, i1 } %11, 1, !dbg !8577
  %12 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !8577
  br i1 %12, label %panic, label %bb13, !dbg !8577

bb17:                                             ; preds = %bb13, %bb8
; call alloc::borrow::Cow<B>::to_mut
  %_29 = call align 8 ptr @"_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h87096cc238b4bc83E"(ptr align 8 %self) #17, !dbg !8579
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %13 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6782cf229586bef9E"(ptr align 8 %rhs) #17, !dbg !8580
  %_32.0 = extractvalue { ptr, i64 } %13, 0, !dbg !8580
  %_32.1 = extractvalue { ptr, i64 } %13, 1, !dbg !8580
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %_29, ptr align 1 %_32.0, i64 %_32.1) #17, !dbg !8579
  br label %bb20, !dbg !8579

bb13:                                             ; preds = %bb9
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h7f86b8a278fea577E(ptr sret(%"string::String") %s, i64 %_22.0) #17, !dbg !8581
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %s, ptr align 1 %lhs.0, i64 %lhs.1) #17, !dbg !8582
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_26, ptr align 8 %s, i64 24, i1 false), !dbg !8583
  %14 = getelementptr inbounds %"borrow::Cow<'_, str>::Owned", ptr %_25, i32 0, i32 1, !dbg !8584
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %_26, i64 24, i1 false), !dbg !8584
  store i64 1, ptr %_25, align 8, !dbg !8584
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h8dbac5b1553a9343E"(ptr %self) #17, !dbg !8585
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_25, i64 32, i1 false), !dbg !8585
  br label %bb17, !dbg !8586

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_1987c0da2b591ee4a82a52e15d549fa1) #18, !dbg !8577
  unreachable, !dbg !8577

bb21:                                             ; preds = %bb22, %bb20
  ret void, !dbg !8587

bb22:                                             ; preds = %bb20
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h8dbac5b1553a9343E"(ptr %rhs) #17, !dbg !8574
  br label %bb21, !dbg !8574
}

; <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5fe2f836fb955206E"(ptr align 1 %self) unnamed_addr #0 !dbg !8588 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8599, metadata !DIExpression()), !dbg !8600
  call void @llvm.trap(), !dbg !8601
  unreachable, !dbg !8601
}

; alloc::collections::btree::node::splitpoint
; Function Attrs: noredzone nounwind
define void @_ZN5alloc11collections5btree4node10splitpoint17h3c2f10bf4d1f87efE(ptr sret({ i64, { i64, i64 } }) %0, i64 %edge_idx) unnamed_addr #0 !dbg !8602 {
start:
  %edge_idx.dbg.spill = alloca i64, align 8
  %_12 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_9 = alloca { i64, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  store i64 %edge_idx, ptr %edge_idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %edge_idx.dbg.spill, metadata !8625, metadata !DIExpression()), !dbg !8626
  %_3 = icmp ule i64 %edge_idx, 11, !dbg !8627
  %_2 = xor i1 %_3, true, !dbg !8628
  br i1 %_2, label %bb1, label %bb2, !dbg !8628

bb2:                                              ; preds = %start
  %_5 = icmp ule i64 0, %edge_idx, !dbg !8629
  br i1 %_5, label %bb3, label %bb4, !dbg !8629

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_fca685c3a5d754d3fffe814a538cb9f8, i64 38, ptr align 8 @alloc_709e40febbd32ea7182ea83096e66eef) #18, !dbg !8628
  unreachable, !dbg !8628

bb4:                                              ; preds = %bb3, %bb2
  switch i64 %edge_idx, label %bb5 [
    i64 5, label %bb7
    i64 6, label %bb8
  ], !dbg !8630

bb3:                                              ; preds = %bb2
  %_6 = icmp ult i64 %edge_idx, 5, !dbg !8629
  br i1 %_6, label %bb6, label %bb4, !dbg !8629

bb6:                                              ; preds = %bb3
  %1 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !8631
  store i64 %edge_idx, ptr %1, align 8, !dbg !8631
  store i64 0, ptr %_8, align 8, !dbg !8631
  store i64 4, ptr %0, align 8, !dbg !8632
  %2 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 0, !dbg !8632
  %3 = load i64, ptr %2, align 8, !dbg !8632, !range !1797, !noundef !45
  %4 = getelementptr inbounds { i64, i64 }, ptr %_8, i32 0, i32 1, !dbg !8632
  %5 = load i64, ptr %4, align 8, !dbg !8632, !noundef !45
  %6 = getelementptr inbounds { i64, { i64, i64 } }, ptr %0, i32 0, i32 1, !dbg !8632
  %7 = getelementptr inbounds { i64, i64 }, ptr %6, i32 0, i32 0, !dbg !8632
  store i64 %3, ptr %7, align 8, !dbg !8632
  %8 = getelementptr inbounds { i64, i64 }, ptr %6, i32 0, i32 1, !dbg !8632
  store i64 %5, ptr %8, align 8, !dbg !8632
  br label %bb10, !dbg !8633

bb10:                                             ; preds = %bb7, %bb8, %bb9, %bb6
  ret void, !dbg !8634

bb5:                                              ; preds = %bb4
  %_15.0 = sub i64 %edge_idx, 7, !dbg !8635
  %_15.1 = icmp ult i64 %edge_idx, 7, !dbg !8635
  %9 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !8635
  br i1 %9, label %panic, label %bb9, !dbg !8635

bb7:                                              ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 1, !dbg !8636
  store i64 %edge_idx, ptr %10, align 8, !dbg !8636
  store i64 0, ptr %_9, align 8, !dbg !8636
  store i64 5, ptr %0, align 8, !dbg !8637
  %11 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 0, !dbg !8637
  %12 = load i64, ptr %11, align 8, !dbg !8637, !range !1797, !noundef !45
  %13 = getelementptr inbounds { i64, i64 }, ptr %_9, i32 0, i32 1, !dbg !8637
  %14 = load i64, ptr %13, align 8, !dbg !8637, !noundef !45
  %15 = getelementptr inbounds { i64, { i64, i64 } }, ptr %0, i32 0, i32 1, !dbg !8637
  %16 = getelementptr inbounds { i64, i64 }, ptr %15, i32 0, i32 0, !dbg !8637
  store i64 %12, ptr %16, align 8, !dbg !8637
  %17 = getelementptr inbounds { i64, i64 }, ptr %15, i32 0, i32 1, !dbg !8637
  store i64 %14, ptr %17, align 8, !dbg !8637
  br label %bb10, !dbg !8638

bb8:                                              ; preds = %bb4
  %18 = getelementptr inbounds { i64, i64 }, ptr %_10, i32 0, i32 1, !dbg !8639
  store i64 0, ptr %18, align 8, !dbg !8639
  store i64 1, ptr %_10, align 8, !dbg !8639
  store i64 5, ptr %0, align 8, !dbg !8640
  %19 = getelementptr inbounds { i64, i64 }, ptr %_10, i32 0, i32 0, !dbg !8640
  %20 = load i64, ptr %19, align 8, !dbg !8640, !range !1797, !noundef !45
  %21 = getelementptr inbounds { i64, i64 }, ptr %_10, i32 0, i32 1, !dbg !8640
  %22 = load i64, ptr %21, align 8, !dbg !8640, !noundef !45
  %23 = getelementptr inbounds { i64, { i64, i64 } }, ptr %0, i32 0, i32 1, !dbg !8640
  %24 = getelementptr inbounds { i64, i64 }, ptr %23, i32 0, i32 0, !dbg !8640
  store i64 %20, ptr %24, align 8, !dbg !8640
  %25 = getelementptr inbounds { i64, i64 }, ptr %23, i32 0, i32 1, !dbg !8640
  store i64 %22, ptr %25, align 8, !dbg !8640
  br label %bb10, !dbg !8641

bb9:                                              ; preds = %bb5
  %26 = getelementptr inbounds { i64, i64 }, ptr %_12, i32 0, i32 1, !dbg !8642
  store i64 %_15.0, ptr %26, align 8, !dbg !8642
  store i64 1, ptr %_12, align 8, !dbg !8642
  store i64 6, ptr %0, align 8, !dbg !8643
  %27 = getelementptr inbounds { i64, i64 }, ptr %_12, i32 0, i32 0, !dbg !8643
  %28 = load i64, ptr %27, align 8, !dbg !8643, !range !1797, !noundef !45
  %29 = getelementptr inbounds { i64, i64 }, ptr %_12, i32 0, i32 1, !dbg !8643
  %30 = load i64, ptr %29, align 8, !dbg !8643, !noundef !45
  %31 = getelementptr inbounds { i64, { i64, i64 } }, ptr %0, i32 0, i32 1, !dbg !8643
  %32 = getelementptr inbounds { i64, i64 }, ptr %31, i32 0, i32 0, !dbg !8643
  store i64 %28, ptr %32, align 8, !dbg !8643
  %33 = getelementptr inbounds { i64, i64 }, ptr %31, i32 0, i32 1, !dbg !8643
  store i64 %30, ptr %33, align 8, !dbg !8643
  br label %bb10, !dbg !8644

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_19abf371dbe1b11983996d7d3c133749) #18, !dbg !8635
  unreachable, !dbg !8635
}

; <alloc::collections::btree::set_val::SetValZST as alloc::collections::btree::set_val::IsSetVal>::is_set_val
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN110_$LT$alloc..collections..btree..set_val..SetValZST$u20$as$u20$alloc..collections..btree..set_val..IsSetVal$GT$10is_set_val17h1035df8a8fc6edf4E"() unnamed_addr #0 !dbg !8645 {
start:
  ret i1 true, !dbg !8651
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17hc069ae9f8e46f190E(ptr align 8 %self) unnamed_addr #1 !dbg !8652 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8658, metadata !DIExpression()), !dbg !8659
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h143e7b21bfe6019aE"(ptr align 8 %self) #17, !dbg !8660
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !8660
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !8660
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !8661
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !8661
  ret { i64, i64 } %4, !dbg !8661
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd6ef18c3114f3244E"(i64 %kind.0, i64 %kind.1) unnamed_addr #1 !dbg !8662 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, ptr %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, ptr %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %kind.dbg.spill, metadata !8665, metadata !DIExpression()), !dbg !8666
  %3 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !8667
  store i64 %kind.0, ptr %3, align 8, !dbg !8667
  %4 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !8667
  store i64 %kind.1, ptr %4, align 8, !dbg !8667
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !8668
  %6 = load i64, ptr %5, align 8, !dbg !8668
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !8668
  %8 = load i64, ptr %7, align 8, !dbg !8668, !range !1009, !noundef !45
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !8668
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !8668
  ret { i64, i64 } %10, !dbg !8668
}

; <alloc::collections::TryReserveError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN74_$LT$alloc..collections..TryReserveError$u20$as$u20$core..fmt..Display$GT$3fmt17h2f7f31e8c673bb8bE"(ptr align 8 %self, ptr align 8 %fmt) unnamed_addr #0 !dbg !8669 {
start:
  %val.dbg.spill = alloca {}, align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err", align 1
  %fmt.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %reason = alloca { ptr, i64 }, align 8
  %_3 = alloca i8, align 1
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8674, metadata !DIExpression()), !dbg !8695
  store ptr %fmt, ptr %fmt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %fmt.dbg.spill, metadata !8675, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.declare(metadata ptr %residual.dbg.spill, metadata !8676, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill, metadata !8691, metadata !DIExpression()), !dbg !8698
  call void @llvm.dbg.declare(metadata ptr %reason, metadata !8693, metadata !DIExpression()), !dbg !8699
; call core::fmt::Formatter::write_str
  %_4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h84efc8e991470cf4E(ptr align 8 %fmt, ptr align 1 @alloc_563b2d33981876a7fc39df820c94bae4, i64 24) #17, !dbg !8700
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %1 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9793d407e2a9d31bE"(i1 zeroext %_4) #17, !dbg !8700
  %2 = zext i1 %1 to i8, !dbg !8700
  store i8 %2, ptr %_3, align 1, !dbg !8700
  %3 = load i8, ptr %_3, align 1, !dbg !8700, !range !673, !noundef !45
  %4 = trunc i8 %3 to i1, !dbg !8700
  %_6 = zext i1 %4 to i64, !dbg !8700
  %5 = icmp eq i64 %_6, 0, !dbg !8700
  br i1 %5, label %bb3, label %bb5, !dbg !8700

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !8701
  %7 = load i64, ptr %6, align 8, !dbg !8701, !range !1009, !noundef !45
  %8 = icmp eq i64 %7, 0, !dbg !8701
  %_11 = select i1 %8, i64 0, i64 1, !dbg !8701
  %9 = icmp eq i64 %_11, 0, !dbg !8702
  br i1 %9, label %bb8, label %bb6, !dbg !8702

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %10 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd9c4cebc2c35a9eeE"(ptr align 8 @alloc_0b0286357274b4c9eaf3f5533930fa13) #17, !dbg !8703
  %11 = zext i1 %10 to i8, !dbg !8703
  store i8 %11, ptr %0, align 1, !dbg !8703
  br label %bb10, !dbg !8703

bb4:                                              ; No predecessors!
  unreachable, !dbg !8700

bb10:                                             ; preds = %bb9, %bb5
  %12 = load i8, ptr %0, align 1, !dbg !8704, !range !673, !noundef !45
  %13 = trunc i8 %12 to i1, !dbg !8704
  ret i1 %13, !dbg !8704

bb8:                                              ; preds = %bb3
  %14 = getelementptr inbounds { ptr, i64 }, ptr %reason, i32 0, i32 0, !dbg !8705
  store ptr @alloc_c7b932db62d5bdcb5ca2fe37b37b7944, ptr %14, align 8, !dbg !8705
  %15 = getelementptr inbounds { ptr, i64 }, ptr %reason, i32 0, i32 1, !dbg !8705
  store i64 64, ptr %15, align 8, !dbg !8705
  br label %bb9, !dbg !8705

bb6:                                              ; preds = %bb3
  %16 = getelementptr inbounds { ptr, i64 }, ptr %reason, i32 0, i32 0, !dbg !8706
  store ptr @alloc_f6ade82938a5b491d71dfc9097e36761, ptr %16, align 8, !dbg !8706
  %17 = getelementptr inbounds { ptr, i64 }, ptr %reason, i32 0, i32 1, !dbg !8706
  store i64 47, ptr %17, align 8, !dbg !8706
  br label %bb9, !dbg !8707

bb7:                                              ; No predecessors!
  unreachable, !dbg !8701

bb9:                                              ; preds = %bb8, %bb6
  %18 = getelementptr inbounds { ptr, i64 }, ptr %reason, i32 0, i32 0, !dbg !8708
  %_13.0 = load ptr, ptr %18, align 8, !dbg !8708, !nonnull !45, !align !643, !noundef !45
  %19 = getelementptr inbounds { ptr, i64 }, ptr %reason, i32 0, i32 1, !dbg !8708
  %_13.1 = load i64, ptr %19, align 8, !dbg !8708, !noundef !45
; call core::fmt::Formatter::write_str
  %20 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h84efc8e991470cf4E(ptr align 8 %fmt, ptr align 1 %_13.0, i64 %_13.1) #17, !dbg !8709
  %21 = zext i1 %20 to i8, !dbg !8709
  store i8 %21, ptr %0, align 1, !dbg !8709
  br label %bb10, !dbg !8709
}

; alloc::ffi::c_str::FromVecWithNulError::as_bytes
; Function Attrs: noredzone nounwind
define { ptr, i64 } @_ZN5alloc3ffi5c_str19FromVecWithNulError8as_bytes17h26a0c2ef073fe5bcE(ptr align 8 %self) unnamed_addr #0 !dbg !8710 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8720, metadata !DIExpression()), !dbg !8721
  %_3 = getelementptr inbounds %"ffi::c_str::FromVecWithNulError", ptr %self, i32 0, i32 1, !dbg !8722
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %0 = call { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h5ff7c49b12e6a03bE"(ptr align 8 %_3, ptr align 8 @alloc_a5b3eabf9c22cb61c05bc8e297096434) #17, !dbg !8722
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !8722
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !8722
  %1 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !8723
  %2 = insertvalue { ptr, i64 } %1, i64 %_2.1, 1, !dbg !8723
  ret { ptr, i64 } %2, !dbg !8723
}

; alloc::ffi::c_str::FromVecWithNulError::into_bytes
; Function Attrs: noredzone nounwind
define void @_ZN5alloc3ffi5c_str19FromVecWithNulError10into_bytes17h88293ca4f3340922E(ptr sret(%"vec::Vec<u8>") %0, ptr %self) unnamed_addr #0 !dbg !8724 {
start:
  call void @llvm.dbg.declare(metadata ptr %self, metadata !8728, metadata !DIExpression()), !dbg !8729
  %1 = getelementptr inbounds %"ffi::c_str::FromVecWithNulError", ptr %self, i32 0, i32 1, !dbg !8730
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %1, i64 24, i1 false), !dbg !8730
  ret void, !dbg !8731
}

; <&[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: noredzone nounwind
define void @"_ZN81_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17had913e58f7016648E"(ptr sret(%"core::result::Result<ffi::c_str::CString, ffi::c_str::NulError>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !8732 {
start:
  %i.dbg.spill.i = alloca i64, align 8
  %capacity.dbg.spill.i = alloca i64, align 8
  %bytes.dbg.spill.i = alloca { ptr, i64 }, align 8
  %_15.i = alloca %"vec::Vec<u8>", align 8
  %_13.i = alloca %"vec::Vec<u8>", align 8
  %_12.i = alloca %"ffi::c_str::NulError", align 8
  %_9.i = alloca { i64, i64 }, align 8
  %buffer.i = alloca %"vec::Vec<u8>", align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8757, metadata !DIExpression()), !dbg !8758
  store ptr %self.0, ptr %bytes.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes.dbg.spill.i, metadata !8759, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.declare(metadata ptr %buffer.i, metadata !8764, metadata !DIExpression()), !dbg !8770
; call core::num::<impl usize>::checked_add
  %4 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %self.1, i64 1) #17, !dbg !8771
  %_3.0.i = extractvalue { i64, i64 } %4, 0, !dbg !8771
  %_3.1.i = extractvalue { i64, i64 } %4, 1, !dbg !8771
; call core::option::Option<T>::unwrap
  %capacity.i = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hcc01091c1f437e02E"(i64 %_3.0.i, i64 %_3.1.i, ptr align 8 @alloc_2afa95efdaceb1c5922c4b8a2e16a67d) #17, !dbg !8771
  store i64 %capacity.i, ptr %capacity.dbg.spill.i, align 8, !dbg !8771
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill.i, metadata !8762, metadata !DIExpression()), !dbg !8772
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h535def991fb56d8dE"(ptr sret(%"vec::Vec<u8>") %buffer.i, i64 %capacity.i) #17, !dbg !8773
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h91cf5eac2fa46b08E"(ptr align 8 %buffer.i, ptr align 1 %self.0, i64 %self.1) #17, !dbg !8774
; call core::slice::memchr::memchr
  %5 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17ha28a2edbeacdfa43E(i8 0, ptr align 1 %self.0, i64 %self.1) #17, !dbg !8775
  store { i64, i64 } %5, ptr %_9.i, align 8, !dbg !8775
  %_10.i = load i64, ptr %_9.i, align 8, !dbg !8775, !range !1797, !noundef !45
  %6 = icmp eq i64 %_10.i, 0, !dbg !8776
  br i1 %6, label %bb6.i, label %bb8.i, !dbg !8776

bb6.i:                                            ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_15.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !8777
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %7 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h4454ae54a35a9e3dE(ptr %_15.i) #17, !dbg !8778
  %_14.0.i = extractvalue { ptr, i64 } %7, 0, !dbg !8778
  %_14.1.i = extractvalue { ptr, i64 } %7, 1, !dbg !8778
  store ptr %_14.0.i, ptr %0, align 8, !dbg !8779
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8779
  store i64 %_14.1.i, ptr %8, align 8, !dbg !8779
  %9 = getelementptr inbounds %"core::result::Result<ffi::c_str::CString, ffi::c_str::NulError>", ptr %0, i32 0, i32 1, !dbg !8779
  store ptr null, ptr %9, align 8, !dbg !8779
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E.exit, !dbg !8780

bb8.i:                                            ; preds = %start
  %10 = getelementptr inbounds { i64, i64 }, ptr %_9.i, i32 0, i32 1, !dbg !8781
  %i.i = load i64, ptr %10, align 8, !dbg !8781, !noundef !45
  store i64 %i.i, ptr %i.dbg.spill.i, align 8, !dbg !8781
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill.i, metadata !8766, metadata !DIExpression()), !dbg !8782
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_13.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !8783
  store i64 %i.i, ptr %_12.i, align 8, !dbg !8784
  %11 = getelementptr inbounds %"ffi::c_str::NulError", ptr %_12.i, i32 0, i32 1, !dbg !8784
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %_13.i, i64 24, i1 false), !dbg !8784
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_12.i, i64 32, i1 false), !dbg !8785
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E.exit, !dbg !8786

_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E.exit: ; preds = %bb6.i, %bb8.i
  ret void, !dbg !8787
}

; <&str as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: noredzone nounwind
define void @"_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h08896c616216f21eE"(ptr sret(%"core::result::Result<ffi::c_str::CString, ffi::c_str::NulError>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !8788 {
start:
  %i.dbg.spill.i = alloca i64, align 8
  %capacity.dbg.spill.i = alloca i64, align 8
  %bytes.dbg.spill.i = alloca { ptr, i64 }, align 8
  %_15.i = alloca %"vec::Vec<u8>", align 8
  %_13.i = alloca %"vec::Vec<u8>", align 8
  %_12.i = alloca %"ffi::c_str::NulError", align 8
  %_9.i = alloca { i64, i64 }, align 8
  %buffer.i = alloca %"vec::Vec<u8>", align 8
  %1 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8793, metadata !DIExpression()), !dbg !8794
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !8795
  store ptr %self.0, ptr %1, align 8, !dbg !8797
  %5 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !8797
  store i64 %self.1, ptr %5, align 8, !dbg !8797
  %6 = load ptr, ptr %1, align 8, !dbg !8797, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !8797
  %8 = load i64, ptr %7, align 8, !dbg !8797, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !8798
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !8798
  %_3.0 = extractvalue { ptr, i64 } %10, 0, !dbg !8799
  %_3.1 = extractvalue { ptr, i64 } %10, 1, !dbg !8799
  store ptr %_3.0, ptr %bytes.dbg.spill.i, align 8
  %11 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill.i, i32 0, i32 1
  store i64 %_3.1, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes.dbg.spill.i, metadata !8759, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.declare(metadata ptr %buffer.i, metadata !8764, metadata !DIExpression()), !dbg !8802
; call core::num::<impl usize>::checked_add
  %12 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %_3.1, i64 1) #17, !dbg !8803
  %_3.0.i = extractvalue { i64, i64 } %12, 0, !dbg !8803
  %_3.1.i = extractvalue { i64, i64 } %12, 1, !dbg !8803
; call core::option::Option<T>::unwrap
  %capacity.i = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hcc01091c1f437e02E"(i64 %_3.0.i, i64 %_3.1.i, ptr align 8 @alloc_2afa95efdaceb1c5922c4b8a2e16a67d) #17, !dbg !8803
  store i64 %capacity.i, ptr %capacity.dbg.spill.i, align 8, !dbg !8803
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill.i, metadata !8762, metadata !DIExpression()), !dbg !8804
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h535def991fb56d8dE"(ptr sret(%"vec::Vec<u8>") %buffer.i, i64 %capacity.i) #17, !dbg !8805
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h91cf5eac2fa46b08E"(ptr align 8 %buffer.i, ptr align 1 %_3.0, i64 %_3.1) #17, !dbg !8806
; call core::slice::memchr::memchr
  %13 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17ha28a2edbeacdfa43E(i8 0, ptr align 1 %_3.0, i64 %_3.1) #17, !dbg !8807
  store { i64, i64 } %13, ptr %_9.i, align 8, !dbg !8807
  %_10.i = load i64, ptr %_9.i, align 8, !dbg !8807, !range !1797, !noundef !45
  %14 = icmp eq i64 %_10.i, 0, !dbg !8808
  br i1 %14, label %bb6.i, label %bb8.i, !dbg !8808

bb6.i:                                            ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_15.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !8809
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %15 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h4454ae54a35a9e3dE(ptr %_15.i) #17, !dbg !8810
  %_14.0.i = extractvalue { ptr, i64 } %15, 0, !dbg !8810
  %_14.1.i = extractvalue { ptr, i64 } %15, 1, !dbg !8810
  store ptr %_14.0.i, ptr %0, align 8, !dbg !8811
  %16 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8811
  store i64 %_14.1.i, ptr %16, align 8, !dbg !8811
  %17 = getelementptr inbounds %"core::result::Result<ffi::c_str::CString, ffi::c_str::NulError>", ptr %0, i32 0, i32 1, !dbg !8811
  store ptr null, ptr %17, align 8, !dbg !8811
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E.exit, !dbg !8812

bb8.i:                                            ; preds = %start
  %18 = getelementptr inbounds { i64, i64 }, ptr %_9.i, i32 0, i32 1, !dbg !8813
  %i.i = load i64, ptr %18, align 8, !dbg !8813, !noundef !45
  store i64 %i.i, ptr %i.dbg.spill.i, align 8, !dbg !8813
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill.i, metadata !8766, metadata !DIExpression()), !dbg !8814
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_13.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !8815
  store i64 %i.i, ptr %_12.i, align 8, !dbg !8816
  %19 = getelementptr inbounds %"ffi::c_str::NulError", ptr %_12.i, i32 0, i32 1, !dbg !8816
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %_13.i, i64 24, i1 false), !dbg !8816
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_12.i, i64 32, i1 false), !dbg !8817
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E.exit, !dbg !8818

_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E.exit: ; preds = %bb6.i, %bb8.i
  ret void, !dbg !8819
}

; <&mut [u8] as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: noredzone nounwind
define void @"_ZN89_$LT$$RF$mut$u20$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h74a9b51bb99a1f91E"(ptr sret(%"core::result::Result<ffi::c_str::CString, ffi::c_str::NulError>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !8820 {
start:
  %i.dbg.spill.i = alloca i64, align 8
  %capacity.dbg.spill.i = alloca i64, align 8
  %bytes.dbg.spill.i = alloca { ptr, i64 }, align 8
  %_15.i = alloca %"vec::Vec<u8>", align 8
  %_13.i = alloca %"vec::Vec<u8>", align 8
  %_12.i = alloca %"ffi::c_str::NulError", align 8
  %_9.i = alloca { i64, i64 }, align 8
  %buffer.i = alloca %"vec::Vec<u8>", align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8825, metadata !DIExpression()), !dbg !8826
  store ptr %self.0, ptr %bytes.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes.dbg.spill.i, metadata !8759, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.declare(metadata ptr %buffer.i, metadata !8764, metadata !DIExpression()), !dbg !8829
; call core::num::<impl usize>::checked_add
  %4 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E"(i64 %self.1, i64 1) #17, !dbg !8830
  %_3.0.i = extractvalue { i64, i64 } %4, 0, !dbg !8830
  %_3.1.i = extractvalue { i64, i64 } %4, 1, !dbg !8830
; call core::option::Option<T>::unwrap
  %capacity.i = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hcc01091c1f437e02E"(i64 %_3.0.i, i64 %_3.1.i, ptr align 8 @alloc_2afa95efdaceb1c5922c4b8a2e16a67d) #17, !dbg !8830
  store i64 %capacity.i, ptr %capacity.dbg.spill.i, align 8, !dbg !8830
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill.i, metadata !8762, metadata !DIExpression()), !dbg !8831
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h535def991fb56d8dE"(ptr sret(%"vec::Vec<u8>") %buffer.i, i64 %capacity.i) #17, !dbg !8832
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h91cf5eac2fa46b08E"(ptr align 8 %buffer.i, ptr align 1 %self.0, i64 %self.1) #17, !dbg !8833
; call core::slice::memchr::memchr
  %5 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17ha28a2edbeacdfa43E(i8 0, ptr align 1 %self.0, i64 %self.1) #17, !dbg !8834
  store { i64, i64 } %5, ptr %_9.i, align 8, !dbg !8834
  %_10.i = load i64, ptr %_9.i, align 8, !dbg !8834, !range !1797, !noundef !45
  %6 = icmp eq i64 %_10.i, 0, !dbg !8835
  br i1 %6, label %bb6.i, label %bb8.i, !dbg !8835

bb6.i:                                            ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_15.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !8836
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %7 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h4454ae54a35a9e3dE(ptr %_15.i) #17, !dbg !8837
  %_14.0.i = extractvalue { ptr, i64 } %7, 0, !dbg !8837
  %_14.1.i = extractvalue { ptr, i64 } %7, 1, !dbg !8837
  store ptr %_14.0.i, ptr %0, align 8, !dbg !8838
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8838
  store i64 %_14.1.i, ptr %8, align 8, !dbg !8838
  %9 = getelementptr inbounds %"core::result::Result<ffi::c_str::CString, ffi::c_str::NulError>", ptr %0, i32 0, i32 1, !dbg !8838
  store ptr null, ptr %9, align 8, !dbg !8838
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E.exit, !dbg !8839

bb8.i:                                            ; preds = %start
  %10 = getelementptr inbounds { i64, i64 }, ptr %_9.i, i32 0, i32 1, !dbg !8840
  %i.i = load i64, ptr %10, align 8, !dbg !8840, !noundef !45
  store i64 %i.i, ptr %i.dbg.spill.i, align 8, !dbg !8840
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill.i, metadata !8766, metadata !DIExpression()), !dbg !8841
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_13.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !8842
  store i64 %i.i, ptr %_12.i, align 8, !dbg !8843
  %11 = getelementptr inbounds %"ffi::c_str::NulError", ptr %_12.i, i32 0, i32 1, !dbg !8843
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %_13.i, i64 24, i1 false), !dbg !8843
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_12.i, i64 32, i1 false), !dbg !8844
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E.exit, !dbg !8845

_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E.exit: ; preds = %bb6.i, %bb8.i
  ret void, !dbg !8846
}

; alloc::ffi::c_str::CString::from_vec_unchecked
; Function Attrs: noredzone nounwind
define { ptr, i64 } @_ZN5alloc3ffi5c_str7CString18from_vec_unchecked17h306a86885aa71809E(ptr %v) unnamed_addr #0 !dbg !8847 {
start:
  %_5 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %v, metadata !8851, metadata !DIExpression()), !dbg !8852
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %v) #17, !dbg !8853
  %_7.0 = extractvalue { ptr, i64 } %0, 0, !dbg !8853
  %_7.1 = extractvalue { ptr, i64 } %0, 1, !dbg !8853
; call core::slice::memchr::memchr
  %1 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17ha28a2edbeacdfa43E(i8 0, ptr align 1 %_7.0, i64 %_7.1) #17, !dbg !8854
  store { i64, i64 } %1, ptr %_5, align 8, !dbg !8854
; call core::option::Option<T>::is_none
  %_3 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17ha2933e096c3ac179E"(ptr align 8 %_5) #17, !dbg !8854
  %_2 = xor i1 %_3, true, !dbg !8855
  br i1 %_2, label %bb4, label %bb5, !dbg !8855

bb5:                                              ; preds = %start
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %2 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h4454ae54a35a9e3dE(ptr %v) #17, !dbg !8856
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !8856
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !8856
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !8857
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !8857
  ret { ptr, i64 } %6, !dbg !8857

bb4:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_5e5813a368e2861717aea807bfd3dab8, i64 49, ptr align 8 @alloc_21eae8b1b78c21c4127420364ce37047) #18, !dbg !8855
  unreachable, !dbg !8855
}

; alloc::ffi::c_str::CString::_from_vec_unchecked
; Function Attrs: noredzone nounwind
define { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h4454ae54a35a9e3dE(ptr %v) unnamed_addr #0 !dbg !8858 {
start:
  %_7 = alloca %"vec::Vec<u8>", align 8
  %0 = alloca { ptr, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %v, metadata !8860, metadata !DIExpression()), !dbg !8861
; call alloc::vec::Vec<T,A>::reserve_exact
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17h76020e232e7b8b88E"(ptr align 8 %v, i64 1) #17, !dbg !8862
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3a7b6b09314ccc8dE"(ptr align 8 %v, i8 0) #17, !dbg !8863
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %v, i64 24, i1 false), !dbg !8864
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %1 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hc085987315dcaa11E"(ptr %_7) #17, !dbg !8864
  %_6.0 = extractvalue { ptr, i64 } %1, 0, !dbg !8864
  %_6.1 = extractvalue { ptr, i64 } %1, 1, !dbg !8864
  %2 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8865
  store ptr %_6.0, ptr %2, align 8, !dbg !8865
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8865
  store i64 %_6.1, ptr %3, align 8, !dbg !8865
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8866
  %5 = load ptr, ptr %4, align 8, !dbg !8866, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8866
  %7 = load i64, ptr %6, align 8, !dbg !8866, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !8866
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !8866
  ret { ptr, i64 } %9, !dbg !8866
}

; alloc::ffi::c_str::CString::from_raw
; Function Attrs: noredzone nounwind
define { ptr, i64 } @_ZN5alloc3ffi5c_str7CString8from_raw17h5cdd156bad1bfb0aE(ptr %ptr) unnamed_addr #0 !dbg !8867 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %0 = alloca { ptr, i64 }, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !8871, metadata !DIExpression()), !dbg !8876
  %_3 = call i64 @strlen(ptr %ptr) #17, !dbg !8877
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_3, i64 1), !dbg !8877
  %_5.0 = extractvalue { i64, i1 } %1, 0, !dbg !8877
  %_5.1 = extractvalue { i64, i1 } %1, 1, !dbg !8877
  %2 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !8877
  br i1 %2, label %panic, label %bb2, !dbg !8877

bb2:                                              ; preds = %start
  store i64 %_5.0, ptr %len.dbg.spill, align 8, !dbg !8877
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !8872, metadata !DIExpression()), !dbg !8878
; call core::slice::raw::from_raw_parts_mut
  %3 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h30c1ee3fd8e53edbE(ptr %ptr, i64 %_5.0) #17, !dbg !8879
  %slice.0 = extractvalue { ptr, i64 } %3, 0, !dbg !8879
  %slice.1 = extractvalue { ptr, i64 } %3, 1, !dbg !8879
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0, !dbg !8879
  store ptr %slice.0, ptr %4, align 8, !dbg !8879
  %5 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1, !dbg !8879
  store i64 %slice.1, ptr %5, align 8, !dbg !8879
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !8874, metadata !DIExpression()), !dbg !8880
; call alloc::boxed::Box<T>::from_raw
  %6 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h72705765b0082205E"(ptr %slice.0, i64 %slice.1) #17, !dbg !8881
  %_7.0 = extractvalue { ptr, i64 } %6, 0, !dbg !8881
  %_7.1 = extractvalue { ptr, i64 } %6, 1, !dbg !8881
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8882
  store ptr %_7.0, ptr %7, align 8, !dbg !8882
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8882
  store i64 %_7.1, ptr %8, align 8, !dbg !8882
  %9 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8883
  %10 = load ptr, ptr %9, align 8, !dbg !8883, !nonnull !45, !align !643, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8883
  %12 = load i64, ptr %11, align 8, !dbg !8883, !noundef !45
  %13 = insertvalue { ptr, i64 } undef, ptr %10, 0, !dbg !8883
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !8883
  ret { ptr, i64 } %14, !dbg !8883

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_e4479345af98ed73e24ee37f36dbc23a) #18, !dbg !8877
  unreachable, !dbg !8877
}

; alloc::ffi::c_str::CString::into_string
; Function Attrs: noredzone nounwind
define void @_ZN5alloc3ffi5c_str7CString11into_string17hef41641d8853b4d8E(ptr sret(%"core::result::Result<string::String, ffi::c_str::IntoStringError>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !8884 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_3 = alloca %"vec::Vec<u8>", align 8
  %_2 = alloca %"core::result::Result<string::String, string::FromUtf8Error>", align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8888, metadata !DIExpression()), !dbg !8889
; call alloc::ffi::c_str::CString::into_bytes
  call void @_ZN5alloc3ffi5c_str7CString10into_bytes17hac95a1737d96872bE(ptr sret(%"vec::Vec<u8>") %_3, ptr align 1 %self.0, i64 %self.1) #17, !dbg !8890
; call alloc::string::String::from_utf8
  call void @_ZN5alloc6string6String9from_utf817heb20f44b6dd13080E(ptr sret(%"core::result::Result<string::String, string::FromUtf8Error>") %_2, ptr %_3) #17, !dbg !8891
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h96554ad26ce9ff2fE"(ptr sret(%"core::result::Result<string::String, ffi::c_str::IntoStringError>") %0, ptr %_2) #17, !dbg !8891
  ret void, !dbg !8892
}

; alloc::ffi::c_str::CString::into_string::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN5alloc3ffi5c_str7CString11into_string28_$u7b$$u7b$closure$u7d$$u7d$17hba6701cc4040fa31E"(ptr sret(%"ffi::c_str::IntoStringError") %0, ptr %e) unnamed_addr #1 !dbg !8893 {
start:
  %_1.dbg.spill = alloca %"[closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs:474:54: 474:57]", align 1
  %_6 = alloca %"vec::Vec<u8>", align 8
  %_3 = alloca %"core::str::error::Utf8Error", align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !8898, metadata !DIExpression()), !dbg !8899
  call void @llvm.dbg.declare(metadata ptr %e, metadata !8897, metadata !DIExpression()), !dbg !8900
; call alloc::string::FromUtf8Error::utf8_error
  call void @_ZN5alloc6string13FromUtf8Error10utf8_error17h5c06ae65cc93372aE(ptr sret(%"core::str::error::Utf8Error") %_3, ptr align 8 %e) #17, !dbg !8901
; call alloc::string::FromUtf8Error::into_bytes
  call void @_ZN5alloc6string13FromUtf8Error10into_bytes17h7da198e61c7a34cfE(ptr sret(%"vec::Vec<u8>") %_6, ptr %e) #17, !dbg !8902
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %1 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h4454ae54a35a9e3dE(ptr %_6) #17, !dbg !8903
  %_5.0 = extractvalue { ptr, i64 } %1, 0, !dbg !8903
  %_5.1 = extractvalue { ptr, i64 } %1, 1, !dbg !8903
  %2 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !8904
  store ptr %_5.0, ptr %2, align 8, !dbg !8904
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8904
  store i64 %_5.1, ptr %3, align 8, !dbg !8904
  %4 = getelementptr inbounds %"ffi::c_str::IntoStringError", ptr %0, i32 0, i32 1, !dbg !8904
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_3, i64 16, i1 false), !dbg !8904
  ret void, !dbg !8905
}

; alloc::ffi::c_str::CString::into_bytes
; Function Attrs: noredzone nounwind
define void @_ZN5alloc3ffi5c_str7CString10into_bytes17hac95a1737d96872bE(ptr sret(%"vec::Vec<u8>") %vec, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !8906 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_13 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %_5 = alloca { ptr, ptr }, align 8
  %_nul = alloca { i8, i8 }, align 1
  call void @llvm.dbg.declare(metadata ptr %vec, metadata !8911, metadata !DIExpression()), !dbg !8922
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8910, metadata !DIExpression()), !dbg !8923
  call void @llvm.dbg.declare(metadata ptr %_nul, metadata !8913, metadata !DIExpression()), !dbg !8924
; call alloc::ffi::c_str::CString::into_inner
  %2 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString10into_inner17h986f6c45f1867645E(ptr align 1 %self.0, i64 %self.1) #17, !dbg !8925
  %_2.0 = extractvalue { ptr, i64 } %2, 0, !dbg !8925
  %_2.1 = extractvalue { ptr, i64 } %2, 1, !dbg !8925
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h307f4279c08bc6f0E(ptr sret(%"vec::Vec<u8>") %vec, ptr align 1 %_2.0, i64 %_2.1) #17, !dbg !8926
; call alloc::vec::Vec<T,A>::pop
  %3 = call { i8, i8 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h416b6370274bf058E"(ptr align 8 %vec) #17, !dbg !8927
  store { i8, i8 } %3, ptr %_nul, align 1, !dbg !8927
  store ptr %_nul, ptr %_5, align 8, !dbg !8928
  %4 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !8928
  store ptr @alloc_d1e2722b54ef8ec03f2047485c081942, ptr %4, align 8, !dbg !8928
  %left_val = load ptr, ptr %_5, align 8, !dbg !8928, !nonnull !45, !align !643, !noundef !45
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !8928
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !8915, metadata !DIExpression()), !dbg !8929
  %5 = getelementptr inbounds { ptr, ptr }, ptr %_5, i32 0, i32 1, !dbg !8928
  %right_val = load ptr, ptr %5, align 8, !dbg !8928, !nonnull !45, !align !643, !noundef !45
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !8928
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !8918, metadata !DIExpression()), !dbg !8929
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_10 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h5627319f47faaf19E"(ptr align 1 %left_val, ptr align 1 %right_val) #17, !dbg !8929
  %_9 = xor i1 %_10, true, !dbg !8929
  br i1 %_9, label %bb5, label %bb6, !dbg !8929

bb6:                                              ; preds = %start
  ret void, !dbg !8930

bb5:                                              ; preds = %start
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !8929
  call void @llvm.dbg.declare(metadata ptr %kind.dbg.spill, metadata !8919, metadata !DIExpression()), !dbg !8931
  %6 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_13, i32 0, i32 1, !dbg !8931
  store ptr null, ptr %6, align 8, !dbg !8931
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hdde847a6ce9e5b7bE(i8 0, ptr align 1 %left_val, ptr align 1 %right_val, ptr %_13, ptr align 8 @alloc_b907c864b0f545588eec0b633078b1e8) #18, !dbg !8931
  unreachable, !dbg !8931
}

; alloc::ffi::c_str::CString::into_bytes_with_nul
; Function Attrs: noredzone nounwind
define void @_ZN5alloc3ffi5c_str7CString19into_bytes_with_nul17h2ff3bf2c3e351f0eE(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !8932 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8934, metadata !DIExpression()), !dbg !8935
; call alloc::ffi::c_str::CString::into_inner
  %3 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString10into_inner17h986f6c45f1867645E(ptr align 1 %self.0, i64 %self.1) #17, !dbg !8936
  %_2.0 = extractvalue { ptr, i64 } %3, 0, !dbg !8936
  %_2.1 = extractvalue { ptr, i64 } %3, 1, !dbg !8936
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h307f4279c08bc6f0E(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %_2.0, i64 %_2.1) #17, !dbg !8937
  ret void, !dbg !8938
}

; alloc::ffi::c_str::CString::as_bytes_with_nul
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17h909920e6f3ded25eE(ptr align 8 %self) unnamed_addr #1 !dbg !8939 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8944, metadata !DIExpression()), !dbg !8945
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0, !dbg !8946
  %_3.0 = load ptr, ptr %0, align 8, !dbg !8946, !nonnull !45, !align !643, !noundef !45
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1, !dbg !8946
  %_3.1 = load i64, ptr %1, align 8, !dbg !8946, !noundef !45
  %2 = insertvalue { ptr, i64 } undef, ptr %_3.0, 0, !dbg !8947
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1, 1, !dbg !8947
  ret { ptr, i64 } %3, !dbg !8947
}

; alloc::ffi::c_str::CString::into_boxed_c_str
; Function Attrs: noredzone nounwind
define { ptr, i64 } @_ZN5alloc3ffi5c_str7CString16into_boxed_c_str17h75e78c213e56f077E(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !8948 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8952, metadata !DIExpression()), !dbg !8953
; call alloc::ffi::c_str::CString::into_inner
  %2 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString10into_inner17h986f6c45f1867645E(ptr align 1 %self.0, i64 %self.1) #17, !dbg !8954
  %_4.0 = extractvalue { ptr, i64 } %2, 0, !dbg !8954
  %_4.1 = extractvalue { ptr, i64 } %2, 1, !dbg !8954
; call alloc::boxed::Box<T,A>::into_raw
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h330b78636c2bf5fbE"(ptr align 1 %_4.0, i64 %_4.1) #17, !dbg !8955
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !8955
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !8955
; call alloc::boxed::Box<T>::from_raw
  %4 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hbf4facd7117989c6E"(ptr %_3.0, i64 %_3.1) #17, !dbg !8956
  %5 = extractvalue { ptr, i64 } %4, 0, !dbg !8956
  %6 = extractvalue { ptr, i64 } %4, 1, !dbg !8956
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !8957
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1, !dbg !8957
  ret { ptr, i64 } %8, !dbg !8957
}

; alloc::ffi::c_str::CString::into_inner
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3ffi5c_str7CString10into_inner17h986f6c45f1867645E(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !8958 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %value.dbg.spill.i = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %this = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !8962, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.declare(metadata ptr %this, metadata !8963, metadata !DIExpression()), !dbg !8969
  store ptr %self.0, ptr %value.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %value.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill.i, metadata !8970, metadata !DIExpression()), !dbg !8975
  store ptr %self.0, ptr %0, align 8, !dbg !8977
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8977
  store i64 %self.1, ptr %4, align 8, !dbg !8977
  %5 = load ptr, ptr %0, align 8, !dbg !8978, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !8978
  %7 = load i64, ptr %6, align 8, !dbg !8978, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !8978
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !8978
  store { ptr, i64 } %9, ptr %this, align 8, !dbg !8979
  store ptr %this, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !8980, metadata !DIExpression()), !dbg !8986
; call core::ptr::read
  %10 = call { ptr, i64 } @_ZN4core3ptr4read17h26b3e0b6a817afa0E(ptr %this) #17, !dbg !8988
  %11 = extractvalue { ptr, i64 } %10, 0, !dbg !8988
  %12 = extractvalue { ptr, i64 } %10, 1, !dbg !8988
  %13 = insertvalue { ptr, i64 } undef, ptr %11, 0, !dbg !8989
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !8989
  ret { ptr, i64 } %14, !dbg !8989
}

; alloc::ffi::c_str::CString::from_vec_with_nul_unchecked
; Function Attrs: noredzone nounwind
define { ptr, i64 } @_ZN5alloc3ffi5c_str7CString27from_vec_with_nul_unchecked17h01ade982d7854614E(ptr %v) unnamed_addr #0 !dbg !8990 {
start:
  call void @llvm.dbg.declare(metadata ptr %v, metadata !8992, metadata !DIExpression()), !dbg !8993
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %v) #17, !dbg !8994
  %_8.0 = extractvalue { ptr, i64 } %0, 0, !dbg !8994
  %_8.1 = extractvalue { ptr, i64 } %0, 1, !dbg !8994
; call core::slice::memchr::memchr
  %1 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17ha28a2edbeacdfa43E(i8 0, ptr align 1 %_8.0, i64 %_8.1) #17, !dbg !8995
  %_6.0 = extractvalue { i64, i64 } %1, 0, !dbg !8995
  %_6.1 = extractvalue { i64, i64 } %1, 1, !dbg !8995
; call core::option::Option<T>::unwrap
  %_5 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hcc01091c1f437e02E"(i64 %_6.0, i64 %_6.1, ptr align 8 @alloc_752ec64ad4297d322aadfa88b3472ebb) #17, !dbg !8995
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_5, i64 1), !dbg !8995
  %_10.0 = extractvalue { i64, i1 } %2, 0, !dbg !8995
  %_10.1 = extractvalue { i64, i1 } %2, 1, !dbg !8995
  %3 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !8995
  br i1 %3, label %panic, label %bb4, !dbg !8995

bb4:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::len
  %_11 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %v) #17, !dbg !8996
  %_3 = icmp eq i64 %_10.0, %_11, !dbg !8995
  %_2 = xor i1 %_3, true, !dbg !8997
  br i1 %_2, label %bb6, label %bb7, !dbg !8997

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_aa57af6dfbaa5650830dfb1fee8cd9ef) #18, !dbg !8995
  unreachable, !dbg !8995

bb7:                                              ; preds = %bb4
; call alloc::ffi::c_str::CString::_from_vec_with_nul_unchecked
  %4 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17h61656e2251656008E(ptr %v) #17, !dbg !8998
  %5 = extractvalue { ptr, i64 } %4, 0, !dbg !8998
  %6 = extractvalue { ptr, i64 } %4, 1, !dbg !8998
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !8999
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1, !dbg !8999
  ret { ptr, i64 } %8, !dbg !8999

bb6:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_3df6d204130c5bfa5e2f056efb06b697, i64 63, ptr align 8 @alloc_f8ea6406c66a7ce76f083b51c92be73b) #18, !dbg !8997
  unreachable, !dbg !8997
}

; alloc::ffi::c_str::CString::_from_vec_with_nul_unchecked
; Function Attrs: noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17h61656e2251656008E(ptr %v) unnamed_addr #0 !dbg !9000 {
start:
  %0 = alloca { ptr, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %v, metadata !9002, metadata !DIExpression()), !dbg !9003
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %1 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hc085987315dcaa11E"(ptr %v) #17, !dbg !9004
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !9004
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !9004
  %2 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !9005
  store ptr %_2.0, ptr %2, align 8, !dbg !9005
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9005
  store i64 %_2.1, ptr %3, align 8, !dbg !9005
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !9006
  %5 = load ptr, ptr %4, align 8, !dbg !9006, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9006
  %7 = load i64, ptr %6, align 8, !dbg !9006, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !9006
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !9006
  ret { ptr, i64 } %9, !dbg !9006
}

; alloc::ffi::c_str::CString::from_vec_with_nul
; Function Attrs: noredzone nounwind
define void @_ZN5alloc3ffi5c_str7CString17from_vec_with_nul17hb246718b0c235e34E(ptr sret(%"core::result::Result<ffi::c_str::CString, ffi::c_str::FromVecWithNulError>") %0, ptr %v) unnamed_addr #0 !dbg !9007 {
start:
  %nul_pos.dbg.spill5 = alloca i64, align 8
  %nul_pos.dbg.spill3 = alloca i64, align 8
  %nul_pos.dbg.spill = alloca ptr, align 8
  %_20 = alloca { i64, i64 }, align 8
  %_19 = alloca %"ffi::c_str::FromVecWithNulError", align 8
  %_18 = alloca { i64, i64 }, align 8
  %_17 = alloca %"ffi::c_str::FromVecWithNulError", align 8
  %nul_pos = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata ptr %v, metadata !9026, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.declare(metadata ptr %nul_pos, metadata !9027, metadata !DIExpression()), !dbg !9035
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %v) #17, !dbg !9036
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !9036
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !9036
; call core::slice::memchr::memchr
  %2 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17ha28a2edbeacdfa43E(i8 0, ptr align 1 %_4.0, i64 %_4.1) #17, !dbg !9037
  store { i64, i64 } %2, ptr %nul_pos, align 8, !dbg !9037
  %_6 = load i64, ptr %nul_pos, align 8, !dbg !9038, !range !1797, !noundef !45
  %3 = icmp eq i64 %_6, 0, !dbg !9039
  br i1 %3, label %bb3, label %bb5, !dbg !9039

bb3:                                              ; preds = %start
  store i64 1, ptr %_20, align 8, !dbg !9040
  %4 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 0, !dbg !9041
  %5 = load i64, ptr %4, align 8, !dbg !9041, !range !1797, !noundef !45
  %6 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !9041
  %7 = load i64, ptr %6, align 8, !dbg !9041
  %8 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 0, !dbg !9041
  store i64 %5, ptr %8, align 8, !dbg !9041
  %9 = getelementptr inbounds { i64, i64 }, ptr %_19, i32 0, i32 1, !dbg !9041
  store i64 %7, ptr %9, align 8, !dbg !9041
  %10 = getelementptr inbounds %"ffi::c_str::FromVecWithNulError", ptr %_19, i32 0, i32 1, !dbg !9041
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %v, i64 24, i1 false), !dbg !9041
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_19, i64 40, i1 false), !dbg !9042
  br label %bb11, !dbg !9043

bb5:                                              ; preds = %start
  %nul_pos1 = getelementptr inbounds { i64, i64 }, ptr %nul_pos, i32 0, i32 1, !dbg !9044
  store ptr %nul_pos1, ptr %nul_pos.dbg.spill, align 8, !dbg !9044
  call void @llvm.dbg.declare(metadata ptr %nul_pos.dbg.spill, metadata !9031, metadata !DIExpression()), !dbg !9045
  %_11 = load i64, ptr %nul_pos1, align 8, !dbg !9046, !noundef !45
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_11, i64 1), !dbg !9046
  %_12.0 = extractvalue { i64, i1 } %11, 0, !dbg !9046
  %_12.1 = extractvalue { i64, i1 } %11, 1, !dbg !9046
  %12 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !9046
  br i1 %12, label %panic, label %bb6, !dbg !9046

bb4:                                              ; No predecessors!
  unreachable, !dbg !9038

bb6:                                              ; preds = %bb5
; call alloc::vec::Vec<T,A>::len
  %_13 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %v) #17, !dbg !9047
  %_9 = icmp eq i64 %_12.0, %_13, !dbg !9046
  br i1 %_9, label %bb8, label %bb9, !dbg !9046

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_8eb2c3650813749787940e1e6e40b97c) #18, !dbg !9046
  unreachable, !dbg !9046

bb9:                                              ; preds = %bb6
  %13 = getelementptr inbounds { i64, i64 }, ptr %nul_pos, i32 0, i32 1, !dbg !9048
  %nul_pos4 = load i64, ptr %13, align 8, !dbg !9048, !noundef !45
  store i64 %nul_pos4, ptr %nul_pos.dbg.spill5, align 8, !dbg !9048
  call void @llvm.dbg.declare(metadata ptr %nul_pos.dbg.spill5, metadata !9032, metadata !DIExpression()), !dbg !9049
  %14 = getelementptr inbounds { i64, i64 }, ptr %_18, i32 0, i32 1, !dbg !9050
  store i64 %nul_pos4, ptr %14, align 8, !dbg !9050
  store i64 0, ptr %_18, align 8, !dbg !9050
  %15 = getelementptr inbounds { i64, i64 }, ptr %_18, i32 0, i32 0, !dbg !9051
  %16 = load i64, ptr %15, align 8, !dbg !9051, !range !1797, !noundef !45
  %17 = getelementptr inbounds { i64, i64 }, ptr %_18, i32 0, i32 1, !dbg !9051
  %18 = load i64, ptr %17, align 8, !dbg !9051
  %19 = getelementptr inbounds { i64, i64 }, ptr %_17, i32 0, i32 0, !dbg !9051
  store i64 %16, ptr %19, align 8, !dbg !9051
  %20 = getelementptr inbounds { i64, i64 }, ptr %_17, i32 0, i32 1, !dbg !9051
  store i64 %18, ptr %20, align 8, !dbg !9051
  %21 = getelementptr inbounds %"ffi::c_str::FromVecWithNulError", ptr %_17, i32 0, i32 1, !dbg !9051
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %v, i64 24, i1 false), !dbg !9051
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_17, i64 40, i1 false), !dbg !9052
  br label %bb11, !dbg !9053

bb8:                                              ; preds = %bb6
  %22 = getelementptr inbounds { i64, i64 }, ptr %nul_pos, i32 0, i32 1, !dbg !9044
  %nul_pos2 = load i64, ptr %22, align 8, !dbg !9044, !noundef !45
  store i64 %nul_pos2, ptr %nul_pos.dbg.spill3, align 8, !dbg !9044
  call void @llvm.dbg.declare(metadata ptr %nul_pos.dbg.spill3, metadata !9029, metadata !DIExpression()), !dbg !9045
; call alloc::ffi::c_str::CString::_from_vec_with_nul_unchecked
  %23 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17h61656e2251656008E(ptr %v) #17, !dbg !9054
  %_15.0 = extractvalue { ptr, i64 } %23, 0, !dbg !9054
  %_15.1 = extractvalue { ptr, i64 } %23, 1, !dbg !9054
  %24 = getelementptr inbounds %"core::result::Result<ffi::c_str::CString, ffi::c_str::FromVecWithNulError>::Ok", ptr %0, i32 0, i32 1, !dbg !9055
  %25 = getelementptr inbounds { ptr, i64 }, ptr %24, i32 0, i32 0, !dbg !9055
  store ptr %_15.0, ptr %25, align 8, !dbg !9055
  %26 = getelementptr inbounds { ptr, i64 }, ptr %24, i32 0, i32 1, !dbg !9055
  store i64 %_15.1, ptr %26, align 8, !dbg !9055
  store i64 2, ptr %0, align 8, !dbg !9055
  br label %bb11, !dbg !9056

bb11:                                             ; preds = %bb3, %bb9, %bb8
  ret void, !dbg !9057
}

; <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h75b61064575e8165E"(ptr align 8 %self) unnamed_addr #1 !dbg !9058 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9064, metadata !DIExpression()), !dbg !9065
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0, !dbg !9066
  %_4.0 = load ptr, ptr %0, align 8, !dbg !9066, !nonnull !45, !align !643, !noundef !45
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1, !dbg !9066
  %_4.1 = load i64, ptr %1, align 8, !dbg !9066, !noundef !45
; call core::slice::<impl [T]>::get_unchecked_mut
  %_2 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h3f0ce64aec9622b2E"(ptr align 1 %_4.0, i64 %_4.1, i64 0) #17, !dbg !9066
  store i8 0, ptr %_2, align 1, !dbg !9067
  ret void, !dbg !9068
}

; <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2642b73ee5bac692E"(ptr align 8 %self) unnamed_addr #1 !dbg !9069 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9074, metadata !DIExpression()), !dbg !9075
; call alloc::ffi::c_str::CString::as_bytes_with_nul
  %0 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17h909920e6f3ded25eE(ptr align 8 %self) #17, !dbg !9076
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !9076
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !9076
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked
  %1 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17h2453c5391e5bedf4E(ptr align 1 %_3.0, i64 %_3.1) #17, !dbg !9077
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !9077
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !9077
  %4 = insertvalue { ptr, i64 } undef, ptr %2, 0, !dbg !9078
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1, !dbg !9078
  ret { ptr, i64 } %5, !dbg !9078
}

; <alloc::ffi::c_str::CString as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN63_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..fmt..Debug$GT$3fmt17hff8af2778d2a7e4fE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !9079 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9084, metadata !DIExpression()), !dbg !9086
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !9085, metadata !DIExpression()), !dbg !9087
; call <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2642b73ee5bac692E"(ptr align 8 %self) #17, !dbg !9088
  %_4.0 = extractvalue { ptr, i64 } %0, 0, !dbg !9088
  %_4.1 = extractvalue { ptr, i64 } %0, 1, !dbg !9088
; call <core::ffi::c_str::CStr as core::fmt::Debug>::fmt
  %1 = call zeroext i1 @"_ZN59_$LT$core..ffi..c_str..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17hb226784e3fb000a6E"(ptr align 1 %_4.0, i64 %_4.1, ptr align 8 %f) #17, !dbg !9089
  ret i1 %1, !dbg !9090
}

; <alloc::ffi::c_str::CString as core::default::Default>::default
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN69_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..default..Default$GT$7default17h65e880341a32c7f3E"() unnamed_addr #0 !dbg !9091 {
start:
  %a.dbg.spill = alloca { ptr, i64 }, align 8, !dbg !9098
; call <&core::ffi::c_str::CStr as core::default::Default>::default
  %0 = call { ptr, i64 } @"_ZN69_$LT$$RF$core..ffi..c_str..CStr$u20$as$u20$core..default..Default$GT$7default17h6a79868be7ce1d7cE"() #17, !dbg !9098
  %a.0 = extractvalue { ptr, i64 } %0, 0, !dbg !9098
  %a.1 = extractvalue { ptr, i64 } %0, 1, !dbg !9098
  %1 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 0, !dbg !9098
  store ptr %a.0, ptr %1, align 8, !dbg !9098
  %2 = getelementptr inbounds { ptr, i64 }, ptr %a.dbg.spill, i32 0, i32 1, !dbg !9098
  store i64 %a.1, ptr %2, align 8, !dbg !9098
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !9096, metadata !DIExpression()), !dbg !9099
; call alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::to_owned
  %3 = call { ptr, i64 } @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17h1919e5d1e79f8eafE"(ptr align 1 %a.0, i64 %a.1) #17, !dbg !9100
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !9100
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !9100
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !9101
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !9101
  ret { ptr, i64 } %7, !dbg !9101
}

; alloc::ffi::c_str::<impl core::convert::From<&core::ffi::c_str::CStr> for alloc::boxed::Box<core::ffi::c_str::CStr>>::from
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN5alloc3ffi5c_str131_$LT$impl$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17h58e92393fe4c5a1fE"(ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !9102 {
start:
  %boxed.dbg.spill = alloca { ptr, i64 }, align 8
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !9107, metadata !DIExpression()), !dbg !9110
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %2 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17h38e806c05411979fE(ptr align 1 %s.0, i64 %s.1) #17, !dbg !9111
  %_3.0 = extractvalue { ptr, i64 } %2, 0, !dbg !9111
  %_3.1 = extractvalue { ptr, i64 } %2, 1, !dbg !9111
; call <alloc::boxed::Box<[T]> as core::convert::From<&[T]>>::from
  %3 = call { ptr, i64 } @"_ZN99_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17hd50dd409d0b139b9E"(ptr align 1 %_3.0, i64 %_3.1) #17, !dbg !9112
  %boxed.0 = extractvalue { ptr, i64 } %3, 0, !dbg !9112
  %boxed.1 = extractvalue { ptr, i64 } %3, 1, !dbg !9112
  %4 = getelementptr inbounds { ptr, i64 }, ptr %boxed.dbg.spill, i32 0, i32 0, !dbg !9112
  store ptr %boxed.0, ptr %4, align 8, !dbg !9112
  %5 = getelementptr inbounds { ptr, i64 }, ptr %boxed.dbg.spill, i32 0, i32 1, !dbg !9112
  store i64 %boxed.1, ptr %5, align 8, !dbg !9112
  call void @llvm.dbg.declare(metadata ptr %boxed.dbg.spill, metadata !9108, metadata !DIExpression()), !dbg !9113
; call alloc::boxed::Box<T,A>::into_raw
  %6 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h330b78636c2bf5fbE"(ptr align 1 %boxed.0, i64 %boxed.1) #17, !dbg !9114
  %_5.0 = extractvalue { ptr, i64 } %6, 0, !dbg !9114
  %_5.1 = extractvalue { ptr, i64 } %6, 1, !dbg !9114
; call alloc::boxed::Box<T>::from_raw
  %7 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hbf4facd7117989c6E"(ptr %_5.0, i64 %_5.1) #17, !dbg !9115
  %8 = extractvalue { ptr, i64 } %7, 0, !dbg !9115
  %9 = extractvalue { ptr, i64 } %7, 1, !dbg !9115
  %10 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !9116
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !9116
  ret { ptr, i64 } %11, !dbg !9116
}

; <alloc::ffi::c_str::CString as core::convert::From<alloc::boxed::Box<core::ffi::c_str::CStr>>>::from
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN121_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$$GT$4from17hf392d856784d5b7cE"(ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !9117 {
start:
  %raw.dbg.spill = alloca { ptr, i64 }, align 8
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !9122, metadata !DIExpression()), !dbg !9125
; call alloc::boxed::Box<T,A>::into_raw
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h85192d6a2499a0d4E"(ptr align 1 %s.0, i64 %s.1) #17, !dbg !9126
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !9126
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !9126
  %4 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 0, !dbg !9126
  store ptr %_3.0, ptr %4, align 8, !dbg !9126
  %5 = getelementptr inbounds { ptr, i64 }, ptr %raw.dbg.spill, i32 0, i32 1, !dbg !9126
  store i64 %_3.1, ptr %5, align 8, !dbg !9126
  call void @llvm.dbg.declare(metadata ptr %raw.dbg.spill, metadata !9123, metadata !DIExpression()), !dbg !9127
; call alloc::boxed::Box<T>::from_raw
  %6 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h72705765b0082205E"(ptr %_3.0, i64 %_3.1) #17, !dbg !9128
  %_4.0 = extractvalue { ptr, i64 } %6, 0, !dbg !9128
  %_4.1 = extractvalue { ptr, i64 } %6, 1, !dbg !9128
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !9129
  store ptr %_4.0, ptr %7, align 8, !dbg !9129
  %8 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9129
  store i64 %_4.1, ptr %8, align 8, !dbg !9129
  %9 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !9130
  %10 = load ptr, ptr %9, align 8, !dbg !9130, !nonnull !45, !align !643, !noundef !45
  %11 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9130
  %12 = load i64, ptr %11, align 8, !dbg !9130, !noundef !45
  %13 = insertvalue { ptr, i64 } undef, ptr %10, 0, !dbg !9130
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !9130
  ret { ptr, i64 } %14, !dbg !9130
}

; alloc::ffi::c_str::<impl core::default::Default for alloc::boxed::Box<core::ffi::c_str::CStr>>::default
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN5alloc3ffi5c_str100_$LT$impl$u20$core..default..Default$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$7default17hde74fd0caad3e87dE"() unnamed_addr #0 !dbg !9131 {
start:
  %boxed.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca [1 x i8], align 1
  %0 = getelementptr inbounds [1 x i8], ptr %_2, i64 0, i64 0, !dbg !9138
  store i8 0, ptr %0, align 1, !dbg !9138
  %1 = load i8, ptr %_2, align 1, !dbg !9139
; call <alloc::boxed::Box<[T]> as core::convert::From<[T; N]>>::from
  %2 = call { ptr, i64 } @"_ZN106_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$u5b$T$u3b$$u20$N$u5d$$GT$$GT$4from17hab32856c14b32396E"(i8 %1) #17, !dbg !9139
  %boxed.0 = extractvalue { ptr, i64 } %2, 0, !dbg !9139
  %boxed.1 = extractvalue { ptr, i64 } %2, 1, !dbg !9139
  %3 = getelementptr inbounds { ptr, i64 }, ptr %boxed.dbg.spill, i32 0, i32 0, !dbg !9139
  store ptr %boxed.0, ptr %3, align 8, !dbg !9139
  %4 = getelementptr inbounds { ptr, i64 }, ptr %boxed.dbg.spill, i32 0, i32 1, !dbg !9139
  store i64 %boxed.1, ptr %4, align 8, !dbg !9139
  call void @llvm.dbg.declare(metadata ptr %boxed.dbg.spill, metadata !9136, metadata !DIExpression()), !dbg !9140
; call alloc::boxed::Box<T,A>::into_raw
  %5 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h330b78636c2bf5fbE"(ptr align 1 %boxed.0, i64 %boxed.1) #17, !dbg !9141
  %_4.0 = extractvalue { ptr, i64 } %5, 0, !dbg !9141
  %_4.1 = extractvalue { ptr, i64 } %5, 1, !dbg !9141
; call alloc::boxed::Box<T>::from_raw
  %6 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hbf4facd7117989c6E"(ptr %_4.0, i64 %_4.1) #17, !dbg !9142
  %7 = extractvalue { ptr, i64 } %6, 0, !dbg !9142
  %8 = extractvalue { ptr, i64 } %6, 1, !dbg !9142
  %9 = insertvalue { ptr, i64 } undef, ptr %7, 0, !dbg !9143
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !9143
  ret { ptr, i64 } %10, !dbg !9143
}

; alloc::ffi::c_str::NulError::nul_position
; Function Attrs: noredzone nounwind
define i64 @_ZN5alloc3ffi5c_str8NulError12nul_position17ha9cdcfcab3269420E(ptr align 8 %self) unnamed_addr #0 !dbg !9144 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9149, metadata !DIExpression()), !dbg !9150
  %0 = load i64, ptr %self, align 8, !dbg !9151, !noundef !45
  ret i64 %0, !dbg !9152
}

; alloc::ffi::c_str::NulError::into_vec
; Function Attrs: noredzone nounwind
define void @_ZN5alloc3ffi5c_str8NulError8into_vec17h8e1257e2d5f2c786E(ptr sret(%"vec::Vec<u8>") %0, ptr %self) unnamed_addr #0 !dbg !9153 {
start:
  call void @llvm.dbg.declare(metadata ptr %self, metadata !9157, metadata !DIExpression()), !dbg !9158
  %1 = getelementptr inbounds %"ffi::c_str::NulError", ptr %self, i32 0, i32 1, !dbg !9159
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %1, i64 24, i1 false), !dbg !9159
  ret void, !dbg !9160
}

; <alloc::ffi::c_str::NulError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Display$GT$3fmt17hb3e4057fa7d827f6E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !9161 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca [1 x { ptr, ptr }], align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9166, metadata !DIExpression()), !dbg !9168
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !9167, metadata !DIExpression()), !dbg !9169
; call core::fmt::ArgumentV1::new_display
  %0 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %self) #17, !dbg !9170
  %_8.0 = extractvalue { ptr, ptr } %0, 0, !dbg !9170
  %_8.1 = extractvalue { ptr, ptr } %0, 1, !dbg !9170
  %1 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_7, i64 0, i64 0, !dbg !9170
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0, !dbg !9170
  store ptr %_8.0, ptr %2, align 8, !dbg !9170
  %3 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1, !dbg !9170
  store ptr %_8.1, ptr %3, align 8, !dbg !9170
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_3, ptr align 8 @alloc_1b43b30ce11b2325ac265e2f39339fd5, i64 1, ptr align 8 %_7, i64 1) #17, !dbg !9170
; call core::fmt::Formatter::write_fmt
  %4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd4a6383714610d49E(ptr align 8 %f, ptr %_3) #17, !dbg !9170
  ret i1 %4, !dbg !9171
}

; <alloc::ffi::c_str::FromVecWithNulError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN77_$LT$alloc..ffi..c_str..FromVecWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h419e77014ad7da20E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !9172 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_12 = alloca %"core::fmt::Arguments<'_>", align 8
  %_9 = alloca [1 x { ptr, ptr }], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %pos = alloca i64, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9177, metadata !DIExpression()), !dbg !9181
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !9178, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.declare(metadata ptr %pos, metadata !9179, metadata !DIExpression()), !dbg !9183
  %_3 = load i64, ptr %self, align 8, !dbg !9184, !range !1797, !noundef !45
  %1 = icmp eq i64 %_3, 0, !dbg !9185
  br i1 %1, label %bb3, label %bb1, !dbg !9185

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !9186
  %3 = load i64, ptr %2, align 8, !dbg !9186, !noundef !45
  store i64 %3, ptr %pos, align 8, !dbg !9186
; call core::fmt::ArgumentV1::new_display
  %4 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %pos) #17, !dbg !9187
  %_10.0 = extractvalue { ptr, ptr } %4, 0, !dbg !9187
  %_10.1 = extractvalue { ptr, ptr } %4, 1, !dbg !9187
  %5 = getelementptr inbounds [1 x { ptr, ptr }], ptr %_9, i64 0, i64 0, !dbg !9187
  %6 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 0, !dbg !9187
  store ptr %_10.0, ptr %6, align 8, !dbg !9187
  %7 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 1, !dbg !9187
  store ptr %_10.1, ptr %7, align 8, !dbg !9187
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_5, ptr align 8 @alloc_28948e56a703a1cfad9ad8b1fe5790eb, i64 1, ptr align 8 %_9, i64 1) #17, !dbg !9187
; call core::fmt::Formatter::write_fmt
  %8 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd4a6383714610d49E(ptr align 8 %f, ptr %_5) #17, !dbg !9187
  %9 = zext i1 %8 to i8, !dbg !9187
  store i8 %9, ptr %0, align 1, !dbg !9187
  br label %bb7, !dbg !9187

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_12, ptr align 8 @alloc_6f7e1863f9eb0b975e014710d5491d4d, i64 1, ptr align 8 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !9188
; call core::fmt::Formatter::write_fmt
  %10 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd4a6383714610d49E(ptr align 8 %f, ptr %_12) #17, !dbg !9188
  %11 = zext i1 %10 to i8, !dbg !9188
  store i8 %11, ptr %0, align 1, !dbg !9188
  br label %bb7, !dbg !9188

bb2:                                              ; No predecessors!
  unreachable, !dbg !9184

bb7:                                              ; preds = %bb3, %bb1
  %12 = load i8, ptr %0, align 1, !dbg !9189, !range !673, !noundef !45
  %13 = trunc i8 %12 to i1, !dbg !9189
  ret i1 %13, !dbg !9189
}

; alloc::ffi::c_str::IntoStringError::into_cstring
; Function Attrs: noredzone nounwind
define { ptr, i64 } @_ZN5alloc3ffi5c_str15IntoStringError12into_cstring17h749cadedfbd135faE(ptr %self) unnamed_addr #0 !dbg !9190 {
start:
  call void @llvm.dbg.declare(metadata ptr %self, metadata !9194, metadata !DIExpression()), !dbg !9195
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 0, !dbg !9196
  %1 = load ptr, ptr %0, align 8, !dbg !9196, !nonnull !45, !align !643, !noundef !45
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self, i32 0, i32 1, !dbg !9196
  %3 = load i64, ptr %2, align 8, !dbg !9196, !noundef !45
  %4 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !9197
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1, !dbg !9197
  ret { ptr, i64 } %5, !dbg !9197
}

; alloc::ffi::c_str::IntoStringError::utf8_error
; Function Attrs: noredzone nounwind
define void @_ZN5alloc3ffi5c_str15IntoStringError10utf8_error17hf0bb201c84486c81E(ptr sret(%"core::str::error::Utf8Error") %0, ptr align 8 %self) unnamed_addr #0 !dbg !9198 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9203, metadata !DIExpression()), !dbg !9204
  %1 = getelementptr inbounds %"ffi::c_str::IntoStringError", ptr %self, i32 0, i32 1, !dbg !9205
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %1, i64 16, i1 false), !dbg !9205
  ret void, !dbg !9206
}

; alloc::ffi::c_str::IntoStringError::description
; Function Attrs: noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3ffi5c_str15IntoStringError11description17h3b2f2ceeced04292E(ptr align 8 %self) unnamed_addr #0 !dbg !9207 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9211, metadata !DIExpression()), !dbg !9212
  ret { ptr, i64 } { ptr @alloc_1add4574f5ab41a1316837f308f660f3, i64 33 }, !dbg !9213
}

; <alloc::ffi::c_str::IntoStringError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..fmt..Display$GT$3fmt17hd9d51bd37ae2d213E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !9214 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9219, metadata !DIExpression()), !dbg !9221
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !9220, metadata !DIExpression()), !dbg !9222
; call alloc::ffi::c_str::IntoStringError::description
  %0 = call { ptr, i64 } @_ZN5alloc3ffi5c_str15IntoStringError11description17h3b2f2ceeced04292E(ptr align 8 %self) #17, !dbg !9223
  %_4.0 = extractvalue { ptr, i64 } %0, 0, !dbg !9223
  %_4.1 = extractvalue { ptr, i64 } %0, 1, !dbg !9223
; call <str as core::fmt::Display>::fmt
  %1 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h44ce19c6d35d2787E"(ptr align 1 %_4.0, i64 %_4.1, ptr align 8 %f) #17, !dbg !9223
  ret i1 %1, !dbg !9224
}

; alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::to_owned
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17h1919e5d1e79f8eafE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !9225 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9230, metadata !DIExpression()), !dbg !9231
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %3 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17h38e806c05411979fE(ptr align 1 %self.0, i64 %self.1) #17, !dbg !9232
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !9232
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !9232
; call <T as core::convert::Into<U>>::into
  %4 = call { ptr, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h75eaf413a11e3e99E"(ptr align 1 %_4.0, i64 %_4.1) #17, !dbg !9232
  %_2.0 = extractvalue { ptr, i64 } %4, 0, !dbg !9232
  %_2.1 = extractvalue { ptr, i64 } %4, 1, !dbg !9232
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !9233
  store ptr %_2.0, ptr %5, align 8, !dbg !9233
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9233
  store i64 %_2.1, ptr %6, align 8, !dbg !9233
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 0, !dbg !9234
  %8 = load ptr, ptr %7, align 8, !dbg !9234, !nonnull !45, !align !643, !noundef !45
  %9 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9234
  %10 = load i64, ptr %9, align 8, !dbg !9234, !noundef !45
  %11 = insertvalue { ptr, i64 } undef, ptr %8, 0, !dbg !9234
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !9234
  ret { ptr, i64 } %12, !dbg !9234
}

; alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::clone_into
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$10clone_into17h03a81efc2c066042E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %target) unnamed_addr #0 !dbg !9235 {
start:
  %target.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca %"vec::Vec<u8>", align 8
  %b = alloca %"vec::Vec<u8>", align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9239, metadata !DIExpression()), !dbg !9243
  store ptr %target, ptr %target.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %target.dbg.spill, metadata !9240, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.declare(metadata ptr %b, metadata !9241, metadata !DIExpression()), !dbg !9245
; call core::mem::take
  %2 = call { ptr, i64 } @_ZN4core3mem4take17hf906dd6faa23c314E(ptr align 8 %target) #17, !dbg !9246
  %_4.0 = extractvalue { ptr, i64 } %2, 0, !dbg !9246
  %_4.1 = extractvalue { ptr, i64 } %2, 1, !dbg !9246
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h307f4279c08bc6f0E(ptr sret(%"vec::Vec<u8>") %b, ptr align 1 %_4.0, i64 %_4.1) #17, !dbg !9247
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %3 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17h38e806c05411979fE(ptr align 1 %self.0, i64 %self.1) #17, !dbg !9248
  %_8.0 = extractvalue { ptr, i64 } %3, 0, !dbg !9248
  %_8.1 = extractvalue { ptr, i64 } %3, 1, !dbg !9248
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::clone_into
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17hcc2d5aabbc61457cE"(ptr align 1 %_8.0, i64 %_8.1, ptr align 8 %b) #17, !dbg !9248
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11, ptr align 8 %b, i64 24, i1 false), !dbg !9249
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %4 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hc085987315dcaa11E"(ptr %_11) #17, !dbg !9249
  %_10.0 = extractvalue { ptr, i64 } %4, 0, !dbg !9249
  %_10.1 = extractvalue { ptr, i64 } %4, 1, !dbg !9249
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h394222bf9f2778faE"(ptr %target) #17, !dbg !9250
  %5 = getelementptr inbounds { ptr, i64 }, ptr %target, i32 0, i32 0, !dbg !9250
  store ptr %_10.0, ptr %5, align 8, !dbg !9250
  %6 = getelementptr inbounds { ptr, i64 }, ptr %target, i32 0, i32 1, !dbg !9250
  store i64 %_10.1, ptr %6, align 8, !dbg !9250
  ret void, !dbg !9251
}

; <alloc::ffi::c_str::CString as core::convert::From<&core::ffi::c_str::CStr>>::from
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN100_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$GT$4from17hdcdc015956e9b7b1E"(ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !9252 {
start:
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !9255, metadata !DIExpression()), !dbg !9256
; call alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::to_owned
  %2 = call { ptr, i64 } @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17h1919e5d1e79f8eafE"(ptr align 1 %s.0, i64 %s.1) #17, !dbg !9257
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !9257
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !9257
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !9258
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !9258
  ret { ptr, i64 } %6, !dbg !9258
}

; alloc::ffi::c_str::<impl core::ffi::c_str::CStr>::to_string_lossy
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$15to_string_lossy17h5b54fbe6e5b0926eE"(ptr sret(%"borrow::Cow<'_, str>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !9259 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9263, metadata !DIExpression()), !dbg !9264
; call core::ffi::c_str::CStr::to_bytes
  %3 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr8to_bytes17h82852abaa6893a37E(ptr align 1 %self.0, i64 %self.1) #17, !dbg !9265
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !9265
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !9265
; call alloc::string::String::from_utf8_lossy
  call void @_ZN5alloc6string6String15from_utf8_lossy17h3e9f57c6fd356993E(ptr sret(%"borrow::Cow<'_, str>") %0, ptr align 1 %_3.0, i64 %_3.1) #17, !dbg !9266
  ret void, !dbg !9267
}

; alloc::ffi::c_str::<impl core::ffi::c_str::CStr>::into_c_string
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$13into_c_string17h8dbb1fcfdba29e2eE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !9268 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9270, metadata !DIExpression()), !dbg !9271
; call <alloc::ffi::c_str::CString as core::convert::From<alloc::boxed::Box<core::ffi::c_str::CStr>>>::from
  %2 = call { ptr, i64 } @"_ZN121_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$$GT$4from17hf392d856784d5b7cE"(ptr align 1 %self.0, i64 %self.1) #17, !dbg !9272
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !9272
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !9272
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !9273
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !9273
  ret { ptr, i64 } %6, !dbg !9273
}

; <alloc::ffi::c_str::NulError as core::error::Error>::description
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..error..Error$GT$11description17h582aa3f5fc8ae041E"(ptr align 8 %self) unnamed_addr #0 !dbg !9274 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9279, metadata !DIExpression()), !dbg !9280
  ret { ptr, i64 } { ptr @alloc_2d0407af131f995f6ab914c51ddf2d12, i64 22 }, !dbg !9281
}

; <alloc::ffi::c_str::IntoStringError as core::error::Error>::description
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$11description17h8edaf0703957e2d1E"(ptr align 8 %self) unnamed_addr #0 !dbg !9282 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9285, metadata !DIExpression()), !dbg !9286
  ret { ptr, i64 } { ptr @alloc_1add4574f5ab41a1316837f308f660f3, i64 33 }, !dbg !9287
}

; <alloc::ffi::c_str::IntoStringError as core::error::Error>::source
; Function Attrs: noredzone nounwind
define { ptr, ptr } @"_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$6source17h67b38d1eae1bea11E"(ptr align 8 %self) unnamed_addr #0 !dbg !9288 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9292, metadata !DIExpression()), !dbg !9293
  %_3 = getelementptr inbounds %"ffi::c_str::IntoStringError", ptr %self, i32 0, i32 1, !dbg !9294
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !9295
  store ptr %_3, ptr %1, align 8, !dbg !9295
  %2 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !9295
  store ptr @vtable.a, ptr %2, align 8, !dbg !9295
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !9296
  %4 = load ptr, ptr %3, align 8, !dbg !9296, !align !643, !noundef !45
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !9296
  %6 = load ptr, ptr %5, align 8, !dbg !9296
  %7 = insertvalue { ptr, ptr } undef, ptr %4, 0, !dbg !9296
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1, !dbg !9296
  ret { ptr, ptr } %8, !dbg !9296
}

; alloc::fmt::format::format_inner
; Function Attrs: noredzone nounwind
define void @_ZN5alloc3fmt6format12format_inner17hb15765be6333d03fE(ptr sret(%"string::String") %output, ptr %args) unnamed_addr #0 !dbg !9297 {
start:
  %0 = alloca %"core::fmt::Arguments<'_>", align 8, !dbg !9309
  %capacity.dbg.spill = alloca i64, align 8, !dbg !9309
  call void @llvm.dbg.declare(metadata ptr %output, metadata !9307, metadata !DIExpression()), !dbg !9309
  call void @llvm.dbg.declare(metadata ptr %args, metadata !9304, metadata !DIExpression()), !dbg !9310
; call core::fmt::Arguments::estimated_capacity
  %capacity = call i64 @_ZN4core3fmt9Arguments18estimated_capacity17h1abc4b7786dd4e08E(ptr align 8 %args) #17, !dbg !9311
  store i64 %capacity, ptr %capacity.dbg.spill, align 8, !dbg !9311
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !9305, metadata !DIExpression()), !dbg !9312
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h7f86b8a278fea577E(ptr sret(%"string::String") %output, i64 %capacity) #17, !dbg !9313
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %args, i64 48, i1 false), !dbg !9314
; call core::fmt::Write::write_fmt
  %_6 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h253ba6ca3452f57eE(ptr align 8 %output, ptr %0) #17, !dbg !9314
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h21606e20b3dfc0f8E"(i1 zeroext %_6, ptr align 1 @alloc_0105dc2397ac7c966adc13e0ee71a018, i64 51, ptr align 8 @alloc_94d00f93c1bf1ae927599c29067f4888) #17, !dbg !9314
  ret void, !dbg !9315
}

; alloc::rc::rcbox_layout_for_value_layout
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN5alloc2rc29rcbox_layout_for_value_layout17hdaf3926fd0ada957E(i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !9316 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  %_4 = alloca %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", align 8
  %_3 = alloca { { i64, i64 }, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !9321, metadata !DIExpression()), !dbg !9322
; call core::alloc::layout::Layout::new
  %2 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h3e89a21e3a03b808E() #17, !dbg !9323
  store { i64, i64 } %2, ptr %_6, align 8, !dbg !9323
; call core::alloc::layout::Layout::extend
  call void @_ZN4core5alloc6layout6Layout6extend17hf1cb85f7a69e01e3E(ptr sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") %_4, ptr align 8 %_6, i64 %layout.0, i64 %layout.1) #17, !dbg !9323
; call core::result::Result<T,E>::unwrap
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0ecce73e6461ffd3E"(ptr sret({ { i64, i64 }, i64 }) %_3, ptr %_4, ptr align 8 @alloc_692eaf18796bf7142ac5b58f8314fe17) #17, !dbg !9323
; call core::alloc::layout::Layout::pad_to_align
  %3 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h582b5e21e5a39c47E(ptr align 8 %_3) #17, !dbg !9323
  %4 = extractvalue { i64, i64 } %3, 0, !dbg !9323
  %5 = extractvalue { i64, i64 } %3, 1, !dbg !9323
  %6 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !9324
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !9324
  ret { i64, i64 } %7, !dbg !9324
}

; alloc::slice::hack::into_vec
; Function Attrs: noredzone nounwind
define void @_ZN5alloc5slice4hack8into_vec17h307f4279c08bc6f0E(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %b.0, i64 %b.1) unnamed_addr #0 !dbg !9325 {
start:
  %b.dbg.spill1 = alloca { ptr, i64 }, align 8
  %len.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !9332, metadata !DIExpression()), !dbg !9338
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !9337, metadata !DIExpression()), !dbg !9339
  store i64 %b.1, ptr %len.dbg.spill, align 8, !dbg !9340
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !9333, metadata !DIExpression()), !dbg !9341
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hae1fd25b2641d527E"(ptr align 1 %b.0, i64 %b.1) #17, !dbg !9342
  %_6.0 = extractvalue { ptr, i64 } %3, 0, !dbg !9342
  %_6.1 = extractvalue { ptr, i64 } %3, 1, !dbg !9342
  %4 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill1, i32 0, i32 0, !dbg !9343
  store ptr %_6.0, ptr %4, align 8, !dbg !9343
  %5 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill1, i32 0, i32 1, !dbg !9343
  store i64 %_6.1, ptr %5, align 8, !dbg !9343
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill1, metadata !9335, metadata !DIExpression()), !dbg !9344
; call alloc::vec::Vec<T,A>::from_raw_parts_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17ha1327c0d27413592E"(ptr sret(%"vec::Vec<u8>") %0, ptr %_6.0, i64 %b.1, i64 %b.1) #17, !dbg !9345
  ret void, !dbg !9346
}

; alloc::slice::hack::to_vec
; Function Attrs: inlinehint noredzone nounwind
define void @_ZN5alloc5slice4hack6to_vec17ha03f6aefba86faa7E(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !9347 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !9351, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !9352, metadata !DIExpression()), !dbg !9354
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h57f051fa86b83003E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %s.0, i64 %s.1) #17, !dbg !9355
  ret void, !dbg !9356
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h57f051fa86b83003E"(ptr sret(%"vec::Vec<u8>") %v, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !9357 {
start:
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %alloc.dbg.spill = alloca %"alloc::Global", align 1, !dbg !9364
  %s.dbg.spill = alloca { ptr, i64 }, align 8, !dbg !9364
  call void @llvm.dbg.declare(metadata ptr %v, metadata !9362, metadata !DIExpression()), !dbg !9364
  %0 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !9360, metadata !DIExpression()), !dbg !9365
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !9361, metadata !DIExpression()), !dbg !9366
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hcaa21e3e1357300bE"(ptr sret(%"vec::Vec<u8>") %v, i64 %s.1) #17, !dbg !9367
  store ptr %s.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %s.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !8291, metadata !DIExpression()), !dbg !9368
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_6 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %v) #17, !dbg !9370
; call core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17hcc2e138dd4a4e914E"(ptr %s.0, ptr %_6, i64 %s.1) #17, !dbg !9371
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %v, i64 %s.1) #17, !dbg !9372
  ret void, !dbg !9373
}

; alloc::slice::<impl [T]>::to_vec
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17haa914a405ffc8f90E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !9374 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9379, metadata !DIExpression()), !dbg !9380
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h2f7130b38bfec602E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1) #17, !dbg !9381
  ret void, !dbg !9382
}

; alloc::slice::<impl [T]>::to_vec_in
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h2f7130b38bfec602E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !9383 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9385, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !9386, metadata !DIExpression()), !dbg !9388
; call alloc::slice::hack::to_vec
  call void @_ZN5alloc5slice4hack6to_vec17ha03f6aefba86faa7E(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1) #17, !dbg !9389
  ret void, !dbg !9390
}

; alloc::slice::<impl [T]>::into_vec
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17hca163af921500948E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !9391 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9393, metadata !DIExpression()), !dbg !9394
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h307f4279c08bc6f0E(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1) #17, !dbg !9395
  ret void, !dbg !9396
}

; alloc::slice::<impl [T]>::repeat
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6repeat17hf1b491b3793cce54E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1, i64 %n) unnamed_addr #0 !dbg !9397 {
start:
  %1 = alloca ptr, align 8
  %count.dbg.spill.i6 = alloca i64, align 8
  %self.dbg.spill.i7 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %rem_len.dbg.spill = alloca i64, align 8
  %buf_len.dbg.spill = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %m = alloca i64, align 8
  %buf = alloca %"vec::Vec<u8>", align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9401, metadata !DIExpression()), !dbg !9413
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !9402, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.declare(metadata ptr %buf, metadata !9405, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.declare(metadata ptr %m, metadata !9407, metadata !DIExpression()), !dbg !9416
  %5 = icmp eq i64 %n, 0, !dbg !9417
  br i1 %5, label %bb1, label %bb2, !dbg !9417

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h9204411988406416E"(ptr sret(%"vec::Vec<u8>") %0) #17, !dbg !9418
  br label %bb30, !dbg !9418

bb2:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %6 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h9e4495e66fe1dbcbE"(i64 %self.1, i64 %n) #17, !dbg !9419
  %_4.0 = extractvalue { i64, i64 } %6, 0, !dbg !9419
  %_4.1 = extractvalue { i64, i64 } %6, 1, !dbg !9419
; call core::option::Option<T>::expect
  %capacity = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17hbb4f8d02aff80201E"(i64 %_4.0, i64 %_4.1, ptr align 1 @alloc_d8b623796366cfc3ee7fa9ba650aaec9, i64 17, ptr align 8 @alloc_aa2fb326309c571bd6804aef16b72d41) #17, !dbg !9419
  store i64 %capacity, ptr %capacity.dbg.spill, align 8, !dbg !9419
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !9403, metadata !DIExpression()), !dbg !9420
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h535def991fb56d8dE"(ptr sret(%"vec::Vec<u8>") %buf, i64 %capacity) #17, !dbg !9421
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h91cf5eac2fa46b08E"(ptr align 8 %buf, ptr align 1 %self.0, i64 %self.1) #17, !dbg !9422
  %_12.0 = lshr i64 %n, 1, !dbg !9423
  store i64 %_12.0, ptr %m, align 8, !dbg !9423
  br label %bb8, !dbg !9424

bb8:                                              ; preds = %bb17, %bb2
  %_14 = load i64, ptr %m, align 8, !dbg !9425, !noundef !45
  %_13 = icmp ugt i64 %_14, 0, !dbg !9425
  br i1 %_13, label %bb9, label %bb20, !dbg !9425

bb20:                                             ; preds = %bb8
; call alloc::vec::Vec<T,A>::len
  %_35 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %buf) #17, !dbg !9426
  %_37.0 = sub i64 %capacity, %_35, !dbg !9427
  %_37.1 = icmp ult i64 %capacity, %_35, !dbg !9427
  %7 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false), !dbg !9427
  br i1 %7, label %panic1, label %bb22, !dbg !9427

bb9:                                              ; preds = %bb8
; call alloc::vec::Vec<T,A>::as_ptr
  %_16 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf37ccd2c9d3e0ec9E"(ptr align 8 %buf) #17, !dbg !9428
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_19 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %buf) #17, !dbg !9429
; call alloc::vec::Vec<T,A>::len
  %_21 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %buf) #17, !dbg !9430
  store ptr %_19, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !5931, metadata !DIExpression()), !dbg !9431
  store i64 %_21, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !5936, metadata !DIExpression()), !dbg !9433
  store ptr %_19, ptr %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i5, metadata !5940, metadata !DIExpression()), !dbg !9434
  store i64 %_21, ptr %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i4, metadata !5945, metadata !DIExpression()), !dbg !9436
  %8 = getelementptr inbounds i8, ptr %_19, i64 %_21, !dbg !9437
  store ptr %8, ptr %2, align 8, !dbg !9437
  %_3.i = load ptr, ptr %2, align 8, !dbg !9437, !noundef !45
; call alloc::vec::Vec<T,A>::len
  %_23 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %buf) #17, !dbg !9438
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr %_16, ptr %_3.i, i64 %_23) #17, !dbg !9439
; call alloc::vec::Vec<T,A>::len
  %buf_len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %buf) #17, !dbg !9440
  store i64 %buf_len, ptr %buf_len.dbg.spill, align 8, !dbg !9440
  call void @llvm.dbg.declare(metadata ptr %buf_len.dbg.spill, metadata !9409, metadata !DIExpression()), !dbg !9441
  %9 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %buf_len, i64 2), !dbg !9442
  %_31.0 = extractvalue { i64, i1 } %9, 0, !dbg !9442
  %_31.1 = extractvalue { i64, i1 } %9, 1, !dbg !9442
  %10 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !9442
  br i1 %10, label %panic, label %bb17, !dbg !9442

bb17:                                             ; preds = %bb9
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %buf, i64 %_31.0) #17, !dbg !9443
  %11 = load i64, ptr %m, align 8, !dbg !9444, !noundef !45
  %_32.0 = lshr i64 %11, 1, !dbg !9444
  store i64 %_32.0, ptr %m, align 8, !dbg !9444
  br label %bb8, !dbg !9424

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.3, i64 33, ptr align 8 @alloc_4e9b3f228f56f0da67519e4729f2ed74) #18, !dbg !9442
  unreachable, !dbg !9442

bb22:                                             ; preds = %bb20
  store i64 %_37.0, ptr %rem_len.dbg.spill, align 8, !dbg !9427
  call void @llvm.dbg.declare(metadata ptr %rem_len.dbg.spill, metadata !9411, metadata !DIExpression()), !dbg !9445
  %_38 = icmp ugt i64 %_37.0, 0, !dbg !9446
  br i1 %_38, label %bb23, label %bb29, !dbg !9446

panic1:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_e89e95604460e16501483f537c64bb3f) #18, !dbg !9427
  unreachable, !dbg !9427

bb29:                                             ; preds = %bb23, %bb22
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %buf, i64 24, i1 false), !dbg !9447
  br label %bb30, !dbg !9448

bb23:                                             ; preds = %bb22
; call alloc::vec::Vec<T,A>::as_ptr
  %_40 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf37ccd2c9d3e0ec9E"(ptr align 8 %buf) #17, !dbg !9449
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_43 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %buf) #17, !dbg !9450
; call alloc::vec::Vec<T,A>::len
  %_45 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %buf) #17, !dbg !9451
  store ptr %_43, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5931, metadata !DIExpression()), !dbg !9452
  store i64 %_45, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5936, metadata !DIExpression()), !dbg !9454
  store ptr %_43, ptr %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i7, metadata !5940, metadata !DIExpression()), !dbg !9455
  store i64 %_45, ptr %count.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i6, metadata !5945, metadata !DIExpression()), !dbg !9457
  %12 = getelementptr inbounds i8, ptr %_43, i64 %_45, !dbg !9458
  store ptr %12, ptr %1, align 8, !dbg !9458
  %_3.i8 = load ptr, ptr %1, align 8, !dbg !9458, !noundef !45
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr %_40, ptr %_3.i8, i64 %_37.0) #17, !dbg !9459
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %buf, i64 %capacity) #17, !dbg !9460
  br label %bb29, !dbg !9460

bb30:                                             ; preds = %bb1, %bb29
  ret void, !dbg !9448
}

; <[T] as alloc::slice::SpecCloneIntoVec<T,A>>::clone_into
; Function Attrs: noredzone nounwind
define void @"_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17hcd6eb75fe5a5dc28E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %target) unnamed_addr #0 !dbg !9461 {
start:
  %target.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9466, metadata !DIExpression()), !dbg !9468
  store ptr %target, ptr %target.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %target.dbg.spill, metadata !9467, metadata !DIExpression()), !dbg !9469
; call alloc::vec::Vec<T,A>::clear
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17h1fc4271a57ab8d97E"(ptr align 8 %target) #17, !dbg !9470
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hd7661a6f6c782598E"(ptr align 8 %target, ptr align 1 %self.0, i64 %self.1) #17, !dbg !9471
  ret void, !dbg !9472
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17h3ef3e882c1497bf2E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !9473 {
start:
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9476, metadata !DIExpression()), !dbg !9477
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17haa914a405ffc8f90E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %self.0, i64 %self.1) #17, !dbg !9478
  ret void, !dbg !9479
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::clone_into
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17hcc2d5aabbc61457cE"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %target) unnamed_addr #0 !dbg !9480 {
start:
  %target.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9482, metadata !DIExpression()), !dbg !9484
  store ptr %target, ptr %target.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %target.dbg.spill, metadata !9483, metadata !DIExpression()), !dbg !9485
; call <[T] as alloc::slice::SpecCloneIntoVec<T,A>>::clone_into
  call void @"_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17hcd6eb75fe5a5dc28E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %target) #17, !dbg !9486
  ret void, !dbg !9487
}

; alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17h9031218db36dc1feE"(ptr align 8 %self) unnamed_addr #1 !dbg !9488 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9494, metadata !DIExpression()), !dbg !9495
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %0 = call { ptr, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h713c9c4b2ed90497E"(ptr align 8 %self, ptr align 8 @alloc_a63230b74baa92f23482115faa65bbaf) #17, !dbg !9496
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !9496
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !9496
  %1 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !9497
  %2 = insertvalue { ptr, i64 } %1, i64 %_2.1, 1, !dbg !9497
  ret { ptr, i64 } %2, !dbg !9497
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hc87e400e78bb2238E"(ptr sret(%"string::String") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !9498 {
start:
  %1 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_2 = alloca %"vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9503, metadata !DIExpression()), !dbg !9504
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !9505
  store ptr %self.0, ptr %1, align 8, !dbg !9507
  %5 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !9507
  store i64 %self.1, ptr %5, align 8, !dbg !9507
  %6 = load ptr, ptr %1, align 8, !dbg !9507, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !9507
  %8 = load i64, ptr %7, align 8, !dbg !9507, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !9508
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !9508
  %_4.0 = extractvalue { ptr, i64 } %10, 0, !dbg !9509
  %_4.1 = extractvalue { ptr, i64 } %10, 1, !dbg !9509
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17h3ef3e882c1497bf2E"(ptr sret(%"vec::Vec<u8>") %_2, ptr align 1 %_4.0, i64 %_4.1) #17, !dbg !9509
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h0d1ccbe91e1009f8E(ptr sret(%"string::String") %0, ptr %_2) #17, !dbg !9510
  ret void, !dbg !9511
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::clone_into
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$10clone_into17hf47ff55e9ffcf660E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %target) unnamed_addr #0 !dbg !9512 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %target.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_11 = alloca %"vec::Vec<u8>", align 8
  %_10 = alloca %"string::String", align 8
  %_4 = alloca %"string::String", align 8
  %b = alloca %"vec::Vec<u8>", align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9516, metadata !DIExpression()), !dbg !9520
  store ptr %target, ptr %target.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %target.dbg.spill, metadata !9517, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.declare(metadata ptr %b, metadata !9518, metadata !DIExpression()), !dbg !9522
; call core::mem::take
  call void @_ZN4core3mem4take17hd1fe3ff22092d316E(ptr sret(%"string::String") %_4, ptr align 8 %target) #17, !dbg !9523
; call alloc::string::String::into_bytes
  call void @_ZN5alloc6string6String10into_bytes17hf585513613b975e3E(ptr sret(%"vec::Vec<u8>") %b, ptr %_4) #17, !dbg !9523
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !9524
  store ptr %self.0, ptr %0, align 8, !dbg !9526
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9526
  store i64 %self.1, ptr %4, align 8, !dbg !9526
  %5 = load ptr, ptr %0, align 8, !dbg !9526, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9526
  %7 = load i64, ptr %6, align 8, !dbg !9526, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !9527
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !9527
  %_8.0 = extractvalue { ptr, i64 } %9, 0, !dbg !9528
  %_8.1 = extractvalue { ptr, i64 } %9, 1, !dbg !9528
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::clone_into
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17hcc2d5aabbc61457cE"(ptr align 1 %_8.0, i64 %_8.1, ptr align 8 %b) #17, !dbg !9528
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11, ptr align 8 %b, i64 24, i1 false), !dbg !9529
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h0d1ccbe91e1009f8E(ptr sret(%"string::String") %_10, ptr %_11) #17, !dbg !9530
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2254349ab55352cdE"(ptr %target) #17, !dbg !9531
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %target, ptr align 8 %_10, i64 24, i1 false), !dbg !9531
  ret void, !dbg !9532
}

; alloc::str::<impl str>::to_lowercase
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase17h19d3621dd733411dE"(ptr sret(%"string::String") %s, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !9533 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %a.dbg.spill8 = alloca i32, align 4
  %b.dbg.spill6 = alloca i32, align 4
  %a.dbg.spill4 = alloca i32, align 4
  %c.dbg.spill2 = alloca i32, align 4
  %b.dbg.spill = alloca i32, align 4
  %a.dbg.spill = alloca i32, align 4
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %rest.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_26 = alloca [3 x i32], align 4
  %_19 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::str::iter::CharIndices<'_>", align 8
  %_12 = alloca %"core::str::iter::CharIndices<'_>", align 8
  %_11 = alloca %"core::str::iter::CharIndices<'_>", align 8
  %_10 = alloca %"vec::Vec<u8>", align 8
  %_7 = alloca i64, align 8
  %out = alloca %"vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata ptr %s, metadata !9540, metadata !DIExpression()), !dbg !9556
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9535, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.declare(metadata ptr %out, metadata !9536, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !9542, metadata !DIExpression()), !dbg !9559
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !9560
  store ptr %self.0, ptr %0, align 8, !dbg !9562
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9562
  store i64 %self.1, ptr %4, align 8, !dbg !9562
  %5 = load ptr, ptr %0, align 8, !dbg !9562, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9562
  %7 = load i64, ptr %6, align 8, !dbg !9562, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !9563
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !9563
  %_4.0 = extractvalue { ptr, i64 } %9, 0, !dbg !9564
  %_4.1 = extractvalue { ptr, i64 } %9, 1, !dbg !9564
; call alloc::str::convert_while_ascii
  call void @_ZN5alloc3str19convert_while_ascii17hf67c64255febbd76E(ptr sret(%"vec::Vec<u8>") %out, ptr align 1 %_4.0, i64 %_4.1, ptr @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_lowercase17h47f12909484410b6E") #17, !dbg !9565
; call alloc::vec::Vec<T,A>::len
  %_8 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %out) #17, !dbg !9566
  store i64 %_8, ptr %_7, align 8, !dbg !9566
  %10 = load i64, ptr %_7, align 8, !dbg !9567, !noundef !45
; call core::str::<impl str>::get_unchecked
  %11 = call { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17hfe802aaf3da9e611E"(ptr align 1 %self.0, i64 %self.1, i64 %10) #17, !dbg !9567
  %rest.0 = extractvalue { ptr, i64 } %11, 0, !dbg !9567
  %rest.1 = extractvalue { ptr, i64 } %11, 1, !dbg !9567
  %12 = getelementptr inbounds { ptr, i64 }, ptr %rest.dbg.spill, i32 0, i32 0, !dbg !9567
  store ptr %rest.0, ptr %12, align 8, !dbg !9567
  %13 = getelementptr inbounds { ptr, i64 }, ptr %rest.dbg.spill, i32 0, i32 1, !dbg !9567
  store i64 %rest.1, ptr %13, align 8, !dbg !9567
  call void @llvm.dbg.declare(metadata ptr %rest.dbg.spill, metadata !9538, metadata !DIExpression()), !dbg !9568
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_10, ptr align 8 %out, i64 24, i1 false), !dbg !9569
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h0d1ccbe91e1009f8E(ptr sret(%"string::String") %s, ptr %_10) #17, !dbg !9570
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %14 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h8c8952821cf88af3E"(ptr align 1 %rest.0, i64 %rest.1, ptr align 8 @alloc_ff3207273e189921ff430500eba35823) #17, !dbg !9571
  %_14.0 = extractvalue { ptr, i64 } %14, 0, !dbg !9571
  %_14.1 = extractvalue { ptr, i64 } %14, 1, !dbg !9571
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hf9419be13ac38af9E"(ptr sret(%"core::str::iter::CharIndices<'_>") %_12, ptr align 1 %_14.0, i64 %_14.1) #17, !dbg !9571
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0eb11e0acbc642edE"(ptr sret(%"core::str::iter::CharIndices<'_>") %_11, ptr %_12) #17, !dbg !9571
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_11, i64 24, i1 false), !dbg !9571
  br label %bb9, !dbg !9572

bb9:                                              ; preds = %bb14, %bb19, %bb20, %bb18, %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %15 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8e38e1f4f1275e75E"(ptr align 8 %iter) #17, !dbg !9559
  store { i64, i32 } %15, ptr %_19, align 8, !dbg !9559
  %16 = getelementptr inbounds { i64, i32 }, ptr %_19, i32 0, i32 1, !dbg !9559
  %17 = load i32, ptr %16, align 8, !dbg !9559, !range !527, !noundef !45
  %18 = icmp eq i32 %17, 1114112, !dbg !9559
  %_21 = select i1 %18, i64 0, i64 1, !dbg !9559
  %19 = icmp eq i64 %_21, 0, !dbg !9559
  br i1 %19, label %bb13, label %bb11, !dbg !9559

bb13:                                             ; preds = %bb9
  ret void, !dbg !9573

bb11:                                             ; preds = %bb9
  %i = load i64, ptr %_19, align 8, !dbg !9574, !noundef !45
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !9574
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !9544, metadata !DIExpression()), !dbg !9575
  %20 = getelementptr inbounds { i64, i32 }, ptr %_19, i32 0, i32 1, !dbg !9576
  %c = load i32, ptr %20, align 8, !dbg !9576, !range !523, !noundef !45
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !9576
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !9546, metadata !DIExpression()), !dbg !9577
  %21 = icmp eq i32 %c, 931, !dbg !9578
  br i1 %21, label %bb14, label %bb15, !dbg !9578

bb12:                                             ; No predecessors!
  unreachable, !dbg !9559

bb14:                                             ; preds = %bb11
; call alloc::str::<impl str>::to_lowercase::map_uppercase_sigma
  call void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase19map_uppercase_sigma17h7f02a555d1985f07E"(ptr align 1 %rest.0, i64 %rest.1, i64 %i, ptr align 8 %s) #17, !dbg !9579
  br label %bb9, !dbg !9579

bb15:                                             ; preds = %bb11
; call core::unicode::unicode_data::conversions::to_lower
  call void @_ZN4core7unicode12unicode_data11conversions8to_lower17h41216f9df913826bE(ptr sret([3 x i32]) %_26, i32 %c) #17, !dbg !9580
  %22 = getelementptr inbounds [3 x i32], ptr %_26, i64 0, i64 1, !dbg !9581
  %23 = load i32, ptr %22, align 4, !dbg !9581, !range !523, !noundef !45
  %24 = icmp eq i32 %23, 0, !dbg !9581
  br i1 %24, label %bb19, label %bb17, !dbg !9581

bb19:                                             ; preds = %bb15
  %25 = getelementptr inbounds [3 x i32], ptr %_26, i64 0, i64 0, !dbg !9582
  %a7 = load i32, ptr %25, align 4, !dbg !9582, !range !523, !noundef !45
  store i32 %a7, ptr %a.dbg.spill8, align 4, !dbg !9582
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill8, metadata !9547, metadata !DIExpression()), !dbg !9583
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %a7) #17, !dbg !9584
  br label %bb9, !dbg !9584

bb17:                                             ; preds = %bb15
  %26 = getelementptr inbounds [3 x i32], ptr %_26, i64 0, i64 2, !dbg !9581
  %27 = load i32, ptr %26, align 4, !dbg !9581, !range !523, !noundef !45
  %28 = icmp eq i32 %27, 0, !dbg !9581
  br i1 %28, label %bb20, label %bb18, !dbg !9581

bb20:                                             ; preds = %bb17
  %29 = getelementptr inbounds [3 x i32], ptr %_26, i64 0, i64 0, !dbg !9585
  %a3 = load i32, ptr %29, align 4, !dbg !9585, !range !523, !noundef !45
  store i32 %a3, ptr %a.dbg.spill4, align 4, !dbg !9585
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill4, metadata !9549, metadata !DIExpression()), !dbg !9586
  %30 = getelementptr inbounds [3 x i32], ptr %_26, i64 0, i64 1, !dbg !9587
  %b5 = load i32, ptr %30, align 4, !dbg !9587, !range !523, !noundef !45
  store i32 %b5, ptr %b.dbg.spill6, align 4, !dbg !9587
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill6, metadata !9551, metadata !DIExpression()), !dbg !9588
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %a3) #17, !dbg !9589
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %b5) #17, !dbg !9590
  br label %bb9, !dbg !9590

bb18:                                             ; preds = %bb17
  %31 = getelementptr inbounds [3 x i32], ptr %_26, i64 0, i64 0, !dbg !9591
  %a = load i32, ptr %31, align 4, !dbg !9591, !range !523, !noundef !45
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !9591
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !9552, metadata !DIExpression()), !dbg !9592
  %32 = getelementptr inbounds [3 x i32], ptr %_26, i64 0, i64 1, !dbg !9593
  %b = load i32, ptr %32, align 4, !dbg !9593, !range !523, !noundef !45
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !9593
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !9554, metadata !DIExpression()), !dbg !9594
  %33 = getelementptr inbounds [3 x i32], ptr %_26, i64 0, i64 2, !dbg !9595
  %c1 = load i32, ptr %33, align 4, !dbg !9595, !range !523, !noundef !45
  store i32 %c1, ptr %c.dbg.spill2, align 4, !dbg !9595
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill2, metadata !9555, metadata !DIExpression()), !dbg !9596
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %a) #17, !dbg !9597
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %b) #17, !dbg !9598
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %c1) #17, !dbg !9599
  br label %bb9, !dbg !9599
}

; alloc::str::<impl str>::to_lowercase::map_uppercase_sigma
; Function Attrs: noredzone nounwind
define internal void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase19map_uppercase_sigma17h7f02a555d1985f07E"(ptr align 1 %from.0, i64 %from.1, i64 %i, ptr align 8 %to) unnamed_addr #0 !dbg !9600 {
start:
  %to.dbg.spill = alloca ptr, align 8
  %i.dbg.spill = alloca i64, align 8
  %from.dbg.spill = alloca { ptr, i64 }, align 8
  %_24 = alloca { ptr, i64 }, align 8
  %_20 = alloca i64, align 8
  %_14 = alloca i64, align 8
  %is_word_final = alloca i8, align 1
  %0 = getelementptr inbounds { ptr, i64 }, ptr %from.dbg.spill, i32 0, i32 0
  store ptr %from.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %from.dbg.spill, i32 0, i32 1
  store i64 %from.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %from.dbg.spill, metadata !9604, metadata !DIExpression()), !dbg !9609
  store i64 %i, ptr %i.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !9605, metadata !DIExpression()), !dbg !9610
  store ptr %to, ptr %to.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %to.dbg.spill, metadata !9606, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.declare(metadata ptr %is_word_final, metadata !9607, metadata !DIExpression()), !dbg !9612
; call core::char::methods::<impl char>::len_utf8
  %_6 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hc910add14b1dec2eE"(i32 931) #17, !dbg !9613
  %_5 = icmp eq i64 %_6, 2, !dbg !9613
  %_4 = xor i1 %_5, true, !dbg !9614
  br i1 %_4, label %bb2, label %bb3, !dbg !9614

bb3:                                              ; preds = %start
  store i64 %i, ptr %_14, align 8, !dbg !9615
  %2 = load i64, ptr %_14, align 8, !dbg !9616, !noundef !45
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %3 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h22fa185c85845d07E"(ptr align 1 %from.0, i64 %from.1, i64 %2, ptr align 8 @alloc_bf38d0eb53f1bcc3766b65c9c2984b81) #17, !dbg !9616
  %_13.0 = extractvalue { ptr, i64 } %3, 0, !dbg !9616
  %_13.1 = extractvalue { ptr, i64 } %3, 1, !dbg !9616
; call core::str::<impl str>::chars
  %4 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hda4000287f8bce11E"(ptr align 1 %_13.0, i64 %_13.1) #17, !dbg !9616
  %_11.0 = extractvalue { ptr, ptr } %4, 0, !dbg !9616
  %_11.1 = extractvalue { ptr, ptr } %4, 1, !dbg !9616
; call core::iter::traits::iterator::Iterator::rev
  %5 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3rev17h1e7472311e1e6920E(ptr %_11.0, ptr %_11.1) #17, !dbg !9616
  %_10.0 = extractvalue { ptr, ptr } %5, 0, !dbg !9616
  %_10.1 = extractvalue { ptr, ptr } %5, 1, !dbg !9616
; call alloc::str::<impl str>::to_lowercase::case_ignoreable_then_cased
  %_9 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased17hd09d5a7f46b24907E"(ptr %_10.0, ptr %_10.1) #17, !dbg !9617
  br i1 %_9, label %bb5, label %bb4, !dbg !9617

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_797840ed541c959df2e77a56b76cfb15, i64 40, ptr align 8 @alloc_b1a001e9d5f2d059c3feaa2c9220b939) #18, !dbg !9614
  unreachable, !dbg !9614

bb4:                                              ; preds = %bb3
  store i8 0, ptr %is_word_final, align 1, !dbg !9617
  br label %bb6, !dbg !9617

bb5:                                              ; preds = %bb3
  %6 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 2), !dbg !9618
  %_22.0 = extractvalue { i64, i1 } %6, 0, !dbg !9618
  %_22.1 = extractvalue { i64, i1 } %6, 1, !dbg !9618
  %7 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !9618
  br i1 %7, label %panic, label %bb11, !dbg !9618

bb11:                                             ; preds = %bb5
  store i64 %_22.0, ptr %_20, align 8, !dbg !9618
  %8 = load i64, ptr %_20, align 8, !dbg !9619, !noundef !45
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %9 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h8c2af9ccc04a1440E"(ptr align 1 %from.0, i64 %from.1, i64 %8, ptr align 8 @alloc_799b91a0ea3abe5e1030c8fbd3e9682c) #17, !dbg !9619
  %_19.0 = extractvalue { ptr, i64 } %9, 0, !dbg !9619
  %_19.1 = extractvalue { ptr, i64 } %9, 1, !dbg !9619
; call core::str::<impl str>::chars
  %10 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hda4000287f8bce11E"(ptr align 1 %_19.0, i64 %_19.1) #17, !dbg !9619
  %_17.0 = extractvalue { ptr, ptr } %10, 0, !dbg !9619
  %_17.1 = extractvalue { ptr, ptr } %10, 1, !dbg !9619
; call alloc::str::<impl str>::to_lowercase::case_ignoreable_then_cased
  %_16 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased17h29c46d21efdde69fE"(ptr %_17.0, ptr %_17.1) #17, !dbg !9620
  %_15 = xor i1 %_16, true, !dbg !9621
  %11 = zext i1 %_15 to i8, !dbg !9617
  store i8 %11, ptr %is_word_final, align 1, !dbg !9617
  br label %bb6, !dbg !9617

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_f263bbb188aa42b59bf2b2c0d48c5a8e) #18, !dbg !9618
  unreachable, !dbg !9618

bb6:                                              ; preds = %bb4, %bb11
  %12 = load i8, ptr %is_word_final, align 1, !dbg !9622, !range !673, !noundef !45
  %_25 = trunc i8 %12 to i1, !dbg !9622
  br i1 %_25, label %bb15, label %bb16, !dbg !9622

bb16:                                             ; preds = %bb6
  %13 = getelementptr inbounds { ptr, i64 }, ptr %_24, i32 0, i32 0, !dbg !9623
  store ptr @alloc_f1aadf2fefd80bee2f8993682f83477f, ptr %13, align 8, !dbg !9623
  %14 = getelementptr inbounds { ptr, i64 }, ptr %_24, i32 0, i32 1, !dbg !9623
  store i64 2, ptr %14, align 8, !dbg !9623
  br label %bb17, !dbg !9624

bb15:                                             ; preds = %bb6
  %15 = getelementptr inbounds { ptr, i64 }, ptr %_24, i32 0, i32 0, !dbg !9625
  store ptr @alloc_0a6f3b2c3782af21135dace948aa7901, ptr %15, align 8, !dbg !9625
  %16 = getelementptr inbounds { ptr, i64 }, ptr %_24, i32 0, i32 1, !dbg !9625
  store i64 2, ptr %16, align 8, !dbg !9625
  br label %bb17, !dbg !9624

bb17:                                             ; preds = %bb16, %bb15
  %17 = getelementptr inbounds { ptr, i64 }, ptr %_24, i32 0, i32 0, !dbg !9626
  %18 = load ptr, ptr %17, align 8, !dbg !9626, !nonnull !45, !align !643, !noundef !45
  %19 = getelementptr inbounds { ptr, i64 }, ptr %_24, i32 0, i32 1, !dbg !9626
  %20 = load i64, ptr %19, align 8, !dbg !9626, !noundef !45
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %to, ptr align 1 %18, i64 %20) #17, !dbg !9626
  ret void, !dbg !9627
}

; alloc::str::<impl str>::to_lowercase::case_ignoreable_then_cased
; Function Attrs: noredzone nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased17h29c46d21efdde69fE"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !9628 {
start:
  %c.dbg.spill = alloca i32, align 4
  %iter.dbg.spill = alloca { ptr, ptr }, align 8
  %_4 = alloca %"core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars<'_>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>", align 8
  %_2 = alloca i32, align 4
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 1
  store ptr %iter.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !9632, metadata !DIExpression()), !dbg !9636
; call core::iter::traits::iterator::Iterator::skip_while
  call void @_ZN4core4iter6traits8iterator8Iterator10skip_while17he6a65d8ddc7dbbbaE(ptr sret(%"core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars<'_>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>") %_4, ptr %iter.0, ptr %iter.1) #17, !dbg !9637
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
  %3 = call i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5c77ee3a77e52598E"(ptr align 8 %_4) #17, !dbg !9637, !range !527
  store i32 %3, ptr %_2, align 4, !dbg !9637
  %4 = load i32, ptr %_2, align 4, !dbg !9637, !range !527, !noundef !45
  %5 = icmp eq i32 %4, 1114112, !dbg !9637
  %_6 = select i1 %5, i64 0, i64 1, !dbg !9637
  %6 = icmp eq i64 %_6, 0, !dbg !9638
  br i1 %6, label %bb3, label %bb5, !dbg !9638

bb3:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !9639
  br label %bb6, !dbg !9639

bb5:                                              ; preds = %start
  %c = load i32, ptr %_2, align 4, !dbg !9640, !range !523, !noundef !45
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !9640
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !9633, metadata !DIExpression()), !dbg !9641
; call core::unicode::unicode_data::cased::lookup
  %7 = call zeroext i1 @_ZN4core7unicode12unicode_data5cased6lookup17hd9a8ea58d16e441aE(i32 %c) #17, !dbg !9642
  %8 = zext i1 %7 to i8, !dbg !9642
  store i8 %8, ptr %0, align 1, !dbg !9642
  br label %bb6, !dbg !9642

bb4:                                              ; No predecessors!
  unreachable, !dbg !9637

bb6:                                              ; preds = %bb3, %bb5
  %9 = load i8, ptr %0, align 1, !dbg !9643, !range !673, !noundef !45
  %10 = trunc i8 %9 to i1, !dbg !9643
  ret i1 %10, !dbg !9643
}

; alloc::str::<impl str>::to_lowercase::case_ignoreable_then_cased
; Function Attrs: noredzone nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased17hd09d5a7f46b24907E"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !9644 {
start:
  %c.dbg.spill = alloca i32, align 4
  %iter.dbg.spill = alloca { ptr, ptr }, align 8
  %_4 = alloca %"core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars<'_>>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>", align 8
  %_2 = alloca i32, align 4
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %iter.dbg.spill, i32 0, i32 1
  store ptr %iter.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !9648, metadata !DIExpression()), !dbg !9652
; call core::iter::traits::iterator::Iterator::skip_while
  call void @_ZN4core4iter6traits8iterator8Iterator10skip_while17he62a34b0e4e01a5eE(ptr sret(%"core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars<'_>>, [closure@/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs:414:35: 414:39]>") %_4, ptr %iter.0, ptr %iter.1) #17, !dbg !9653
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
  %3 = call i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4567bd3a028715ceE"(ptr align 8 %_4) #17, !dbg !9653, !range !527
  store i32 %3, ptr %_2, align 4, !dbg !9653
  %4 = load i32, ptr %_2, align 4, !dbg !9653, !range !527, !noundef !45
  %5 = icmp eq i32 %4, 1114112, !dbg !9653
  %_6 = select i1 %5, i64 0, i64 1, !dbg !9653
  %6 = icmp eq i64 %_6, 0, !dbg !9654
  br i1 %6, label %bb3, label %bb5, !dbg !9654

bb3:                                              ; preds = %start
  store i8 0, ptr %0, align 1, !dbg !9655
  br label %bb6, !dbg !9655

bb5:                                              ; preds = %start
  %c = load i32, ptr %_2, align 4, !dbg !9656, !range !523, !noundef !45
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !9656
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !9649, metadata !DIExpression()), !dbg !9657
; call core::unicode::unicode_data::cased::lookup
  %7 = call zeroext i1 @_ZN4core7unicode12unicode_data5cased6lookup17hd9a8ea58d16e441aE(i32 %c) #17, !dbg !9658
  %8 = zext i1 %7 to i8, !dbg !9658
  store i8 %8, ptr %0, align 1, !dbg !9658
  br label %bb6, !dbg !9658

bb4:                                              ; No predecessors!
  unreachable, !dbg !9653

bb6:                                              ; preds = %bb3, %bb5
  %9 = load i8, ptr %0, align 1, !dbg !9659, !range !673, !noundef !45
  %10 = trunc i8 %9 to i1, !dbg !9659
  ret i1 %10, !dbg !9659
}

; alloc::str::<impl str>::to_lowercase::case_ignoreable_then_cased::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17hb3211b0d5234fad3E"(ptr align 1 %_1, ptr align 4 %_2) unnamed_addr #1 !dbg !9660 {
start:
  %c.dbg.spill = alloca i32, align 4
  %_2.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !9666, metadata !DIExpression()), !dbg !9668
  store ptr %_2, ptr %_2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !9667, metadata !DIExpression()), !dbg !9669
  %c = load i32, ptr %_2, align 4, !dbg !9670, !range !523, !noundef !45
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !9670
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !9664, metadata !DIExpression()), !dbg !9671
; call core::unicode::unicode_data::case_ignorable::lookup
  %0 = call zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable6lookup17hbb53c84847493331E(i32 %c) #17, !dbg !9672
  ret i1 %0, !dbg !9673
}

; alloc::str::<impl str>::to_lowercase::case_ignoreable_then_cased::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17hb4b2b00fec2f862cE"(ptr align 1 %_1, ptr align 4 %_2) unnamed_addr #1 !dbg !9674 {
start:
  %c.dbg.spill = alloca i32, align 4
  %_2.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !9680, metadata !DIExpression()), !dbg !9682
  store ptr %_2, ptr %_2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !9681, metadata !DIExpression()), !dbg !9683
  %c = load i32, ptr %_2, align 4, !dbg !9684, !range !523, !noundef !45
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !9684
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !9678, metadata !DIExpression()), !dbg !9685
; call core::unicode::unicode_data::case_ignorable::lookup
  %0 = call zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable6lookup17hbb53c84847493331E(i32 %c) #17, !dbg !9686
  ret i1 %0, !dbg !9687
}

; alloc::str::<impl str>::to_uppercase
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_uppercase17h33d1cf69e6588c20E"(ptr sret(%"string::String") %s, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !9688 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %a.dbg.spill8 = alloca i32, align 4
  %b.dbg.spill6 = alloca i32, align 4
  %a.dbg.spill4 = alloca i32, align 4
  %c.dbg.spill2 = alloca i32, align 4
  %b.dbg.spill = alloca i32, align 4
  %a.dbg.spill = alloca i32, align 4
  %c.dbg.spill = alloca i32, align 4
  %rest.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_20 = alloca [3 x i32], align 4
  %_16 = alloca i32, align 4
  %iter = alloca { ptr, ptr }, align 8
  %_10 = alloca %"vec::Vec<u8>", align 8
  %_7 = alloca i64, align 8
  %out = alloca %"vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata ptr %s, metadata !9695, metadata !DIExpression()), !dbg !9710
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9690, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.declare(metadata ptr %out, metadata !9691, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !9697, metadata !DIExpression()), !dbg !9713
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !9714
  store ptr %self.0, ptr %0, align 8, !dbg !9716
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9716
  store i64 %self.1, ptr %4, align 8, !dbg !9716
  %5 = load ptr, ptr %0, align 8, !dbg !9716, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !9716
  %7 = load i64, ptr %6, align 8, !dbg !9716, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !9717
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !9717
  %_4.0 = extractvalue { ptr, i64 } %9, 0, !dbg !9718
  %_4.1 = extractvalue { ptr, i64 } %9, 1, !dbg !9718
; call alloc::str::convert_while_ascii
  call void @_ZN5alloc3str19convert_while_ascii17hf67c64255febbd76E(ptr sret(%"vec::Vec<u8>") %out, ptr align 1 %_4.0, i64 %_4.1, ptr @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_uppercase17hde8896b3594cca7dE") #17, !dbg !9719
; call alloc::vec::Vec<T,A>::len
  %_8 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %out) #17, !dbg !9720
  store i64 %_8, ptr %_7, align 8, !dbg !9720
  %10 = load i64, ptr %_7, align 8, !dbg !9721, !noundef !45
; call core::str::<impl str>::get_unchecked
  %11 = call { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17hfe802aaf3da9e611E"(ptr align 1 %self.0, i64 %self.1, i64 %10) #17, !dbg !9721
  %rest.0 = extractvalue { ptr, i64 } %11, 0, !dbg !9721
  %rest.1 = extractvalue { ptr, i64 } %11, 1, !dbg !9721
  %12 = getelementptr inbounds { ptr, i64 }, ptr %rest.dbg.spill, i32 0, i32 0, !dbg !9721
  store ptr %rest.0, ptr %12, align 8, !dbg !9721
  %13 = getelementptr inbounds { ptr, i64 }, ptr %rest.dbg.spill, i32 0, i32 1, !dbg !9721
  store i64 %rest.1, ptr %13, align 8, !dbg !9721
  call void @llvm.dbg.declare(metadata ptr %rest.dbg.spill, metadata !9693, metadata !DIExpression()), !dbg !9722
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_10, ptr align 8 %out, i64 24, i1 false), !dbg !9723
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h0d1ccbe91e1009f8E(ptr sret(%"string::String") %s, ptr %_10) #17, !dbg !9724
; call core::str::<impl str>::chars
  %14 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hda4000287f8bce11E"(ptr align 1 %rest.0, i64 %rest.1) #17, !dbg !9725
  %_12.0 = extractvalue { ptr, ptr } %14, 0, !dbg !9725
  %_12.1 = extractvalue { ptr, ptr } %14, 1, !dbg !9725
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %15 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1354b1e70901b40cE"(ptr %_12.0, ptr %_12.1) #17, !dbg !9725
  %_11.0 = extractvalue { ptr, ptr } %15, 0, !dbg !9725
  %_11.1 = extractvalue { ptr, ptr } %15, 1, !dbg !9725
  %16 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 0, !dbg !9725
  store ptr %_11.0, ptr %16, align 8, !dbg !9725
  %17 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 1, !dbg !9725
  store ptr %_11.1, ptr %17, align 8, !dbg !9725
  br label %bb8, !dbg !9726

bb8:                                              ; preds = %bb16, %bb17, %bb15, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %18 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6b408331ae9cadd1E"(ptr align 8 %iter) #17, !dbg !9713, !range !527
  store i32 %18, ptr %_16, align 4, !dbg !9713
  %19 = load i32, ptr %_16, align 4, !dbg !9713, !range !527, !noundef !45
  %20 = icmp eq i32 %19, 1114112, !dbg !9713
  %_18 = select i1 %20, i64 0, i64 1, !dbg !9713
  %21 = icmp eq i64 %_18, 0, !dbg !9713
  br i1 %21, label %bb12, label %bb10, !dbg !9713

bb12:                                             ; preds = %bb8
  ret void, !dbg !9727

bb10:                                             ; preds = %bb8
  %c = load i32, ptr %_16, align 4, !dbg !9728, !range !523, !noundef !45
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !9728
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !9699, metadata !DIExpression()), !dbg !9729
; call core::unicode::unicode_data::conversions::to_upper
  call void @_ZN4core7unicode12unicode_data11conversions8to_upper17h2deb8d1259fb7f1bE(ptr sret([3 x i32]) %_20, i32 %c) #17, !dbg !9730
  %22 = getelementptr inbounds [3 x i32], ptr %_20, i64 0, i64 1, !dbg !9731
  %23 = load i32, ptr %22, align 4, !dbg !9731, !range !523, !noundef !45
  %24 = icmp eq i32 %23, 0, !dbg !9731
  br i1 %24, label %bb16, label %bb14, !dbg !9731

bb11:                                             ; No predecessors!
  unreachable, !dbg !9713

bb16:                                             ; preds = %bb10
  %25 = getelementptr inbounds [3 x i32], ptr %_20, i64 0, i64 0, !dbg !9732
  %a7 = load i32, ptr %25, align 4, !dbg !9732, !range !523, !noundef !45
  store i32 %a7, ptr %a.dbg.spill8, align 4, !dbg !9732
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill8, metadata !9701, metadata !DIExpression()), !dbg !9733
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %a7) #17, !dbg !9734
  br label %bb8, !dbg !9734

bb14:                                             ; preds = %bb10
  %26 = getelementptr inbounds [3 x i32], ptr %_20, i64 0, i64 2, !dbg !9731
  %27 = load i32, ptr %26, align 4, !dbg !9731, !range !523, !noundef !45
  %28 = icmp eq i32 %27, 0, !dbg !9731
  br i1 %28, label %bb17, label %bb15, !dbg !9731

bb17:                                             ; preds = %bb14
  %29 = getelementptr inbounds [3 x i32], ptr %_20, i64 0, i64 0, !dbg !9735
  %a3 = load i32, ptr %29, align 4, !dbg !9735, !range !523, !noundef !45
  store i32 %a3, ptr %a.dbg.spill4, align 4, !dbg !9735
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill4, metadata !9703, metadata !DIExpression()), !dbg !9736
  %30 = getelementptr inbounds [3 x i32], ptr %_20, i64 0, i64 1, !dbg !9737
  %b5 = load i32, ptr %30, align 4, !dbg !9737, !range !523, !noundef !45
  store i32 %b5, ptr %b.dbg.spill6, align 4, !dbg !9737
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill6, metadata !9705, metadata !DIExpression()), !dbg !9738
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %a3) #17, !dbg !9739
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %b5) #17, !dbg !9740
  br label %bb8, !dbg !9740

bb15:                                             ; preds = %bb14
  %31 = getelementptr inbounds [3 x i32], ptr %_20, i64 0, i64 0, !dbg !9741
  %a = load i32, ptr %31, align 4, !dbg !9741, !range !523, !noundef !45
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !9741
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !9706, metadata !DIExpression()), !dbg !9742
  %32 = getelementptr inbounds [3 x i32], ptr %_20, i64 0, i64 1, !dbg !9743
  %b = load i32, ptr %32, align 4, !dbg !9743, !range !523, !noundef !45
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !9743
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !9708, metadata !DIExpression()), !dbg !9744
  %33 = getelementptr inbounds [3 x i32], ptr %_20, i64 0, i64 2, !dbg !9745
  %c1 = load i32, ptr %33, align 4, !dbg !9745, !range !523, !noundef !45
  store i32 %c1, ptr %c.dbg.spill2, align 4, !dbg !9745
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill2, metadata !9709, metadata !DIExpression()), !dbg !9746
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %a) #17, !dbg !9747
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %b) #17, !dbg !9748
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %s, i32 %c1) #17, !dbg !9749
  br label %bb8, !dbg !9749
}

; alloc::str::<impl str>::into_string
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$11into_string17h483417f77ba6c10aE"(ptr sret(%"string::String") %0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !9750 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_3 = alloca %"vec::Vec<u8>", align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9754, metadata !DIExpression()), !dbg !9757
; call <alloc::boxed::Box<[u8],A> as core::convert::From<alloc::boxed::Box<str,A>>>::from
  %3 = call { ptr, i64 } @"_ZN121_$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$C$A$GT$$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$C$A$GT$$GT$$GT$4from17h40aa3eaff54c9056E"(ptr align 1 %self.0, i64 %self.1) #17, !dbg !9758
  %slice.0 = extractvalue { ptr, i64 } %3, 0, !dbg !9758
  %slice.1 = extractvalue { ptr, i64 } %3, 1, !dbg !9758
  %4 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0, !dbg !9758
  store ptr %slice.0, ptr %4, align 8, !dbg !9758
  %5 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1, !dbg !9758
  store i64 %slice.1, ptr %5, align 8, !dbg !9758
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !9755, metadata !DIExpression()), !dbg !9759
; call alloc::slice::<impl [T]>::into_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17hca163af921500948E"(ptr sret(%"vec::Vec<u8>") %_3, ptr align 1 %slice.0, i64 %slice.1) #17, !dbg !9760
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h0d1ccbe91e1009f8E(ptr sret(%"string::String") %0, ptr %_3) #17, !dbg !9761
  ret void, !dbg !9762
}

; alloc::str::<impl str>::repeat
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$6repeat17hb24d73c378c68989E"(ptr sret(%"string::String") %0, ptr align 1 %self.0, i64 %self.1, i64 %n) unnamed_addr #0 !dbg !9763 {
start:
  %1 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_3 = alloca %"vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 0
  store ptr %self.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !9767, metadata !DIExpression()), !dbg !9769
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !9768, metadata !DIExpression()), !dbg !9770
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !9771
  store ptr %self.0, ptr %1, align 8, !dbg !9773
  %5 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !9773
  store i64 %self.1, ptr %5, align 8, !dbg !9773
  %6 = load ptr, ptr %1, align 8, !dbg !9773, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !9773
  %8 = load i64, ptr %7, align 8, !dbg !9773, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !9774
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !9774
  %_5.0 = extractvalue { ptr, i64 } %10, 0, !dbg !9775
  %_5.1 = extractvalue { ptr, i64 } %10, 1, !dbg !9775
; call alloc::slice::<impl [T]>::repeat
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6repeat17hf1b491b3793cce54E"(ptr sret(%"vec::Vec<u8>") %_3, ptr align 1 %_5.0, i64 %_5.1, i64 %n) #17, !dbg !9775
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h0d1ccbe91e1009f8E(ptr sret(%"string::String") %0, ptr %_3) #17, !dbg !9776
  ret void, !dbg !9777
}

; alloc::str::from_boxed_utf8_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3str25from_boxed_utf8_unchecked17h968dd5804f8c5001E(ptr align 1 %v.0, i64 %v.1) unnamed_addr #1 !dbg !9778 {
start:
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !9782, metadata !DIExpression()), !dbg !9783
; call alloc::boxed::Box<T,A>::into_raw
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h330b78636c2bf5fbE"(ptr align 1 %v.0, i64 %v.1) #17, !dbg !9784
  %_3.0 = extractvalue { ptr, i64 } %2, 0, !dbg !9784
  %_3.1 = extractvalue { ptr, i64 } %2, 1, !dbg !9784
; call alloc::boxed::Box<T>::from_raw
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h74c1addf447a4215E"(ptr %_3.0, i64 %_3.1) #17, !dbg !9785
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !9785
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !9785
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !9786
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !9786
  ret { ptr, i64 } %7, !dbg !9786
}

; alloc::str::convert_while_ascii
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc3str19convert_while_ascii17hf67c64255febbd76E(ptr sret(%"vec::Vec<u8>") %out, ptr align 1 %b.0, i64 %b.1, ptr %convert) unnamed_addr #1 !dbg !9787 {
start:
  %self.dbg.spill.i12 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i10 = alloca i64, align 8
  %self.dbg.spill.i11 = alloca ptr, align 8
  %self.dbg.spill.i9 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %value.dbg.spill.i = alloca i8, align 1
  %1 = alloca i8, align 1
  %val.dbg.spill.i.i = alloca i8, align 1
  %2 = alloca i8, align 1
  %self.dbg.spill.i.i.i = alloca ptr, align 8
  %self.dbg.spill.i.i = alloca ptr, align 8
  %val.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i = alloca ptr, align 8
  %out.dbg.spill = alloca ptr, align 8
  %j.dbg.spill5 = alloca i64, align 8
  %j.dbg.spill = alloca i64, align 8
  %out_chunk.dbg.spill = alloca { ptr, i64 }, align 8
  %in_chunk.dbg.spill = alloca { ptr, i64 }, align 8
  %convert.dbg.spill = alloca ptr, align 8
  %b.dbg.spill = alloca { ptr, i64 }, align 8
  %_43 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_41 = alloca { i64, i64 }, align 8
  %_29 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_27 = alloca { i64, i64 }, align 8
  %bits = alloca i64, align 8
  %_20 = alloca { i64, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata ptr %out, metadata !9794, metadata !DIExpression()), !dbg !9814
  %3 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 0
  store ptr %b.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !9792, metadata !DIExpression()), !dbg !9815
  store ptr %convert, ptr %convert.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %convert.dbg.spill, metadata !9793, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.declare(metadata ptr %i, metadata !9796, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.declare(metadata ptr %bits, metadata !9802, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !9804, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !9808, metadata !DIExpression()), !dbg !9820
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h535def991fb56d8dE"(ptr sret(%"vec::Vec<u8>") %out, i64 %b.1) #17, !dbg !9821
  store i64 0, ptr %i, align 8, !dbg !9822
  br label %bb2, !dbg !9823

bb2:                                              ; preds = %bb30, %start
  %_7 = load i64, ptr %i, align 8, !dbg !9824, !noundef !45
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_7, i64 16), !dbg !9824
  %_8.0 = extractvalue { i64, i1 } %5, 0, !dbg !9824
  %_8.1 = extractvalue { i64, i1 } %5, 1, !dbg !9824
  %6 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !9824
  br i1 %6, label %panic, label %bb3, !dbg !9824

bb3:                                              ; preds = %bb2
  %_5 = icmp ule i64 %_8.0, %b.1, !dbg !9824
  br i1 %_5, label %bb4, label %bb31, !dbg !9824

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_d437df2fae4ef9f6fed9560495d60e40) #18, !dbg !9824
  unreachable, !dbg !9824

bb31:                                             ; preds = %bb15, %bb3
  %_58 = load i64, ptr %i, align 8, !dbg !9825, !noundef !45
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %out, i64 %_58) #17, !dbg !9826
  ret void, !dbg !9827

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !9828, !noundef !45
  %_14 = load i64, ptr %i, align 8, !dbg !9829, !noundef !45
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_14, i64 16), !dbg !9829
  %_15.0 = extractvalue { i64, i1 } %7, 0, !dbg !9829
  %_15.1 = extractvalue { i64, i1 } %7, 1, !dbg !9829
  %8 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !9829
  br i1 %8, label %panic2, label %bb5, !dbg !9829

bb5:                                              ; preds = %bb4
  store i64 %_12, ptr %_11, align 8, !dbg !9828
  %9 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !9828
  store i64 %_15.0, ptr %9, align 8, !dbg !9828
  %10 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 0, !dbg !9830
  %11 = load i64, ptr %10, align 8, !dbg !9830, !noundef !45
  %12 = getelementptr inbounds { i64, i64 }, ptr %_11, i32 0, i32 1, !dbg !9830
  %13 = load i64, ptr %12, align 8, !dbg !9830, !noundef !45
; call core::slice::<impl [T]>::get_unchecked
  %14 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h448cf53dade18bf3E"(ptr align 1 %b.0, i64 %b.1, i64 %11, i64 %13) #17, !dbg !9830
  %in_chunk.0 = extractvalue { ptr, i64 } %14, 0, !dbg !9830
  %in_chunk.1 = extractvalue { ptr, i64 } %14, 1, !dbg !9830
  %15 = getelementptr inbounds { ptr, i64 }, ptr %in_chunk.dbg.spill, i32 0, i32 0, !dbg !9830
  store ptr %in_chunk.0, ptr %15, align 8, !dbg !9830
  %16 = getelementptr inbounds { ptr, i64 }, ptr %in_chunk.dbg.spill, i32 0, i32 1, !dbg !9830
  store i64 %in_chunk.1, ptr %16, align 8, !dbg !9830
  call void @llvm.dbg.declare(metadata ptr %in_chunk.dbg.spill, metadata !9798, metadata !DIExpression()), !dbg !9831
; call alloc::vec::Vec<T,A>::spare_capacity_mut
  %17 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hbe96f52d533dc352E"(ptr align 8 %out) #17, !dbg !9832
  %_18.0 = extractvalue { ptr, i64 } %17, 0, !dbg !9832
  %_18.1 = extractvalue { ptr, i64 } %17, 1, !dbg !9832
  %_21 = load i64, ptr %i, align 8, !dbg !9833, !noundef !45
  %_23 = load i64, ptr %i, align 8, !dbg !9834, !noundef !45
  %18 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_23, i64 16), !dbg !9834
  %_24.0 = extractvalue { i64, i1 } %18, 0, !dbg !9834
  %_24.1 = extractvalue { i64, i1 } %18, 1, !dbg !9834
  %19 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !9834
  br i1 %19, label %panic3, label %bb8, !dbg !9834

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_7e08701eade7da3c360e001994f1aa3b) #18, !dbg !9829
  unreachable, !dbg !9829

bb8:                                              ; preds = %bb5
  store i64 %_21, ptr %_20, align 8, !dbg !9833
  %20 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !9833
  store i64 %_24.0, ptr %20, align 8, !dbg !9833
  %21 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 0, !dbg !9832
  %22 = load i64, ptr %21, align 8, !dbg !9832, !noundef !45
  %23 = getelementptr inbounds { i64, i64 }, ptr %_20, i32 0, i32 1, !dbg !9832
  %24 = load i64, ptr %23, align 8, !dbg !9832, !noundef !45
; call core::slice::<impl [T]>::get_unchecked_mut
  %25 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hb2446c878806870fE"(ptr align 1 %_18.0, i64 %_18.1, i64 %22, i64 %24) #17, !dbg !9832
  %out_chunk.0 = extractvalue { ptr, i64 } %25, 0, !dbg !9832
  %out_chunk.1 = extractvalue { ptr, i64 } %25, 1, !dbg !9832
  %26 = getelementptr inbounds { ptr, i64 }, ptr %out_chunk.dbg.spill, i32 0, i32 0, !dbg !9832
  store ptr %out_chunk.0, ptr %26, align 8, !dbg !9832
  %27 = getelementptr inbounds { ptr, i64 }, ptr %out_chunk.dbg.spill, i32 0, i32 1, !dbg !9832
  store i64 %out_chunk.1, ptr %27, align 8, !dbg !9832
  call void @llvm.dbg.declare(metadata ptr %out_chunk.dbg.spill, metadata !9800, metadata !DIExpression()), !dbg !9835
  store i64 0, ptr %bits, align 8, !dbg !9836
  store i64 0, ptr %_27, align 8, !dbg !9837
  %28 = getelementptr inbounds { i64, i64 }, ptr %_27, i32 0, i32 1, !dbg !9837
  store i64 2, ptr %28, align 8, !dbg !9837
  %29 = getelementptr inbounds { i64, i64 }, ptr %_27, i32 0, i32 0, !dbg !9837
  %30 = load i64, ptr %29, align 8, !dbg !9837, !noundef !45
  %31 = getelementptr inbounds { i64, i64 }, ptr %_27, i32 0, i32 1, !dbg !9837
  %32 = load i64, ptr %31, align 8, !dbg !9837, !noundef !45
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %33 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64 %30, i64 %32) #17, !dbg !9837
  %_26.0 = extractvalue { i64, i64 } %33, 0, !dbg !9837
  %_26.1 = extractvalue { i64, i64 } %33, 1, !dbg !9837
  %34 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 0, !dbg !9837
  store i64 %_26.0, ptr %34, align 8, !dbg !9837
  %35 = getelementptr inbounds { i64, i64 }, ptr %iter, i32 0, i32 1, !dbg !9837
  store i64 %_26.1, ptr %35, align 8, !dbg !9837
  br label %bb11, !dbg !9838

panic3:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_59b6c1bac895757c4e915f7838a90920) #18, !dbg !9834
  unreachable, !dbg !9834

bb11:                                             ; preds = %bb13, %bb8
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %36 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8 %iter) #17, !dbg !9819
  store { i64, i64 } %36, ptr %_29, align 8, !dbg !9819
  %_31 = load i64, ptr %_29, align 8, !dbg !9819, !range !1797, !noundef !45
  %37 = icmp eq i64 %_31, 0, !dbg !9819
  br i1 %37, label %bb15, label %bb13, !dbg !9819

bb15:                                             ; preds = %bb11
  %_39 = load i64, ptr %bits, align 8, !dbg !9839, !noundef !45
  %_38 = and i64 %_39, -9187201950435737472, !dbg !9839
  %38 = icmp eq i64 %_38, 0, !dbg !9839
  br i1 %38, label %bb20, label %bb31, !dbg !9839

bb13:                                             ; preds = %bb11
  %39 = getelementptr inbounds { i64, i64 }, ptr %_29, i32 0, i32 1, !dbg !9840
  %j = load i64, ptr %39, align 8, !dbg !9840, !noundef !45
  store i64 %j, ptr %j.dbg.spill, align 8, !dbg !9840
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !9806, metadata !DIExpression()), !dbg !9841
  store ptr %in_chunk.0, ptr %self.dbg.spill.i12, align 8
  %40 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i12, i32 0, i32 1
  store i64 %in_chunk.1, ptr %40, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !8291, metadata !DIExpression()), !dbg !9842
  store ptr %in_chunk.0, ptr %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !9844, metadata !DIExpression()), !dbg !9851
  store ptr %in_chunk.0, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !9853, metadata !DIExpression()), !dbg !9859
  store i64 %j, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !9858, metadata !DIExpression()), !dbg !9861
  store ptr %in_chunk.0, ptr %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !9862, metadata !DIExpression()), !dbg !9868
  store i64 %j, ptr %count.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i10, metadata !9867, metadata !DIExpression()), !dbg !9870
  %41 = getelementptr inbounds i64, ptr %in_chunk.0, i64 %j, !dbg !9871
  store ptr %41, ptr %0, align 8, !dbg !9871
  %42 = load ptr, ptr %0, align 8, !dbg !9871, !noundef !45
; call core::ptr::const_ptr::<impl *const T>::read_unaligned
  %_33 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$14read_unaligned17h22b8291af998f3b7E"(ptr %42) #17, !dbg !9872
  %43 = load i64, ptr %bits, align 8, !dbg !9873, !noundef !45
  %44 = or i64 %43, %_33, !dbg !9873
  store i64 %44, ptr %bits, align 8, !dbg !9873
  br label %bb11, !dbg !9838

bb14:                                             ; No predecessors!
  unreachable, !dbg !9819

bb20:                                             ; preds = %bb15
  store i64 0, ptr %_41, align 8, !dbg !9874
  %45 = getelementptr inbounds { i64, i64 }, ptr %_41, i32 0, i32 1, !dbg !9874
  store i64 16, ptr %45, align 8, !dbg !9874
  %46 = getelementptr inbounds { i64, i64 }, ptr %_41, i32 0, i32 0, !dbg !9874
  %47 = load i64, ptr %46, align 8, !dbg !9874, !noundef !45
  %48 = getelementptr inbounds { i64, i64 }, ptr %_41, i32 0, i32 1, !dbg !9874
  %49 = load i64, ptr %48, align 8, !dbg !9874, !noundef !45
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %50 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64 %47, i64 %49) #17, !dbg !9874
  %_40.0 = extractvalue { i64, i64 } %50, 0, !dbg !9874
  %_40.1 = extractvalue { i64, i64 } %50, 1, !dbg !9874
  %51 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 0, !dbg !9874
  store i64 %_40.0, ptr %51, align 8, !dbg !9874
  %52 = getelementptr inbounds { i64, i64 }, ptr %iter1, i32 0, i32 1, !dbg !9874
  store i64 %_40.1, ptr %52, align 8, !dbg !9874
  br label %bb22, !dbg !9875

bb22:                                             ; preds = %bb24, %bb20
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %53 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8 %iter1) #17, !dbg !9820
  store { i64, i64 } %53, ptr %_43, align 8, !dbg !9820
  %_45 = load i64, ptr %_43, align 8, !dbg !9820, !range !1797, !noundef !45
  %54 = icmp eq i64 %_45, 0, !dbg !9820
  br i1 %54, label %bb26, label %bb24, !dbg !9820

bb26:                                             ; preds = %bb22
  %55 = load i64, ptr %i, align 8, !dbg !9876, !noundef !45
  %56 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %55, i64 16), !dbg !9876
  %_55.0 = extractvalue { i64, i1 } %56, 0, !dbg !9876
  %_55.1 = extractvalue { i64, i1 } %56, 1, !dbg !9876
  %57 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !9876
  br i1 %57, label %panic7, label %bb30, !dbg !9876

bb24:                                             ; preds = %bb22
  %58 = getelementptr inbounds { i64, i64 }, ptr %_43, i32 0, i32 1, !dbg !9877
  %j4 = load i64, ptr %58, align 8, !dbg !9877, !noundef !45
  store i64 %j4, ptr %j.dbg.spill5, align 8, !dbg !9877
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill5, metadata !9810, metadata !DIExpression()), !dbg !9878
; call core::slice::<impl [T]>::get_unchecked_mut
  %out6 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h641f73b43a551cdeE"(ptr align 1 %out_chunk.0, i64 %out_chunk.1, i64 %j4) #17, !dbg !9879
  store ptr %out6, ptr %out.dbg.spill, align 8, !dbg !9879
  call void @llvm.dbg.declare(metadata ptr %out.dbg.spill, metadata !9812, metadata !DIExpression()), !dbg !9880
; call core::slice::<impl [T]>::get_unchecked
  %_53 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h52825668d8afc09aE"(ptr align 1 %in_chunk.0, i64 %in_chunk.1, i64 %j4) #17, !dbg !9881
  %_51 = call i8 %convert(ptr align 1 %_53) #17, !dbg !9882
  store ptr %out6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !9883, metadata !DIExpression()), !dbg !9889
  store i8 %_51, ptr %val.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill.i, metadata !9888, metadata !DIExpression()), !dbg !9891
  store i8 %_51, ptr %val.dbg.spill.i.i, align 1
  call void @llvm.dbg.declare(metadata ptr %val.dbg.spill.i.i, metadata !9892, metadata !DIExpression()), !dbg !9897
  store i8 %_51, ptr %value.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill.i, metadata !9899, metadata !DIExpression()), !dbg !9904
  store i8 %_51, ptr %1, align 1, !dbg !9906
  %59 = load i8, ptr %1, align 1, !dbg !9907, !noundef !45
  store i8 %59, ptr %2, align 1, !dbg !9908
  %60 = load i8, ptr %2, align 1, !dbg !9909
  store i8 %60, ptr %out6, align 1, !dbg !9910
  store ptr %out6, ptr %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i, metadata !9911, metadata !DIExpression()), !dbg !9916
  store ptr %out6, ptr %self.dbg.spill.i.i.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i.i.i, metadata !9918, metadata !DIExpression()), !dbg !9923
  br label %bb22, !dbg !9925

bb25:                                             ; No predecessors!
  unreachable, !dbg !9820

bb30:                                             ; preds = %bb26
  store i64 %_55.0, ptr %i, align 8, !dbg !9876
  br label %bb2, !dbg !9823

panic7:                                           ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_f4e258cab95dd3d2687370c891e78fd4) #18, !dbg !9876
  unreachable, !dbg !9876
}

; alloc::string::String::new
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String3new17h080425c511ce3982E(ptr sret(%"string::String") %0) unnamed_addr #1 !dbg !9926 {
start:
  %_1 = alloca %"vec::Vec<u8>", align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h9204411988406416E"(ptr sret(%"vec::Vec<u8>") %_1) #17, !dbg !9930
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_1, i64 24, i1 false), !dbg !9931
  ret void, !dbg !9932
}

; alloc::string::String::with_capacity
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String13with_capacity17h7f86b8a278fea577E(ptr sret(%"string::String") %0, i64 %capacity) unnamed_addr #1 !dbg !9933 {
start:
  %capacity.dbg.spill = alloca i64, align 8
  %_2 = alloca %"vec::Vec<u8>", align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !9937, metadata !DIExpression()), !dbg !9938
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h535def991fb56d8dE"(ptr sret(%"vec::Vec<u8>") %_2, i64 %capacity) #17, !dbg !9939
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_2, i64 24, i1 false), !dbg !9940
  ret void, !dbg !9941
}

; alloc::string::String::from_utf8
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String9from_utf817heb20f44b6dd13080E(ptr sret(%"core::result::Result<string::String, string::FromUtf8Error>") %0, ptr %vec) unnamed_addr #1 !dbg !9942 {
start:
  %_9 = alloca %"string::FromUtf8Error", align 8
  %e = alloca %"core::str::error::Utf8Error", align 8
  %_7 = alloca %"string::String", align 8
  %_2 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  call void @llvm.dbg.declare(metadata ptr %vec, metadata !9946, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.declare(metadata ptr %e, metadata !9947, metadata !DIExpression()), !dbg !9950
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %vec) #17, !dbg !9951
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !9951
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !9951
; call core::str::converts::from_utf8
  call void @_ZN4core3str8converts9from_utf817haca84e40cf41cdfdE(ptr sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_2, ptr align 1 %_4.0, i64 %_4.1) #17, !dbg !9952
  %_6 = load i64, ptr %_2, align 8, !dbg !9952, !range !1797, !noundef !45
  %2 = icmp eq i64 %_6, 0, !dbg !9953
  br i1 %2, label %bb5, label %bb3, !dbg !9953

bb5:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %vec, i64 24, i1 false), !dbg !9954
  %3 = getelementptr inbounds %"core::result::Result<string::String, string::FromUtf8Error>::Ok", ptr %0, i32 0, i32 1, !dbg !9955
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_7, i64 24, i1 false), !dbg !9955
  %4 = getelementptr inbounds %"core::result::Result<string::String, string::FromUtf8Error>", ptr %0, i32 0, i32 1, !dbg !9955
  store i8 2, ptr %4, align 8, !dbg !9955
  br label %bb6, !dbg !9956

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", ptr %_2, i32 0, i32 1, !dbg !9957
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %5, i64 16, i1 false), !dbg !9957
  %6 = getelementptr inbounds %"string::FromUtf8Error", ptr %_9, i32 0, i32 1, !dbg !9958
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %vec, i64 24, i1 false), !dbg !9958
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %e, i64 16, i1 false), !dbg !9958
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_9, i64 40, i1 false), !dbg !9959
  br label %bb6, !dbg !9960

bb4:                                              ; No predecessors!
  unreachable, !dbg !9952

bb6:                                              ; preds = %bb5, %bb3
  ret void, !dbg !9961
}

; alloc::string::String::from_utf8_lossy
; Function Attrs: noredzone nounwind
define void @_ZN5alloc6string6String15from_utf8_lossy17h3e9f57c6fd356993E(ptr sret(%"borrow::Cow<'_, str>") %0, ptr align 1 %v.0, i64 %v.1) unnamed_addr #0 !dbg !9962 {
start:
  %first_valid.dbg.spill = alloca { ptr, i64 }, align 8
  %kind.dbg.spill = alloca i8, align 1
  %right_val.dbg.spill = alloca ptr, align 8
  %left_val.dbg.spill = alloca ptr, align 8
  %valid.dbg.spill = alloca { ptr, i64 }, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_58 = alloca %"string::String", align 8
  %chunk2 = alloca %"core::str::lossy::Utf8Chunk<'_>", align 8
  %_41 = alloca %"core::option::Option<core::str::lossy::Utf8Chunk<'_>>", align 8
  %iter1 = alloca { ptr, i64 }, align 8
  %res = alloca %"string::String", align 8
  %_28 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %_19 = alloca i64, align 8
  %_16 = alloca i64, align 8
  %_14 = alloca { ptr, ptr }, align 8
  %chunk = alloca %"core::str::lossy::Utf8Chunk<'_>", align 8
  %_4 = alloca %"core::option::Option<core::str::lossy::Utf8Chunk<'_>>", align 8
  %iter = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !9966, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !9967, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata ptr %chunk, metadata !9975, metadata !DIExpression()), !dbg !9998
  call void @llvm.dbg.declare(metadata ptr %res, metadata !9990, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !9992, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.declare(metadata ptr %chunk2, metadata !9994, metadata !DIExpression()), !dbg !10001
; call core::str::lossy::Utf8Chunks::new
  %3 = call { ptr, i64 } @_ZN4core3str5lossy10Utf8Chunks3new17h20429a3b714eaa5fE(ptr align 1 %v.0, i64 %v.1) #17, !dbg !10002
  store { ptr, i64 } %3, ptr %iter, align 8, !dbg !10002
; call <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8dd70a5bfbba11f5E"(ptr sret(%"core::option::Option<core::str::lossy::Utf8Chunk<'_>>") %_4, ptr align 8 %iter) #17, !dbg !10003
  %4 = load ptr, ptr %_4, align 8, !dbg !10004, !noundef !45
  %5 = ptrtoint ptr %4 to i64, !dbg !10004
  %6 = icmp eq i64 %5, 0, !dbg !10004
  %_6 = select i1 %6, i64 0, i64 1, !dbg !10004
  %7 = icmp eq i64 %_6, 1, !dbg !10004
  br i1 %7, label %bb3, label %bb12, !dbg !10004

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %chunk, ptr align 8 %_4, i64 32, i1 false), !dbg !9998
; call core::str::lossy::Utf8Chunk::valid
  %8 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk5valid17hd625c7abfaf1feb7E(ptr align 8 %chunk) #17, !dbg !10005
  %valid.0 = extractvalue { ptr, i64 } %8, 0, !dbg !10005
  %valid.1 = extractvalue { ptr, i64 } %8, 1, !dbg !10005
  %9 = getelementptr inbounds { ptr, i64 }, ptr %valid.dbg.spill, i32 0, i32 0, !dbg !10005
  store ptr %valid.0, ptr %9, align 8, !dbg !10005
  %10 = getelementptr inbounds { ptr, i64 }, ptr %valid.dbg.spill, i32 0, i32 1, !dbg !10005
  store i64 %valid.1, ptr %10, align 8, !dbg !10005
  call void @llvm.dbg.declare(metadata ptr %valid.dbg.spill, metadata !9981, metadata !DIExpression()), !dbg !10006
; call core::str::lossy::Utf8Chunk::invalid
  %11 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h2fb9eaf030c87ad8E(ptr align 8 %chunk) #17, !dbg !10007
  %_12.0 = extractvalue { ptr, i64 } %11, 0, !dbg !10007
  %_12.1 = extractvalue { ptr, i64 } %11, 1, !dbg !10007
; call core::slice::<impl [T]>::is_empty
  %_10 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h08db4e672d7e3a62E"(ptr align 1 %_12.0, i64 %_12.1) #17, !dbg !10007
  br i1 %_10, label %bb7, label %bb11, !dbg !10007

bb12:                                             ; preds = %start
  %12 = getelementptr inbounds %"borrow::Cow<'_, str>::Borrowed", ptr %0, i32 0, i32 1, !dbg !10008
  %13 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 0, !dbg !10008
  store ptr @alloc_2bfeba76c1438a46208a034153050220, ptr %13, align 8, !dbg !10008
  %14 = getelementptr inbounds { ptr, i64 }, ptr %12, i32 0, i32 1, !dbg !10008
  store i64 0, ptr %14, align 8, !dbg !10008
  store i64 0, ptr %0, align 8, !dbg !10008
  br label %bb27, !dbg !10009

bb27:                                             ; preds = %bb21, %bb10, %bb12
  ret void, !dbg !10011

bb11:                                             ; preds = %bb3
  %15 = getelementptr inbounds { ptr, i64 }, ptr %first_valid.dbg.spill, i32 0, i32 0, !dbg !10012
  store ptr %valid.0, ptr %15, align 8, !dbg !10012
  %16 = getelementptr inbounds { ptr, i64 }, ptr %first_valid.dbg.spill, i32 0, i32 1, !dbg !10012
  store i64 %valid.1, ptr %16, align 8, !dbg !10012
  call void @llvm.dbg.declare(metadata ptr %first_valid.dbg.spill, metadata !9973, metadata !DIExpression()), !dbg !10013
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h7f86b8a278fea577E(ptr sret(%"string::String") %res, i64 %v.1) #17, !dbg !10014
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %res, ptr align 1 %valid.0, i64 %valid.1) #17, !dbg !10015
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %res, ptr align 1 @alloc_aa329616e90d5f6d8c9641ac2278f51f, i64 3) #17, !dbg !10016
  %17 = getelementptr inbounds { ptr, i64 }, ptr %iter, i32 0, i32 0, !dbg !10017
  %_39.0 = load ptr, ptr %17, align 8, !dbg !10017, !nonnull !45, !align !643, !noundef !45
  %18 = getelementptr inbounds { ptr, i64 }, ptr %iter, i32 0, i32 1, !dbg !10017
  %_39.1 = load i64, ptr %18, align 8, !dbg !10017, !noundef !45
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %19 = call { ptr, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0d4b974bd3ca0c3cE"(ptr align 1 %_39.0, i64 %_39.1) #17, !dbg !10017
  %_38.0 = extractvalue { ptr, i64 } %19, 0, !dbg !10017
  %_38.1 = extractvalue { ptr, i64 } %19, 1, !dbg !10017
  %20 = getelementptr inbounds { ptr, i64 }, ptr %iter1, i32 0, i32 0, !dbg !10017
  store ptr %_38.0, ptr %20, align 8, !dbg !10017
  %21 = getelementptr inbounds { ptr, i64 }, ptr %iter1, i32 0, i32 1, !dbg !10017
  store i64 %_38.1, ptr %21, align 8, !dbg !10017
  br label %bb17, !dbg !10018

bb7:                                              ; preds = %bb3
; call core::str::<impl str>::len
  %22 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hd16e42a8ff3d48d3E"(ptr align 1 %valid.0, i64 %valid.1) #17, !dbg !10019
  store i64 %22, ptr %_16, align 8, !dbg !10019
  store i64 %v.1, ptr %_19, align 8, !dbg !10020
  store ptr %_16, ptr %_14, align 8, !dbg !10021
  %23 = getelementptr inbounds { ptr, ptr }, ptr %_14, i32 0, i32 1, !dbg !10021
  store ptr %_19, ptr %23, align 8, !dbg !10021
  %left_val = load ptr, ptr %_14, align 8, !dbg !10021, !nonnull !45, !align !1159, !noundef !45
  store ptr %left_val, ptr %left_val.dbg.spill, align 8, !dbg !10021
  call void @llvm.dbg.declare(metadata ptr %left_val.dbg.spill, metadata !9983, metadata !DIExpression()), !dbg !10022
  %24 = getelementptr inbounds { ptr, ptr }, ptr %_14, i32 0, i32 1, !dbg !10021
  %right_val = load ptr, ptr %24, align 8, !dbg !10021, !nonnull !45, !align !1159, !noundef !45
  store ptr %right_val, ptr %right_val.dbg.spill, align 8, !dbg !10021
  call void @llvm.dbg.declare(metadata ptr %right_val.dbg.spill, metadata !9986, metadata !DIExpression()), !dbg !10022
  %_24 = load i64, ptr %left_val, align 8, !dbg !10022, !noundef !45
  %_25 = load i64, ptr %right_val, align 8, !dbg !10022, !noundef !45
  %_23 = icmp eq i64 %_24, %_25, !dbg !10022
  %_22 = xor i1 %_23, true, !dbg !10022
  br i1 %_22, label %bb9, label %bb10, !dbg !10022

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds %"borrow::Cow<'_, str>::Borrowed", ptr %0, i32 0, i32 1, !dbg !10023
  %26 = getelementptr inbounds { ptr, i64 }, ptr %25, i32 0, i32 0, !dbg !10023
  store ptr %valid.0, ptr %26, align 8, !dbg !10023
  %27 = getelementptr inbounds { ptr, i64 }, ptr %25, i32 0, i32 1, !dbg !10023
  store i64 %valid.1, ptr %27, align 8, !dbg !10023
  store i64 0, ptr %0, align 8, !dbg !10023
  br label %bb27, !dbg !10009

bb9:                                              ; preds = %bb7
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !10022
  call void @llvm.dbg.declare(metadata ptr %kind.dbg.spill, metadata !9987, metadata !DIExpression()), !dbg !10024
  %28 = getelementptr inbounds %"core::option::Option<core::fmt::Arguments<'_>>", ptr %_28, i32 0, i32 1, !dbg !10024
  store ptr null, ptr %28, align 8, !dbg !10024
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha2a9c290507d1ce0E(i8 0, ptr align 8 %left_val, ptr align 8 %right_val, ptr %_28, ptr align 8 @alloc_cb204d54ed5b86b77c53dcaa96356cac) #18, !dbg !10024
  unreachable, !dbg !10024

bb17:                                             ; preds = %bb26, %bb19, %bb11
; call <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8dd70a5bfbba11f5E"(ptr sret(%"core::option::Option<core::str::lossy::Utf8Chunk<'_>>") %_41, ptr align 8 %iter1) #17, !dbg !10000
  %29 = load ptr, ptr %_41, align 8, !dbg !10000, !noundef !45
  %30 = ptrtoint ptr %29 to i64, !dbg !10000
  %31 = icmp eq i64 %30, 0, !dbg !10000
  %_43 = select i1 %31, i64 0, i64 1, !dbg !10000
  %32 = icmp eq i64 %_43, 0, !dbg !10000
  br i1 %32, label %bb21, label %bb19, !dbg !10000

bb21:                                             ; preds = %bb17
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_58, ptr align 8 %res, i64 24, i1 false), !dbg !10025
  %33 = getelementptr inbounds %"borrow::Cow<'_, str>::Owned", ptr %0, i32 0, i32 1, !dbg !10026
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %_58, i64 24, i1 false), !dbg !10026
  store i64 1, ptr %0, align 8, !dbg !10026
  br label %bb27, !dbg !10011

bb19:                                             ; preds = %bb17
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %chunk2, ptr align 8 %_41, i64 32, i1 false), !dbg !10027
; call core::str::lossy::Utf8Chunk::valid
  %34 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk5valid17hd625c7abfaf1feb7E(ptr align 8 %chunk2) #17, !dbg !10028
  %_48.0 = extractvalue { ptr, i64 } %34, 0, !dbg !10028
  %_48.1 = extractvalue { ptr, i64 } %34, 1, !dbg !10028
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %res, ptr align 1 %_48.0, i64 %_48.1) #17, !dbg !10029
; call core::str::lossy::Utf8Chunk::invalid
  %35 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h2fb9eaf030c87ad8E(ptr align 8 %chunk2) #17, !dbg !10030
  %_53.0 = extractvalue { ptr, i64 } %35, 0, !dbg !10030
  %_53.1 = extractvalue { ptr, i64 } %35, 1, !dbg !10030
; call core::slice::<impl [T]>::is_empty
  %_51 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h08db4e672d7e3a62E"(ptr align 1 %_53.0, i64 %_53.1) #17, !dbg !10030
  %_50 = xor i1 %_51, true, !dbg !10031
  br i1 %_50, label %bb26, label %bb17, !dbg !10031

bb20:                                             ; No predecessors!
  unreachable, !dbg !10000

bb26:                                             ; preds = %bb19
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %res, ptr align 1 @alloc_aa329616e90d5f6d8c9641ac2278f51f, i64 3) #17, !dbg !10032
  br label %bb17, !dbg !10032
}

; alloc::string::String::from_utf16
; Function Attrs: noredzone nounwind
define void @_ZN5alloc6string6String10from_utf1617hb47c5ad69c075ddfE(ptr sret(%"core::result::Result<string::String, string::FromUtf16Error>") %0, ptr align 2 %v.0, i64 %v.1) unnamed_addr #0 !dbg !10033 {
start:
  %c.dbg.spill = alloca i32, align 4
  %1 = alloca i64, align 8
  %v.dbg.spill = alloca { ptr, i64 }, align 8
  %_18 = alloca %"string::String", align 8
  %c = alloca %"core::result::Result<char, core::char::decode::DecodeUtf16Error>", align 4
  %_9 = alloca %"core::option::Option<core::result::Result<char, core::char::decode::DecodeUtf16Error>>", align 4
  %iter = alloca %"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>", align 8
  %_5 = alloca %"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>", align 8
  %_4 = alloca %"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>", align 8
  %ret = alloca %"string::String", align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 0
  store ptr %v.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !10060, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.declare(metadata ptr %ret, metadata !10061, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !10063, metadata !DIExpression()), !dbg !10071
  call void @llvm.dbg.declare(metadata ptr %c, metadata !10065, metadata !DIExpression()), !dbg !10072
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h7f86b8a278fea577E(ptr sret(%"string::String") %ret, i64 %v.1) #17, !dbg !10073
; call core::slice::<impl [T]>::iter
  %4 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5a4357a9ac9f9c3bE"(ptr align 2 %v.0, i64 %v.1) #17, !dbg !10074
  %_7.0 = extractvalue { ptr, ptr } %4, 0, !dbg !10074
  %_7.1 = extractvalue { ptr, ptr } %4, 1, !dbg !10074
; call core::iter::traits::iterator::Iterator::cloned
  %5 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6cloned17h531107f53cfaa0c1E(ptr %_7.0, ptr %_7.1) #17, !dbg !10074
  %_6.0 = extractvalue { ptr, ptr } %5, 0, !dbg !10074
  %_6.1 = extractvalue { ptr, ptr } %5, 1, !dbg !10074
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h9a75e41c0c306034E"(ptr sret(%"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>") %_5, ptr %_6.0, ptr %_6.1) #17, !dbg !10075
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4b6c6319404baca6E"(ptr sret(%"core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<'_, u16>>>") %_4, ptr %_5) #17, !dbg !10075
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_4, i64 24, i1 false), !dbg !10075
  br label %bb6, !dbg !10076

bb6:                                              ; preds = %bb11, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  %6 = call i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hed8bcff8ac78ad8aE"(ptr align 8 %iter) #17, !dbg !10071
  store i64 %6, ptr %1, align 8, !dbg !10071
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_9, ptr align 8 %1, i64 8, i1 false), !dbg !10071
  %7 = load i16, ptr %_9, align 4, !dbg !10071, !range !10077, !noundef !45
  %8 = icmp eq i16 %7, 2, !dbg !10071
  %_11 = select i1 %8, i64 0, i64 1, !dbg !10071
  %9 = icmp eq i64 %_11, 0, !dbg !10071
  br i1 %9, label %bb10, label %bb8, !dbg !10071

bb10:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_18, ptr align 8 %ret, i64 24, i1 false), !dbg !10078
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_18, i64 24, i1 false), !dbg !10079
  br label %bb13, !dbg !10080

bb8:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %c, ptr align 4 %_9, i64 8, i1 false), !dbg !10081
  %10 = load i16, ptr %c, align 4, !dbg !10082, !range !3925, !noundef !45
  %_13 = zext i16 %10 to i64, !dbg !10082
  %11 = icmp eq i64 %_13, 0, !dbg !10082
  br i1 %11, label %bb11, label %bb12, !dbg !10082

bb9:                                              ; No predecessors!
  unreachable, !dbg !10071

bb11:                                             ; preds = %bb8
  %12 = getelementptr inbounds %"core::result::Result<char, core::char::decode::DecodeUtf16Error>::Ok", ptr %c, i32 0, i32 1, !dbg !10083
  %c1 = load i32, ptr %12, align 4, !dbg !10083, !range !523, !noundef !45
  store i32 %c1, ptr %c.dbg.spill, align 4, !dbg !10083
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !10067, metadata !DIExpression()), !dbg !10083
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %ret, i32 %c1) #17, !dbg !10084
  br label %bb6, !dbg !10084

bb12:                                             ; preds = %bb8
  %13 = getelementptr inbounds %"core::result::Result<string::String, string::FromUtf16Error>", ptr %0, i32 0, i32 1, !dbg !10085
  store ptr null, ptr %13, align 8, !dbg !10085
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2254349ab55352cdE"(ptr %ret) #17, !dbg !10086
  br label %bb13, !dbg !10086

bb13:                                             ; preds = %bb10, %bb12
  ret void, !dbg !10080
}

; alloc::string::String::into_raw_parts
; Function Attrs: noredzone nounwind
define void @_ZN5alloc6string6String14into_raw_parts17he005db77fbade0adE(ptr sret({ ptr, i64, i64 }) %0, ptr %self) unnamed_addr #0 !dbg !10087 {
start:
  %_2 = alloca %"vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !10096, metadata !DIExpression()), !dbg !10097
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %self, i64 24, i1 false), !dbg !10098
; call alloc::vec::Vec<T,A>::into_raw_parts
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14into_raw_parts17hfc7c862054515454E"(ptr sret({ ptr, i64, i64 }) %0, ptr %_2) #17, !dbg !10098
  ret void, !dbg !10099
}

; alloc::string::String::from_utf8_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String19from_utf8_unchecked17h0d1ccbe91e1009f8E(ptr sret(%"string::String") %0, ptr %bytes) unnamed_addr #1 !dbg !10100 {
start:
  call void @llvm.dbg.declare(metadata ptr %bytes, metadata !10104, metadata !DIExpression()), !dbg !10105
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %bytes, i64 24, i1 false), !dbg !10106
  ret void, !dbg !10107
}

; alloc::string::String::into_bytes
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String10into_bytes17hf585513613b975e3E(ptr sret(%"vec::Vec<u8>") %0, ptr %self) unnamed_addr #1 !dbg !10108 {
start:
  call void @llvm.dbg.declare(metadata ptr %self, metadata !10112, metadata !DIExpression()), !dbg !10113
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %self, i64 24, i1 false), !dbg !10114
  ret void, !dbg !10115
}

; alloc::string::String::push_str
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %self, ptr align 1 %string.0, i64 %string.1) unnamed_addr #1 !dbg !10116 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %string.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10120, metadata !DIExpression()), !dbg !10122
  %1 = getelementptr inbounds { ptr, i64 }, ptr %string.dbg.spill, i32 0, i32 0
  store ptr %string.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %string.dbg.spill, i32 0, i32 1
  store i64 %string.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %string.dbg.spill, metadata !10121, metadata !DIExpression()), !dbg !10123
  store ptr %string.0, ptr %self.dbg.spill.i, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %string.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !10124
  store ptr %string.0, ptr %0, align 8, !dbg !10126
  %4 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !10126
  store i64 %string.1, ptr %4, align 8, !dbg !10126
  %5 = load ptr, ptr %0, align 8, !dbg !10126, !nonnull !45, !align !643, !noundef !45
  %6 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !10126
  %7 = load i64, ptr %6, align 8, !dbg !10126, !noundef !45
  %8 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !10127
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !10127
  %_5.0 = extractvalue { ptr, i64 } %9, 0, !dbg !10128
  %_5.1 = extractvalue { ptr, i64 } %9, 1, !dbg !10128
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hd7661a6f6c782598E"(ptr align 8 %self, ptr align 1 %_5.0, i64 %_5.1) #17, !dbg !10129
  ret void, !dbg !10130
}

; alloc::string::String::try_reserve
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN5alloc6string6String11try_reserve17h42e97a8d278d2d41E(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !10131 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10135, metadata !DIExpression()), !dbg !10137
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !10136, metadata !DIExpression()), !dbg !10138
; call alloc::vec::Vec<T,A>::try_reserve
  %0 = call { i64, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h3e56d9d8e276deaaE"(ptr align 8 %self, i64 %additional) #17, !dbg !10139
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !10139
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !10139
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !10140
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !10140
  ret { i64, i64 } %4, !dbg !10140
}

; alloc::string::String::try_reserve_exact
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN5alloc6string6String17try_reserve_exact17hf05b0b82beb47608E(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !10141 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10143, metadata !DIExpression()), !dbg !10145
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !10144, metadata !DIExpression()), !dbg !10146
; call alloc::vec::Vec<T,A>::try_reserve_exact
  %0 = call { i64, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h133b8791feea9172E"(ptr align 8 %self, i64 %additional) #17, !dbg !10147
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !10147
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !10147
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !10148
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !10148
  ret { i64, i64 } %4, !dbg !10148
}

; alloc::string::String::push
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %self, i32 %ch) unnamed_addr #1 !dbg !10149 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %ch.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca ptr, align 8
  %_13 = alloca [4 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10153, metadata !DIExpression()), !dbg !10155
  store i32 %ch, ptr %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %ch.dbg.spill, metadata !10154, metadata !DIExpression()), !dbg !10156
; call core::char::methods::<impl char>::len_utf8
  %_3 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hc910add14b1dec2eE"(i32 %ch) #17, !dbg !10157
  %1 = icmp eq i64 %_3, 1, !dbg !10158
  br i1 %1, label %bb3, label %bb2, !dbg !10158

bb3:                                              ; preds = %start
  %_5 = trunc i32 %ch to i8, !dbg !10159
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3a7b6b09314ccc8dE"(ptr align 8 %self, i8 %_5) #17, !dbg !10160
  br label %bb6, !dbg !10160

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds [4 x i8], ptr %_13, i64 0, i64 0, !dbg !10161
  call void @llvm.memset.p0.i64(ptr align 1 %2, i8 0, i64 4, i1 false), !dbg !10161
; call core::char::methods::<impl char>::encode_utf8
  %3 = call { ptr, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h32414824fbb65d00E"(i32 %ch, ptr align 1 %_13, i64 4) #17, !dbg !10162
  %_10.0 = extractvalue { ptr, i64 } %3, 0, !dbg !10162
  %_10.1 = extractvalue { ptr, i64 } %3, 1, !dbg !10162
  store ptr %_10.0, ptr %self.dbg.spill.i, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %_10.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !10163
  store ptr %_10.0, ptr %0, align 8, !dbg !10165
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !10165
  store i64 %_10.1, ptr %5, align 8, !dbg !10165
  %6 = load ptr, ptr %0, align 8, !dbg !10165, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !10165
  %8 = load i64, ptr %7, align 8, !dbg !10165, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !10166
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !10166
  %_8.0 = extractvalue { ptr, i64 } %10, 0, !dbg !10162
  %_8.1 = extractvalue { ptr, i64 } %10, 1, !dbg !10162
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hd7661a6f6c782598E"(ptr align 8 %self, ptr align 1 %_8.0, i64 %_8.1) #17, !dbg !10167
  br label %bb6, !dbg !10167

bb6:                                              ; preds = %bb3, %bb2
  ret void, !dbg !10168
}

; <alloc::string::String::retain::SetLenOnDrop as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN85_$LT$alloc..string..String..retain..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8aaa16fb1ade48ddE"(ptr align 8 %self) unnamed_addr #0 !dbg !10169 {
start:
  %new_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10182, metadata !DIExpression()), !dbg !10185
  %_3 = load i64, ptr %self, align 8, !dbg !10186, !noundef !45
  %0 = getelementptr inbounds %"string::String::retain::SetLenOnDrop<'_>", ptr %self, i32 0, i32 1, !dbg !10187
  %_4 = load i64, ptr %0, align 8, !dbg !10187, !noundef !45
  %_5.0 = sub i64 %_3, %_4, !dbg !10186
  %_5.1 = icmp ult i64 %_3, %_4, !dbg !10186
  %1 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !10186
  br i1 %1, label %panic, label %bb1, !dbg !10186

bb1:                                              ; preds = %start
  store i64 %_5.0, ptr %new_len.dbg.spill, align 8, !dbg !10186
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !10183, metadata !DIExpression()), !dbg !10188
  %2 = getelementptr inbounds %"string::String::retain::SetLenOnDrop<'_>", ptr %self, i32 0, i32 2, !dbg !10189
  %_13 = load ptr, ptr %2, align 8, !dbg !10189, !nonnull !45, !align !1159, !noundef !45
; call alloc::string::String::len
  %_8 = call i64 @_ZN5alloc6string6String3len17hc0aa0f8256540c2fE(ptr align 8 %_13) #17, !dbg !10189
  %_7 = icmp ule i64 %_5.0, %_8, !dbg !10190
  %_6 = xor i1 %_7, true, !dbg !10191
  br i1 %_6, label %bb3, label %bb4, !dbg !10191

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_6564cfadb1513ab6a9e19a5883fd642f) #18, !dbg !10186
  unreachable, !dbg !10186

bb4:                                              ; preds = %bb1
  %3 = getelementptr inbounds %"string::String::retain::SetLenOnDrop<'_>", ptr %self, i32 0, i32 2, !dbg !10192
  %_14 = load ptr, ptr %3, align 8, !dbg !10192, !nonnull !45, !align !1159, !noundef !45
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %_14, i64 %_5.0) #17, !dbg !10192
  ret void, !dbg !10193

bb3:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_1b40162c2ad9290d2e87219ac6f22a34, i64 41, ptr align 8 @alloc_cdb18e0ac2fdf07ff8d065001ccf4deb) #18, !dbg !10191
  unreachable, !dbg !10191
}

; alloc::string::String::insert_bytes
; Function Attrs: noredzone nounwind
define void @_ZN5alloc6string6String12insert_bytes17h6eac76741d847523E(ptr align 8 %self, i64 %idx, ptr align 1 %bytes.0, i64 %bytes.1) unnamed_addr #0 !dbg !10194 {
start:
  %self.dbg.spill.i14 = alloca { ptr, i64 }, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i12 = alloca i64, align 8
  %self.dbg.spill.i13 = alloca ptr, align 8
  %count.dbg.spill.i10 = alloca i64, align 8
  %self.dbg.spill.i11 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %count.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %amt.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %bytes.dbg.spill = alloca { ptr, i64 }, align 8
  %idx.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10198, metadata !DIExpression()), !dbg !10205
  store i64 %idx, ptr %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %idx.dbg.spill, metadata !10199, metadata !DIExpression()), !dbg !10206
  %3 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill, i32 0, i32 0
  store ptr %bytes.0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %bytes.dbg.spill, i32 0, i32 1
  store i64 %bytes.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes.dbg.spill, metadata !10200, metadata !DIExpression()), !dbg !10207
; call alloc::string::String::len
  %len = call i64 @_ZN5alloc6string6String3len17hc0aa0f8256540c2fE(ptr align 8 %self) #17, !dbg !10208
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !10208
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !10201, metadata !DIExpression()), !dbg !10209
  store i64 %bytes.1, ptr %amt.dbg.spill, align 8, !dbg !10210
  call void @llvm.dbg.declare(metadata ptr %amt.dbg.spill, metadata !10203, metadata !DIExpression()), !dbg !10211
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hdd7de8b6d3adb32bE"(ptr align 8 %self, i64 %bytes.1) #17, !dbg !10212
; call alloc::vec::Vec<T,A>::as_ptr
  %_11 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf37ccd2c9d3e0ec9E"(ptr align 8 %self) #17, !dbg !10213
  store ptr %_11, ptr %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i11, metadata !3818, metadata !DIExpression()), !dbg !10214
  store i64 %idx, ptr %count.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i10, metadata !3823, metadata !DIExpression()), !dbg !10216
  store ptr %_11, ptr %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i13, metadata !3827, metadata !DIExpression()), !dbg !10217
  store i64 %idx, ptr %count.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i12, metadata !3833, metadata !DIExpression()), !dbg !10219
  %5 = getelementptr inbounds i8, ptr %_11, i64 %idx, !dbg !10220
  store ptr %5, ptr %0, align 8, !dbg !10220
  %6 = load ptr, ptr %0, align 8, !dbg !10220, !noundef !45
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %self) #17, !dbg !10221
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %idx, i64 %bytes.1), !dbg !10222
  %_17.0 = extractvalue { i64, i1 } %7, 0, !dbg !10222
  %_17.1 = extractvalue { i64, i1 } %7, 1, !dbg !10222
  %8 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !10222
  br i1 %8, label %panic, label %bb6, !dbg !10222

bb6:                                              ; preds = %start
  store ptr %_14, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !5931, metadata !DIExpression()), !dbg !10223
  store i64 %_17.0, ptr %count.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i3, metadata !5936, metadata !DIExpression()), !dbg !10225
  store ptr %_14, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !5940, metadata !DIExpression()), !dbg !10226
  store i64 %_17.0, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !5945, metadata !DIExpression()), !dbg !10228
  %9 = getelementptr inbounds i8, ptr %_14, i64 %_17.0, !dbg !10229
  store ptr %9, ptr %2, align 8, !dbg !10229
  %_3.i = load ptr, ptr %2, align 8, !dbg !10229, !noundef !45
  %_20.0 = sub i64 %len, %idx, !dbg !10230
  %_20.1 = icmp ult i64 %len, %idx, !dbg !10230
  %10 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !10230
  br i1 %10, label %panic1, label %bb8, !dbg !10230

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_c4f9797b0f1e481486cf1805b69152bb) #18, !dbg !10222
  unreachable, !dbg !10222

bb8:                                              ; preds = %bb6
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h6fea0d8c69cb5207E(ptr %6, ptr %_3.i, i64 %_20.0) #17, !dbg !10231
  store ptr %bytes.0, ptr %self.dbg.spill.i14, align 8
  %11 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i14, i32 0, i32 1
  store i64 %bytes.1, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !8291, metadata !DIExpression()), !dbg !10232
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_24 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %self) #17, !dbg !10234
  store ptr %_24, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5931, metadata !DIExpression()), !dbg !10235
  store i64 %idx, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5936, metadata !DIExpression()), !dbg !10237
  store ptr %_24, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !5940, metadata !DIExpression()), !dbg !10238
  store i64 %idx, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !5945, metadata !DIExpression()), !dbg !10240
  %12 = getelementptr inbounds i8, ptr %_24, i64 %idx, !dbg !10241
  store ptr %12, ptr %1, align 8, !dbg !10241
  %_3.i9 = load ptr, ptr %1, align 8, !dbg !10241, !noundef !45
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr %bytes.0, ptr %_3.i9, i64 %bytes.1) #17, !dbg !10242
  %13 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %bytes.1), !dbg !10243
  %_30.0 = extractvalue { i64, i1 } %13, 0, !dbg !10243
  %_30.1 = extractvalue { i64, i1 } %13, 1, !dbg !10243
  %14 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false), !dbg !10243
  br i1 %14, label %panic2, label %bb14, !dbg !10243

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_51756ffd9ef1692e98058c841f3b1d25) #18, !dbg !10230
  unreachable, !dbg !10230

bb14:                                             ; preds = %bb8
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %self, i64 %_30.0) #17, !dbg !10244
  ret void, !dbg !10245

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_179b204dd41604643e7e05e15770286f) #18, !dbg !10243
  unreachable, !dbg !10243
}

; alloc::string::String::as_mut_vec
; Function Attrs: inlinehint noredzone nounwind
define internal align 8 ptr @_ZN5alloc6string6String10as_mut_vec17h8928c91f54061d94E(ptr align 8 %self) unnamed_addr #1 !dbg !10246 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10250, metadata !DIExpression()), !dbg !10251
  ret ptr %self, !dbg !10252
}

; alloc::string::String::len
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN5alloc6string6String3len17hc0aa0f8256540c2fE(ptr align 8 %self) unnamed_addr #1 !dbg !10253 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10257, metadata !DIExpression()), !dbg !10258
; call alloc::vec::Vec<T,A>::len
  %0 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %self) #17, !dbg !10259
  ret i64 %0, !dbg !10260
}

; alloc::string::String::into_boxed_str
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc6string6String14into_boxed_str17hd292670fef4e1819E(ptr %self) unnamed_addr #1 !dbg !10261 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %_3 = alloca %"vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !10265, metadata !DIExpression()), !dbg !10268
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %self, i64 24, i1 false), !dbg !10269
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hc085987315dcaa11E"(ptr %_3) #17, !dbg !10269
  %slice.0 = extractvalue { ptr, i64 } %0, 0, !dbg !10269
  %slice.1 = extractvalue { ptr, i64 } %0, 1, !dbg !10269
  %1 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0, !dbg !10269
  store ptr %slice.0, ptr %1, align 8, !dbg !10269
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1, !dbg !10269
  store i64 %slice.1, ptr %2, align 8, !dbg !10269
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !10266, metadata !DIExpression()), !dbg !10270
; call alloc::str::from_boxed_utf8_unchecked
  %3 = call { ptr, i64 } @_ZN5alloc3str25from_boxed_utf8_unchecked17h968dd5804f8c5001E(ptr align 1 %slice.0, i64 %slice.1) #17, !dbg !10271
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !10271
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !10271
  %6 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !10272
  %7 = insertvalue { ptr, i64 } %6, i64 %5, 1, !dbg !10272
  ret { ptr, i64 } %7, !dbg !10272
}

; alloc::string::FromUtf8Error::as_bytes
; Function Attrs: noredzone nounwind
define { ptr, i64 } @_ZN5alloc6string13FromUtf8Error8as_bytes17hb22787e41edf2400E(ptr align 8 %self) unnamed_addr #0 !dbg !10273 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10278, metadata !DIExpression()), !dbg !10279
  %_3 = getelementptr inbounds %"string::FromUtf8Error", ptr %self, i32 0, i32 1, !dbg !10280
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %0 = call { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h5ff7c49b12e6a03bE"(ptr align 8 %_3, ptr align 8 @alloc_e7a54bfd3f40ffe1b4770061f50c2565) #17, !dbg !10280
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !10280
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !10280
  %1 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !10281
  %2 = insertvalue { ptr, i64 } %1, i64 %_2.1, 1, !dbg !10281
  ret { ptr, i64 } %2, !dbg !10281
}

; alloc::string::FromUtf8Error::into_bytes
; Function Attrs: noredzone nounwind
define void @_ZN5alloc6string13FromUtf8Error10into_bytes17h7da198e61c7a34cfE(ptr sret(%"vec::Vec<u8>") %0, ptr %self) unnamed_addr #0 !dbg !10282 {
start:
  call void @llvm.dbg.declare(metadata ptr %self, metadata !10286, metadata !DIExpression()), !dbg !10287
  %1 = getelementptr inbounds %"string::FromUtf8Error", ptr %self, i32 0, i32 1, !dbg !10288
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %1, i64 24, i1 false), !dbg !10288
  ret void, !dbg !10289
}

; alloc::string::FromUtf8Error::utf8_error
; Function Attrs: noredzone nounwind
define void @_ZN5alloc6string13FromUtf8Error10utf8_error17h5c06ae65cc93372aE(ptr sret(%"core::str::error::Utf8Error") %0, ptr align 8 %self) unnamed_addr #0 !dbg !10290 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10294, metadata !DIExpression()), !dbg !10295
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %self, i64 16, i1 false), !dbg !10296
  ret void, !dbg !10297
}

; <alloc::string::FromUtf8Error as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h11d9e944a849993fE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !10298 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10303, metadata !DIExpression()), !dbg !10305
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !10304, metadata !DIExpression()), !dbg !10306
; call <core::str::error::Utf8Error as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h6f070f97c6b024f0E"(ptr align 8 %self, ptr align 8 %f) #17, !dbg !10307
  ret i1 %0, !dbg !10308
}

; <alloc::string::FromUtf16Error as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..fmt..Display$GT$3fmt17hf96b075d99e22256E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 !dbg !10309 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10315, metadata !DIExpression()), !dbg !10317
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !10316, metadata !DIExpression()), !dbg !10318
; call <str as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h44ce19c6d35d2787E"(ptr align 1 @alloc_7e441d31300c821308b0a441ed1ccfa5, i64 36, ptr align 8 %f) #17, !dbg !10319
  ret i1 %0, !dbg !10320
}

; <alloc::string::FromUtf8Error as core::error::Error>::description
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..error..Error$GT$11description17h34171f0e7f018ce1E"(ptr align 8 %self) unnamed_addr #0 !dbg !10321 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10326, metadata !DIExpression()), !dbg !10327
  ret { ptr, i64 } { ptr @alloc_46abab1c9fd8e8791359e4d0f3710c93, i64 13 }, !dbg !10328
}

; <alloc::string::FromUtf16Error as core::error::Error>::description
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..error..Error$GT$11description17hd2b613f3b70ed6ccE"(ptr align 1 %self) unnamed_addr #0 !dbg !10329 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10334, metadata !DIExpression()), !dbg !10335
  ret { ptr, i64 } { ptr @alloc_0348276978820a5ed4f30a14cea57144, i64 14 }, !dbg !10336
}

; <alloc::string::String as core::clone::Clone>::clone
; Function Attrs: noredzone nounwind
define void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h23d9a471775aa020E"(ptr sret(%"string::String") %0, ptr align 8 %self) unnamed_addr #0 !dbg !10337 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_2 = alloca %"vec::Vec<u8>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10342, metadata !DIExpression()), !dbg !10343
; call <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h58e1d92982ef903eE"(ptr sret(%"vec::Vec<u8>") %_2, ptr align 8 %self) #17, !dbg !10344
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_2, i64 24, i1 false), !dbg !10345
  ret void, !dbg !10346
}

; <alloc::string::String as core::clone::Clone>::clone_from
; Function Attrs: noredzone nounwind
define void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$10clone_from17h45ae1e1c35a528ffE"(ptr align 8 %self, ptr align 8 %source) unnamed_addr #0 !dbg !10347 {
start:
  %source.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10351, metadata !DIExpression()), !dbg !10353
  store ptr %source, ptr %source.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %source.dbg.spill, metadata !10352, metadata !DIExpression()), !dbg !10354
; call <alloc::vec::Vec<T,A> as core::clone::Clone>::clone_from
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h5277c6e7eb5612fdE"(ptr align 8 %self, ptr align 8 %source) #17, !dbg !10355
  ret void, !dbg !10356
}

; <&alloc::string::String as core::str::pattern::Pattern>::into_searcher
; Function Attrs: noredzone nounwind
define void @"_ZN73_$LT$$RF$alloc..string..String$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h5bc464361460e7acE"(ptr sret(%"core::str::pattern::StrSearcher<'_, '_>") %0, ptr align 8 %self, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !10357 {
start:
  %haystack.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10362, metadata !DIExpression()), !dbg !10364
  %1 = getelementptr inbounds { ptr, i64 }, ptr %haystack.dbg.spill, i32 0, i32 0
  store ptr %haystack.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %haystack.dbg.spill, metadata !10363, metadata !DIExpression()), !dbg !10365
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %3 = call { ptr, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h713c9c4b2ed90497E"(ptr align 8 %self, ptr align 8 @alloc_2def5dfce2dcd52f802e5cbd740e3552) #17, !dbg !10366
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !10366
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !10366
; call <&str as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h1ac80bc32b7fd2dcE"(ptr sret(%"core::str::pattern::StrSearcher<'_, '_>") %0, ptr align 1 %_4.0, i64 %_4.1, ptr align 1 %haystack.0, i64 %haystack.1) #17, !dbg !10366
  ret void, !dbg !10367
}

; <alloc::string::String as core::default::Default>::default
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN64_$LT$alloc..string..String$u20$as$u20$core..default..Default$GT$7default17h8023cf4ed4b338d5E"(ptr sret(%"string::String") %0) unnamed_addr #1 !dbg !10368 {
start:
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17h080425c511ce3982E(ptr sret(%"string::String") %0) #17, !dbg !10370
  ret void, !dbg !10371
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17heabcdd83e3a4c7ceE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !10372 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10377, metadata !DIExpression()), !dbg !10379
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !10378, metadata !DIExpression()), !dbg !10380
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb13427143583ffc1E"(ptr align 8 %self) #17, !dbg !10381
  %_4.0 = extractvalue { ptr, i64 } %0, 0, !dbg !10381
  %_4.1 = extractvalue { ptr, i64 } %0, 1, !dbg !10381
; call <str as core::fmt::Display>::fmt
  %1 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h44ce19c6d35d2787E"(ptr align 1 %_4.0, i64 %_4.1, ptr align 8 %f) #17, !dbg !10382
  ret i1 %1, !dbg !10383
}

; <alloc::string::String as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17h4b91c28887671176E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !10384 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10387, metadata !DIExpression()), !dbg !10389
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !10388, metadata !DIExpression()), !dbg !10390
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb13427143583ffc1E"(ptr align 8 %self) #17, !dbg !10391
  %_4.0 = extractvalue { ptr, i64 } %0, 0, !dbg !10391
  %_4.1 = extractvalue { ptr, i64 } %0, 1, !dbg !10391
; call <str as core::fmt::Debug>::fmt
  %1 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h572294128f6b0ffdE"(ptr align 1 %_4.0, i64 %_4.1, ptr align 8 %f) #17, !dbg !10392
  ret i1 %1, !dbg !10393
}

; <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h713c9c4b2ed90497E"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 !dbg !10394 {
start:
  %_index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10399, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.declare(metadata ptr %_index.dbg.spill, metadata !10400, metadata !DIExpression()), !dbg !10402
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %self) #17, !dbg !10403
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !10403
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !10403
; call core::str::converts::from_utf8_unchecked
  %2 = call { ptr, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h75af16509ecede6dE(ptr align 1 %_4.0, i64 %_4.1) #17, !dbg !10404
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !10404
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !10404
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !10405
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !10405
  ret { ptr, i64 } %6, !dbg !10405
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb13427143583ffc1E"(ptr align 8 %self) unnamed_addr #1 !dbg !10406 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10409, metadata !DIExpression()), !dbg !10410
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %self) #17, !dbg !10411
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !10411
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !10411
; call core::str::converts::from_utf8_unchecked
  %1 = call { ptr, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h75af16509ecede6dE(ptr align 1 %_3.0, i64 %_3.1) #17, !dbg !10412
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !10412
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !10412
  %4 = insertvalue { ptr, i64 } undef, ptr %2, 0, !dbg !10413
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1, !dbg !10413
  ret { ptr, i64 } %5, !dbg !10413
}

; <alloc::string::String as core::convert::From<&str>>::from
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h7a304be07f46f987E"(ptr sret(%"string::String") %0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !10414 {
start:
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !10417, metadata !DIExpression()), !dbg !10418
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hc87e400e78bb2238E"(ptr sret(%"string::String") %0, ptr align 1 %s.0, i64 %s.1) #17, !dbg !10419
  ret void, !dbg !10420
}

; <alloc::string::String as core::convert::From<alloc::boxed::Box<str>>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN97_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$GT$$GT$$GT$4from17h22f156662ee12144E"(ptr sret(%"string::String") %0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !10421 {
start:
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !10424, metadata !DIExpression()), !dbg !10425
; call alloc::str::<impl str>::into_string
  call void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$11into_string17h483417f77ba6c10aE"(ptr sret(%"string::String") %0, ptr align 1 %s.0, i64 %s.1) #17, !dbg !10426
  ret void, !dbg !10427
}

; alloc::string::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<str>>::from
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN5alloc6string107_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$str$GT$$GT$4from17hd3e9cdd3046bcdbcE"(ptr %s) unnamed_addr #0 !dbg !10428 {
start:
  call void @llvm.dbg.declare(metadata ptr %s, metadata !10431, metadata !DIExpression()), !dbg !10432
; call alloc::string::String::into_boxed_str
  %0 = call { ptr, i64 } @_ZN5alloc6string6String14into_boxed_str17hd292670fef4e1819E(ptr %s) #17, !dbg !10433
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !10433
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !10433
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !10434
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !10434
  ret { ptr, i64 } %4, !dbg !10434
}

; <alloc::string::String as core::convert::From<alloc::borrow::Cow<str>>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h36c7163ed7b362dfE"(ptr sret(%"string::String") %0, ptr %s) unnamed_addr #0 !dbg !10435 {
start:
  call void @llvm.dbg.declare(metadata ptr %s, metadata !10438, metadata !DIExpression()), !dbg !10439
; call alloc::borrow::Cow<B>::into_owned
  call void @"_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17h102310ff1190052aE"(ptr sret(%"string::String") %0, ptr %s) #17, !dbg !10440
  ret void, !dbg !10441
}

; alloc::string::<impl core::convert::From<alloc::string::String> for alloc::vec::Vec<u8>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc6string104_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..vec..Vec$LT$u8$GT$$GT$4from17h9e50c28aa070c99aE"(ptr sret(%"vec::Vec<u8>") %0, ptr %string) unnamed_addr #0 !dbg !10442 {
start:
  call void @llvm.dbg.declare(metadata ptr %string, metadata !10445, metadata !DIExpression()), !dbg !10446
; call alloc::string::String::into_bytes
  call void @_ZN5alloc6string6String10into_bytes17hf585513613b975e3E(ptr sret(%"vec::Vec<u8>") %0, ptr %string) #17, !dbg !10447
  ret void, !dbg !10448
}

; <alloc::string::String as core::fmt::Write>::write_str
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h51025f4043ad4965E"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !10449 {
start:
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10454, metadata !DIExpression()), !dbg !10456
  %0 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !10455, metadata !DIExpression()), !dbg !10457
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h9142500f5df9f793E(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) #17, !dbg !10458
  ret i1 false, !dbg !10459
}

; <alloc::string::String as core::fmt::Write>::write_char
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h6a3696f36e1df853E"(ptr align 8 %self, i32 %c) unnamed_addr #1 !dbg !10460 {
start:
  %c.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10464, metadata !DIExpression()), !dbg !10466
  store i32 %c, ptr %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !10465, metadata !DIExpression()), !dbg !10467
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17hfe3352f46bd00d0cE(ptr align 8 %self, i32 %c) #17, !dbg !10468
  ret i1 false, !dbg !10469
}

; <alloc::string::Drain as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN57_$LT$alloc..string..Drain$u20$as$u20$core..fmt..Debug$GT$3fmt17hd5930049921406abE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !10470 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca { ptr, i64 }, align 8
  %_6 = alloca %"core::fmt::builders::DebugTuple<'_, '_>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10482, metadata !DIExpression()), !dbg !10484
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !10483, metadata !DIExpression()), !dbg !10485
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h460ebb216f9738adE(ptr sret(%"core::fmt::builders::DebugTuple<'_, '_>") %_6, ptr align 8 %f, ptr align 1 @alloc_c3a853c9e224f646db894333f8d4e0c8, i64 5) #17, !dbg !10486
; call alloc::string::Drain::as_str
  %0 = call { ptr, i64 } @_ZN5alloc6string5Drain6as_str17h7ef63ca31af8da08E(ptr align 8 %self) #17, !dbg !10487
  store { ptr, i64 } %0, ptr %_10, align 8, !dbg !10487
; call core::fmt::builders::DebugTuple::field
  %_4 = call align 8 ptr @_ZN4core3fmt8builders10DebugTuple5field17h3addf200f90190a3E(ptr align 8 %_6, ptr align 1 %_10, ptr align 8 @vtable.b) #17, !dbg !10486
; call core::fmt::builders::DebugTuple::finish
  %1 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hd1f02de53d09d231E(ptr align 8 %_4) #17, !dbg !10486
  ret i1 %1, !dbg !10488
}

; <alloc::string::Drain as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN62_$LT$alloc..string..Drain$u20$as$u20$core..ops..drop..Drop$GT$4drop17h942499e8ff5bdc71E"(ptr align 8 %self) unnamed_addr #0 !dbg !10489 {
start:
  %self_vec.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_14 = alloca { i64, i64 }, align 8
  %_12 = alloca %"vec::drain::Drain<'_, u8>", align 8
  %_4 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10495, metadata !DIExpression()), !dbg !10498
  %0 = getelementptr inbounds %"string::Drain<'_>", ptr %self, i32 0, i32 1, !dbg !10499
  %_17 = load ptr, ptr %0, align 8, !dbg !10499, !noundef !45
; call alloc::string::String::as_mut_vec
  %self_vec = call align 8 ptr @_ZN5alloc6string6String10as_mut_vec17h8928c91f54061d94E(ptr align 8 %_17) #17, !dbg !10499
  store ptr %self_vec, ptr %self_vec.dbg.spill, align 8, !dbg !10499
  call void @llvm.dbg.declare(metadata ptr %self_vec.dbg.spill, metadata !10496, metadata !DIExpression()), !dbg !10500
  %1 = getelementptr inbounds %"string::Drain<'_>", ptr %self, i32 0, i32 2, !dbg !10501
  %_6 = load i64, ptr %1, align 8, !dbg !10501, !noundef !45
  %2 = getelementptr inbounds %"string::Drain<'_>", ptr %self, i32 0, i32 3, !dbg !10502
  %_7 = load i64, ptr %2, align 8, !dbg !10502, !noundef !45
  %_5 = icmp ule i64 %_6, %_7, !dbg !10501
  br i1 %_5, label %bb3, label %bb2, !dbg !10501

bb2:                                              ; preds = %start
  store i8 0, ptr %_4, align 1, !dbg !10501
  br label %bb4, !dbg !10501

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds %"string::Drain<'_>", ptr %self, i32 0, i32 3, !dbg !10503
  %_9 = load i64, ptr %3, align 8, !dbg !10503, !noundef !45
; call alloc::vec::Vec<T,A>::len
  %_10 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %self_vec) #17, !dbg !10504
  %_8 = icmp ule i64 %_9, %_10, !dbg !10503
  %4 = zext i1 %_8 to i8, !dbg !10501
  store i8 %4, ptr %_4, align 1, !dbg !10501
  br label %bb4, !dbg !10501

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_4, align 1, !dbg !10501, !range !673, !noundef !45
  %6 = trunc i8 %5 to i1, !dbg !10501
  br i1 %6, label %bb6, label %bb8, !dbg !10501

bb8:                                              ; preds = %bb6, %bb4
  ret void, !dbg !10505

bb6:                                              ; preds = %bb4
  %7 = getelementptr inbounds %"string::Drain<'_>", ptr %self, i32 0, i32 2, !dbg !10506
  %_15 = load i64, ptr %7, align 8, !dbg !10506, !noundef !45
  %8 = getelementptr inbounds %"string::Drain<'_>", ptr %self, i32 0, i32 3, !dbg !10507
  %_16 = load i64, ptr %8, align 8, !dbg !10507, !noundef !45
  store i64 %_15, ptr %_14, align 8, !dbg !10506
  %9 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !10506
  store i64 %_16, ptr %9, align 8, !dbg !10506
  %10 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 0, !dbg !10508
  %11 = load i64, ptr %10, align 8, !dbg !10508, !noundef !45
  %12 = getelementptr inbounds { i64, i64 }, ptr %_14, i32 0, i32 1, !dbg !10508
  %13 = load i64, ptr %12, align 8, !dbg !10508, !noundef !45
; call alloc::vec::Vec<T,A>::drain
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17h18adce0b1c57c34fE"(ptr sret(%"vec::drain::Drain<'_, u8>") %_12, ptr align 8 %self_vec, i64 %11, i64 %13) #17, !dbg !10508
; call core::ptr::drop_in_place<alloc::vec::drain::Drain<u8>>
  call void @"_ZN4core3ptr55drop_in_place$LT$alloc..vec..drain..Drain$LT$u8$GT$$GT$17h978bbc390bc3cbeeE"(ptr %_12) #17, !dbg !10509
  br label %bb8, !dbg !10509
}

; alloc::string::Drain::as_str
; Function Attrs: noredzone nounwind
define { ptr, i64 } @_ZN5alloc6string5Drain6as_str17h7ef63ca31af8da08E(ptr align 8 %self) unnamed_addr #0 !dbg !10510 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10514, metadata !DIExpression()), !dbg !10515
; call core::str::iter::Chars::as_str
  %0 = call { ptr, i64 } @_ZN4core3str4iter5Chars6as_str17hf978b6d0d8aeb1eeE(ptr align 8 %self) #17, !dbg !10516
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !10516
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !10516
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !10517
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !10517
  ret { ptr, i64 } %4, !dbg !10517
}

; <alloc::string::Drain as core::convert::AsRef<str>>::as_ref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN72_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h1b803531a4caa3c4E"(ptr align 8 %self) unnamed_addr #0 !dbg !10518 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10521, metadata !DIExpression()), !dbg !10522
; call alloc::string::Drain::as_str
  %0 = call { ptr, i64 } @_ZN5alloc6string5Drain6as_str17h7ef63ca31af8da08E(ptr align 8 %self) #17, !dbg !10523
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !10523
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !10523
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !10524
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !10524
  ret { ptr, i64 } %4, !dbg !10524
}

; <alloc::string::Drain as core::convert::AsRef<[u8]>>::as_ref
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN81_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$GT$6as_ref17heeb83655840f33e4E"(ptr align 8 %self) unnamed_addr #0 !dbg !10525 {
start:
  %0 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10530, metadata !DIExpression()), !dbg !10531
; call alloc::string::Drain::as_str
  %1 = call { ptr, i64 } @_ZN5alloc6string5Drain6as_str17h7ef63ca31af8da08E(ptr align 8 %self) #17, !dbg !10532
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !10532
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !10532
  store ptr %_3.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %_3.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !10533
  store ptr %_3.0, ptr %0, align 8, !dbg !10535
  %3 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !10535
  store i64 %_3.1, ptr %3, align 8, !dbg !10535
  %4 = load ptr, ptr %0, align 8, !dbg !10535, !nonnull !45, !align !643, !noundef !45
  %5 = getelementptr inbounds { ptr, i64 }, ptr %0, i32 0, i32 1, !dbg !10535
  %6 = load i64, ptr %5, align 8, !dbg !10535, !noundef !45
  %7 = insertvalue { ptr, i64 } undef, ptr %4, 0, !dbg !10536
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1, !dbg !10536
  %9 = extractvalue { ptr, i64 } %8, 0, !dbg !10532
  %10 = extractvalue { ptr, i64 } %8, 1, !dbg !10532
  %11 = insertvalue { ptr, i64 } undef, ptr %9, 0, !dbg !10537
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1, !dbg !10537
  ret { ptr, i64 } %12, !dbg !10537
}

; <alloc::string::Drain as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: noredzone nounwind
define void @"_ZN79_$LT$alloc..string..Drain$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h2dc96dfb32df59fcE"(ptr sret({ i64, { i64, i64 } }) %0, ptr align 8 %self) unnamed_addr #0 !dbg !10538 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10543, metadata !DIExpression()), !dbg !10544
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h55868fced12bd259E"(ptr sret({ i64, { i64, i64 } }) %0, ptr align 8 %self) #17, !dbg !10545
  ret void, !dbg !10546
}

; alloc::sync::arcinner_layout_for_value_layout
; Function Attrs: noredzone nounwind
define { i64, i64 } @_ZN5alloc4sync32arcinner_layout_for_value_layout17h6931526e03ad4558E(i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !10547 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  %_4 = alloca %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", align 8
  %_3 = alloca { { i64, i64 }, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, ptr %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, ptr %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %layout.dbg.spill, metadata !10550, metadata !DIExpression()), !dbg !10551
; call core::alloc::layout::Layout::new
  %2 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h567bd363ed49f0d2E() #17, !dbg !10552
  store { i64, i64 } %2, ptr %_6, align 8, !dbg !10552
; call core::alloc::layout::Layout::extend
  call void @_ZN4core5alloc6layout6Layout6extend17hf1cb85f7a69e01e3E(ptr sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") %_4, ptr align 8 %_6, i64 %layout.0, i64 %layout.1) #17, !dbg !10552
; call core::result::Result<T,E>::unwrap
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0ecce73e6461ffd3E"(ptr sret({ { i64, i64 }, i64 }) %_3, ptr %_4, ptr align 8 @alloc_3a3a41ed10ad0b95ca64ca5e7928adac) #17, !dbg !10552
; call core::alloc::layout::Layout::pad_to_align
  %3 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h582b5e21e5a39c47E(ptr align 8 %_3) #17, !dbg !10552
  %4 = extractvalue { i64, i64 } %3, 0, !dbg !10552
  %5 = extractvalue { i64, i64 } %3, 1, !dbg !10552
  %6 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !10553
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !10553
  ret { i64, i64 } %7, !dbg !10553
}

; <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he5d017d9b75beb25E"(ptr align 8 %self) unnamed_addr #0 !dbg !10554 {
start:
  %self.dbg.spill.i15 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i14 = alloca ptr, align 8
  %self.dbg.spill.i13 = alloca ptr, align 8
  %self.dbg.spill.i12 = alloca ptr, align 8
  %self.dbg.spill.i9 = alloca ptr, align 8
  %self.dbg.spill.i7 = alloca ptr, align 8
  %0 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %start.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %1 = alloca i64, align 8
  %to_drop.dbg.spill = alloca { ptr, i64 }, align 8
  %drop_offset.dbg.spill = alloca i64, align 8
  %vec_ptr.dbg.spill = alloca ptr, align 8
  %drop_ptr.dbg.spill = alloca ptr, align 8
  %old_len.dbg.spill = alloca i64, align 8
  %vec.dbg.spill = alloca ptr, align 8
  %drop_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_guard = alloca ptr, align 8
  %vec = alloca ptr, align 8
  %iter = alloca { ptr, ptr }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10559, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !10560, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.declare(metadata ptr %vec, metadata !10564, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.declare(metadata ptr %_guard, metadata !10570, metadata !DIExpression()), !dbg !10583
; call core::slice::<impl [T]>::iter
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbce52b8616e0ed10E"(ptr align 1 @alloc_2bfeba76c1438a46208a034153050220, i64 0) #17, !dbg !10584
  %_4.0 = extractvalue { ptr, ptr } %2, 0, !dbg !10584
  %_4.1 = extractvalue { ptr, ptr } %2, 1, !dbg !10584
; call core::mem::replace
  %3 = call { ptr, ptr } @_ZN4core3mem7replace17hd4a8249c6fbb98e9E(ptr align 8 %self, ptr %_4.0, ptr %_4.1) #17, !dbg !10585
  store { ptr, ptr } %3, ptr %iter, align 8, !dbg !10585
  store ptr %iter, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !6355, metadata !DIExpression()), !dbg !10586
  %4 = getelementptr inbounds { ptr, ptr }, ptr %iter, i32 0, i32 1, !dbg !10588
  %start1.i = load ptr, ptr %4, align 8, !dbg !10588, !nonnull !45, !noundef !45
  store ptr %start1.i, ptr %start.dbg.spill.i, align 8, !dbg !10588
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill.i, metadata !6363, metadata !DIExpression()), !dbg !10589
  %_8.i = load ptr, ptr %iter, align 8, !dbg !10589, !noundef !45
  store ptr %start1.i, ptr %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i14, metadata !2730, metadata !DIExpression()), !dbg !10590
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %5 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h2fc70a669a1a2a29E"(ptr %_8.i, ptr %start1.i) #17, !dbg !10589
  store i64 %5, ptr %1, align 8, !dbg !10589
  %6 = load i64, ptr %1, align 8, !dbg !10592, !noundef !45
  store i64 %6, ptr %drop_len.dbg.spill, align 8, !dbg !10593
  call void @llvm.dbg.declare(metadata ptr %drop_len.dbg.spill, metadata !10562, metadata !DIExpression()), !dbg !10594
  %7 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %self, i32 0, i32 3, !dbg !10595
  %8 = load ptr, ptr %7, align 8, !dbg !10595, !nonnull !45, !noundef !45
  store ptr %8, ptr %vec, align 8, !dbg !10595
  br i1 false, label %bb4, label %bb11, !dbg !10596

bb11:                                             ; preds = %start
  store ptr %self, ptr %_guard, align 8, !dbg !10597
  %9 = icmp eq i64 %6, 0, !dbg !10598
  br i1 %9, label %bb12, label %bb13, !dbg !10598

bb4:                                              ; preds = %start
  store ptr %vec, ptr %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !10599, metadata !DIExpression()), !dbg !10605
  %_3.i10 = load ptr, ptr %vec, align 8, !dbg !10607, !nonnull !45, !noundef !45
  store ptr %_3.i10, ptr %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i12, metadata !10608, metadata !DIExpression()), !dbg !10613
  store ptr %_3.i10, ptr %vec.dbg.spill, align 8, !dbg !10615
  call void @llvm.dbg.declare(metadata ptr %vec.dbg.spill, metadata !10566, metadata !DIExpression()), !dbg !10616
; call alloc::vec::Vec<T,A>::len
  %old_len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %_3.i10) #17, !dbg !10617
  store i64 %old_len, ptr %old_len.dbg.spill, align 8, !dbg !10617
  call void @llvm.dbg.declare(metadata ptr %old_len.dbg.spill, metadata !10568, metadata !DIExpression()), !dbg !10618
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %old_len, i64 %6), !dbg !10619
  %_21.0 = extractvalue { i64, i1 } %10, 0, !dbg !10619
  %_21.1 = extractvalue { i64, i1 } %10, 1, !dbg !10619
  %11 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !10619
  br i1 %11, label %panic, label %bb7, !dbg !10619

bb7:                                              ; preds = %bb4
  %12 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %self, i32 0, i32 2, !dbg !10620
  %_22 = load i64, ptr %12, align 8, !dbg !10620, !noundef !45
  %13 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_21.0, i64 %_22), !dbg !10619
  %_23.0 = extractvalue { i64, i1 } %13, 0, !dbg !10619
  %_23.1 = extractvalue { i64, i1 } %13, 1, !dbg !10619
  %14 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false), !dbg !10619
  br i1 %14, label %panic2, label %bb8, !dbg !10619

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_2f628df24e0dd1463907a30b78b3f33c) #18, !dbg !10619
  unreachable, !dbg !10619

bb8:                                              ; preds = %bb7
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %_3.i10, i64 %_23.0) #17, !dbg !10621
  %15 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %self, i32 0, i32 2, !dbg !10622
  %_28 = load i64, ptr %15, align 8, !dbg !10622, !noundef !45
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %old_len, i64 %_28), !dbg !10623
  %_29.0 = extractvalue { i64, i1 } %16, 0, !dbg !10623
  %_29.1 = extractvalue { i64, i1 } %16, 1, !dbg !10623
  %17 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false), !dbg !10623
  br i1 %17, label %panic3, label %bb10, !dbg !10623

panic2:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_2f628df24e0dd1463907a30b78b3f33c) #18, !dbg !10619
  unreachable, !dbg !10619

bb10:                                             ; preds = %bb8
; call alloc::vec::Vec<T,A>::truncate
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8truncate17h5766b70e08552e60E"(ptr align 8 %_3.i10, i64 %_29.0) #17, !dbg !10624
  br label %bb22, !dbg !10624

panic3:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_6139328b7c88b831187aaec75c25f44d) #18, !dbg !10623
  unreachable, !dbg !10623

bb22:                                             ; preds = %bb12, %bb13, %bb10
  ret void, !dbg !10625

bb12:                                             ; preds = %bb11
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<u8,alloc::alloc::Global>>
  call void @"_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17h17806681c05e0e09E"(ptr %_guard) #17, !dbg !10626
  br label %bb22, !dbg !10626

bb13:                                             ; preds = %bb11
; call core::slice::iter::Iter<T>::as_slice
  %18 = call { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hbe60bf6df0d376c6E"(ptr align 8 %iter) #17, !dbg !10627
  %_35.0 = extractvalue { ptr, i64 } %18, 0, !dbg !10627
  %_35.1 = extractvalue { ptr, i64 } %18, 1, !dbg !10627
  store ptr %_35.0, ptr %self.dbg.spill.i15, align 8
  %19 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i15, i32 0, i32 1
  store i64 %_35.1, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i15, metadata !8291, metadata !DIExpression()), !dbg !10628
  store ptr %_35.0, ptr %drop_ptr.dbg.spill, align 8, !dbg !10627
  call void @llvm.dbg.declare(metadata ptr %drop_ptr.dbg.spill, metadata !10572, metadata !DIExpression()), !dbg !10630
  store ptr %vec, ptr %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i7, metadata !10599, metadata !DIExpression()), !dbg !10631
  %_3.i8 = load ptr, ptr %vec, align 8, !dbg !10633, !nonnull !45, !noundef !45
  store ptr %_3.i8, ptr %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i13, metadata !10608, metadata !DIExpression()), !dbg !10634
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %vec_ptr = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %_3.i8) #17, !dbg !10636
  store ptr %vec_ptr, ptr %vec_ptr.dbg.spill, align 8, !dbg !10636
  call void @llvm.dbg.declare(metadata ptr %vec_ptr.dbg.spill, metadata !10574, metadata !DIExpression()), !dbg !10637
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %drop_offset = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h2fc70a669a1a2a29E"(ptr %_35.0, ptr %vec_ptr) #17, !dbg !10638
  store i64 %drop_offset, ptr %drop_offset.dbg.spill, align 8, !dbg !10638
  call void @llvm.dbg.declare(metadata ptr %drop_offset.dbg.spill, metadata !10576, metadata !DIExpression()), !dbg !10639
  store ptr %vec_ptr, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !5931, metadata !DIExpression()), !dbg !10640
  store i64 %drop_offset, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5936, metadata !DIExpression()), !dbg !10642
  store ptr %vec_ptr, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !5940, metadata !DIExpression()), !dbg !10643
  store i64 %drop_offset, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !5945, metadata !DIExpression()), !dbg !10645
  %20 = getelementptr inbounds i8, ptr %vec_ptr, i64 %drop_offset, !dbg !10646
  store ptr %20, ptr %0, align 8, !dbg !10646
  %_3.i = load ptr, ptr %0, align 8, !dbg !10646, !noundef !45
; call core::ptr::slice_from_raw_parts_mut
  %21 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hf71777480862c3a6E(ptr %_3.i, i64 %6) #17, !dbg !10647
  %to_drop.0 = extractvalue { ptr, i64 } %21, 0, !dbg !10647
  %to_drop.1 = extractvalue { ptr, i64 } %21, 1, !dbg !10647
  %22 = getelementptr inbounds { ptr, i64 }, ptr %to_drop.dbg.spill, i32 0, i32 0, !dbg !10647
  store ptr %to_drop.0, ptr %22, align 8, !dbg !10647
  %23 = getelementptr inbounds { ptr, i64 }, ptr %to_drop.dbg.spill, i32 0, i32 1, !dbg !10647
  store i64 %to_drop.1, ptr %23, align 8, !dbg !10647
  call void @llvm.dbg.declare(metadata ptr %to_drop.dbg.spill, metadata !10578, metadata !DIExpression()), !dbg !10648
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<u8,alloc::alloc::Global>>
  call void @"_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17h17806681c05e0e09E"(ptr %_guard) #17, !dbg !10626
  br label %bb22, !dbg !10626
}

; <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h442aea4435ab282fE"(ptr align 8 %self) unnamed_addr #0 !dbg !10649 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca ptr, align 8
  %self.dbg.spill.i6 = alloca ptr, align 8
  %self.dbg.spill.i4 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %tail.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %source_vec.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10655, metadata !DIExpression()), !dbg !10666
  %_28 = load ptr, ptr %self, align 8, !dbg !10667, !nonnull !45, !align !1159, !noundef !45
  %2 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %_28, i32 0, i32 2, !dbg !10667
  %_3 = load i64, ptr %2, align 8, !dbg !10667, !noundef !45
  %_2 = icmp ugt i64 %_3, 0, !dbg !10667
  br i1 %_2, label %bb1, label %bb11, !dbg !10667

bb11:                                             ; preds = %bb10, %start
  ret void, !dbg !10668

bb1:                                              ; preds = %start
  %_29 = load ptr, ptr %self, align 8, !dbg !10669, !nonnull !45, !align !1159, !noundef !45
  %_5 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %_29, i32 0, i32 3, !dbg !10669
  store ptr %_5, ptr %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i4, metadata !10599, metadata !DIExpression()), !dbg !10670
  %_3.i5 = load ptr, ptr %_5, align 8, !dbg !10672, !nonnull !45, !noundef !45
  store ptr %_3.i5, ptr %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i6, metadata !10608, metadata !DIExpression()), !dbg !10673
  store ptr %_3.i5, ptr %source_vec.dbg.spill, align 8, !dbg !10669
  call void @llvm.dbg.declare(metadata ptr %source_vec.dbg.spill, metadata !10656, metadata !DIExpression()), !dbg !10675
; call alloc::vec::Vec<T,A>::len
  %start1 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %_3.i5) #17, !dbg !10676
  store i64 %start1, ptr %start.dbg.spill, align 8, !dbg !10676
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !10658, metadata !DIExpression()), !dbg !10677
  %_30 = load ptr, ptr %self, align 8, !dbg !10678, !nonnull !45, !align !1159, !noundef !45
  %3 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %_30, i32 0, i32 1, !dbg !10678
  %tail = load i64, ptr %3, align 8, !dbg !10678, !noundef !45
  store i64 %tail, ptr %tail.dbg.spill, align 8, !dbg !10678
  call void @llvm.dbg.declare(metadata ptr %tail.dbg.spill, metadata !10660, metadata !DIExpression()), !dbg !10679
  %_9 = icmp ne i64 %tail, %start1, !dbg !10680
  br i1 %_9, label %bb4, label %bb9, !dbg !10680

bb9:                                              ; preds = %bb4, %bb1
  %_32 = load ptr, ptr %self, align 8, !dbg !10681, !nonnull !45, !align !1159, !noundef !45
  %4 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %_32, i32 0, i32 2, !dbg !10681
  %_26 = load i64, ptr %4, align 8, !dbg !10681, !noundef !45
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %start1, i64 %_26), !dbg !10682
  %_27.0 = extractvalue { i64, i1 } %5, 0, !dbg !10682
  %_27.1 = extractvalue { i64, i1 } %5, 1, !dbg !10682
  %6 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !10682
  br i1 %6, label %panic, label %bb10, !dbg !10682

bb4:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::as_ptr
  %_12 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf37ccd2c9d3e0ec9E"(ptr align 8 %_3.i5) #17, !dbg !10683
  store ptr %_12, ptr %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i8, metadata !3818, metadata !DIExpression()), !dbg !10684
  store i64 %tail, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !3823, metadata !DIExpression()), !dbg !10686
  store ptr %_12, ptr %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i10, metadata !3827, metadata !DIExpression()), !dbg !10687
  store i64 %tail, ptr %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i9, metadata !3833, metadata !DIExpression()), !dbg !10689
  %7 = getelementptr inbounds i8, ptr %_12, i64 %tail, !dbg !10690
  store ptr %7, ptr %0, align 8, !dbg !10690
  %8 = load ptr, ptr %0, align 8, !dbg !10690, !noundef !45
  store ptr %8, ptr %src.dbg.spill, align 8, !dbg !10683
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !10662, metadata !DIExpression()), !dbg !10691
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_15 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %_3.i5) #17, !dbg !10692
  store ptr %_15, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5931, metadata !DIExpression()), !dbg !10693
  store i64 %start1, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5936, metadata !DIExpression()), !dbg !10695
  store ptr %_15, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !5940, metadata !DIExpression()), !dbg !10696
  store i64 %start1, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !5945, metadata !DIExpression()), !dbg !10698
  %9 = getelementptr inbounds i8, ptr %_15, i64 %start1, !dbg !10699
  store ptr %9, ptr %1, align 8, !dbg !10699
  %_3.i = load ptr, ptr %1, align 8, !dbg !10699, !noundef !45
  store ptr %_3.i, ptr %dst.dbg.spill, align 8, !dbg !10692
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !10664, metadata !DIExpression()), !dbg !10700
  %_31 = load ptr, ptr %self, align 8, !dbg !10701, !nonnull !45, !align !1159, !noundef !45
  %10 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %_31, i32 0, i32 2, !dbg !10701
  %_21 = load i64, ptr %10, align 8, !dbg !10701, !noundef !45
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h6fea0d8c69cb5207E(ptr %8, ptr %_3.i, i64 %_21) #17, !dbg !10702
  br label %bb9, !dbg !10702

bb10:                                             ; preds = %bb9
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %_3.i5, i64 %_27.0) #17, !dbg !10703
  br label %bb11, !dbg !10703

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_9acf83b40754c1656f9cdee18fdd39d4) #18, !dbg !10682
  unreachable, !dbg !10682
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: noredzone nounwind
define void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hd7b747e48170aaf6E"(ptr align 8 %self, ptr %0, ptr %1) unnamed_addr #0 !dbg !10704 {
start:
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %iterator = alloca { ptr, ptr }, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %iterator, i32 0, i32 0
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %iterator, i32 0, i32 1
  store ptr %1, ptr %3, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10711, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.declare(metadata ptr %iterator, metadata !10712, metadata !DIExpression()), !dbg !10716
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hbe60bf6df0d376c6E"(ptr align 8 %iterator) #17, !dbg !10717
  %slice.0 = extractvalue { ptr, i64 } %4, 0, !dbg !10717
  %slice.1 = extractvalue { ptr, i64 } %4, 1, !dbg !10717
  %5 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 0, !dbg !10717
  store ptr %slice.0, ptr %5, align 8, !dbg !10717
  %6 = getelementptr inbounds { ptr, i64 }, ptr %slice.dbg.spill, i32 0, i32 1, !dbg !10717
  store i64 %slice.1, ptr %6, align 8, !dbg !10717
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !10713, metadata !DIExpression()), !dbg !10718
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h21558dcc8ec1dbc0E"(ptr align 8 %self, ptr %slice.0, i64 %slice.1) #17, !dbg !10719
  ret void, !dbg !10720
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h9204411988406416E"(ptr sret(%"vec::Vec<u8>") %0) unnamed_addr #1 !dbg !10721 {
start:
  %_1.0 = load i64, ptr @0, align 8, !dbg !10725, !noundef !45
  %_1.1 = load ptr, ptr getelementptr inbounds ({ i64, ptr }, ptr @0, i32 0, i32 1), align 8, !dbg !10725, !nonnull !45, !noundef !45
  %1 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 0, !dbg !10726
  store i64 %_1.0, ptr %1, align 8, !dbg !10726
  %2 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !10726
  store ptr %_1.1, ptr %2, align 8, !dbg !10726
  %3 = getelementptr inbounds %"vec::Vec<u8>", ptr %0, i32 0, i32 1, !dbg !10726
  store i64 0, ptr %3, align 8, !dbg !10726
  ret void, !dbg !10727
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h535def991fb56d8dE"(ptr sret(%"vec::Vec<u8>") %0, i64 %capacity) unnamed_addr #1 !dbg !10728 {
start:
  %capacity.dbg.spill = alloca i64, align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !10732, metadata !DIExpression()), !dbg !10733
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hcaa21e3e1357300bE"(ptr sret(%"vec::Vec<u8>") %0, i64 %capacity) #17, !dbg !10734
  ret void, !dbg !10735
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hcaa21e3e1357300bE"(ptr sret(%"vec::Vec<u8>") %0, i64 %capacity) unnamed_addr #1 !dbg !10736 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %capacity.dbg.spill = alloca i64, align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !10740, metadata !DIExpression()), !dbg !10742
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !10741, metadata !DIExpression()), !dbg !10743
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hebe5006f60e6830aE"(i64 %capacity) #17, !dbg !10744
  %_3.0 = extractvalue { i64, ptr } %1, 0, !dbg !10744
  %_3.1 = extractvalue { i64, ptr } %1, 1, !dbg !10744
  %2 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 0, !dbg !10745
  store i64 %_3.0, ptr %2, align 8, !dbg !10745
  %3 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !10745
  store ptr %_3.1, ptr %3, align 8, !dbg !10745
  %4 = getelementptr inbounds %"vec::Vec<u8>", ptr %0, i32 0, i32 1, !dbg !10745
  store i64 0, ptr %4, align 8, !dbg !10745
  ret void, !dbg !10746
}

; alloc::vec::Vec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17ha1327c0d27413592E"(ptr sret(%"vec::Vec<u8>") %0, ptr %ptr, i64 %length, i64 %capacity) unnamed_addr #1 !dbg !10747 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %capacity.dbg.spill = alloca i64, align 8
  %length.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !10751, metadata !DIExpression()), !dbg !10755
  store i64 %length, ptr %length.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %length.dbg.spill, metadata !10752, metadata !DIExpression()), !dbg !10756
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %capacity.dbg.spill, metadata !10753, metadata !DIExpression()), !dbg !10757
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !10754, metadata !DIExpression()), !dbg !10758
; call alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
  %1 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h96720079c6f073bdE"(ptr %ptr, i64 %capacity) #17, !dbg !10759
  %_5.0 = extractvalue { i64, ptr } %1, 0, !dbg !10759
  %_5.1 = extractvalue { i64, ptr } %1, 1, !dbg !10759
  %2 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 0, !dbg !10760
  store i64 %_5.0, ptr %2, align 8, !dbg !10760
  %3 = getelementptr inbounds { i64, ptr }, ptr %0, i32 0, i32 1, !dbg !10760
  store ptr %_5.1, ptr %3, align 8, !dbg !10760
  %4 = getelementptr inbounds %"vec::Vec<u8>", ptr %0, i32 0, i32 1, !dbg !10760
  store i64 %length, ptr %4, align 8, !dbg !10760
  ret void, !dbg !10761
}

; alloc::vec::Vec<T,A>::into_raw_parts
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14into_raw_parts17hfc7c862054515454E"(ptr sret({ ptr, i64, i64 }) %0, ptr %self) unnamed_addr #0 !dbg !10762 {
start:
  %self.dbg.spill.i2 = alloca ptr, align 8
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %me = alloca %"core::mem::manually_drop::ManuallyDrop<vec::Vec<u8>>", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !10766, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.declare(metadata ptr %me, metadata !10767, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.declare(metadata ptr %self, metadata !10774, metadata !DIExpression()), !dbg !10779
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %me, ptr align 8 %self, i64 24, i1 false), !dbg !10781
  store ptr %me, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !10782, metadata !DIExpression()), !dbg !10789
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %me) #17, !dbg !10791
  store ptr %me, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !10792, metadata !DIExpression()), !dbg !10798
; call alloc::vec::Vec<T,A>::len
  %_7 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %me) #17, !dbg !10800
  store ptr %me, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !10792, metadata !DIExpression()), !dbg !10801
; call alloc::vec::Vec<T,A>::capacity
  %_11 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hc7031ae37ed14fd5E"(ptr align 8 %me) #17, !dbg !10803
  store ptr %_3, ptr %0, align 8, !dbg !10804
  %1 = getelementptr inbounds { ptr, i64, i64 }, ptr %0, i32 0, i32 1, !dbg !10804
  store i64 %_7, ptr %1, align 8, !dbg !10804
  %2 = getelementptr inbounds { ptr, i64, i64 }, ptr %0, i32 0, i32 2, !dbg !10804
  store i64 %_11, ptr %2, align 8, !dbg !10804
  ret void, !dbg !10805
}

; alloc::vec::Vec<T,A>::capacity
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hc7031ae37ed14fd5E"(ptr align 8 %self) unnamed_addr #1 !dbg !10806 {
start:
  %self.dbg.spill.i = alloca ptr, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10810, metadata !DIExpression()), !dbg !10811
  store ptr %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !6862, metadata !DIExpression()), !dbg !10812
  %1 = load i64, ptr %self, align 8, !dbg !10814, !noundef !45
  store i64 %1, ptr %0, align 8, !dbg !10814
  %2 = load i64, ptr %0, align 8, !dbg !10815, !noundef !45
  ret i64 %2, !dbg !10816
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hdd7de8b6d3adb32bE"(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !10817 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10821, metadata !DIExpression()), !dbg !10823
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !10822, metadata !DIExpression()), !dbg !10824
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10825
  %_5 = load i64, ptr %0, align 8, !dbg !10825, !noundef !45
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17he91f62674650ed5dE"(ptr align 8 %self, i64 %_5, i64 %additional) #17, !dbg !10826
  ret void, !dbg !10827
}

; alloc::vec::Vec<T,A>::reserve_exact
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17h76020e232e7b8b88E"(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !10828 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10830, metadata !DIExpression()), !dbg !10832
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !10831, metadata !DIExpression()), !dbg !10833
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10834
  %_5 = load i64, ptr %0, align 8, !dbg !10834, !noundef !45
; call alloc::raw_vec::RawVec<T,A>::reserve_exact
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17h28b190c42f639233E"(ptr align 8 %self, i64 %_5, i64 %additional) #17, !dbg !10835
  ret void, !dbg !10836
}

; alloc::vec::Vec<T,A>::try_reserve
; Function Attrs: noredzone nounwind
define { i64, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h3e56d9d8e276deaaE"(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !10837 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10841, metadata !DIExpression()), !dbg !10843
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !10842, metadata !DIExpression()), !dbg !10844
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10845
  %_4 = load i64, ptr %0, align 8, !dbg !10845, !noundef !45
; call alloc::raw_vec::RawVec<T,A>::try_reserve
  %1 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h132c36d1cef1ec75E"(ptr align 8 %self, i64 %_4, i64 %additional) #17, !dbg !10846
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !10846
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !10846
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !10847
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !10847
  ret { i64, i64 } %5, !dbg !10847
}

; alloc::vec::Vec<T,A>::try_reserve_exact
; Function Attrs: noredzone nounwind
define { i64, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h133b8791feea9172E"(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !10848 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10850, metadata !DIExpression()), !dbg !10852
  store i64 %additional, ptr %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %additional.dbg.spill, metadata !10851, metadata !DIExpression()), !dbg !10853
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10854
  %_4 = load i64, ptr %0, align 8, !dbg !10854, !noundef !45
; call alloc::raw_vec::RawVec<T,A>::try_reserve_exact
  %1 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17he95387f16b2f53cfE"(ptr align 8 %self, i64 %_4, i64 %additional) #17, !dbg !10855
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !10855
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !10855
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !10856
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !10856
  ret { i64, i64 } %5, !dbg !10856
}

; alloc::vec::Vec<T,A>::shrink_to_fit
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17hd8b16dea3414accfE"(ptr align 8 %self) unnamed_addr #0 !dbg !10857 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10861, metadata !DIExpression()), !dbg !10862
; call alloc::vec::Vec<T,A>::capacity
  %_3 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hc7031ae37ed14fd5E"(ptr align 8 %self) #17, !dbg !10863
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10864
  %_5 = load i64, ptr %0, align 8, !dbg !10864, !noundef !45
  %_2 = icmp ugt i64 %_3, %_5, !dbg !10863
  br i1 %_2, label %bb2, label %bb3, !dbg !10863

bb3:                                              ; preds = %bb2, %start
  ret void, !dbg !10865

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10866
  %_8 = load i64, ptr %1, align 8, !dbg !10866, !noundef !45
; call alloc::raw_vec::RawVec<T,A>::shrink_to_fit
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17h92029a7382a8e2bbE"(ptr align 8 %self, i64 %_8) #17, !dbg !10867
  br label %bb3, !dbg !10867
}

; alloc::vec::Vec<T,A>::into_boxed_slice
; Function Attrs: noredzone nounwind
define { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hc085987315dcaa11E"(ptr %self) unnamed_addr #0 !dbg !10868 {
start:
  %self.dbg.spill.i1 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %buf.dbg.spill = alloca { i64, ptr }, align 8
  %_5 = alloca %"vec::Vec<u8>", align 8
  %me = alloca %"core::mem::manually_drop::ManuallyDrop<vec::Vec<u8>>", align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !10872, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.declare(metadata ptr %me, metadata !10873, metadata !DIExpression()), !dbg !10880
; call alloc::vec::Vec<T,A>::shrink_to_fit
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17hd8b16dea3414accfE"(ptr align 8 %self) #17, !dbg !10881
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %self, i64 24, i1 false), !dbg !10882
  call void @llvm.dbg.declare(metadata ptr %_5, metadata !10774, metadata !DIExpression()), !dbg !10883
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %me, ptr align 8 %_5, i64 24, i1 false), !dbg !10885
  store ptr %me, ptr %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i1, metadata !10792, metadata !DIExpression()), !dbg !10886
; call core::ptr::read
  %0 = call { i64, ptr } @_ZN4core3ptr4read17h8b0a770eafd370a2E(ptr %me) #17, !dbg !10888
  %buf.0 = extractvalue { i64, ptr } %0, 0, !dbg !10888
  %buf.1 = extractvalue { i64, ptr } %0, 1, !dbg !10888
  %1 = getelementptr inbounds { i64, ptr }, ptr %buf.dbg.spill, i32 0, i32 0, !dbg !10888
  store i64 %buf.0, ptr %1, align 8, !dbg !10888
  %2 = getelementptr inbounds { i64, ptr }, ptr %buf.dbg.spill, i32 0, i32 1, !dbg !10888
  store ptr %buf.1, ptr %2, align 8, !dbg !10888
  call void @llvm.dbg.declare(metadata ptr %buf.dbg.spill, metadata !10875, metadata !DIExpression()), !dbg !10889
  store ptr %me, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !10792, metadata !DIExpression()), !dbg !10890
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %me) #17, !dbg !10892
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !10892
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !10877, metadata !DIExpression()), !dbg !10893
; call alloc::raw_vec::RawVec<T,A>::into_box
  %3 = call { ptr, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17h18156297655b9365E"(i64 %buf.0, ptr %buf.1, i64 %len) #17, !dbg !10894
  %_15.0 = extractvalue { ptr, i64 } %3, 0, !dbg !10894
  %_15.1 = extractvalue { ptr, i64 } %3, 1, !dbg !10894
; call alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<T>],A>::assume_init
  %4 = call { ptr, i64 } @"_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17h2627310e69e6a6beE"(ptr align 1 %_15.0, i64 %_15.1) #17, !dbg !10894
  %5 = extractvalue { ptr, i64 } %4, 0, !dbg !10894
  %6 = extractvalue { ptr, i64 } %4, 1, !dbg !10894
  %7 = insertvalue { ptr, i64 } undef, ptr %5, 0, !dbg !10895
  %8 = insertvalue { ptr, i64 } %7, i64 %6, 1, !dbg !10895
  ret { ptr, i64 } %8, !dbg !10895
}

; alloc::vec::Vec<T,A>::truncate
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8truncate17h5766b70e08552e60E"(ptr align 8 %self, i64 %len) unnamed_addr #0 !dbg !10896 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %remaining_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10898, metadata !DIExpression()), !dbg !10904
  store i64 %len, ptr %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !10899, metadata !DIExpression()), !dbg !10905
  %1 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10906
  %_4 = load i64, ptr %1, align 8, !dbg !10906, !noundef !45
  %_3 = icmp ugt i64 %len, %_4, !dbg !10907
  br i1 %_3, label %bb6, label %bb1, !dbg !10907

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10908
  %_6 = load i64, ptr %2, align 8, !dbg !10908, !noundef !45
  %_7.0 = sub i64 %_6, %len, !dbg !10908
  %_7.1 = icmp ult i64 %_6, %len, !dbg !10908
  %3 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !10908
  br i1 %3, label %panic, label %bb2, !dbg !10908

bb6:                                              ; preds = %bb2, %start
  ret void, !dbg !10909

bb2:                                              ; preds = %bb1
  store i64 %_7.0, ptr %remaining_len.dbg.spill, align 8, !dbg !10908
  call void @llvm.dbg.declare(metadata ptr %remaining_len.dbg.spill, metadata !10900, metadata !DIExpression()), !dbg !10910
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_10 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %self) #17, !dbg !10911
  store ptr %_10, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5931, metadata !DIExpression()), !dbg !10912
  store i64 %len, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5936, metadata !DIExpression()), !dbg !10914
  store ptr %_10, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !5940, metadata !DIExpression()), !dbg !10915
  store i64 %len, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !5945, metadata !DIExpression()), !dbg !10917
  %4 = getelementptr inbounds i8, ptr %_10, i64 %len, !dbg !10918
  store ptr %4, ptr %0, align 8, !dbg !10918
  %_3.i = load ptr, ptr %0, align 8, !dbg !10918, !noundef !45
; call core::ptr::slice_from_raw_parts_mut
  %5 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hf71777480862c3a6E(ptr %_3.i, i64 %_7.0) #17, !dbg !10919
  %s.0 = extractvalue { ptr, i64 } %5, 0, !dbg !10919
  %s.1 = extractvalue { ptr, i64 } %5, 1, !dbg !10919
  %6 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0, !dbg !10919
  store ptr %s.0, ptr %6, align 8, !dbg !10919
  %7 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1, !dbg !10919
  store i64 %s.1, ptr %7, align 8, !dbg !10919
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !10902, metadata !DIExpression()), !dbg !10920
  %8 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10921
  store i64 %len, ptr %8, align 8, !dbg !10921
  br label %bb6, !dbg !10922

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_f6d6eaf1db965a6be09fd26ade1bc4eb) #18, !dbg !10908
  unreachable, !dbg !10908
}

; alloc::vec::Vec<T,A>::as_slice
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17ha6d67d0ada786caeE"(ptr align 8 %self) unnamed_addr #1 !dbg !10923 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10927, metadata !DIExpression()), !dbg !10928
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %self) #17, !dbg !10929
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !10929
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !10929
  %3 = insertvalue { ptr, i64 } undef, ptr %1, 0, !dbg !10930
  %4 = insertvalue { ptr, i64 } %3, i64 %2, 1, !dbg !10930
  ret { ptr, i64 } %4, !dbg !10930
}

; alloc::vec::Vec<T,A>::as_mut_slice
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h0815b4cbd6a57810E"(ptr align 8 %self) unnamed_addr #1 !dbg !10931 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10935, metadata !DIExpression()), !dbg !10936
; call <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
  %0 = call { ptr, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h79749a66f96a9388E"(ptr align 8 %self) #17, !dbg !10937
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !10937
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !10937
  %1 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !10938
  %2 = insertvalue { ptr, i64 } %1, i64 %_2.1, 1, !dbg !10938
  ret { ptr, i64 } %2, !dbg !10938
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf37ccd2c9d3e0ec9E"(ptr align 8 %self) unnamed_addr #1 !dbg !10939 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10943, metadata !DIExpression()), !dbg !10946
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h98d1ca09fe1851acE"(ptr align 8 %self) #17, !dbg !10947
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !10947
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !10944, metadata !DIExpression()), !dbg !10948
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7895b0ae390f1c8aE"(ptr %ptr) #17, !dbg !10949
  %_4 = xor i1 %_5, true, !dbg !10950
  call void @llvm.assume(i1 %_4), !dbg !10951
  ret ptr %ptr, !dbg !10952
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint noredzone nounwind
define ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %self) unnamed_addr #1 !dbg !10953 {
start:
  %ptr.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10957, metadata !DIExpression()), !dbg !10960
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h98d1ca09fe1851acE"(ptr align 8 %self) #17, !dbg !10961
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !10961
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !10958, metadata !DIExpression()), !dbg !10962
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7895b0ae390f1c8aE"(ptr %ptr) #17, !dbg !10963
  %_3 = xor i1 %_4, true, !dbg !10964
  call void @llvm.assume(i1 %_3), !dbg !10965
  ret ptr %ptr, !dbg !10966
}

; alloc::vec::Vec<T,A>::allocator
; Function Attrs: inlinehint noredzone nounwind
define align 1 ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h614a3eb061a21414E"(ptr align 8 %self) unnamed_addr #1 !dbg !10967 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10971, metadata !DIExpression()), !dbg !10972
; call alloc::raw_vec::RawVec<T,A>::allocator
  %0 = call align 1 ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h24543f4cbde208fcE"(ptr align 8 %self) #17, !dbg !10973
  ret ptr %0, !dbg !10974
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %self, i64 %new_len) unnamed_addr #1 !dbg !10975 {
start:
  %new_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !10977, metadata !DIExpression()), !dbg !10979
  store i64 %new_len, ptr %new_len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %new_len.dbg.spill, metadata !10978, metadata !DIExpression()), !dbg !10980
; call alloc::vec::Vec<T,A>::capacity
  %_5 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hc7031ae37ed14fd5E"(ptr align 8 %self) #17, !dbg !10981
  %_4 = icmp ule i64 %new_len, %_5, !dbg !10982
  %_3 = xor i1 %_4, true, !dbg !10983
  br i1 %_3, label %bb2, label %bb3, !dbg !10983

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !10984
  store i64 %new_len, ptr %0, align 8, !dbg !10984
  ret void, !dbg !10985

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @alloc_c13931f7e9e9ebea27efae909e013fd2, i64 44, ptr align 8 @alloc_1ba0719c30b5d3d54d2645e185278fec) #18, !dbg !10983
  unreachable, !dbg !10983
}

; alloc::vec::Vec<T,A>::swap_remove::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11swap_remove13assert_failed17hd9795a50a4c7c14bE"(i64 %0, i64 %1) unnamed_addr #2 !dbg !10986 {
start:
  %_8 = alloca [2 x { ptr, ptr }], align 8
  %_4 = alloca %"core::fmt::Arguments<'_>", align 8
  %len = alloca i64, align 8
  %index = alloca i64, align 8
  store i64 %0, ptr %index, align 8
  store i64 %1, ptr %len, align 8
  call void @llvm.dbg.declare(metadata ptr %index, metadata !10990, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.declare(metadata ptr %len, metadata !10991, metadata !DIExpression()), !dbg !10993
; call core::fmt::ArgumentV1::new_display
  %2 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %index) #17, !dbg !10994
  %_9.0 = extractvalue { ptr, ptr } %2, 0, !dbg !10994
  %_9.1 = extractvalue { ptr, ptr } %2, 1, !dbg !10994
; call core::fmt::ArgumentV1::new_display
  %3 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %len) #17, !dbg !10994
  %_11.0 = extractvalue { ptr, ptr } %3, 0, !dbg !10994
  %_11.1 = extractvalue { ptr, ptr } %3, 1, !dbg !10994
  %4 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_8, i64 0, i64 0, !dbg !10994
  %5 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 0, !dbg !10994
  store ptr %_9.0, ptr %5, align 8, !dbg !10994
  %6 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 1, !dbg !10994
  store ptr %_9.1, ptr %6, align 8, !dbg !10994
  %7 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_8, i64 0, i64 1, !dbg !10994
  %8 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 0, !dbg !10994
  store ptr %_11.0, ptr %8, align 8, !dbg !10994
  %9 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 1, !dbg !10994
  store ptr %_11.1, ptr %9, align 8, !dbg !10994
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_4, ptr align 8 @alloc_1ee46c7ef9489069f10170c82c599b4a, i64 3, ptr align 8 %_8, i64 2) #17, !dbg !10994
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_4, ptr align 8 @alloc_021ecaf3b9e9d10672a87d3fccfd178d) #18, !dbg !10994
  unreachable, !dbg !10994
}

; alloc::vec::Vec<T,A>::insert::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6insert13assert_failed17h1eb88b12e93b6576E"(i64 %0, i64 %1) unnamed_addr #2 !dbg !10995 {
start:
  %_8 = alloca [2 x { ptr, ptr }], align 8
  %_4 = alloca %"core::fmt::Arguments<'_>", align 8
  %len = alloca i64, align 8
  %index = alloca i64, align 8
  store i64 %0, ptr %index, align 8
  store i64 %1, ptr %len, align 8
  call void @llvm.dbg.declare(metadata ptr %index, metadata !10998, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.declare(metadata ptr %len, metadata !10999, metadata !DIExpression()), !dbg !11001
; call core::fmt::ArgumentV1::new_display
  %2 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %index) #17, !dbg !11002
  %_9.0 = extractvalue { ptr, ptr } %2, 0, !dbg !11002
  %_9.1 = extractvalue { ptr, ptr } %2, 1, !dbg !11002
; call core::fmt::ArgumentV1::new_display
  %3 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %len) #17, !dbg !11002
  %_11.0 = extractvalue { ptr, ptr } %3, 0, !dbg !11002
  %_11.1 = extractvalue { ptr, ptr } %3, 1, !dbg !11002
  %4 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_8, i64 0, i64 0, !dbg !11002
  %5 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 0, !dbg !11002
  store ptr %_9.0, ptr %5, align 8, !dbg !11002
  %6 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 1, !dbg !11002
  store ptr %_9.1, ptr %6, align 8, !dbg !11002
  %7 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_8, i64 0, i64 1, !dbg !11002
  %8 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 0, !dbg !11002
  store ptr %_11.0, ptr %8, align 8, !dbg !11002
  %9 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 1, !dbg !11002
  store ptr %_11.1, ptr %9, align 8, !dbg !11002
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_4, ptr align 8 @alloc_0fc675edd11936a791c597fa39eb0cdc, i64 3, ptr align 8 %_8, i64 2) #17, !dbg !11002
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_4, ptr align 8 @alloc_75eec5a9bf93217b91f0d85ef446d86d) #18, !dbg !11002
  unreachable, !dbg !11002
}

; alloc::vec::Vec<T,A>::remove::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17h1e5488aacf3e4223E"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #2 !dbg !11003 {
start:
  %_8 = alloca [2 x { ptr, ptr }], align 8
  %_4 = alloca %"core::fmt::Arguments<'_>", align 8
  %len = alloca i64, align 8
  %index = alloca i64, align 8
  store i64 %0, ptr %index, align 8
  store i64 %1, ptr %len, align 8
  call void @llvm.dbg.declare(metadata ptr %index, metadata !11008, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.declare(metadata ptr %len, metadata !11009, metadata !DIExpression()), !dbg !11011
; call core::fmt::ArgumentV1::new_display
  %3 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %index) #17, !dbg !11012
  %_9.0 = extractvalue { ptr, ptr } %3, 0, !dbg !11012
  %_9.1 = extractvalue { ptr, ptr } %3, 1, !dbg !11012
; call core::fmt::ArgumentV1::new_display
  %4 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %len) #17, !dbg !11012
  %_11.0 = extractvalue { ptr, ptr } %4, 0, !dbg !11012
  %_11.1 = extractvalue { ptr, ptr } %4, 1, !dbg !11012
  %5 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_8, i64 0, i64 0, !dbg !11012
  %6 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 0, !dbg !11012
  store ptr %_9.0, ptr %6, align 8, !dbg !11012
  %7 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 1, !dbg !11012
  store ptr %_9.1, ptr %7, align 8, !dbg !11012
  %8 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_8, i64 0, i64 1, !dbg !11012
  %9 = getelementptr inbounds { ptr, ptr }, ptr %8, i32 0, i32 0, !dbg !11012
  store ptr %_11.0, ptr %9, align 8, !dbg !11012
  %10 = getelementptr inbounds { ptr, ptr }, ptr %8, i32 0, i32 1, !dbg !11012
  store ptr %_11.1, ptr %10, align 8, !dbg !11012
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_4, ptr align 8 @alloc_2ca41611c3f9af1c4961102fd5021961, i64 3, ptr align 8 %_8, i64 2) #17, !dbg !11012
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_4, ptr align 8 %2) #18, !dbg !11012
  unreachable, !dbg !11012
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3a7b6b09314ccc8dE"(ptr align 8 %self, i8 %value) unnamed_addr #1 !dbg !11013 {
start:
  %self.dbg.spill.i3 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %end.dbg.spill = alloca ptr, align 8
  %value.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11017, metadata !DIExpression()), !dbg !11021
  store i8 %value, ptr %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill, metadata !11018, metadata !DIExpression()), !dbg !11022
  %2 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11023
  %_4 = load i64, ptr %2, align 8, !dbg !11023, !noundef !45
  store ptr %self, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !6862, metadata !DIExpression()), !dbg !11024
  %3 = load i64, ptr %self, align 8, !dbg !11026, !noundef !45
  store i64 %3, ptr %0, align 8, !dbg !11026
  %4 = load i64, ptr %0, align 8, !dbg !11027, !noundef !45
  %_3 = icmp eq i64 %_4, %4, !dbg !11023
  br i1 %_3, label %bb2, label %bb3, !dbg !11023

bb3:                                              ; preds = %bb2, %start
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %self) #17, !dbg !11028
  %5 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11029
  %_13 = load i64, ptr %5, align 8, !dbg !11029, !noundef !45
  store ptr %_11, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5931, metadata !DIExpression()), !dbg !11030
  store i64 %_13, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5936, metadata !DIExpression()), !dbg !11032
  store ptr %_11, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !5940, metadata !DIExpression()), !dbg !11033
  store i64 %_13, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !5945, metadata !DIExpression()), !dbg !11035
  %6 = getelementptr inbounds i8, ptr %_11, i64 %_13, !dbg !11036
  store ptr %6, ptr %1, align 8, !dbg !11036
  %_3.i = load ptr, ptr %1, align 8, !dbg !11036, !noundef !45
  store ptr %_3.i, ptr %end.dbg.spill, align 8, !dbg !11028
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !11019, metadata !DIExpression()), !dbg !11037
; call core::ptr::write
  call void @_ZN4core3ptr5write17hed57776f96abff2aE(ptr %_3.i, i8 %value) #17, !dbg !11038
  %7 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11039
  %8 = load i64, ptr %7, align 8, !dbg !11039, !noundef !45
  %9 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 1), !dbg !11039
  %_16.0 = extractvalue { i64, i1 } %9, 0, !dbg !11039
  %_16.1 = extractvalue { i64, i1 } %9, 1, !dbg !11039
  %10 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !11039
  br i1 %10, label %panic, label %bb7, !dbg !11039

bb2:                                              ; preds = %start
  %11 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11040
  %_9 = load i64, ptr %11, align 8, !dbg !11040, !noundef !45
; call alloc::raw_vec::RawVec<T,A>::reserve_for_push
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hccd83727ffa4b254E"(ptr align 8 %self, i64 %_9) #17, !dbg !11041
  br label %bb3, !dbg !11041

bb7:                                              ; preds = %bb3
  %12 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11039
  store i64 %_16.0, ptr %12, align 8, !dbg !11039
  ret void, !dbg !11042

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_b99318ccbf51b1bf7a9d2232279292ea) #18, !dbg !11039
  unreachable, !dbg !11039
}

; alloc::vec::Vec<T,A>::pop
; Function Attrs: inlinehint noredzone nounwind
define { i8, i8 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h416b6370274bf058E"(ptr align 8 %self) unnamed_addr #1 !dbg !11043 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %1 = alloca { i8, i8 }, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11047, metadata !DIExpression()), !dbg !11048
  %2 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11049
  %_2 = load i64, ptr %2, align 8, !dbg !11049, !noundef !45
  %3 = icmp eq i64 %_2, 0, !dbg !11049
  br i1 %3, label %bb1, label %bb2, !dbg !11049

bb1:                                              ; preds = %start
  store i8 0, ptr %1, align 1, !dbg !11050
  br label %bb8, !dbg !11051

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11052
  %5 = load i64, ptr %4, align 8, !dbg !11052, !noundef !45
  %_3.0 = sub i64 %5, 1, !dbg !11052
  %_3.1 = icmp ult i64 %5, 1, !dbg !11052
  %6 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false), !dbg !11052
  br i1 %6, label %panic, label %bb3, !dbg !11052

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11052
  store i64 %_3.0, ptr %7, align 8, !dbg !11052
; call alloc::vec::Vec<T,A>::as_ptr
  %_6 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf37ccd2c9d3e0ec9E"(ptr align 8 %self) #17, !dbg !11053
; call alloc::vec::Vec<T,A>::len
  %_8 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %self) #17, !dbg !11054
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3818, metadata !DIExpression()), !dbg !11055
  store i64 %_8, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !3823, metadata !DIExpression()), !dbg !11057
  store ptr %_6, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !3827, metadata !DIExpression()), !dbg !11058
  store i64 %_8, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !3833, metadata !DIExpression()), !dbg !11060
  %8 = getelementptr inbounds i8, ptr %_6, i64 %_8, !dbg !11061
  store ptr %8, ptr %0, align 8, !dbg !11061
  %9 = load ptr, ptr %0, align 8, !dbg !11061, !noundef !45
; call core::ptr::read
  %_4 = call i8 @_ZN4core3ptr4read17h73cd450ff857ea83E(ptr %9) #17, !dbg !11062
  %10 = getelementptr inbounds { i8, i8 }, ptr %1, i32 0, i32 1, !dbg !11063
  store i8 %_4, ptr %10, align 1, !dbg !11063
  store i8 1, ptr %1, align 1, !dbg !11063
  br label %bb8, !dbg !11051

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_191041be788d99199d297d0f6b497cc9) #18, !dbg !11052
  unreachable, !dbg !11052

bb8:                                              ; preds = %bb1, %bb3
  %11 = getelementptr inbounds { i8, i8 }, ptr %1, i32 0, i32 0, !dbg !11064
  %12 = load i8, ptr %11, align 1, !dbg !11064, !range !673, !noundef !45
  %13 = trunc i8 %12 to i1, !dbg !11064
  %14 = getelementptr inbounds { i8, i8 }, ptr %1, i32 0, i32 1, !dbg !11064
  %15 = load i8, ptr %14, align 1, !dbg !11064
  %16 = zext i1 %13 to i8, !dbg !11064
  %17 = insertvalue { i8, i8 } undef, i8 %16, 0, !dbg !11064
  %18 = insertvalue { i8, i8 } %17, i8 %15, 1, !dbg !11064
  ret { i8, i8 } %18, !dbg !11064
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h21558dcc8ec1dbc0E"(ptr align 8 %self, ptr %other.0, i64 %other.1) unnamed_addr #1 !dbg !11065 {
start:
  %0 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %len.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11069, metadata !DIExpression()), !dbg !11075
  %1 = getelementptr inbounds { ptr, i64 }, ptr %other.dbg.spill, i32 0, i32 0
  store ptr %other.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !11070, metadata !DIExpression()), !dbg !11076
  store i64 %other.1, ptr %count.dbg.spill, align 8, !dbg !11077
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !11071, metadata !DIExpression()), !dbg !11078
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hdd7de8b6d3adb32bE"(ptr align 8 %self, i64 %other.1) #17, !dbg !11079
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %self) #17, !dbg !11080
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !11080
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !11073, metadata !DIExpression()), !dbg !11081
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_12 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %self) #17, !dbg !11082
  store ptr %_12, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5931, metadata !DIExpression()), !dbg !11083
  store i64 %len, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5936, metadata !DIExpression()), !dbg !11085
  store ptr %_12, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !5940, metadata !DIExpression()), !dbg !11086
  store i64 %len, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !5945, metadata !DIExpression()), !dbg !11088
  %3 = getelementptr inbounds i8, ptr %_12, i64 %len, !dbg !11089
  store ptr %3, ptr %0, align 8, !dbg !11089
  %_3.i = load ptr, ptr %0, align 8, !dbg !11089, !noundef !45
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr %other.0, ptr %_3.i, i64 %other.1) #17, !dbg !11090
  %4 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11091
  %5 = load i64, ptr %4, align 8, !dbg !11091, !noundef !45
  %6 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %other.1), !dbg !11091
  %_15.0 = extractvalue { i64, i1 } %6, 0, !dbg !11091
  %_15.1 = extractvalue { i64, i1 } %6, 1, !dbg !11091
  %7 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !11091
  br i1 %7, label %panic, label %bb6, !dbg !11091

bb6:                                              ; preds = %start
  %8 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11091
  store i64 %_15.0, ptr %8, align 8, !dbg !11091
  ret void, !dbg !11092

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.2, i64 28, ptr align 8 @alloc_678b85d2616044cae3ab040f83b9c2b7) #18, !dbg !11091
  unreachable, !dbg !11091
}

; alloc::vec::Vec<T,A>::drain
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17h18adce0b1c57c34fE"(ptr sret(%"vec::drain::Drain<'_, u8>") %0, ptr align 8 %self, i64 %range.0, i64 %range.1) unnamed_addr #0 !dbg !11093 {
start:
  %1 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %range_slice.dbg.spill = alloca { ptr, i64 }, align 8
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %range.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca i64, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11097, metadata !DIExpression()), !dbg !11107
  %2 = getelementptr inbounds { i64, i64 }, ptr %range.dbg.spill, i32 0, i32 0
  store i64 %range.0, ptr %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, ptr %range.dbg.spill, i32 0, i32 1
  store i64 %range.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %range.dbg.spill, metadata !11098, metadata !DIExpression()), !dbg !11108
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %self) #17, !dbg !11109
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !11109
  call void @llvm.dbg.declare(metadata ptr %len.dbg.spill, metadata !11099, metadata !DIExpression()), !dbg !11110
  store i64 %len, ptr %_8, align 8, !dbg !11111
  %4 = load i64, ptr %_8, align 8, !dbg !11112, !noundef !45
; call core::slice::index::range
  %5 = call { i64, i64 } @_ZN4core5slice5index5range17h2ac62bcd5c2d856eE(i64 %range.0, i64 %range.1, i64 %4, ptr align 8 @alloc_6f72c8639928306d8b274daf2f21be7d) #17, !dbg !11112
  %_7.0 = extractvalue { i64, i64 } %5, 0, !dbg !11112
  %_7.1 = extractvalue { i64, i64 } %5, 1, !dbg !11112
  store i64 %_7.0, ptr %start.dbg.spill, align 8, !dbg !11113
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !11101, metadata !DIExpression()), !dbg !11114
  store i64 %_7.1, ptr %end.dbg.spill, align 8, !dbg !11115
  call void @llvm.dbg.declare(metadata ptr %end.dbg.spill, metadata !11103, metadata !DIExpression()), !dbg !11116
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E"(ptr align 8 %self, i64 %_7.0) #17, !dbg !11117
; call alloc::vec::Vec<T,A>::as_ptr
  %_13 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf37ccd2c9d3e0ec9E"(ptr align 8 %self) #17, !dbg !11118
  store ptr %_13, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3818, metadata !DIExpression()), !dbg !11119
  store i64 %_7.0, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !3823, metadata !DIExpression()), !dbg !11121
  store ptr %_13, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !3827, metadata !DIExpression()), !dbg !11122
  store i64 %_7.0, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !3833, metadata !DIExpression()), !dbg !11124
  %6 = getelementptr inbounds i8, ptr %_13, i64 %_7.0, !dbg !11125
  store ptr %6, ptr %1, align 8, !dbg !11125
  %7 = load ptr, ptr %1, align 8, !dbg !11125, !noundef !45
  %_16.0 = sub i64 %_7.1, %_7.0, !dbg !11126
  %_16.1 = icmp ult i64 %_7.1, %_7.0, !dbg !11126
  %8 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !11126
  br i1 %8, label %panic, label %bb6, !dbg !11126

bb6:                                              ; preds = %start
; call core::slice::raw::from_raw_parts
  %9 = call { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h8e8cb3629f7f1536E(ptr %7, i64 %_16.0) #17, !dbg !11127
  %range_slice.0 = extractvalue { ptr, i64 } %9, 0, !dbg !11127
  %range_slice.1 = extractvalue { ptr, i64 } %9, 1, !dbg !11127
  %10 = getelementptr inbounds { ptr, i64 }, ptr %range_slice.dbg.spill, i32 0, i32 0, !dbg !11127
  store ptr %range_slice.0, ptr %10, align 8, !dbg !11127
  %11 = getelementptr inbounds { ptr, i64 }, ptr %range_slice.dbg.spill, i32 0, i32 1, !dbg !11127
  store i64 %range_slice.1, ptr %11, align 8, !dbg !11127
  call void @llvm.dbg.declare(metadata ptr %range_slice.dbg.spill, metadata !11104, metadata !DIExpression()), !dbg !11128
  %_19.0 = sub i64 %len, %_7.1, !dbg !11129
  %_19.1 = icmp ult i64 %len, %_7.1, !dbg !11129
  %12 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !11129
  br i1 %12, label %panic1, label %bb8, !dbg !11129

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_918855f270549a980391bb633a1ed9d7) #18, !dbg !11126
  unreachable, !dbg !11126

bb8:                                              ; preds = %bb6
; call core::slice::<impl [T]>::iter
  %13 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbce52b8616e0ed10E"(ptr align 1 %range_slice.0, i64 %range_slice.1) #17, !dbg !11130
  %_20.0 = extractvalue { ptr, ptr } %13, 0, !dbg !11130
  %_20.1 = extractvalue { ptr, ptr } %13, 1, !dbg !11130
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %_22 = call ptr @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17habb15163be7335dcE"(ptr align 8 %self) #17, !dbg !11131
  %14 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %0, i32 0, i32 1, !dbg !11132
  store i64 %_7.1, ptr %14, align 8, !dbg !11132
  %15 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %0, i32 0, i32 2, !dbg !11132
  store i64 %_19.0, ptr %15, align 8, !dbg !11132
  %16 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0, !dbg !11132
  store ptr %_20.0, ptr %16, align 8, !dbg !11132
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1, !dbg !11132
  store ptr %_20.1, ptr %17, align 8, !dbg !11132
  %18 = getelementptr inbounds %"vec::drain::Drain<'_, u8>", ptr %0, i32 0, i32 3, !dbg !11132
  store ptr %_22, ptr %18, align 8, !dbg !11132
  ret void, !dbg !11133

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_0cadfb3ea2bb7904c434fe7d632b6ea1) #18, !dbg !11129
  unreachable, !dbg !11129
}

; alloc::vec::Vec<T,A>::clear
; Function Attrs: inlinehint noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17h1fc4271a57ab8d97E"(ptr align 8 %self) unnamed_addr #1 !dbg !11134 {
start:
  %elems.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11136, metadata !DIExpression()), !dbg !11139
; call alloc::vec::Vec<T,A>::as_mut_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h0815b4cbd6a57810E"(ptr align 8 %self) #17, !dbg !11140
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !11140
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !11140
  %1 = getelementptr inbounds { ptr, i64 }, ptr %elems.dbg.spill, i32 0, i32 0, !dbg !11140
  store ptr %_3.0, ptr %1, align 8, !dbg !11140
  %2 = getelementptr inbounds { ptr, i64 }, ptr %elems.dbg.spill, i32 0, i32 1, !dbg !11140
  store i64 %_3.1, ptr %2, align 8, !dbg !11140
  call void @llvm.dbg.declare(metadata ptr %elems.dbg.spill, metadata !11137, metadata !DIExpression()), !dbg !11141
  %3 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11142
  store i64 0, ptr %3, align 8, !dbg !11142
  ret void, !dbg !11143
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint noredzone nounwind
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E"(ptr align 8 %self) unnamed_addr #1 !dbg !11144 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11146, metadata !DIExpression()), !dbg !11147
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11148
  %1 = load i64, ptr %0, align 8, !dbg !11148, !noundef !45
  ret i64 %1, !dbg !11149
}

; alloc::vec::Vec<T,A>::split_off::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9split_off13assert_failed17h5d65e091e7cb8e15E"(i64 %0, i64 %1) unnamed_addr #2 !dbg !11150 {
start:
  %_8 = alloca [2 x { ptr, ptr }], align 8
  %_4 = alloca %"core::fmt::Arguments<'_>", align 8
  %len = alloca i64, align 8
  %at = alloca i64, align 8
  store i64 %0, ptr %at, align 8
  store i64 %1, ptr %len, align 8
  call void @llvm.dbg.declare(metadata ptr %at, metadata !11153, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.declare(metadata ptr %len, metadata !11154, metadata !DIExpression()), !dbg !11156
; call core::fmt::ArgumentV1::new_display
  %2 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %at) #17, !dbg !11157
  %_9.0 = extractvalue { ptr, ptr } %2, 0, !dbg !11157
  %_9.1 = extractvalue { ptr, ptr } %2, 1, !dbg !11157
; call core::fmt::ArgumentV1::new_display
  %3 = call { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8 %len) #17, !dbg !11157
  %_11.0 = extractvalue { ptr, ptr } %3, 0, !dbg !11157
  %_11.1 = extractvalue { ptr, ptr } %3, 1, !dbg !11157
  %4 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_8, i64 0, i64 0, !dbg !11157
  %5 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 0, !dbg !11157
  store ptr %_9.0, ptr %5, align 8, !dbg !11157
  %6 = getelementptr inbounds { ptr, ptr }, ptr %4, i32 0, i32 1, !dbg !11157
  store ptr %_9.1, ptr %6, align 8, !dbg !11157
  %7 = getelementptr inbounds [2 x { ptr, ptr }], ptr %_8, i64 0, i64 1, !dbg !11157
  %8 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 0, !dbg !11157
  store ptr %_11.0, ptr %8, align 8, !dbg !11157
  %9 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 1, !dbg !11157
  store ptr %_11.1, ptr %9, align 8, !dbg !11157
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE(ptr sret(%"core::fmt::Arguments<'_>") %_4, ptr align 8 @alloc_49b342258e20faddfe12440339703d6a, i64 3, ptr align 8 %_8, i64 2) #17, !dbg !11157
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr %_4, ptr align 8 @alloc_2c87b7943a9ecddc828646051a024b77) #18, !dbg !11157
  unreachable, !dbg !11157
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hbe96f52d533dc352E"(ptr align 8 %self) unnamed_addr #1 !dbg !11158 {
start:
  %self.dbg.spill.i3 = alloca ptr, align 8
  %0 = alloca i64, align 8
  %1 = alloca ptr, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11162, metadata !DIExpression()), !dbg !11163
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_5 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %self) #17, !dbg !11164
  %2 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11165
  %_6 = load i64, ptr %2, align 8, !dbg !11165, !noundef !45
  store ptr %_5, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !5931, metadata !DIExpression()), !dbg !11166
  store i64 %_6, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !5936, metadata !DIExpression()), !dbg !11168
  store ptr %_5, ptr %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i2, metadata !5940, metadata !DIExpression()), !dbg !11169
  store i64 %_6, ptr %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i1, metadata !5945, metadata !DIExpression()), !dbg !11171
  %3 = getelementptr inbounds i8, ptr %_5, i64 %_6, !dbg !11172
  store ptr %3, ptr %1, align 8, !dbg !11172
  %_3.i = load ptr, ptr %1, align 8, !dbg !11172, !noundef !45
  store ptr %self, ptr %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i3, metadata !6862, metadata !DIExpression()), !dbg !11173
  %4 = load i64, ptr %self, align 8, !dbg !11175, !noundef !45
  store i64 %4, ptr %0, align 8, !dbg !11175
  %5 = load i64, ptr %0, align 8, !dbg !11176, !noundef !45
  %6 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11177
  %_10 = load i64, ptr %6, align 8, !dbg !11177, !noundef !45
  %_11.0 = sub i64 %5, %_10, !dbg !11178
  %_11.1 = icmp ult i64 %5, %_10, !dbg !11178
  %7 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !11178
  br i1 %7, label %panic, label %bb4, !dbg !11178

bb4:                                              ; preds = %start
; call core::slice::raw::from_raw_parts_mut
  %8 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h9e0de942ef190a92E(ptr %_3.i, i64 %_11.0) #17, !dbg !11179
  %_2.0 = extractvalue { ptr, i64 } %8, 0, !dbg !11179
  %_2.1 = extractvalue { ptr, i64 } %8, 1, !dbg !11179
  %9 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !11180
  %10 = insertvalue { ptr, i64 } %9, i64 %_2.1, 1, !dbg !11180
  ret { ptr, i64 } %10, !dbg !11180

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_ea57f57400c824483b5c5230769f8fad) #18, !dbg !11178
  unreachable, !dbg !11178
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: noredzone nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hd7661a6f6c782598E"(ptr align 8 %self, ptr align 1 %other.0, i64 %other.1) unnamed_addr #0 !dbg !11181 {
start:
  %other.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11185, metadata !DIExpression()), !dbg !11187
  %0 = getelementptr inbounds { ptr, i64 }, ptr %other.dbg.spill, i32 0, i32 0
  store ptr %other.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !11186, metadata !DIExpression()), !dbg !11188
; call core::slice::<impl [T]>::iter
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbce52b8616e0ed10E"(ptr align 1 %other.0, i64 %other.1) #17, !dbg !11189
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !11189
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !11189
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hd7b747e48170aaf6E"(ptr align 8 %self, ptr %_3.0, ptr %_3.1) #17, !dbg !11190
  ret void, !dbg !11191
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %self) unnamed_addr #1 !dbg !11192 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11195, metadata !DIExpression()), !dbg !11196
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf37ccd2c9d3e0ec9E"(ptr align 8 %self) #17, !dbg !11197
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11198
  %_3 = load i64, ptr %0, align 8, !dbg !11198, !noundef !45
; call core::slice::raw::from_raw_parts
  %1 = call { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h8e8cb3629f7f1536E(ptr %_2, i64 %_3) #17, !dbg !11199
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !11199
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !11199
  %4 = insertvalue { ptr, i64 } undef, ptr %2, 0, !dbg !11200
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1, !dbg !11200
  ret { ptr, i64 } %5, !dbg !11200
}

; <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h79749a66f96a9388E"(ptr align 8 %self) unnamed_addr #1 !dbg !11201 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11204, metadata !DIExpression()), !dbg !11205
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %self) #17, !dbg !11206
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11207
  %_4 = load i64, ptr %0, align 8, !dbg !11207, !noundef !45
; call core::slice::raw::from_raw_parts_mut
  %1 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h7c6310f89568fcfdE(ptr %_3, i64 %_4) #17, !dbg !11208
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11208
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11208
  %2 = insertvalue { ptr, i64 } undef, ptr %_2.0, 0, !dbg !11209
  %3 = insertvalue { ptr, i64 } %2, i64 %_2.1, 1, !dbg !11209
  ret { ptr, i64 } %3, !dbg !11209
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
; Function Attrs: noredzone nounwind
define void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h58e1d92982ef903eE"(ptr sret(%"vec::Vec<u8>") %0, ptr align 8 %self) unnamed_addr #0 !dbg !11210 {
start:
  %alloc.dbg.spill = alloca %"alloc::Global", align 1
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11215, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.declare(metadata ptr %alloc.dbg.spill, metadata !11216, metadata !DIExpression()), !dbg !11219
; call alloc::vec::Vec<T,A>::allocator
  %_4 = call align 1 ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h614a3eb061a21414E"(ptr align 8 %self) #17, !dbg !11220
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h187cfdf791c04a0fE"(ptr align 1 %_4) #17, !dbg !11220
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %self) #17, !dbg !11221
  %_6.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11221
  %_6.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11221
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h2f7130b38bfec602E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %_6.0, i64 %_6.1) #17, !dbg !11222
  ret void, !dbg !11223
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone_from
; Function Attrs: noredzone nounwind
define void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h5277c6e7eb5612fdE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 !dbg !11224 {
start:
  %other.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11228, metadata !DIExpression()), !dbg !11230
  store ptr %other, ptr %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !11229, metadata !DIExpression()), !dbg !11231
; call alloc::vec::Vec<T,A>::as_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17ha6d67d0ada786caeE"(ptr align 8 %other) #17, !dbg !11232
  %_5.0 = extractvalue { ptr, i64 } %0, 0, !dbg !11232
  %_5.1 = extractvalue { ptr, i64 } %0, 1, !dbg !11232
; call <[T] as alloc::slice::SpecCloneIntoVec<T,A>>::clone_into
  call void @"_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17hcd6eb75fe5a5dc28E"(ptr align 1 %_5.0, i64 %_5.1, ptr align 8 %self) #17, !dbg !11233
  ret void, !dbg !11234
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint noredzone nounwind
define { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h5ff7c49b12e6a03bE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 !dbg !11235 {
start:
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11240, metadata !DIExpression()), !dbg !11243
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !11241, metadata !DIExpression()), !dbg !11244
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %self) #17, !dbg !11245
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11245
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11245
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %2 = call { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h0248f021290b27cdE"(ptr align 1 %_4.0, i64 %_4.1, ptr align 8 %0) #17, !dbg !11246
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !11246
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !11246
  %5 = insertvalue { ptr, i64 } undef, ptr %3, 0, !dbg !11247
  %6 = insertvalue { ptr, i64 } %5, i64 %4, 1, !dbg !11247
  ret { ptr, i64 } %6, !dbg !11247
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
; Function Attrs: noredzone nounwind
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h91cf5eac2fa46b08E"(ptr align 8 %self, ptr align 1 %iter.0, i64 %iter.1) unnamed_addr #0 !dbg !11248 {
start:
  %iter.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11251, metadata !DIExpression()), !dbg !11255
  %0 = getelementptr inbounds { ptr, i64 }, ptr %iter.dbg.spill, i32 0, i32 0
  store ptr %iter.0, ptr %0, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %iter.dbg.spill, i32 0, i32 1
  store i64 %iter.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %iter.dbg.spill, metadata !11252, metadata !DIExpression()), !dbg !11256
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %2 = call { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hb1222ec7001c6b76E"(ptr align 1 %iter.0, i64 %iter.1) #17, !dbg !11257
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !11257
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !11257
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hd7b747e48170aaf6E"(ptr align 8 %self, ptr %_3.0, ptr %_3.1) #17, !dbg !11258
  ret void, !dbg !11259
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9452a7d31f766b00E"(ptr align 8 %self) unnamed_addr #0 !dbg !11260 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11263, metadata !DIExpression()), !dbg !11264
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E"(ptr align 8 %self) #17, !dbg !11265
  %0 = getelementptr inbounds %"vec::Vec<u8>", ptr %self, i32 0, i32 1, !dbg !11266
  %_4 = load i64, ptr %0, align 8, !dbg !11266, !noundef !45
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hf71777480862c3a6E(ptr %_3, i64 %_4) #17, !dbg !11267
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11267
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11267
  ret void, !dbg !11268
}

; <alloc::vec::Vec<T,A> as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN65_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hd393aa0156f5d7a0E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11269 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11274, metadata !DIExpression()), !dbg !11276
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11275, metadata !DIExpression()), !dbg !11277
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE"(ptr align 8 %self) #17, !dbg !11278
  %_4.0 = extractvalue { ptr, i64 } %0, 0, !dbg !11278
  %_4.1 = extractvalue { ptr, i64 } %0, 1, !dbg !11278
; call <[T] as core::fmt::Debug>::fmt
  %1 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h0263d49eec0b52ecE"(ptr align 1 %_4.0, i64 %_4.1, ptr align 8 %f) #17, !dbg !11279
  ret i1 %1, !dbg !11280
}

; <alloc::vec::Vec<T> as core::convert::From<&[T]>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN87_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h9e29b7b9ef4aa54cE"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !11281 {
start:
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %1 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %1, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !11284, metadata !DIExpression()), !dbg !11285
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17haa914a405ffc8f90E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %s.0, i64 %s.1) #17, !dbg !11286
  ret void, !dbg !11287
}

; <alloc::vec::Vec<u8> as core::convert::From<&str>>::from
; Function Attrs: noredzone nounwind
define void @"_ZN80_$LT$alloc..vec..Vec$LT$u8$GT$$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hee30c081acde0380E"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !11288 {
start:
  %1 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i = alloca { ptr, i64 }, align 8
  %s.dbg.spill = alloca { ptr, i64 }, align 8
  %2 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 0
  store ptr %s.0, ptr %2, align 8
  %3 = getelementptr inbounds { ptr, i64 }, ptr %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %s.dbg.spill, metadata !11293, metadata !DIExpression()), !dbg !11294
  store ptr %s.0, ptr %self.dbg.spill.i, align 8
  %4 = getelementptr inbounds { ptr, i64 }, ptr %self.dbg.spill.i, i32 0, i32 1
  store i64 %s.1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !3731, metadata !DIExpression()), !dbg !11295
  store ptr %s.0, ptr %1, align 8, !dbg !11297
  %5 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !11297
  store i64 %s.1, ptr %5, align 8, !dbg !11297
  %6 = load ptr, ptr %1, align 8, !dbg !11297, !nonnull !45, !align !643, !noundef !45
  %7 = getelementptr inbounds { ptr, i64 }, ptr %1, i32 0, i32 1, !dbg !11297
  %8 = load i64, ptr %7, align 8, !dbg !11297, !noundef !45
  %9 = insertvalue { ptr, i64 } undef, ptr %6, 0, !dbg !11298
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1, !dbg !11298
  %_2.0 = extractvalue { ptr, i64 } %10, 0, !dbg !11299
  %_2.1 = extractvalue { ptr, i64 } %10, 1, !dbg !11299
; call <alloc::vec::Vec<T> as core::convert::From<&[T]>>::from
  call void @"_ZN87_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h9e29b7b9ef4aa54cE"(ptr sret(%"vec::Vec<u8>") %0, ptr align 1 %_2.0, i64 %_2.1) #17, !dbg !11300
  ret void, !dbg !11301
}

; <alloc::alloc::Global as core::clone::Clone>::clone
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h187cfdf791c04a0fE"(ptr align 1 %self) unnamed_addr #1 !dbg !11302 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11307, metadata !DIExpression()), !dbg !11308
  ret void, !dbg !11309
}

; <alloc::alloc::Global as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN57_$LT$alloc..alloc..Global$u20$as$u20$core..fmt..Debug$GT$3fmt17h0ba7c081db2e79d3E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11310 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11315, metadata !DIExpression()), !dbg !11317
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11316, metadata !DIExpression()), !dbg !11317
; call core::fmt::Formatter::write_str
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h84efc8e991470cf4E(ptr align 8 %f, ptr align 1 @alloc_e873c9a97e8e44f67e8d3766fdac59f0, i64 6) #17, !dbg !11317
  ret i1 %0, !dbg !11318
}

; <alloc::collections::btree::set_val::SetValZST as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN82_$LT$alloc..collections..btree..set_val..SetValZST$u20$as$u20$core..fmt..Debug$GT$3fmt17h4675f4e3ed78722eE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11319 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11326, metadata !DIExpression()), !dbg !11328
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11327, metadata !DIExpression()), !dbg !11328
; call core::fmt::Formatter::write_str
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h84efc8e991470cf4E(ptr align 8 %f, ptr align 1 @alloc_e703872a2c10cdc34127474aff6c4963, i64 9) #17, !dbg !11328
  ret i1 %0, !dbg !11329
}

; <alloc::collections::TryReserveError as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN72_$LT$alloc..collections..TryReserveError$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ddfb9e64d3d2537E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11330 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_7 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11333, metadata !DIExpression()), !dbg !11335
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11334, metadata !DIExpression()), !dbg !11335
  store ptr %self, ptr %_7, align 8, !dbg !11336
; call core::fmt::Formatter::debug_struct_field1_finish
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field1_finish17h0c86de4a050deafeE(ptr align 8 %f, ptr align 1 @alloc_82b6d848cfc80ab1d9a0aefd21242bca, i64 15, ptr align 1 @alloc_c735c82aaaacbc2e8a3c93175de1f58d, i64 4, ptr align 1 %_7, ptr align 8 @vtable.c) #17, !dbg !11335
  ret i1 %0, !dbg !11337
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h143e7b21bfe6019aE"(ptr align 8 %self) unnamed_addr #1 !dbg !11338 {
start:
  %__self_1.dbg.spill = alloca ptr, align 8
  %__self_0.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %0 = alloca { i64, i64 }, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11343, metadata !DIExpression()), !dbg !11347
  %1 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !11347
  %2 = load i64, ptr %1, align 8, !dbg !11347, !range !1009, !noundef !45
  %3 = icmp eq i64 %2, 0, !dbg !11347
  %_2 = select i1 %3, i64 0, i64 1, !dbg !11347
  %4 = icmp eq i64 %_2, 0, !dbg !11347
  br i1 %4, label %bb3, label %bb1, !dbg !11347

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !11347
  store i64 0, ptr %5, align 8, !dbg !11347
  br label %bb5, !dbg !11347

bb1:                                              ; preds = %start
  store ptr %self, ptr %__self_0.dbg.spill, align 8, !dbg !11348
  call void @llvm.dbg.declare(metadata ptr %__self_0.dbg.spill, metadata !11344, metadata !DIExpression()), !dbg !11349
  store ptr %self, ptr %__self_1.dbg.spill, align 8, !dbg !11350
  call void @llvm.dbg.declare(metadata ptr %__self_1.dbg.spill, metadata !11346, metadata !DIExpression()), !dbg !11351
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %6 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h101e7442eb6ee0e2E"(ptr align 8 %self) #17, !dbg !11349
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !11349
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !11349
  %7 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !11352
  store i64 %_5.0, ptr %7, align 8, !dbg !11352
  %8 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !11352
  store i64 %_5.1, ptr %8, align 8, !dbg !11352
  br label %bb5, !dbg !11353

bb2:                                              ; No predecessors!
  unreachable, !dbg !11347

bb5:                                              ; preds = %bb3, %bb1
  %9 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 0, !dbg !11354
  %10 = load i64, ptr %9, align 8, !dbg !11354
  %11 = getelementptr inbounds { i64, i64 }, ptr %0, i32 0, i32 1, !dbg !11354
  %12 = load i64, ptr %11, align 8, !dbg !11354, !range !1009, !noundef !45
  %13 = insertvalue { i64, i64 } undef, i64 %10, 0, !dbg !11354
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1, !dbg !11354
  ret { i64, i64 } %14, !dbg !11354
}

; <alloc::collections::TryReserveErrorKind as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN76_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h96f06e6fa50bef9fE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11355 {
start:
  %__self_0.dbg.spill = alloca ptr, align 8
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %__self_1 = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11360, metadata !DIExpression()), !dbg !11365
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11361, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.declare(metadata ptr %__self_1, metadata !11364, metadata !DIExpression()), !dbg !11366
  %1 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !11365
  %2 = load i64, ptr %1, align 8, !dbg !11365, !range !1009, !noundef !45
  %3 = icmp eq i64 %2, 0, !dbg !11365
  %_3 = select i1 %3, i64 0, i64 1, !dbg !11365
  %4 = icmp eq i64 %_3, 0, !dbg !11365
  br i1 %4, label %bb3, label %bb1, !dbg !11365

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h84efc8e991470cf4E(ptr align 8 %f, ptr align 1 @alloc_c966fd153c036719e7d1550713127bf0, i64 16) #17, !dbg !11365
  %6 = zext i1 %5 to i8, !dbg !11365
  store i8 %6, ptr %0, align 1, !dbg !11365
  br label %bb4, !dbg !11365

bb1:                                              ; preds = %start
  store ptr %self, ptr %__self_0.dbg.spill, align 8, !dbg !11367
  call void @llvm.dbg.declare(metadata ptr %__self_0.dbg.spill, metadata !11362, metadata !DIExpression()), !dbg !11368
  store ptr %self, ptr %__self_1, align 8, !dbg !11369
; call core::fmt::Formatter::debug_struct_field2_finish
  %7 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17ha3908ba9ddf284ffE(ptr align 8 %f, ptr align 1 @alloc_a6c7dd7aa492c2630267989583a5c43b, i64 10, ptr align 1 @alloc_b9b5b438fddc1a9ac3c2652ae34d59e0, i64 6, ptr align 1 %self, ptr align 8 @vtable.d, ptr align 1 @alloc_cf473b689ec9b095552d8d6273c13657, i64 14, ptr align 1 %__self_1, ptr align 8 @vtable.e) #17, !dbg !11370
  %8 = zext i1 %7 to i8, !dbg !11370
  store i8 %8, ptr %0, align 1, !dbg !11370
  br label %bb4, !dbg !11370

bb2:                                              ; No predecessors!
  unreachable, !dbg !11365

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, ptr %0, align 1, !dbg !11371, !range !673, !noundef !45
  %10 = trunc i8 %9 to i1, !dbg !11371
  ret i1 %10, !dbg !11371
}

; <alloc::ffi::c_str::NulError as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN64_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17h82a720aa943c94e6E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11372 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_8 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11375, metadata !DIExpression()), !dbg !11377
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11376, metadata !DIExpression()), !dbg !11377
  %0 = getelementptr inbounds %"ffi::c_str::NulError", ptr %self, i32 0, i32 1, !dbg !11378
  store ptr %0, ptr %_8, align 8, !dbg !11378
; call core::fmt::Formatter::debug_tuple_field2_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field2_finish17h5985260fb28ebc73E(ptr align 8 %f, ptr align 1 @alloc_8c092c543c31c75ea0ddbfd3407361bc, i64 8, ptr align 1 %self, ptr align 8 @vtable.f, ptr align 1 %_8, ptr align 8 @vtable.g) #17, !dbg !11377
  ret i1 %1, !dbg !11379
}

; <alloc::ffi::c_str::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN81_$LT$alloc..ffi..c_str..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h71d4027fe13800b0E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11380 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %__self_0 = alloca ptr, align 8
  %0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11386, metadata !DIExpression()), !dbg !11390
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11387, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.declare(metadata ptr %__self_0, metadata !11388, metadata !DIExpression()), !dbg !11391
  %_3 = load i64, ptr %self, align 8, !dbg !11390, !range !1797, !noundef !45
  %1 = icmp eq i64 %_3, 0, !dbg !11390
  br i1 %1, label %bb3, label %bb1, !dbg !11390

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, ptr %self, i32 0, i32 1, !dbg !11392
  store ptr %2, ptr %__self_0, align 8, !dbg !11392
; call core::fmt::Formatter::debug_tuple_field1_finish
  %3 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17h4719846a92e4a03cE(ptr align 8 %f, ptr align 1 @alloc_4af9ea6bd86e597fca4c445911a6ff30, i64 11, ptr align 1 %__self_0, ptr align 8 @vtable.h) #17, !dbg !11393
  %4 = zext i1 %3 to i8, !dbg !11393
  store i8 %4, ptr %0, align 1, !dbg !11393
  br label %bb4, !dbg !11393

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h84efc8e991470cf4E(ptr align 8 %f, ptr align 1 @alloc_a13e8fc0a6880042d51602b8537474b5, i64 16) #17, !dbg !11390
  %6 = zext i1 %5 to i8, !dbg !11390
  store i8 %6, ptr %0, align 1, !dbg !11390
  br label %bb4, !dbg !11390

bb2:                                              ; No predecessors!
  unreachable, !dbg !11390

bb4:                                              ; preds = %bb3, %bb1
  %7 = load i8, ptr %0, align 1, !dbg !11394, !range !673, !noundef !45
  %8 = trunc i8 %7 to i1, !dbg !11394
  ret i1 %8, !dbg !11394
}

; <alloc::ffi::c_str::FromVecWithNulError as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN75_$LT$alloc..ffi..c_str..FromVecWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17h4de5e0332c2be31cE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11395 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11398, metadata !DIExpression()), !dbg !11400
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11399, metadata !DIExpression()), !dbg !11400
  %0 = getelementptr inbounds %"ffi::c_str::FromVecWithNulError", ptr %self, i32 0, i32 1, !dbg !11401
  store ptr %0, ptr %_10, align 8, !dbg !11401
; call core::fmt::Formatter::debug_struct_field2_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17ha3908ba9ddf284ffE(ptr align 8 %f, ptr align 1 @alloc_77cb2fbc630e0a6db548f2c425431f8c, i64 19, ptr align 1 @alloc_eb727971a8c0256e75ac27084e837dc2, i64 10, ptr align 1 %self, ptr align 8 @vtable.i, ptr align 1 @alloc_067cd0ecb808289752b17e63d2086487, i64 5, ptr align 1 %_10, ptr align 8 @vtable.g) #17, !dbg !11400
  ret i1 %1, !dbg !11402
}

; <alloc::ffi::c_str::IntoStringError as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN71_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..fmt..Debug$GT$3fmt17h60af2766032ab9d6E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11403 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11406, metadata !DIExpression()), !dbg !11408
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11407, metadata !DIExpression()), !dbg !11408
  %0 = getelementptr inbounds %"ffi::c_str::IntoStringError", ptr %self, i32 0, i32 1, !dbg !11409
  store ptr %0, ptr %_10, align 8, !dbg !11409
; call core::fmt::Formatter::debug_struct_field2_finish
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17ha3908ba9ddf284ffE(ptr align 8 %f, ptr align 1 @alloc_073efc19633283e27d64bdcc0e32bf21, i64 15, ptr align 1 @alloc_1b49e3d41ebccbfcd0be63976b649f2c, i64 5, ptr align 1 %self, ptr align 8 @vtable.j, ptr align 1 @alloc_8b598a7aaf99963d6d65bec852f36b67, i64 5, ptr align 1 %_10, ptr align 8 @vtable.k) #17, !dbg !11408
  ret i1 %1, !dbg !11410
}

; <alloc::string::FromUtf8Error as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN65_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h37a0a03d2b53cd39E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11411 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11414, metadata !DIExpression()), !dbg !11416
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11415, metadata !DIExpression()), !dbg !11416
  %_6 = getelementptr inbounds %"string::FromUtf8Error", ptr %self, i32 0, i32 1, !dbg !11417
  store ptr %self, ptr %_10, align 8, !dbg !11418
; call core::fmt::Formatter::debug_struct_field2_finish
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17ha3908ba9ddf284ffE(ptr align 8 %f, ptr align 1 @alloc_a2ba53d8e8e6c9b4cfaadee4afdf5070, i64 13, ptr align 1 @alloc_067cd0ecb808289752b17e63d2086487, i64 5, ptr align 1 %_6, ptr align 8 @vtable.l, ptr align 1 @alloc_8b598a7aaf99963d6d65bec852f36b67, i64 5, ptr align 1 %_10, ptr align 8 @vtable.k) #17, !dbg !11416
  ret i1 %0, !dbg !11419
}

; <alloc::string::FromUtf16Error as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define zeroext i1 @"_ZN66_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..fmt..Debug$GT$3fmt17ha756c47af1333aaaE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11420 {
start:
  %f.dbg.spill = alloca ptr, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_6 = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !11423, metadata !DIExpression()), !dbg !11425
  store ptr %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !11424, metadata !DIExpression()), !dbg !11425
  store ptr %self, ptr %_6, align 8, !dbg !11426
; call core::fmt::Formatter::debug_tuple_field1_finish
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17h4719846a92e4a03cE(ptr align 8 %f, ptr align 1 @alloc_c5aa50b55a127b9a5daf41c471ea2b31, i64 14, ptr align 1 %_6, ptr align 8 @vtable.e) #17, !dbg !11425
  ret i1 %0, !dbg !11427
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #7

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h2fc70a669a1a2a29E"(ptr, ptr) unnamed_addr #1

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
declare align 2 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5b5bc9ce8c7bc0b7E"(ptr align 8) unnamed_addr #1

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9eb1d87c9d7b337eE"(ptr) unnamed_addr #1

; <core::str::error::Utf8Error as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17he8fc625818b35893E"(ptr align 8, ptr align 8) unnamed_addr #0

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #8

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h8639f8001f0eeb5aE(ptr) unnamed_addr #0

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking14panic_nounwind17h5e7e5c0cee2d3924E(ptr align 1, i64) unnamed_addr #2

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h08db4e672d7e3a62E"(ptr align 1, i64) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #9

; core::panicking::panic
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking5panic17h89fb6d2dca04318dE(ptr align 1, i64, ptr align 8) unnamed_addr #2

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17h8262b2c43d637f25E(i64, i64, ptr align 8) unnamed_addr #2

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h4fc3709c857d7bd4E"(ptr align 1, i64, i64) unnamed_addr #1

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h8ae5bebd96008cd7E(ptr align 8) unnamed_addr #0

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hf98e14581fe3e2e0E"(ptr align 8, ptr align 8) unnamed_addr #0

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h15ce7912bcc9ca8eE(ptr align 8) unnamed_addr #0

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h229ff530b39bb162E"(ptr align 8, ptr align 8) unnamed_addr #0

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hc65172f96ee21bbaE"(ptr align 8, ptr align 8) unnamed_addr #0

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #8

; core::fmt::write
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt5write17h3bdd1810c8fc8ac3E(ptr align 1, ptr align 8, ptr) unnamed_addr #0

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h665051f55ae64435E"(ptr align 8, i64) unnamed_addr #1

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h883e5fd5c1257adfE"(i64, i64, i64) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; core::panicking::panic_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking9panic_fmt17h110b4081507dd9c0E(ptr, ptr align 8) unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i8, i1 } @llvm.umul.with.overflow.i8(i8, i8) #7

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #7

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core10intrinsics19copy_nonoverlapping17hff6acf8c787947dfE(ptr, ptr, i64) unnamed_addr #1

; core::intrinsics::write_bytes
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core10intrinsics11write_bytes17h72c5c797464fd770E(ptr, i8, i64) unnamed_addr #1

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3ptr8metadata8metadata17h9665877a59ac6f81E(ptr, i64) unnamed_addr #1

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3ptr8metadata8metadata17h07ab14d6ec5c4ef2E(ptr, i64) unnamed_addr #1

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7895b0ae390f1c8aE"(ptr) unnamed_addr #1

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hf71777480862c3a6E(ptr, i64) unnamed_addr #1

; Function Attrs: inaccessiblememonly nocallback nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #10

; core::ptr::const_ptr::<impl *const T>::with_metadata_of
; Function Attrs: inlinehint noredzone nounwind
declare ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17hc191d6a521f8cda5E"(ptr, ptr) unnamed_addr #1

; <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint noredzone nounwind
declare align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h97dc35910efc5416E"(ptr align 8) unnamed_addr #1

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
declare align 1 ptr @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha942b2caabbc5beaE"(ptr align 1) unnamed_addr #1

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint noredzone nounwind
declare { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h907923f61b8f032aE"() unnamed_addr #1

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hd8888746ef0172ecE"(ptr align 1, ptr align 8) unnamed_addr #1

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbce52b8616e0ed10E"(ptr align 1, i64) unnamed_addr #1

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hbe60bf6df0d376c6E"(ptr align 8) unnamed_addr #1

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
declare ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb18169b0fd854ff3E"(ptr, i64) unnamed_addr #1

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h573a8e5041044b81E(ptr, i64) unnamed_addr #1

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h843400ccc7fc9963E"(ptr, i64) unnamed_addr #1

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint noredzone nounwind
declare i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h87fec283b997148bE"(i32, ptr align 8) unnamed_addr #1

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1df2881e6f51dc0aE"(ptr align 1, i64, ptr align 8) unnamed_addr #1

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb31f7356848f961bE"(ptr align 1, i64, i64, ptr align 8) unnamed_addr #1

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @_ZN4core3fmt10ArgumentV111new_display17ha1dc6d3ed0501a9fE(ptr align 8) unnamed_addr #1

; core::fmt::ArgumentV1::new_upper_hex
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @_ZN4core3fmt10ArgumentV113new_upper_hex17h933a51c163f21ef7E(ptr align 4) unnamed_addr #1

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h04e1b965a6a86275E"(i64, i64, ptr, i64) unnamed_addr #1

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h300f550249475dfbE"(i64, i64, ptr, i64) unnamed_addr #1

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha38f20e9e0c3bd6dE(ptr, i64) unnamed_addr #1

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h906283959d1dc186E(ptr) unnamed_addr #0

; core::intrinsics::is_valid_allocation_size
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core10intrinsics24is_valid_allocation_size17h1a9eb85667d98e4bE(i64) unnamed_addr #0

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h7a4f4845fc541a9fE"(ptr) unnamed_addr #1

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17h8c73cb10d9ab3329E(i64, i64, ptr align 8) unnamed_addr #2

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h1cd0176f9202aacaE(i64, i64, ptr align 8) unnamed_addr #2

; core::slice::index::slice_start_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index31slice_start_index_overflow_fail17h3851c120c926e7fbE(ptr align 8) unnamed_addr #2

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17h17280eb0c6479a4dE(ptr align 8) unnamed_addr #2

; core::slice::memchr::memchr_aligned
; Function Attrs: noredzone nounwind
declare { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h4bc76a1ea75ca5b4E(i8, ptr align 1, i64) unnamed_addr #0

; core::option::expect_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core6option13expect_failed17hbff91b6deea9603bE(ptr align 1, i64, ptr align 8) unnamed_addr #2

; <core::fmt::Error as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h0cd1682f20b9dd77E"(ptr align 1, ptr align 8) unnamed_addr #0

; core::result::unwrap_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core6result13unwrap_failed17h48c1b0ff8f31f7ddE(ptr align 1, i64, ptr align 1, ptr align 8, ptr align 8) unnamed_addr #2

; <core::alloc::layout::LayoutError as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h7b1b1b0c8f69cf75E"(ptr align 1, ptr align 8) unnamed_addr #0

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h89aa2bd3a4799f56E"(ptr align 8, ptr align 8) unnamed_addr #0

; core::panicking::assert_failed_inner
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking19assert_failed_inner17h99f4f1cf0550cc2aE(i8, ptr align 1, ptr align 8, ptr align 1, ptr align 8, ptr, ptr align 8) unnamed_addr #2

; core::str::pattern::StrSearcher::new
; Function Attrs: noredzone nounwind
declare void @_ZN4core3str7pattern11StrSearcher3new17h4d93508280f8333aE(ptr sret(%"core::str::pattern::StrSearcher<'_, '_>"), ptr align 1, i64, ptr align 1, i64) unnamed_addr #0

; core::str::validations::next_code_point
; Function Attrs: inlinehint noredzone nounwind
declare { i32, i32 } @_ZN4core3str11validations15next_code_point17h2f55c19c44a2b949E(ptr align 8) unnamed_addr #1

; core::option::Option<T>::map
; Function Attrs: inlinehint noredzone nounwind
declare i32 @"_ZN4core6option15Option$LT$T$GT$3map17h43947862de07f8cdE"(i32, i32) unnamed_addr #1

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hef57bdc5be76045bE"(ptr) unnamed_addr #1

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h563d52a450f48a7fE"(ptr) unnamed_addr #1

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
declare { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1149a61eb05c825aE"(i16, i16) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #7

; core::cmp::max
; Function Attrs: inlinehint noredzone nounwind
declare i64 @_ZN4core3cmp3max17h25fb54eb7f7e73a7E(i64, i64) unnamed_addr #1

; core::panicking::assert_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking13assert_failed17ha2a9c290507d1ce0E(i8, ptr align 8, ptr align 8, ptr, ptr align 8) unnamed_addr #2

; Function Attrs: noredzone nounwind allockind("alloc,uninitialized,aligned") allocsize(0)
declare noalias ptr @__rust_alloc(i64, i64 allocalign) unnamed_addr #11

; Function Attrs: noredzone nounwind allockind("free")
declare void @__rust_dealloc(ptr allocptr, i64, i64) unnamed_addr #12

; Function Attrs: noredzone nounwind allockind("realloc,aligned") allocsize(3)
declare noalias ptr @__rust_realloc(ptr allocptr, i64, i64 allocalign, i64) unnamed_addr #13

; Function Attrs: noredzone nounwind allockind("alloc,zeroed,aligned") allocsize(0)
declare noalias ptr @__rust_alloc_zeroed(i64, i64 allocalign) unnamed_addr #14

; Function Attrs: noredzone noreturn nounwind
declare void @__rust_alloc_error_handler(i64, i64) unnamed_addr #5

; core::panicking::panic_nounwind_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare void @_ZN4core9panicking18panic_nounwind_fmt17hca29746e69cbccadE(ptr, ptr align 8) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #15

; core::fmt::Formatter::write_str
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h84efc8e991470cf4E(ptr align 8, ptr align 1, i64) unnamed_addr #0

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9793d407e2a9d31bE"(i1 zeroext) unnamed_addr #1

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd9c4cebc2c35a9eeE"(ptr align 8) unnamed_addr #1

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint noredzone nounwind
declare i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hcc01091c1f437e02E"(i64, i64, ptr align 8) unnamed_addr #1

; core::option::Option<T>::is_none
; Function Attrs: inlinehint noredzone nounwind
declare zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17ha2933e096c3ac179E"(ptr align 8) unnamed_addr #1

; Function Attrs: noredzone nounwind
declare i64 @strlen(ptr) unnamed_addr #0

; <core::ffi::c_str::CStr as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN59_$LT$core..ffi..c_str..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17hb226784e3fb000a6E"(ptr align 1, i64, ptr align 8) unnamed_addr #0

; <&core::ffi::c_str::CStr as core::default::Default>::default
; Function Attrs: noredzone nounwind
declare { ptr, i64 } @"_ZN69_$LT$$RF$core..ffi..c_str..CStr$u20$as$u20$core..default..Default$GT$7default17h6a79868be7ce1d7cE"() unnamed_addr #0

; core::fmt::Formatter::write_fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd4a6383714610d49E(ptr align 8, ptr) unnamed_addr #0

; <str as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h44ce19c6d35d2787E"(ptr align 1, i64, ptr align 8) unnamed_addr #0

; <core::str::error::Utf8Error as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h6f070f97c6b024f0E"(ptr align 8, ptr align 8) unnamed_addr #0

; <core::str::error::Utf8Error as core::error::Error>::description
; Function Attrs: noredzone nounwind
declare { ptr, i64 } @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..error..Error$GT$11description17h3d1d1e88c080eb28E"(ptr align 8) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0eb11e0acbc642edE"(ptr sret(%"core::str::iter::CharIndices<'_>"), ptr) unnamed_addr #1

; core::unicode::unicode_data::conversions::to_lower
; Function Attrs: noredzone nounwind
declare void @_ZN4core7unicode12unicode_data11conversions8to_lower17h41216f9df913826bE(ptr sret([3 x i32]), i32) unnamed_addr #0

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h22fa185c85845d07E"(ptr align 1, i64, i64, ptr align 8) unnamed_addr #1

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h8c2af9ccc04a1440E"(ptr align 1, i64, i64, ptr align 8) unnamed_addr #1

; core::unicode::unicode_data::cased::lookup
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core7unicode12unicode_data5cased6lookup17hd9a8ea58d16e441aE(i32) unnamed_addr #0

; core::unicode::unicode_data::case_ignorable::lookup
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable6lookup17hbb53c84847493331E(i32) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1354b1e70901b40cE"(ptr, ptr) unnamed_addr #1

; core::unicode::unicode_data::conversions::to_upper
; Function Attrs: noredzone nounwind
declare void @_ZN4core7unicode12unicode_data11conversions8to_upper17h2deb8d1259fb7f1bE(ptr sret([3 x i32]), i32) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfe7fce5f831d00cfE"(i64, i64) unnamed_addr #1

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint noredzone nounwind
declare { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbcb725b0a24a0670E"(ptr align 8) unnamed_addr #1

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h52825668d8afc09aE"(ptr align 1, i64, i64) unnamed_addr #1

; core::str::converts::from_utf8
; Function Attrs: noredzone nounwind
declare void @_ZN4core3str8converts9from_utf817haca84e40cf41cdfdE(ptr sret(%"core::result::Result<&str, core::str::error::Utf8Error>"), ptr align 1, i64) unnamed_addr #0

; core::str::lossy::Utf8Chunks::new
; Function Attrs: noredzone nounwind
declare { ptr, i64 } @_ZN4core3str5lossy10Utf8Chunks3new17h20429a3b714eaa5fE(ptr align 1, i64) unnamed_addr #0

; <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
declare void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8dd70a5bfbba11f5E"(ptr sret(%"core::option::Option<core::str::lossy::Utf8Chunk<'_>>"), ptr align 8) unnamed_addr #0

; core::str::lossy::Utf8Chunk::valid
; Function Attrs: noredzone nounwind
declare { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk5valid17hd625c7abfaf1feb7E(ptr align 8) unnamed_addr #0

; core::str::lossy::Utf8Chunk::invalid
; Function Attrs: noredzone nounwind
declare { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h2fb9eaf030c87ad8E(ptr align 8) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0d4b974bd3ca0c3cE"(ptr align 1, i64) unnamed_addr #1

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5a4357a9ac9f9c3bE"(ptr align 2, i64) unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #16

; <str as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h572294128f6b0ffdE"(ptr align 1, i64, ptr align 8) unnamed_addr #0

; core::fmt::Formatter::debug_tuple
; Function Attrs: noredzone nounwind
declare void @_ZN4core3fmt9Formatter11debug_tuple17h460ebb216f9738adE(ptr sret(%"core::fmt::builders::DebugTuple<'_, '_>"), ptr align 8, ptr align 1, i64) unnamed_addr #0

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he975b5950af71586E"(ptr align 8, ptr align 8) unnamed_addr #0

; core::fmt::builders::DebugTuple::field
; Function Attrs: noredzone nounwind
declare align 8 ptr @_ZN4core3fmt8builders10DebugTuple5field17h3addf200f90190a3E(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #0

; core::fmt::builders::DebugTuple::finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hd1f02de53d09d231E(ptr align 8) unnamed_addr #0

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
declare void @_ZN4core3ptr5write17hed57776f96abff2aE(ptr, i8) unnamed_addr #1

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
declare i8 @_ZN4core3ptr4read17h73cd450ff857ea83E(ptr) unnamed_addr #1

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h8e8cb3629f7f1536E(ptr, i64) unnamed_addr #1

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint noredzone nounwind
declare { ptr, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h0248f021290b27cdE"(ptr align 1, i64, ptr align 8) unnamed_addr #1

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: noredzone nounwind
declare { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hb1222ec7001c6b76E"(ptr align 1, i64) unnamed_addr #0

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h0263d49eec0b52ecE"(ptr align 1, i64, ptr align 8) unnamed_addr #0

; core::fmt::Formatter::debug_struct_field1_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field1_finish17h0c86de4a050deafeE(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #0

; <core::alloc::layout::Layout as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN64_$LT$core..alloc..layout..Layout$u20$as$u20$core..fmt..Debug$GT$3fmt17h710c88d4bb05476bE"(ptr align 8, ptr align 8) unnamed_addr #0

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h48ab2cfcf08788adE"(ptr align 8, ptr align 8) unnamed_addr #0

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17ha3908ba9ddf284ffE(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #0

; core::fmt::Formatter::debug_tuple_field2_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field2_finish17h5985260fb28ebc73E(ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, ptr align 8) unnamed_addr #0

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2d36763529dcc5c8E"(ptr align 8, ptr align 8) unnamed_addr #0

; core::fmt::Formatter::debug_tuple_field1_finish
; Function Attrs: noredzone nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17h4719846a92e4a03cE(ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #0

attributes #0 = { noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #1 = { inlinehint noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #2 = { cold noinline noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #3 = { cold noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #4 = { noinline noredzone nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #5 = { noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #6 = { cold noredzone noreturn nounwind "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #7 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { argmemonly nocallback nofree nounwind willreturn }
attributes #9 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #10 = { inaccessiblememonly nocallback nofree nosync nounwind willreturn }
attributes #11 = { noredzone nounwind allockind("alloc,uninitialized,aligned") allocsize(0) "alloc-family"="__rust_alloc" "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #12 = { noredzone nounwind allockind("free") "alloc-family"="__rust_alloc" "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #13 = { noredzone nounwind allockind("realloc,aligned") allocsize(3) "alloc-family"="__rust_alloc" "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #14 = { noredzone nounwind allockind("alloc,zeroed,aligned") allocsize(0) "alloc-family"="__rust_alloc" "target-cpu"="generic" "target-features"="-mmx,-sse,+soft-float" }
attributes #15 = { cold noreturn nounwind }
attributes #16 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!343, !344, !345}
!llvm.dbg.cu = !{!346}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&mut alloc::string::String as core::fmt::Write>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&mut alloc::string::String as core::fmt::Write>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !14, templateParams: !45, identifier: "8a47c881cc07076782db8e82e941cfc4")
!4 = !{!5, !8, !10, !11, !12, !13}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::String", baseType: !15, size: 64, align: 64, dwarfAddressSpace: 0)
!15 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !16, file: !2, size: 192, align: 64, elements: !18, templateParams: !45, identifier: "2c5b583fbf443cbf527c45e3182975")
!16 = !DINamespace(name: "string", scope: !17)
!17 = !DINamespace(name: "alloc", scope: null)
!18 = !{!19}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !15, file: !2, baseType: !20, size: 192, align: 64)
!20 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !21, file: !2, size: 192, align: 64, elements: !22, templateParams: !50, identifier: "5506e2e8f8d7702126b223aaa73bf279")
!21 = !DINamespace(name: "vec", scope: !17)
!22 = !{!23, !52}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !20, file: !2, baseType: !24, size: 128, align: 64)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !25, file: !2, size: 128, align: 64, elements: !26, templateParams: !50, identifier: "b6a21d468dd801231c5e624582a77c35")
!25 = !DINamespace(name: "raw_vec", scope: !17)
!26 = !{!27, !46, !47}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !24, file: !2, baseType: !28, size: 64, align: 64, offset: 64)
!28 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !29, file: !2, size: 64, align: 64, elements: !32, templateParams: !40, identifier: "a50c6ade683ba6a919ab0e412c83359c")
!29 = !DINamespace(name: "unique", scope: !30)
!30 = !DINamespace(name: "ptr", scope: !31)
!31 = !DINamespace(name: "core", scope: null)
!32 = !{!33, !42}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !28, file: !2, baseType: !34, size: 64, align: 64)
!34 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !35, file: !2, size: 64, align: 64, elements: !36, templateParams: !40, identifier: "1dbb83832a28bb2882fc75217f980e7b")
!35 = !DINamespace(name: "non_null", scope: !30)
!36 = !{!37}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !34, file: !2, baseType: !38, size: 64, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!39 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!40 = !{!41}
!41 = !DITemplateTypeParameter(name: "T", type: !39)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !28, file: !2, baseType: !43, align: 8)
!43 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !44, file: !2, align: 8, elements: !45, templateParams: !40, identifier: "c8e69dbe5f0987887aa4eced1a928fda")
!44 = !DINamespace(name: "marker", scope: !31)
!45 = !{}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !24, file: !2, baseType: !9, size: 64, align: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !24, file: !2, baseType: !48, align: 8)
!48 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !49, file: !2, align: 8, elements: !45, identifier: "12a7b3b9b13848a3919c7829caa50987")
!49 = !DINamespace(name: "alloc", scope: !17)
!50 = !{!41, !51}
!51 = !DITemplateTypeParameter(name: "A", type: !48)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !20, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!53 = !DIGlobalVariableExpression(var: !54, expr: !DIExpression())
!54 = distinct !DIGlobalVariable(name: "<core::fmt::Error as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !55, isLocal: true, isDefinition: true)
!55 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::fmt::Error as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !56, vtableHolder: !61, templateParams: !45, identifier: "6c903baf65742b0d5728e89cc10633d7")
!56 = !{!57, !58, !59, !60}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !55, file: !2, baseType: !6, size: 64, align: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !55, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !55, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !55, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!61 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !62, file: !2, align: 8, elements: !45, identifier: "c2c8f2f945c37359aa57422093183824")
!62 = !DINamespace(name: "fmt", scope: !31)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "<core::alloc::layout::LayoutError as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !65, isLocal: true, isDefinition: true)
!65 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::alloc::layout::LayoutError as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !66, vtableHolder: !71, templateParams: !45, identifier: "f999e2471f87aae4d72bb836efdf2e5")
!66 = !{!67, !68, !69, !70}
!67 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !65, file: !2, baseType: !6, size: 64, align: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !65, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !65, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !65, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !72, file: !2, align: 8, elements: !45, identifier: "1fc73594517d6fd26413b8694e96eb28")
!72 = !DINamespace(name: "layout", scope: !73)
!73 = !DINamespace(name: "alloc", scope: !31)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "<&core::option::Option<u8> as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !76, isLocal: true, isDefinition: true)
!76 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&core::option::Option<u8> as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !77, vtableHolder: !82, templateParams: !45, identifier: "cb6125574af392bad7a37a98a6b2eb00")
!77 = !{!78, !79, !80, !81}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !76, file: !2, baseType: !6, size: 64, align: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !76, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !76, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !76, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<u8>", baseType: !83, size: 64, align: 64, dwarfAddressSpace: 0)
!83 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !84, file: !2, size: 16, align: 8, elements: !85, templateParams: !45, identifier: "229491c31d962cde8cdc335a4618cda5")
!84 = !DINamespace(name: "option", scope: !31)
!85 = !{!86}
!86 = !DICompositeType(tag: DW_TAG_variant_part, scope: !83, file: !2, size: 16, align: 8, elements: !87, templateParams: !45, identifier: "af3768464e0cb35cd41a5abbdb5b64a", discriminator: !94)
!87 = !{!88, !90}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !86, file: !2, baseType: !89, size: 16, align: 8, extraData: i64 0)
!89 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !83, file: !2, size: 16, align: 8, elements: !45, templateParams: !40, identifier: "4703aea512139fcbcd228c08e9ea8714")
!90 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !86, file: !2, baseType: !91, size: 16, align: 8, extraData: i64 1)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !83, file: !2, size: 16, align: 8, elements: !92, templateParams: !40, identifier: "b301832da17747c0977af8baefb464c7")
!92 = !{!93}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !91, file: !2, baseType: !39, size: 8, align: 8, offset: 8)
!94 = !DIDerivedType(tag: DW_TAG_member, scope: !83, file: !2, baseType: !39, size: 8, align: 8, flags: DIFlagArtificial)
!95 = !DIGlobalVariableExpression(var: !96, expr: !DIExpression())
!96 = distinct !DIGlobalVariable(name: "<alloc::boxed::{impl#66}::from::StringError as core::error::Error>::{vtable}", scope: null, file: !2, type: !97, isLocal: true, isDefinition: true)
!97 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::boxed::{impl#66}::from::StringError as core::error::Error>::{vtable_type}", file: !2, size: 704, align: 64, flags: DIFlagArtificial, elements: !98, vtableHolder: !110, templateParams: !45, identifier: "bbacb2012a0a5573a4ff08f20409dbe6")
!98 = !{!99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109}
!99 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !97, file: !2, baseType: !6, size: 64, align: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !97, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !97, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !97, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !97, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__super_trait_ptr5", scope: !97, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__method6", scope: !97, file: !2, baseType: !6, size: 64, align: 64, offset: 384)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__method7", scope: !97, file: !2, baseType: !6, size: 64, align: 64, offset: 448)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "__method8", scope: !97, file: !2, baseType: !6, size: 64, align: 64, offset: 512)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__method9", scope: !97, file: !2, baseType: !6, size: 64, align: 64, offset: 576)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "__method10", scope: !97, file: !2, baseType: !6, size: 64, align: 64, offset: 640)
!110 = !DICompositeType(tag: DW_TAG_structure_type, name: "StringError", scope: !111, file: !2, size: 192, align: 64, elements: !114, templateParams: !45, identifier: "54af44e982db291377fb5822b5461a49")
!111 = !DINamespace(name: "from", scope: !112)
!112 = !DINamespace(name: "{impl#66}", scope: !113)
!113 = !DINamespace(name: "boxed", scope: !17)
!114 = !{!115}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !110, file: !2, baseType: !15, size: 192, align: 64)
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(name: "<core::str::error::Utf8Error as core::error::Error>::{vtable}", scope: null, file: !2, type: !118, isLocal: true, isDefinition: true)
!118 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::str::error::Utf8Error as core::error::Error>::{vtable_type}", file: !2, size: 704, align: 64, flags: DIFlagArtificial, elements: !119, vtableHolder: !131, templateParams: !45, identifier: "c31185a3d18684d8a63e761bafbeec24")
!119 = !{!120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !118, file: !2, baseType: !6, size: 64, align: 64)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !118, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !118, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !118, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !118, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "__super_trait_ptr5", scope: !118, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "__method6", scope: !118, file: !2, baseType: !6, size: 64, align: 64, offset: 384)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "__method7", scope: !118, file: !2, baseType: !6, size: 64, align: 64, offset: 448)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "__method8", scope: !118, file: !2, baseType: !6, size: 64, align: 64, offset: 512)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "__method9", scope: !118, file: !2, baseType: !6, size: 64, align: 64, offset: 576)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "__method10", scope: !118, file: !2, baseType: !6, size: 64, align: 64, offset: 640)
!131 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Error", scope: !132, file: !2, size: 128, align: 64, elements: !134, templateParams: !45, identifier: "c0815af1087de138b17fc1e2204a5e53")
!132 = !DINamespace(name: "error", scope: !133)
!133 = !DINamespace(name: "str", scope: !31)
!134 = !{!135, !136}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "valid_up_to", scope: !131, file: !2, baseType: !9, size: 64, align: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "error_len", scope: !131, file: !2, baseType: !83, size: 16, align: 8, offset: 64)
!137 = !DIGlobalVariableExpression(var: !138, expr: !DIExpression())
!138 = distinct !DIGlobalVariable(name: "<&str as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !139, isLocal: true, isDefinition: true)
!139 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&str as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !140, vtableHolder: !145, templateParams: !45, identifier: "6ce4ed7cbfd7be81fb22c9d50efcbdfd")
!140 = !{!141, !142, !143, !144}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !139, file: !2, baseType: !6, size: 64, align: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !139, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !139, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !139, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !146, templateParams: !45, identifier: "c67d244f92c53ee233f4a290be1c6ff8")
!146 = !{!147, !149}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !145, file: !2, baseType: !148, size: 64, align: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !145, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!150 = !DIGlobalVariableExpression(var: !151, expr: !DIExpression())
!151 = distinct !DIGlobalVariable(name: "<&alloc::collections::TryReserveErrorKind as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !152, isLocal: true, isDefinition: true)
!152 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&alloc::collections::TryReserveErrorKind as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !153, vtableHolder: !158, templateParams: !45, identifier: "472505c445d4c352e3435f1084a678f1")
!153 = !{!154, !155, !156, !157}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !152, file: !2, baseType: !6, size: 64, align: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !152, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !152, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !152, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !159, size: 64, align: 64, dwarfAddressSpace: 0)
!159 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !160, file: !2, size: 128, align: 64, elements: !161, templateParams: !45, identifier: "1b625b19f99caec84f7b65a2b3e9aad8")
!160 = !DINamespace(name: "collections", scope: !17)
!161 = !{!162}
!162 = !DICompositeType(tag: DW_TAG_variant_part, scope: !159, file: !2, size: 128, align: 64, elements: !163, templateParams: !45, identifier: "c57cd609b7525659ad8a4f23c5336ace", discriminator: !246)
!163 = !{!164, !166}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !162, file: !2, baseType: !165, size: 128, align: 64, extraData: i64 0)
!165 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !159, file: !2, size: 128, align: 64, elements: !45, identifier: "d65db193f4af75acc49b799ded9070a5")
!166 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !162, file: !2, baseType: !167, size: 128, align: 64)
!167 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !159, file: !2, size: 128, align: 64, elements: !168, templateParams: !45, identifier: "2dca856992069e37b34fb8308eb3b559")
!168 = !{!169, !245}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !167, file: !2, baseType: !170, size: 128, align: 64)
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !72, file: !2, size: 128, align: 64, elements: !171, templateParams: !45, identifier: "7681e0d6a93ede6089cf17652b902872")
!171 = !{!172, !173}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !170, file: !2, baseType: !9, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !170, file: !2, baseType: !174, size: 64, align: 64, offset: 64)
!174 = !DICompositeType(tag: DW_TAG_structure_type, name: "Alignment", scope: !175, file: !2, size: 64, align: 64, elements: !176, templateParams: !45, identifier: "dfe5915dd9e8e8e960f4980b74b2c034")
!175 = !DINamespace(name: "alignment", scope: !30)
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !174, file: !2, baseType: !178, size: 64, align: 64)
!178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AlignmentEnum64", scope: !175, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagEnumClass, elements: !180)
!179 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!180 = !{!181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!181 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!182 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!183 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!185 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!186 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!187 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!188 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!189 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!190 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!191 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!192 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!193 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!194 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!195 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!196 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!197 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!198 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!199 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!200 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!201 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!202 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!203 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!204 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!205 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!206 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!207 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!208 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!209 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!210 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!211 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!212 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!213 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!214 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!215 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!216 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!217 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!218 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!219 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!220 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!221 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!222 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!223 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!224 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!225 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!226 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!227 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!228 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!229 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!230 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!231 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!232 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!233 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!234 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!235 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!236 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!237 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!238 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!239 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!240 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!241 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!242 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!243 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!244 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !167, file: !2, baseType: !7, align: 8)
!246 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!247 = !DIGlobalVariableExpression(var: !248, expr: !DIExpression())
!248 = distinct !DIGlobalVariable(name: "<core::alloc::layout::Layout as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !249, isLocal: true, isDefinition: true)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::alloc::layout::Layout as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !250, vtableHolder: !170, templateParams: !45, identifier: "140afabdfcf4673520c93484b8a8563f")
!250 = !{!251, !252, !253, !254}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !249, file: !2, baseType: !6, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !249, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !249, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !249, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "<&() as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !257, isLocal: true, isDefinition: true)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&() as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !258, vtableHolder: !263, templateParams: !45, identifier: "a9f38c2ed237b51291b57ada18f179ad")
!258 = !{!259, !260, !261, !262}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !257, file: !2, baseType: !6, size: 64, align: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !257, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !257, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !257, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "<usize as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !266, isLocal: true, isDefinition: true)
!266 = !DICompositeType(tag: DW_TAG_structure_type, name: "<usize as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !267, vtableHolder: !9, templateParams: !45, identifier: "f187bbea7555e11a91db7aa6190c0480")
!267 = !{!268, !269, !270, !271}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !266, file: !2, baseType: !6, size: 64, align: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !266, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !266, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !266, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "<&alloc::vec::Vec<u8, alloc::alloc::Global> as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !274, isLocal: true, isDefinition: true)
!274 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&alloc::vec::Vec<u8, alloc::alloc::Global> as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !275, vtableHolder: !280, templateParams: !45, identifier: "38c413d85e1155ba9b13e1ef5c8dd7f2")
!275 = !{!276, !277, !278, !279}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !274, file: !2, baseType: !6, size: 64, align: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !274, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !274, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !274, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !20, size: 64, align: 64, dwarfAddressSpace: 0)
!281 = !DIGlobalVariableExpression(var: !282, expr: !DIExpression())
!282 = distinct !DIGlobalVariable(name: "<&usize as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !283, isLocal: true, isDefinition: true)
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&usize as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !284, vtableHolder: !289, templateParams: !45, identifier: "859d9c451b8060d4f0e9133cc45ec238")
!284 = !{!285, !286, !287, !288}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !283, file: !2, baseType: !6, size: 64, align: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !283, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !283, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !283, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "<alloc::ffi::c_str::FromBytesWithNulErrorKind as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !292, isLocal: true, isDefinition: true)
!292 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::ffi::c_str::FromBytesWithNulErrorKind as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !293, vtableHolder: !298, templateParams: !45, identifier: "b4e41b52c4cb0fbf62244d1e597c5058")
!293 = !{!294, !295, !296, !297}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !292, file: !2, baseType: !6, size: 64, align: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !292, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !292, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !292, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!298 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromBytesWithNulErrorKind", scope: !299, file: !2, size: 128, align: 64, elements: !301, templateParams: !45, identifier: "a4aae2e19c28b001a8278910cb11ef31")
!299 = !DINamespace(name: "c_str", scope: !300)
!300 = !DINamespace(name: "ffi", scope: !17)
!301 = !{!302}
!302 = !DICompositeType(tag: DW_TAG_variant_part, scope: !298, file: !2, size: 128, align: 64, elements: !303, templateParams: !45, identifier: "2dcfab23834dade5e0f08dfe14cbafd3", discriminator: !310)
!303 = !{!304, !308}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "InteriorNul", scope: !302, file: !2, baseType: !305, size: 128, align: 64, extraData: i64 0)
!305 = !DICompositeType(tag: DW_TAG_structure_type, name: "InteriorNul", scope: !298, file: !2, size: 128, align: 64, elements: !306, templateParams: !45, identifier: "3ec61d6bb3bb6d9ffece21ccc7c9349b")
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !305, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "NotNulTerminated", scope: !302, file: !2, baseType: !309, size: 128, align: 64, extraData: i64 1)
!309 = !DICompositeType(tag: DW_TAG_structure_type, name: "NotNulTerminated", scope: !298, file: !2, size: 128, align: 64, elements: !45, identifier: "fee82e22bddda9fc6aa95d40d55f25d3")
!310 = !DIDerivedType(tag: DW_TAG_member, scope: !298, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!311 = !DIGlobalVariableExpression(var: !312, expr: !DIExpression())
!312 = distinct !DIGlobalVariable(name: "<alloc::ffi::c_str::CString as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !313, isLocal: true, isDefinition: true)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::ffi::c_str::CString as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !314, vtableHolder: !319, templateParams: !45, identifier: "f62c63d2158986f523ae7c454bfbcc82")
!314 = !{!315, !316, !317, !318}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !313, file: !2, baseType: !6, size: 64, align: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !313, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !313, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !313, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!319 = !DICompositeType(tag: DW_TAG_structure_type, name: "CString", scope: !299, file: !2, size: 128, align: 64, elements: !320, templateParams: !45, identifier: "baefcce9b01ca8bcf0a4df74fc596e8f")
!320 = !{!321}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !319, file: !2, baseType: !322, size: 128, align: 64)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u8], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !323, templateParams: !45, identifier: "cf765f0df2d3de00c9da26f9d83fb2d2")
!323 = !{!324, !325}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !322, file: !2, baseType: !148, size: 64, align: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !322, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "<&core::str::error::Utf8Error as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !328, isLocal: true, isDefinition: true)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&core::str::error::Utf8Error as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !329, vtableHolder: !334, templateParams: !45, identifier: "de0ddb29feae03b5dffd674820ef7ad6")
!329 = !{!330, !331, !332, !333}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !328, file: !2, baseType: !6, size: 64, align: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !328, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !328, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !328, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::error::Utf8Error", baseType: !131, size: 64, align: 64, dwarfAddressSpace: 0)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "<alloc::vec::Vec<u8, alloc::alloc::Global> as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !337, isLocal: true, isDefinition: true)
!337 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::vec::Vec<u8, alloc::alloc::Global> as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !338, vtableHolder: !20, templateParams: !45, identifier: "1f2b457110a889bbfb243aeca72f16d2")
!338 = !{!339, !340, !341, !342}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !337, file: !2, baseType: !6, size: 64, align: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !337, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !337, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !337, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!343 = !{i32 7, !"PIC Level", i32 2}
!344 = !{i32 2, !"Dwarf Version", i32 4}
!345 = !{i32 2, !"Debug Info Version", i32 3}
!346 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !347, producer: "clang LLVM (rustc version 1.70.0-nightly (900c35403 2023-03-08))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !348, globals: !374, splitDebugInlining: false)
!347 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/lib.rs/@/alloc.86517141-cgu.0", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc")
!348 = !{!178, !349, !357, !364, !370}
!349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !350, file: !2, baseType: !39, size: 8, align: 8, flags: DIFlagEnumClass, elements: !352)
!350 = !DINamespace(name: "v1", scope: !351)
!351 = !DINamespace(name: "rt", scope: !62)
!352 = !{!353, !354, !355, !356}
!353 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!354 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!355 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!356 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!357 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !358, file: !2, baseType: !359, size: 8, align: 8, flags: DIFlagEnumClass, elements: !360)
!358 = !DINamespace(name: "cmp", scope: !31)
!359 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!360 = !{!361, !362, !363}
!361 = !DIEnumerator(name: "Less", value: -1)
!362 = !DIEnumerator(name: "Equal", value: 0)
!363 = !DIEnumerator(name: "Greater", value: 1)
!364 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !365, file: !2, baseType: !39, size: 8, align: 8, flags: DIFlagEnumClass, elements: !366)
!365 = !DINamespace(name: "panicking", scope: !31)
!366 = !{!367, !368, !369}
!367 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!368 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!369 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !25, file: !2, baseType: !39, size: 8, align: 8, flags: DIFlagEnumClass, elements: !371)
!371 = !{!372, !373}
!372 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!374 = !{!0, !53, !63, !74, !95, !116, !137, !150, !247, !255, !264, !272, !281, !290, !311, !326, !335}
!375 = distinct !DISubprogram(name: "fold<usize, core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, usize, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h6731b00e9f66dbe2E", scope: !377, file: !376, line: 120, type: !381, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !419, retainedNodes: !415)
!376 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/map.rs", directory: "", checksumkind: CSK_MD5, checksum: "97b07ff42844decce9ce91a8c0ee38b9")
!377 = !DINamespace(name: "{impl#2}", scope: !378)
!378 = !DINamespace(name: "map", scope: !379)
!379 = !DINamespace(name: "adapters", scope: !380)
!380 = !DINamespace(name: "iter", scope: !31)
!381 = !DISubroutineType(types: !382)
!382 = !{!9, !383, !9, !410}
!383 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", scope: !378, file: !2, size: 128, align: 64, elements: !384, templateParams: !407, identifier: "ff0cb8495d0bf6343914137acfbe140c")
!384 = !{!385, !403}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !383, file: !2, baseType: !386, size: 128, align: 64)
!386 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<&str>", scope: !387, file: !2, size: 128, align: 64, elements: !389, templateParams: !395, identifier: "5ca3b307acb2f10917941b157b54bf31")
!387 = !DINamespace(name: "iter", scope: !388)
!388 = !DINamespace(name: "slice", scope: !31)
!389 = !{!390, !397, !398}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !386, file: !2, baseType: !391, size: 64, align: 64, offset: 64)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<&str>", scope: !35, file: !2, size: 64, align: 64, elements: !392, templateParams: !395, identifier: "c4deff9cd1fa3f3f6b2ffc1383c215ab")
!392 = !{!393}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !391, file: !2, baseType: !394, size: 64, align: 64)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &str", baseType: !145, size: 64, align: 64, dwarfAddressSpace: 0)
!395 = !{!396}
!396 = !DITemplateTypeParameter(name: "T", type: !145)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !386, file: !2, baseType: !394, size: 64, align: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !386, file: !2, baseType: !399, align: 8)
!399 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&&str>", scope: !44, file: !2, align: 8, elements: !45, templateParams: !400, identifier: "f1f533e64b4f19607cc2bbaf1716716b")
!400 = !{!401}
!401 = !DITemplateTypeParameter(name: "T", type: !402)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !145, size: 64, align: 64, dwarfAddressSpace: 0)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !383, file: !2, baseType: !404, align: 8)
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !405, file: !2, align: 8, elements: !45, identifier: "4f54b2d0b1ebdc82f076f53688e1a5")
!405 = !DINamespace(name: "estimated_capacity", scope: !406)
!406 = !DINamespace(name: "{impl#4}", scope: !62)
!407 = !{!408, !409}
!408 = !DITemplateTypeParameter(name: "I", type: !386)
!409 = !DITemplateTypeParameter(name: "F", type: !404)
!410 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", scope: !411, file: !2, align: 8, elements: !45, identifier: "7a0dc7d4d3ee9579c4a07489d9f2fc38")
!411 = !DINamespace(name: "sum", scope: !412)
!412 = !DINamespace(name: "{impl#48}", scope: !413)
!413 = !DINamespace(name: "accum", scope: !414)
!414 = !DINamespace(name: "traits", scope: !380)
!415 = !{!416, !417, !418}
!416 = !DILocalVariable(name: "self", arg: 1, scope: !375, file: !376, line: 120, type: !383)
!417 = !DILocalVariable(name: "init", arg: 2, scope: !375, file: !376, line: 120, type: !9)
!418 = !DILocalVariable(name: "g", arg: 3, scope: !375, file: !376, line: 120, type: !410)
!419 = !{!420, !408, !409, !421, !422}
!420 = !DITemplateTypeParameter(name: "B", type: !9)
!421 = !DITemplateTypeParameter(name: "Acc", type: !9)
!422 = !DITemplateTypeParameter(name: "G", type: !410)
!423 = !DILocation(line: 120, column: 21, scope: !375)
!424 = !DILocation(line: 120, column: 27, scope: !375)
!425 = !DILocation(line: 120, column: 38, scope: !375)
!426 = !DILocation(line: 124, column: 30, scope: !375)
!427 = !DILocation(line: 124, column: 9, scope: !375)
!428 = !DILocation(line: 125, column: 6, scope: !375)
!429 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u16>, u16>", linkageName: "_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h236747a0ed2b2f8fE", scope: !431, file: !430, line: 39, type: !433, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !470, retainedNodes: !468)
!430 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/cloned.rs", directory: "", checksumkind: CSK_MD5, checksum: "cb9d3235a75a94801397645d98265ba5")
!431 = !DINamespace(name: "{impl#1}", scope: !432)
!432 = !DINamespace(name: "cloned", scope: !379)
!433 = !DISubroutineType(types: !434)
!434 = !{!435, !449}
!435 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u16>", scope: !84, file: !2, size: 32, align: 16, elements: !436, templateParams: !45, identifier: "9dd843bb6affbc75e369cb39d345fa08")
!436 = !{!437}
!437 = !DICompositeType(tag: DW_TAG_variant_part, scope: !435, file: !2, size: 32, align: 16, elements: !438, templateParams: !45, identifier: "f9c0e2ee3f52ee5c35a27c448fe59c12", discriminator: !448)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !437, file: !2, baseType: !440, size: 32, align: 16, extraData: i64 0)
!440 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !435, file: !2, size: 32, align: 16, elements: !45, templateParams: !441, identifier: "f51b4ecb22a1c5992ba7b5dd4dcb7fe9")
!441 = !{!442}
!442 = !DITemplateTypeParameter(name: "T", type: !443)
!443 = !DIBasicType(name: "u16", size: 16, encoding: DW_ATE_unsigned)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !437, file: !2, baseType: !445, size: 32, align: 16, extraData: i64 1)
!445 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !435, file: !2, size: 32, align: 16, elements: !446, templateParams: !441, identifier: "f60b28e809609d2c581fe837c3ac2204")
!446 = !{!447}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !445, file: !2, baseType: !443, size: 16, align: 16, offset: 16)
!448 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !2, baseType: !443, size: 16, align: 16, flags: DIFlagArtificial)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>", baseType: !450, size: 64, align: 64, dwarfAddressSpace: 0)
!450 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloned<core::slice::iter::Iter<u16>>", scope: !432, file: !2, size: 128, align: 64, elements: !451, templateParams: !466, identifier: "c5e2edcfc0b9598acfcc0c2f1dd2cb0a")
!451 = !{!452}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !450, file: !2, baseType: !453, size: 128, align: 64)
!453 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u16>", scope: !387, file: !2, size: 128, align: 64, elements: !454, templateParams: !441, identifier: "6406343ab9c56275ba646978a29e7fb5")
!454 = !{!455, !460, !461}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !453, file: !2, baseType: !456, size: 64, align: 64, offset: 64)
!456 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u16>", scope: !35, file: !2, size: 64, align: 64, elements: !457, templateParams: !441, identifier: "8cc7125df7db2cb558dab8cc84359a8f")
!457 = !{!458}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !456, file: !2, baseType: !459, size: 64, align: 64)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u16", baseType: !443, size: 64, align: 64, dwarfAddressSpace: 0)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !453, file: !2, baseType: !459, size: 64, align: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !453, file: !2, baseType: !462, align: 8)
!462 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u16>", scope: !44, file: !2, align: 8, elements: !45, templateParams: !463, identifier: "3b85578db320a00ac933cd8f172ff273")
!463 = !{!464}
!464 = !DITemplateTypeParameter(name: "T", type: !465)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u16", baseType: !443, size: 64, align: 64, dwarfAddressSpace: 0)
!466 = !{!467}
!467 = !DITemplateTypeParameter(name: "I", type: !453)
!468 = !{!469}
!469 = !DILocalVariable(name: "self", arg: 1, scope: !429, file: !430, line: 39, type: !449)
!470 = !{!467, !442}
!471 = !DILocation(line: 39, column: 13, scope: !429)
!472 = !DILocation(line: 40, column: 9, scope: !429)
!473 = !DILocation(line: 41, column: 6, scope: !429)
!474 = distinct !DISubprogram(name: "from_residual<char, ()>", linkageName: "_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7baf4f06fa1440fcE", scope: !476, file: !475, line: 123, type: !479, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !489, retainedNodes: !517)
!475 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs", directory: "", checksumkind: CSK_MD5, checksum: "18814020abf99e8db034f7354ec821c9")
!476 = !DINamespace(name: "{impl#1}", scope: !477)
!477 = !DINamespace(name: "control_flow", scope: !478)
!478 = !DINamespace(name: "ops", scope: !31)
!479 = !DISubroutineType(types: !480)
!480 = !{!481, !499}
!481 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<char, ()>", scope: !477, file: !2, size: 32, align: 32, elements: !482, templateParams: !45, identifier: "67f9f31ca92f6b8fc6cfe1fd3c6eb7fc")
!482 = !{!483}
!483 = !DICompositeType(tag: DW_TAG_variant_part, scope: !481, file: !2, size: 32, align: 32, elements: !484, templateParams: !45, identifier: "7d66c47d91dd4ef829e721be3ec89193", discriminator: !497)
!484 = !{!485, !493}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !483, file: !2, baseType: !486, size: 32, align: 32, extraData: i64 1114112)
!486 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !481, file: !2, size: 32, align: 32, elements: !487, templateParams: !489, identifier: "b93724eed23efd4aa53c2faa830aad89")
!487 = !{!488}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !486, file: !2, baseType: !7, align: 8)
!489 = !{!490, !492}
!490 = !DITemplateTypeParameter(name: "B", type: !491)
!491 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!492 = !DITemplateTypeParameter(name: "C", type: !7)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !483, file: !2, baseType: !494, size: 32, align: 32)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !481, file: !2, size: 32, align: 32, elements: !495, templateParams: !489, identifier: "33c0339853996b89ac81ad06d4cf85f6")
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !494, file: !2, baseType: !491, size: 32, align: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, scope: !481, file: !2, baseType: !498, size: 32, align: 32, flags: DIFlagArtificial)
!498 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!499 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<char, core::convert::Infallible>", scope: !477, file: !2, size: 32, align: 32, elements: !500, templateParams: !45, identifier: "403d6428f3a77010381e597f06e746f6")
!500 = !{!501}
!501 = !DICompositeType(tag: DW_TAG_variant_part, scope: !499, file: !2, size: 32, align: 32, elements: !502, templateParams: !45, identifier: "61f951a5183776cae612972d4f1ac8ce")
!502 = !{!503, !513}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !501, file: !2, baseType: !504, size: 32, align: 32)
!504 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !499, file: !2, size: 32, align: 32, elements: !505, templateParams: !511, identifier: "7907ab97da0b39e447038aa5a5d09f28")
!505 = !{!506}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !504, file: !2, baseType: !507, align: 8)
!507 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !508, file: !2, align: 8, elements: !509, templateParams: !45, identifier: "8a2a5bae2fcbafab106f83f211f89369")
!508 = !DINamespace(name: "convert", scope: !31)
!509 = !{!510}
!510 = !DICompositeType(tag: DW_TAG_variant_part, scope: !507, file: !2, align: 8, elements: !45, identifier: "1019b8bdfb9e2631aa941b08872a2da")
!511 = !{!490, !512}
!512 = !DITemplateTypeParameter(name: "C", type: !507)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !501, file: !2, baseType: !514, size: 32, align: 32)
!514 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !499, file: !2, size: 32, align: 32, elements: !515, templateParams: !511, identifier: "2f28925a0e1d132182ef2a85cd415f0d")
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !514, file: !2, baseType: !491, size: 32, align: 32)
!517 = !{!518, !519}
!518 = !DILocalVariable(name: "residual", arg: 1, scope: !474, file: !475, line: 123, type: !499)
!519 = !DILocalVariable(name: "b", scope: !520, file: !475, line: 125, type: !491, align: 4)
!520 = distinct !DILexicalBlock(scope: !474, file: !475, line: 125, column: 13)
!521 = !DILocation(line: 123, column: 22, scope: !474)
!522 = !DILocation(line: 125, column: 32, scope: !474)
!523 = !{i32 0, i32 1114112}
!524 = !DILocation(line: 125, column: 32, scope: !520)
!525 = !DILocation(line: 125, column: 38, scope: !520)
!526 = !DILocation(line: 127, column: 6, scope: !474)
!527 = !{i32 0, i32 1114113}
!528 = distinct !DISubprogram(name: "next<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4567bd3a028715ceE", scope: !530, file: !529, line: 42, type: !532, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !578, retainedNodes: !581)
!529 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/skip_while.rs", directory: "", checksumkind: CSK_MD5, checksum: "9bb200840149e00cc3b24508ffd19c57")
!530 = !DINamespace(name: "{impl#2}", scope: !531)
!531 = !DINamespace(name: "skip_while", scope: !379)
!532 = !DISubroutineType(types: !533)
!533 = !{!534, !547}
!534 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !84, file: !2, size: 32, align: 32, elements: !535, templateParams: !45, identifier: "7666df883ba6194384db85a9ed545c64")
!535 = !{!536}
!536 = !DICompositeType(tag: DW_TAG_variant_part, scope: !534, file: !2, size: 32, align: 32, elements: !537, templateParams: !45, identifier: "20323711fe52003fa854b31ca358377", discriminator: !546)
!537 = !{!538, !542}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !536, file: !2, baseType: !539, size: 32, align: 32, extraData: i64 1114112)
!539 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !534, file: !2, size: 32, align: 32, elements: !45, templateParams: !540, identifier: "d8b16b0330fd153df544d9c66403896a")
!540 = !{!541}
!541 = !DITemplateTypeParameter(name: "T", type: !491)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !536, file: !2, baseType: !543, size: 32, align: 32)
!543 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !534, file: !2, size: 32, align: 32, elements: !544, templateParams: !540, identifier: "fae2df8c727d016915a9b3dc6fd150c6")
!544 = !{!545}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !543, file: !2, baseType: !491, size: 32, align: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !2, baseType: !498, size: 32, align: 32, flags: DIFlagArtificial)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", baseType: !548, size: 64, align: 64, dwarfAddressSpace: 0)
!548 = !DICompositeType(tag: DW_TAG_structure_type, name: "SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", scope: !531, file: !2, size: 192, align: 64, elements: !549, templateParams: !578, identifier: "570ce3fe52288f84908238b0c1a5a51d")
!549 = !{!550, !570, !572}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !548, file: !2, baseType: !551, size: 128, align: 64)
!551 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::str::iter::Chars>", scope: !552, file: !2, size: 128, align: 64, elements: !553, templateParams: !568, identifier: "a7c74f192b47f7744e11ac07867ab7a3")
!552 = !DINamespace(name: "rev", scope: !379)
!553 = !{!554}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !551, file: !2, baseType: !555, size: 128, align: 64)
!555 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !556, file: !2, size: 128, align: 64, elements: !557, templateParams: !45, identifier: "4def1dd83cc7646ec3c5ea8d74842fa8")
!556 = !DINamespace(name: "iter", scope: !133)
!557 = !{!558}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !555, file: !2, baseType: !559, size: 128, align: 64)
!559 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !387, file: !2, size: 128, align: 64, elements: !560, templateParams: !40, identifier: "49f2839d0cd9fb05fd95863bd53ba425")
!560 = !{!561, !562, !563}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !559, file: !2, baseType: !34, size: 64, align: 64, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !559, file: !2, baseType: !38, size: 64, align: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !559, file: !2, baseType: !564, align: 8)
!564 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !44, file: !2, align: 8, elements: !45, templateParams: !565, identifier: "6b78a19adc8500268cf33f83184ddd9a")
!565 = !{!566}
!566 = !DITemplateTypeParameter(name: "T", type: !567)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!568 = !{!569}
!569 = !DITemplateTypeParameter(name: "T", type: !555)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !548, file: !2, baseType: !571, size: 8, align: 8, offset: 128)
!571 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !548, file: !2, baseType: !573, align: 8)
!573 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", scope: !574, file: !2, align: 8, elements: !45, identifier: "83374b902d3e8cc71413e0bf83c78ca")
!574 = !DINamespace(name: "case_ignoreable_then_cased", scope: !575)
!575 = !DINamespace(name: "to_lowercase", scope: !576)
!576 = !DINamespace(name: "{impl#5}", scope: !577)
!577 = !DINamespace(name: "str", scope: !17)
!578 = !{!579, !580}
!579 = !DITemplateTypeParameter(name: "I", type: !551)
!580 = !DITemplateTypeParameter(name: "P", type: !573)
!581 = !{!582, !583, !586}
!582 = !DILocalVariable(name: "self", arg: 1, scope: !528, file: !529, line: 42, type: !547)
!583 = !DILocalVariable(name: "flag", scope: !584, file: !529, line: 57, type: !585, align: 8)
!584 = distinct !DILexicalBlock(scope: !528, file: !529, line: 57, column: 9)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bool", baseType: !571, size: 64, align: 64, dwarfAddressSpace: 0)
!586 = !DILocalVariable(name: "pred", scope: !587, file: !529, line: 58, type: !588, align: 8)
!587 = distinct !DILexicalBlock(scope: !584, file: !529, line: 58, column: 9)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", baseType: !573, size: 64, align: 64, dwarfAddressSpace: 0)
!589 = !DILocation(line: 42, column: 13, scope: !528)
!590 = !DILocation(line: 57, column: 20, scope: !528)
!591 = !DILocation(line: 57, column: 13, scope: !584)
!592 = !DILocation(line: 58, column: 20, scope: !584)
!593 = !DILocation(line: 58, column: 13, scope: !587)
!594 = !DILocation(line: 59, column: 24, scope: !587)
!595 = !DILocation(line: 59, column: 9, scope: !587)
!596 = !DILocation(line: 60, column: 6, scope: !528)
!597 = distinct !DISubprogram(name: "next<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5c77ee3a77e52598E", scope: !530, file: !529, line: 42, type: !598, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !607, retainedNodes: !610)
!598 = !DISubroutineType(types: !599)
!599 = !{!534, !600}
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>", baseType: !601, size: 64, align: 64, dwarfAddressSpace: 0)
!601 = !DICompositeType(tag: DW_TAG_structure_type, name: "SkipWhile<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>", scope: !531, file: !2, size: 192, align: 64, elements: !602, templateParams: !607, identifier: "a3ca77620320fc488150575a22514509")
!602 = !{!603, !604, !605}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !601, file: !2, baseType: !555, size: 128, align: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !601, file: !2, baseType: !571, size: 8, align: 8, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !601, file: !2, baseType: !606, align: 8)
!606 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::str::iter::Chars>", scope: !574, file: !2, align: 8, elements: !45, identifier: "2846598a73b19e938c6db16250b508dd")
!607 = !{!608, !609}
!608 = !DITemplateTypeParameter(name: "I", type: !555)
!609 = !DITemplateTypeParameter(name: "P", type: !606)
!610 = !{!611, !612, !614}
!611 = !DILocalVariable(name: "self", arg: 1, scope: !597, file: !529, line: 42, type: !600)
!612 = !DILocalVariable(name: "flag", scope: !613, file: !529, line: 57, type: !585, align: 8)
!613 = distinct !DILexicalBlock(scope: !597, file: !529, line: 57, column: 9)
!614 = !DILocalVariable(name: "pred", scope: !615, file: !529, line: 58, type: !616, align: 8)
!615 = distinct !DILexicalBlock(scope: !613, file: !529, line: 58, column: 9)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>", baseType: !606, size: 64, align: 64, dwarfAddressSpace: 0)
!617 = !DILocation(line: 42, column: 13, scope: !597)
!618 = !DILocation(line: 57, column: 20, scope: !597)
!619 = !DILocation(line: 57, column: 13, scope: !613)
!620 = !DILocation(line: 58, column: 20, scope: !613)
!621 = !DILocation(line: 58, column: 13, scope: !615)
!622 = !DILocation(line: 59, column: 24, scope: !615)
!623 = !DILocation(line: 59, column: 9, scope: !615)
!624 = !DILocation(line: 60, column: 6, scope: !597)
!625 = distinct !DISubprogram(name: "check<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h740395a9de9b7556E", scope: !626, file: !529, line: 43, type: !627, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !637, retainedNodes: !634)
!626 = !DINamespace(name: "next", scope: !530)
!627 = !DISubroutineType(types: !628)
!628 = !{!629, !585, !588}
!629 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", scope: !630, file: !2, size: 128, align: 64, elements: !631, templateParams: !45, identifier: "fdc0a77bc762689d746a965feb600689")
!630 = !DINamespace(name: "check", scope: !626)
!631 = !{!632, !633}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !629, file: !2, baseType: !585, size: 64, align: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !629, file: !2, baseType: !588, size: 64, align: 64, offset: 64)
!634 = !{!635, !636}
!635 = !DILocalVariable(name: "flag", arg: 1, scope: !625, file: !529, line: 44, type: !585)
!636 = !DILocalVariable(name: "pred", arg: 2, scope: !625, file: !529, line: 45, type: !588)
!637 = !{!541, !638}
!638 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !573)
!639 = !DILocation(line: 44, column: 13, scope: !625)
!640 = !DILocation(line: 45, column: 13, scope: !625)
!641 = !DILocation(line: 47, column: 13, scope: !625)
!642 = !DILocation(line: 55, column: 10, scope: !625)
!643 = !{i64 1}
!644 = distinct !DISubprogram(name: "check<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h82c86c3488a72399E", scope: !626, file: !529, line: 43, type: !645, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !654, retainedNodes: !651)
!645 = !DISubroutineType(types: !646)
!646 = !{!647, !585, !616}
!647 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>", scope: !630, file: !2, size: 128, align: 64, elements: !648, templateParams: !45, identifier: "270f2132864e75b5b7c0156389893814")
!648 = !{!649, !650}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !647, file: !2, baseType: !585, size: 64, align: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !647, file: !2, baseType: !616, size: 64, align: 64, offset: 64)
!651 = !{!652, !653}
!652 = !DILocalVariable(name: "flag", arg: 1, scope: !644, file: !529, line: 44, type: !585)
!653 = !DILocalVariable(name: "pred", arg: 2, scope: !644, file: !529, line: 45, type: !616)
!654 = !{!541, !655}
!655 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !606)
!656 = !DILocation(line: 44, column: 13, scope: !644)
!657 = !DILocation(line: 45, column: 13, scope: !644)
!658 = !DILocation(line: 47, column: 13, scope: !644)
!659 = !DILocation(line: 55, column: 10, scope: !644)
!660 = distinct !DISubprogram(name: "{closure#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17h6861385569cb6a98E", scope: !630, file: !529, line: 47, type: !661, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !637, retainedNodes: !665)
!661 = !DISubroutineType(types: !662)
!662 = !{!571, !663, !664}
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", baseType: !629, size: 64, align: 64, dwarfAddressSpace: 0)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&char", baseType: !491, size: 64, align: 64, dwarfAddressSpace: 0)
!665 = !{!666, !667, !668}
!666 = !DILocalVariable(name: "x", arg: 2, scope: !660, file: !529, line: 47, type: !664)
!667 = !DILocalVariable(name: "flag", scope: !660, file: !529, line: 44, type: !585, align: 8)
!668 = !DILocalVariable(name: "pred", scope: !660, file: !529, line: 45, type: !588, align: 8)
!669 = !DILocation(line: 44, column: 13, scope: !660)
!670 = !DILocation(line: 45, column: 13, scope: !660)
!671 = !DILocation(line: 47, column: 19, scope: !660)
!672 = !DILocation(line: 48, column: 20, scope: !660)
!673 = !{i8 0, i8 2}
!674 = !DILocation(line: 48, column: 30, scope: !660)
!675 = !{i64 4}
!676 = !DILocation(line: 48, column: 29, scope: !660)
!677 = !DILocation(line: 52, column: 21, scope: !660)
!678 = !DILocation(line: 48, column: 17, scope: !660)
!679 = !DILocation(line: 49, column: 21, scope: !660)
!680 = !DILocation(line: 50, column: 21, scope: !660)
!681 = !DILocation(line: 54, column: 14, scope: !660)
!682 = distinct !DISubprogram(name: "{closure#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17hb307dce8a79ea034E", scope: !630, file: !529, line: 47, type: !683, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !654, retainedNodes: !686)
!683 = !DISubroutineType(types: !684)
!684 = !{!571, !685, !664}
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>", baseType: !647, size: 64, align: 64, dwarfAddressSpace: 0)
!686 = !{!687, !688, !689}
!687 = !DILocalVariable(name: "x", arg: 2, scope: !682, file: !529, line: 47, type: !664)
!688 = !DILocalVariable(name: "flag", scope: !682, file: !529, line: 44, type: !585, align: 8)
!689 = !DILocalVariable(name: "pred", scope: !682, file: !529, line: 45, type: !616, align: 8)
!690 = !DILocation(line: 44, column: 13, scope: !682)
!691 = !DILocation(line: 45, column: 13, scope: !682)
!692 = !DILocation(line: 47, column: 19, scope: !682)
!693 = !DILocation(line: 48, column: 20, scope: !682)
!694 = !DILocation(line: 48, column: 30, scope: !682)
!695 = !DILocation(line: 48, column: 29, scope: !682)
!696 = !DILocation(line: 52, column: 21, scope: !682)
!697 = !DILocation(line: 48, column: 17, scope: !682)
!698 = !DILocation(line: 49, column: 21, scope: !682)
!699 = !DILocation(line: 50, column: 21, scope: !682)
!700 = !DILocation(line: 54, column: 14, scope: !682)
!701 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17ha4a5f23a1739fb8bE", scope: !703, file: !702, line: 765, type: !704, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !706)
!702 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "489a545a71841a1f316d99c11467aaa5")
!703 = !DINamespace(name: "{impl#16}", scope: !35)
!704 = !DISubroutineType(types: !705)
!705 = !{!34, !28}
!706 = !{!707}
!707 = !DILocalVariable(name: "unique", arg: 1, scope: !701, file: !702, line: 765, type: !28)
!708 = !DILocation(line: 765, column: 13, scope: !701)
!709 = !DILocation(line: 768, column: 41, scope: !701)
!710 = !DILocation(line: 768, column: 18, scope: !701)
!711 = !DILocation(line: 769, column: 6, scope: !701)
!712 = distinct !DISubprogram(name: "from<[u8; 0]>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h48b8596408a422faE", scope: !714, file: !713, line: 190, type: !715, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !727, retainedNodes: !731)
!713 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!714 = !DINamespace(name: "{impl#11}", scope: !29)
!715 = !DISubroutineType(types: !716)
!716 = !{!717, !720}
!717 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8; 0]>", scope: !29, file: !2, size: 64, align: 64, elements: !718, templateParams: !727, identifier: "20be80438db85043462acfa72464a03e")
!718 = !{!719, !729}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !717, file: !2, baseType: !720, size: 64, align: 64)
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8; 0]>", scope: !35, file: !2, size: 64, align: 64, elements: !721, templateParams: !727, identifier: "428bf8fdbb0fe2963c30fdb7002363d")
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !720, file: !2, baseType: !723, size: 64, align: 64)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [u8; 0]", baseType: !724, size: 64, align: 64, dwarfAddressSpace: 0)
!724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, align: 8, elements: !725)
!725 = !{!726}
!726 = !DISubrange(count: 0, lowerBound: 0)
!727 = !{!728}
!728 = !DITemplateTypeParameter(name: "T", type: !724)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !717, file: !2, baseType: !730, align: 8)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8; 0]>", scope: !44, file: !2, align: 8, elements: !45, templateParams: !727, identifier: "30d24200179e8d86d4315db1890ebf6")
!731 = !{!732}
!732 = !DILocalVariable(name: "pointer", arg: 1, scope: !712, file: !713, line: 190, type: !720)
!733 = !DILocation(line: 190, column: 13, scope: !712)
!734 = !DILocation(line: 191, column: 9, scope: !712)
!735 = !DILocation(line: 192, column: 6, scope: !712)
!736 = distinct !DISubprogram(name: "from<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h5a77d6d20903ef2aE", scope: !714, file: !713, line: 190, type: !737, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !764)
!737 = !DISubroutineType(types: !738)
!738 = !{!739, !742}
!739 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !29, file: !2, size: 128, align: 64, elements: !740, templateParams: !760, identifier: "29b68cf3be205be142c6d322f903f372")
!740 = !{!741, !762}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !739, file: !2, baseType: !742, size: 128, align: 64)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !35, file: !2, size: 128, align: 64, elements: !743, templateParams: !760, identifier: "eb62c45e67218a4c86169e2acd636597")
!743 = !{!744}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !742, file: !2, baseType: !745, size: 128, align: 64)
!745 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !746, templateParams: !45, identifier: "4e1bf22cee3e7ce11723bc183bff295")
!746 = !{!747, !759}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !745, file: !2, baseType: !748, size: 64, align: 64)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64, align: 64, dwarfAddressSpace: 0)
!749 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !750, file: !2, size: 8, align: 8, elements: !752, templateParams: !40, identifier: "40fd747698d94c057e48eb3c7fee6fc")
!750 = !DINamespace(name: "maybe_uninit", scope: !751)
!751 = !DINamespace(name: "mem", scope: !31)
!752 = !{!753, !754}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !749, file: !2, baseType: !7, align: 8)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !749, file: !2, baseType: !755, size: 8, align: 8)
!755 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !756, file: !2, size: 8, align: 8, elements: !757, templateParams: !40, identifier: "5dbc9cafe97ace481d2dac1d5bd5267a")
!756 = !DINamespace(name: "manually_drop", scope: !751)
!757 = !{!758}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !755, file: !2, baseType: !39, size: 8, align: 8)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !745, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!760 = !{!761}
!761 = !DITemplateTypeParameter(name: "T", type: !749)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !739, file: !2, baseType: !763, align: 8)
!763 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !44, file: !2, align: 8, elements: !45, templateParams: !760, identifier: "953eec82a4a7584194a6b3527f670997")
!764 = !{!765}
!765 = !DILocalVariable(name: "pointer", arg: 1, scope: !736, file: !713, line: 190, type: !742)
!766 = !DILocation(line: 190, column: 13, scope: !736)
!767 = !DILocation(line: 191, column: 9, scope: !736)
!768 = !DILocation(line: 192, column: 6, scope: !736)
!769 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h6536788035efc0bdE", scope: !714, file: !713, line: 190, type: !770, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !772)
!770 = !DISubroutineType(types: !771)
!771 = !{!28, !34}
!772 = !{!773}
!773 = !DILocalVariable(name: "pointer", arg: 1, scope: !769, file: !713, line: 190, type: !34)
!774 = !DILocation(line: 190, column: 13, scope: !769)
!775 = !DILocation(line: 191, column: 9, scope: !769)
!776 = !DILocation(line: 192, column: 6, scope: !769)
!777 = distinct !DISubprogram(name: "from<str>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h8dfa8cec0e925604E", scope: !714, file: !713, line: 190, type: !778, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !792)
!778 = !DISubroutineType(types: !779)
!779 = !{!780, !783}
!780 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<str>", scope: !29, file: !2, size: 128, align: 64, elements: !781, templateParams: !40, identifier: "fb9f4ec8829d1c4efe4a50625708415f")
!781 = !{!782, !790}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !780, file: !2, baseType: !783, size: 128, align: 64)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<str>", scope: !35, file: !2, size: 128, align: 64, elements: !784, templateParams: !40, identifier: "5866ba504ccf839c2ac7101c98e84240")
!784 = !{!785}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !783, file: !2, baseType: !786, size: 128, align: 64)
!786 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 128, align: 64, elements: !787, templateParams: !45, identifier: "f98710a4228be0581aad3740ad57a225")
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !786, file: !2, baseType: !148, size: 64, align: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !786, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !780, file: !2, baseType: !791, align: 8)
!791 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<str>", scope: !44, file: !2, align: 8, elements: !45, templateParams: !40, identifier: "d75c7dbf27c1f150c8cd8cff08ecea4d")
!792 = !{!793}
!793 = !DILocalVariable(name: "pointer", arg: 1, scope: !777, file: !713, line: 190, type: !783)
!794 = !DILocation(line: 190, column: 13, scope: !777)
!795 = !DILocation(line: 191, column: 9, scope: !777)
!796 = !DILocation(line: 192, column: 6, scope: !777)
!797 = distinct !DISubprogram(name: "from<core::ffi::c_str::CStr>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha1829cc479268ba9E", scope: !714, file: !713, line: 190, type: !798, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !820)
!798 = !DISubroutineType(types: !799)
!799 = !{!800, !803}
!800 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<core::ffi::c_str::CStr>", scope: !29, file: !2, size: 128, align: 64, elements: !801, templateParams: !816, identifier: "69ed0c85845f060e74ab63466a38f9ca")
!801 = !{!802, !818}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !800, file: !2, baseType: !803, size: 128, align: 64)
!803 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<core::ffi::c_str::CStr>", scope: !35, file: !2, size: 128, align: 64, elements: !804, templateParams: !816, identifier: "fa49617a6fd17cbdbb10ddd4635d2873")
!804 = !{!805}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !803, file: !2, baseType: !806, size: 128, align: 64)
!806 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !807, templateParams: !45, identifier: "4b4e427c1a206ebef8621b8de5fdf892")
!807 = !{!808, !815}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !806, file: !2, baseType: !809, size: 64, align: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64, align: 64, dwarfAddressSpace: 0)
!810 = !DICompositeType(tag: DW_TAG_structure_type, name: "CStr", scope: !811, file: !2, align: 8, elements: !813, templateParams: !45, identifier: "753805a36f2fd8f155e636a59bb1c88")
!811 = !DINamespace(name: "c_str", scope: !812)
!812 = !DINamespace(name: "ffi", scope: !31)
!813 = !{!814}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !810, file: !2, baseType: !359, align: 8)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !806, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!816 = !{!817}
!817 = !DITemplateTypeParameter(name: "T", type: !810)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !800, file: !2, baseType: !819, align: 8)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<core::ffi::c_str::CStr>", scope: !44, file: !2, align: 8, elements: !45, templateParams: !816, identifier: "85df20104f47bc5e55719db4d8773653")
!820 = !{!821}
!821 = !DILocalVariable(name: "pointer", arg: 1, scope: !797, file: !713, line: 190, type: !803)
!822 = !DILocation(line: 190, column: 13, scope: !797)
!823 = !DILocation(line: 191, column: 9, scope: !797)
!824 = !DILocation(line: 192, column: 6, scope: !797)
!825 = distinct !DISubprogram(name: "from<[u8]>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hbf2c858b77d1c5ebE", scope: !714, file: !713, line: 190, type: !826, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !840)
!826 = !DISubroutineType(types: !827)
!827 = !{!828, !831}
!828 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8]>", scope: !29, file: !2, size: 128, align: 64, elements: !829, templateParams: !40, identifier: "4faa34217a27fdc91b1109cb1ee8bfab")
!829 = !{!830, !838}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !828, file: !2, baseType: !831, size: 128, align: 64)
!831 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !35, file: !2, size: 128, align: 64, elements: !832, templateParams: !40, identifier: "696c8d3781c125ac4e7afd49024fcfb8")
!832 = !{!833}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !831, file: !2, baseType: !834, size: 128, align: 64)
!834 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !835, templateParams: !45, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!835 = !{!836, !837}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !834, file: !2, baseType: !148, size: 64, align: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !834, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !828, file: !2, baseType: !839, align: 8)
!839 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8]>", scope: !44, file: !2, align: 8, elements: !45, templateParams: !40, identifier: "cd6dca73c2ef8df4caa41f43700d48f5")
!840 = !{!841}
!841 = !DILocalVariable(name: "pointer", arg: 1, scope: !825, file: !713, line: 190, type: !831)
!842 = !DILocation(line: 190, column: 13, scope: !825)
!843 = !DILocation(line: 191, column: 9, scope: !825)
!844 = !DILocation(line: 192, column: 6, scope: !825)
!845 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1b03909c43de7f90E", scope: !847, file: !846, line: 2063, type: !849, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !894, retainedNodes: !890)
!846 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "097aea327b3dc3b771148939f46917a3")
!847 = !DINamespace(name: "{impl#27}", scope: !848)
!848 = !DINamespace(name: "result", scope: !31)
!849 = !DISubroutineType(types: !850)
!850 = !{!851, !868, !882}
!851 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !848, file: !2, size: 128, align: 64, elements: !852, templateParams: !45, identifier: "10f1913033e084028e724c5aec5f856f")
!852 = !{!853}
!853 = !DICompositeType(tag: DW_TAG_variant_part, scope: !851, file: !2, size: 128, align: 64, elements: !854, templateParams: !45, identifier: "8d3a35d4632dd3b3840c6533598bf74e", discriminator: !867)
!854 = !{!855, !863}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !853, file: !2, baseType: !856, size: 128, align: 64)
!856 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !851, file: !2, size: 128, align: 64, elements: !857, templateParams: !859, identifier: "b87ef6b218dc2ac784710d6b8e43e3c1")
!857 = !{!858}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !856, file: !2, baseType: !831, size: 128, align: 64)
!859 = !{!860, !861}
!860 = !DITemplateTypeParameter(name: "T", type: !831)
!861 = !DITemplateTypeParameter(name: "E", type: !862)
!862 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !73, file: !2, align: 8, elements: !45, identifier: "f5465d7a9582e154f8b3023072fa24a3")
!863 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !853, file: !2, baseType: !864, size: 128, align: 64, extraData: i64 0)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !851, file: !2, size: 128, align: 64, elements: !865, templateParams: !859, identifier: "afe2690fa6a46df5a954c97d3f8c8a81")
!865 = !{!866}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !864, file: !2, baseType: !862, align: 8)
!867 = !DIDerivedType(tag: DW_TAG_member, scope: !851, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!868 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !848, file: !2, align: 8, elements: !869, templateParams: !45, identifier: "399aeb575799f33d115b93051b14a81")
!869 = !{!870}
!870 = !DICompositeType(tag: DW_TAG_variant_part, scope: !868, file: !2, align: 8, elements: !871, templateParams: !45, identifier: "fd669fc4436aac305b39584779459ed6")
!871 = !{!872, !878}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !870, file: !2, baseType: !873, align: 8)
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !868, file: !2, align: 8, elements: !874, templateParams: !876, identifier: "6fd8b71b04a4db836c392b2a9e5782f7")
!874 = !{!875}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !873, file: !2, baseType: !507, align: 8)
!876 = !{!877, !861}
!877 = !DITemplateTypeParameter(name: "T", type: !507)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !870, file: !2, baseType: !879, align: 8)
!879 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !868, file: !2, align: 8, elements: !880, templateParams: !876, identifier: "30a490d6e346ddd65d1f655e515453fa")
!880 = !{!881}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !879, file: !2, baseType: !862, align: 8)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !883, size: 64, align: 64, dwarfAddressSpace: 0)
!883 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !884, file: !2, size: 192, align: 64, elements: !886, templateParams: !45, identifier: "ce713e8941e9786f7cd6b9ed5cdf02a8")
!884 = !DINamespace(name: "location", scope: !885)
!885 = !DINamespace(name: "panic", scope: !31)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !883, file: !2, baseType: !145, size: 128, align: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !883, file: !2, baseType: !498, size: 32, align: 32, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !883, file: !2, baseType: !498, size: 32, align: 32, offset: 160)
!890 = !{!891, !892}
!891 = !DILocalVariable(name: "residual", arg: 1, scope: !845, file: !846, line: 2063, type: !868)
!892 = !DILocalVariable(name: "e", scope: !893, file: !846, line: 2065, type: !862, align: 1)
!893 = distinct !DILexicalBlock(scope: !845, file: !846, line: 2065, column: 13)
!894 = !{!860, !861, !895}
!895 = !DITemplateTypeParameter(name: "F", type: !862)
!896 = !DILocation(line: 2063, column: 22, scope: !845)
!897 = !DILocation(line: 2065, column: 17, scope: !893)
!898 = !DILocalVariable(name: "t", arg: 1, scope: !899, file: !900, line: 736, type: !862)
!899 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h99d2a5a68a99042eE", scope: !901, file: !900, line: 736, type: !902, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !905, retainedNodes: !904)
!900 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "390fdc6ff25847f674c5185e049f1be3")
!901 = !DINamespace(name: "{impl#4}", scope: !508)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !862}
!904 = !{!898}
!905 = !{!906}
!906 = !DITemplateTypeParameter(name: "T", type: !862)
!907 = !DILocation(line: 736, column: 13, scope: !899, inlinedAt: !908)
!908 = distinct !DILocation(line: 2065, column: 27, scope: !893)
!909 = !DILocation(line: 2065, column: 23, scope: !893)
!910 = !DILocation(line: 2067, column: 6, scope: !845)
!911 = distinct !DISubprogram(name: "from_residual<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h73bf25d0b11c1868E", scope: !847, file: !846, line: 2063, type: !912, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !951, retainedNodes: !947)
!912 = !DISubroutineType(types: !913)
!913 = !{!914, !934, !882}
!914 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", scope: !848, file: !2, size: 192, align: 64, elements: !915, templateParams: !45, identifier: "4fdfd919e33b937672c3cf5139b7fe2")
!915 = !{!916}
!916 = !DICompositeType(tag: DW_TAG_variant_part, scope: !914, file: !2, size: 192, align: 64, elements: !917, templateParams: !45, identifier: "eea53f99908490bba172b7223697b37d", discriminator: !933)
!917 = !{!918, !929}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !916, file: !2, baseType: !919, size: 192, align: 64)
!919 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !914, file: !2, size: 192, align: 64, elements: !920, templateParams: !926, identifier: "b772daacd7a567788f0bba6314db679")
!920 = !{!921}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !919, file: !2, baseType: !922, size: 192, align: 64)
!922 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::alloc::layout::Layout, usize)", file: !2, size: 192, align: 64, elements: !923, templateParams: !45, identifier: "258040b7dca5c79ddb5a4bd217d28b44")
!923 = !{!924, !925}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !922, file: !2, baseType: !170, size: 128, align: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !922, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!926 = !{!927, !928}
!927 = !DITemplateTypeParameter(name: "T", type: !922)
!928 = !DITemplateTypeParameter(name: "E", type: !71)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !916, file: !2, baseType: !930, size: 192, align: 64, extraData: i64 0)
!930 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !914, file: !2, size: 192, align: 64, elements: !931, templateParams: !926, identifier: "21ef46f33d7d5309107e652539b9d095")
!931 = !{!932}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !930, file: !2, baseType: !71, align: 8)
!933 = !DIDerivedType(tag: DW_TAG_member, scope: !914, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!934 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !848, file: !2, align: 8, elements: !935, templateParams: !45, identifier: "619a748db3196ff38403e8c764e77079")
!935 = !{!936}
!936 = !DICompositeType(tag: DW_TAG_variant_part, scope: !934, file: !2, align: 8, elements: !937, templateParams: !45, identifier: "241f70200af41e506230471542f20f11")
!937 = !{!938, !943}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !936, file: !2, baseType: !939, align: 8)
!939 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !934, file: !2, align: 8, elements: !940, templateParams: !942, identifier: "9f3113c41e06a44e63200f8bd12a8a25")
!940 = !{!941}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !939, file: !2, baseType: !507, align: 8)
!942 = !{!877, !928}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !936, file: !2, baseType: !944, align: 8)
!944 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !934, file: !2, align: 8, elements: !945, templateParams: !942, identifier: "a2dd83fc032347fa90281b6c1948bfe")
!945 = !{!946}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !944, file: !2, baseType: !71, align: 8)
!947 = !{!948, !949}
!948 = !DILocalVariable(name: "residual", arg: 1, scope: !911, file: !846, line: 2063, type: !934)
!949 = !DILocalVariable(name: "e", scope: !950, file: !846, line: 2065, type: !71, align: 1)
!950 = distinct !DILexicalBlock(scope: !911, file: !846, line: 2065, column: 13)
!951 = !{!927, !928, !952}
!952 = !DITemplateTypeParameter(name: "F", type: !71)
!953 = !DILocation(line: 2063, column: 22, scope: !911)
!954 = !DILocation(line: 2065, column: 17, scope: !950)
!955 = !DILocalVariable(name: "t", arg: 1, scope: !956, file: !900, line: 736, type: !71)
!956 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc7d9863f9c5c6a35E", scope: !901, file: !900, line: 736, type: !957, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !960, retainedNodes: !959)
!957 = !DISubroutineType(types: !958)
!958 = !{null, !71}
!959 = !{!955}
!960 = !{!961}
!961 = !DITemplateTypeParameter(name: "T", type: !71)
!962 = !DILocation(line: 736, column: 13, scope: !956, inlinedAt: !963)
!963 = distinct !DILocation(line: 2065, column: 27, scope: !950)
!964 = !DILocation(line: 2065, column: 23, scope: !950)
!965 = !DILocation(line: 2067, column: 6, scope: !911)
!966 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a0a8f0657d23512E", scope: !847, file: !846, line: 2063, type: !967, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1005, retainedNodes: !1001)
!967 = !DISubroutineType(types: !968)
!968 = !{!969, !988, !882}
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !848, file: !2, size: 128, align: 64, elements: !970, templateParams: !45, identifier: "ed71dad7bf8bc88b1aa2d1582524e883")
!970 = !{!971}
!971 = !DICompositeType(tag: DW_TAG_variant_part, scope: !969, file: !2, size: 128, align: 64, elements: !972, templateParams: !45, identifier: "e4cfc1872cb9f7ca903a515896ea3f96", discriminator: !987)
!972 = !{!973, !983}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !971, file: !2, baseType: !974, size: 128, align: 64, extraData: i64 -9223372036854775807)
!974 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !969, file: !2, size: 128, align: 64, elements: !975, templateParams: !977, identifier: "aa57269e1173ffc5a95a4eb9fea1e89b")
!975 = !{!976}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !974, file: !2, baseType: !7, align: 8)
!977 = !{!978, !979}
!978 = !DITemplateTypeParameter(name: "T", type: !7)
!979 = !DITemplateTypeParameter(name: "E", type: !980)
!980 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !160, file: !2, size: 128, align: 64, elements: !981, templateParams: !45, identifier: "1d09cff2637fb46042bfc8266bfaf7e9")
!981 = !{!982}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !980, file: !2, baseType: !159, size: 128, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !971, file: !2, baseType: !984, size: 128, align: 64)
!984 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !969, file: !2, size: 128, align: 64, elements: !985, templateParams: !977, identifier: "51ffbe22271f3ae47cba9ef05fa6facb")
!985 = !{!986}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !984, file: !2, baseType: !980, size: 128, align: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, scope: !969, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!988 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !848, file: !2, size: 128, align: 64, elements: !989, templateParams: !45, identifier: "bca5789a72a91022a7b5d4645364da6c")
!989 = !{!990}
!990 = !DICompositeType(tag: DW_TAG_variant_part, scope: !988, file: !2, size: 128, align: 64, elements: !991, templateParams: !45, identifier: "3f6f53da8eef90af25494acc73ef20f1")
!991 = !{!992, !997}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !990, file: !2, baseType: !993, size: 128, align: 64)
!993 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !988, file: !2, size: 128, align: 64, elements: !994, templateParams: !996, identifier: "993efe714f41ea9550daaec12fd1bd8c")
!994 = !{!995}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !993, file: !2, baseType: !507, align: 8)
!996 = !{!877, !979}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !990, file: !2, baseType: !998, size: 128, align: 64)
!998 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !988, file: !2, size: 128, align: 64, elements: !999, templateParams: !996, identifier: "8ae11a87431968145748bddf5a43ab9a")
!999 = !{!1000}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !998, file: !2, baseType: !980, size: 128, align: 64)
!1001 = !{!1002, !1003}
!1002 = !DILocalVariable(name: "residual", arg: 1, scope: !966, file: !846, line: 2063, type: !988)
!1003 = !DILocalVariable(name: "e", scope: !1004, file: !846, line: 2065, type: !980, align: 8)
!1004 = distinct !DILexicalBlock(scope: !966, file: !846, line: 2065, column: 13)
!1005 = !{!978, !979, !1006}
!1006 = !DITemplateTypeParameter(name: "F", type: !980)
!1007 = !DILocation(line: 2063, column: 22, scope: !966)
!1008 = !DILocation(line: 2065, column: 17, scope: !966)
!1009 = !{i64 0, i64 -9223372036854775807}
!1010 = !DILocation(line: 2065, column: 17, scope: !1004)
!1011 = !DILocalVariable(name: "t", arg: 1, scope: !1012, file: !900, line: 736, type: !980)
!1012 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb913d6f08e8526c6E", scope: !901, file: !900, line: 736, type: !1013, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1016, retainedNodes: !1015)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!980, !980}
!1015 = !{!1011}
!1016 = !{!1017}
!1017 = !DITemplateTypeParameter(name: "T", type: !980)
!1018 = !DILocation(line: 736, column: 13, scope: !1012, inlinedAt: !1019)
!1019 = distinct !DILocation(line: 2065, column: 27, scope: !1004)
!1020 = !DILocation(line: 738, column: 6, scope: !1012, inlinedAt: !1019)
!1021 = !DILocation(line: 2065, column: 27, scope: !1004)
!1022 = !DILocation(line: 2065, column: 23, scope: !1004)
!1023 = !DILocation(line: 2067, column: 6, scope: !966)
!1024 = !{i64 0, i64 -9223372036854775806}
!1025 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcf0d5a0139af7265E", scope: !847, file: !846, line: 2063, type: !1026, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1046, retainedNodes: !1042)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!1028, !988, !882}
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !848, file: !2, size: 192, align: 64, elements: !1029, templateParams: !45, identifier: "abcf24769eea3facbd7e7c2de5aa7839")
!1029 = !{!1030}
!1030 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1028, file: !2, size: 192, align: 64, elements: !1031, templateParams: !45, identifier: "618936134483b808b7c0ba952abb161b", discriminator: !1041)
!1031 = !{!1032, !1037}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1030, file: !2, baseType: !1033, size: 192, align: 64, extraData: i64 0)
!1033 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1028, file: !2, size: 192, align: 64, elements: !1034, templateParams: !1036, identifier: "dbe496c854bff06b5a6884c55b0c9a8f")
!1034 = !{!1035}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1033, file: !2, baseType: !831, size: 128, align: 64, offset: 64)
!1036 = !{!860, !979}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1030, file: !2, baseType: !1038, size: 192, align: 64, extraData: i64 1)
!1038 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1028, file: !2, size: 192, align: 64, elements: !1039, templateParams: !1036, identifier: "d8ff31dffb4d2a701726bc4adb88a4a0")
!1039 = !{!1040}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1038, file: !2, baseType: !980, size: 128, align: 64, offset: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, scope: !1028, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!1042 = !{!1043, !1044}
!1043 = !DILocalVariable(name: "residual", arg: 1, scope: !1025, file: !846, line: 2063, type: !988)
!1044 = !DILocalVariable(name: "e", scope: !1045, file: !846, line: 2065, type: !980, align: 8)
!1045 = distinct !DILexicalBlock(scope: !1025, file: !846, line: 2065, column: 13)
!1046 = !{!860, !979, !1006}
!1047 = !DILocation(line: 2063, column: 22, scope: !1025)
!1048 = !DILocation(line: 2065, column: 17, scope: !1025)
!1049 = !DILocation(line: 2065, column: 17, scope: !1045)
!1050 = !DILocation(line: 736, column: 13, scope: !1012, inlinedAt: !1051)
!1051 = distinct !DILocation(line: 2065, column: 27, scope: !1045)
!1052 = !DILocation(line: 738, column: 6, scope: !1012, inlinedAt: !1051)
!1053 = !DILocation(line: 2065, column: 27, scope: !1045)
!1054 = !DILocation(line: 2065, column: 23, scope: !1045)
!1055 = !DILocation(line: 2067, column: 6, scope: !1025)
!1056 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd6f3d9742227c4e7E", scope: !847, file: !846, line: 2063, type: !1057, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1077, retainedNodes: !1073)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!969, !1059, !882}
!1059 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !848, file: !2, size: 128, align: 64, elements: !1060, templateParams: !45, identifier: "3ddf83dc0326247e1a8dee76a2e96be")
!1060 = !{!1061}
!1061 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1059, file: !2, size: 128, align: 64, elements: !1062, templateParams: !45, identifier: "1a9bdadc73454b1c1f9c49491ce01336")
!1062 = !{!1063, !1069}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1061, file: !2, baseType: !1064, size: 128, align: 64)
!1064 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1059, file: !2, size: 128, align: 64, elements: !1065, templateParams: !1067, identifier: "102a8c194f0ad9fe1e07fef6f3259c2a")
!1065 = !{!1066}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1064, file: !2, baseType: !507, align: 8)
!1067 = !{!877, !1068}
!1068 = !DITemplateTypeParameter(name: "E", type: !159)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1061, file: !2, baseType: !1070, size: 128, align: 64)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1059, file: !2, size: 128, align: 64, elements: !1071, templateParams: !1067, identifier: "8b11956e1186a9be9e86e49c25a4f27d")
!1071 = !{!1072}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1070, file: !2, baseType: !159, size: 128, align: 64)
!1073 = !{!1074, !1075}
!1074 = !DILocalVariable(name: "residual", arg: 1, scope: !1056, file: !846, line: 2063, type: !1059)
!1075 = !DILocalVariable(name: "e", scope: !1076, file: !846, line: 2065, type: !159, align: 8)
!1076 = distinct !DILexicalBlock(scope: !1056, file: !846, line: 2065, column: 13)
!1077 = !{!978, !1068, !1006}
!1078 = !DILocation(line: 2063, column: 22, scope: !1056)
!1079 = !DILocation(line: 2065, column: 17, scope: !1056)
!1080 = !DILocation(line: 2065, column: 17, scope: !1076)
!1081 = !DILocation(line: 2065, column: 27, scope: !1076)
!1082 = !DILocation(line: 2065, column: 23, scope: !1076)
!1083 = !DILocation(line: 2067, column: 6, scope: !1056)
!1084 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17heaf6fce254c61816E", scope: !847, file: !846, line: 2063, type: !1085, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1091, retainedNodes: !1087)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!1028, !1059, !882}
!1087 = !{!1088, !1089}
!1088 = !DILocalVariable(name: "residual", arg: 1, scope: !1084, file: !846, line: 2063, type: !1059)
!1089 = !DILocalVariable(name: "e", scope: !1090, file: !846, line: 2065, type: !159, align: 8)
!1090 = distinct !DILexicalBlock(scope: !1084, file: !846, line: 2065, column: 13)
!1091 = !{!860, !1068, !1006}
!1092 = !DILocation(line: 2063, column: 22, scope: !1084)
!1093 = !DILocation(line: 2065, column: 17, scope: !1084)
!1094 = !DILocation(line: 2065, column: 17, scope: !1090)
!1095 = !DILocation(line: 2065, column: 27, scope: !1090)
!1096 = !DILocation(line: 2065, column: 23, scope: !1090)
!1097 = !DILocation(line: 2067, column: 6, scope: !1084)
!1098 = distinct !DISubprogram(name: "fmt<alloc::collections::TryReserveErrorKind>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3525879dc69536aeE", scope: !1100, file: !1099, line: 2396, type: !1101, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1154, retainedNodes: !1151)
!1099 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "3da37f0da8b4e2a4936cc4d503a5a432")
!1100 = !DINamespace(name: "{impl#59}", scope: !62)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!1103, !1118, !1119}
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !848, file: !2, size: 8, align: 8, elements: !1104, templateParams: !45, identifier: "ab4fdd4ae7b9c0609a3e563b345100af")
!1104 = !{!1105}
!1105 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1103, file: !2, size: 8, align: 8, elements: !1106, templateParams: !45, identifier: "b1509727e34e792adf97c998c8b09839", discriminator: !1117)
!1106 = !{!1107, !1113}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1105, file: !2, baseType: !1108, size: 8, align: 8, extraData: i64 0)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1103, file: !2, size: 8, align: 8, elements: !1109, templateParams: !1111, identifier: "7b72f9a6c523523a3efe2fa3bc75af66")
!1109 = !{!1110}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1108, file: !2, baseType: !7, align: 8, offset: 8)
!1111 = !{!978, !1112}
!1112 = !DITemplateTypeParameter(name: "E", type: !61)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1105, file: !2, baseType: !1114, size: 8, align: 8, extraData: i64 1)
!1114 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1103, file: !2, size: 8, align: 8, elements: !1115, templateParams: !1111, identifier: "7e7f93e4d1c31285722aa9db6f824275")
!1115 = !{!1116}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1114, file: !2, baseType: !61, align: 8, offset: 8)
!1117 = !DIDerivedType(tag: DW_TAG_member, scope: !1103, file: !2, baseType: !39, size: 8, align: 8, flags: DIFlagArtificial)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&alloc::collections::TryReserveErrorKind", baseType: !158, size: 64, align: 64, dwarfAddressSpace: 0)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !1120, size: 64, align: 64, dwarfAddressSpace: 0)
!1120 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !62, file: !2, size: 512, align: 64, elements: !1121, templateParams: !45, identifier: "f926d77f60c5c9d319d3b7845f5fe267")
!1121 = !{!1122, !1123, !1124, !1125, !1139, !1140}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1120, file: !2, baseType: !498, size: 32, align: 32, offset: 384)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1120, file: !2, baseType: !491, size: 32, align: 32, offset: 416)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1120, file: !2, baseType: !349, size: 8, align: 8, offset: 448)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1120, file: !2, baseType: !1126, size: 128, align: 64, offset: 128)
!1126 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !84, file: !2, size: 128, align: 64, elements: !1127, templateParams: !45, identifier: "cb26f181a711fbe83b3afb348d7c01cb")
!1127 = !{!1128}
!1128 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1126, file: !2, size: 128, align: 64, elements: !1129, templateParams: !45, identifier: "8d3067b891c8f12a45e965020aca888f", discriminator: !1138)
!1129 = !{!1130, !1134}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1128, file: !2, baseType: !1131, size: 128, align: 64, extraData: i64 0)
!1131 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1126, file: !2, size: 128, align: 64, elements: !45, templateParams: !1132, identifier: "c8b9aa2632d7f877a99d298efe41260c")
!1132 = !{!1133}
!1133 = !DITemplateTypeParameter(name: "T", type: !9)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1128, file: !2, baseType: !1135, size: 128, align: 64, extraData: i64 1)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1126, file: !2, size: 128, align: 64, elements: !1136, templateParams: !1132, identifier: "eec942390a307d7c8c2162b2092f63f3")
!1136 = !{!1137}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1135, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1120, file: !2, baseType: !1126, size: 128, align: 64, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1120, file: !2, baseType: !1141, size: 128, align: 64)
!1141 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !1142, templateParams: !45, identifier: "21e2737f9b3dccde2bd3f02defa8704f")
!1142 = !{!1143, !1146}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1141, file: !2, baseType: !1144, size: 64, align: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64, align: 64, dwarfAddressSpace: 0)
!1145 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !45, identifier: "bb744bac75d5d19249a16512e8e296c")
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1141, file: !2, baseType: !1147, size: 64, align: 64, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !1148, size: 64, align: 64, dwarfAddressSpace: 0)
!1148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !1149)
!1149 = !{!1150}
!1150 = !DISubrange(count: 3, lowerBound: 0)
!1151 = !{!1152, !1153}
!1152 = !DILocalVariable(name: "self", arg: 1, scope: !1098, file: !1099, line: 2396, type: !1118)
!1153 = !DILocalVariable(name: "f", arg: 2, scope: !1098, file: !1099, line: 2396, type: !1119)
!1154 = !{!1155}
!1155 = !DITemplateTypeParameter(name: "T", type: !159)
!1156 = !DILocation(line: 2396, column: 20, scope: !1098)
!1157 = !DILocation(line: 2396, column: 27, scope: !1098)
!1158 = !DILocation(line: 2396, column: 71, scope: !1098)
!1159 = !{i64 8}
!1160 = !DILocation(line: 2396, column: 62, scope: !1098)
!1161 = !DILocation(line: 2396, column: 84, scope: !1098)
!1162 = distinct !DISubprogram(name: "fmt<core::str::error::Utf8Error>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h48dacd3e93df9961E", scope: !1100, file: !1099, line: 2396, type: !1163, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1169, retainedNodes: !1166)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!1103, !1165, !1119}
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&core::str::error::Utf8Error", baseType: !334, size: 64, align: 64, dwarfAddressSpace: 0)
!1166 = !{!1167, !1168}
!1167 = !DILocalVariable(name: "self", arg: 1, scope: !1162, file: !1099, line: 2396, type: !1165)
!1168 = !DILocalVariable(name: "f", arg: 2, scope: !1162, file: !1099, line: 2396, type: !1119)
!1169 = !{!1170}
!1170 = !DITemplateTypeParameter(name: "T", type: !131)
!1171 = !DILocation(line: 2396, column: 20, scope: !1162)
!1172 = !DILocation(line: 2396, column: 27, scope: !1162)
!1173 = !DILocation(line: 2396, column: 71, scope: !1162)
!1174 = !DILocation(line: 2396, column: 62, scope: !1162)
!1175 = !DILocation(line: 2396, column: 84, scope: !1162)
!1176 = distinct !DISubprogram(name: "fmt<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hca3fecd557984023E", scope: !1100, file: !1099, line: 2396, type: !1177, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1183, retainedNodes: !1180)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!1103, !1179, !1119}
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !280, size: 64, align: 64, dwarfAddressSpace: 0)
!1180 = !{!1181, !1182}
!1181 = !DILocalVariable(name: "self", arg: 1, scope: !1176, file: !1099, line: 2396, type: !1179)
!1182 = !DILocalVariable(name: "f", arg: 2, scope: !1176, file: !1099, line: 2396, type: !1119)
!1183 = !{!1184}
!1184 = !DITemplateTypeParameter(name: "T", type: !20)
!1185 = !DILocation(line: 2396, column: 20, scope: !1176)
!1186 = !DILocation(line: 2396, column: 27, scope: !1176)
!1187 = !DILocation(line: 2396, column: 71, scope: !1176)
!1188 = !DILocation(line: 2396, column: 62, scope: !1176)
!1189 = !DILocation(line: 2396, column: 84, scope: !1176)
!1190 = distinct !DISubprogram(name: "is_aligned_and_not_null<i8>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h0189270e9eeaa4eaE", scope: !1192, file: !1191, line: 2260, type: !1193, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1198, retainedNodes: !1196)
!1191 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "890eee47c720221d7463b825943ce452")
!1192 = !DINamespace(name: "intrinsics", scope: !31)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!571, !1195}
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i8", baseType: !359, size: 64, align: 64, dwarfAddressSpace: 0)
!1196 = !{!1197}
!1197 = !DILocalVariable(name: "ptr", arg: 1, scope: !1190, file: !1191, line: 2260, type: !1195)
!1198 = !{!1199}
!1199 = !DITemplateTypeParameter(name: "T", type: !359)
!1200 = !DILocation(line: 2260, column: 42, scope: !1190)
!1201 = !DILocation(line: 2261, column: 6, scope: !1190)
!1202 = !DILocation(line: 2261, column: 5, scope: !1190)
!1203 = !DILocation(line: 2261, column: 23, scope: !1190)
!1204 = !DILocation(line: 2262, column: 2, scope: !1190)
!1205 = distinct !DISubprogram(name: "is_aligned_and_not_null<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h87cab91c3f15e57bE", scope: !1192, file: !1191, line: 2260, type: !1206, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !1209)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!571, !1208}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !24, size: 64, align: 64, dwarfAddressSpace: 0)
!1209 = !{!1210}
!1210 = !DILocalVariable(name: "ptr", arg: 1, scope: !1205, file: !1191, line: 2260, type: !1208)
!1211 = !{!1212}
!1212 = !DITemplateTypeParameter(name: "T", type: !24)
!1213 = !DILocation(line: 2260, column: 42, scope: !1205)
!1214 = !DILocation(line: 2261, column: 6, scope: !1205)
!1215 = !DILocation(line: 2261, column: 5, scope: !1205)
!1216 = !DILocation(line: 2261, column: 23, scope: !1205)
!1217 = !DILocation(line: 2262, column: 2, scope: !1205)
!1218 = distinct !DISubprogram(name: "is_aligned_and_not_null<alloc::alloc::Global>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h93e02132c34304b2E", scope: !1192, file: !1191, line: 2260, type: !1219, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1224, retainedNodes: !1222)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!571, !1221}
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::alloc::Global", baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!1222 = !{!1223}
!1223 = !DILocalVariable(name: "ptr", arg: 1, scope: !1218, file: !1191, line: 2260, type: !1221)
!1224 = !{!1225}
!1225 = !DITemplateTypeParameter(name: "T", type: !48)
!1226 = !DILocation(line: 2260, column: 42, scope: !1218)
!1227 = !DILocation(line: 2261, column: 6, scope: !1218)
!1228 = !DILocation(line: 2261, column: 5, scope: !1218)
!1229 = !DILocation(line: 2261, column: 23, scope: !1218)
!1230 = !DILocation(line: 2262, column: 2, scope: !1218)
!1231 = distinct !DISubprogram(name: "is_aligned_and_not_null<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17hb8a5e17d810b5ea4E", scope: !1192, file: !1191, line: 2260, type: !1232, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !1235)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!571, !1234}
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !322, size: 64, align: 64, dwarfAddressSpace: 0)
!1235 = !{!1236}
!1236 = !DILocalVariable(name: "ptr", arg: 1, scope: !1231, file: !1191, line: 2260, type: !1234)
!1237 = !{!1238}
!1238 = !DITemplateTypeParameter(name: "T", type: !322)
!1239 = !DILocation(line: 2260, column: 42, scope: !1231)
!1240 = !DILocation(line: 2261, column: 6, scope: !1231)
!1241 = !DILocation(line: 2261, column: 5, scope: !1231)
!1242 = !DILocation(line: 2261, column: 23, scope: !1231)
!1243 = !DILocation(line: 2262, column: 2, scope: !1231)
!1244 = distinct !DISubprogram(name: "is_aligned_and_not_null<alloc::string::String>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17hd6978d6dcad3c904E", scope: !1192, file: !1191, line: 2260, type: !1245, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !1248)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!571, !1247}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::string::String", baseType: !15, size: 64, align: 64, dwarfAddressSpace: 0)
!1248 = !{!1249}
!1249 = !DILocalVariable(name: "ptr", arg: 1, scope: !1244, file: !1191, line: 2260, type: !1247)
!1250 = !{!1251}
!1251 = !DITemplateTypeParameter(name: "T", type: !15)
!1252 = !DILocation(line: 2260, column: 42, scope: !1244)
!1253 = !DILocation(line: 2261, column: 6, scope: !1244)
!1254 = !DILocation(line: 2261, column: 5, scope: !1244)
!1255 = !DILocation(line: 2261, column: 23, scope: !1244)
!1256 = !DILocation(line: 2262, column: 2, scope: !1244)
!1257 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17hdcee5023180a3051E", scope: !1192, file: !1191, line: 2260, type: !1258, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !1261)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!571, !1260}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::slice::iter::Iter<u8>", baseType: !559, size: 64, align: 64, dwarfAddressSpace: 0)
!1261 = !{!1262}
!1262 = !DILocalVariable(name: "ptr", arg: 1, scope: !1257, file: !1191, line: 2260, type: !1260)
!1263 = !{!1264}
!1264 = !DITemplateTypeParameter(name: "T", type: !559)
!1265 = !DILocation(line: 2260, column: 42, scope: !1257)
!1266 = !DILocation(line: 2261, column: 6, scope: !1257)
!1267 = !DILocation(line: 2261, column: 5, scope: !1257)
!1268 = !DILocation(line: 2261, column: 23, scope: !1257)
!1269 = !DILocation(line: 2262, column: 2, scope: !1257)
!1270 = distinct !DISubprogram(name: "is_aligned_and_not_null<core::option::Option<u16>>", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17hedbc77d5634e60acE", scope: !1192, file: !1191, line: 2260, type: !1271, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !1274)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!571, !1273}
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<u16>", baseType: !435, size: 64, align: 64, dwarfAddressSpace: 0)
!1274 = !{!1275}
!1275 = !DILocalVariable(name: "ptr", arg: 1, scope: !1270, file: !1191, line: 2260, type: !1273)
!1276 = !{!1277}
!1277 = !DITemplateTypeParameter(name: "T", type: !435)
!1278 = !DILocation(line: 2260, column: 42, scope: !1270)
!1279 = !DILocation(line: 2261, column: 6, scope: !1270)
!1280 = !DILocation(line: 2261, column: 5, scope: !1270)
!1281 = !DILocation(line: 2261, column: 23, scope: !1270)
!1282 = !DILocation(line: 2262, column: 2, scope: !1270)
!1283 = distinct !DISubprogram(name: "is_valid_allocation_size<i8>", linkageName: "_ZN4core10intrinsics24is_valid_allocation_size17h0e1d3c87edc4155dE", scope: !1192, file: !1191, line: 2266, type: !1284, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1198, retainedNodes: !1286)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!571, !9}
!1286 = !{!1287, !1288}
!1287 = !DILocalVariable(name: "len", arg: 1, scope: !1283, file: !1191, line: 2266, type: !9)
!1288 = !DILocalVariable(name: "max_len", scope: !1289, file: !1191, line: 2267, type: !9, align: 8)
!1289 = distinct !DILexicalBlock(scope: !1283, file: !1191, line: 2267, column: 5)
!1290 = !DILocation(line: 2266, column: 43, scope: !1283)
!1291 = !DILocation(line: 2267, column: 19, scope: !1283)
!1292 = !DILocation(line: 2267, column: 9, scope: !1289)
!1293 = !DILocation(line: 2271, column: 5, scope: !1289)
!1294 = !DILocation(line: 2272, column: 2, scope: !1283)
!1295 = distinct !DISubprogram(name: "is_valid_allocation_size<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core10intrinsics24is_valid_allocation_size17ha2af378f09d1ecedE", scope: !1192, file: !1191, line: 2266, type: !1284, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !1296)
!1296 = !{!1297, !1298}
!1297 = !DILocalVariable(name: "len", arg: 1, scope: !1295, file: !1191, line: 2266, type: !9)
!1298 = !DILocalVariable(name: "max_len", scope: !1299, file: !1191, line: 2267, type: !9, align: 8)
!1299 = distinct !DILexicalBlock(scope: !1295, file: !1191, line: 2267, column: 5)
!1300 = !DILocation(line: 2266, column: 43, scope: !1295)
!1301 = !DILocation(line: 2267, column: 19, scope: !1295)
!1302 = !DILocation(line: 2267, column: 9, scope: !1299)
!1303 = !DILocation(line: 2271, column: 5, scope: !1299)
!1304 = !DILocation(line: 2272, column: 2, scope: !1295)
!1305 = distinct !DISubprogram(name: "copy<u8>", linkageName: "_ZN4core10intrinsics4copy17h6fea0d8c69cb5207E", scope: !1192, file: !1191, line: 2466, type: !1306, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !1309)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{null, !38, !1308, !9}
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!1309 = !{!1310, !1311, !1312}
!1310 = !DILocalVariable(name: "src", arg: 1, scope: !1305, file: !1191, line: 2466, type: !38)
!1311 = !DILocalVariable(name: "dst", arg: 2, scope: !1305, file: !1191, line: 2466, type: !1308)
!1312 = !DILocalVariable(name: "count", arg: 3, scope: !1305, file: !1191, line: 2466, type: !9)
!1313 = !DILocation(line: 2466, column: 29, scope: !1305)
!1314 = !DILocation(line: 2466, column: 44, scope: !1305)
!1315 = !DILocation(line: 2466, column: 57, scope: !1305)
!1316 = !DILocation(line: 2474, column: 9, scope: !1305)
!1317 = !DILocalVariable(name: "src", arg: 1, scope: !1318, file: !1191, line: 2241, type: !38)
!1318 = distinct !DISubprogram(name: "runtime<u8>", linkageName: "_ZN4core10intrinsics4copy7runtime17hddfc2b2891de0632E", scope: !1319, file: !1191, line: 2241, type: !1320, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !1322)
!1319 = !DINamespace(name: "copy", scope: !1192)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{null, !38, !1308}
!1322 = !{!1317, !1323}
!1323 = !DILocalVariable(name: "dst", arg: 2, scope: !1318, file: !1191, line: 2241, type: !1308)
!1324 = !DILocation(line: 2241, column: 39, scope: !1318, inlinedAt: !1325)
!1325 = distinct !DILocation(line: 2474, column: 9, scope: !1305)
!1326 = !DILocation(line: 2477, column: 13, scope: !1318, inlinedAt: !1325)
!1327 = !DILocation(line: 2477, column: 45, scope: !1318, inlinedAt: !1325)
!1328 = !DILocation(line: 2242, column: 20, scope: !1318, inlinedAt: !1325)
!1329 = !DILocation(line: 2244, column: 21, scope: !1318, inlinedAt: !1325)
!1330 = !DILocation(line: 2479, column: 9, scope: !1305)
!1331 = !DILocation(line: 2481, column: 2, scope: !1305)
!1332 = distinct !DISubprogram(name: "of<alloc::boxed::{impl#66}::from::StringError>", linkageName: "_ZN4core3any6TypeId2of17haa644bb0c23b4121E", scope: !1334, file: !1333, line: 691, type: !1338, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1340, retainedNodes: !45)
!1333 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/any.rs", directory: "", checksumkind: CSK_MD5, checksum: "d7a27456dbe03a43a74b52f62fb0e164")
!1334 = !DICompositeType(tag: DW_TAG_structure_type, name: "TypeId", scope: !1335, file: !2, size: 64, align: 64, elements: !1336, templateParams: !45, identifier: "d9b7298a963b4fd668c9d79c96543b29")
!1335 = !DINamespace(name: "any", scope: !31)
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1334, file: !2, baseType: !179, size: 64, align: 64)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!1334}
!1340 = !{!1341}
!1341 = !DITemplateTypeParameter(name: "T", type: !110)
!1342 = !DILocation(line: 692, column: 21, scope: !1332)
!1343 = !DILocation(line: 692, column: 9, scope: !1332)
!1344 = !DILocation(line: 693, column: 6, scope: !1332)
!1345 = distinct !DISubprogram(name: "of<core::str::error::Utf8Error>", linkageName: "_ZN4core3any6TypeId2of17hc5927e1264113188E", scope: !1334, file: !1333, line: 691, type: !1338, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1169, retainedNodes: !45)
!1346 = !DILocation(line: 692, column: 21, scope: !1345)
!1347 = !DILocation(line: 692, column: 9, scope: !1345)
!1348 = !DILocation(line: 693, column: 6, scope: !1345)
!1349 = distinct !DISubprogram(name: "max<core::ptr::alignment::Alignment>", linkageName: "_ZN4core3cmp3Ord3max17h1cf295d047a72e91E", scope: !1351, file: !1350, line: 798, type: !1352, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1357, retainedNodes: !1354)
!1350 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "b91f20a51804d5cdbda7bdba75d392d5")
!1351 = !DINamespace(name: "Ord", scope: !358)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!174, !174, !174}
!1354 = !{!1355, !1356}
!1355 = !DILocalVariable(name: "self", arg: 1, scope: !1349, file: !1350, line: 798, type: !174)
!1356 = !DILocalVariable(name: "other", arg: 2, scope: !1349, file: !1350, line: 798, type: !174)
!1357 = !{!1358}
!1358 = !DITemplateTypeParameter(name: "Self", type: !174)
!1359 = !DILocation(line: 798, column: 12, scope: !1349)
!1360 = !DILocation(line: 798, column: 18, scope: !1349)
!1361 = !DILocation(line: 803, column: 9, scope: !1349)
!1362 = !{i64 1, i64 -9223372036854775807}
!1363 = !DILocation(line: 804, column: 6, scope: !1349)
!1364 = distinct !DISubprogram(name: "max<core::ptr::alignment::Alignment>", linkageName: "_ZN4core3cmp3max17ha1686a90d4959293E", scope: !358, file: !1350, line: 1243, type: !1352, scopeLine: 1243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1368, retainedNodes: !1365)
!1365 = !{!1366, !1367}
!1366 = !DILocalVariable(name: "v1", arg: 1, scope: !1364, file: !1350, line: 1243, type: !174)
!1367 = !DILocalVariable(name: "v2", arg: 2, scope: !1364, file: !1350, line: 1243, type: !174)
!1368 = !{!1369}
!1369 = !DITemplateTypeParameter(name: "T", type: !174)
!1370 = !DILocation(line: 1243, column: 51, scope: !1364)
!1371 = !DILocation(line: 1243, column: 58, scope: !1364)
!1372 = !DILocation(line: 1244, column: 5, scope: !1364)
!1373 = !DILocation(line: 1245, column: 2, scope: !1364)
!1374 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h7b283cdbd8a6d95bE", scope: !1375, file: !1350, line: 1412, type: !1377, scopeLine: 1412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1379)
!1375 = !DINamespace(name: "{impl#55}", scope: !1376)
!1376 = !DINamespace(name: "impls", scope: !358)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!357, !289, !289}
!1379 = !{!1380, !1381}
!1380 = !DILocalVariable(name: "self", arg: 1, scope: !1374, file: !1350, line: 1412, type: !289)
!1381 = !DILocalVariable(name: "other", arg: 2, scope: !1374, file: !1350, line: 1412, type: !289)
!1382 = !DILocation(line: 1412, column: 24, scope: !1374)
!1383 = !DILocation(line: 1412, column: 31, scope: !1374)
!1384 = !DILocation(line: 1415, column: 24, scope: !1374)
!1385 = !DILocation(line: 1415, column: 32, scope: !1374)
!1386 = !DILocation(line: 1416, column: 29, scope: !1374)
!1387 = !DILocation(line: 1416, column: 38, scope: !1374)
!1388 = !DILocation(line: 1415, column: 41, scope: !1374)
!1389 = !DILocation(line: 1415, column: 21, scope: !1374)
!1390 = !DILocation(line: 1418, column: 18, scope: !1374)
!1391 = !{i8 -1, i8 2}
!1392 = !DILocation(line: 1417, column: 28, scope: !1374)
!1393 = !DILocation(line: 1416, column: 26, scope: !1374)
!1394 = !DILocation(line: 1416, column: 47, scope: !1374)
!1395 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h644fe0bfe8698e8bE", scope: !1396, file: !1350, line: 1310, type: !1397, scopeLine: 1310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1399)
!1396 = !DINamespace(name: "{impl#22}", scope: !1376)
!1397 = !DISubroutineType(types: !1398)
!1398 = !{!571, !567, !567}
!1399 = !{!1400, !1401}
!1400 = !DILocalVariable(name: "self", arg: 1, scope: !1395, file: !1350, line: 1310, type: !567)
!1401 = !DILocalVariable(name: "other", arg: 2, scope: !1395, file: !1350, line: 1310, type: !567)
!1402 = !DILocation(line: 1310, column: 23, scope: !1395)
!1403 = !DILocation(line: 1310, column: 30, scope: !1395)
!1404 = !DILocation(line: 1310, column: 52, scope: !1395)
!1405 = !DILocation(line: 1310, column: 63, scope: !1395)
!1406 = !DILocation(line: 1310, column: 73, scope: !1395)
!1407 = distinct !DISubprogram(name: "max_by<core::ptr::alignment::Alignment, fn(&core::ptr::alignment::Alignment, &core::ptr::alignment::Alignment) -> core::cmp::Ordering>", linkageName: "_ZN4core3cmp6max_by17h301efbe0d394c258E", scope: !358, file: !1350, line: 1263, type: !1408, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1418, retainedNodes: !1414)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!174, !174, !174, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::ptr::alignment::Alignment, &core::ptr::alignment::Alignment) -> core::cmp::Ordering", baseType: !1411, size: 64, align: 64, dwarfAddressSpace: 0)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!357, !1413, !1413}
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::alignment::Alignment", baseType: !174, size: 64, align: 64, dwarfAddressSpace: 0)
!1414 = !{!1415, !1416, !1417}
!1415 = !DILocalVariable(name: "v1", arg: 1, scope: !1407, file: !1350, line: 1263, type: !174)
!1416 = !DILocalVariable(name: "v2", arg: 2, scope: !1407, file: !1350, line: 1263, type: !174)
!1417 = !DILocalVariable(name: "compare", arg: 3, scope: !1407, file: !1350, line: 1263, type: !1410)
!1418 = !{!1369, !1419}
!1419 = !DITemplateTypeParameter(name: "F", type: !1410)
!1420 = !DILocation(line: 1263, column: 62, scope: !1407)
!1421 = !DILocation(line: 1263, column: 69, scope: !1407)
!1422 = !DILocation(line: 1263, column: 76, scope: !1407)
!1423 = !DILocation(line: 1268, column: 11, scope: !1407)
!1424 = !DILocation(line: 1268, column: 5, scope: !1407)
!1425 = !DILocation(line: 1269, column: 45, scope: !1407)
!1426 = !DILocation(line: 1270, column: 30, scope: !1407)
!1427 = !DILocation(line: 1272, column: 1, scope: !1407)
!1428 = !DILocation(line: 1272, column: 2, scope: !1407)
!1429 = distinct !DISubprogram(name: "to_bytes_with_nul", linkageName: "_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17h38e806c05411979fE", scope: !810, file: !1430, line: 591, type: !1431, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1441)
!1430 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "960235659b8db6d5d8a3ea193e2b51bf")
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!1433, !1437}
!1433 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !1434, templateParams: !45, identifier: "1adda6141450f528e36794b66d53eb6c")
!1434 = !{!1435, !1436}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1433, file: !2, baseType: !148, size: 64, align: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1433, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1437 = !DICompositeType(tag: DW_TAG_structure_type, name: "&core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !1438, templateParams: !45, identifier: "f060f4c1353e69974d6bbb0ba2ac4d28")
!1438 = !{!1439, !1440}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1437, file: !2, baseType: !809, size: 64, align: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1437, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1441 = !{!1442}
!1442 = !DILocalVariable(name: "self", arg: 1, scope: !1429, file: !1430, line: 591, type: !1437)
!1443 = !DILocation(line: 591, column: 36, scope: !1429)
!1444 = !DILocation(line: 595, column: 6, scope: !1429)
!1445 = distinct !DISubprogram(name: "from_bytes_with_nul_unchecked", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17h2453c5391e5bedf4E", scope: !810, file: !1430, line: 417, type: !1446, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1448)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!1437, !1433}
!1448 = !{!1449}
!1449 = !DILocalVariable(name: "bytes", arg: 1, scope: !1445, file: !1430, line: 417, type: !1433)
!1450 = !DILocation(line: 417, column: 55, scope: !1445)
!1451 = !DILocation(line: 451, column: 48, scope: !1445)
!1452 = !DILocation(line: 451, column: 18, scope: !1445)
!1453 = !DILocation(line: 452, column: 6, scope: !1445)
!1454 = distinct !DISubprogram(name: "rt_impl", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7rt_impl17h975bbc3c6d75c8a6E", scope: !1455, file: !1430, line: 419, type: !1446, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1457)
!1455 = !DINamespace(name: "from_bytes_with_nul_unchecked", scope: !1456)
!1456 = !DINamespace(name: "{impl#6}", scope: !811)
!1457 = !{!1458}
!1458 = !DILocalVariable(name: "bytes", arg: 1, scope: !1454, file: !1430, line: 419, type: !1433)
!1459 = !DILocation(line: 419, column: 20, scope: !1454)
!1460 = !DILocation(line: 421, column: 28, scope: !1454)
!1461 = !DILocation(line: 421, column: 27, scope: !1454)
!1462 = !DILocation(line: 421, column: 54, scope: !1454)
!1463 = !DILocation(line: 421, column: 48, scope: !1454)
!1464 = !DILocation(line: 421, column: 13, scope: !1454)
!1465 = !DILocation(line: 429, column: 10, scope: !1454)
!1466 = distinct !DISubprogram(name: "to_bytes", linkageName: "_ZN4core3ffi5c_str4CStr8to_bytes17h82852abaa6893a37E", scope: !810, file: !1430, line: 563, type: !1431, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1467)
!1467 = !{!1468, !1469}
!1468 = !DILocalVariable(name: "self", arg: 1, scope: !1466, file: !1430, line: 563, type: !1437)
!1469 = !DILocalVariable(name: "bytes", scope: !1470, file: !1430, line: 564, type: !1433, align: 8)
!1470 = distinct !DILexicalBlock(scope: !1466, file: !1430, line: 564, column: 9)
!1471 = !DILocation(line: 563, column: 27, scope: !1466)
!1472 = !DILocation(line: 564, column: 21, scope: !1466)
!1473 = !DILocation(line: 564, column: 13, scope: !1470)
!1474 = !DILocation(line: 566, column: 40, scope: !1470)
!1475 = !DILocation(line: 566, column: 38, scope: !1470)
!1476 = !DILocation(line: 566, column: 18, scope: !1470)
!1477 = !DILocation(line: 567, column: 6, scope: !1466)
!1478 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hc0df83b4a7aeedffE", scope: !1480, file: !1479, line: 185, type: !1482, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1484)
!1479 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "02359a317e793c1b82de7b934f87f847")
!1480 = !DINamespace(name: "{impl#89}", scope: !1481)
!1481 = !DINamespace(name: "num", scope: !62)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!1103, !289, !1119}
!1484 = !{!1485, !1486}
!1485 = !DILocalVariable(name: "self", arg: 1, scope: !1478, file: !1479, line: 185, type: !289)
!1486 = !DILocalVariable(name: "f", arg: 2, scope: !1478, file: !1479, line: 185, type: !1119)
!1487 = !DILocation(line: 185, column: 20, scope: !1478)
!1488 = !DILocation(line: 185, column: 27, scope: !1478)
!1489 = !DILocation(line: 186, column: 20, scope: !1478)
!1490 = !DILocation(line: 188, column: 27, scope: !1478)
!1491 = !DILocation(line: 187, column: 21, scope: !1478)
!1492 = !DILocation(line: 193, column: 14, scope: !1478)
!1493 = !DILocation(line: 191, column: 21, scope: !1478)
!1494 = !DILocation(line: 189, column: 21, scope: !1478)
!1495 = distinct !DISubprogram(name: "write_fmt<alloc::string::String>", linkageName: "_ZN4core3fmt5Write9write_fmt17h253ba6ca3452f57eE", scope: !1496, file: !1099, line: 196, type: !1497, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1571, retainedNodes: !1568)
!1496 = !DINamespace(name: "Write", scope: !62)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!1103, !14, !1499}
!1499 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !62, file: !2, size: 384, align: 64, elements: !1500, templateParams: !45, identifier: "e0fec765575fe1c67e1965cae9eb37c")
!1500 = !{!1501, !1507, !1552}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !1499, file: !2, baseType: !1502, size: 128, align: 64, offset: 128)
!1502 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !1503, templateParams: !45, identifier: "1bd0df68c6cb6036a2bb36aa5621bbdb")
!1503 = !{!1504, !1506}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1502, file: !2, baseType: !1505, size: 64, align: 64)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64, align: 64, dwarfAddressSpace: 0)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1502, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !1499, file: !2, baseType: !1508, size: 128, align: 64)
!1508 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !84, file: !2, size: 128, align: 64, elements: !1509, templateParams: !45, identifier: "37e4e944ba32344d635147f54bf9f4df")
!1509 = !{!1510}
!1510 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1508, file: !2, size: 128, align: 64, elements: !1511, templateParams: !45, identifier: "eff75c39088f38f57b6ca1fc85a0229a", discriminator: !1551)
!1511 = !{!1512, !1547}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1510, file: !2, baseType: !1513, size: 128, align: 64, extraData: i64 0)
!1513 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1508, file: !2, size: 128, align: 64, elements: !45, templateParams: !1514, identifier: "caff66e7c4f3d2646e85b521ac86f85a")
!1514 = !{!1515}
!1515 = !DITemplateTypeParameter(name: "T", type: !1516)
!1516 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !1517, templateParams: !45, identifier: "2225a8a3217ca2e4230086a86939d931")
!1517 = !{!1518, !1546}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1516, file: !2, baseType: !1519, size: 64, align: 64)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64, align: 64, dwarfAddressSpace: 0)
!1520 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !350, file: !2, size: 448, align: 64, elements: !1521, templateParams: !45, identifier: "bd6e29dcdd1c85099e937af3adb84f39")
!1521 = !{!1522, !1523}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !1520, file: !2, baseType: !9, size: 64, align: 64, offset: 384)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1520, file: !2, baseType: !1524, size: 384, align: 64)
!1524 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !350, file: !2, size: 384, align: 64, elements: !1525, templateParams: !45, identifier: "6cc4f16dc004a368eb7a2afb2c6178c")
!1525 = !{!1526, !1527, !1528, !1529, !1545}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1524, file: !2, baseType: !491, size: 32, align: 32, offset: 288)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1524, file: !2, baseType: !349, size: 8, align: 8, offset: 320)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1524, file: !2, baseType: !498, size: 32, align: 32, offset: 256)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1524, file: !2, baseType: !1530, size: 128, align: 64)
!1530 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !350, file: !2, size: 128, align: 64, elements: !1531, templateParams: !45, identifier: "32660758978696a09244873a5d6fbb61")
!1531 = !{!1532}
!1532 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1530, file: !2, size: 128, align: 64, elements: !1533, templateParams: !45, identifier: "28e5bb3a090c14f2cd182db549a068a6", discriminator: !1544)
!1533 = !{!1534, !1538, !1542}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !1532, file: !2, baseType: !1535, size: 128, align: 64, extraData: i64 0)
!1535 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !1530, file: !2, size: 128, align: 64, elements: !1536, templateParams: !45, identifier: "341e2e1a54680fcd4e0a11a9f090ffaa")
!1536 = !{!1537}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1535, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !1532, file: !2, baseType: !1539, size: 128, align: 64, extraData: i64 1)
!1539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !1530, file: !2, size: 128, align: 64, elements: !1540, templateParams: !45, identifier: "4a82d78f7563c7ad8c72200904d871bb")
!1540 = !{!1541}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1539, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !1532, file: !2, baseType: !1543, size: 128, align: 64, extraData: i64 2)
!1543 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !1530, file: !2, size: 128, align: 64, elements: !45, identifier: "4f9ef5bac5220bb9412e1e0f55484c15")
!1544 = !DIDerivedType(tag: DW_TAG_member, scope: !1530, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1524, file: !2, baseType: !1530, size: 128, align: 64, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1516, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1510, file: !2, baseType: !1548, size: 128, align: 64)
!1548 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1508, file: !2, size: 128, align: 64, elements: !1549, templateParams: !1514, identifier: "f64c0c4a3e31ce946976d4995d49649a")
!1549 = !{!1550}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1548, file: !2, baseType: !1516, size: 128, align: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, scope: !1508, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1499, file: !2, baseType: !1553, size: 128, align: 64, offset: 256)
!1553 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !1554, templateParams: !45, identifier: "5e6975564bb19db54eba15ca2ba01c7")
!1554 = !{!1555, !1567}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1553, file: !2, baseType: !1556, size: 64, align: 64)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64, align: 64, dwarfAddressSpace: 0)
!1557 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !62, file: !2, size: 128, align: 64, elements: !1558, templateParams: !45, identifier: "ea6cf7b811e43b9e7b4d363768d4d9d6")
!1558 = !{!1559, !1563}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1557, file: !2, baseType: !1560, size: 64, align: 64)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !1561, size: 64, align: 64, dwarfAddressSpace: 0)
!1561 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !1562, file: !2, align: 8, elements: !45, identifier: "309a12208c9a77154ceb9b2c501d7d92")
!1562 = !DINamespace(name: "{extern#0}", scope: !62)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !1557, file: !2, baseType: !1564, size: 64, align: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !1565, size: 64, align: 64, dwarfAddressSpace: 0)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!1103, !1560, !1119}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1553, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1568 = !{!1569, !1570}
!1569 = !DILocalVariable(name: "self", arg: 1, scope: !1495, file: !1099, line: 196, type: !14)
!1570 = !DILocalVariable(name: "args", arg: 2, scope: !1495, file: !1099, line: 196, type: !1499)
!1571 = !{!1572}
!1572 = !DITemplateTypeParameter(name: "Self", type: !15)
!1573 = !DILocation(line: 196, column: 18, scope: !1495)
!1574 = !DILocation(line: 196, column: 39, scope: !1495)
!1575 = !DILocation(line: 197, column: 9, scope: !1495)
!1576 = !DILocation(line: 198, column: 6, scope: !1495)
!1577 = distinct !DISubprogram(name: "estimated_capacity", linkageName: "_ZN4core3fmt9Arguments18estimated_capacity17h1abc4b7786dd4e08E", scope: !1499, file: !1099, line: 437, type: !1578, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1581)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!9, !1580}
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::Arguments", baseType: !1499, size: 64, align: 64, dwarfAddressSpace: 0)
!1581 = !{!1582, !1583}
!1582 = !DILocalVariable(name: "self", arg: 1, scope: !1577, file: !1099, line: 437, type: !1580)
!1583 = !DILocalVariable(name: "pieces_length", scope: !1584, file: !1099, line: 438, type: !9, align: 8)
!1584 = distinct !DILexicalBlock(scope: !1577, file: !1099, line: 438, column: 9)
!1585 = !DILocation(line: 437, column: 31, scope: !1577)
!1586 = !DILocation(line: 438, column: 36, scope: !1577)
!1587 = !DILocation(line: 438, column: 13, scope: !1584)
!1588 = !DILocation(line: 440, column: 12, scope: !1584)
!1589 = !DILocation(line: 442, column: 20, scope: !1584)
!1590 = !DILocation(line: 442, column: 19, scope: !1584)
!1591 = !DILocation(line: 441, column: 13, scope: !1584)
!1592 = !DILocation(line: 440, column: 9, scope: !1584)
!1593 = !DILocation(line: 453, column: 6, scope: !1577)
!1594 = !DILocation(line: 442, column: 46, scope: !1584)
!1595 = !DILocation(line: 442, column: 75, scope: !1584)
!1596 = !DILocation(line: 451, column: 13, scope: !1584)
!1597 = !DILocation(line: 446, column: 13, scope: !1584)
!1598 = !DILocation(line: 442, column: 16, scope: !1584)
!1599 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core3fmt9Arguments18estimated_capacity28_$u7b$$u7b$closure$u7d$$u7d$17hcb8c60edd77b32ceE", scope: !405, file: !1099, line: 438, type: !1600, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1603)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!9, !1602, !402}
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::{impl#4}::estimated_capacity::{closure_env#0}", baseType: !404, size: 64, align: 64, dwarfAddressSpace: 0)
!1603 = !{!1604, !1605}
!1604 = !DILocalVariable(name: "x", arg: 2, scope: !1599, file: !1099, line: 438, type: !402)
!1605 = !DILocalVariable(arg: 1, scope: !1599, file: !1099, line: 438, type: !1602)
!1606 = !DILocation(line: 438, column: 59, scope: !1599)
!1607 = !DILocation(line: 438, column: 60, scope: !1599)
!1608 = !DILocation(line: 438, column: 63, scope: !1599)
!1609 = !DILocation(line: 438, column: 70, scope: !1599)
!1610 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117hc8b4877fcd0e41ddE", scope: !1499, file: !1099, line: 401, type: !1611, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1613)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!1499, !1502, !1553}
!1613 = !{!1614, !1615}
!1614 = !DILocalVariable(name: "pieces", arg: 1, scope: !1610, file: !1099, line: 401, type: !1502)
!1615 = !DILocalVariable(name: "args", arg: 2, scope: !1610, file: !1099, line: 401, type: !1553)
!1616 = !DILocation(line: 401, column: 25, scope: !1610)
!1617 = !DILocation(line: 401, column: 53, scope: !1610)
!1618 = !DILocation(line: 402, column: 12, scope: !1610)
!1619 = !DILocation(line: 402, column: 56, scope: !1610)
!1620 = !DILocation(line: 402, column: 41, scope: !1610)
!1621 = !DILocation(line: 405, column: 34, scope: !1610)
!1622 = !DILocation(line: 405, column: 9, scope: !1610)
!1623 = !DILocation(line: 406, column: 6, scope: !1610)
!1624 = !DILocation(line: 403, column: 13, scope: !1610)
!1625 = distinct !DISubprogram(name: "take<alloc::string::String>", linkageName: "_ZN4core3mem4take17hd1fe3ff22092d316E", scope: !751, file: !1626, line: 837, type: !1627, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !1629)
!1626 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "2818803a2f5479a3883c65b3bb9963fd")
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!15, !14}
!1629 = !{!1630}
!1630 = !DILocalVariable(name: "dest", arg: 1, scope: !1625, file: !1626, line: 837, type: !14)
!1631 = !DILocation(line: 837, column: 25, scope: !1625)
!1632 = !DILocation(line: 838, column: 19, scope: !1625)
!1633 = !DILocation(line: 838, column: 5, scope: !1625)
!1634 = !DILocation(line: 839, column: 2, scope: !1625)
!1635 = distinct !DISubprogram(name: "take<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem4take17hf906dd6faa23c314E", scope: !751, file: !1626, line: 837, type: !1636, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !1639)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!322, !1638}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !322, size: 64, align: 64, dwarfAddressSpace: 0)
!1639 = !{!1640}
!1640 = !DILocalVariable(name: "dest", arg: 1, scope: !1635, file: !1626, line: 837, type: !1638)
!1641 = !DILocation(line: 837, column: 25, scope: !1635)
!1642 = !DILocation(line: 838, column: 19, scope: !1635)
!1643 = !DILocation(line: 838, column: 5, scope: !1635)
!1644 = !DILocation(line: 839, column: 2, scope: !1635)
!1645 = distinct !DISubprogram(name: "replace<core::option::Option<u16>>", linkageName: "_ZN4core3mem7replace17h8a74628870d2faacE", scope: !751, file: !1626, line: 904, type: !1646, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !1649)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!435, !1648, !435}
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<u16>", baseType: !435, size: 64, align: 64, dwarfAddressSpace: 0)
!1649 = !{!1650, !1651, !1652}
!1650 = !DILocalVariable(name: "dest", arg: 1, scope: !1645, file: !1626, line: 904, type: !1648)
!1651 = !DILocalVariable(name: "src", arg: 2, scope: !1645, file: !1626, line: 904, type: !435)
!1652 = !DILocalVariable(name: "result", scope: !1653, file: !1626, line: 909, type: !435, align: 2)
!1653 = distinct !DILexicalBlock(scope: !1645, file: !1626, line: 909, column: 9)
!1654 = !DILocation(line: 904, column: 25, scope: !1645)
!1655 = !DILocation(line: 904, column: 39, scope: !1645)
!1656 = !DILocation(line: 909, column: 22, scope: !1645)
!1657 = !DILocation(line: 909, column: 13, scope: !1653)
!1658 = !DILocation(line: 910, column: 9, scope: !1653)
!1659 = !DILocation(line: 913, column: 2, scope: !1645)
!1660 = distinct !DISubprogram(name: "replace<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem7replace17h8a979afdeed3700aE", scope: !751, file: !1626, line: 904, type: !1661, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !1663)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!322, !1638, !322}
!1663 = !{!1664, !1665, !1666}
!1664 = !DILocalVariable(name: "dest", arg: 1, scope: !1660, file: !1626, line: 904, type: !1638)
!1665 = !DILocalVariable(name: "src", arg: 2, scope: !1660, file: !1626, line: 904, type: !322)
!1666 = !DILocalVariable(name: "result", scope: !1667, file: !1626, line: 909, type: !322, align: 8)
!1667 = distinct !DILexicalBlock(scope: !1660, file: !1626, line: 909, column: 9)
!1668 = !DILocation(line: 904, column: 25, scope: !1660)
!1669 = !DILocation(line: 904, column: 39, scope: !1660)
!1670 = !DILocation(line: 909, column: 22, scope: !1660)
!1671 = !DILocation(line: 909, column: 13, scope: !1667)
!1672 = !DILocation(line: 910, column: 9, scope: !1667)
!1673 = !DILocation(line: 913, column: 2, scope: !1660)
!1674 = distinct !DISubprogram(name: "replace<alloc::string::String>", linkageName: "_ZN4core3mem7replace17hbc5f369c92de16b9E", scope: !751, file: !1626, line: 904, type: !1675, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !1677)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!15, !14, !15}
!1677 = !{!1678, !1679, !1680}
!1678 = !DILocalVariable(name: "dest", arg: 1, scope: !1674, file: !1626, line: 904, type: !14)
!1679 = !DILocalVariable(name: "src", arg: 2, scope: !1674, file: !1626, line: 904, type: !15)
!1680 = !DILocalVariable(name: "result", scope: !1681, file: !1626, line: 909, type: !15, align: 8)
!1681 = distinct !DILexicalBlock(scope: !1674, file: !1626, line: 909, column: 9)
!1682 = !DILocation(line: 909, column: 13, scope: !1681)
!1683 = !DILocation(line: 904, column: 25, scope: !1674)
!1684 = !DILocation(line: 904, column: 39, scope: !1674)
!1685 = !DILocation(line: 909, column: 22, scope: !1674)
!1686 = !DILocation(line: 910, column: 9, scope: !1681)
!1687 = !DILocation(line: 913, column: 2, scope: !1674)
!1688 = distinct !DISubprogram(name: "replace<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3mem7replace17hd4a8249c6fbb98e9E", scope: !751, file: !1626, line: 904, type: !1689, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !1692)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!559, !1691, !559}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !559, size: 64, align: 64, dwarfAddressSpace: 0)
!1692 = !{!1693, !1694, !1695}
!1693 = !DILocalVariable(name: "dest", arg: 1, scope: !1688, file: !1626, line: 904, type: !1691)
!1694 = !DILocalVariable(name: "src", arg: 2, scope: !1688, file: !1626, line: 904, type: !559)
!1695 = !DILocalVariable(name: "result", scope: !1696, file: !1626, line: 909, type: !559, align: 8)
!1696 = distinct !DILexicalBlock(scope: !1688, file: !1626, line: 909, column: 9)
!1697 = !DILocation(line: 904, column: 25, scope: !1688)
!1698 = !DILocation(line: 904, column: 39, scope: !1688)
!1699 = !DILocation(line: 909, column: 22, scope: !1688)
!1700 = !DILocation(line: 909, column: 13, scope: !1696)
!1701 = !DILocation(line: 910, column: 9, scope: !1696)
!1702 = !DILocation(line: 913, column: 2, scope: !1688)
!1703 = distinct !DISubprogram(name: "is_ascii_lowercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_lowercase17h401d527f685eee41E", scope: !1705, file: !1704, line: 686, type: !1707, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1709)
!1704 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7f4dd0731861b304610e8e652da6b50a")
!1705 = !DINamespace(name: "{impl#6}", scope: !1706)
!1706 = !DINamespace(name: "num", scope: !31)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!571, !567}
!1709 = !{!1710}
!1710 = !DILocalVariable(name: "self", arg: 1, scope: !1703, file: !1704, line: 686, type: !567)
!1711 = !DILocation(line: 686, column: 37, scope: !1703)
!1712 = !DILocation(line: 687, column: 25, scope: !1703)
!1713 = !DILocation(line: 687, column: 9, scope: !1703)
!1714 = !DILocation(line: 688, column: 6, scope: !1703)
!1715 = distinct !DISubprogram(name: "is_ascii_uppercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_uppercase17h46b96f0e09f123e5E", scope: !1705, file: !1704, line: 652, type: !1707, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1716)
!1716 = !{!1717}
!1717 = !DILocalVariable(name: "self", arg: 1, scope: !1715, file: !1704, line: 652, type: !567)
!1718 = !DILocation(line: 652, column: 37, scope: !1715)
!1719 = !DILocation(line: 653, column: 25, scope: !1715)
!1720 = !DILocation(line: 653, column: 9, scope: !1715)
!1721 = !DILocation(line: 654, column: 6, scope: !1715)
!1722 = distinct !DISubprogram(name: "to_ascii_lowercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_lowercase17h47f12909484410b6E", scope: !1705, file: !1704, line: 506, type: !1723, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1725)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!39, !567}
!1725 = !{!1726}
!1726 = !DILocalVariable(name: "self", arg: 1, scope: !1722, file: !1704, line: 506, type: !567)
!1727 = !DILocation(line: 506, column: 37, scope: !1722)
!1728 = !DILocation(line: 508, column: 9, scope: !1722)
!1729 = !DILocation(line: 508, column: 18, scope: !1722)
!1730 = !DILocation(line: 508, column: 17, scope: !1722)
!1731 = !DILocation(line: 509, column: 6, scope: !1722)
!1732 = distinct !DISubprogram(name: "to_ascii_uppercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_uppercase17hde8896b3594cca7dE", scope: !1705, file: !1704, line: 481, type: !1723, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1733)
!1733 = !{!1734}
!1734 = !DILocalVariable(name: "self", arg: 1, scope: !1732, file: !1704, line: 481, type: !567)
!1735 = !DILocation(line: 481, column: 37, scope: !1732)
!1736 = !DILocation(line: 483, column: 9, scope: !1732)
!1737 = !DILocation(line: 483, column: 19, scope: !1732)
!1738 = !DILocation(line: 483, column: 18, scope: !1732)
!1739 = !DILocation(line: 483, column: 17, scope: !1732)
!1740 = !DILocation(line: 484, column: 6, scope: !1732)
!1741 = distinct !DISubprogram(name: "is_utf16_surrogate", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17h65f3625dd0bb98dfE", scope: !1742, file: !1704, line: 1065, type: !1743, scopeLine: 1065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1745)
!1742 = !DINamespace(name: "{impl#7}", scope: !1706)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!571, !443}
!1745 = !{!1746}
!1746 = !DILocalVariable(name: "self", arg: 1, scope: !1741, file: !1704, line: 1065, type: !443)
!1747 = !DILocation(line: 1065, column: 37, scope: !1741)
!1748 = !DILocation(line: 1066, column: 24, scope: !1741)
!1749 = !DILocation(line: 1066, column: 9, scope: !1741)
!1750 = !DILocation(line: 1067, column: 6, scope: !1741)
!1751 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h986b195e5d067e13E", scope: !1753, file: !1752, line: 460, type: !1754, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1756)
!1752 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "3eed1b8baad53fb1e7d6811c678f60f8")
!1753 = !DINamespace(name: "{impl#11}", scope: !1706)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{!1126, !9, !9}
!1756 = !{!1757, !1758, !1759, !1761}
!1757 = !DILocalVariable(name: "self", arg: 1, scope: !1751, file: !1752, line: 460, type: !9)
!1758 = !DILocalVariable(name: "rhs", arg: 2, scope: !1751, file: !1752, line: 460, type: !9)
!1759 = !DILocalVariable(name: "a", scope: !1760, file: !1752, line: 461, type: !9, align: 8)
!1760 = distinct !DILexicalBlock(scope: !1751, file: !1752, line: 461, column: 13)
!1761 = !DILocalVariable(name: "b", scope: !1760, file: !1752, line: 461, type: !571, align: 1)
!1762 = !DILocation(line: 460, column: 34, scope: !1751)
!1763 = !DILocation(line: 460, column: 40, scope: !1751)
!1764 = !DILocalVariable(name: "self", arg: 1, scope: !1765, file: !1752, line: 1505, type: !9)
!1765 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h895e37a52e2370b0E", scope: !1753, file: !1752, line: 1505, type: !1766, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1772)
!1766 = !DISubroutineType(types: !1767)
!1767 = !{!1768, !9, !9}
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1769, templateParams: !45, identifier: "5d4cb4b3e2da4aeebd47965411ffedac")
!1769 = !{!1770, !1771}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1768, file: !2, baseType: !9, size: 64, align: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1768, file: !2, baseType: !571, size: 8, align: 8, offset: 64)
!1772 = !{!1764, !1773, !1774, !1776}
!1773 = !DILocalVariable(name: "rhs", arg: 2, scope: !1765, file: !1752, line: 1505, type: !9)
!1774 = !DILocalVariable(name: "a", scope: !1775, file: !1752, line: 1506, type: !179, align: 8)
!1775 = distinct !DILexicalBlock(scope: !1765, file: !1752, line: 1506, column: 13)
!1776 = !DILocalVariable(name: "b", scope: !1775, file: !1752, line: 1506, type: !571, align: 1)
!1777 = !DILocation(line: 1505, column: 38, scope: !1765, inlinedAt: !1778)
!1778 = distinct !DILocation(line: 461, column: 26, scope: !1751)
!1779 = !DILocation(line: 1505, column: 44, scope: !1765, inlinedAt: !1778)
!1780 = !DILocation(line: 1506, column: 26, scope: !1765, inlinedAt: !1778)
!1781 = !DILocation(line: 1506, column: 18, scope: !1765, inlinedAt: !1778)
!1782 = !DILocation(line: 1506, column: 18, scope: !1775, inlinedAt: !1778)
!1783 = !DILocation(line: 1506, column: 21, scope: !1765, inlinedAt: !1778)
!1784 = !DILocation(line: 1506, column: 21, scope: !1775, inlinedAt: !1778)
!1785 = !DILocation(line: 1507, column: 13, scope: !1775, inlinedAt: !1778)
!1786 = !DILocation(line: 1508, column: 10, scope: !1765, inlinedAt: !1778)
!1787 = !DILocation(line: 461, column: 26, scope: !1751)
!1788 = !DILocation(line: 461, column: 18, scope: !1751)
!1789 = !DILocation(line: 461, column: 18, scope: !1760)
!1790 = !DILocation(line: 461, column: 21, scope: !1751)
!1791 = !DILocation(line: 461, column: 21, scope: !1760)
!1792 = !DILocation(line: 462, column: 16, scope: !1760)
!1793 = !DILocation(line: 462, column: 42, scope: !1760)
!1794 = !DILocation(line: 462, column: 13, scope: !1760)
!1795 = !DILocation(line: 462, column: 30, scope: !1760)
!1796 = !DILocation(line: 463, column: 10, scope: !1751)
!1797 = !{i64 0, i64 2}
!1798 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h9e4495e66fe1dbcbE", scope: !1753, file: !1752, line: 576, type: !1754, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1799)
!1799 = !{!1800, !1801, !1802, !1804}
!1800 = !DILocalVariable(name: "self", arg: 1, scope: !1798, file: !1752, line: 576, type: !9)
!1801 = !DILocalVariable(name: "rhs", arg: 2, scope: !1798, file: !1752, line: 576, type: !9)
!1802 = !DILocalVariable(name: "a", scope: !1803, file: !1752, line: 577, type: !9, align: 8)
!1803 = distinct !DILexicalBlock(scope: !1798, file: !1752, line: 577, column: 13)
!1804 = !DILocalVariable(name: "b", scope: !1803, file: !1752, line: 577, type: !571, align: 1)
!1805 = !DILocation(line: 576, column: 34, scope: !1798)
!1806 = !DILocation(line: 576, column: 40, scope: !1798)
!1807 = !DILocalVariable(name: "self", arg: 1, scope: !1808, file: !1752, line: 1703, type: !9)
!1808 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17haec0d6bf1efe3798E", scope: !1753, file: !1752, line: 1703, type: !1766, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1809)
!1809 = !{!1807, !1810, !1811, !1813}
!1810 = !DILocalVariable(name: "rhs", arg: 2, scope: !1808, file: !1752, line: 1703, type: !9)
!1811 = !DILocalVariable(name: "a", scope: !1812, file: !1752, line: 1704, type: !179, align: 8)
!1812 = distinct !DILexicalBlock(scope: !1808, file: !1752, line: 1704, column: 13)
!1813 = !DILocalVariable(name: "b", scope: !1812, file: !1752, line: 1704, type: !571, align: 1)
!1814 = !DILocation(line: 1703, column: 38, scope: !1808, inlinedAt: !1815)
!1815 = distinct !DILocation(line: 577, column: 26, scope: !1798)
!1816 = !DILocation(line: 1703, column: 44, scope: !1808, inlinedAt: !1815)
!1817 = !DILocation(line: 1704, column: 26, scope: !1808, inlinedAt: !1815)
!1818 = !DILocation(line: 1704, column: 18, scope: !1808, inlinedAt: !1815)
!1819 = !DILocation(line: 1704, column: 18, scope: !1812, inlinedAt: !1815)
!1820 = !DILocation(line: 1704, column: 21, scope: !1808, inlinedAt: !1815)
!1821 = !DILocation(line: 1704, column: 21, scope: !1812, inlinedAt: !1815)
!1822 = !DILocation(line: 1705, column: 13, scope: !1812, inlinedAt: !1815)
!1823 = !DILocation(line: 1706, column: 10, scope: !1808, inlinedAt: !1815)
!1824 = !DILocation(line: 577, column: 26, scope: !1798)
!1825 = !DILocation(line: 577, column: 18, scope: !1798)
!1826 = !DILocation(line: 577, column: 18, scope: !1803)
!1827 = !DILocation(line: 577, column: 21, scope: !1798)
!1828 = !DILocation(line: 577, column: 21, scope: !1803)
!1829 = !DILocation(line: 578, column: 16, scope: !1803)
!1830 = !DILocation(line: 578, column: 42, scope: !1803)
!1831 = !DILocation(line: 578, column: 13, scope: !1803)
!1832 = !DILocation(line: 578, column: 30, scope: !1803)
!1833 = !DILocation(line: 579, column: 10, scope: !1798)
!1834 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17he00ee406346915ccE", scope: !1836, file: !1835, line: 56, type: !1840, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1842)
!1835 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "d1fe1c2fc646d2e56128a396ce73c975")
!1836 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !1837, file: !2, size: 64, align: 64, elements: !1838, templateParams: !45, identifier: "1343dc6fc5fdfe199f05567ad4e64bc0")
!1837 = !DINamespace(name: "nonzero", scope: !1706)
!1838 = !{!1839}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1836, file: !2, baseType: !9, size: 64, align: 64)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!1836, !9}
!1842 = !{!1843}
!1843 = !DILocalVariable(name: "n", arg: 1, scope: !1834, file: !1835, line: 56, type: !9)
!1844 = !DILocation(line: 56, column: 51, scope: !1834)
!1845 = !DILocation(line: 59, column: 25, scope: !1834)
!1846 = !DILocalVariable(name: "n", arg: 1, scope: !1847, file: !1191, line: 2241, type: !9)
!1847 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked7runtime17hed38a25bfe80d5dcE", scope: !1848, file: !1191, line: 2241, type: !1850, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1852)
!1848 = !DINamespace(name: "new_unchecked", scope: !1849)
!1849 = !DINamespace(name: "{impl#35}", scope: !1837)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{null, !9}
!1852 = !{!1846}
!1853 = !DILocation(line: 2241, column: 39, scope: !1847, inlinedAt: !1854)
!1854 = distinct !DILocation(line: 59, column: 25, scope: !1834)
!1855 = !DILocation(line: 164, column: 1, scope: !1856, inlinedAt: !1854)
!1856 = !DILexicalBlockFile(scope: !1847, file: !1835, discriminator: 0)
!1857 = !DILocation(line: 2242, column: 20, scope: !1847, inlinedAt: !1854)
!1858 = !DILocation(line: 2244, column: 21, scope: !1847, inlinedAt: !1854)
!1859 = !DILocation(line: 63, column: 25, scope: !1834)
!1860 = !DILocation(line: 65, column: 18, scope: !1834)
!1861 = !{i64 1, i64 0}
!1862 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hf16ab339941c792cE", scope: !1836, file: !1835, line: 85, type: !1863, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !1865)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!9, !1836}
!1865 = !{!1866}
!1866 = !DILocalVariable(name: "self", arg: 1, scope: !1862, file: !1835, line: 85, type: !1836)
!1867 = !DILocation(line: 85, column: 34, scope: !1862)
!1868 = !DILocation(line: 87, column: 18, scope: !1862)
!1869 = distinct !DISubprogram(name: "break_value<char, ()>", linkageName: "_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h45732fb25270a50aE", scope: !481, file: !475, line: 183, type: !1870, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !489, retainedNodes: !1872)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!534, !481}
!1872 = !{!1873, !1874}
!1873 = !DILocalVariable(name: "self", arg: 1, scope: !1869, file: !475, line: 183, type: !481)
!1874 = !DILocalVariable(name: "x", scope: !1875, file: !475, line: 186, type: !491, align: 4)
!1875 = distinct !DILexicalBlock(scope: !1869, file: !475, line: 186, column: 13)
!1876 = !DILocation(line: 183, column: 24, scope: !1869)
!1877 = !DILocation(line: 184, column: 15, scope: !1869)
!1878 = !DILocation(line: 184, column: 9, scope: !1869)
!1879 = !DILocation(line: 185, column: 42, scope: !1869)
!1880 = !DILocation(line: 186, column: 32, scope: !1869)
!1881 = !DILocation(line: 186, column: 32, scope: !1875)
!1882 = !DILocation(line: 186, column: 38, scope: !1875)
!1883 = !DILocation(line: 186, column: 44, scope: !1869)
!1884 = !DILocation(line: 188, column: 5, scope: !1869)
!1885 = !DILocation(line: 188, column: 6, scope: !1869)
!1886 = distinct !DISubprogram(name: "call_once<fn(&core::ptr::alignment::Alignment, &core::ptr::alignment::Alignment) -> core::cmp::Ordering, (&core::ptr::alignment::Alignment, &core::ptr::alignment::Alignment)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h823c194015f78686E", scope: !1888, file: !1887, line: 250, type: !1890, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1899, retainedNodes: !1892)
!1887 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "56fb008eac3df8d06ce524ffb023f0b6")
!1888 = !DINamespace(name: "FnOnce", scope: !1889)
!1889 = !DINamespace(name: "function", scope: !478)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{!357, !1410, !1413, !1413}
!1892 = !{!1893, !1894}
!1893 = !DILocalVariable(arg: 1, scope: !1886, file: !1887, line: 250, type: !1410)
!1894 = !DILocalVariable(arg: 2, scope: !1886, file: !1887, line: 250, type: !1895)
!1895 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&core::ptr::alignment::Alignment, &core::ptr::alignment::Alignment)", file: !2, size: 128, align: 64, elements: !1896, templateParams: !45, identifier: "74668f7684c578d7ff416e78a40ced34")
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1895, file: !2, baseType: !1413, size: 64, align: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1895, file: !2, baseType: !1413, size: 64, align: 64, offset: 64)
!1899 = !{!1900, !1901}
!1900 = !DITemplateTypeParameter(name: "Self", type: !1410)
!1901 = !DITemplateTypeParameter(name: "Args", type: !1895)
!1902 = !DILocation(line: 250, column: 5, scope: !1886)
!1903 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::drain::{impl#7}::drop::DropGuard<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17h17806681c05e0e09E", scope: !30, file: !1904, line: 490, type: !1905, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1927, retainedNodes: !1925)
!1904 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "bdd6b96186b52f0612a564cb734428a7")
!1905 = !DISubroutineType(types: !1906)
!1906 = !{null, !1907}
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::drain::{impl#7}::drop::DropGuard<u8, alloc::alloc::Global>", baseType: !1908, size: 64, align: 64, dwarfAddressSpace: 0)
!1908 = !DICompositeType(tag: DW_TAG_structure_type, name: "DropGuard<u8, alloc::alloc::Global>", scope: !1909, file: !2, size: 64, align: 64, elements: !1912, templateParams: !50, identifier: "147c6929c39b70e4dfc877dfbb9e0f6d")
!1909 = !DINamespace(name: "drop", scope: !1910)
!1910 = !DINamespace(name: "{impl#7}", scope: !1911)
!1911 = !DINamespace(name: "drain", scope: !21)
!1912 = !{!1913}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1908, file: !2, baseType: !1914, size: 64, align: 64)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::drain::Drain<u8, alloc::alloc::Global>", baseType: !1915, size: 64, align: 64, dwarfAddressSpace: 0)
!1915 = !DICompositeType(tag: DW_TAG_structure_type, name: "Drain<u8, alloc::alloc::Global>", scope: !1911, file: !2, size: 320, align: 64, elements: !1916, templateParams: !50, identifier: "846827611cba3a77ac5db3b648a83d2d")
!1916 = !{!1917, !1918, !1919, !1920}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "tail_start", scope: !1915, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "tail_len", scope: !1915, file: !2, baseType: !9, size: 64, align: 64, offset: 192)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1915, file: !2, baseType: !559, size: 128, align: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1915, file: !2, baseType: !1921, size: 64, align: 64, offset: 256)
!1921 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !35, file: !2, size: 64, align: 64, elements: !1922, templateParams: !1183, identifier: "9c630dce155903aeb91a7918630319aa")
!1922 = !{!1923}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1921, file: !2, baseType: !1924, size: 64, align: 64)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !20, size: 64, align: 64, dwarfAddressSpace: 0)
!1925 = !{!1926}
!1926 = !DILocalVariable(arg: 1, scope: !1903, file: !1904, line: 490, type: !1907)
!1927 = !{!1928}
!1928 = !DITemplateTypeParameter(name: "T", type: !1908)
!1929 = !DILocation(line: 490, column: 1, scope: !1903)
!1930 = distinct !DISubprogram(name: "read_unaligned<usize>", linkageName: "_ZN4core3ptr14read_unaligned17hc3acd15732acb7b0E", scope: !30, file: !1904, line: 1241, type: !1931, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !1934)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!9, !1933}
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!1934 = !{!1935, !1936}
!1935 = !DILocalVariable(name: "src", arg: 1, scope: !1930, file: !1904, line: 1241, type: !1933)
!1936 = !DILocalVariable(name: "tmp", scope: !1937, file: !1904, line: 1242, type: !1938, align: 8)
!1937 = distinct !DILexicalBlock(scope: !1930, file: !1904, line: 1242, column: 5)
!1938 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !750, file: !2, size: 64, align: 64, elements: !1939, templateParams: !1132, identifier: "9c7a09a9267fe860447813a94ea84929")
!1939 = !{!1940, !1941}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1938, file: !2, baseType: !7, align: 8)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1938, file: !2, baseType: !1942, size: 64, align: 64)
!1942 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !756, file: !2, size: 64, align: 64, elements: !1943, templateParams: !1132, identifier: "d74608575ada8fc9533e31be519346c0")
!1943 = !{!1944}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1942, file: !2, baseType: !9, size: 64, align: 64)
!1945 = !DILocation(line: 1241, column: 39, scope: !1930)
!1946 = !DILocation(line: 1242, column: 9, scope: !1937)
!1947 = !DILocation(line: 315, column: 6, scope: !1948, inlinedAt: !1952)
!1948 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h111cf23dfad758d0E", scope: !1938, file: !1949, line: 313, type: !1950, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !45)
!1949 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "1414c0f1ab8ce712ce2deada2fd51b28")
!1950 = !DISubroutineType(types: !1951)
!1951 = !{!1938}
!1952 = distinct !DILocation(line: 1242, column: 19, scope: !1930)
!1953 = !DILocation(line: 1242, column: 19, scope: !1930)
!1954 = !DILocalVariable(name: "self", arg: 1, scope: !1955, file: !1949, line: 567, type: !1959)
!1955 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h1202ef8a32260309E", scope: !1938, file: !1949, line: 567, type: !1956, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !1960)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{!1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !1938, size: 64, align: 64, dwarfAddressSpace: 0)
!1960 = !{!1954}
!1961 = !DILocation(line: 567, column: 29, scope: !1955, inlinedAt: !1962)
!1962 = distinct !DILocation(line: 1250, column: 47, scope: !1937)
!1963 = !DILocation(line: 1250, column: 9, scope: !1937)
!1964 = !DILocation(line: 1251, column: 9, scope: !1937)
!1965 = !DILocalVariable(name: "self", arg: 1, scope: !1966, file: !1949, line: 622, type: !1938)
!1966 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h017aef48e3823b8dE", scope: !1938, file: !1949, line: 622, type: !1967, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !1969)
!1967 = !DISubroutineType(types: !1968)
!1968 = !{!9, !1938, !882}
!1969 = !{!1965}
!1970 = !DILocation(line: 622, column: 37, scope: !1966, inlinedAt: !1971)
!1971 = distinct !DILocation(line: 1251, column: 9, scope: !1937)
!1972 = !DILocalVariable(name: "slot", arg: 1, scope: !1973, file: !1974, line: 88, type: !1942)
!1973 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h473cf4a493c0bd73E", scope: !1942, file: !1974, line: 88, type: !1975, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !1977)
!1974 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!9, !1942}
!1977 = !{!1972}
!1978 = !DILocation(line: 88, column: 29, scope: !1973, inlinedAt: !1979)
!1979 = distinct !DILocation(line: 627, column: 13, scope: !1966, inlinedAt: !1971)
!1980 = !DILocation(line: 1253, column: 2, scope: !1930)
!1981 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::{impl#66}::from::StringError>", linkageName: "_ZN4core3ptr205drop_in_place$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$GT$17h996a1f7630265b0eE", scope: !30, file: !1904, line: 490, type: !1982, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1340, retainedNodes: !1985)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{null, !1984}
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::{impl#66}::from::StringError", baseType: !110, size: 64, align: 64, dwarfAddressSpace: 0)
!1985 = !{!1986}
!1986 = !DILocalVariable(arg: 1, scope: !1981, file: !1904, line: 490, type: !1984)
!1987 = !DILocation(line: 490, column: 1, scope: !1981)
!1988 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<i8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h853ec850d3fc3d0cE", scope: !30, file: !1904, line: 765, type: !1989, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1198, retainedNodes: !1997)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!1991, !1996, !9}
!1991 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [i8]", file: !2, size: 128, align: 64, elements: !1992, templateParams: !45, identifier: "a79c4c25f1bcd60c572bc27eaa8514a3")
!1992 = !{!1993, !1995}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1991, file: !2, baseType: !1994, size: 64, align: 64)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64, align: 64, dwarfAddressSpace: 0)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1991, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i8", baseType: !359, size: 64, align: 64, dwarfAddressSpace: 0)
!1997 = !{!1998, !1999}
!1998 = !DILocalVariable(name: "data", arg: 1, scope: !1988, file: !1904, line: 765, type: !1996)
!1999 = !DILocalVariable(name: "len", arg: 2, scope: !1988, file: !1904, line: 765, type: !9)
!2000 = !DILocation(line: 765, column: 42, scope: !1988)
!2001 = !DILocation(line: 765, column: 56, scope: !1988)
!2002 = !DILocalVariable(name: "self", arg: 1, scope: !2003, file: !2004, line: 57, type: !1996)
!2003 = distinct !DISubprogram(name: "cast<i8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h8be2e0b78ff4e4aeE", scope: !2005, file: !2004, line: 57, type: !2007, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2011, retainedNodes: !2010)
!2004 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "8f9c2a68da2d937402d223242416154f")
!2005 = !DINamespace(name: "{impl#0}", scope: !2006)
!2006 = !DINamespace(name: "mut_ptr", scope: !30)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!2009, !1996}
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!2010 = !{!2002}
!2011 = !{!1199, !2012}
!2012 = !DITemplateTypeParameter(name: "U", type: !7)
!2013 = !DILocation(line: 57, column: 26, scope: !2003, inlinedAt: !2014)
!2014 = distinct !DILocation(line: 766, column: 24, scope: !1988)
!2015 = !DILocation(line: 766, column: 5, scope: !1988)
!2016 = !DILocation(line: 767, column: 2, scope: !1988)
!2017 = distinct !DISubprogram(name: "drop_in_place<usize>", linkageName: "_ZN4core3ptr26drop_in_place$LT$usize$GT$17h9af800b9ffc2209bE", scope: !30, file: !1904, line: 490, type: !2018, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !2020)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{null, !1958}
!2020 = !{!2021}
!2021 = !DILocalVariable(arg: 1, scope: !2017, file: !1904, line: 490, type: !1958)
!2022 = !DILocation(line: 490, column: 1, scope: !2017)
!2023 = distinct !DISubprogram(name: "drop_in_place<&str>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h425384f8669752d8E", scope: !30, file: !1904, line: 490, type: !2024, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !395, retainedNodes: !2027)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{null, !2026}
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &str", baseType: !145, size: 64, align: 64, dwarfAddressSpace: 0)
!2027 = !{!2028}
!2028 = !DILocalVariable(arg: 1, scope: !2023, file: !1904, line: 490, type: !2026)
!2029 = !DILocation(line: 490, column: 1, scope: !2023)
!2030 = distinct !DISubprogram(name: "drop_in_place<&usize>", linkageName: "_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h9df263826f7fdbadE", scope: !30, file: !1904, line: 490, type: !2031, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2036, retainedNodes: !2034)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{null, !2033}
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &usize", baseType: !289, size: 64, align: 64, dwarfAddressSpace: 0)
!2034 = !{!2035}
!2035 = !DILocalVariable(arg: 1, scope: !2030, file: !1904, line: 490, type: !2033)
!2036 = !{!2037}
!2037 = !DITemplateTypeParameter(name: "T", type: !289)
!2038 = !DILocation(line: 490, column: 1, scope: !2030)
!2039 = distinct !DISubprogram(name: "drop_in_place<&()>", linkageName: "_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17h42411c55286b31a8E", scope: !30, file: !1904, line: 490, type: !2040, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2045, retainedNodes: !2043)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{null, !2042}
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &()", baseType: !263, size: 64, align: 64, dwarfAddressSpace: 0)
!2043 = !{!2044}
!2044 = !DILocalVariable(arg: 1, scope: !2039, file: !1904, line: 490, type: !2042)
!2045 = !{!2046}
!2046 = !DITemplateTypeParameter(name: "T", type: !263)
!2047 = !DILocation(line: 490, column: 1, scope: !2039)
!2048 = distinct !DISubprogram(name: "drop_in_place<core::fmt::Error>", linkageName: "_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17hc108cbe123dc37adE", scope: !30, file: !1904, line: 490, type: !2049, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2054, retainedNodes: !2052)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{null, !2051}
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::fmt::Error", baseType: !61, size: 64, align: 64, dwarfAddressSpace: 0)
!2052 = !{!2053}
!2053 = !DILocalVariable(arg: 1, scope: !2048, file: !1904, line: 490, type: !2051)
!2054 = !{!2055}
!2055 = !DITemplateTypeParameter(name: "T", type: !61)
!2056 = !DILocation(line: 490, column: 1, scope: !2048)
!2057 = distinct !DISubprogram(name: "drop_in_place<alloc::string::String>", linkageName: "_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2254349ab55352cdE", scope: !30, file: !1904, line: 490, type: !2058, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !2061)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{null, !2060}
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::String", baseType: !15, size: 64, align: 64, dwarfAddressSpace: 0)
!2061 = !{!2062}
!2062 = !DILocalVariable(arg: 1, scope: !2057, file: !1904, line: 490, type: !2060)
!2063 = !DILocation(line: 490, column: 1, scope: !2057)
!2064 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h8b2112aa825e6ef9E", scope: !30, file: !1904, line: 490, type: !2065, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1183, retainedNodes: !2068)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{null, !2067}
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !20, size: 64, align: 64, dwarfAddressSpace: 0)
!2068 = !{!2069}
!2069 = !DILocalVariable(arg: 1, scope: !2064, file: !1904, line: 490, type: !2067)
!2070 = !DILocation(line: 490, column: 1, scope: !2064)
!2071 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h1855343d3c26b10dE", scope: !30, file: !1904, line: 490, type: !2072, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2077, retainedNodes: !2075)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !2074}
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::CString", baseType: !319, size: 64, align: 64, dwarfAddressSpace: 0)
!2075 = !{!2076}
!2076 = !DILocalVariable(arg: 1, scope: !2071, file: !1904, line: 490, type: !2074)
!2077 = !{!2078}
!2078 = !DITemplateTypeParameter(name: "T", type: !319)
!2079 = !DILocation(line: 490, column: 1, scope: !2071)
!2080 = distinct !DISubprogram(name: "drop_in_place<core::alloc::layout::Layout>", linkageName: "_ZN4core3ptr48drop_in_place$LT$core..alloc..layout..Layout$GT$17h40366a13cd7dfce8E", scope: !30, file: !1904, line: 490, type: !2081, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2086, retainedNodes: !2084)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{null, !2083}
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::alloc::layout::Layout", baseType: !170, size: 64, align: 64, dwarfAddressSpace: 0)
!2084 = !{!2085}
!2085 = !DILocalVariable(arg: 1, scope: !2080, file: !1904, line: 490, type: !2083)
!2086 = !{!2087}
!2087 = !DITemplateTypeParameter(name: "T", type: !170)
!2088 = !DILocation(line: 490, column: 1, scope: !2080)
!2089 = distinct !DISubprogram(name: "drop_in_place<core::str::error::Utf8Error>", linkageName: "_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h8722002bc00b874fE", scope: !30, file: !1904, line: 490, type: !2090, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1169, retainedNodes: !2093)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{null, !2092}
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::str::error::Utf8Error", baseType: !131, size: 64, align: 64, dwarfAddressSpace: 0)
!2093 = !{!2094}
!2094 = !DILocalVariable(arg: 1, scope: !2089, file: !1904, line: 490, type: !2092)
!2095 = !DILocation(line: 490, column: 1, scope: !2089)
!2096 = distinct !DISubprogram(name: "read<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read17h26b3e0b6a817afa0E", scope: !30, file: !1904, line: 1137, type: !2097, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !2099)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{!322, !1234}
!2099 = !{!2100, !2101}
!2100 = !DILocalVariable(name: "src", arg: 1, scope: !2096, file: !1904, line: 1137, type: !1234)
!2101 = !DILocalVariable(name: "tmp", scope: !2102, file: !1904, line: 1145, type: !2103, align: 8)
!2102 = distinct !DILexicalBlock(scope: !2096, file: !1904, line: 1145, column: 5)
!2103 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::boxed::Box<[u8], alloc::alloc::Global>>", scope: !750, file: !2, size: 128, align: 64, elements: !2104, templateParams: !1237, identifier: "7e4f85085f7c73d7bd5526af607176a1")
!2104 = !{!2105, !2106}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2103, file: !2, baseType: !7, align: 8)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2103, file: !2, baseType: !2107, size: 128, align: 64)
!2107 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<[u8], alloc::alloc::Global>>", scope: !756, file: !2, size: 128, align: 64, elements: !2108, templateParams: !1237, identifier: "258a14f4f35078cd330bf8b321aef8bc")
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2107, file: !2, baseType: !322, size: 128, align: 64)
!2110 = !DILocation(line: 1137, column: 29, scope: !2096)
!2111 = !DILocation(line: 1145, column: 9, scope: !2102)
!2112 = !DILocation(line: 315, column: 6, scope: !2113, inlinedAt: !2116)
!2113 = distinct !DISubprogram(name: "uninit<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hae047d8ccaa558beE", scope: !2103, file: !1949, line: 313, type: !2114, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !45)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{!2103}
!2116 = distinct !DILocation(line: 1145, column: 19, scope: !2096)
!2117 = !DILocation(line: 1145, column: 19, scope: !2096)
!2118 = !DILocation(line: 1153, column: 9, scope: !2102)
!2119 = !DILocalVariable(name: "src", arg: 1, scope: !2120, file: !1191, line: 2241, type: !1234)
!2120 = distinct !DISubprogram(name: "runtime<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read7runtime17hf86868484263aa9eE", scope: !2121, file: !1191, line: 2241, type: !2122, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !2124)
!2121 = !DINamespace(name: "read", scope: !30)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{null, !1234}
!2124 = !{!2119}
!2125 = !DILocation(line: 2241, column: 39, scope: !2120, inlinedAt: !2126)
!2126 = distinct !DILocation(line: 1153, column: 9, scope: !2102)
!2127 = !DILocation(line: 1155, column: 35, scope: !2128, inlinedAt: !2126)
!2128 = !DILexicalBlockFile(scope: !2120, file: !1904, discriminator: 0)
!2129 = !DILocation(line: 2242, column: 20, scope: !2120, inlinedAt: !2126)
!2130 = !DILocation(line: 2244, column: 21, scope: !2120, inlinedAt: !2126)
!2131 = !DILocalVariable(name: "self", arg: 1, scope: !2132, file: !1949, line: 567, type: !2136)
!2132 = distinct !DISubprogram(name: "as_mut_ptr<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h6c164e824b4dec17E", scope: !2103, file: !1949, line: 567, type: !2133, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !2137)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{!2135, !2136}
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !322, size: 64, align: 64, dwarfAddressSpace: 0)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::boxed::Box<[u8], alloc::alloc::Global>>", baseType: !2103, size: 64, align: 64, dwarfAddressSpace: 0)
!2137 = !{!2131}
!2138 = !DILocation(line: 567, column: 29, scope: !2132, inlinedAt: !2139)
!2139 = distinct !DILocation(line: 1157, column: 34, scope: !2102)
!2140 = !DILocation(line: 1157, column: 9, scope: !2102)
!2141 = !DILocation(line: 1158, column: 9, scope: !2102)
!2142 = !DILocalVariable(name: "self", arg: 1, scope: !2143, file: !1949, line: 622, type: !2103)
!2143 = distinct !DISubprogram(name: "assume_init<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h0ff6cc05e5a87738E", scope: !2103, file: !1949, line: 622, type: !2144, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !2146)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!322, !2103, !882}
!2146 = !{!2142}
!2147 = !DILocation(line: 622, column: 37, scope: !2143, inlinedAt: !2148)
!2148 = distinct !DILocation(line: 1158, column: 9, scope: !2102)
!2149 = !DILocalVariable(name: "slot", arg: 1, scope: !2150, file: !1974, line: 88, type: !2107)
!2150 = distinct !DISubprogram(name: "into_inner<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hca7b30bb487b642eE", scope: !2107, file: !1974, line: 88, type: !2151, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !2153)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!322, !2107}
!2153 = !{!2149}
!2154 = !DILocation(line: 88, column: 29, scope: !2150, inlinedAt: !2155)
!2155 = distinct !DILocation(line: 627, column: 13, scope: !2143, inlinedAt: !2148)
!2156 = !DILocation(line: 90, column: 6, scope: !2150, inlinedAt: !2155)
!2157 = !DILocation(line: 627, column: 13, scope: !2143, inlinedAt: !2148)
!2158 = !DILocation(line: 1160, column: 2, scope: !2096)
!2159 = distinct !DISubprogram(name: "read<core::option::Option<u16>>", linkageName: "_ZN4core3ptr4read17h50291c10125f9973E", scope: !30, file: !1904, line: 1137, type: !2160, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !2162)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!435, !1273}
!2162 = !{!2163, !2164}
!2163 = !DILocalVariable(name: "src", arg: 1, scope: !2159, file: !1904, line: 1137, type: !1273)
!2164 = !DILocalVariable(name: "tmp", scope: !2165, file: !1904, line: 1145, type: !2166, align: 2)
!2165 = distinct !DILexicalBlock(scope: !2159, file: !1904, line: 1145, column: 5)
!2166 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<u16>>", scope: !750, file: !2, size: 32, align: 16, elements: !2167, templateParams: !1276, identifier: "58ca5a8a15362c268436b4a6467f9aa2")
!2167 = !{!2168, !2169}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2166, file: !2, baseType: !7, align: 8)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2166, file: !2, baseType: !2170, size: 32, align: 16)
!2170 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<u16>>", scope: !756, file: !2, size: 32, align: 16, elements: !2171, templateParams: !1276, identifier: "f26c725f441785a7e194bb21b0c6bea3")
!2171 = !{!2172}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2170, file: !2, baseType: !435, size: 32, align: 16)
!2173 = !DILocation(line: 1137, column: 29, scope: !2159)
!2174 = !DILocation(line: 1145, column: 9, scope: !2165)
!2175 = !DILocation(line: 315, column: 6, scope: !2176, inlinedAt: !2179)
!2176 = distinct !DISubprogram(name: "uninit<core::option::Option<u16>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h08da9d9673e77c1bE", scope: !2166, file: !1949, line: 313, type: !2177, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !45)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!2166}
!2179 = distinct !DILocation(line: 1145, column: 19, scope: !2159)
!2180 = !DILocation(line: 1145, column: 19, scope: !2159)
!2181 = !DILocation(line: 1153, column: 9, scope: !2165)
!2182 = !DILocalVariable(name: "src", arg: 1, scope: !2183, file: !1191, line: 2241, type: !1273)
!2183 = distinct !DISubprogram(name: "runtime<core::option::Option<u16>>", linkageName: "_ZN4core3ptr4read7runtime17hedd9bd01a8c27126E", scope: !2121, file: !1191, line: 2241, type: !2184, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !2186)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{null, !1273}
!2186 = !{!2182}
!2187 = !DILocation(line: 2241, column: 39, scope: !2183, inlinedAt: !2188)
!2188 = distinct !DILocation(line: 1153, column: 9, scope: !2165)
!2189 = !DILocation(line: 1155, column: 35, scope: !2190, inlinedAt: !2188)
!2190 = !DILexicalBlockFile(scope: !2183, file: !1904, discriminator: 0)
!2191 = !DILocation(line: 2242, column: 20, scope: !2183, inlinedAt: !2188)
!2192 = !DILocation(line: 2244, column: 21, scope: !2183, inlinedAt: !2188)
!2193 = !DILocalVariable(name: "self", arg: 1, scope: !2194, file: !1949, line: 567, type: !2198)
!2194 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<u16>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h60759a596e9cf210E", scope: !2166, file: !1949, line: 567, type: !2195, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !2199)
!2195 = !DISubroutineType(types: !2196)
!2196 = !{!2197, !2198}
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<u16>", baseType: !435, size: 64, align: 64, dwarfAddressSpace: 0)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<u16>>", baseType: !2166, size: 64, align: 64, dwarfAddressSpace: 0)
!2199 = !{!2193}
!2200 = !DILocation(line: 567, column: 29, scope: !2194, inlinedAt: !2201)
!2201 = distinct !DILocation(line: 1157, column: 34, scope: !2165)
!2202 = !DILocation(line: 1157, column: 9, scope: !2165)
!2203 = !DILocation(line: 1158, column: 9, scope: !2165)
!2204 = !DILocalVariable(name: "self", arg: 1, scope: !2205, file: !1949, line: 622, type: !2166)
!2205 = distinct !DISubprogram(name: "assume_init<core::option::Option<u16>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hb856b086e3ab2371E", scope: !2166, file: !1949, line: 622, type: !2206, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !2208)
!2206 = !DISubroutineType(types: !2207)
!2207 = !{!435, !2166, !882}
!2208 = !{!2204}
!2209 = !DILocation(line: 622, column: 37, scope: !2205, inlinedAt: !2210)
!2210 = distinct !DILocation(line: 1158, column: 9, scope: !2165)
!2211 = !DILocalVariable(name: "slot", arg: 1, scope: !2212, file: !1974, line: 88, type: !2170)
!2212 = distinct !DISubprogram(name: "into_inner<core::option::Option<u16>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h4f5271c3ef8b2cecE", scope: !2170, file: !1974, line: 88, type: !2213, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !2215)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!435, !2170}
!2215 = !{!2211}
!2216 = !DILocation(line: 88, column: 29, scope: !2212, inlinedAt: !2217)
!2217 = distinct !DILocation(line: 627, column: 13, scope: !2205, inlinedAt: !2210)
!2218 = !DILocation(line: 90, column: 6, scope: !2212, inlinedAt: !2217)
!2219 = !DILocation(line: 627, column: 13, scope: !2205, inlinedAt: !2210)
!2220 = !DILocation(line: 1160, column: 2, scope: !2159)
!2221 = distinct !DISubprogram(name: "read<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read17h80f019b407802b95E", scope: !30, file: !1904, line: 1137, type: !2222, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1224, retainedNodes: !2224)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{null, !1221}
!2224 = !{!2225, !2226}
!2225 = !DILocalVariable(name: "src", arg: 1, scope: !2221, file: !1904, line: 1137, type: !1221)
!2226 = !DILocalVariable(name: "tmp", scope: !2227, file: !1904, line: 1145, type: !2228, align: 1)
!2227 = distinct !DILexicalBlock(scope: !2221, file: !1904, line: 1145, column: 5)
!2228 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::alloc::Global>", scope: !750, file: !2, align: 8, elements: !2229, templateParams: !1224, identifier: "82bb2b15d5163651d1d5b32894ccb71a")
!2229 = !{!2230, !2231}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2228, file: !2, baseType: !7, align: 8)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2228, file: !2, baseType: !2232, align: 8)
!2232 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::alloc::Global>", scope: !756, file: !2, align: 8, elements: !2233, templateParams: !1224, identifier: "248784d54a1886ec3d66a8b42bc11bab")
!2233 = !{!2234}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2232, file: !2, baseType: !48, align: 8)
!2235 = !DILocation(line: 1137, column: 29, scope: !2221)
!2236 = !DILocation(line: 1145, column: 9, scope: !2227)
!2237 = !DILocation(line: 1153, column: 9, scope: !2227)
!2238 = !DILocalVariable(name: "src", arg: 1, scope: !2239, file: !1191, line: 2241, type: !1221)
!2239 = distinct !DISubprogram(name: "runtime<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read7runtime17h9f74fc90c840890bE", scope: !2121, file: !1191, line: 2241, type: !2222, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1224, retainedNodes: !2240)
!2240 = !{!2238}
!2241 = !DILocation(line: 2241, column: 39, scope: !2239, inlinedAt: !2242)
!2242 = distinct !DILocation(line: 1153, column: 9, scope: !2227)
!2243 = !DILocation(line: 1155, column: 35, scope: !2244, inlinedAt: !2242)
!2244 = !DILexicalBlockFile(scope: !2239, file: !1904, discriminator: 0)
!2245 = !DILocation(line: 2242, column: 20, scope: !2239, inlinedAt: !2242)
!2246 = !DILocation(line: 2244, column: 21, scope: !2239, inlinedAt: !2242)
!2247 = !DILocalVariable(name: "self", arg: 1, scope: !2248, file: !1949, line: 567, type: !2252)
!2248 = distinct !DISubprogram(name: "as_mut_ptr<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h47ada3ab807be9f7E", scope: !2228, file: !1949, line: 567, type: !2249, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1224, retainedNodes: !2253)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::alloc::Global", baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", baseType: !2228, size: 64, align: 64, dwarfAddressSpace: 0)
!2253 = !{!2247}
!2254 = !DILocation(line: 567, column: 29, scope: !2248, inlinedAt: !2255)
!2255 = distinct !DILocation(line: 1157, column: 34, scope: !2227)
!2256 = !DILocation(line: 1157, column: 9, scope: !2227)
!2257 = !DILocalVariable(name: "self", arg: 1, scope: !2258, file: !1949, line: 622, type: !2228)
!2258 = distinct !DISubprogram(name: "assume_init<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h00494ae7e680e1ebE", scope: !2228, file: !1949, line: 622, type: !2259, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1224, retainedNodes: !2261)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{null, !2228, !882}
!2261 = !{!2257}
!2262 = !DILocation(line: 622, column: 37, scope: !2258, inlinedAt: !2263)
!2263 = distinct !DILocation(line: 1158, column: 9, scope: !2227)
!2264 = !DILocalVariable(name: "slot", arg: 1, scope: !2265, file: !1974, line: 88, type: !2232)
!2265 = distinct !DISubprogram(name: "into_inner<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h897d87cf1e074328E", scope: !2232, file: !1974, line: 88, type: !2266, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1224, retainedNodes: !2268)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{null, !2232}
!2268 = !{!2264}
!2269 = !DILocation(line: 88, column: 29, scope: !2265, inlinedAt: !2270)
!2270 = distinct !DILocation(line: 627, column: 13, scope: !2258, inlinedAt: !2263)
!2271 = !DILocation(line: 1160, column: 2, scope: !2221)
!2272 = distinct !DISubprogram(name: "read<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read17h8b0a770eafd370a2E", scope: !30, file: !1904, line: 1137, type: !2273, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !2275)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!24, !1208}
!2275 = !{!2276, !2277}
!2276 = !DILocalVariable(name: "src", arg: 1, scope: !2272, file: !1904, line: 1137, type: !1208)
!2277 = !DILocalVariable(name: "tmp", scope: !2278, file: !1904, line: 1145, type: !2279, align: 8)
!2278 = distinct !DILexicalBlock(scope: !2272, file: !1904, line: 1145, column: 5)
!2279 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", scope: !750, file: !2, size: 128, align: 64, elements: !2280, templateParams: !1211, identifier: "c97aec4e8aa3584911016deba680ab9a")
!2280 = !{!2281, !2282}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2279, file: !2, baseType: !7, align: 8)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2279, file: !2, baseType: !2283, size: 128, align: 64)
!2283 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", scope: !756, file: !2, size: 128, align: 64, elements: !2284, templateParams: !1211, identifier: "3b5a6823aa58c4e75ae0c6c69ecaa198")
!2284 = !{!2285}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2283, file: !2, baseType: !24, size: 128, align: 64)
!2286 = !DILocation(line: 1137, column: 29, scope: !2272)
!2287 = !DILocation(line: 1145, column: 9, scope: !2278)
!2288 = !DILocation(line: 315, column: 6, scope: !2289, inlinedAt: !2292)
!2289 = distinct !DISubprogram(name: "uninit<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h8c0710e4a9267969E", scope: !2279, file: !1949, line: 313, type: !2290, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !45)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!2279}
!2292 = distinct !DILocation(line: 1145, column: 19, scope: !2272)
!2293 = !DILocation(line: 1145, column: 19, scope: !2272)
!2294 = !DILocation(line: 1153, column: 9, scope: !2278)
!2295 = !DILocalVariable(name: "src", arg: 1, scope: !2296, file: !1191, line: 2241, type: !1208)
!2296 = distinct !DISubprogram(name: "runtime<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read7runtime17h0c951c680e762f86E", scope: !2121, file: !1191, line: 2241, type: !2297, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !2299)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{null, !1208}
!2299 = !{!2295}
!2300 = !DILocation(line: 2241, column: 39, scope: !2296, inlinedAt: !2301)
!2301 = distinct !DILocation(line: 1153, column: 9, scope: !2278)
!2302 = !DILocation(line: 1155, column: 35, scope: !2303, inlinedAt: !2301)
!2303 = !DILexicalBlockFile(scope: !2296, file: !1904, discriminator: 0)
!2304 = !DILocation(line: 2242, column: 20, scope: !2296, inlinedAt: !2301)
!2305 = !DILocation(line: 2244, column: 21, scope: !2296, inlinedAt: !2301)
!2306 = !DILocalVariable(name: "self", arg: 1, scope: !2307, file: !1949, line: 567, type: !2311)
!2307 = distinct !DISubprogram(name: "as_mut_ptr<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hedf1d7c3363c359cE", scope: !2279, file: !1949, line: 567, type: !2308, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !2312)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{!2310, !2311}
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !24, size: 64, align: 64, dwarfAddressSpace: 0)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", baseType: !2279, size: 64, align: 64, dwarfAddressSpace: 0)
!2312 = !{!2306}
!2313 = !DILocation(line: 567, column: 29, scope: !2307, inlinedAt: !2314)
!2314 = distinct !DILocation(line: 1157, column: 34, scope: !2278)
!2315 = !DILocation(line: 1157, column: 9, scope: !2278)
!2316 = !DILocation(line: 1158, column: 9, scope: !2278)
!2317 = !DILocalVariable(name: "self", arg: 1, scope: !2318, file: !1949, line: 622, type: !2279)
!2318 = distinct !DISubprogram(name: "assume_init<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h0c3c86b55af165d8E", scope: !2279, file: !1949, line: 622, type: !2319, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !2321)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{!24, !2279, !882}
!2321 = !{!2317}
!2322 = !DILocation(line: 622, column: 37, scope: !2318, inlinedAt: !2323)
!2323 = distinct !DILocation(line: 1158, column: 9, scope: !2278)
!2324 = !DILocalVariable(name: "slot", arg: 1, scope: !2325, file: !1974, line: 88, type: !2283)
!2325 = distinct !DISubprogram(name: "into_inner<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17he95aae3b3605a574E", scope: !2283, file: !1974, line: 88, type: !2326, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !2328)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{!24, !2283}
!2328 = !{!2324}
!2329 = !DILocation(line: 88, column: 29, scope: !2325, inlinedAt: !2330)
!2330 = distinct !DILocation(line: 627, column: 13, scope: !2318, inlinedAt: !2323)
!2331 = !DILocation(line: 90, column: 6, scope: !2325, inlinedAt: !2330)
!2332 = !DILocation(line: 627, column: 13, scope: !2318, inlinedAt: !2323)
!2333 = !DILocation(line: 1160, column: 2, scope: !2272)
!2334 = distinct !DISubprogram(name: "read<alloc::string::String>", linkageName: "_ZN4core3ptr4read17hb747880b223093e6E", scope: !30, file: !1904, line: 1137, type: !2335, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !2337)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{!15, !1247}
!2337 = !{!2338, !2339}
!2338 = !DILocalVariable(name: "src", arg: 1, scope: !2334, file: !1904, line: 1137, type: !1247)
!2339 = !DILocalVariable(name: "tmp", scope: !2340, file: !1904, line: 1145, type: !2341, align: 8)
!2340 = distinct !DILexicalBlock(scope: !2334, file: !1904, line: 1145, column: 5)
!2341 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::string::String>", scope: !750, file: !2, size: 192, align: 64, elements: !2342, templateParams: !1250, identifier: "5c6f1ab919cf700384544e478cbbfb67")
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2341, file: !2, baseType: !7, align: 8)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2341, file: !2, baseType: !2345, size: 192, align: 64)
!2345 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::string::String>", scope: !756, file: !2, size: 192, align: 64, elements: !2346, templateParams: !1250, identifier: "9a44305343248f92909c5b454c824d58")
!2346 = !{!2347}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2345, file: !2, baseType: !15, size: 192, align: 64)
!2348 = !DILocation(line: 1137, column: 29, scope: !2334)
!2349 = !DILocation(line: 1145, column: 9, scope: !2340)
!2350 = !DILocation(line: 1153, column: 9, scope: !2340)
!2351 = !DILocalVariable(name: "src", arg: 1, scope: !2352, file: !1191, line: 2241, type: !1247)
!2352 = distinct !DISubprogram(name: "runtime<alloc::string::String>", linkageName: "_ZN4core3ptr4read7runtime17h67f2ee334fab8745E", scope: !2121, file: !1191, line: 2241, type: !2353, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !2355)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{null, !1247}
!2355 = !{!2351}
!2356 = !DILocation(line: 2241, column: 39, scope: !2352, inlinedAt: !2357)
!2357 = distinct !DILocation(line: 1153, column: 9, scope: !2340)
!2358 = !DILocation(line: 1155, column: 35, scope: !2359, inlinedAt: !2357)
!2359 = !DILexicalBlockFile(scope: !2352, file: !1904, discriminator: 0)
!2360 = !DILocation(line: 2242, column: 20, scope: !2352, inlinedAt: !2357)
!2361 = !DILocation(line: 2244, column: 21, scope: !2352, inlinedAt: !2357)
!2362 = !DILocalVariable(name: "self", arg: 1, scope: !2363, file: !1949, line: 567, type: !2366)
!2363 = distinct !DISubprogram(name: "as_mut_ptr<alloc::string::String>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h59079cdc416b84baE", scope: !2341, file: !1949, line: 567, type: !2364, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !2367)
!2364 = !DISubroutineType(types: !2365)
!2365 = !{!2060, !2366}
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::string::String>", baseType: !2341, size: 64, align: 64, dwarfAddressSpace: 0)
!2367 = !{!2362}
!2368 = !DILocation(line: 567, column: 29, scope: !2363, inlinedAt: !2369)
!2369 = distinct !DILocation(line: 1157, column: 34, scope: !2340)
!2370 = !DILocation(line: 1157, column: 9, scope: !2340)
!2371 = !DILocation(line: 1158, column: 9, scope: !2340)
!2372 = !DILocalVariable(name: "self", arg: 1, scope: !2373, file: !1949, line: 622, type: !2341)
!2373 = distinct !DISubprogram(name: "assume_init<alloc::string::String>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h1c8f24803087f75bE", scope: !2341, file: !1949, line: 622, type: !2374, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !2376)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!15, !2341, !882}
!2376 = !{!2372}
!2377 = !DILocation(line: 622, column: 37, scope: !2373, inlinedAt: !2378)
!2378 = distinct !DILocation(line: 1158, column: 9, scope: !2340)
!2379 = !DILocation(line: 627, column: 38, scope: !2373, inlinedAt: !2378)
!2380 = !DILocalVariable(name: "slot", arg: 1, scope: !2381, file: !1974, line: 88, type: !2345)
!2381 = distinct !DISubprogram(name: "into_inner<alloc::string::String>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h6bfa58d6d81067f1E", scope: !2345, file: !1974, line: 88, type: !2382, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !2384)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!15, !2345}
!2384 = !{!2380}
!2385 = !DILocation(line: 88, column: 29, scope: !2381, inlinedAt: !2386)
!2386 = distinct !DILocation(line: 627, column: 13, scope: !2373, inlinedAt: !2378)
!2387 = !DILocation(line: 89, column: 9, scope: !2381, inlinedAt: !2386)
!2388 = !DILocation(line: 1160, column: 2, scope: !2334)
!2389 = distinct !DISubprogram(name: "read<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3ptr4read17hcf41a14d447407e1E", scope: !30, file: !1904, line: 1137, type: !2390, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !2392)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!559, !1260}
!2392 = !{!2393, !2394}
!2393 = !DILocalVariable(name: "src", arg: 1, scope: !2389, file: !1904, line: 1137, type: !1260)
!2394 = !DILocalVariable(name: "tmp", scope: !2395, file: !1904, line: 1145, type: !2396, align: 8)
!2395 = distinct !DILexicalBlock(scope: !2389, file: !1904, line: 1145, column: 5)
!2396 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::slice::iter::Iter<u8>>", scope: !750, file: !2, size: 128, align: 64, elements: !2397, templateParams: !1263, identifier: "59175b64862b9e74c666daf02505d43d")
!2397 = !{!2398, !2399}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2396, file: !2, baseType: !7, align: 8)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2396, file: !2, baseType: !2400, size: 128, align: 64)
!2400 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::slice::iter::Iter<u8>>", scope: !756, file: !2, size: 128, align: 64, elements: !2401, templateParams: !1263, identifier: "e08a0b9cccd15cb9ae0af6db139b0061")
!2401 = !{!2402}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2400, file: !2, baseType: !559, size: 128, align: 64)
!2403 = !DILocation(line: 1137, column: 29, scope: !2389)
!2404 = !DILocation(line: 1145, column: 9, scope: !2395)
!2405 = !DILocation(line: 315, column: 6, scope: !2406, inlinedAt: !2409)
!2406 = distinct !DISubprogram(name: "uninit<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hdaf0d73d2cc39bc1E", scope: !2396, file: !1949, line: 313, type: !2407, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !45)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!2396}
!2409 = distinct !DILocation(line: 1145, column: 19, scope: !2389)
!2410 = !DILocation(line: 1145, column: 19, scope: !2389)
!2411 = !DILocation(line: 1153, column: 9, scope: !2395)
!2412 = !DILocalVariable(name: "src", arg: 1, scope: !2413, file: !1191, line: 2241, type: !1260)
!2413 = distinct !DISubprogram(name: "runtime<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3ptr4read7runtime17h3dd36258d8310fb8E", scope: !2121, file: !1191, line: 2241, type: !2414, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !2416)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{null, !1260}
!2416 = !{!2412}
!2417 = !DILocation(line: 2241, column: 39, scope: !2413, inlinedAt: !2418)
!2418 = distinct !DILocation(line: 1153, column: 9, scope: !2395)
!2419 = !DILocation(line: 1155, column: 35, scope: !2420, inlinedAt: !2418)
!2420 = !DILexicalBlockFile(scope: !2413, file: !1904, discriminator: 0)
!2421 = !DILocation(line: 2242, column: 20, scope: !2413, inlinedAt: !2418)
!2422 = !DILocation(line: 2244, column: 21, scope: !2413, inlinedAt: !2418)
!2423 = !DILocalVariable(name: "self", arg: 1, scope: !2424, file: !1949, line: 567, type: !2428)
!2424 = distinct !DISubprogram(name: "as_mut_ptr<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hc9deedf4a790c01aE", scope: !2396, file: !1949, line: 567, type: !2425, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !2429)
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!2427, !2428}
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::slice::iter::Iter<u8>", baseType: !559, size: 64, align: 64, dwarfAddressSpace: 0)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::slice::iter::Iter<u8>>", baseType: !2396, size: 64, align: 64, dwarfAddressSpace: 0)
!2429 = !{!2423}
!2430 = !DILocation(line: 567, column: 29, scope: !2424, inlinedAt: !2431)
!2431 = distinct !DILocation(line: 1157, column: 34, scope: !2395)
!2432 = !DILocation(line: 1157, column: 9, scope: !2395)
!2433 = !DILocation(line: 1158, column: 9, scope: !2395)
!2434 = !DILocalVariable(name: "self", arg: 1, scope: !2435, file: !1949, line: 622, type: !2396)
!2435 = distinct !DISubprogram(name: "assume_init<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h650fcc8866f20d16E", scope: !2396, file: !1949, line: 622, type: !2436, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !2438)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!559, !2396, !882}
!2438 = !{!2434}
!2439 = !DILocation(line: 622, column: 37, scope: !2435, inlinedAt: !2440)
!2440 = distinct !DILocation(line: 1158, column: 9, scope: !2395)
!2441 = !DILocalVariable(name: "slot", arg: 1, scope: !2442, file: !1974, line: 88, type: !2400)
!2442 = distinct !DISubprogram(name: "into_inner<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h7a43de38fe4c112cE", scope: !2400, file: !1974, line: 88, type: !2443, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !2445)
!2443 = !DISubroutineType(types: !2444)
!2444 = !{!559, !2400}
!2445 = !{!2441}
!2446 = !DILocation(line: 88, column: 29, scope: !2442, inlinedAt: !2447)
!2447 = distinct !DILocation(line: 627, column: 13, scope: !2435, inlinedAt: !2440)
!2448 = !DILocation(line: 90, column: 6, scope: !2442, inlinedAt: !2447)
!2449 = !DILocation(line: 627, column: 13, scope: !2435, inlinedAt: !2440)
!2450 = !DILocation(line: 1160, column: 2, scope: !2389)
!2451 = distinct !DISubprogram(name: "drop_in_place<&alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr50drop_in_place$LT$$RF$alloc..vec..Vec$LT$u8$GT$$GT$17h8a1c1afc14e91cc3E", scope: !30, file: !1904, line: 490, type: !2452, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2457, retainedNodes: !2455)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{null, !2454}
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !280, size: 64, align: 64, dwarfAddressSpace: 0)
!2455 = !{!2456}
!2456 = !DILocalVariable(arg: 1, scope: !2451, file: !1904, line: 490, type: !2454)
!2457 = !{!2458}
!2458 = !DITemplateTypeParameter(name: "T", type: !280)
!2459 = !DILocation(line: 490, column: 1, scope: !2451)
!2460 = distinct !DISubprogram(name: "drop_in_place<alloc::borrow::Cow<str>>", linkageName: "_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h8dbac5b1553a9343E", scope: !30, file: !1904, line: 490, type: !2461, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2482, retainedNodes: !2480)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{null, !2463}
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::borrow::Cow<str>", baseType: !2464, size: 64, align: 64, dwarfAddressSpace: 0)
!2464 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cow<str>", scope: !2465, file: !2, size: 256, align: 64, elements: !2466, templateParams: !45, identifier: "e186b464a8d6da48c10c2db7bc132b19")
!2465 = !DINamespace(name: "borrow", scope: !17)
!2466 = !{!2467}
!2467 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2464, file: !2, size: 256, align: 64, elements: !2468, templateParams: !45, identifier: "c1e9c8ba9ac4ec09ddd1f7f3ae6e9c80", discriminator: !2479)
!2468 = !{!2469, !2475}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "Borrowed", scope: !2467, file: !2, baseType: !2470, size: 256, align: 64, extraData: i64 0)
!2470 = !DICompositeType(tag: DW_TAG_structure_type, name: "Borrowed", scope: !2464, file: !2, size: 256, align: 64, elements: !2471, templateParams: !2473, identifier: "70a9d85558e955372ed0da4644e246fd")
!2471 = !{!2472}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2470, file: !2, baseType: !145, size: 128, align: 64, offset: 64)
!2473 = !{!2474}
!2474 = !DITemplateTypeParameter(name: "B", type: !39)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "Owned", scope: !2467, file: !2, baseType: !2476, size: 256, align: 64, extraData: i64 1)
!2476 = !DICompositeType(tag: DW_TAG_structure_type, name: "Owned", scope: !2464, file: !2, size: 256, align: 64, elements: !2477, templateParams: !2473, identifier: "5a41ca78b4b9a19af883b615388d0fa9")
!2477 = !{!2478}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2476, file: !2, baseType: !15, size: 192, align: 64, offset: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, scope: !2464, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!2480 = !{!2481}
!2481 = !DILocalVariable(arg: 1, scope: !2460, file: !1904, line: 490, type: !2463)
!2482 = !{!2483}
!2483 = !DITemplateTypeParameter(name: "T", type: !2464)
!2484 = !DILocation(line: 490, column: 1, scope: !2460)
!2485 = distinct !DISubprogram(name: "drop_in_place<&core::str::error::Utf8Error>", linkageName: "_ZN4core3ptr52drop_in_place$LT$$RF$core..str..error..Utf8Error$GT$17ha91a37f5545185bfE", scope: !30, file: !1904, line: 490, type: !2486, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2491, retainedNodes: !2489)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{null, !2488}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &core::str::error::Utf8Error", baseType: !334, size: 64, align: 64, dwarfAddressSpace: 0)
!2489 = !{!2490}
!2490 = !DILocalVariable(arg: 1, scope: !2485, file: !1904, line: 490, type: !2488)
!2491 = !{!2492}
!2492 = !DITemplateTypeParameter(name: "T", type: !334)
!2493 = !DILocation(line: 490, column: 1, scope: !2485)
!2494 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h3e57bfa2296415acE", scope: !30, file: !1904, line: 490, type: !2495, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !2497)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !2310}
!2497 = !{!2498}
!2498 = !DILocalVariable(arg: 1, scope: !2494, file: !1904, line: 490, type: !2310)
!2499 = !DILocation(line: 490, column: 1, scope: !2494)
!2500 = distinct !DISubprogram(name: "drop_in_place<core::alloc::layout::LayoutError>", linkageName: "_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17he05a8a1bf4c8fc09E", scope: !30, file: !1904, line: 490, type: !2501, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !960, retainedNodes: !2504)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{null, !2503}
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::alloc::layout::LayoutError", baseType: !71, size: 64, align: 64, dwarfAddressSpace: 0)
!2504 = !{!2505}
!2505 = !DILocalVariable(arg: 1, scope: !2500, file: !1904, line: 490, type: !2503)
!2506 = !DILocation(line: 490, column: 1, scope: !2500)
!2507 = distinct !DISubprogram(name: "drop_in_place<&mut alloc::string::String>", linkageName: "_ZN4core3ptr54drop_in_place$LT$$RF$mut$u20$alloc..string..String$GT$17h0b890ab8f8f6221fE", scope: !30, file: !1904, line: 490, type: !2508, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2513, retainedNodes: !2511)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !2510}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &mut alloc::string::String", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!2511 = !{!2512}
!2512 = !DILocalVariable(arg: 1, scope: !2507, file: !1904, line: 490, type: !2510)
!2513 = !{!2514}
!2514 = !DITemplateTypeParameter(name: "T", type: !14)
!2515 = !DILocation(line: 490, column: 1, scope: !2507)
!2516 = distinct !DISubprogram(name: "drop_in_place<&core::option::Option<u8>>", linkageName: "_ZN4core3ptr55drop_in_place$LT$$RF$core..option..Option$LT$u8$GT$$GT$17h848328e1cf5ca3d2E", scope: !30, file: !1904, line: 490, type: !2517, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2522, retainedNodes: !2520)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{null, !2519}
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &core::option::Option<u8>", baseType: !82, size: 64, align: 64, dwarfAddressSpace: 0)
!2520 = !{!2521}
!2521 = !DILocalVariable(arg: 1, scope: !2516, file: !1904, line: 490, type: !2519)
!2522 = !{!2523}
!2523 = !DITemplateTypeParameter(name: "T", type: !82)
!2524 = !DILocation(line: 490, column: 1, scope: !2516)
!2525 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::drain::Drain<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr55drop_in_place$LT$alloc..vec..drain..Drain$LT$u8$GT$$GT$17h978bbc390bc3cbeeE", scope: !30, file: !1904, line: 490, type: !2526, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2531, retainedNodes: !2529)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{null, !2528}
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::drain::Drain<u8, alloc::alloc::Global>", baseType: !1915, size: 64, align: 64, dwarfAddressSpace: 0)
!2529 = !{!2530}
!2530 = !DILocalVariable(arg: 1, scope: !2525, file: !1904, line: 490, type: !2528)
!2531 = !{!2532}
!2532 = !DITemplateTypeParameter(name: "T", type: !1915)
!2533 = !DILocation(line: 490, column: 1, scope: !2525)
!2534 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h394222bf9f2778faE", scope: !30, file: !1904, line: 490, type: !2535, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !2537)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{null, !2135}
!2537 = !{!2538}
!2538 = !DILocalVariable(arg: 1, scope: !2534, file: !1904, line: 490, type: !2135)
!2539 = !DILocation(line: 490, column: 1, scope: !2534)
!2540 = distinct !DISubprogram(name: "write<core::option::Option<u16>>", linkageName: "_ZN4core3ptr5write17h03104ae4e030edd1E", scope: !30, file: !1904, line: 1338, type: !2541, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !2543)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{null, !2197, !435}
!2543 = !{!2544, !2545}
!2544 = !DILocalVariable(name: "dst", arg: 1, scope: !2540, file: !1904, line: 1338, type: !2197)
!2545 = !DILocalVariable(name: "src", arg: 2, scope: !2540, file: !1904, line: 1338, type: !435)
!2546 = !DILocation(line: 1338, column: 30, scope: !2540)
!2547 = !DILocation(line: 1338, column: 43, scope: !2540)
!2548 = !DILocation(line: 1350, column: 9, scope: !2540)
!2549 = !DILocalVariable(name: "dst", arg: 1, scope: !2550, file: !1191, line: 2241, type: !2197)
!2550 = distinct !DISubprogram(name: "runtime<core::option::Option<u16>>", linkageName: "_ZN4core3ptr5write7runtime17haaefcc50cb4329b0E", scope: !2551, file: !1191, line: 2241, type: !2552, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !2554)
!2551 = !DINamespace(name: "write", scope: !30)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{null, !2197}
!2554 = !{!2549}
!2555 = !DILocation(line: 2241, column: 39, scope: !2550, inlinedAt: !2556)
!2556 = distinct !DILocation(line: 1350, column: 9, scope: !2540)
!2557 = !DILocation(line: 1352, column: 33, scope: !2558, inlinedAt: !2556)
!2558 = !DILexicalBlockFile(scope: !2550, file: !1904, discriminator: 0)
!2559 = !DILocation(line: 2242, column: 20, scope: !2550, inlinedAt: !2556)
!2560 = !DILocation(line: 2244, column: 21, scope: !2550, inlinedAt: !2556)
!2561 = !DILocation(line: 1354, column: 9, scope: !2540)
!2562 = !DILocation(line: 1357, column: 2, scope: !2540)
!2563 = distinct !DISubprogram(name: "write<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr5write17h5f7fbf5ab9b1995eE", scope: !30, file: !1904, line: 1338, type: !2564, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !2566)
!2564 = !DISubroutineType(types: !2565)
!2565 = !{null, !2135, !322}
!2566 = !{!2567, !2568}
!2567 = !DILocalVariable(name: "dst", arg: 1, scope: !2563, file: !1904, line: 1338, type: !2135)
!2568 = !DILocalVariable(name: "src", arg: 2, scope: !2563, file: !1904, line: 1338, type: !322)
!2569 = !DILocation(line: 1338, column: 30, scope: !2563)
!2570 = !DILocation(line: 1338, column: 43, scope: !2563)
!2571 = !DILocation(line: 1350, column: 9, scope: !2563)
!2572 = !DILocalVariable(name: "dst", arg: 1, scope: !2573, file: !1191, line: 2241, type: !2135)
!2573 = distinct !DISubprogram(name: "runtime<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr5write7runtime17h2d80debc63ad1f70E", scope: !2551, file: !1191, line: 2241, type: !2535, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !2574)
!2574 = !{!2572}
!2575 = !DILocation(line: 2241, column: 39, scope: !2573, inlinedAt: !2576)
!2576 = distinct !DILocation(line: 1350, column: 9, scope: !2563)
!2577 = !DILocation(line: 1352, column: 33, scope: !2578, inlinedAt: !2576)
!2578 = !DILexicalBlockFile(scope: !2573, file: !1904, discriminator: 0)
!2579 = !DILocation(line: 2242, column: 20, scope: !2573, inlinedAt: !2576)
!2580 = !DILocation(line: 2244, column: 21, scope: !2573, inlinedAt: !2576)
!2581 = !DILocation(line: 1354, column: 9, scope: !2563)
!2582 = !DILocation(line: 1357, column: 2, scope: !2563)
!2583 = distinct !DISubprogram(name: "write<alloc::string::String>", linkageName: "_ZN4core3ptr5write17h82a430e08389d3f6E", scope: !30, file: !1904, line: 1338, type: !2584, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !2586)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{null, !2060, !15}
!2586 = !{!2587, !2588}
!2587 = !DILocalVariable(name: "dst", arg: 1, scope: !2583, file: !1904, line: 1338, type: !2060)
!2588 = !DILocalVariable(name: "src", arg: 2, scope: !2583, file: !1904, line: 1338, type: !15)
!2589 = !DILocation(line: 1338, column: 30, scope: !2583)
!2590 = !DILocation(line: 1338, column: 43, scope: !2583)
!2591 = !DILocation(line: 1350, column: 9, scope: !2583)
!2592 = !DILocalVariable(name: "dst", arg: 1, scope: !2593, file: !1191, line: 2241, type: !2060)
!2593 = distinct !DISubprogram(name: "runtime<alloc::string::String>", linkageName: "_ZN4core3ptr5write7runtime17h5541617de79e91fdE", scope: !2551, file: !1191, line: 2241, type: !2058, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !2594)
!2594 = !{!2592}
!2595 = !DILocation(line: 2241, column: 39, scope: !2593, inlinedAt: !2596)
!2596 = distinct !DILocation(line: 1350, column: 9, scope: !2583)
!2597 = !DILocation(line: 1352, column: 33, scope: !2598, inlinedAt: !2596)
!2598 = !DILexicalBlockFile(scope: !2593, file: !1904, discriminator: 0)
!2599 = !DILocation(line: 2242, column: 20, scope: !2593, inlinedAt: !2596)
!2600 = !DILocation(line: 2244, column: 21, scope: !2593, inlinedAt: !2596)
!2601 = !DILocation(line: 1354, column: 9, scope: !2583)
!2602 = !DILocation(line: 1357, column: 2, scope: !2583)
!2603 = distinct !DISubprogram(name: "write<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3ptr5write17he2c5432ed5b5c6f6E", scope: !30, file: !1904, line: 1338, type: !2604, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !2606)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{null, !2427, !559}
!2606 = !{!2607, !2608}
!2607 = !DILocalVariable(name: "dst", arg: 1, scope: !2603, file: !1904, line: 1338, type: !2427)
!2608 = !DILocalVariable(name: "src", arg: 2, scope: !2603, file: !1904, line: 1338, type: !559)
!2609 = !DILocation(line: 1338, column: 30, scope: !2603)
!2610 = !DILocation(line: 1338, column: 43, scope: !2603)
!2611 = !DILocation(line: 1350, column: 9, scope: !2603)
!2612 = !DILocalVariable(name: "dst", arg: 1, scope: !2613, file: !1191, line: 2241, type: !2427)
!2613 = distinct !DISubprogram(name: "runtime<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3ptr5write7runtime17hdf512cffeb660bf3E", scope: !2551, file: !1191, line: 2241, type: !2614, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !2616)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{null, !2427}
!2616 = !{!2612}
!2617 = !DILocation(line: 2241, column: 39, scope: !2613, inlinedAt: !2618)
!2618 = distinct !DILocation(line: 1350, column: 9, scope: !2603)
!2619 = !DILocation(line: 1352, column: 33, scope: !2620, inlinedAt: !2618)
!2620 = !DILexicalBlockFile(scope: !2613, file: !1904, discriminator: 0)
!2621 = !DILocation(line: 2242, column: 20, scope: !2613, inlinedAt: !2618)
!2622 = !DILocation(line: 2244, column: 21, scope: !2613, inlinedAt: !2618)
!2623 = !DILocation(line: 1354, column: 9, scope: !2603)
!2624 = !DILocation(line: 1357, column: 2, scope: !2603)
!2625 = distinct !DISubprogram(name: "drop_in_place<&alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core3ptr64drop_in_place$LT$$RF$alloc..collections..TryReserveErrorKind$GT$17hb943e1041e1118a1E", scope: !30, file: !1904, line: 490, type: !2626, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2631, retainedNodes: !2629)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{null, !2628}
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &alloc::collections::TryReserveErrorKind", baseType: !158, size: 64, align: 64, dwarfAddressSpace: 0)
!2629 = !{!2630}
!2630 = !DILocalVariable(arg: 1, scope: !2625, file: !1904, line: 490, type: !2628)
!2631 = !{!2632}
!2632 = !DITemplateTypeParameter(name: "T", type: !158)
!2633 = !DILocation(line: 490, column: 1, scope: !2625)
!2634 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::FromBytesWithNulErrorKind>", linkageName: "_ZN4core3ptr65drop_in_place$LT$alloc..ffi..c_str..FromBytesWithNulErrorKind$GT$17he5de423ab36c6fddE", scope: !30, file: !1904, line: 490, type: !2635, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2640, retainedNodes: !2638)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{null, !2637}
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::FromBytesWithNulErrorKind", baseType: !298, size: 64, align: 64, dwarfAddressSpace: 0)
!2638 = !{!2639}
!2639 = !DILocalVariable(arg: 1, scope: !2634, file: !1904, line: 490, type: !2637)
!2640 = !{!2641}
!2641 = !DITemplateTypeParameter(name: "T", type: !298)
!2642 = !DILocation(line: 490, column: 1, scope: !2634)
!2643 = distinct !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0aafb19549a69619E", scope: !800, file: !713, line: 85, type: !2644, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !2650)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!800, !2646}
!2646 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !2647, templateParams: !45, identifier: "77a89f498549138bcc9631af47019530")
!2647 = !{!2648, !2649}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2646, file: !2, baseType: !809, size: 64, align: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2646, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2650 = !{!2651}
!2651 = !DILocalVariable(name: "ptr", arg: 1, scope: !2643, file: !713, line: 85, type: !2646)
!2652 = !DILocation(line: 85, column: 39, scope: !2643)
!2653 = !DILocation(line: 87, column: 36, scope: !2643)
!2654 = !DILocation(line: 87, column: 18, scope: !2643)
!2655 = !DILocation(line: 88, column: 6, scope: !2643)
!2656 = distinct !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h927607014d416d51E", scope: !739, file: !713, line: 85, type: !2657, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !2663)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{!739, !2659}
!2659 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !2660, templateParams: !45, identifier: "2694ff598848d804f70b1e7f65522012")
!2660 = !{!2661, !2662}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2659, file: !2, baseType: !748, size: 64, align: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2659, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2663 = !{!2664}
!2664 = !DILocalVariable(name: "ptr", arg: 1, scope: !2656, file: !713, line: 85, type: !2659)
!2665 = !DILocation(line: 85, column: 39, scope: !2656)
!2666 = !DILocation(line: 87, column: 36, scope: !2656)
!2667 = !DILocation(line: 87, column: 18, scope: !2656)
!2668 = !DILocation(line: 88, column: 6, scope: !2656)
!2669 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h97ce221bd4ae9d0dE", scope: !28, file: !713, line: 85, type: !2670, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2672)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!28, !1308}
!2672 = !{!2673}
!2673 = !DILocalVariable(name: "ptr", arg: 1, scope: !2669, file: !713, line: 85, type: !1308)
!2674 = !DILocation(line: 85, column: 39, scope: !2669)
!2675 = !DILocation(line: 87, column: 36, scope: !2669)
!2676 = !DILocation(line: 87, column: 18, scope: !2669)
!2677 = !DILocation(line: 88, column: 6, scope: !2669)
!2678 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17haed075faf7848f85E", scope: !828, file: !713, line: 85, type: !2679, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2685)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{!828, !2681}
!2681 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !2682, templateParams: !45, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!2682 = !{!2683, !2684}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2681, file: !2, baseType: !148, size: 64, align: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2681, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2685 = !{!2686}
!2686 = !DILocalVariable(name: "ptr", arg: 1, scope: !2678, file: !713, line: 85, type: !2681)
!2687 = !DILocation(line: 85, column: 39, scope: !2678)
!2688 = !DILocation(line: 87, column: 36, scope: !2678)
!2689 = !DILocation(line: 87, column: 18, scope: !2678)
!2690 = !DILocation(line: 88, column: 6, scope: !2678)
!2691 = distinct !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hce7e6adb62fafdfeE", scope: !780, file: !713, line: 85, type: !2692, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2698)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{!780, !2694}
!2694 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut str", file: !2, size: 128, align: 64, elements: !2695, templateParams: !45, identifier: "c0e5994a8e99afccd68a87827900070")
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2694, file: !2, baseType: !148, size: 64, align: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2694, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2698 = !{!2699}
!2699 = !DILocalVariable(name: "ptr", arg: 1, scope: !2691, file: !713, line: 85, type: !2694)
!2700 = !DILocation(line: 85, column: 39, scope: !2691)
!2701 = !DILocation(line: 87, column: 36, scope: !2691)
!2702 = !DILocation(line: 87, column: 18, scope: !2691)
!2703 = !DILocation(line: 88, column: 6, scope: !2691)
!2704 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hac21323e41eff0e2E", scope: !828, file: !713, line: 136, type: !2705, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2709, retainedNodes: !2707)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{!28, !828}
!2707 = !{!2708}
!2708 = !DILocalVariable(name: "self", arg: 1, scope: !2704, file: !713, line: 136, type: !828)
!2709 = !{!41, !2710}
!2710 = !DITemplateTypeParameter(name: "U", type: !39)
!2711 = !DILocation(line: 136, column: 26, scope: !2704)
!2712 = !DILocation(line: 137, column: 22, scope: !2704)
!2713 = !DILocation(line: 137, column: 9, scope: !2704)
!2714 = !DILocation(line: 138, column: 6, scope: !2704)
!2715 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcb3f6fdd6f42c681E", scope: !28, file: !713, line: 136, type: !2716, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2709, retainedNodes: !2718)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!28, !28}
!2718 = !{!2719}
!2719 = !DILocalVariable(name: "self", arg: 1, scope: !2715, file: !713, line: 136, type: !28)
!2720 = !DILocation(line: 136, column: 26, scope: !2715)
!2721 = !DILocation(line: 137, column: 22, scope: !2715)
!2722 = !DILocation(line: 137, column: 9, scope: !2715)
!2723 = !DILocation(line: 138, column: 6, scope: !2715)
!2724 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6c7e501aa8d05bbeE", scope: !28, file: !713, line: 103, type: !2725, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2727)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!1308, !28}
!2727 = !{!2728}
!2728 = !DILocalVariable(name: "self", arg: 1, scope: !2724, file: !713, line: 103, type: !28)
!2729 = !DILocation(line: 103, column: 25, scope: !2724)
!2730 = !DILocalVariable(name: "self", arg: 1, scope: !2731, file: !702, line: 325, type: !34)
!2731 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9727ee34d51aeef4E", scope: !34, file: !702, line: 325, type: !2732, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2734)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!1308, !34}
!2734 = !{!2730}
!2735 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !2736)
!2736 = distinct !DILocation(line: 104, column: 9, scope: !2724)
!2737 = !DILocation(line: 105, column: 6, scope: !2724)
!2738 = distinct !DISubprogram(name: "as_ptr<str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8f39c16857b61dc9E", scope: !780, file: !713, line: 103, type: !2739, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2741)
!2739 = !DISubroutineType(types: !2740)
!2740 = !{!2694, !780}
!2741 = !{!2742}
!2742 = !DILocalVariable(name: "self", arg: 1, scope: !2738, file: !713, line: 103, type: !780)
!2743 = !DILocation(line: 103, column: 25, scope: !2738)
!2744 = !DILocalVariable(name: "self", arg: 1, scope: !2745, file: !702, line: 325, type: !783)
!2745 = distinct !DISubprogram(name: "as_ptr<str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9255b9d57102333eE", scope: !783, file: !702, line: 325, type: !2746, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2748)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{!2694, !783}
!2748 = !{!2744}
!2749 = !DILocation(line: 325, column: 25, scope: !2745, inlinedAt: !2750)
!2750 = distinct !DILocation(line: 104, column: 9, scope: !2738)
!2751 = !DILocation(line: 327, column: 6, scope: !2745, inlinedAt: !2750)
!2752 = !DILocation(line: 104, column: 9, scope: !2738)
!2753 = !DILocation(line: 105, column: 6, scope: !2738)
!2754 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h97ba1af7a992b060E", scope: !828, file: !713, line: 103, type: !2755, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2757)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{!2681, !828}
!2757 = !{!2758}
!2758 = !DILocalVariable(name: "self", arg: 1, scope: !2754, file: !713, line: 103, type: !828)
!2759 = !DILocation(line: 103, column: 25, scope: !2754)
!2760 = !DILocalVariable(name: "self", arg: 1, scope: !2761, file: !702, line: 325, type: !831)
!2761 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd7ad416f54596f7E", scope: !831, file: !702, line: 325, type: !2762, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2764)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!2681, !831}
!2764 = !{!2760}
!2765 = !DILocation(line: 325, column: 25, scope: !2761, inlinedAt: !2766)
!2766 = distinct !DILocation(line: 104, column: 9, scope: !2754)
!2767 = !DILocation(line: 327, column: 6, scope: !2761, inlinedAt: !2766)
!2768 = !DILocation(line: 104, column: 9, scope: !2754)
!2769 = !DILocation(line: 105, column: 6, scope: !2754)
!2770 = distinct !DISubprogram(name: "as_ptr<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf6edf88a3181498E", scope: !800, file: !713, line: 103, type: !2771, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !2773)
!2771 = !DISubroutineType(types: !2772)
!2772 = !{!2646, !800}
!2773 = !{!2774}
!2774 = !DILocalVariable(name: "self", arg: 1, scope: !2770, file: !713, line: 103, type: !800)
!2775 = !DILocation(line: 103, column: 25, scope: !2770)
!2776 = !DILocalVariable(name: "self", arg: 1, scope: !2777, file: !702, line: 325, type: !803)
!2777 = distinct !DISubprogram(name: "as_ptr<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf77643139d42567fE", scope: !803, file: !702, line: 325, type: !2778, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !2780)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!2646, !803}
!2780 = !{!2776}
!2781 = !DILocation(line: 325, column: 25, scope: !2777, inlinedAt: !2782)
!2782 = distinct !DILocation(line: 104, column: 9, scope: !2770)
!2783 = !DILocation(line: 327, column: 6, scope: !2777, inlinedAt: !2782)
!2784 = !DILocation(line: 104, column: 9, scope: !2770)
!2785 = !DILocation(line: 105, column: 6, scope: !2770)
!2786 = distinct !DISubprogram(name: "as_ptr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf04fcd59fc5933c1E", scope: !739, file: !713, line: 103, type: !2787, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !2789)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!2659, !739}
!2789 = !{!2790}
!2790 = !DILocalVariable(name: "self", arg: 1, scope: !2786, file: !713, line: 103, type: !739)
!2791 = !DILocation(line: 103, column: 25, scope: !2786)
!2792 = !DILocalVariable(name: "self", arg: 1, scope: !2793, file: !702, line: 325, type: !742)
!2793 = distinct !DISubprogram(name: "as_ptr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5e32d10a43279f2eE", scope: !742, file: !702, line: 325, type: !2794, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !2796)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{!2659, !742}
!2796 = !{!2792}
!2797 = !DILocation(line: 325, column: 25, scope: !2793, inlinedAt: !2798)
!2798 = distinct !DILocation(line: 104, column: 9, scope: !2786)
!2799 = !DILocation(line: 327, column: 6, scope: !2793, inlinedAt: !2798)
!2800 = !DILocation(line: 104, column: 9, scope: !2786)
!2801 = !DILocation(line: 105, column: 6, scope: !2786)
!2802 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbdd312af9f64d83cE", scope: !828, file: !713, line: 114, type: !2803, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2806)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!1433, !2805}
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<[u8]>", baseType: !828, size: 64, align: 64, dwarfAddressSpace: 0)
!2806 = !{!2807}
!2807 = !DILocalVariable(name: "self", arg: 1, scope: !2802, file: !713, line: 114, type: !2805)
!2808 = !DILocation(line: 114, column: 32, scope: !2802)
!2809 = !DILocalVariable(name: "self", arg: 1, scope: !2810, file: !702, line: 373, type: !2813)
!2810 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h7b3815bbda6e63e1E", scope: !831, file: !702, line: 373, type: !2811, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2814)
!2811 = !DISubroutineType(types: !2812)
!2812 = !{!1433, !2813}
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u8]>", baseType: !831, size: 64, align: 64, dwarfAddressSpace: 0)
!2814 = !{!2809}
!2815 = !DILocation(line: 373, column: 36, scope: !2810, inlinedAt: !2816)
!2816 = distinct !DILocation(line: 117, column: 18, scope: !2802)
!2817 = !DILocation(line: 376, column: 20, scope: !2810, inlinedAt: !2816)
!2818 = !DILocation(line: 325, column: 25, scope: !2761, inlinedAt: !2819)
!2819 = distinct !DILocation(line: 376, column: 20, scope: !2810, inlinedAt: !2816)
!2820 = !DILocation(line: 327, column: 6, scope: !2761, inlinedAt: !2819)
!2821 = !DILocation(line: 377, column: 6, scope: !2810, inlinedAt: !2816)
!2822 = !DILocation(line: 117, column: 18, scope: !2802)
!2823 = !DILocation(line: 118, column: 6, scope: !2802)
!2824 = distinct !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h43909fabac992d1aE", scope: !717, file: !713, line: 72, type: !2825, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !727, retainedNodes: !45)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!717}
!2827 = !DILocation(line: 73, column: 20, scope: !2824)
!2828 = !DILocation(line: 73, column: 9, scope: !2824)
!2829 = !DILocation(line: 74, column: 6, scope: !2824)
!2830 = distinct !DISubprogram(name: "dangling<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17ha0c383fd86308f07E", scope: !28, file: !713, line: 72, type: !2831, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !45)
!2831 = !DISubroutineType(types: !2832)
!2832 = !{!28}
!2833 = !DILocation(line: 73, column: 20, scope: !2830)
!2834 = !DILocation(line: 73, column: 9, scope: !2830)
!2835 = !DILocation(line: 74, column: 6, scope: !2830)
!2836 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null12runtime_impl17h0c173e9648b2f39eE", scope: !2837, file: !2004, line: 35, type: !2838, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !2840)
!2837 = !DINamespace(name: "is_null", scope: !2005)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!571, !1308}
!2840 = !{!2841}
!2841 = !DILocalVariable(name: "ptr", arg: 1, scope: !2836, file: !2004, line: 35, type: !1308)
!2842 = !DILocation(line: 35, column: 25, scope: !2836)
!2843 = !DILocalVariable(name: "self", arg: 1, scope: !2844, file: !2004, line: 209, type: !1308)
!2844 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hb15d9579375e74c8E", scope: !2005, file: !2004, line: 209, type: !2845, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2847)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!9, !1308}
!2847 = !{!2843}
!2848 = !DILocation(line: 209, column: 17, scope: !2844, inlinedAt: !2849)
!2849 = distinct !DILocation(line: 36, column: 13, scope: !2836)
!2850 = !DILocalVariable(name: "self", arg: 1, scope: !2851, file: !2004, line: 57, type: !1308)
!2851 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h3effca8dbdf953f7E", scope: !2005, file: !2004, line: 57, type: !2852, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2855, retainedNodes: !2854)
!2852 = !DISubroutineType(types: !2853)
!2853 = !{!2009, !1308}
!2854 = !{!2850}
!2855 = !{!41, !2012}
!2856 = !DILocation(line: 57, column: 26, scope: !2851, inlinedAt: !2857)
!2857 = distinct !DILocation(line: 213, column: 33, scope: !2844, inlinedAt: !2849)
!2858 = !DILocation(line: 213, column: 18, scope: !2844, inlinedAt: !2849)
!2859 = !DILocation(line: 36, column: 13, scope: !2836)
!2860 = !DILocation(line: 37, column: 10, scope: !2836)
!2861 = distinct !DISubprogram(name: "is_null<str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h010291aa30e487a0E", scope: !2005, file: !2004, line: 33, type: !2862, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2864)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!571, !2694}
!2864 = !{!2865}
!2865 = !DILocalVariable(name: "self", arg: 1, scope: !2861, file: !2004, line: 33, type: !2694)
!2866 = !DILocation(line: 33, column: 26, scope: !2861)
!2867 = !DILocation(line: 50, column: 36, scope: !2861)
!2868 = !DILocation(line: 50, column: 18, scope: !2861)
!2869 = !DILocation(line: 51, column: 6, scope: !2861)
!2870 = distinct !DISubprogram(name: "is_null<[u8; 0]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h554c3e267abbbcbeE", scope: !2005, file: !2004, line: 33, type: !2871, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !727, retainedNodes: !2874)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{!571, !2873}
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [u8; 0]", baseType: !724, size: 64, align: 64, dwarfAddressSpace: 0)
!2874 = !{!2875}
!2875 = !DILocalVariable(name: "self", arg: 1, scope: !2870, file: !2004, line: 33, type: !2873)
!2876 = !DILocation(line: 33, column: 26, scope: !2870)
!2877 = !DILocation(line: 50, column: 36, scope: !2870)
!2878 = !DILocation(line: 50, column: 18, scope: !2870)
!2879 = !DILocation(line: 51, column: 6, scope: !2870)
!2880 = distinct !DISubprogram(name: "is_null<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h611bfd9ce03a98adE", scope: !2005, file: !2004, line: 33, type: !2881, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !2883)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!571, !2646}
!2883 = !{!2884}
!2884 = !DILocalVariable(name: "self", arg: 1, scope: !2880, file: !2004, line: 33, type: !2646)
!2885 = !DILocation(line: 33, column: 26, scope: !2880)
!2886 = !DILocation(line: 50, column: 36, scope: !2880)
!2887 = !DILocation(line: 50, column: 18, scope: !2880)
!2888 = !DILocation(line: 51, column: 6, scope: !2880)
!2889 = distinct !DISubprogram(name: "is_null<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7b0cebd5ce89c4baE", scope: !2005, file: !2004, line: 33, type: !2890, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !2892)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!571, !2659}
!2892 = !{!2893}
!2893 = !DILocalVariable(name: "self", arg: 1, scope: !2889, file: !2004, line: 33, type: !2659)
!2894 = !DILocation(line: 33, column: 26, scope: !2889)
!2895 = !DILocation(line: 50, column: 36, scope: !2889)
!2896 = !DILocation(line: 50, column: 18, scope: !2889)
!2897 = !DILocation(line: 51, column: 6, scope: !2889)
!2898 = distinct !DISubprogram(name: "is_null<[u8]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hab266658078c175cE", scope: !2005, file: !2004, line: 33, type: !2899, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2901)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{!571, !2681}
!2901 = !{!2902}
!2902 = !DILocalVariable(name: "self", arg: 1, scope: !2898, file: !2004, line: 33, type: !2681)
!2903 = !DILocation(line: 33, column: 26, scope: !2898)
!2904 = !DILocation(line: 50, column: 36, scope: !2898)
!2905 = !DILocation(line: 50, column: 18, scope: !2898)
!2906 = !DILocation(line: 51, column: 6, scope: !2898)
!2907 = distinct !DISubprogram(name: "from_raw_parts_mut<[i8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hd94a776a912c3c9cE", scope: !2909, file: !2908, line: 128, type: !2910, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1198, retainedNodes: !2912)
!2908 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1e1a461bde75de7a93357ca7e628f393")
!2909 = !DINamespace(name: "metadata", scope: !30)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!1991, !2009, !9}
!2912 = !{!2913, !2914}
!2913 = !DILocalVariable(name: "data_address", arg: 1, scope: !2907, file: !2908, line: 129, type: !2009)
!2914 = !DILocalVariable(name: "metadata", arg: 2, scope: !2907, file: !2908, line: 130, type: !9)
!2915 = !DILocation(line: 129, column: 5, scope: !2907)
!2916 = !DILocation(line: 130, column: 5, scope: !2907)
!2917 = !DILocation(line: 135, column: 36, scope: !2907)
!2918 = !DILocation(line: 135, column: 14, scope: !2907)
!2919 = !DILocation(line: 136, column: 2, scope: !2907)
!2920 = distinct !DISubprogram(name: "new_unchecked<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3872c35e961a081aE", scope: !720, file: !702, line: 197, type: !2921, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !727, retainedNodes: !2923)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!720, !2873}
!2923 = !{!2924}
!2924 = !DILocalVariable(name: "ptr", arg: 1, scope: !2920, file: !702, line: 197, type: !2873)
!2925 = !DILocation(line: 197, column: 39, scope: !2920)
!2926 = !DILocation(line: 200, column: 13, scope: !2920)
!2927 = !DILocalVariable(name: "ptr", arg: 1, scope: !2928, file: !1191, line: 2241, type: !2873)
!2928 = distinct !DISubprogram(name: "runtime<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17haad6106a538e1d2bE", scope: !2929, file: !1191, line: 2241, type: !2931, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !727, retainedNodes: !2933)
!2929 = !DINamespace(name: "new_unchecked", scope: !2930)
!2930 = !DINamespace(name: "{impl#3}", scope: !35)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{null, !2873}
!2933 = !{!2927}
!2934 = !DILocation(line: 2241, column: 39, scope: !2928, inlinedAt: !2935)
!2935 = distinct !DILocation(line: 200, column: 13, scope: !2920)
!2936 = !DILocation(line: 200, column: 134, scope: !2937, inlinedAt: !2935)
!2937 = !DILexicalBlockFile(scope: !2928, file: !702, discriminator: 0)
!2938 = !DILocation(line: 200, column: 133, scope: !2937, inlinedAt: !2935)
!2939 = !DILocation(line: 2242, column: 20, scope: !2928, inlinedAt: !2935)
!2940 = !DILocation(line: 2244, column: 21, scope: !2928, inlinedAt: !2935)
!2941 = !DILocation(line: 201, column: 13, scope: !2920)
!2942 = !DILocation(line: 203, column: 6, scope: !2920)
!2943 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h51d3e552a3d14ea4E", scope: !831, file: !702, line: 197, type: !2944, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2946)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{!831, !2681}
!2946 = !{!2947}
!2947 = !DILocalVariable(name: "ptr", arg: 1, scope: !2943, file: !702, line: 197, type: !2681)
!2948 = !DILocation(line: 197, column: 39, scope: !2943)
!2949 = !DILocation(line: 200, column: 13, scope: !2943)
!2950 = !DILocalVariable(name: "ptr", arg: 1, scope: !2951, file: !1191, line: 2241, type: !2681)
!2951 = distinct !DISubprogram(name: "runtime<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h9085382d6ff57dc7E", scope: !2929, file: !1191, line: 2241, type: !2952, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2954)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{null, !2681}
!2954 = !{!2950}
!2955 = !DILocation(line: 2241, column: 39, scope: !2951, inlinedAt: !2956)
!2956 = distinct !DILocation(line: 200, column: 13, scope: !2943)
!2957 = !DILocation(line: 200, column: 134, scope: !2958, inlinedAt: !2956)
!2958 = !DILexicalBlockFile(scope: !2951, file: !702, discriminator: 0)
!2959 = !DILocation(line: 200, column: 133, scope: !2958, inlinedAt: !2956)
!2960 = !DILocation(line: 2242, column: 20, scope: !2951, inlinedAt: !2956)
!2961 = !DILocation(line: 2244, column: 21, scope: !2951, inlinedAt: !2956)
!2962 = !DILocation(line: 201, column: 13, scope: !2943)
!2963 = !DILocation(line: 203, column: 6, scope: !2943)
!2964 = distinct !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h62e9a6650a9b11e5E", scope: !742, file: !702, line: 197, type: !2965, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !2967)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{!742, !2659}
!2967 = !{!2968}
!2968 = !DILocalVariable(name: "ptr", arg: 1, scope: !2964, file: !702, line: 197, type: !2659)
!2969 = !DILocation(line: 197, column: 39, scope: !2964)
!2970 = !DILocation(line: 200, column: 13, scope: !2964)
!2971 = !DILocalVariable(name: "ptr", arg: 1, scope: !2972, file: !1191, line: 2241, type: !2659)
!2972 = distinct !DISubprogram(name: "runtime<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h096aa246c0ce3bcbE", scope: !2929, file: !1191, line: 2241, type: !2973, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !2975)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{null, !2659}
!2975 = !{!2971}
!2976 = !DILocation(line: 2241, column: 39, scope: !2972, inlinedAt: !2977)
!2977 = distinct !DILocation(line: 200, column: 13, scope: !2964)
!2978 = !DILocation(line: 200, column: 134, scope: !2979, inlinedAt: !2977)
!2979 = !DILexicalBlockFile(scope: !2972, file: !702, discriminator: 0)
!2980 = !DILocation(line: 200, column: 133, scope: !2979, inlinedAt: !2977)
!2981 = !DILocation(line: 2242, column: 20, scope: !2972, inlinedAt: !2977)
!2982 = !DILocation(line: 2244, column: 21, scope: !2972, inlinedAt: !2977)
!2983 = !DILocation(line: 201, column: 13, scope: !2964)
!2984 = !DILocation(line: 203, column: 6, scope: !2964)
!2985 = distinct !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8270113c0a2fdf4cE", scope: !783, file: !702, line: 197, type: !2986, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2988)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!783, !2694}
!2988 = !{!2989}
!2989 = !DILocalVariable(name: "ptr", arg: 1, scope: !2985, file: !702, line: 197, type: !2694)
!2990 = !DILocation(line: 197, column: 39, scope: !2985)
!2991 = !DILocation(line: 200, column: 13, scope: !2985)
!2992 = !DILocalVariable(name: "ptr", arg: 1, scope: !2993, file: !1191, line: 2241, type: !2694)
!2993 = distinct !DISubprogram(name: "runtime<str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17h968a074c7eec7f30E", scope: !2929, file: !1191, line: 2241, type: !2994, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !2996)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{null, !2694}
!2996 = !{!2992}
!2997 = !DILocation(line: 2241, column: 39, scope: !2993, inlinedAt: !2998)
!2998 = distinct !DILocation(line: 200, column: 13, scope: !2985)
!2999 = !DILocation(line: 200, column: 134, scope: !3000, inlinedAt: !2998)
!3000 = !DILexicalBlockFile(scope: !2993, file: !702, discriminator: 0)
!3001 = !DILocation(line: 200, column: 133, scope: !3000, inlinedAt: !2998)
!3002 = !DILocation(line: 2242, column: 20, scope: !2993, inlinedAt: !2998)
!3003 = !DILocation(line: 2244, column: 21, scope: !2993, inlinedAt: !2998)
!3004 = !DILocation(line: 201, column: 13, scope: !2985)
!3005 = !DILocation(line: 203, column: 6, scope: !2985)
!3006 = distinct !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc2cb04b8c23666f6E", scope: !803, file: !702, line: 197, type: !3007, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !3009)
!3007 = !DISubroutineType(types: !3008)
!3008 = !{!803, !2646}
!3009 = !{!3010}
!3010 = !DILocalVariable(name: "ptr", arg: 1, scope: !3006, file: !702, line: 197, type: !2646)
!3011 = !DILocation(line: 197, column: 39, scope: !3006)
!3012 = !DILocation(line: 200, column: 13, scope: !3006)
!3013 = !DILocalVariable(name: "ptr", arg: 1, scope: !3014, file: !1191, line: 2241, type: !2646)
!3014 = distinct !DISubprogram(name: "runtime<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked7runtime17ha30c83c7a2cb5ae4E", scope: !2929, file: !1191, line: 2241, type: !3015, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !3017)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{null, !2646}
!3017 = !{!3013}
!3018 = !DILocation(line: 2241, column: 39, scope: !3014, inlinedAt: !3019)
!3019 = distinct !DILocation(line: 200, column: 13, scope: !3006)
!3020 = !DILocation(line: 200, column: 134, scope: !3021, inlinedAt: !3019)
!3021 = !DILexicalBlockFile(scope: !3014, file: !702, discriminator: 0)
!3022 = !DILocation(line: 200, column: 133, scope: !3021, inlinedAt: !3019)
!3023 = !DILocation(line: 2242, column: 20, scope: !3014, inlinedAt: !3019)
!3024 = !DILocation(line: 2244, column: 21, scope: !3014, inlinedAt: !3019)
!3025 = !DILocation(line: 201, column: 13, scope: !3006)
!3026 = !DILocation(line: 203, column: 6, scope: !3006)
!3027 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hb99e8f889e8dfec0E", scope: !34, file: !702, line: 222, type: !3028, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3043)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!3030, !1308}
!3030 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !84, file: !2, size: 64, align: 64, elements: !3031, templateParams: !45, identifier: "40bf7396ed145aacc40e0d0c04773dbd")
!3031 = !{!3032}
!3032 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3030, file: !2, size: 64, align: 64, elements: !3033, templateParams: !45, identifier: "eeb033a40d827b2fb1b289a299b1daaa", discriminator: !3042)
!3033 = !{!3034, !3038}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3032, file: !2, baseType: !3035, size: 64, align: 64, extraData: i64 0)
!3035 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3030, file: !2, size: 64, align: 64, elements: !45, templateParams: !3036, identifier: "59bb6ec5ce3a4c38ec68aa1f4fd694fb")
!3036 = !{!3037}
!3037 = !DITemplateTypeParameter(name: "T", type: !34)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3032, file: !2, baseType: !3039, size: 64, align: 64)
!3039 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3030, file: !2, size: 64, align: 64, elements: !3040, templateParams: !3036, identifier: "32ecf7e93f58a11d49805b82207ade55")
!3040 = !{!3041}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3039, file: !2, baseType: !34, size: 64, align: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, scope: !3030, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!3043 = !{!3044}
!3044 = !DILocalVariable(name: "ptr", arg: 1, scope: !3027, file: !702, line: 222, type: !1308)
!3045 = !DILocation(line: 222, column: 22, scope: !3027)
!3046 = !DILocation(line: 223, column: 13, scope: !3027)
!3047 = !DILocation(line: 223, column: 12, scope: !3027)
!3048 = !DILocation(line: 227, column: 13, scope: !3027)
!3049 = !DILocation(line: 223, column: 9, scope: !3027)
!3050 = !DILocation(line: 225, column: 27, scope: !3027)
!3051 = !DILocation(line: 225, column: 13, scope: !3027)
!3052 = !DILocation(line: 229, column: 6, scope: !3027)
!3053 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3ed6410c6c7dbb96E", scope: !831, file: !702, line: 448, type: !3054, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2709, retainedNodes: !3056)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!34, !831}
!3056 = !{!3057}
!3057 = !DILocalVariable(name: "self", arg: 1, scope: !3053, file: !702, line: 448, type: !831)
!3058 = !DILocation(line: 448, column: 26, scope: !3053)
!3059 = !DILocation(line: 325, column: 25, scope: !2761, inlinedAt: !3060)
!3060 = distinct !DILocation(line: 450, column: 41, scope: !3053)
!3061 = !DILocation(line: 327, column: 6, scope: !2761, inlinedAt: !3060)
!3062 = !DILocation(line: 450, column: 41, scope: !3053)
!3063 = !DILocation(line: 450, column: 18, scope: !3053)
!3064 = !DILocation(line: 451, column: 6, scope: !3053)
!3065 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hbde107f8170d262aE", scope: !34, file: !702, line: 448, type: !3066, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2709, retainedNodes: !3068)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{!34, !34}
!3068 = !{!3069}
!3069 = !DILocalVariable(name: "self", arg: 1, scope: !3065, file: !702, line: 448, type: !34)
!3070 = !DILocation(line: 448, column: 26, scope: !3065)
!3071 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !3072)
!3072 = distinct !DILocation(line: 450, column: 41, scope: !3065)
!3073 = !DILocation(line: 450, column: 18, scope: !3065)
!3074 = !DILocation(line: 451, column: 6, scope: !3065)
!3075 = distinct !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h6a19becc08bf6f15E", scope: !720, file: !702, line: 91, type: !3076, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !727, retainedNodes: !3078)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!720}
!3078 = !{!3079}
!3079 = !DILocalVariable(name: "ptr", scope: !3080, file: !702, line: 96, type: !2873, align: 8)
!3080 = distinct !DILexicalBlock(scope: !3075, file: !702, line: 96, column: 13)
!3081 = !DILocation(line: 96, column: 52, scope: !3075)
!3082 = !DILocalVariable(name: "addr", arg: 1, scope: !3083, file: !1904, line: 593, type: !9)
!3083 = distinct !DISubprogram(name: "invalid_mut<[u8; 0]>", linkageName: "_ZN4core3ptr11invalid_mut17h47d5fc4e7e21670aE", scope: !30, file: !1904, line: 593, type: !3084, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !727, retainedNodes: !3086)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!2873, !9}
!3086 = !{!3082}
!3087 = !DILocation(line: 593, column: 29, scope: !3083, inlinedAt: !3088)
!3088 = distinct !DILocation(line: 96, column: 23, scope: !3075)
!3089 = !DILocation(line: 599, column: 14, scope: !3083, inlinedAt: !3088)
!3090 = !DILocation(line: 96, column: 23, scope: !3075)
!3091 = !DILocation(line: 96, column: 17, scope: !3080)
!3092 = !DILocation(line: 97, column: 13, scope: !3080)
!3093 = !DILocation(line: 99, column: 6, scope: !3075)
!3094 = distinct !DISubprogram(name: "dangling<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hdfc682e11611b3e2E", scope: !34, file: !702, line: 91, type: !3095, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3097)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!34}
!3097 = !{!3098}
!3098 = !DILocalVariable(name: "ptr", scope: !3099, file: !702, line: 96, type: !1308, align: 8)
!3099 = distinct !DILexicalBlock(scope: !3094, file: !702, line: 96, column: 13)
!3100 = !DILocation(line: 96, column: 52, scope: !3094)
!3101 = !DILocalVariable(name: "addr", arg: 1, scope: !3102, file: !1904, line: 593, type: !9)
!3102 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17habbd9b2de9d6d73eE", scope: !30, file: !1904, line: 593, type: !3103, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3105)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!1308, !9}
!3105 = !{!3101}
!3106 = !DILocation(line: 593, column: 29, scope: !3102, inlinedAt: !3107)
!3107 = distinct !DILocation(line: 96, column: 23, scope: !3094)
!3108 = !DILocation(line: 599, column: 14, scope: !3102, inlinedAt: !3107)
!3109 = !DILocation(line: 96, column: 23, scope: !3094)
!3110 = !DILocation(line: 96, column: 17, scope: !3099)
!3111 = !DILocation(line: 97, column: 13, scope: !3099)
!3112 = !DILocation(line: 99, column: 6, scope: !3094)
!3113 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17ha9fd9e9e2469caa6E", scope: !831, file: !702, line: 547, type: !3114, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3116)
!3114 = !DISubroutineType(types: !3115)
!3115 = !{!1308, !831}
!3116 = !{!3117}
!3117 = !DILocalVariable(name: "self", arg: 1, scope: !3113, file: !702, line: 547, type: !831)
!3118 = !DILocation(line: 547, column: 29, scope: !3113)
!3119 = !DILocation(line: 548, column: 9, scope: !3113)
!3120 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !3121)
!3121 = distinct !DILocation(line: 548, column: 9, scope: !3113)
!3122 = !DILocation(line: 549, column: 6, scope: !3113)
!3123 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h1d994e881f6cd654E", scope: !831, file: !702, line: 527, type: !3054, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3124)
!3124 = !{!3125}
!3125 = !DILocalVariable(name: "self", arg: 1, scope: !3123, file: !702, line: 527, type: !831)
!3126 = !DILocation(line: 527, column: 34, scope: !3123)
!3127 = !DILocation(line: 325, column: 25, scope: !2761, inlinedAt: !3128)
!3128 = distinct !DILocation(line: 529, column: 41, scope: !3123)
!3129 = !DILocation(line: 327, column: 6, scope: !2761, inlinedAt: !3128)
!3130 = !DILocation(line: 529, column: 41, scope: !3123)
!3131 = !DILocalVariable(name: "self", arg: 1, scope: !3132, file: !2004, line: 2014, type: !2681)
!3132 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h064466e031db3f47E", scope: !3133, file: !2004, line: 2014, type: !3134, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3136)
!3133 = !DINamespace(name: "{impl#1}", scope: !2006)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{!1308, !2681}
!3136 = !{!3131}
!3137 = !DILocation(line: 2014, column: 29, scope: !3132, inlinedAt: !3138)
!3138 = distinct !DILocation(line: 529, column: 41, scope: !3123)
!3139 = !DILocation(line: 529, column: 18, scope: !3123)
!3140 = !DILocation(line: 530, column: 6, scope: !3123)
!3141 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc47f999b0766f8edE", scope: !831, file: !702, line: 482, type: !3142, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3144)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!831, !34, !9}
!3144 = !{!3145, !3146}
!3145 = !DILocalVariable(name: "data", arg: 1, scope: !3141, file: !702, line: 482, type: !34)
!3146 = !DILocalVariable(name: "len", arg: 2, scope: !3141, file: !702, line: 482, type: !9)
!3147 = !DILocation(line: 482, column: 39, scope: !3141)
!3148 = !DILocation(line: 482, column: 57, scope: !3141)
!3149 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !3150)
!3150 = distinct !DILocation(line: 484, column: 70, scope: !3141)
!3151 = !DILocation(line: 484, column: 38, scope: !3141)
!3152 = !DILocation(line: 484, column: 18, scope: !3141)
!3153 = !DILocation(line: 485, column: 6, scope: !3141)
!3154 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3ptr9alignment9Alignment10as_nonzero17h403b42abfa1470b8E", scope: !174, file: !3155, line: 103, type: !3156, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3158)
!3155 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/alignment.rs", directory: "", checksumkind: CSK_MD5, checksum: "37cf36a2f689cdc9d0bb8d1d7bcc5eb1")
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!1836, !174}
!3158 = !{!3159}
!3159 = !DILocalVariable(name: "self", arg: 1, scope: !3154, file: !3155, line: 103, type: !174)
!3160 = !DILocation(line: 103, column: 29, scope: !3154)
!3161 = !DILocation(line: 105, column: 46, scope: !3154)
!3162 = !DILocation(line: 105, column: 18, scope: !3154)
!3163 = !DILocation(line: 106, column: 6, scope: !3154)
!3164 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3ptr9alignment9Alignment13new_unchecked17he86b18bd5fec2cb9E", scope: !174, file: !3155, line: 78, type: !3165, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3167)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!174, !9}
!3167 = !{!3168}
!3168 = !DILocalVariable(name: "align", arg: 1, scope: !3164, file: !3155, line: 78, type: !9)
!3169 = !DILocation(line: 78, column: 39, scope: !3164)
!3170 = !DILocation(line: 81, column: 13, scope: !3164)
!3171 = !DILocalVariable(name: "align", arg: 1, scope: !3172, file: !1191, line: 2241, type: !9)
!3172 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr9alignment9Alignment13new_unchecked7runtime17h993560930a551479E", scope: !3173, file: !1191, line: 2241, type: !1850, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3175)
!3173 = !DINamespace(name: "new_unchecked", scope: !3174)
!3174 = !DINamespace(name: "{impl#0}", scope: !175)
!3175 = !{!3171}
!3176 = !DILocation(line: 2241, column: 39, scope: !3172, inlinedAt: !3177)
!3177 = distinct !DILocation(line: 81, column: 13, scope: !3164)
!3178 = !DILocalVariable(name: "self", arg: 1, scope: !3179, file: !1752, line: 2170, type: !9)
!3179 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h00feaeb49d8ab95eE", scope: !1753, file: !1752, line: 2170, type: !1284, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3180)
!3180 = !{!3178}
!3181 = !DILocation(line: 2170, column: 38, scope: !3179, inlinedAt: !3182)
!3182 = distinct !DILocation(line: 83, column: 35, scope: !3183, inlinedAt: !3177)
!3183 = !DILexicalBlockFile(scope: !3172, file: !3155, discriminator: 0)
!3184 = !DILocalVariable(name: "self", arg: 1, scope: !3185, file: !1752, line: 106, type: !9)
!3185 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h94acbaeb5f1528a0E", scope: !1753, file: !1752, line: 106, type: !3186, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3188)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!498, !9}
!3188 = !{!3184}
!3189 = !DILocation(line: 106, column: 33, scope: !3185, inlinedAt: !3190)
!3190 = distinct !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3182)
!3191 = !DILocation(line: 107, column: 13, scope: !3185, inlinedAt: !3190)
!3192 = !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3182)
!3193 = !DILocation(line: 2242, column: 20, scope: !3172, inlinedAt: !3177)
!3194 = !DILocation(line: 2244, column: 21, scope: !3172, inlinedAt: !3177)
!3195 = !DILocation(line: 89, column: 18, scope: !3164)
!3196 = !DILocation(line: 90, column: 6, scope: !3164)
!3197 = distinct !DISubprogram(name: "of<u8>", linkageName: "_ZN4core3ptr9alignment9Alignment2of17hd5f0d848ab7e7b8fE", scope: !174, file: !3155, line: 47, type: !3198, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !45)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!174}
!3200 = !DILocation(line: 49, column: 18, scope: !3197)
!3201 = !DILocation(line: 50, column: 6, scope: !3197)
!3202 = distinct !DISubprogram(name: "as_usize", linkageName: "_ZN4core3ptr9alignment9Alignment8as_usize17h83336db9ab22898bE", scope: !174, file: !3155, line: 96, type: !3203, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3205)
!3203 = !DISubroutineType(types: !3204)
!3204 = !{!9, !174}
!3205 = !{!3206}
!3206 = !DILocalVariable(name: "self", arg: 1, scope: !3202, file: !3155, line: 96, type: !174)
!3207 = !DILocation(line: 96, column: 27, scope: !3202)
!3208 = !DILocation(line: 97, column: 9, scope: !3202)
!3209 = !DILocation(line: 98, column: 6, scope: !3202)
!3210 = distinct !DISubprogram(name: "is_aligned<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h48803f580c0446d4E", scope: !3212, file: !3211, line: 1448, type: !1258, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !3214)
!3211 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "310ccb1a5479a9302756ed4297f2c8bd")
!3212 = !DINamespace(name: "{impl#0}", scope: !3213)
!3213 = !DINamespace(name: "const_ptr", scope: !30)
!3214 = !{!3215}
!3215 = !DILocalVariable(name: "self", arg: 1, scope: !3210, file: !3211, line: 1448, type: !1260)
!3216 = !DILocation(line: 1448, column: 29, scope: !3210)
!3217 = !DILocation(line: 1452, column: 9, scope: !3210)
!3218 = !DILocation(line: 1453, column: 6, scope: !3210)
!3219 = distinct !DISubprogram(name: "is_aligned<alloc::alloc::Global>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h851c7269c18c637eE", scope: !3212, file: !3211, line: 1448, type: !1219, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1224, retainedNodes: !3220)
!3220 = !{!3221}
!3221 = !DILocalVariable(name: "self", arg: 1, scope: !3219, file: !3211, line: 1448, type: !1221)
!3222 = !DILocation(line: 1448, column: 29, scope: !3219)
!3223 = !DILocation(line: 1452, column: 9, scope: !3219)
!3224 = !DILocation(line: 1453, column: 6, scope: !3219)
!3225 = distinct !DISubprogram(name: "is_aligned<alloc::string::String>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17h9423dce315c1306eE", scope: !3212, file: !3211, line: 1448, type: !1245, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !3226)
!3226 = !{!3227}
!3227 = !DILocalVariable(name: "self", arg: 1, scope: !3225, file: !3211, line: 1448, type: !1247)
!3228 = !DILocation(line: 1448, column: 29, scope: !3225)
!3229 = !DILocation(line: 1452, column: 9, scope: !3225)
!3230 = !DILocation(line: 1453, column: 6, scope: !3225)
!3231 = distinct !DISubprogram(name: "is_aligned<i8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17haee83d31f1c0c2faE", scope: !3212, file: !3211, line: 1448, type: !1193, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1198, retainedNodes: !3232)
!3232 = !{!3233}
!3233 = !DILocalVariable(name: "self", arg: 1, scope: !3231, file: !3211, line: 1448, type: !1195)
!3234 = !DILocation(line: 1448, column: 29, scope: !3231)
!3235 = !DILocation(line: 1452, column: 9, scope: !3231)
!3236 = !DILocation(line: 1453, column: 6, scope: !3231)
!3237 = distinct !DISubprogram(name: "is_aligned<core::option::Option<u16>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hd8077218c9a74275E", scope: !3212, file: !3211, line: 1448, type: !1271, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !3238)
!3238 = !{!3239}
!3239 = !DILocalVariable(name: "self", arg: 1, scope: !3237, file: !3211, line: 1448, type: !1273)
!3240 = !DILocation(line: 1448, column: 29, scope: !3237)
!3241 = !DILocation(line: 1452, column: 9, scope: !3237)
!3242 = !DILocation(line: 1453, column: 6, scope: !3237)
!3243 = distinct !DISubprogram(name: "is_aligned<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hf4183850a830a90aE", scope: !3212, file: !3211, line: 1448, type: !1206, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !3244)
!3244 = !{!3245}
!3245 = !DILocalVariable(name: "self", arg: 1, scope: !3243, file: !3211, line: 1448, type: !1208)
!3246 = !DILocation(line: 1448, column: 29, scope: !3243)
!3247 = !DILocation(line: 1452, column: 9, scope: !3243)
!3248 = !DILocation(line: 1453, column: 6, scope: !3243)
!3249 = distinct !DISubprogram(name: "is_aligned<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10is_aligned17hf574e85fa51892e7E", scope: !3212, file: !3211, line: 1448, type: !1232, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !3250)
!3250 = !{!3251}
!3251 = !DILocalVariable(name: "self", arg: 1, scope: !3249, file: !3211, line: 1448, type: !1234)
!3252 = !DILocation(line: 1448, column: 29, scope: !3249)
!3253 = !DILocation(line: 1452, column: 9, scope: !3249)
!3254 = !DILocation(line: 1453, column: 6, scope: !3249)
!3255 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17ha0d96da057f9ab38E", scope: !3256, file: !3211, line: 1570, type: !3257, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3259)
!3256 = !DINamespace(name: "is_aligned_to", scope: !3212)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!571, !6, !9}
!3259 = !{!3260, !3261}
!3260 = !DILocalVariable(name: "ptr", arg: 1, scope: !3255, file: !3211, line: 1570, type: !6)
!3261 = !DILocalVariable(name: "align", arg: 2, scope: !3255, file: !3211, line: 1570, type: !9)
!3262 = !DILocation(line: 1570, column: 25, scope: !3255)
!3263 = !DILocation(line: 1570, column: 41, scope: !3255)
!3264 = !DILocalVariable(name: "self", arg: 1, scope: !3265, file: !3211, line: 203, type: !6)
!3265 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hfba644dd0d57d27eE", scope: !3212, file: !3211, line: 203, type: !3266, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3269, retainedNodes: !3268)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!9, !6}
!3268 = !{!3264}
!3269 = !{!978}
!3270 = !DILocation(line: 203, column: 17, scope: !3265, inlinedAt: !3271)
!3271 = distinct !DILocation(line: 1571, column: 13, scope: !3255)
!3272 = !DILocalVariable(name: "self", arg: 1, scope: !3273, file: !3211, line: 58, type: !6)
!3273 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h53d338aa723bfb0aE", scope: !3212, file: !3211, line: 58, type: !3274, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3277, retainedNodes: !3276)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{!6, !6}
!3276 = !{!3272}
!3277 = !{!978, !2012}
!3278 = !DILocation(line: 58, column: 26, scope: !3273, inlinedAt: !3279)
!3279 = distinct !DILocation(line: 207, column: 33, scope: !3265, inlinedAt: !3271)
!3280 = !DILocation(line: 207, column: 18, scope: !3265, inlinedAt: !3271)
!3281 = !DILocation(line: 1571, column: 26, scope: !3255)
!3282 = !DILocation(line: 1571, column: 13, scope: !3255)
!3283 = !DILocation(line: 1572, column: 10, scope: !3255)
!3284 = distinct !DISubprogram(name: "is_aligned_to<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h41e0600c4608126aE", scope: !3212, file: !3211, line: 1564, type: !3285, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !3287)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!571, !1260, !9}
!3287 = !{!3288, !3289}
!3288 = !DILocalVariable(name: "self", arg: 1, scope: !3284, file: !3211, line: 1564, type: !1260)
!3289 = !DILocalVariable(name: "align", arg: 2, scope: !3284, file: !3211, line: 1564, type: !9)
!3290 = !DILocation(line: 1564, column: 32, scope: !3284)
!3291 = !DILocation(line: 1564, column: 38, scope: !3284)
!3292 = !DILocation(line: 2170, column: 38, scope: !3179, inlinedAt: !3293)
!3293 = distinct !DILocation(line: 1565, column: 13, scope: !3284)
!3294 = !DILocation(line: 106, column: 33, scope: !3185, inlinedAt: !3295)
!3295 = distinct !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3293)
!3296 = !DILocation(line: 107, column: 13, scope: !3185, inlinedAt: !3295)
!3297 = !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3293)
!3298 = !DILocation(line: 1565, column: 12, scope: !3284)
!3299 = !DILocalVariable(name: "self", arg: 1, scope: !3300, file: !3211, line: 58, type: !1260)
!3300 = distinct !DISubprogram(name: "cast<core::slice::iter::Iter<u8>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h4b3eb15a4283fd66E", scope: !3212, file: !3211, line: 58, type: !3301, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3304, retainedNodes: !3303)
!3301 = !DISubroutineType(types: !3302)
!3302 = !{!6, !1260}
!3303 = !{!3299}
!3304 = !{!1264, !2012}
!3305 = !DILocation(line: 58, column: 26, scope: !3300, inlinedAt: !3306)
!3306 = distinct !DILocation(line: 1584, column: 37, scope: !3284)
!3307 = !DILocation(line: 1584, column: 36, scope: !3284)
!3308 = !DILocation(line: 1584, column: 18, scope: !3284)
!3309 = !DILocation(line: 1585, column: 6, scope: !3284)
!3310 = !DILocation(line: 1566, column: 13, scope: !3284)
!3311 = distinct !DISubprogram(name: "is_aligned_to<alloc::alloc::Global>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h42b2fb6fd8f51ddeE", scope: !3212, file: !3211, line: 1564, type: !3312, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1224, retainedNodes: !3314)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{!571, !1221, !9}
!3314 = !{!3315, !3316}
!3315 = !DILocalVariable(name: "self", arg: 1, scope: !3311, file: !3211, line: 1564, type: !1221)
!3316 = !DILocalVariable(name: "align", arg: 2, scope: !3311, file: !3211, line: 1564, type: !9)
!3317 = !DILocation(line: 1564, column: 32, scope: !3311)
!3318 = !DILocation(line: 1564, column: 38, scope: !3311)
!3319 = !DILocation(line: 2170, column: 38, scope: !3179, inlinedAt: !3320)
!3320 = distinct !DILocation(line: 1565, column: 13, scope: !3311)
!3321 = !DILocation(line: 106, column: 33, scope: !3185, inlinedAt: !3322)
!3322 = distinct !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3320)
!3323 = !DILocation(line: 107, column: 13, scope: !3185, inlinedAt: !3322)
!3324 = !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3320)
!3325 = !DILocation(line: 1565, column: 12, scope: !3311)
!3326 = !DILocalVariable(name: "self", arg: 1, scope: !3327, file: !3211, line: 58, type: !1221)
!3327 = distinct !DISubprogram(name: "cast<alloc::alloc::Global, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb698e4f919354a92E", scope: !3212, file: !3211, line: 58, type: !3328, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3331, retainedNodes: !3330)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!6, !1221}
!3330 = !{!3326}
!3331 = !{!1225, !2012}
!3332 = !DILocation(line: 58, column: 26, scope: !3327, inlinedAt: !3333)
!3333 = distinct !DILocation(line: 1584, column: 37, scope: !3311)
!3334 = !DILocation(line: 1584, column: 36, scope: !3311)
!3335 = !DILocation(line: 1584, column: 18, scope: !3311)
!3336 = !DILocation(line: 1585, column: 6, scope: !3311)
!3337 = !DILocation(line: 1566, column: 13, scope: !3311)
!3338 = distinct !DISubprogram(name: "is_aligned_to<core::option::Option<u16>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h7fc401089dc5c3f2E", scope: !3212, file: !3211, line: 1564, type: !3339, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !3341)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!571, !1273, !9}
!3341 = !{!3342, !3343}
!3342 = !DILocalVariable(name: "self", arg: 1, scope: !3338, file: !3211, line: 1564, type: !1273)
!3343 = !DILocalVariable(name: "align", arg: 2, scope: !3338, file: !3211, line: 1564, type: !9)
!3344 = !DILocation(line: 1564, column: 32, scope: !3338)
!3345 = !DILocation(line: 1564, column: 38, scope: !3338)
!3346 = !DILocation(line: 2170, column: 38, scope: !3179, inlinedAt: !3347)
!3347 = distinct !DILocation(line: 1565, column: 13, scope: !3338)
!3348 = !DILocation(line: 106, column: 33, scope: !3185, inlinedAt: !3349)
!3349 = distinct !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3347)
!3350 = !DILocation(line: 107, column: 13, scope: !3185, inlinedAt: !3349)
!3351 = !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3347)
!3352 = !DILocation(line: 1565, column: 12, scope: !3338)
!3353 = !DILocalVariable(name: "self", arg: 1, scope: !3354, file: !3211, line: 58, type: !1273)
!3354 = distinct !DISubprogram(name: "cast<core::option::Option<u16>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h7c653cceeeacbc94E", scope: !3212, file: !3211, line: 58, type: !3355, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3358, retainedNodes: !3357)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!6, !1273}
!3357 = !{!3353}
!3358 = !{!1277, !2012}
!3359 = !DILocation(line: 58, column: 26, scope: !3354, inlinedAt: !3360)
!3360 = distinct !DILocation(line: 1584, column: 37, scope: !3338)
!3361 = !DILocation(line: 1584, column: 36, scope: !3338)
!3362 = !DILocation(line: 1584, column: 18, scope: !3338)
!3363 = !DILocation(line: 1585, column: 6, scope: !3338)
!3364 = !DILocation(line: 1566, column: 13, scope: !3338)
!3365 = distinct !DISubprogram(name: "is_aligned_to<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17habf6aa2c78824367E", scope: !3212, file: !3211, line: 1564, type: !3366, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !3368)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!571, !1208, !9}
!3368 = !{!3369, !3370}
!3369 = !DILocalVariable(name: "self", arg: 1, scope: !3365, file: !3211, line: 1564, type: !1208)
!3370 = !DILocalVariable(name: "align", arg: 2, scope: !3365, file: !3211, line: 1564, type: !9)
!3371 = !DILocation(line: 1564, column: 32, scope: !3365)
!3372 = !DILocation(line: 1564, column: 38, scope: !3365)
!3373 = !DILocation(line: 2170, column: 38, scope: !3179, inlinedAt: !3374)
!3374 = distinct !DILocation(line: 1565, column: 13, scope: !3365)
!3375 = !DILocation(line: 106, column: 33, scope: !3185, inlinedAt: !3376)
!3376 = distinct !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3374)
!3377 = !DILocation(line: 107, column: 13, scope: !3185, inlinedAt: !3376)
!3378 = !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3374)
!3379 = !DILocation(line: 1565, column: 12, scope: !3365)
!3380 = !DILocalVariable(name: "self", arg: 1, scope: !3381, file: !3211, line: 58, type: !1208)
!3381 = distinct !DISubprogram(name: "cast<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h803289c827cc5d84E", scope: !3212, file: !3211, line: 58, type: !3382, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3385, retainedNodes: !3384)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!6, !1208}
!3384 = !{!3380}
!3385 = !{!1212, !2012}
!3386 = !DILocation(line: 58, column: 26, scope: !3381, inlinedAt: !3387)
!3387 = distinct !DILocation(line: 1584, column: 37, scope: !3365)
!3388 = !DILocation(line: 1584, column: 36, scope: !3365)
!3389 = !DILocation(line: 1584, column: 18, scope: !3365)
!3390 = !DILocation(line: 1585, column: 6, scope: !3365)
!3391 = !DILocation(line: 1566, column: 13, scope: !3365)
!3392 = distinct !DISubprogram(name: "is_aligned_to<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hd8e3bce9ee186d37E", scope: !3212, file: !3211, line: 1564, type: !3393, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !3395)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!571, !1234, !9}
!3395 = !{!3396, !3397}
!3396 = !DILocalVariable(name: "self", arg: 1, scope: !3392, file: !3211, line: 1564, type: !1234)
!3397 = !DILocalVariable(name: "align", arg: 2, scope: !3392, file: !3211, line: 1564, type: !9)
!3398 = !DILocation(line: 1564, column: 32, scope: !3392)
!3399 = !DILocation(line: 1564, column: 38, scope: !3392)
!3400 = !DILocation(line: 2170, column: 38, scope: !3179, inlinedAt: !3401)
!3401 = distinct !DILocation(line: 1565, column: 13, scope: !3392)
!3402 = !DILocation(line: 106, column: 33, scope: !3185, inlinedAt: !3403)
!3403 = distinct !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3401)
!3404 = !DILocation(line: 107, column: 13, scope: !3185, inlinedAt: !3403)
!3405 = !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3401)
!3406 = !DILocation(line: 1565, column: 12, scope: !3392)
!3407 = !DILocalVariable(name: "self", arg: 1, scope: !3408, file: !3211, line: 58, type: !1234)
!3408 = distinct !DISubprogram(name: "cast<alloc::boxed::Box<[u8], alloc::alloc::Global>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he14410ba243036aaE", scope: !3212, file: !3211, line: 58, type: !3409, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3412, retainedNodes: !3411)
!3409 = !DISubroutineType(types: !3410)
!3410 = !{!6, !1234}
!3411 = !{!3407}
!3412 = !{!1238, !2012}
!3413 = !DILocation(line: 58, column: 26, scope: !3408, inlinedAt: !3414)
!3414 = distinct !DILocation(line: 1584, column: 37, scope: !3392)
!3415 = !DILocation(line: 1584, column: 36, scope: !3392)
!3416 = !DILocation(line: 1584, column: 18, scope: !3392)
!3417 = !DILocation(line: 1585, column: 6, scope: !3392)
!3418 = !DILocation(line: 1566, column: 13, scope: !3392)
!3419 = distinct !DISubprogram(name: "is_aligned_to<i8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17he4f18ebe232b39b8E", scope: !3212, file: !3211, line: 1564, type: !3420, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1198, retainedNodes: !3422)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!571, !1195, !9}
!3422 = !{!3423, !3424}
!3423 = !DILocalVariable(name: "self", arg: 1, scope: !3419, file: !3211, line: 1564, type: !1195)
!3424 = !DILocalVariable(name: "align", arg: 2, scope: !3419, file: !3211, line: 1564, type: !9)
!3425 = !DILocation(line: 1564, column: 32, scope: !3419)
!3426 = !DILocation(line: 1564, column: 38, scope: !3419)
!3427 = !DILocation(line: 2170, column: 38, scope: !3179, inlinedAt: !3428)
!3428 = distinct !DILocation(line: 1565, column: 13, scope: !3419)
!3429 = !DILocation(line: 106, column: 33, scope: !3185, inlinedAt: !3430)
!3430 = distinct !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3428)
!3431 = !DILocation(line: 107, column: 13, scope: !3185, inlinedAt: !3430)
!3432 = !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3428)
!3433 = !DILocation(line: 1565, column: 12, scope: !3419)
!3434 = !DILocalVariable(name: "self", arg: 1, scope: !3435, file: !3211, line: 58, type: !1195)
!3435 = distinct !DISubprogram(name: "cast<i8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h47eb8fbaa5c9f1c4E", scope: !3212, file: !3211, line: 58, type: !3436, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2011, retainedNodes: !3438)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!6, !1195}
!3438 = !{!3434}
!3439 = !DILocation(line: 58, column: 26, scope: !3435, inlinedAt: !3440)
!3440 = distinct !DILocation(line: 1584, column: 37, scope: !3419)
!3441 = !DILocation(line: 1584, column: 36, scope: !3419)
!3442 = !DILocation(line: 1584, column: 18, scope: !3419)
!3443 = !DILocation(line: 1585, column: 6, scope: !3419)
!3444 = !DILocation(line: 1566, column: 13, scope: !3419)
!3445 = distinct !DISubprogram(name: "is_aligned_to<alloc::string::String>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hee5d6e60e6207424E", scope: !3212, file: !3211, line: 1564, type: !3446, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !3448)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!571, !1247, !9}
!3448 = !{!3449, !3450}
!3449 = !DILocalVariable(name: "self", arg: 1, scope: !3445, file: !3211, line: 1564, type: !1247)
!3450 = !DILocalVariable(name: "align", arg: 2, scope: !3445, file: !3211, line: 1564, type: !9)
!3451 = !DILocation(line: 1564, column: 32, scope: !3445)
!3452 = !DILocation(line: 1564, column: 38, scope: !3445)
!3453 = !DILocation(line: 2170, column: 38, scope: !3179, inlinedAt: !3454)
!3454 = distinct !DILocation(line: 1565, column: 13, scope: !3445)
!3455 = !DILocation(line: 106, column: 33, scope: !3185, inlinedAt: !3456)
!3456 = distinct !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3454)
!3457 = !DILocation(line: 107, column: 13, scope: !3185, inlinedAt: !3456)
!3458 = !DILocation(line: 2171, column: 13, scope: !3179, inlinedAt: !3454)
!3459 = !DILocation(line: 1565, column: 12, scope: !3445)
!3460 = !DILocalVariable(name: "self", arg: 1, scope: !3461, file: !3211, line: 58, type: !1247)
!3461 = distinct !DISubprogram(name: "cast<alloc::string::String, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h9e0f3a212615cdc2E", scope: !3212, file: !3211, line: 58, type: !3462, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3465, retainedNodes: !3464)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!6, !1247}
!3464 = !{!3460}
!3465 = !{!1251, !2012}
!3466 = !DILocation(line: 58, column: 26, scope: !3461, inlinedAt: !3467)
!3467 = distinct !DILocation(line: 1584, column: 37, scope: !3445)
!3468 = !DILocation(line: 1584, column: 36, scope: !3445)
!3469 = !DILocation(line: 1584, column: 18, scope: !3445)
!3470 = !DILocation(line: 1585, column: 6, scope: !3445)
!3471 = !DILocation(line: 1566, column: 13, scope: !3445)
!3472 = distinct !DISubprogram(name: "read_unaligned<usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$14read_unaligned17h22b8291af998f3b7E", scope: !3212, file: !3211, line: 1234, type: !1931, scopeLine: 1234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !3473)
!3473 = !{!3474}
!3474 = !DILocalVariable(name: "self", arg: 1, scope: !3472, file: !3211, line: 1234, type: !1933)
!3475 = !DILocation(line: 1234, column: 40, scope: !3472)
!3476 = !DILocation(line: 1239, column: 18, scope: !3472)
!3477 = !DILocation(line: 1240, column: 6, scope: !3472)
!3478 = distinct !DISubprogram(name: "copy_to_nonoverlapping<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17hcc2e138dd4a4e914E", scope: !3212, file: !3211, line: 1274, type: !1306, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3479)
!3479 = !{!3480, !3481, !3482}
!3480 = !DILocalVariable(name: "self", arg: 1, scope: !3478, file: !3211, line: 1274, type: !38)
!3481 = !DILocalVariable(name: "dest", arg: 2, scope: !3478, file: !3211, line: 1274, type: !1308)
!3482 = !DILocalVariable(name: "count", arg: 3, scope: !3478, file: !3211, line: 1274, type: !9)
!3483 = !DILocation(line: 1274, column: 48, scope: !3478)
!3484 = !DILocation(line: 1274, column: 54, scope: !3478)
!3485 = !DILocation(line: 1274, column: 68, scope: !3478)
!3486 = !DILocation(line: 1279, column: 18, scope: !3478)
!3487 = !DILocation(line: 1280, column: 6, scope: !3478)
!3488 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17hf5a989fa79446e34E", scope: !3489, file: !3211, line: 36, type: !3490, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3492)
!3489 = !DINamespace(name: "is_null", scope: !3212)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!571, !38}
!3492 = !{!3493}
!3493 = !DILocalVariable(name: "ptr", arg: 1, scope: !3488, file: !3211, line: 36, type: !38)
!3494 = !DILocation(line: 36, column: 25, scope: !3488)
!3495 = !DILocalVariable(name: "self", arg: 1, scope: !3496, file: !3211, line: 203, type: !38)
!3496 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1753980631a1cff0E", scope: !3212, file: !3211, line: 203, type: !3497, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3499)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!9, !38}
!3499 = !{!3495}
!3500 = !DILocation(line: 203, column: 17, scope: !3496, inlinedAt: !3501)
!3501 = distinct !DILocation(line: 37, column: 13, scope: !3488)
!3502 = !DILocalVariable(name: "self", arg: 1, scope: !3503, file: !3211, line: 58, type: !38)
!3503 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h39fe4d19e68ef4d7E", scope: !3212, file: !3211, line: 58, type: !3504, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2855, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!6, !38}
!3506 = !{!3502}
!3507 = !DILocation(line: 58, column: 26, scope: !3503, inlinedAt: !3508)
!3508 = distinct !DILocation(line: 207, column: 33, scope: !3496, inlinedAt: !3501)
!3509 = !DILocation(line: 207, column: 18, scope: !3496, inlinedAt: !3501)
!3510 = !DILocation(line: 37, column: 13, scope: !3488)
!3511 = !DILocation(line: 38, column: 10, scope: !3488)
!3512 = distinct !DISubprogram(name: "is_null<core::option::Option<u16>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h1b460fa366e2e140E", scope: !3212, file: !3211, line: 34, type: !1271, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1276, retainedNodes: !3513)
!3513 = !{!3514}
!3514 = !DILocalVariable(name: "self", arg: 1, scope: !3512, file: !3211, line: 34, type: !1273)
!3515 = !DILocation(line: 34, column: 26, scope: !3512)
!3516 = !DILocation(line: 51, column: 36, scope: !3512)
!3517 = !DILocation(line: 51, column: 18, scope: !3512)
!3518 = !DILocation(line: 52, column: 6, scope: !3512)
!3519 = distinct !DISubprogram(name: "is_null<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h2b08a9d8a36f86a9E", scope: !3212, file: !3211, line: 34, type: !1258, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1263, retainedNodes: !3520)
!3520 = !{!3521}
!3521 = !DILocalVariable(name: "self", arg: 1, scope: !3519, file: !3211, line: 34, type: !1260)
!3522 = !DILocation(line: 34, column: 26, scope: !3519)
!3523 = !DILocation(line: 51, column: 36, scope: !3519)
!3524 = !DILocation(line: 51, column: 18, scope: !3519)
!3525 = !DILocation(line: 52, column: 6, scope: !3519)
!3526 = distinct !DISubprogram(name: "is_null<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hbce60e723f328289E", scope: !3212, file: !3211, line: 34, type: !1232, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !3527)
!3527 = !{!3528}
!3528 = !DILocalVariable(name: "self", arg: 1, scope: !3526, file: !3211, line: 34, type: !1234)
!3529 = !DILocation(line: 34, column: 26, scope: !3526)
!3530 = !DILocation(line: 51, column: 36, scope: !3526)
!3531 = !DILocation(line: 51, column: 18, scope: !3526)
!3532 = !DILocation(line: 52, column: 6, scope: !3526)
!3533 = distinct !DISubprogram(name: "is_null<alloc::alloc::Global>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hc241c24205100b20E", scope: !3212, file: !3211, line: 34, type: !1219, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1224, retainedNodes: !3534)
!3534 = !{!3535}
!3535 = !DILocalVariable(name: "self", arg: 1, scope: !3533, file: !3211, line: 34, type: !1221)
!3536 = !DILocation(line: 34, column: 26, scope: !3533)
!3537 = !DILocation(line: 51, column: 36, scope: !3533)
!3538 = !DILocation(line: 51, column: 18, scope: !3533)
!3539 = !DILocation(line: 52, column: 6, scope: !3533)
!3540 = distinct !DISubprogram(name: "is_null<alloc::string::String>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hcc8584ea6a3199b6E", scope: !3212, file: !3211, line: 34, type: !1245, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1250, retainedNodes: !3541)
!3541 = !{!3542}
!3542 = !DILocalVariable(name: "self", arg: 1, scope: !3540, file: !3211, line: 34, type: !1247)
!3543 = !DILocation(line: 34, column: 26, scope: !3540)
!3544 = !DILocation(line: 51, column: 36, scope: !3540)
!3545 = !DILocation(line: 51, column: 18, scope: !3540)
!3546 = !DILocation(line: 52, column: 6, scope: !3540)
!3547 = distinct !DISubprogram(name: "is_null<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdaa273b9fa89c3ccE", scope: !3212, file: !3211, line: 34, type: !1206, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !3548)
!3548 = !{!3549}
!3549 = !DILocalVariable(name: "self", arg: 1, scope: !3547, file: !3211, line: 34, type: !1208)
!3550 = !DILocation(line: 34, column: 26, scope: !3547)
!3551 = !DILocation(line: 51, column: 36, scope: !3547)
!3552 = !DILocation(line: 51, column: 18, scope: !3547)
!3553 = !DILocation(line: 52, column: 6, scope: !3547)
!3554 = distinct !DISubprogram(name: "is_null<i8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17he3b0d8532db41935E", scope: !3212, file: !3211, line: 34, type: !1193, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1198, retainedNodes: !3555)
!3555 = !{!3556}
!3556 = !DILocalVariable(name: "self", arg: 1, scope: !3554, file: !3211, line: 34, type: !1195)
!3557 = !DILocation(line: 34, column: 26, scope: !3554)
!3558 = !DILocation(line: 51, column: 36, scope: !3554)
!3559 = !DILocation(line: 51, column: 18, scope: !3554)
!3560 = !DILocation(line: 52, column: 6, scope: !3554)
!3561 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17hd9e8b89ae70426deE", scope: !3563, file: !3562, line: 11, type: !3564, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3566)
!3562 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/validations.rs", directory: "", checksumkind: CSK_MD5, checksum: "594fab0ff41599651f44986a26773248")
!3563 = !DINamespace(name: "validations", scope: !133)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{!498, !39, !498}
!3566 = !{!3567, !3568}
!3567 = !DILocalVariable(name: "byte", arg: 1, scope: !3561, file: !3562, line: 11, type: !39)
!3568 = !DILocalVariable(name: "width", arg: 2, scope: !3561, file: !3562, line: 11, type: !498)
!3569 = !DILocation(line: 11, column: 26, scope: !3561)
!3570 = !DILocation(line: 11, column: 36, scope: !3561)
!3571 = !DILocation(line: 12, column: 13, scope: !3561)
!3572 = !DILocation(line: 12, column: 5, scope: !3561)
!3573 = !DILocation(line: 13, column: 2, scope: !3561)
!3574 = distinct !DISubprogram(name: "utf8_is_cont_byte", linkageName: "_ZN4core3str11validations17utf8_is_cont_byte17h5f01b94942c567ceE", scope: !3563, file: !3562, line: 24, type: !3575, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3577)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!571, !39}
!3577 = !{!3578}
!3578 = !DILocalVariable(name: "byte", arg: 1, scope: !3574, file: !3562, line: 24, type: !39)
!3579 = !DILocation(line: 24, column: 39, scope: !3574)
!3580 = !DILocation(line: 25, column: 5, scope: !3574)
!3581 = !DILocation(line: 26, column: 2, scope: !3574)
!3582 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17he7bd8b4b9a7f1c90E", scope: !3563, file: !3562, line: 17, type: !3583, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3585)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!498, !498, !39}
!3585 = !{!3586, !3587}
!3586 = !DILocalVariable(name: "ch", arg: 1, scope: !3582, file: !3562, line: 17, type: !498)
!3587 = !DILocalVariable(name: "byte", arg: 2, scope: !3582, file: !3562, line: 17, type: !39)
!3588 = !DILocation(line: 17, column: 29, scope: !3582)
!3589 = !DILocation(line: 17, column: 38, scope: !3582)
!3590 = !DILocation(line: 18, column: 5, scope: !3582)
!3591 = !DILocation(line: 18, column: 17, scope: !3582)
!3592 = !DILocation(line: 19, column: 2, scope: !3582)
!3593 = distinct !DISubprogram(name: "next_code_point_reverse<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations23next_code_point_reverse17hf7af2c7429af4f18E", scope: !3563, file: !3562, line: 79, type: !3594, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3641, retainedNodes: !3609)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!3596, !1691}
!3596 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !84, file: !2, size: 64, align: 32, elements: !3597, templateParams: !45, identifier: "ee0be0a99874a719f6035c262e95e378")
!3597 = !{!3598}
!3598 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3596, file: !2, size: 64, align: 32, elements: !3599, templateParams: !45, identifier: "c76489018d1649ea81bd9e90dc2b064f", discriminator: !3608)
!3599 = !{!3600, !3604}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3598, file: !2, baseType: !3601, size: 64, align: 32, extraData: i64 0)
!3601 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3596, file: !2, size: 64, align: 32, elements: !45, templateParams: !3602, identifier: "e3201174044a01d045990e4f182824eb")
!3602 = !{!3603}
!3603 = !DITemplateTypeParameter(name: "T", type: !498)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3598, file: !2, baseType: !3605, size: 64, align: 32, extraData: i64 1)
!3605 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3596, file: !2, size: 64, align: 32, elements: !3606, templateParams: !3602, identifier: "6f95dbb6c41f90b5fb145dcdc8a8b66b")
!3606 = !{!3607}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3605, file: !2, baseType: !498, size: 32, align: 32, offset: 32)
!3608 = !DIDerivedType(tag: DW_TAG_member, scope: !3596, file: !2, baseType: !498, size: 32, align: 32, flags: DIFlagArtificial)
!3609 = !{!3610, !3611, !3613, !3626, !3628, !3630, !3631, !3633, !3635, !3637, !3639}
!3610 = !DILocalVariable(name: "bytes", arg: 1, scope: !3593, file: !3562, line: 79, type: !1691)
!3611 = !DILocalVariable(name: "w", scope: !3612, file: !3562, line: 84, type: !39, align: 1)
!3612 = distinct !DILexicalBlock(scope: !3593, file: !3562, line: 84, column: 5)
!3613 = !DILocalVariable(name: "residual", scope: !3614, file: !3562, line: 84, type: !3615, align: 1)
!3614 = distinct !DILexicalBlock(scope: !3593, file: !3562, line: 84, column: 37)
!3615 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !84, file: !2, align: 8, elements: !3616, templateParams: !45, identifier: "408b6a901854cc394e9e4390e3d2eee3")
!3616 = !{!3617}
!3617 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3615, file: !2, align: 8, elements: !3618, templateParams: !45, identifier: "b6ebf9bbaddf871fdece39eacd5de71")
!3618 = !{!3619, !3622}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3617, file: !2, baseType: !3620, align: 8)
!3620 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3615, file: !2, align: 8, elements: !45, templateParams: !3621, identifier: "bfb087e65ff07b860c0abc55afcaac6")
!3621 = !{!877}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3617, file: !2, baseType: !3623, align: 8)
!3623 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3615, file: !2, align: 8, elements: !3624, templateParams: !3621, identifier: "5d285ae0a3e85ced404295514279bea9")
!3624 = !{!3625}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3623, file: !2, baseType: !507, align: 8)
!3626 = !DILocalVariable(name: "val", scope: !3627, file: !3562, line: 84, type: !567, align: 8)
!3627 = distinct !DILexicalBlock(scope: !3593, file: !3562, line: 84, column: 20)
!3628 = !DILocalVariable(name: "next_byte", scope: !3629, file: !3562, line: 85, type: !39, align: 1)
!3629 = distinct !DILexicalBlock(scope: !3593, file: !3562, line: 85, column: 9)
!3630 = !DILocalVariable(name: "next_byte", scope: !3629, file: !3562, line: 85, type: !567, align: 8)
!3631 = !DILocalVariable(name: "back_byte", scope: !3632, file: !3562, line: 86, type: !39, align: 1)
!3632 = distinct !DILexicalBlock(scope: !3593, file: !3562, line: 86, column: 9)
!3633 = !DILocalVariable(name: "ch", scope: !3634, file: !3562, line: 91, type: !498, align: 4)
!3634 = distinct !DILexicalBlock(scope: !3612, file: !3562, line: 91, column: 5)
!3635 = !DILocalVariable(name: "z", scope: !3636, file: !3562, line: 94, type: !39, align: 1)
!3636 = distinct !DILexicalBlock(scope: !3634, file: !3562, line: 94, column: 5)
!3637 = !DILocalVariable(name: "y", scope: !3638, file: !3562, line: 99, type: !39, align: 1)
!3638 = distinct !DILexicalBlock(scope: !3636, file: !3562, line: 99, column: 9)
!3639 = !DILocalVariable(name: "x", scope: !3640, file: !3562, line: 104, type: !39, align: 1)
!3640 = distinct !DILexicalBlock(scope: !3638, file: !3562, line: 104, column: 13)
!3641 = !{!3642}
!3642 = !DITemplateTypeParameter(name: "I", type: !559)
!3643 = !DILocation(line: 79, column: 53, scope: !3593)
!3644 = !DILocation(line: 84, column: 37, scope: !3614)
!3645 = !DILocation(line: 91, column: 9, scope: !3634)
!3646 = !DILocation(line: 84, column: 20, scope: !3593)
!3647 = !DILocation(line: 84, column: 20, scope: !3627)
!3648 = !DILocation(line: 85, column: 9, scope: !3629)
!3649 = !DILocation(line: 85, column: 22, scope: !3593)
!3650 = !DILocation(line: 84, column: 20, scope: !3614)
!3651 = !DILocation(line: 113, column: 2, scope: !3593)
!3652 = !{i32 0, i32 2}
!3653 = !DILocation(line: 86, column: 9, scope: !3593)
!3654 = !DILocation(line: 84, column: 9, scope: !3612)
!3655 = !DILocation(line: 86, column: 9, scope: !3632)
!3656 = !DILocation(line: 94, column: 23, scope: !3634)
!3657 = !DILocation(line: 94, column: 22, scope: !3634)
!3658 = !DILocation(line: 94, column: 9, scope: !3636)
!3659 = !DILocation(line: 95, column: 10, scope: !3636)
!3660 = !DILocation(line: 95, column: 5, scope: !3636)
!3661 = !DILocation(line: 96, column: 8, scope: !3636)
!3662 = !DILocation(line: 85, column: 9, scope: !3593)
!3663 = !DILocation(line: 85, column: 53, scope: !3629)
!3664 = !DILocation(line: 85, column: 48, scope: !3629)
!3665 = !DILocation(line: 1, column: 1, scope: !3666)
!3666 = !DILexicalBlockFile(scope: !3593, file: !3667, discriminator: 0)
!3667 = !DIFile(filename: "src/lib.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "692e1b5661ef2e6df6987a85b4a3a7c0")
!3668 = !DILocation(line: 110, column: 29, scope: !3636)
!3669 = !DILocation(line: 110, column: 10, scope: !3636)
!3670 = !DILocation(line: 110, column: 5, scope: !3636)
!3671 = !DILocation(line: 112, column: 10, scope: !3636)
!3672 = !DILocation(line: 112, column: 5, scope: !3636)
!3673 = !DILocation(line: 99, column: 27, scope: !3636)
!3674 = !DILocation(line: 99, column: 26, scope: !3636)
!3675 = !DILocation(line: 99, column: 13, scope: !3638)
!3676 = !DILocation(line: 100, column: 14, scope: !3638)
!3677 = !DILocation(line: 100, column: 9, scope: !3638)
!3678 = !DILocation(line: 101, column: 12, scope: !3638)
!3679 = !DILocation(line: 108, column: 33, scope: !3638)
!3680 = !DILocation(line: 108, column: 14, scope: !3638)
!3681 = !DILocation(line: 108, column: 9, scope: !3638)
!3682 = !DILocation(line: 96, column: 5, scope: !3636)
!3683 = !DILocation(line: 104, column: 31, scope: !3638)
!3684 = !DILocation(line: 104, column: 30, scope: !3638)
!3685 = !DILocation(line: 104, column: 17, scope: !3640)
!3686 = !DILocation(line: 105, column: 18, scope: !3640)
!3687 = !DILocation(line: 105, column: 13, scope: !3640)
!3688 = !DILocation(line: 106, column: 37, scope: !3640)
!3689 = !DILocation(line: 106, column: 18, scope: !3640)
!3690 = !DILocation(line: 106, column: 13, scope: !3640)
!3691 = !DILocation(line: 101, column: 9, scope: !3638)
!3692 = distinct !DISubprogram(name: "char_indices", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hf9419be13ac38af9E", scope: !3694, file: !3693, line: 839, type: !3695, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3701)
!3693 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e209e33bf0cbeda8e0f6a94101e8fb52")
!3694 = !DINamespace(name: "{impl#0}", scope: !133)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{!3697, !145}
!3697 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharIndices", scope: !556, file: !2, size: 192, align: 64, elements: !3698, templateParams: !45, identifier: "5ef4f1a2f1cd95bd1aa9394462c0f9ab")
!3698 = !{!3699, !3700}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "front_offset", scope: !3697, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !3697, file: !2, baseType: !555, size: 128, align: 64)
!3701 = !{!3702}
!3702 = !DILocalVariable(name: "self", arg: 1, scope: !3692, file: !3693, line: 839, type: !145)
!3703 = !DILocation(line: 839, column: 25, scope: !3692)
!3704 = !DILocation(line: 840, column: 46, scope: !3692)
!3705 = !DILocation(line: 840, column: 9, scope: !3692)
!3706 = !DILocation(line: 841, column: 6, scope: !3692)
!3707 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17hfe802aaf3da9e611E", scope: !3694, file: !3693, line: 507, type: !3708, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3719, retainedNodes: !3716)
!3708 = !DISubroutineType(types: !3709)
!3709 = !{!145, !145, !3710}
!3710 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !3711, file: !2, size: 64, align: 64, elements: !3712, templateParams: !3714, identifier: "99fed6f0a894aa5b34f9722931a161de")
!3711 = !DINamespace(name: "range", scope: !478)
!3712 = !{!3713}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3710, file: !2, baseType: !9, size: 64, align: 64)
!3714 = !{!3715}
!3715 = !DITemplateTypeParameter(name: "Idx", type: !9)
!3716 = !{!3717, !3718}
!3717 = !DILocalVariable(name: "self", arg: 1, scope: !3707, file: !3693, line: 507, type: !145)
!3718 = !DILocalVariable(name: "i", arg: 2, scope: !3707, file: !3693, line: 507, type: !3710)
!3719 = !{!3720}
!3720 = !DITemplateTypeParameter(name: "I", type: !3710)
!3721 = !DILocation(line: 507, column: 66, scope: !3707)
!3722 = !DILocation(line: 507, column: 73, scope: !3707)
!3723 = !DILocation(line: 511, column: 20, scope: !3707)
!3724 = !DILocation(line: 512, column: 6, scope: !3707)
!3725 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hd16e42a8ff3d48d3E", scope: !3694, file: !3693, line: 159, type: !3726, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3728)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!9, !145}
!3728 = !{!3729}
!3729 = !DILocalVariable(name: "self", arg: 1, scope: !3725, file: !3693, line: 159, type: !145)
!3730 = !DILocation(line: 159, column: 22, scope: !3725)
!3731 = !DILocalVariable(name: "self", arg: 1, scope: !3732, file: !3693, line: 325, type: !145)
!3732 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hb36f5883d09b4ed8E", scope: !3694, file: !3693, line: 325, type: !3733, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3735)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!1433, !145}
!3735 = !{!3731}
!3736 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !3737)
!3737 = distinct !DILocation(line: 160, column: 9, scope: !3725)
!3738 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !3737)
!3739 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !3737)
!3740 = !DILocation(line: 160, column: 9, scope: !3725)
!3741 = !DILocation(line: 161, column: 6, scope: !3725)
!3742 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hda4000287f8bce11E", scope: !3694, file: !3693, line: 782, type: !3743, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3745)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!555, !145}
!3745 = !{!3746}
!3746 = !DILocalVariable(name: "self", arg: 1, scope: !3742, file: !3693, line: 782, type: !145)
!3747 = !DILocation(line: 782, column: 18, scope: !3742)
!3748 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !3749)
!3749 = distinct !DILocation(line: 783, column: 23, scope: !3742)
!3750 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !3749)
!3751 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !3749)
!3752 = !DILocation(line: 783, column: 23, scope: !3742)
!3753 = !DILocation(line: 783, column: 9, scope: !3742)
!3754 = !DILocation(line: 784, column: 6, scope: !3742)
!3755 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h098534c0490344a9E", scope: !3694, file: !3693, line: 180, type: !3756, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3758)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!571, !145}
!3758 = !{!3759}
!3759 = !DILocalVariable(name: "self", arg: 1, scope: !3755, file: !3693, line: 180, type: !145)
!3760 = !DILocation(line: 180, column: 27, scope: !3755)
!3761 = !DILocation(line: 181, column: 9, scope: !3755)
!3762 = !DILocation(line: 182, column: 6, scope: !3755)
!3763 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3str4iter5Chars6as_str17hf978b6d0d8aeb1eeE", scope: !555, file: !3764, line: 112, type: !3765, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3768)
!3764 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "0135dff78ee04f1c615bb71321f8b1d8")
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!145, !3767}
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::iter::Chars", baseType: !555, size: 64, align: 64, dwarfAddressSpace: 0)
!3768 = !{!3769}
!3769 = !DILocalVariable(name: "self", arg: 1, scope: !3763, file: !3764, line: 112, type: !3767)
!3770 = !DILocation(line: 112, column: 19, scope: !3763)
!3771 = !DILocation(line: 114, column: 38, scope: !3763)
!3772 = !DILocation(line: 114, column: 18, scope: !3763)
!3773 = !DILocation(line: 115, column: 6, scope: !3763)
!3774 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h4a16bcbf4a5a581bE", scope: !3776, file: !3775, line: 194, type: !3778, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3784)
!3775 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "0d01d40f96f570ce44a4c94364e50bc0")
!3776 = !DINamespace(name: "{impl#7}", scope: !3777)
!3777 = !DINamespace(name: "traits", scope: !133)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!786, !3780, !786}
!3780 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !3711, file: !2, size: 128, align: 64, elements: !3781, templateParams: !3714, identifier: "a38539fb613303b2a542584743e0908e")
!3781 = !{!3782, !3783}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3780, file: !2, baseType: !9, size: 64, align: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3780, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3784 = !{!3785, !3786, !3787, !3789, !3791, !3793}
!3785 = !DILocalVariable(name: "self", arg: 1, scope: !3774, file: !3775, line: 194, type: !3780)
!3786 = !DILocalVariable(name: "slice", arg: 2, scope: !3774, file: !3775, line: 194, type: !786)
!3787 = !DILocalVariable(name: "slice", scope: !3788, file: !3775, line: 195, type: !834, align: 8)
!3788 = distinct !DILexicalBlock(scope: !3774, file: !3775, line: 195, column: 9)
!3789 = !DILocalVariable(name: "ptr", scope: !3790, file: !3775, line: 198, type: !38, align: 8)
!3790 = distinct !DILexicalBlock(scope: !3788, file: !3775, line: 198, column: 9)
!3791 = !DILocalVariable(name: "this", scope: !3792, file: !3775, line: 199, type: !3780, align: 8)
!3792 = distinct !DILexicalBlock(scope: !3788, file: !3775, line: 199, column: 13)
!3793 = !DILocalVariable(name: "len", scope: !3794, file: !3775, line: 213, type: !9, align: 8)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !3775, line: 213, column: 9)
!3795 = !DILocation(line: 194, column: 29, scope: !3774)
!3796 = !DILocation(line: 194, column: 35, scope: !3774)
!3797 = !DILocation(line: 199, column: 17, scope: !3792)
!3798 = !DILocation(line: 195, column: 21, scope: !3774)
!3799 = !DILocation(line: 195, column: 13, scope: !3788)
!3800 = !DILocation(line: 199, column: 24, scope: !3788)
!3801 = !DILocation(line: 200, column: 13, scope: !3792)
!3802 = !DILocalVariable(name: "this", arg: 1, scope: !3803, file: !1191, line: 2241, type: !3780)
!3803 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked7runtime17h8fae230b2011c8c2E", scope: !3804, file: !1191, line: 2241, type: !3805, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3807)
!3804 = !DINamespace(name: "get_unchecked", scope: !3776)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{null, !3780, !834}
!3807 = !{!3802, !3808}
!3808 = !DILocalVariable(name: "slice", arg: 2, scope: !3803, file: !1191, line: 2241, type: !834)
!3809 = !DILocation(line: 2241, column: 39, scope: !3803, inlinedAt: !3810)
!3810 = distinct !DILocation(line: 200, column: 13, scope: !3792)
!3811 = !DILocation(line: 209, column: 17, scope: !3812, inlinedAt: !3810)
!3812 = !DILexicalBlockFile(scope: !3803, file: !3775, discriminator: 0)
!3813 = !DILocation(line: 209, column: 55, scope: !3812, inlinedAt: !3810)
!3814 = !DILocation(line: 209, column: 43, scope: !3812, inlinedAt: !3810)
!3815 = !DILocation(line: 2242, column: 20, scope: !3803, inlinedAt: !3810)
!3816 = !DILocation(line: 2244, column: 21, scope: !3803, inlinedAt: !3810)
!3817 = !DILocation(line: 211, column: 13, scope: !3792)
!3818 = !DILocalVariable(name: "self", arg: 1, scope: !3819, file: !3211, line: 915, type: !38)
!3819 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6e1b5b20368bfd6dE", scope: !3212, file: !3211, line: 915, type: !3820, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3822)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!38, !38, !9}
!3822 = !{!3818, !3823}
!3823 = !DILocalVariable(name: "count", arg: 2, scope: !3819, file: !3211, line: 915, type: !9)
!3824 = !DILocation(line: 915, column: 29, scope: !3819, inlinedAt: !3825)
!3825 = distinct !DILocation(line: 211, column: 13, scope: !3792)
!3826 = !DILocation(line: 915, column: 35, scope: !3819, inlinedAt: !3825)
!3827 = !DILocalVariable(name: "self", arg: 1, scope: !3828, file: !3211, line: 460, type: !38)
!3828 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hc76b939ba756c939E", scope: !3212, file: !3211, line: 460, type: !3829, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !3832)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!38, !38, !3831}
!3831 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!3832 = !{!3827, !3833}
!3833 = !DILocalVariable(name: "count", arg: 2, scope: !3828, file: !3211, line: 460, type: !3831)
!3834 = !DILocation(line: 460, column: 32, scope: !3828, inlinedAt: !3835)
!3835 = distinct !DILocation(line: 920, column: 18, scope: !3819, inlinedAt: !3825)
!3836 = !DILocation(line: 460, column: 38, scope: !3828, inlinedAt: !3835)
!3837 = !DILocation(line: 465, column: 18, scope: !3828, inlinedAt: !3835)
!3838 = !DILocation(line: 198, column: 13, scope: !3790)
!3839 = !DILocation(line: 213, column: 19, scope: !3790)
!3840 = !DILocation(line: 213, column: 13, scope: !3794)
!3841 = !DILocation(line: 214, column: 9, scope: !3794)
!3842 = !DILocation(line: 215, column: 6, scope: !3774)
!3843 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h4d88ca9382837ba6E", scope: !3844, file: !3775, line: 366, type: !3845, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3847)
!3844 = !DINamespace(name: "{impl#9}", scope: !3777)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{!786, !3710, !786}
!3847 = !{!3848, !3849, !3850}
!3848 = !DILocalVariable(name: "self", arg: 1, scope: !3843, file: !3775, line: 366, type: !3710)
!3849 = !DILocalVariable(name: "slice", arg: 2, scope: !3843, file: !3775, line: 366, type: !786)
!3850 = !DILocalVariable(name: "len", scope: !3851, file: !3775, line: 367, type: !9, align: 8)
!3851 = distinct !DILexicalBlock(scope: !3843, file: !3775, line: 367, column: 9)
!3852 = !DILocation(line: 366, column: 29, scope: !3843)
!3853 = !DILocation(line: 366, column: 35, scope: !3843)
!3854 = !DILocation(line: 367, column: 19, scope: !3843)
!3855 = !DILocation(line: 367, column: 13, scope: !3851)
!3856 = !DILocation(line: 369, column: 18, scope: !3851)
!3857 = !DILocation(line: 370, column: 6, scope: !3843)
!3858 = distinct !DISubprogram(name: "index<core::ops::range::RangeFull>", linkageName: "_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h8c8952821cf88af3E", scope: !3859, file: !3775, line: 61, type: !3860, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3866, retainedNodes: !3863)
!3859 = !DINamespace(name: "{impl#4}", scope: !3777)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!145, !145, !3862, !882}
!3862 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !3711, file: !2, align: 8, elements: !45, identifier: "2578e5ed2799b1393561d58b20e2e6e2")
!3863 = !{!3864, !3865}
!3864 = !DILocalVariable(name: "self", arg: 1, scope: !3858, file: !3775, line: 61, type: !145)
!3865 = !DILocalVariable(name: "index", arg: 2, scope: !3858, file: !3775, line: 61, type: !3862)
!3866 = !{!3867}
!3867 = !DITemplateTypeParameter(name: "I", type: !3862)
!3868 = !DILocation(line: 61, column: 14, scope: !3858)
!3869 = !DILocation(line: 61, column: 21, scope: !3858)
!3870 = !DILocation(line: 62, column: 9, scope: !3858)
!3871 = !DILocation(line: 63, column: 6, scope: !3858)
!3872 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17h5cda99d6f95ed5c6E", scope: !3873, file: !3775, line: 118, type: !3874, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3876)
!3873 = !DINamespace(name: "{impl#6}", scope: !3777)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{!145, !3862, !145, !882}
!3876 = !{!3877, !3878}
!3877 = !DILocalVariable(name: "self", arg: 1, scope: !3872, file: !3775, line: 118, type: !3862)
!3878 = !DILocalVariable(name: "slice", arg: 2, scope: !3872, file: !3775, line: 118, type: !145)
!3879 = !DILocation(line: 118, column: 14, scope: !3872)
!3880 = !DILocation(line: 118, column: 20, scope: !3872)
!3881 = !DILocation(line: 120, column: 6, scope: !3872)
!3882 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17h75af16509ecede6dE", scope: !3884, file: !3883, line: 170, type: !3885, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3887)
!3883 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "197638d8a57725d685b49f7f7ce80004")
!3884 = !DINamespace(name: "converts", scope: !133)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!145, !1433}
!3887 = !{!3888}
!3888 = !DILocalVariable(name: "v", arg: 1, scope: !3882, file: !3883, line: 170, type: !1433)
!3889 = !DILocation(line: 170, column: 41, scope: !3882)
!3890 = !DILocation(line: 173, column: 14, scope: !3882)
!3891 = !DILocation(line: 174, column: 2, scope: !3882)
!3892 = distinct !DISubprogram(name: "from_utf8_unchecked_mut", linkageName: "_ZN4core3str8converts23from_utf8_unchecked_mut17had244af207d0d050E", scope: !3884, file: !3883, line: 197, type: !3893, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3903)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!3895, !3899}
!3895 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut str", file: !2, size: 128, align: 64, elements: !3896, templateParams: !45, identifier: "5a9563f597f3707a3b1d983c8a782f1")
!3896 = !{!3897, !3898}
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3895, file: !2, baseType: !148, size: 64, align: 64)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3895, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3899 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 128, align: 64, elements: !3900, templateParams: !45, identifier: "76f368a1641a25f5ea1dd03aa07d17c8")
!3900 = !{!3901, !3902}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3899, file: !2, baseType: !148, size: 64, align: 64)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3899, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3903 = !{!3904}
!3904 = !DILocalVariable(name: "v", arg: 1, scope: !3892, file: !3883, line: 197, type: !3899)
!3905 = !DILocation(line: 197, column: 45, scope: !3892)
!3906 = !DILocation(line: 203, column: 2, scope: !3892)
!3907 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN4core4char6decode12decode_utf1617h6d1a34466aa66eb0E", scope: !3909, file: !3908, line: 34, type: !3911, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3917, retainedNodes: !3919)
!3908 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/decode.rs", directory: "", checksumkind: CSK_MD5, checksum: "1db9c393d0fbf568aaf32559c42e6dd9")
!3909 = !DINamespace(name: "decode", scope: !3910)
!3910 = !DINamespace(name: "char", scope: !31)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!3913, !450}
!3913 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", scope: !3909, file: !2, size: 192, align: 64, elements: !3914, templateParams: !3917, identifier: "b0abf9d562a8289ec9ceaf157a0d15f")
!3914 = !{!3915, !3916}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !3913, file: !2, baseType: !450, size: 128, align: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3913, file: !2, baseType: !435, size: 32, align: 16, offset: 128)
!3917 = !{!3918}
!3918 = !DITemplateTypeParameter(name: "I", type: !450)
!3919 = !{!3920}
!3920 = !DILocalVariable(name: "iter", arg: 1, scope: !3907, file: !3908, line: 34, type: !450)
!3921 = !DILocation(line: 34, column: 57, scope: !3907)
!3922 = !DILocation(line: 35, column: 25, scope: !3907)
!3923 = !DILocation(line: 35, column: 48, scope: !3907)
!3924 = !DILocation(line: 35, column: 5, scope: !3907)
!3925 = !{i16 0, i16 2}
!3926 = !DILocation(line: 36, column: 2, scope: !3907)
!3927 = distinct !DISubprogram(name: "char_try_from_u32", linkageName: "_ZN4core4char7convert17char_try_from_u3217hf89f8c579f446a7cE", scope: !3929, file: !3928, line: 195, type: !3930, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3950)
!3928 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "cbb5820dcdd6ef5325442a32c721e3e7")
!3929 = !DINamespace(name: "convert", scope: !3910)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{!3932, !498}
!3932 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<char, core::char::convert::CharTryFromError>", scope: !848, file: !2, size: 32, align: 32, elements: !3933, templateParams: !45, identifier: "d773dd2086b31e93cff2957e07271073")
!3933 = !{!3934}
!3934 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3932, file: !2, size: 32, align: 32, elements: !3935, templateParams: !45, identifier: "d27988de09800648ee91c748b9bebf06", discriminator: !3949)
!3935 = !{!3936, !3945}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3934, file: !2, baseType: !3937, size: 32, align: 32)
!3937 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3932, file: !2, size: 32, align: 32, elements: !3938, templateParams: !3940, identifier: "9ecc2c8f325c834b71f00e1c206bf911")
!3938 = !{!3939}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3937, file: !2, baseType: !491, size: 32, align: 32)
!3940 = !{!541, !3941}
!3941 = !DITemplateTypeParameter(name: "E", type: !3942)
!3942 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharTryFromError", scope: !3929, file: !2, align: 8, elements: !3943, templateParams: !45, identifier: "6ce3729ffdd5b225d9eea359261cd4e5")
!3943 = !{!3944}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3942, file: !2, baseType: !7, align: 8)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3934, file: !2, baseType: !3946, size: 32, align: 32, extraData: i64 1114112)
!3946 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3932, file: !2, size: 32, align: 32, elements: !3947, templateParams: !3940, identifier: "e26567a5aa80bcd6662b3891b720fd54")
!3947 = !{!3948}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3946, file: !2, baseType: !3942, align: 8)
!3949 = !DIDerivedType(tag: DW_TAG_member, scope: !3932, file: !2, baseType: !498, size: 32, align: 32, flags: DIFlagArtificial)
!3950 = !{!3951}
!3951 = !DILocalVariable(name: "i", arg: 1, scope: !3927, file: !3928, line: 195, type: !498)
!3952 = !DILocation(line: 195, column: 28, scope: !3927)
!3953 = !DILocation(line: 209, column: 8, scope: !3927)
!3954 = !DILocalVariable(name: "self", arg: 1, scope: !3955, file: !1752, line: 1229, type: !498)
!3955 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_sub17h8ab7a6f0b16c5c15E", scope: !3956, file: !1752, line: 1229, type: !3957, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3959)
!3956 = !DINamespace(name: "{impl#8}", scope: !1706)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!498, !498, !498}
!3959 = !{!3954, !3960}
!3960 = !DILocalVariable(name: "rhs", arg: 2, scope: !3955, file: !1752, line: 1229, type: !498)
!3961 = !DILocation(line: 1229, column: 35, scope: !3955, inlinedAt: !3962)
!3962 = distinct !DILocation(line: 209, column: 8, scope: !3927)
!3963 = !DILocation(line: 1229, column: 41, scope: !3955, inlinedAt: !3962)
!3964 = !DILocation(line: 1230, column: 13, scope: !3955, inlinedAt: !3962)
!3965 = !DILocation(line: 213, column: 21, scope: !3927)
!3966 = !DILocation(line: 213, column: 9, scope: !3927)
!3967 = !DILocation(line: 209, column: 5, scope: !3927)
!3968 = !DILocation(line: 210, column: 9, scope: !3927)
!3969 = !DILocation(line: 215, column: 2, scope: !3927)
!3970 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17h8afc855a7be997e6E", scope: !3929, file: !3928, line: 24, type: !3971, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3973)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!491, !498}
!3973 = !{!3974}
!3974 = !DILocalVariable(name: "i", arg: 1, scope: !3970, file: !3928, line: 24, type: !498)
!3975 = !DILocation(line: 24, column: 47, scope: !3970)
!3976 = !DILocation(line: 26, column: 33, scope: !3970)
!3977 = !DILocation(line: 27, column: 2, scope: !3970)
!3978 = distinct !DISubprogram(name: "from_u32", linkageName: "_ZN4core4char7convert8from_u3217he5b1745bbf813e1eE", scope: !3929, file: !3928, line: 13, type: !3979, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3981)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!534, !498}
!3981 = !{!3982, !3983}
!3982 = !DILocalVariable(name: "i", arg: 1, scope: !3978, file: !3928, line: 13, type: !498)
!3983 = !DILocalVariable(name: "c", scope: !3984, file: !3928, line: 16, type: !491, align: 4)
!3984 = distinct !DILexicalBlock(scope: !3978, file: !3928, line: 16, column: 9)
!3985 = !DILocation(line: 13, column: 30, scope: !3978)
!3986 = !DILocation(line: 15, column: 11, scope: !3978)
!3987 = !DILocation(line: 15, column: 5, scope: !3978)
!3988 = !DILocation(line: 16, column: 12, scope: !3978)
!3989 = !DILocation(line: 16, column: 12, scope: !3984)
!3990 = !DILocation(line: 16, column: 18, scope: !3984)
!3991 = !DILocation(line: 16, column: 24, scope: !3978)
!3992 = !DILocation(line: 17, column: 19, scope: !3978)
!3993 = !DILocation(line: 19, column: 2, scope: !3978)
!3994 = distinct !DISubprogram(name: "encode_utf8_raw", linkageName: "_ZN4core4char7methods15encode_utf8_raw17h06669393e841a7e8E", scope: !3996, file: !3995, line: 1713, type: !3997, scopeLine: 1713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !3999)
!3995 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "6639fd939de0cc71e2551f3e27d008ab")
!3996 = !DINamespace(name: "methods", scope: !3910)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!3899, !498, !3899}
!3999 = !{!4000, !4001, !4002, !4004, !4007, !4009, !4010, !4012, !4013, !4014, !4016, !4017, !4018}
!4000 = !DILocalVariable(name: "code", arg: 1, scope: !3994, file: !3995, line: 1713, type: !498)
!4001 = !DILocalVariable(name: "dst", arg: 2, scope: !3994, file: !3995, line: 1713, type: !3899)
!4002 = !DILocalVariable(name: "len", scope: !4003, file: !3995, line: 1714, type: !9, align: 8)
!4003 = distinct !DILexicalBlock(scope: !3994, file: !3995, line: 1714, column: 5)
!4004 = !DILocalVariable(name: "a", scope: !4005, file: !3995, line: 1716, type: !4006, align: 8)
!4005 = distinct !DILexicalBlock(scope: !4003, file: !3995, line: 1716, column: 9)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!4007 = !DILocalVariable(name: "a", scope: !4008, file: !3995, line: 1719, type: !4006, align: 8)
!4008 = distinct !DILexicalBlock(scope: !4003, file: !3995, line: 1719, column: 9)
!4009 = !DILocalVariable(name: "b", scope: !4008, file: !3995, line: 1719, type: !4006, align: 8)
!4010 = !DILocalVariable(name: "a", scope: !4011, file: !3995, line: 1723, type: !4006, align: 8)
!4011 = distinct !DILexicalBlock(scope: !4003, file: !3995, line: 1723, column: 9)
!4012 = !DILocalVariable(name: "b", scope: !4011, file: !3995, line: 1723, type: !4006, align: 8)
!4013 = !DILocalVariable(name: "c", scope: !4011, file: !3995, line: 1723, type: !4006, align: 8)
!4014 = !DILocalVariable(name: "a", scope: !4015, file: !3995, line: 1728, type: !4006, align: 8)
!4015 = distinct !DILexicalBlock(scope: !4003, file: !3995, line: 1728, column: 9)
!4016 = !DILocalVariable(name: "b", scope: !4015, file: !3995, line: 1728, type: !4006, align: 8)
!4017 = !DILocalVariable(name: "c", scope: !4015, file: !3995, line: 1728, type: !4006, align: 8)
!4018 = !DILocalVariable(name: "d", scope: !4015, file: !3995, line: 1728, type: !4006, align: 8)
!4019 = !DILocation(line: 1713, column: 24, scope: !3994)
!4020 = !DILocation(line: 1713, column: 35, scope: !3994)
!4021 = !DILocation(line: 1714, column: 9, scope: !4003)
!4022 = !DILocation(line: 1714, column: 15, scope: !3994)
!4023 = !DILocation(line: 1715, column: 12, scope: !4003)
!4024 = !DILocation(line: 1715, column: 22, scope: !4003)
!4025 = !DILocation(line: 1715, column: 11, scope: !4003)
!4026 = !DILocation(line: 1715, column: 5, scope: !4003)
!4027 = !DILocation(line: 1734, column: 14, scope: !4003)
!4028 = !DILocation(line: 1738, column: 13, scope: !4003)
!4029 = !DILocation(line: 1716, column: 13, scope: !4003)
!4030 = !DILocation(line: 1719, column: 13, scope: !4003)
!4031 = !DILocation(line: 1723, column: 13, scope: !4003)
!4032 = !DILocation(line: 1728, column: 13, scope: !4003)
!4033 = !DILocation(line: 1728, column: 14, scope: !4003)
!4034 = !DILocation(line: 1728, column: 14, scope: !4015)
!4035 = !DILocation(line: 1728, column: 17, scope: !4003)
!4036 = !DILocation(line: 1728, column: 17, scope: !4015)
!4037 = !DILocation(line: 1728, column: 20, scope: !4003)
!4038 = !DILocation(line: 1728, column: 20, scope: !4015)
!4039 = !DILocation(line: 1728, column: 23, scope: !4003)
!4040 = !DILocation(line: 1728, column: 23, scope: !4015)
!4041 = !DILocation(line: 1729, column: 19, scope: !4015)
!4042 = !DILocation(line: 1729, column: 18, scope: !4015)
!4043 = !DILocation(line: 1729, column: 13, scope: !4015)
!4044 = !DILocation(line: 1730, column: 19, scope: !4015)
!4045 = !DILocation(line: 1730, column: 18, scope: !4015)
!4046 = !DILocation(line: 1730, column: 13, scope: !4015)
!4047 = !DILocation(line: 1731, column: 19, scope: !4015)
!4048 = !DILocation(line: 1731, column: 18, scope: !4015)
!4049 = !DILocation(line: 1731, column: 13, scope: !4015)
!4050 = !DILocation(line: 1732, column: 18, scope: !4015)
!4051 = !DILocation(line: 1732, column: 13, scope: !4015)
!4052 = !DILocation(line: 1733, column: 9, scope: !4003)
!4053 = !DILocation(line: 1741, column: 16, scope: !4003)
!4054 = !DILocation(line: 1741, column: 14, scope: !4003)
!4055 = !DILocation(line: 1741, column: 10, scope: !4003)
!4056 = !DILocation(line: 1742, column: 2, scope: !3994)
!4057 = !DILocation(line: 1723, column: 14, scope: !4003)
!4058 = !DILocation(line: 1723, column: 14, scope: !4011)
!4059 = !DILocation(line: 1723, column: 17, scope: !4003)
!4060 = !DILocation(line: 1723, column: 17, scope: !4011)
!4061 = !DILocation(line: 1723, column: 20, scope: !4003)
!4062 = !DILocation(line: 1723, column: 20, scope: !4011)
!4063 = !DILocation(line: 1724, column: 19, scope: !4011)
!4064 = !DILocation(line: 1724, column: 18, scope: !4011)
!4065 = !DILocation(line: 1724, column: 13, scope: !4011)
!4066 = !DILocation(line: 1725, column: 19, scope: !4011)
!4067 = !DILocation(line: 1725, column: 18, scope: !4011)
!4068 = !DILocation(line: 1725, column: 13, scope: !4011)
!4069 = !DILocation(line: 1726, column: 18, scope: !4011)
!4070 = !DILocation(line: 1726, column: 13, scope: !4011)
!4071 = !DILocation(line: 1727, column: 9, scope: !4003)
!4072 = !DILocation(line: 1719, column: 14, scope: !4003)
!4073 = !DILocation(line: 1719, column: 14, scope: !4008)
!4074 = !DILocation(line: 1719, column: 17, scope: !4003)
!4075 = !DILocation(line: 1719, column: 17, scope: !4008)
!4076 = !DILocation(line: 1720, column: 19, scope: !4008)
!4077 = !DILocation(line: 1720, column: 18, scope: !4008)
!4078 = !DILocation(line: 1720, column: 13, scope: !4008)
!4079 = !DILocation(line: 1721, column: 18, scope: !4008)
!4080 = !DILocation(line: 1721, column: 13, scope: !4008)
!4081 = !DILocation(line: 1722, column: 9, scope: !4003)
!4082 = !DILocation(line: 1716, column: 14, scope: !4003)
!4083 = !DILocation(line: 1716, column: 14, scope: !4005)
!4084 = !DILocation(line: 1717, column: 13, scope: !4005)
!4085 = !DILocation(line: 1718, column: 9, scope: !4003)
!4086 = distinct !DISubprogram(name: "encode_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h32414824fbb65d00E", scope: !4087, file: !3995, line: 645, type: !4088, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4090)
!4087 = !DINamespace(name: "{impl#0}", scope: !3996)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{!3895, !491, !3899}
!4090 = !{!4091, !4092}
!4091 = !DILocalVariable(name: "self", arg: 1, scope: !4086, file: !3995, line: 645, type: !491)
!4092 = !DILocalVariable(name: "dst", arg: 2, scope: !4086, file: !3995, line: 645, type: !3899)
!4093 = !DILocation(line: 645, column: 24, scope: !4086)
!4094 = !DILocation(line: 645, column: 30, scope: !4086)
!4095 = !DILocation(line: 647, column: 42, scope: !4086)
!4096 = !DILocation(line: 647, column: 18, scope: !4086)
!4097 = !DILocation(line: 648, column: 6, scope: !4086)
!4098 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h9a75e41c0c306034E", scope: !4087, file: !3995, line: 92, type: !3911, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3917, retainedNodes: !4099)
!4099 = !{!4100}
!4100 = !DILocalVariable(name: "iter", arg: 1, scope: !4098, file: !3995, line: 92, type: !450)
!4101 = !DILocation(line: 92, column: 54, scope: !4098)
!4102 = !DILocation(line: 93, column: 9, scope: !4098)
!4103 = !DILocation(line: 94, column: 6, scope: !4098)
!4104 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h991ddb6749a94a8bE", scope: !4087, file: !3995, line: 179, type: !3971, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4105)
!4105 = !{!4106}
!4106 = !DILocalVariable(name: "i", arg: 1, scope: !4104, file: !3995, line: 179, type: !498)
!4107 = !DILocation(line: 179, column: 44, scope: !4104)
!4108 = !DILocation(line: 181, column: 18, scope: !4104)
!4109 = !DILocation(line: 182, column: 6, scope: !4104)
!4110 = distinct !DISubprogram(name: "from_u32", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8from_u3217hfe4d08d27b4914deE", scope: !4087, file: !3995, line: 138, type: !3979, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4111)
!4111 = !{!4112}
!4112 = !DILocalVariable(name: "i", arg: 1, scope: !4110, file: !3995, line: 138, type: !498)
!4113 = !DILocation(line: 138, column: 27, scope: !4110)
!4114 = !DILocation(line: 139, column: 9, scope: !4110)
!4115 = !DILocation(line: 140, column: 6, scope: !4110)
!4116 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hc910add14b1dec2eE", scope: !4087, file: !3995, line: 577, type: !4117, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4119)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!9, !491}
!4119 = !{!4120}
!4120 = !DILocalVariable(name: "self", arg: 1, scope: !4116, file: !3995, line: 577, type: !491)
!4121 = !DILocation(line: 577, column: 27, scope: !4116)
!4122 = !DILocation(line: 578, column: 9, scope: !4116)
!4123 = !DILocation(line: 579, column: 6, scope: !4116)
!4124 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods8len_utf817h32106d2870d2ae12E", scope: !3996, file: !3995, line: 1685, type: !4125, scopeLine: 1685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4127)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!9, !498}
!4127 = !{!4128}
!4128 = !DILocalVariable(name: "code", arg: 1, scope: !4124, file: !3995, line: 1685, type: !498)
!4129 = !DILocation(line: 1685, column: 19, scope: !4124)
!4130 = !DILocation(line: 1686, column: 8, scope: !4124)
!4131 = !DILocation(line: 1688, column: 15, scope: !4124)
!4132 = !DILocation(line: 1687, column: 9, scope: !4124)
!4133 = !DILocation(line: 1686, column: 5, scope: !4124)
!4134 = !DILocation(line: 1695, column: 2, scope: !4124)
!4135 = !DILocation(line: 1690, column: 15, scope: !4124)
!4136 = !DILocation(line: 1689, column: 9, scope: !4124)
!4137 = !DILocation(line: 1688, column: 12, scope: !4124)
!4138 = !DILocation(line: 1693, column: 9, scope: !4124)
!4139 = !DILocation(line: 1690, column: 12, scope: !4124)
!4140 = !DILocation(line: 1691, column: 9, scope: !4124)
!4141 = distinct !DISubprogram(name: "rfind<core::str::iter::Chars, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind17hf65e20d09391b2fdE", scope: !4143, file: !4142, line: 347, type: !4145, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4151, retainedNodes: !4148)
!4142 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/double_ended.rs", directory: "", checksumkind: CSK_MD5, checksum: "1297e63c6921fe01508d3f3c7af8ef5c")
!4143 = !DINamespace(name: "DoubleEndedIterator", scope: !4144)
!4144 = !DINamespace(name: "double_ended", scope: !414)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!534, !4147, !629}
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Chars", baseType: !555, size: 64, align: 64, dwarfAddressSpace: 0)
!4148 = !{!4149, !4150}
!4149 = !DILocalVariable(name: "self", arg: 1, scope: !4141, file: !4142, line: 347, type: !4147)
!4150 = !DILocalVariable(name: "predicate", arg: 2, scope: !4141, file: !4142, line: 347, type: !629)
!4151 = !{!4152, !4153}
!4152 = !DITemplateTypeParameter(name: "Self", type: !555)
!4153 = !DITemplateTypeParameter(name: "P", type: !629)
!4154 = !DILocation(line: 347, column: 17, scope: !4141)
!4155 = !DILocation(line: 347, column: 28, scope: !4141)
!4156 = !DILocation(line: 359, column: 28, scope: !4141)
!4157 = !DILocation(line: 359, column: 9, scope: !4141)
!4158 = !DILocation(line: 360, column: 6, scope: !4141)
!4159 = distinct !DISubprogram(name: "check<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check17hddbbc58179dda83bE", scope: !4160, file: !4142, line: 353, type: !4161, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4169, retainedNodes: !4167)
!4160 = !DINamespace(name: "rfind", scope: !4143)
!4161 = !DISubroutineType(types: !4162)
!4162 = !{!4163, !629}
!4163 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", scope: !4164, file: !2, size: 128, align: 64, elements: !4165, templateParams: !45, identifier: "55c48bae3216c4e39dda1900cf7e8616")
!4164 = !DINamespace(name: "check", scope: !4160)
!4165 = !{!4166}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !4163, file: !2, baseType: !629, size: 128, align: 64)
!4167 = !{!4168}
!4168 = !DILocalVariable(name: "predicate", arg: 1, scope: !4159, file: !4142, line: 353, type: !629)
!4169 = !{!541, !4170}
!4170 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !629)
!4171 = !DILocation(line: 353, column: 21, scope: !4159)
!4172 = !DILocation(line: 354, column: 13, scope: !4159)
!4173 = !DILocation(line: 357, column: 10, scope: !4159)
!4174 = distinct !DISubprogram(name: "{closure#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h176e71ac55ce7e20E", scope: !4164, file: !4142, line: 354, type: !4175, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4169, retainedNodes: !4178)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!481, !4177, !7, !491}
!4177 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", baseType: !4163, size: 64, align: 64, dwarfAddressSpace: 0)
!4178 = !{!4179, !4180, !4181}
!4179 = !DILocalVariable(name: "x", arg: 3, scope: !4174, file: !4142, line: 354, type: !491)
!4180 = !DILocalVariable(name: "predicate", scope: !4174, file: !4142, line: 353, type: !629, align: 8)
!4181 = !DILocalVariable(arg: 2, scope: !4174, file: !4142, line: 354, type: !7)
!4182 = !DILocation(line: 353, column: 25, scope: !4174)
!4183 = !DILocation(line: 354, column: 19, scope: !4174)
!4184 = !DILocation(line: 354, column: 23, scope: !4174)
!4185 = !DILocation(line: 355, column: 20, scope: !4174)
!4186 = !DILocation(line: 355, column: 67, scope: !4174)
!4187 = !DILocation(line: 355, column: 17, scope: !4174)
!4188 = !DILocation(line: 355, column: 55, scope: !4174)
!4189 = !DILocation(line: 355, column: 36, scope: !4174)
!4190 = !DILocation(line: 356, column: 13, scope: !4174)
!4191 = !DILocation(line: 356, column: 14, scope: !4174)
!4192 = distinct !DISubprogram(name: "try_rfold<core::str::iter::Chars, (), core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>, core::ops::control_flow::ControlFlow<char, ()>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17h51874edc3c5c216dE", scope: !4143, file: !4142, line: 221, type: !4193, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4207, retainedNodes: !4195)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!481, !4147, !7, !4163}
!4195 = !{!4196, !4197, !4198, !4199, !4201, !4203, !4205}
!4196 = !DILocalVariable(name: "self", arg: 1, scope: !4192, file: !4142, line: 221, type: !4147)
!4197 = !DILocalVariable(name: "init", arg: 2, scope: !4192, file: !4142, line: 221, type: !7)
!4198 = !DILocalVariable(name: "f", arg: 3, scope: !4192, file: !4142, line: 221, type: !4163)
!4199 = !DILocalVariable(name: "accum", scope: !4200, file: !4142, line: 227, type: !7, align: 1)
!4200 = distinct !DILexicalBlock(scope: !4192, file: !4142, line: 227, column: 9)
!4201 = !DILocalVariable(name: "x", scope: !4202, file: !4142, line: 228, type: !491, align: 4)
!4202 = distinct !DILexicalBlock(scope: !4200, file: !4142, line: 228, column: 46)
!4203 = !DILocalVariable(name: "residual", scope: !4204, file: !4142, line: 229, type: !499, align: 4)
!4204 = distinct !DILexicalBlock(scope: !4202, file: !4142, line: 229, column: 32)
!4205 = !DILocalVariable(name: "val", scope: !4206, file: !4142, line: 229, type: !7, align: 1)
!4206 = distinct !DILexicalBlock(scope: !4202, file: !4142, line: 229, column: 21)
!4207 = !{!4152, !4208, !4209, !4210}
!4208 = !DITemplateTypeParameter(name: "B", type: !7)
!4209 = !DITemplateTypeParameter(name: "F", type: !4163)
!4210 = !DITemplateTypeParameter(name: "R", type: !481)
!4211 = !DILocation(line: 221, column: 27, scope: !4192)
!4212 = !DILocation(line: 221, column: 38, scope: !4192)
!4213 = !DILocation(line: 221, column: 47, scope: !4192)
!4214 = !DILocation(line: 227, column: 13, scope: !4200)
!4215 = !DILocation(line: 229, column: 21, scope: !4206)
!4216 = !DILocation(line: 228, column: 9, scope: !4200)
!4217 = !DILocation(line: 228, column: 29, scope: !4202)
!4218 = !DILocation(line: 228, column: 19, scope: !4202)
!4219 = !DILocation(line: 228, column: 24, scope: !4202)
!4220 = !DILocation(line: 229, column: 21, scope: !4202)
!4221 = !DILocation(line: 231, column: 15, scope: !4200)
!4222 = !DILocation(line: 232, column: 5, scope: !4192)
!4223 = !DILocation(line: 232, column: 6, scope: !4192)
!4224 = !DILocation(line: 229, column: 32, scope: !4202)
!4225 = !DILocation(line: 229, column: 32, scope: !4204)
!4226 = !DILocation(line: 229, column: 21, scope: !4204)
!4227 = distinct !DISubprogram(name: "skip_while<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator10skip_while17he62a34b0e4e01a5eE", scope: !4229, file: !4228, line: 1149, type: !4231, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4236, retainedNodes: !4233)
!4228 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "8951dbce7b6a0cd8429168c5c41886f0")
!4229 = !DINamespace(name: "Iterator", scope: !4230)
!4230 = !DINamespace(name: "iterator", scope: !414)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{!548, !551, !573}
!4233 = !{!4234, !4235}
!4234 = !DILocalVariable(name: "self", arg: 1, scope: !4227, file: !4228, line: 1149, type: !551)
!4235 = !DILocalVariable(name: "predicate", arg: 2, scope: !4227, file: !4228, line: 1149, type: !573)
!4236 = !{!4237, !580}
!4237 = !DITemplateTypeParameter(name: "Self", type: !551)
!4238 = !DILocation(line: 1149, column: 22, scope: !4227)
!4239 = !DILocation(line: 1149, column: 28, scope: !4227)
!4240 = !DILocation(line: 1154, column: 9, scope: !4227)
!4241 = !DILocation(line: 1155, column: 6, scope: !4227)
!4242 = distinct !DISubprogram(name: "skip_while<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator10skip_while17he6a65d8ddc7dbbbaE", scope: !4229, file: !4228, line: 1149, type: !4243, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4248, retainedNodes: !4245)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!601, !555, !606}
!4245 = !{!4246, !4247}
!4246 = !DILocalVariable(name: "self", arg: 1, scope: !4242, file: !4228, line: 1149, type: !555)
!4247 = !DILocalVariable(name: "predicate", arg: 2, scope: !4242, file: !4228, line: 1149, type: !606)
!4248 = !{!4152, !609}
!4249 = !DILocation(line: 1149, column: 22, scope: !4242)
!4250 = !DILocation(line: 1149, column: 28, scope: !4242)
!4251 = !DILocation(line: 1154, column: 9, scope: !4242)
!4252 = !DILocation(line: 1155, column: 6, scope: !4242)
!4253 = distinct !DISubprogram(name: "map<core::slice::iter::Iter<&str>, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h15ad5af0869f4c3aE", scope: !4229, file: !4228, line: 796, type: !4254, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4259, retainedNodes: !4256)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{!383, !386, !404}
!4256 = !{!4257, !4258}
!4257 = !DILocalVariable(name: "self", arg: 1, scope: !4253, file: !4228, line: 796, type: !386)
!4258 = !DILocalVariable(name: "f", arg: 2, scope: !4253, file: !4228, line: 796, type: !404)
!4259 = !{!4260, !420, !409}
!4260 = !DITemplateTypeParameter(name: "Self", type: !386)
!4261 = !DILocation(line: 796, column: 18, scope: !4253)
!4262 = !DILocation(line: 796, column: 24, scope: !4253)
!4263 = !DILocation(line: 801, column: 9, scope: !4253)
!4264 = !DILocation(line: 802, column: 6, scope: !4253)
!4265 = distinct !DISubprogram(name: "rev<core::str::iter::Chars>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3rev17h1e7472311e1e6920E", scope: !4229, file: !4228, line: 3234, type: !4266, scopeLine: 3234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4270, retainedNodes: !4268)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!551, !555}
!4268 = !{!4269}
!4269 = !DILocalVariable(name: "self", arg: 1, scope: !4265, file: !4228, line: 3234, type: !555)
!4270 = !{!4152}
!4271 = !DILocation(line: 3234, column: 12, scope: !4265)
!4272 = !DILocation(line: 3238, column: 9, scope: !4265)
!4273 = !DILocation(line: 3239, column: 6, scope: !4265)
!4274 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>, usize>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3sum17hc807e64a1360c675E", scope: !4229, file: !4228, line: 3464, type: !4275, scopeLine: 3464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4279, retainedNodes: !4277)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{!9, !383}
!4277 = !{!4278}
!4278 = !DILocalVariable(name: "self", arg: 1, scope: !4274, file: !4228, line: 3464, type: !383)
!4279 = !{!4280, !4281}
!4280 = !DITemplateTypeParameter(name: "Self", type: !383)
!4281 = !DITemplateTypeParameter(name: "S", type: !9)
!4282 = !DILocation(line: 3464, column: 15, scope: !4274)
!4283 = !DILocation(line: 3469, column: 9, scope: !4274)
!4284 = !DILocation(line: 3470, column: 6, scope: !4274)
!4285 = distinct !DISubprogram(name: "find<core::str::iter::Chars, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4find17h0cb5f0aac3ff5547E", scope: !4229, file: !4228, line: 2756, type: !4286, scopeLine: 2756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4291, retainedNodes: !4288)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!534, !4147, !647}
!4288 = !{!4289, !4290}
!4289 = !DILocalVariable(name: "self", arg: 1, scope: !4285, file: !4228, line: 2756, type: !4147)
!4290 = !DILocalVariable(name: "predicate", arg: 2, scope: !4285, file: !4228, line: 2756, type: !647)
!4291 = !{!4152, !4292}
!4292 = !DITemplateTypeParameter(name: "P", type: !647)
!4293 = !DILocation(line: 2756, column: 16, scope: !4285)
!4294 = !DILocation(line: 2756, column: 27, scope: !4285)
!4295 = !DILocation(line: 2768, column: 27, scope: !4285)
!4296 = !DILocation(line: 2768, column: 9, scope: !4285)
!4297 = !DILocation(line: 2769, column: 6, scope: !4285)
!4298 = distinct !DISubprogram(name: "check<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4find5check17hf8ce51fd4052ec5cE", scope: !4299, file: !4228, line: 2762, type: !4300, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4308, retainedNodes: !4306)
!4299 = !DINamespace(name: "find", scope: !4229)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!4302, !647}
!4302 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", scope: !4303, file: !2, size: 128, align: 64, elements: !4304, templateParams: !45, identifier: "95f673d52e7ed3618d2bfd822c43de7c")
!4303 = !DINamespace(name: "check", scope: !4299)
!4304 = !{!4305}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !4302, file: !2, baseType: !647, size: 128, align: 64)
!4306 = !{!4307}
!4307 = !DILocalVariable(name: "predicate", arg: 1, scope: !4298, file: !4228, line: 2762, type: !647)
!4308 = !{!541, !4309}
!4309 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !647)
!4310 = !DILocation(line: 2762, column: 21, scope: !4298)
!4311 = !DILocation(line: 2763, column: 13, scope: !4298)
!4312 = !DILocation(line: 2766, column: 10, scope: !4298)
!4313 = distinct !DISubprogram(name: "{closure#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17hf2a9f5873cfdd238E", scope: !4303, file: !4228, line: 2763, type: !4314, scopeLine: 2763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4308, retainedNodes: !4317)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{!481, !4316, !7, !491}
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::find::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", baseType: !4302, size: 64, align: 64, dwarfAddressSpace: 0)
!4317 = !{!4318, !4319, !4320}
!4318 = !DILocalVariable(name: "x", arg: 3, scope: !4313, file: !4228, line: 2763, type: !491)
!4319 = !DILocalVariable(name: "predicate", scope: !4313, file: !4228, line: 2762, type: !647, align: 8)
!4320 = !DILocalVariable(arg: 2, scope: !4313, file: !4228, line: 2763, type: !7)
!4321 = !DILocation(line: 2762, column: 25, scope: !4313)
!4322 = !DILocation(line: 2763, column: 19, scope: !4313)
!4323 = !DILocation(line: 2763, column: 23, scope: !4313)
!4324 = !DILocation(line: 2764, column: 20, scope: !4313)
!4325 = !DILocation(line: 2764, column: 67, scope: !4313)
!4326 = !DILocation(line: 2764, column: 17, scope: !4313)
!4327 = !DILocation(line: 2764, column: 55, scope: !4313)
!4328 = !DILocation(line: 2764, column: 36, scope: !4313)
!4329 = !DILocation(line: 2765, column: 13, scope: !4313)
!4330 = !DILocation(line: 2765, column: 14, scope: !4313)
!4331 = distinct !DISubprogram(name: "fold<core::slice::iter::Iter<&str>, usize, core::iter::adapters::map::map_fold::{closure_env#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17hb4d475b31ccfa8e3E", scope: !4229, file: !4228, line: 2470, type: !4332, scopeLine: 2470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4347, retainedNodes: !4339)
!4332 = !DISubroutineType(types: !4333)
!4333 = !{!9, !386, !9, !4334}
!4334 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", scope: !4335, file: !2, align: 8, elements: !4336, templateParams: !45, identifier: "3207bd4df0ab85cdfa2cb995f6cec3d6")
!4335 = !DINamespace(name: "map_fold", scope: !378)
!4336 = !{!4337, !4338}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4334, file: !2, baseType: !410, align: 8)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4334, file: !2, baseType: !404, align: 8)
!4339 = !{!4340, !4341, !4342, !4343, !4345}
!4340 = !DILocalVariable(name: "self", arg: 1, scope: !4331, file: !4228, line: 2470, type: !386)
!4341 = !DILocalVariable(name: "init", arg: 2, scope: !4331, file: !4228, line: 2470, type: !9)
!4342 = !DILocalVariable(name: "f", arg: 3, scope: !4331, file: !4228, line: 2470, type: !4334)
!4343 = !DILocalVariable(name: "accum", scope: !4344, file: !4228, line: 2475, type: !9, align: 8)
!4344 = distinct !DILexicalBlock(scope: !4331, file: !4228, line: 2475, column: 9)
!4345 = !DILocalVariable(name: "x", scope: !4346, file: !4228, line: 2476, type: !402, align: 8)
!4346 = distinct !DILexicalBlock(scope: !4344, file: !4228, line: 2476, column: 41)
!4347 = !{!4260, !420, !4348}
!4348 = !DITemplateTypeParameter(name: "F", type: !4334)
!4349 = !DILocation(line: 2475, column: 13, scope: !4344)
!4350 = !DILocation(line: 2470, column: 19, scope: !4331)
!4351 = !DILocation(line: 2470, column: 29, scope: !4331)
!4352 = !DILocation(line: 2470, column: 38, scope: !4331)
!4353 = !DILocation(line: 2475, column: 25, scope: !4331)
!4354 = !DILocation(line: 2476, column: 9, scope: !4344)
!4355 = !DILocation(line: 2476, column: 29, scope: !4346)
!4356 = !DILocation(line: 2476, column: 19, scope: !4346)
!4357 = !DILocation(line: 2476, column: 24, scope: !4346)
!4358 = !DILocation(line: 2477, column: 23, scope: !4346)
!4359 = !DILocation(line: 2477, column: 21, scope: !4346)
!4360 = !DILocation(line: 2477, column: 13, scope: !4346)
!4361 = !DILocation(line: 2480, column: 6, scope: !4331)
!4362 = distinct !DISubprogram(name: "cloned<core::slice::iter::Iter<u16>, u16>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6cloned17h531107f53cfaa0c1E", scope: !4229, file: !4228, line: 3354, type: !4363, scopeLine: 3354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4367, retainedNodes: !4365)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{!450, !453}
!4365 = !{!4366}
!4366 = !DILocalVariable(name: "self", arg: 1, scope: !4362, file: !4228, line: 3354, type: !453)
!4367 = !{!4368, !442}
!4368 = !DITemplateTypeParameter(name: "Self", type: !453)
!4369 = !DILocation(line: 3354, column: 26, scope: !4362)
!4370 = !DILocation(line: 3359, column: 9, scope: !4362)
!4371 = !DILocation(line: 3360, column: 6, scope: !4362)
!4372 = distinct !DISubprogram(name: "try_fold<core::str::iter::Chars, (), core::iter::traits::iterator::Iterator::find::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>>, core::ops::control_flow::ControlFlow<char, ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17hcf184aca2d7860f3E", scope: !4229, file: !4228, line: 2291, type: !4373, scopeLine: 2291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4387, retainedNodes: !4375)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!481, !4147, !7, !4302}
!4375 = !{!4376, !4377, !4378, !4379, !4381, !4383, !4385}
!4376 = !DILocalVariable(name: "self", arg: 1, scope: !4372, file: !4228, line: 2291, type: !4147)
!4377 = !DILocalVariable(name: "init", arg: 2, scope: !4372, file: !4228, line: 2291, type: !7)
!4378 = !DILocalVariable(name: "f", arg: 3, scope: !4372, file: !4228, line: 2291, type: !4302)
!4379 = !DILocalVariable(name: "accum", scope: !4380, file: !4228, line: 2297, type: !7, align: 1)
!4380 = distinct !DILexicalBlock(scope: !4372, file: !4228, line: 2297, column: 9)
!4381 = !DILocalVariable(name: "x", scope: !4382, file: !4228, line: 2298, type: !491, align: 4)
!4382 = distinct !DILexicalBlock(scope: !4380, file: !4228, line: 2298, column: 41)
!4383 = !DILocalVariable(name: "residual", scope: !4384, file: !4228, line: 2299, type: !499, align: 4)
!4384 = distinct !DILexicalBlock(scope: !4382, file: !4228, line: 2299, column: 32)
!4385 = !DILocalVariable(name: "val", scope: !4386, file: !4228, line: 2299, type: !7, align: 1)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !4228, line: 2299, column: 21)
!4387 = !{!4152, !4208, !4388, !4210}
!4388 = !DITemplateTypeParameter(name: "F", type: !4302)
!4389 = !DILocation(line: 2291, column: 26, scope: !4372)
!4390 = !DILocation(line: 2291, column: 37, scope: !4372)
!4391 = !DILocation(line: 2291, column: 46, scope: !4372)
!4392 = !DILocation(line: 2297, column: 13, scope: !4380)
!4393 = !DILocation(line: 2299, column: 21, scope: !4386)
!4394 = !DILocation(line: 2298, column: 9, scope: !4380)
!4395 = !DILocation(line: 2298, column: 29, scope: !4382)
!4396 = !DILocation(line: 2298, column: 19, scope: !4382)
!4397 = !DILocation(line: 2298, column: 24, scope: !4382)
!4398 = !DILocation(line: 2299, column: 21, scope: !4382)
!4399 = !DILocation(line: 2301, column: 15, scope: !4380)
!4400 = !DILocation(line: 2302, column: 5, scope: !4372)
!4401 = !DILocation(line: 2302, column: 6, scope: !4372)
!4402 = !DILocation(line: 2299, column: 32, scope: !4382)
!4403 = !DILocation(line: 2299, column: 32, scope: !4384)
!4404 = !DILocation(line: 2299, column: 21, scope: !4384)
!4405 = distinct !DISubprogram(name: "new<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h0a5e978eda5de94cE", scope: !548, file: !529, line: 22, type: !4231, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !578, retainedNodes: !4406)
!4406 = !{!4407, !4408}
!4407 = !DILocalVariable(name: "iter", arg: 1, scope: !4405, file: !529, line: 22, type: !551)
!4408 = !DILocalVariable(name: "predicate", arg: 2, scope: !4405, file: !529, line: 22, type: !573)
!4409 = !DILocation(line: 22, column: 32, scope: !4405)
!4410 = !DILocation(line: 22, column: 41, scope: !4405)
!4411 = !DILocation(line: 23, column: 9, scope: !4405)
!4412 = !DILocation(line: 24, column: 6, scope: !4405)
!4413 = distinct !DISubprogram(name: "new<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17hde80a76273c6c8a3E", scope: !601, file: !529, line: 22, type: !4243, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !607, retainedNodes: !4414)
!4414 = !{!4415, !4416}
!4415 = !DILocalVariable(name: "iter", arg: 1, scope: !4413, file: !529, line: 22, type: !555)
!4416 = !DILocalVariable(name: "predicate", arg: 2, scope: !4413, file: !529, line: 22, type: !606)
!4417 = !DILocation(line: 22, column: 32, scope: !4413)
!4418 = !DILocation(line: 22, column: 41, scope: !4413)
!4419 = !DILocation(line: 23, column: 9, scope: !4413)
!4420 = !DILocation(line: 24, column: 6, scope: !4413)
!4421 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h78b8a3df4c03a1dfE", scope: !383, file: !376, line: 68, type: !4254, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !407, retainedNodes: !4422)
!4422 = !{!4423, !4424}
!4423 = !DILocalVariable(name: "iter", arg: 1, scope: !4421, file: !376, line: 68, type: !386)
!4424 = !DILocalVariable(name: "f", arg: 2, scope: !4421, file: !376, line: 68, type: !404)
!4425 = !DILocation(line: 68, column: 32, scope: !4421)
!4426 = !DILocation(line: 68, column: 41, scope: !4421)
!4427 = !DILocation(line: 69, column: 9, scope: !4421)
!4428 = !DILocation(line: 70, column: 6, scope: !4421)
!4429 = distinct !DISubprogram(name: "map_fold<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17h4082c70a4f2cebe2E", scope: !378, file: !376, line: 80, type: !4430, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4435, retainedNodes: !4432)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{null, !404, !410}
!4432 = !{!4433, !4434}
!4433 = !DILocalVariable(name: "f", arg: 1, scope: !4429, file: !376, line: 81, type: !404)
!4434 = !DILocalVariable(name: "g", arg: 2, scope: !4429, file: !376, line: 82, type: !410)
!4435 = !{!401, !420, !421, !4436, !4437}
!4436 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !404)
!4437 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !410)
!4438 = !DILocation(line: 81, column: 5, scope: !4429)
!4439 = !DILocation(line: 82, column: 5, scope: !4429)
!4440 = !DILocation(line: 85, column: 2, scope: !4429)
!4441 = distinct !DISubprogram(name: "{closure#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hcf7ed2282c118b80E", scope: !4335, file: !376, line: 84, type: !4442, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4435, retainedNodes: !4445)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!9, !4444, !9, !402}
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", baseType: !4334, size: 64, align: 64, dwarfAddressSpace: 0)
!4445 = !{!4446, !4447, !4448, !4449}
!4446 = !DILocalVariable(name: "acc", arg: 2, scope: !4441, file: !376, line: 84, type: !9)
!4447 = !DILocalVariable(name: "elt", arg: 3, scope: !4441, file: !376, line: 84, type: !402)
!4448 = !DILocalVariable(name: "g", scope: !4441, file: !376, line: 82, type: !410, align: 1)
!4449 = !DILocalVariable(name: "f", scope: !4441, file: !376, line: 81, type: !404, align: 1)
!4450 = !DILocation(line: 82, column: 9, scope: !4441)
!4451 = !DILocation(line: 81, column: 9, scope: !4441)
!4452 = !DILocation(line: 84, column: 11, scope: !4441)
!4453 = !DILocation(line: 84, column: 16, scope: !4441)
!4454 = !DILocation(line: 84, column: 28, scope: !4441)
!4455 = !DILocation(line: 84, column: 21, scope: !4441)
!4456 = !DILocation(line: 84, column: 35, scope: !4441)
!4457 = distinct !DISubprogram(name: "new<core::str::iter::Chars>", linkageName: "_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h4fd36a41abdca19bE", scope: !551, file: !4458, line: 19, type: !4266, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !568, retainedNodes: !4459)
!4458 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/rev.rs", directory: "", checksumkind: CSK_MD5, checksum: "e12e05d45ec334260b2bf4e457d8cd45")
!4459 = !{!4460}
!4460 = !DILocalVariable(name: "iter", arg: 1, scope: !4457, file: !4458, line: 19, type: !555)
!4461 = !DILocation(line: 19, column: 32, scope: !4457)
!4462 = !DILocation(line: 20, column: 9, scope: !4457)
!4463 = !DILocation(line: 21, column: 6, scope: !4457)
!4464 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u16>>", linkageName: "_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17hb670fd75d7cac394E", scope: !450, file: !430, line: 22, type: !4363, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !466, retainedNodes: !4465)
!4465 = !{!4466}
!4466 = !DILocalVariable(name: "it", arg: 1, scope: !4464, file: !430, line: 22, type: !453)
!4467 = !DILocation(line: 22, column: 32, scope: !4464)
!4468 = !DILocation(line: 23, column: 9, scope: !4464)
!4469 = !DILocation(line: 24, column: 6, scope: !4464)
!4470 = distinct !DISubprogram(name: "size_align<alloc::rc::RcBox<()>>", linkageName: "_ZN4core5alloc6layout10size_align17h637d3bcd890a4515E", scope: !72, file: !4471, line: 19, type: !4472, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4478, retainedNodes: !45)
!4471 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "831b11a4d3c26aadef01b11789b3b905")
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!4474}
!4474 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !4475, templateParams: !45, identifier: "2915affe455a071962386715a637420a")
!4475 = !{!4476, !4477}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4474, file: !2, baseType: !9, size: 64, align: 64)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4474, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4478 = !{!4479}
!4479 = !DITemplateTypeParameter(name: "T", type: !4480)
!4480 = !DICompositeType(tag: DW_TAG_structure_type, name: "RcBox<()>", scope: !4481, file: !2, size: 128, align: 64, elements: !4482, templateParams: !3269, identifier: "8813ad7d7bd4c733590f73695c86c880")
!4481 = !DINamespace(name: "rc", scope: !17)
!4482 = !{!4483, !4491, !4492}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !4480, file: !2, baseType: !4484, size: 64, align: 64)
!4484 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cell<usize>", scope: !4485, file: !2, size: 64, align: 64, elements: !4486, templateParams: !1132, identifier: "30a985a02c34f5d0682e3781500d11d6")
!4485 = !DINamespace(name: "cell", scope: !31)
!4486 = !{!4487}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4484, file: !2, baseType: !4488, size: 64, align: 64)
!4488 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<usize>", scope: !4485, file: !2, size: 64, align: 64, elements: !4489, templateParams: !1132, identifier: "8f2b43c3fe89fd793c6f616cb378bdef")
!4489 = !{!4490}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4488, file: !2, baseType: !9, size: 64, align: 64)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !4480, file: !2, baseType: !4484, size: 64, align: 64, offset: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4480, file: !2, baseType: !7, align: 8, offset: 128)
!4493 = !DILocation(line: 20, column: 5, scope: !4470)
!4494 = !DILocation(line: 21, column: 2, scope: !4470)
!4495 = distinct !DISubprogram(name: "size_align<alloc::sync::ArcInner<()>>", linkageName: "_ZN4core5alloc6layout10size_align17h71e1de6cc74e16b0E", scope: !72, file: !4471, line: 19, type: !4472, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4496, retainedNodes: !45)
!4496 = !{!4497}
!4497 = !DITemplateTypeParameter(name: "T", type: !4498)
!4498 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<()>", scope: !4499, file: !2, size: 128, align: 64, elements: !4500, templateParams: !3269, identifier: "e7930d70d0964c74e159d010f2c57ce4")
!4499 = !DINamespace(name: "sync", scope: !17)
!4500 = !{!4501, !4507, !4508}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !4498, file: !2, baseType: !4502, size: 64, align: 64)
!4502 = !DICompositeType(tag: DW_TAG_structure_type, name: "AtomicUsize", scope: !4503, file: !2, size: 64, align: 64, elements: !4505, templateParams: !45, identifier: "e00fd022714aa819cef83a74a4523c4")
!4503 = !DINamespace(name: "atomic", scope: !4504)
!4504 = !DINamespace(name: "sync", scope: !31)
!4505 = !{!4506}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !4502, file: !2, baseType: !4488, size: 64, align: 64)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !4498, file: !2, baseType: !4502, size: 64, align: 64, offset: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4498, file: !2, baseType: !7, align: 8, offset: 128)
!4509 = !DILocation(line: 20, column: 5, scope: !4495)
!4510 = !DILocation(line: 21, column: 2, scope: !4495)
!4511 = distinct !DISubprogram(name: "pad_to_align", linkageName: "_ZN4core5alloc6layout6Layout12pad_to_align17h582b5e21e5a39c47E", scope: !170, file: !4471, line: 297, type: !4512, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4515)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!170, !4514}
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !170, size: 64, align: 64, dwarfAddressSpace: 0)
!4515 = !{!4516, !4517, !4519}
!4516 = !DILocalVariable(name: "self", arg: 1, scope: !4511, file: !4471, line: 297, type: !4514)
!4517 = !DILocalVariable(name: "pad", scope: !4518, file: !4471, line: 298, type: !9, align: 8)
!4518 = distinct !DILexicalBlock(scope: !4511, file: !4471, line: 298, column: 9)
!4519 = !DILocalVariable(name: "new_size", scope: !4520, file: !4471, line: 303, type: !9, align: 8)
!4520 = distinct !DILexicalBlock(scope: !4518, file: !4471, line: 303, column: 9)
!4521 = !DILocation(line: 297, column: 31, scope: !4511)
!4522 = !DILocation(line: 298, column: 43, scope: !4511)
!4523 = !DILocation(line: 298, column: 19, scope: !4511)
!4524 = !DILocation(line: 298, column: 13, scope: !4518)
!4525 = !DILocation(line: 303, column: 24, scope: !4518)
!4526 = !DILocation(line: 303, column: 13, scope: !4520)
!4527 = !DILocation(line: 306, column: 62, scope: !4520)
!4528 = !DILocation(line: 306, column: 18, scope: !4520)
!4529 = !DILocation(line: 307, column: 6, scope: !4511)
!4530 = distinct !DISubprogram(name: "padding_needed_for", linkageName: "_ZN4core5alloc6layout6Layout18padding_needed_for17h241b8d0e7f2d8864E", scope: !170, file: !4471, line: 261, type: !4531, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4533)
!4531 = !DISubroutineType(types: !4532)
!4532 = !{!9, !4514, !9}
!4533 = !{!4534, !4535, !4536, !4538}
!4534 = !DILocalVariable(name: "self", arg: 1, scope: !4530, file: !4471, line: 261, type: !4514)
!4535 = !DILocalVariable(name: "align", arg: 2, scope: !4530, file: !4471, line: 261, type: !9)
!4536 = !DILocalVariable(name: "len", scope: !4537, file: !4471, line: 262, type: !9, align: 8)
!4537 = distinct !DILexicalBlock(scope: !4530, file: !4471, line: 262, column: 9)
!4538 = !DILocalVariable(name: "len_rounded_up", scope: !4539, file: !4471, line: 283, type: !9, align: 8)
!4539 = distinct !DILexicalBlock(scope: !4537, file: !4471, line: 283, column: 9)
!4540 = !DILocation(line: 261, column: 37, scope: !4530)
!4541 = !DILocation(line: 261, column: 44, scope: !4530)
!4542 = !DILocation(line: 262, column: 19, scope: !4530)
!4543 = !DILocation(line: 262, column: 13, scope: !4537)
!4544 = !DILocalVariable(name: "self", arg: 1, scope: !4545, file: !1752, line: 1188, type: !9)
!4545 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17h715a20f0f21a1c6bE", scope: !1753, file: !1752, line: 1188, type: !4546, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4548)
!4546 = !DISubroutineType(types: !4547)
!4547 = !{!9, !9, !9}
!4548 = !{!4544, !4549}
!4549 = !DILocalVariable(name: "rhs", arg: 2, scope: !4545, file: !1752, line: 1188, type: !9)
!4550 = !DILocation(line: 1188, column: 35, scope: !4545, inlinedAt: !4551)
!4551 = distinct !DILocation(line: 283, column: 30, scope: !4537)
!4552 = !DILocation(line: 1188, column: 41, scope: !4545, inlinedAt: !4551)
!4553 = !DILocation(line: 1189, column: 13, scope: !4545, inlinedAt: !4551)
!4554 = !DILocalVariable(name: "self", arg: 1, scope: !4555, file: !1752, line: 1229, type: !9)
!4555 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hb439ccf953d631e6E", scope: !1753, file: !1752, line: 1229, type: !4546, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4556)
!4556 = !{!4554, !4557}
!4557 = !DILocalVariable(name: "rhs", arg: 2, scope: !4555, file: !1752, line: 1229, type: !9)
!4558 = !DILocation(line: 1229, column: 35, scope: !4555, inlinedAt: !4559)
!4559 = distinct !DILocation(line: 283, column: 30, scope: !4537)
!4560 = !DILocation(line: 1229, column: 41, scope: !4555, inlinedAt: !4559)
!4561 = !DILocation(line: 1230, column: 13, scope: !4555, inlinedAt: !4559)
!4562 = !DILocation(line: 1229, column: 35, scope: !4555, inlinedAt: !4563)
!4563 = distinct !DILocation(line: 283, column: 73, scope: !4537)
!4564 = !DILocation(line: 1229, column: 41, scope: !4555, inlinedAt: !4563)
!4565 = !DILocation(line: 1230, column: 13, scope: !4555, inlinedAt: !4563)
!4566 = !DILocation(line: 283, column: 72, scope: !4537)
!4567 = !DILocation(line: 283, column: 30, scope: !4537)
!4568 = !DILocation(line: 283, column: 13, scope: !4539)
!4569 = !DILocation(line: 1229, column: 35, scope: !4555, inlinedAt: !4570)
!4570 = distinct !DILocation(line: 284, column: 9, scope: !4539)
!4571 = !DILocation(line: 1229, column: 41, scope: !4555, inlinedAt: !4570)
!4572 = !DILocation(line: 1230, column: 13, scope: !4555, inlinedAt: !4570)
!4573 = !DILocation(line: 285, column: 6, scope: !4530)
!4574 = distinct !DISubprogram(name: "from_size_alignment", linkageName: "_ZN4core5alloc6layout6Layout19from_size_alignment17hb10d5172e43f2ff6E", scope: !170, file: !4471, line: 98, type: !4575, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4591)
!4575 = !DISubroutineType(types: !4576)
!4576 = !{!4577, !9, !174}
!4577 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !848, file: !2, size: 128, align: 64, elements: !4578, templateParams: !45, identifier: "9ec9687ff030a689994bdde56e3000af")
!4578 = !{!4579}
!4579 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4577, file: !2, size: 128, align: 64, elements: !4580, templateParams: !45, identifier: "7828510703169188932ef95be8552e14", discriminator: !4590)
!4580 = !{!4581, !4586}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4579, file: !2, baseType: !4582, size: 128, align: 64)
!4582 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4577, file: !2, size: 128, align: 64, elements: !4583, templateParams: !4585, identifier: "c4cdad3cc80fab9451f0e2eb7337834")
!4583 = !{!4584}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4582, file: !2, baseType: !170, size: 128, align: 64)
!4585 = !{!2087, !928}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4579, file: !2, baseType: !4587, size: 128, align: 64, extraData: i64 0)
!4587 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4577, file: !2, size: 128, align: 64, elements: !4588, templateParams: !4585, identifier: "49c8b35cb54171732118e298d842321b")
!4588 = !{!4589}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4587, file: !2, baseType: !71, align: 8)
!4590 = !DIDerivedType(tag: DW_TAG_member, scope: !4577, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!4591 = !{!4592, !4593}
!4592 = !DILocalVariable(name: "size", arg: 1, scope: !4574, file: !4471, line: 98, type: !9)
!4593 = !DILocalVariable(name: "align", arg: 2, scope: !4574, file: !4471, line: 98, type: !174)
!4594 = !DILocation(line: 98, column: 34, scope: !4574)
!4595 = !DILocation(line: 98, column: 47, scope: !4574)
!4596 = !DILocalVariable(name: "align", arg: 1, scope: !4597, file: !4471, line: 78, type: !174)
!4597 = distinct !DISubprogram(name: "max_size_for_align", linkageName: "_ZN4core5alloc6layout6Layout18max_size_for_align17hcea85426744c29b3E", scope: !170, file: !4471, line: 78, type: !3203, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4598)
!4598 = !{!4596}
!4599 = !DILocation(line: 78, column: 33, scope: !4597, inlinedAt: !4600)
!4600 = distinct !DILocation(line: 99, column: 19, scope: !4574)
!4601 = !DILocation(line: 93, column: 32, scope: !4597, inlinedAt: !4600)
!4602 = !DILocation(line: 93, column: 31, scope: !4597, inlinedAt: !4600)
!4603 = !DILocation(line: 93, column: 9, scope: !4597, inlinedAt: !4600)
!4604 = !DILocation(line: 99, column: 12, scope: !4574)
!4605 = !DILocation(line: 104, column: 12, scope: !4574)
!4606 = !DILocation(line: 104, column: 9, scope: !4574)
!4607 = !DILocation(line: 105, column: 6, scope: !4574)
!4608 = !DILocation(line: 100, column: 20, scope: !4574)
!4609 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h2e4ddc0b390018deE", scope: !170, file: !4471, line: 118, type: !4610, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4612)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{!170, !9, !9}
!4612 = !{!4613, !4614}
!4613 = !DILocalVariable(name: "size", arg: 1, scope: !4609, file: !4471, line: 118, type: !9)
!4614 = !DILocalVariable(name: "align", arg: 2, scope: !4609, file: !4471, line: 118, type: !9)
!4615 = !DILocation(line: 118, column: 51, scope: !4609)
!4616 = !DILocation(line: 118, column: 64, scope: !4609)
!4617 = !DILocation(line: 120, column: 40, scope: !4609)
!4618 = !DILocation(line: 120, column: 18, scope: !4609)
!4619 = !DILocation(line: 121, column: 6, scope: !4609)
!4620 = distinct !DISubprogram(name: "new<alloc::rc::RcBox<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h3e89a21e3a03b808E", scope: !170, file: !4471, line: 148, type: !4621, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4478, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!170}
!4623 = !{!4624, !4626}
!4624 = !DILocalVariable(name: "size", scope: !4625, file: !4471, line: 149, type: !9, align: 8)
!4625 = distinct !DILexicalBlock(scope: !4620, file: !4471, line: 149, column: 9)
!4626 = !DILocalVariable(name: "align", scope: !4625, file: !4471, line: 149, type: !9, align: 8)
!4627 = !DILocation(line: 149, column: 29, scope: !4620)
!4628 = !DILocation(line: 149, column: 14, scope: !4620)
!4629 = !DILocation(line: 149, column: 14, scope: !4625)
!4630 = !DILocation(line: 149, column: 20, scope: !4620)
!4631 = !DILocation(line: 149, column: 20, scope: !4625)
!4632 = !DILocation(line: 153, column: 18, scope: !4625)
!4633 = !DILocation(line: 154, column: 6, scope: !4620)
!4634 = distinct !DISubprogram(name: "new<alloc::sync::ArcInner<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h567bd363ed49f0d2E", scope: !170, file: !4471, line: 148, type: !4621, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4496, retainedNodes: !4635)
!4635 = !{!4636, !4638}
!4636 = !DILocalVariable(name: "size", scope: !4637, file: !4471, line: 149, type: !9, align: 8)
!4637 = distinct !DILexicalBlock(scope: !4634, file: !4471, line: 149, column: 9)
!4638 = !DILocalVariable(name: "align", scope: !4637, file: !4471, line: 149, type: !9, align: 8)
!4639 = !DILocation(line: 149, column: 29, scope: !4634)
!4640 = !DILocation(line: 149, column: 14, scope: !4634)
!4641 = !DILocation(line: 149, column: 14, scope: !4637)
!4642 = !DILocation(line: 149, column: 20, scope: !4634)
!4643 = !DILocation(line: 149, column: 20, scope: !4637)
!4644 = !DILocation(line: 153, column: 18, scope: !4637)
!4645 = !DILocation(line: 154, column: 6, scope: !4634)
!4646 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h7245abd90ae3e264E", scope: !170, file: !4471, line: 128, type: !4647, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4649)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!9, !4514}
!4649 = !{!4650}
!4650 = !DILocalVariable(name: "self", arg: 1, scope: !4646, file: !4471, line: 128, type: !4514)
!4651 = !DILocation(line: 128, column: 23, scope: !4646)
!4652 = !DILocation(line: 129, column: 9, scope: !4646)
!4653 = !DILocation(line: 130, column: 6, scope: !4646)
!4654 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h92cd3b852153a822E", scope: !170, file: !4471, line: 139, type: !4647, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4655)
!4655 = !{!4656}
!4656 = !DILocalVariable(name: "self", arg: 1, scope: !4654, file: !4471, line: 139, type: !4514)
!4657 = !DILocation(line: 139, column: 24, scope: !4654)
!4658 = !DILocation(line: 140, column: 9, scope: !4654)
!4659 = !DILocation(line: 141, column: 6, scope: !4654)
!4660 = distinct !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17h7f5629849fc914bdE", scope: !170, file: !4471, line: 436, type: !4661, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !4663)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{!4577, !9}
!4663 = !{!4664}
!4664 = !DILocalVariable(name: "n", arg: 1, scope: !4660, file: !4471, line: 436, type: !9)
!4665 = !DILocation(line: 436, column: 27, scope: !4660)
!4666 = !DILocation(line: 438, column: 43, scope: !4660)
!4667 = !DILocation(line: 438, column: 16, scope: !4660)
!4668 = !DILocation(line: 463, column: 6, scope: !4660)
!4669 = distinct !DISubprogram(name: "inner", linkageName: "_ZN4core5alloc6layout6Layout5array5inner17he6d70d3d35d2d108E", scope: !4670, file: !4471, line: 441, type: !4672, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4674)
!4670 = !DINamespace(name: "array", scope: !4671)
!4671 = !DINamespace(name: "{impl#0}", scope: !72)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!4577, !9, !174, !9}
!4674 = !{!4675, !4676, !4677, !4678}
!4675 = !DILocalVariable(name: "element_size", arg: 1, scope: !4669, file: !4471, line: 442, type: !9)
!4676 = !DILocalVariable(name: "align", arg: 2, scope: !4669, file: !4471, line: 443, type: !174)
!4677 = !DILocalVariable(name: "n", arg: 3, scope: !4669, file: !4471, line: 444, type: !9)
!4678 = !DILocalVariable(name: "array_size", scope: !4679, file: !4471, line: 456, type: !9, align: 8)
!4679 = distinct !DILexicalBlock(scope: !4669, file: !4471, line: 456, column: 13)
!4680 = !DILocation(line: 442, column: 13, scope: !4669)
!4681 = !DILocation(line: 443, column: 13, scope: !4669)
!4682 = !DILocation(line: 444, column: 13, scope: !4669)
!4683 = !DILocation(line: 452, column: 16, scope: !4669)
!4684 = !DILocation(line: 78, column: 33, scope: !4597, inlinedAt: !4685)
!4685 = distinct !DILocation(line: 452, column: 41, scope: !4669)
!4686 = !DILocation(line: 93, column: 32, scope: !4597, inlinedAt: !4685)
!4687 = !DILocation(line: 93, column: 31, scope: !4597, inlinedAt: !4685)
!4688 = !DILocation(line: 93, column: 9, scope: !4597, inlinedAt: !4685)
!4689 = !DILocation(line: 452, column: 41, scope: !4669)
!4690 = !DILocation(line: 452, column: 37, scope: !4669)
!4691 = !DILocation(line: 456, column: 30, scope: !4669)
!4692 = !DILocation(line: 453, column: 24, scope: !4669)
!4693 = !DILocation(line: 462, column: 10, scope: !4669)
!4694 = !DILocation(line: 456, column: 17, scope: !4679)
!4695 = !DILocation(line: 461, column: 71, scope: !4679)
!4696 = !DILocation(line: 461, column: 25, scope: !4679)
!4697 = !DILocation(line: 461, column: 22, scope: !4679)
!4698 = distinct !DISubprogram(name: "extend", linkageName: "_ZN4core5alloc6layout6Layout6extend17hf1cb85f7a69e01e3E", scope: !170, file: !4471, line: 381, type: !4699, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4701)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!914, !4514, !170}
!4701 = !{!4702, !4703, !4704, !4706, !4708, !4710, !4712, !4714, !4716, !4718, !4720, !4722, !4724}
!4702 = !DILocalVariable(name: "self", arg: 1, scope: !4698, file: !4471, line: 381, type: !4514)
!4703 = !DILocalVariable(name: "next", arg: 2, scope: !4698, file: !4471, line: 381, type: !170)
!4704 = !DILocalVariable(name: "new_align", scope: !4705, file: !4471, line: 382, type: !174, align: 8)
!4705 = distinct !DILexicalBlock(scope: !4698, file: !4471, line: 382, column: 9)
!4706 = !DILocalVariable(name: "pad", scope: !4707, file: !4471, line: 383, type: !9, align: 8)
!4707 = distinct !DILexicalBlock(scope: !4705, file: !4471, line: 383, column: 9)
!4708 = !DILocalVariable(name: "offset", scope: !4709, file: !4471, line: 385, type: !9, align: 8)
!4709 = distinct !DILexicalBlock(scope: !4707, file: !4471, line: 385, column: 9)
!4710 = !DILocalVariable(name: "residual", scope: !4711, file: !4471, line: 385, type: !934, align: 1)
!4711 = distinct !DILexicalBlock(scope: !4707, file: !4471, line: 385, column: 69)
!4712 = !DILocalVariable(name: "val", scope: !4713, file: !4471, line: 385, type: !9, align: 8)
!4713 = distinct !DILexicalBlock(scope: !4707, file: !4471, line: 385, column: 22)
!4714 = !DILocalVariable(name: "new_size", scope: !4715, file: !4471, line: 386, type: !9, align: 8)
!4715 = distinct !DILexicalBlock(scope: !4709, file: !4471, line: 386, column: 9)
!4716 = !DILocalVariable(name: "residual", scope: !4717, file: !4471, line: 386, type: !934, align: 1)
!4717 = distinct !DILexicalBlock(scope: !4709, file: !4471, line: 386, column: 74)
!4718 = !DILocalVariable(name: "val", scope: !4719, file: !4471, line: 386, type: !9, align: 8)
!4719 = distinct !DILexicalBlock(scope: !4709, file: !4471, line: 386, column: 24)
!4720 = !DILocalVariable(name: "layout", scope: !4721, file: !4471, line: 389, type: !170, align: 8)
!4721 = distinct !DILexicalBlock(scope: !4715, file: !4471, line: 389, column: 9)
!4722 = !DILocalVariable(name: "residual", scope: !4723, file: !4471, line: 389, type: !934, align: 1)
!4723 = distinct !DILexicalBlock(scope: !4715, file: !4471, line: 389, column: 70)
!4724 = !DILocalVariable(name: "val", scope: !4725, file: !4471, line: 389, type: !170, align: 8)
!4725 = distinct !DILexicalBlock(scope: !4715, file: !4471, line: 389, column: 22)
!4726 = !DILocation(line: 381, column: 25, scope: !4698)
!4727 = !DILocation(line: 381, column: 32, scope: !4698)
!4728 = !DILocation(line: 385, column: 69, scope: !4711)
!4729 = !DILocation(line: 386, column: 74, scope: !4717)
!4730 = !DILocation(line: 389, column: 70, scope: !4723)
!4731 = !DILocation(line: 382, column: 34, scope: !4698)
!4732 = !DILocation(line: 382, column: 46, scope: !4698)
!4733 = !DILocation(line: 382, column: 25, scope: !4698)
!4734 = !DILocation(line: 382, column: 13, scope: !4705)
!4735 = !DILocation(line: 383, column: 43, scope: !4705)
!4736 = !DILocation(line: 383, column: 19, scope: !4705)
!4737 = !DILocation(line: 383, column: 13, scope: !4707)
!4738 = !DILocation(line: 385, column: 22, scope: !4707)
!4739 = !DILocation(line: 385, column: 13, scope: !4709)
!4740 = !DILocation(line: 385, column: 22, scope: !4713)
!4741 = !DILocation(line: 386, column: 43, scope: !4709)
!4742 = !DILocation(line: 386, column: 24, scope: !4709)
!4743 = !DILocation(line: 385, column: 22, scope: !4711)
!4744 = !DILocation(line: 391, column: 6, scope: !4698)
!4745 = !DILocation(line: 386, column: 13, scope: !4715)
!4746 = !DILocation(line: 386, column: 24, scope: !4719)
!4747 = !DILocation(line: 389, column: 22, scope: !4715)
!4748 = !DILocation(line: 386, column: 24, scope: !4717)
!4749 = !DILocation(line: 389, column: 13, scope: !4721)
!4750 = !DILocation(line: 389, column: 22, scope: !4725)
!4751 = !DILocation(line: 390, column: 12, scope: !4721)
!4752 = !DILocation(line: 390, column: 9, scope: !4721)
!4753 = !DILocation(line: 389, column: 22, scope: !4723)
!4754 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h70829427c732de9cE", scope: !170, file: !4471, line: 214, type: !4755, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !4757)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!34, !4514}
!4757 = !{!4758}
!4758 = !DILocalVariable(name: "self", arg: 1, scope: !4754, file: !4471, line: 214, type: !4514)
!4759 = !DILocation(line: 214, column: 27, scope: !4754)
!4760 = !DILocation(line: 216, column: 71, scope: !4754)
!4761 = !DILocation(line: 593, column: 29, scope: !3102, inlinedAt: !4762)
!4762 = distinct !DILocation(line: 216, column: 41, scope: !4754)
!4763 = !DILocation(line: 599, column: 14, scope: !3102, inlinedAt: !4762)
!4764 = !DILocation(line: 216, column: 18, scope: !4754)
!4765 = !DILocation(line: 217, column: 6, scope: !4754)
!4766 = distinct !DISubprogram(name: "cause<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error5cause17h4f3413bed4738be7E", scope: !4768, file: !4767, line: 120, type: !4770, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4793, retainedNodes: !4791)
!4767 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/error.rs", directory: "", checksumkind: CSK_MD5, checksum: "3a959e7460993e31aa01e4384fb7438e")
!4768 = !DINamespace(name: "Error", scope: !4769)
!4769 = !DINamespace(name: "error", scope: !31)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{!4772, !334}
!4772 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&dyn core::error::Error>", scope: !84, file: !2, size: 128, align: 64, elements: !4773, templateParams: !45, identifier: "709b24046edb4f2d781916e58c564555")
!4773 = !{!4774}
!4774 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4772, file: !2, size: 128, align: 64, elements: !4775, templateParams: !45, identifier: "14984dfe9e3e168ff57b164704a7cfce", discriminator: !4790)
!4775 = !{!4776, !4786}
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4774, file: !2, baseType: !4777, size: 128, align: 64, extraData: i64 0)
!4777 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4772, file: !2, size: 128, align: 64, elements: !45, templateParams: !4778, identifier: "d62e55a5fdac74bef26ae2762a1b7133")
!4778 = !{!4779}
!4779 = !DITemplateTypeParameter(name: "T", type: !4780)
!4780 = !DICompositeType(tag: DW_TAG_structure_type, name: "&dyn core::error::Error", file: !2, size: 128, align: 64, elements: !4781, templateParams: !45, identifier: "88931bd634206154de7243ab0982ea6e")
!4781 = !{!4782, !4785}
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4780, file: !2, baseType: !4783, size: 64, align: 64)
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4784, size: 64, align: 64, dwarfAddressSpace: 0)
!4784 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::error::Error", file: !2, align: 8, elements: !45, identifier: "7364bc334b95b401b47b2c5e0cb88cc3")
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4780, file: !2, baseType: !1147, size: 64, align: 64, offset: 64)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4774, file: !2, baseType: !4787, size: 128, align: 64)
!4787 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4772, file: !2, size: 128, align: 64, elements: !4788, templateParams: !4778, identifier: "c6e65eecbc15f08a704d9010768a0ca7")
!4788 = !{!4789}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4787, file: !2, baseType: !4780, size: 128, align: 64)
!4790 = !DIDerivedType(tag: DW_TAG_member, scope: !4772, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!4791 = !{!4792}
!4792 = !DILocalVariable(name: "self", arg: 1, scope: !4766, file: !4767, line: 120, type: !334)
!4793 = !{!4794}
!4794 = !DITemplateTypeParameter(name: "Self", type: !131)
!4795 = !DILocation(line: 120, column: 14, scope: !4766)
!4796 = !DILocation(line: 121, column: 9, scope: !4766)
!4797 = !DILocation(line: 122, column: 6, scope: !4766)
!4798 = distinct !DISubprogram(name: "cause<alloc::boxed::{impl#66}::from::StringError>", linkageName: "_ZN4core5error5Error5cause17h7571e2326d752b49E", scope: !4768, file: !4767, line: 120, type: !4799, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4804, retainedNodes: !4802)
!4799 = !DISubroutineType(types: !4800)
!4800 = !{!4772, !4801}
!4801 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::{impl#66}::from::StringError", baseType: !110, size: 64, align: 64, dwarfAddressSpace: 0)
!4802 = !{!4803}
!4803 = !DILocalVariable(name: "self", arg: 1, scope: !4798, file: !4767, line: 120, type: !4801)
!4804 = !{!4805}
!4805 = !DITemplateTypeParameter(name: "Self", type: !110)
!4806 = !DILocation(line: 120, column: 14, scope: !4798)
!4807 = !DILocation(line: 121, column: 9, scope: !4798)
!4808 = !DILocation(line: 122, column: 6, scope: !4798)
!4809 = distinct !DISubprogram(name: "source<alloc::boxed::{impl#66}::from::StringError>", linkageName: "_ZN4core5error5Error6source17h64834ca2e701851dE", scope: !4768, file: !4767, line: 84, type: !4799, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4804, retainedNodes: !4810)
!4810 = !{!4811}
!4811 = !DILocalVariable(name: "self", arg: 1, scope: !4809, file: !4767, line: 84, type: !4801)
!4812 = !DILocation(line: 84, column: 15, scope: !4809)
!4813 = !DILocation(line: 85, column: 9, scope: !4809)
!4814 = !DILocation(line: 86, column: 6, scope: !4809)
!4815 = distinct !DISubprogram(name: "source<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error6source17h8d69b3ad77d08327E", scope: !4768, file: !4767, line: 84, type: !4770, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4793, retainedNodes: !4816)
!4816 = !{!4817}
!4817 = !DILocalVariable(name: "self", arg: 1, scope: !4815, file: !4767, line: 84, type: !334)
!4818 = !DILocation(line: 84, column: 15, scope: !4815)
!4819 = !DILocation(line: 85, column: 9, scope: !4815)
!4820 = !DILocation(line: 86, column: 6, scope: !4815)
!4821 = distinct !DISubprogram(name: "provide<alloc::boxed::{impl#66}::from::StringError>", linkageName: "_ZN4core5error5Error7provide17h0facdcbdc4ed310dE", scope: !4768, file: !4767, line: 194, type: !4822, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4804, retainedNodes: !4833)
!4822 = !DISubroutineType(types: !4823)
!4823 = !{null, !4801, !4824}
!4824 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut core::any::Demand", file: !2, size: 128, align: 64, elements: !4825, templateParams: !45, identifier: "15696cd5f58804618d32d73090115495")
!4825 = !{!4826, !4832}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4824, file: !2, baseType: !4827, size: 64, align: 64)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64, align: 64, dwarfAddressSpace: 0)
!4828 = !DICompositeType(tag: DW_TAG_structure_type, name: "Demand", scope: !1335, file: !2, align: 8, elements: !4829, templateParams: !45, identifier: "33a7db910515494b4960a0fd51805efe")
!4829 = !{!4830}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4828, file: !2, baseType: !4831, align: 8)
!4831 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::any::Erased", file: !2, align: 8, elements: !45, identifier: "8097bf8da036c87b8a0a78a5e4ce663c")
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4824, file: !2, baseType: !1147, size: 64, align: 64, offset: 64)
!4833 = !{!4834, !4835}
!4834 = !DILocalVariable(name: "self", arg: 1, scope: !4821, file: !4767, line: 194, type: !4801)
!4835 = !DILocalVariable(name: "demand", arg: 2, scope: !4821, file: !4767, line: 194, type: !4824)
!4836 = !DILocation(line: 194, column: 20, scope: !4821)
!4837 = !DILocation(line: 194, column: 30, scope: !4821)
!4838 = !DILocation(line: 194, column: 57, scope: !4821)
!4839 = distinct !DISubprogram(name: "provide<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error7provide17h9ded8b4725c23ab2E", scope: !4768, file: !4767, line: 194, type: !4840, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4793, retainedNodes: !4842)
!4840 = !DISubroutineType(types: !4841)
!4841 = !{null, !334, !4824}
!4842 = !{!4843, !4844}
!4843 = !DILocalVariable(name: "self", arg: 1, scope: !4839, file: !4767, line: 194, type: !334)
!4844 = !DILocalVariable(name: "demand", arg: 2, scope: !4839, file: !4767, line: 194, type: !4824)
!4845 = !DILocation(line: 194, column: 20, scope: !4839)
!4846 = !DILocation(line: 194, column: 30, scope: !4839)
!4847 = !DILocation(line: 194, column: 57, scope: !4839)
!4848 = distinct !DISubprogram(name: "type_id<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error7type_id17h45fb35de5050bdc5E", scope: !4768, file: !4767, line: 95, type: !4849, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4793, retainedNodes: !4853)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!1334, !334, !4851}
!4851 = !DICompositeType(tag: DW_TAG_structure_type, name: "Internal", scope: !4852, file: !2, align: 8, elements: !45, identifier: "f5df4db4ec1fc056f25f7575797b912b")
!4852 = !DINamespace(name: "private", scope: !4769)
!4853 = !{!4854, !4855}
!4854 = !DILocalVariable(name: "self", arg: 1, scope: !4848, file: !4767, line: 95, type: !334)
!4855 = !DILocalVariable(arg: 2, scope: !4848, file: !4767, line: 95, type: !4851)
!4856 = !DILocation(line: 95, column: 16, scope: !4848)
!4857 = !DILocation(line: 95, column: 23, scope: !4848)
!4858 = !DILocation(line: 99, column: 9, scope: !4848)
!4859 = !DILocation(line: 100, column: 6, scope: !4848)
!4860 = distinct !DISubprogram(name: "type_id<alloc::boxed::{impl#66}::from::StringError>", linkageName: "_ZN4core5error5Error7type_id17h5b316b3835b36a28E", scope: !4768, file: !4767, line: 95, type: !4861, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4804, retainedNodes: !4863)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!1334, !4801, !4851}
!4863 = !{!4864, !4865}
!4864 = !DILocalVariable(name: "self", arg: 1, scope: !4860, file: !4767, line: 95, type: !4801)
!4865 = !DILocalVariable(arg: 2, scope: !4860, file: !4767, line: 95, type: !4851)
!4866 = !DILocation(line: 95, column: 16, scope: !4860)
!4867 = !DILocation(line: 95, column: 23, scope: !4860)
!4868 = !DILocation(line: 99, column: 9, scope: !4860)
!4869 = !DILocation(line: 100, column: 6, scope: !4860)
!4870 = distinct !DISubprogram(name: "get_unchecked<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h448cf53dade18bf3E", scope: !4872, file: !4871, line: 398, type: !4873, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4878, retainedNodes: !4875)
!4871 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "659742f64ef071169c3779d650b2f3ba")
!4872 = !DINamespace(name: "{impl#0}", scope: !388)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!1433, !1433, !3780}
!4875 = !{!4876, !4877}
!4876 = !DILocalVariable(name: "self", arg: 1, scope: !4870, file: !4871, line: 398, type: !1433)
!4877 = !DILocalVariable(name: "index", arg: 2, scope: !4870, file: !4871, line: 398, type: !3780)
!4878 = !{!41, !4879}
!4879 = !DITemplateTypeParameter(name: "I", type: !3780)
!4880 = !DILocation(line: 398, column: 42, scope: !4870)
!4881 = !DILocation(line: 398, column: 49, scope: !4870)
!4882 = !DILocation(line: 405, column: 20, scope: !4870)
!4883 = !DILocation(line: 406, column: 6, scope: !4870)
!4884 = distinct !DISubprogram(name: "get_unchecked_mut<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h3f0ce64aec9622b2E", scope: !4872, file: !4871, line: 436, type: !4885, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4890, retainedNodes: !4887)
!4885 = !DISubroutineType(types: !4886)
!4886 = !{!4006, !3899, !9}
!4887 = !{!4888, !4889}
!4888 = !DILocalVariable(name: "self", arg: 1, scope: !4884, file: !4871, line: 436, type: !3899)
!4889 = !DILocalVariable(name: "index", arg: 2, scope: !4884, file: !4871, line: 436, type: !9)
!4890 = !{!41, !4891}
!4891 = !DITemplateTypeParameter(name: "I", type: !9)
!4892 = !DILocation(line: 436, column: 46, scope: !4884)
!4893 = !DILocation(line: 436, column: 57, scope: !4884)
!4894 = !DILocation(line: 443, column: 24, scope: !4884)
!4895 = !DILocation(line: 444, column: 6, scope: !4884)
!4896 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h641f73b43a551cdeE", scope: !4872, file: !4871, line: 436, type: !4897, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4907, retainedNodes: !4904)
!4897 = !DISubroutineType(types: !4898)
!4898 = !{!4899, !4900, !9}
!4899 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !749, size: 64, align: 64, dwarfAddressSpace: 0)
!4900 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !4901, templateParams: !45, identifier: "4d481f9d3187460ca04a0f9a7ac35644")
!4901 = !{!4902, !4903}
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4900, file: !2, baseType: !748, size: 64, align: 64)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4900, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4904 = !{!4905, !4906}
!4905 = !DILocalVariable(name: "self", arg: 1, scope: !4896, file: !4871, line: 436, type: !4900)
!4906 = !DILocalVariable(name: "index", arg: 2, scope: !4896, file: !4871, line: 436, type: !9)
!4907 = !{!761, !4891}
!4908 = !DILocation(line: 436, column: 46, scope: !4896)
!4909 = !DILocation(line: 436, column: 57, scope: !4896)
!4910 = !DILocation(line: 443, column: 24, scope: !4896)
!4911 = !DILocation(line: 444, column: 6, scope: !4896)
!4912 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hb2446c878806870fE", scope: !4872, file: !4871, line: 436, type: !4913, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4918, retainedNodes: !4915)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{!4900, !4900, !3780}
!4915 = !{!4916, !4917}
!4916 = !DILocalVariable(name: "self", arg: 1, scope: !4912, file: !4871, line: 436, type: !4900)
!4917 = !DILocalVariable(name: "index", arg: 2, scope: !4912, file: !4871, line: 436, type: !3780)
!4918 = !{!761, !4879}
!4919 = !DILocation(line: 436, column: 46, scope: !4912)
!4920 = !DILocation(line: 436, column: 57, scope: !4912)
!4921 = !DILocation(line: 443, column: 24, scope: !4912)
!4922 = !DILocation(line: 444, column: 6, scope: !4912)
!4923 = distinct !DISubprogram(name: "is_empty<core::fmt::ArgumentV1>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h30532b1325b0eddbE", scope: !4872, file: !4871, line: 152, type: !4924, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4928, retainedNodes: !4926)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{!571, !1553}
!4926 = !{!4927}
!4927 = !DILocalVariable(name: "self", arg: 1, scope: !4923, file: !4871, line: 152, type: !1553)
!4928 = !{!4929}
!4929 = !DITemplateTypeParameter(name: "T", type: !1557)
!4930 = !DILocation(line: 152, column: 27, scope: !4923)
!4931 = !DILocation(line: 153, column: 9, scope: !4923)
!4932 = !DILocation(line: 154, column: 6, scope: !4923)
!4933 = distinct !DISubprogram(name: "is_empty<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hf05a1983d0ea83a1E", scope: !4872, file: !4871, line: 152, type: !4934, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !395, retainedNodes: !4936)
!4934 = !DISubroutineType(types: !4935)
!4935 = !{!571, !1502}
!4936 = !{!4937}
!4937 = !DILocalVariable(name: "self", arg: 1, scope: !4933, file: !4871, line: 152, type: !1502)
!4938 = !DILocation(line: 152, column: 27, scope: !4933)
!4939 = !DILocation(line: 153, column: 9, scope: !4933)
!4940 = !DILocation(line: 154, column: 6, scope: !4933)
!4941 = distinct !DISubprogram(name: "from_raw_parts_mut<i8>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h30c1ee3fd8e53edbE", scope: !4943, file: !4942, line: 137, type: !4944, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1198, retainedNodes: !4950)
!4942 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "4e9e8b780584cc248c586456197d9cf5")
!4943 = !DINamespace(name: "raw", scope: !388)
!4944 = !DISubroutineType(types: !4945)
!4945 = !{!4946, !1996, !9}
!4946 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [i8]", file: !2, size: 128, align: 64, elements: !4947, templateParams: !45, identifier: "3c1503e0efdff90af0be0cbf64c0551")
!4947 = !{!4948, !4949}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4946, file: !2, baseType: !1994, size: 64, align: 64)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4946, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4950 = !{!4951, !4952}
!4951 = !DILocalVariable(name: "data", arg: 1, scope: !4941, file: !4942, line: 137, type: !1996)
!4952 = !DILocalVariable(name: "len", arg: 2, scope: !4941, file: !4942, line: 137, type: !9)
!4953 = !DILocation(line: 137, column: 47, scope: !4941)
!4954 = !DILocation(line: 137, column: 61, scope: !4941)
!4955 = !DILocation(line: 140, column: 9, scope: !4941)
!4956 = !DILocalVariable(name: "data", arg: 1, scope: !4957, file: !1191, line: 2241, type: !1996)
!4957 = distinct !DISubprogram(name: "runtime<i8>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17h038edde8e8e8854cE", scope: !4958, file: !1191, line: 2241, type: !4959, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1198, retainedNodes: !4961)
!4958 = !DINamespace(name: "from_raw_parts_mut", scope: !4943)
!4959 = !DISubroutineType(types: !4960)
!4960 = !{null, !1996, !9}
!4961 = !{!4956, !4962}
!4962 = !DILocalVariable(name: "len", arg: 2, scope: !4957, file: !1191, line: 2241, type: !9)
!4963 = !DILocation(line: 2241, column: 39, scope: !4957, inlinedAt: !4964)
!4964 = distinct !DILocation(line: 140, column: 9, scope: !4941)
!4965 = !DILocation(line: 142, column: 46, scope: !4966, inlinedAt: !4964)
!4966 = !DILexicalBlockFile(scope: !4957, file: !4942, discriminator: 0)
!4967 = !DILocation(line: 143, column: 20, scope: !4966, inlinedAt: !4964)
!4968 = !DILocation(line: 2242, column: 20, scope: !4957, inlinedAt: !4964)
!4969 = !DILocation(line: 2244, column: 21, scope: !4957, inlinedAt: !4964)
!4970 = !DILocation(line: 145, column: 15, scope: !4941)
!4971 = !DILocation(line: 147, column: 2, scope: !4941)
!4972 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h7c6310f89568fcfdE", scope: !4943, file: !4942, line: 137, type: !4973, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !4975)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!3899, !1308, !9}
!4975 = !{!4976, !4977}
!4976 = !DILocalVariable(name: "data", arg: 1, scope: !4972, file: !4942, line: 137, type: !1308)
!4977 = !DILocalVariable(name: "len", arg: 2, scope: !4972, file: !4942, line: 137, type: !9)
!4978 = !DILocation(line: 137, column: 47, scope: !4972)
!4979 = !DILocation(line: 137, column: 61, scope: !4972)
!4980 = !DILocation(line: 140, column: 9, scope: !4972)
!4981 = !DILocalVariable(name: "data", arg: 1, scope: !4982, file: !1191, line: 2241, type: !1308)
!4982 = distinct !DISubprogram(name: "runtime<u8>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17hee436a42c256032cE", scope: !4958, file: !1191, line: 2241, type: !4983, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !4985)
!4983 = !DISubroutineType(types: !4984)
!4984 = !{null, !1308, !9}
!4985 = !{!4981, !4986}
!4986 = !DILocalVariable(name: "len", arg: 2, scope: !4982, file: !1191, line: 2241, type: !9)
!4987 = !DILocation(line: 2241, column: 39, scope: !4982, inlinedAt: !4988)
!4988 = distinct !DILocation(line: 140, column: 9, scope: !4972)
!4989 = !DILocation(line: 142, column: 46, scope: !4990, inlinedAt: !4988)
!4990 = !DILexicalBlockFile(scope: !4982, file: !4942, discriminator: 0)
!4991 = !DILocation(line: 143, column: 20, scope: !4990, inlinedAt: !4988)
!4992 = !DILocation(line: 2242, column: 20, scope: !4982, inlinedAt: !4988)
!4993 = !DILocation(line: 2244, column: 21, scope: !4982, inlinedAt: !4988)
!4994 = !DILocation(line: 145, column: 15, scope: !4972)
!4995 = !DILocation(line: 147, column: 2, scope: !4972)
!4996 = distinct !DISubprogram(name: "from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h9e0de942ef190a92E", scope: !4943, file: !4942, line: 137, type: !4997, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !5000)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!4900, !4999, !9}
!4999 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !749, size: 64, align: 64, dwarfAddressSpace: 0)
!5000 = !{!5001, !5002}
!5001 = !DILocalVariable(name: "data", arg: 1, scope: !4996, file: !4942, line: 137, type: !4999)
!5002 = !DILocalVariable(name: "len", arg: 2, scope: !4996, file: !4942, line: 137, type: !9)
!5003 = !DILocation(line: 137, column: 47, scope: !4996)
!5004 = !DILocation(line: 137, column: 61, scope: !4996)
!5005 = !DILocation(line: 140, column: 9, scope: !4996)
!5006 = !DILocalVariable(name: "data", arg: 1, scope: !5007, file: !1191, line: 2241, type: !4999)
!5007 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut7runtime17hc80df4dca38100f2E", scope: !4958, file: !1191, line: 2241, type: !5008, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !5010)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{null, !4999, !9}
!5010 = !{!5006, !5011}
!5011 = !DILocalVariable(name: "len", arg: 2, scope: !5007, file: !1191, line: 2241, type: !9)
!5012 = !DILocation(line: 2241, column: 39, scope: !5007, inlinedAt: !5013)
!5013 = distinct !DILocation(line: 140, column: 9, scope: !4996)
!5014 = !DILocation(line: 142, column: 46, scope: !5015, inlinedAt: !5013)
!5015 = !DILexicalBlockFile(scope: !5007, file: !4942, discriminator: 0)
!5016 = !DILocation(line: 143, column: 20, scope: !5015, inlinedAt: !5013)
!5017 = !DILocation(line: 2242, column: 20, scope: !5007, inlinedAt: !5013)
!5018 = !DILocation(line: 2244, column: 21, scope: !5007, inlinedAt: !5013)
!5019 = !DILocation(line: 145, column: 15, scope: !4996)
!5020 = !DILocation(line: 147, column: 2, scope: !4996)
!5021 = distinct !DISubprogram(name: "range<core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index5range17h2ac62bcd5c2d856eE", scope: !5023, file: !5022, line: 695, type: !5024, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5065, retainedNodes: !5029)
!5022 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "1350c165f4aa6e79d8fe4fa0de29c328")
!5023 = !DINamespace(name: "index", scope: !388)
!5024 = !DISubroutineType(types: !5025)
!5025 = !{!3780, !3780, !5026, !882}
!5026 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !3711, file: !2, size: 64, align: 64, elements: !5027, templateParams: !3714, identifier: "eef9e250acf500f29d1a295d662e643c")
!5027 = !{!5028}
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5026, file: !2, baseType: !9, size: 64, align: 64)
!5029 = !{!5030, !5031, !5032, !5034, !5051, !5053, !5055, !5057, !5059, !5061, !5063}
!5030 = !DILocalVariable(name: "range", arg: 1, scope: !5021, file: !5022, line: 695, type: !3780)
!5031 = !DILocalVariable(name: "bounds", arg: 2, scope: !5021, file: !5022, line: 695, type: !5026)
!5032 = !DILocalVariable(name: "len", scope: !5033, file: !5022, line: 699, type: !9, align: 8)
!5033 = distinct !DILexicalBlock(scope: !5021, file: !5022, line: 699, column: 5)
!5034 = !DILocalVariable(name: "start", scope: !5035, file: !5022, line: 701, type: !5036, align: 8)
!5035 = distinct !DILexicalBlock(scope: !5033, file: !5022, line: 701, column: 5)
!5036 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bound<&usize>", scope: !3711, file: !2, size: 128, align: 64, elements: !5037, templateParams: !45, identifier: "297957fdc3c9fcddb47688261bf50df")
!5037 = !{!5038}
!5038 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5036, file: !2, size: 128, align: 64, elements: !5039, templateParams: !45, identifier: "e5ca5bc375c54aed3fd46d211b80b019", discriminator: !5050)
!5039 = !{!5040, !5044, !5048}
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "Included", scope: !5038, file: !2, baseType: !5041, size: 128, align: 64, extraData: i64 0)
!5041 = !DICompositeType(tag: DW_TAG_structure_type, name: "Included", scope: !5036, file: !2, size: 128, align: 64, elements: !5042, templateParams: !2036, identifier: "d77642b16c9bea1e21217df123a6c346")
!5042 = !{!5043}
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5041, file: !2, baseType: !289, size: 64, align: 64, offset: 64)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "Excluded", scope: !5038, file: !2, baseType: !5045, size: 128, align: 64, extraData: i64 1)
!5045 = !DICompositeType(tag: DW_TAG_structure_type, name: "Excluded", scope: !5036, file: !2, size: 128, align: 64, elements: !5046, templateParams: !2036, identifier: "11f1308c92c75dc17a75fd3d1cf5bce7")
!5046 = !{!5047}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5045, file: !2, baseType: !289, size: 64, align: 64, offset: 64)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "Unbounded", scope: !5038, file: !2, baseType: !5049, size: 128, align: 64, extraData: i64 2)
!5049 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unbounded", scope: !5036, file: !2, size: 128, align: 64, elements: !45, templateParams: !2036, identifier: "632745e7ad53886973cae8aef6414f10")
!5050 = !DIDerivedType(tag: DW_TAG_member, scope: !5036, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!5051 = !DILocalVariable(name: "start", scope: !5052, file: !5022, line: 702, type: !9, align: 8)
!5052 = distinct !DILexicalBlock(scope: !5035, file: !5022, line: 702, column: 5)
!5053 = !DILocalVariable(name: "start", scope: !5054, file: !5022, line: 703, type: !9, align: 8)
!5054 = distinct !DILexicalBlock(scope: !5035, file: !5022, line: 703, column: 9)
!5055 = !DILocalVariable(name: "start", scope: !5056, file: !5022, line: 704, type: !289, align: 8)
!5056 = distinct !DILexicalBlock(scope: !5035, file: !5022, line: 704, column: 9)
!5057 = !DILocalVariable(name: "end", scope: !5058, file: !5022, line: 710, type: !5036, align: 8)
!5058 = distinct !DILexicalBlock(scope: !5052, file: !5022, line: 710, column: 5)
!5059 = !DILocalVariable(name: "end", scope: !5060, file: !5022, line: 711, type: !9, align: 8)
!5060 = distinct !DILexicalBlock(scope: !5058, file: !5022, line: 711, column: 5)
!5061 = !DILocalVariable(name: "end", scope: !5062, file: !5022, line: 712, type: !289, align: 8)
!5062 = distinct !DILexicalBlock(scope: !5058, file: !5022, line: 712, column: 9)
!5063 = !DILocalVariable(name: "end", scope: !5064, file: !5022, line: 715, type: !9, align: 8)
!5064 = distinct !DILexicalBlock(scope: !5058, file: !5022, line: 715, column: 9)
!5065 = !{!5066}
!5066 = !DITemplateTypeParameter(name: "R", type: !3780)
!5067 = !DILocation(line: 695, column: 17, scope: !5021)
!5068 = !DILocation(line: 695, column: 27, scope: !5021)
!5069 = !DILocation(line: 701, column: 9, scope: !5035)
!5070 = !DILocation(line: 702, column: 9, scope: !5052)
!5071 = !DILocation(line: 710, column: 9, scope: !5058)
!5072 = !DILocation(line: 711, column: 9, scope: !5060)
!5073 = !DILocation(line: 699, column: 15, scope: !5021)
!5074 = !DILocation(line: 699, column: 9, scope: !5033)
!5075 = !DILocation(line: 701, column: 37, scope: !5033)
!5076 = !DILocation(line: 702, column: 23, scope: !5035)
!5077 = !{i64 0, i64 3}
!5078 = !DILocation(line: 702, column: 17, scope: !5035)
!5079 = !DILocation(line: 703, column: 31, scope: !5035)
!5080 = !DILocation(line: 703, column: 31, scope: !5054)
!5081 = !DILocation(line: 703, column: 41, scope: !5054)
!5082 = !DILocation(line: 703, column: 45, scope: !5035)
!5083 = !DILocation(line: 704, column: 30, scope: !5035)
!5084 = !DILocation(line: 704, column: 30, scope: !5056)
!5085 = !DILocation(line: 705, column: 13, scope: !5056)
!5086 = !DILocation(line: 707, column: 34, scope: !5035)
!5087 = !DILocation(line: 710, column: 35, scope: !5052)
!5088 = !DILocation(line: 711, column: 21, scope: !5058)
!5089 = !DILocation(line: 711, column: 15, scope: !5058)
!5090 = !DILocation(line: 712, column: 30, scope: !5058)
!5091 = !DILocation(line: 712, column: 30, scope: !5062)
!5092 = !DILocation(line: 713, column: 13, scope: !5062)
!5093 = !DILocation(line: 715, column: 31, scope: !5058)
!5094 = !DILocation(line: 715, column: 31, scope: !5064)
!5095 = !DILocation(line: 715, column: 39, scope: !5064)
!5096 = !DILocation(line: 715, column: 41, scope: !5058)
!5097 = !DILocation(line: 716, column: 34, scope: !5058)
!5098 = !DILocation(line: 719, column: 8, scope: !5060)
!5099 = !DILocation(line: 719, column: 16, scope: !5060)
!5100 = !DILocation(line: 722, column: 8, scope: !5060)
!5101 = !DILocation(line: 720, column: 32, scope: !5060)
!5102 = !DILocation(line: 720, column: 39, scope: !5060)
!5103 = !DILocation(line: 720, column: 9, scope: !5060)
!5104 = !DILocation(line: 726, column: 18, scope: !5060)
!5105 = !DILocation(line: 726, column: 25, scope: !5060)
!5106 = !DILocation(line: 726, column: 5, scope: !5060)
!5107 = !DILocation(line: 727, column: 2, scope: !5021)
!5108 = !DILocation(line: 723, column: 34, scope: !5060)
!5109 = !DILocation(line: 723, column: 9, scope: !5060)
!5110 = distinct !DISubprogram(name: "{closure#0}<core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17hbbb94a70b5246ac5E", scope: !5111, file: !5022, line: 705, type: !5112, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5065, retainedNodes: !5115)
!5111 = !DINamespace(name: "range", scope: !5023)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!9, !5114}
!5114 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::ops::range::Range<usize>>", scope: !5111, file: !2, align: 8, elements: !45, identifier: "8519efc49ab9c390a6fec079f99d55ca")
!5115 = !{!5116}
!5116 = !DILocalVariable(arg: 1, scope: !5110, file: !5022, line: 705, type: !5114)
!5117 = !DILocation(line: 705, column: 49, scope: !5110)
!5118 = !DILocation(line: 705, column: 52, scope: !5110)
!5119 = distinct !DISubprogram(name: "{closure#1}<core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17hdeeab8095d4c12c9E", scope: !5111, file: !5022, line: 713, type: !5120, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5065, retainedNodes: !5123)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{!9, !5122}
!5122 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<core::ops::range::Range<usize>>", scope: !5111, file: !2, align: 8, elements: !45, identifier: "64515b68ae4cef21651c227ea39730d2")
!5123 = !{!5124}
!5124 = !DILocalVariable(arg: 1, scope: !5119, file: !5022, line: 713, type: !5122)
!5125 = !DILocation(line: 713, column: 47, scope: !5119)
!5126 = !DILocation(line: 713, column: 50, scope: !5119)
!5127 = distinct !DISubprogram(name: "memchr_naive", linkageName: "_ZN4core5slice6memchr12memchr_naive17hc9a7344593c5a011E", scope: !5129, file: !5128, line: 53, type: !5130, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !5132)
!5128 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/memchr.rs", directory: "", checksumkind: CSK_MD5, checksum: "213965ea5c732fe7a1f01005ebc0c968")
!5129 = !DINamespace(name: "memchr", scope: !388)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!1126, !39, !1433}
!5132 = !{!5133, !5134, !5135}
!5133 = !DILocalVariable(name: "x", arg: 1, scope: !5127, file: !5128, line: 53, type: !39)
!5134 = !DILocalVariable(name: "text", arg: 2, scope: !5127, file: !5128, line: 53, type: !1433)
!5135 = !DILocalVariable(name: "i", scope: !5136, file: !5128, line: 54, type: !9, align: 8)
!5136 = distinct !DILexicalBlock(scope: !5127, file: !5128, line: 54, column: 5)
!5137 = !DILocation(line: 53, column: 23, scope: !5127)
!5138 = !DILocation(line: 53, column: 30, scope: !5127)
!5139 = !DILocation(line: 54, column: 9, scope: !5136)
!5140 = !DILocation(line: 54, column: 17, scope: !5127)
!5141 = !DILocation(line: 57, column: 5, scope: !5136)
!5142 = !DILocation(line: 57, column: 11, scope: !5136)
!5143 = !DILocation(line: 65, column: 5, scope: !5136)
!5144 = !DILocation(line: 66, column: 2, scope: !5127)
!5145 = !DILocation(line: 58, column: 17, scope: !5136)
!5146 = !DILocation(line: 58, column: 12, scope: !5136)
!5147 = !DILocation(line: 62, column: 9, scope: !5136)
!5148 = !DILocation(line: 59, column: 25, scope: !5136)
!5149 = !DILocation(line: 59, column: 20, scope: !5136)
!5150 = distinct !DISubprogram(name: "memchr", linkageName: "_ZN4core5slice6memchr6memchr17ha28a2edbeacdfa43E", scope: !5129, file: !5128, line: 42, type: !5130, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !5151)
!5151 = !{!5152, !5153}
!5152 = !DILocalVariable(name: "x", arg: 1, scope: !5150, file: !5128, line: 42, type: !39)
!5153 = !DILocalVariable(name: "text", arg: 2, scope: !5150, file: !5128, line: 42, type: !1433)
!5154 = !DILocation(line: 42, column: 21, scope: !5150)
!5155 = !DILocation(line: 42, column: 28, scope: !5150)
!5156 = !DILocation(line: 44, column: 8, scope: !5150)
!5157 = !DILocation(line: 48, column: 5, scope: !5150)
!5158 = !DILocation(line: 45, column: 16, scope: !5150)
!5159 = !DILocation(line: 49, column: 2, scope: !5150)
!5160 = distinct !DISubprogram(name: "unwrap_or_else<usize, core::slice::index::range::{closure_env#1}<core::ops::range::Range<usize>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h860e43b924132f29E", scope: !1126, file: !5161, line: 985, type: !5162, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5169, retainedNodes: !5164)
!5161 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "d6f90b4fba5d6fbabc4ac99b183a8294")
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!9, !1126, !5122}
!5164 = !{!5165, !5166, !5167}
!5165 = !DILocalVariable(name: "self", arg: 1, scope: !5160, file: !5161, line: 985, type: !1126)
!5166 = !DILocalVariable(name: "f", arg: 2, scope: !5160, file: !5161, line: 985, type: !5122)
!5167 = !DILocalVariable(name: "x", scope: !5168, file: !5161, line: 991, type: !9, align: 8)
!5168 = distinct !DILexicalBlock(scope: !5160, file: !5161, line: 991, column: 13)
!5169 = !{!1133, !5170}
!5170 = !DITemplateTypeParameter(name: "F", type: !5122)
!5171 = !DILocation(line: 985, column: 36, scope: !5160)
!5172 = !DILocation(line: 985, column: 42, scope: !5160)
!5173 = !DILocation(line: 990, column: 15, scope: !5160)
!5174 = !DILocation(line: 990, column: 9, scope: !5160)
!5175 = !DILocation(line: 992, column: 21, scope: !5160)
!5176 = !DILocation(line: 991, column: 18, scope: !5160)
!5177 = !DILocation(line: 991, column: 18, scope: !5168)
!5178 = !DILocation(line: 991, column: 24, scope: !5168)
!5179 = !DILocation(line: 991, column: 24, scope: !5160)
!5180 = !DILocation(line: 994, column: 5, scope: !5160)
!5181 = !DILocation(line: 994, column: 6, scope: !5160)
!5182 = distinct !DISubprogram(name: "unwrap_or_else<usize, core::slice::index::range::{closure_env#0}<core::ops::range::Range<usize>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hbfde16003b128d5fE", scope: !1126, file: !5161, line: 985, type: !5183, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5190, retainedNodes: !5185)
!5183 = !DISubroutineType(types: !5184)
!5184 = !{!9, !1126, !5114}
!5185 = !{!5186, !5187, !5188}
!5186 = !DILocalVariable(name: "self", arg: 1, scope: !5182, file: !5161, line: 985, type: !1126)
!5187 = !DILocalVariable(name: "f", arg: 2, scope: !5182, file: !5161, line: 985, type: !5114)
!5188 = !DILocalVariable(name: "x", scope: !5189, file: !5161, line: 991, type: !9, align: 8)
!5189 = distinct !DILexicalBlock(scope: !5182, file: !5161, line: 991, column: 13)
!5190 = !{!1133, !5191}
!5191 = !DITemplateTypeParameter(name: "F", type: !5114)
!5192 = !DILocation(line: 985, column: 36, scope: !5182)
!5193 = !DILocation(line: 985, column: 42, scope: !5182)
!5194 = !DILocation(line: 990, column: 15, scope: !5182)
!5195 = !DILocation(line: 990, column: 9, scope: !5182)
!5196 = !DILocation(line: 992, column: 21, scope: !5182)
!5197 = !DILocation(line: 991, column: 18, scope: !5182)
!5198 = !DILocation(line: 991, column: 18, scope: !5189)
!5199 = !DILocation(line: 991, column: 24, scope: !5189)
!5200 = !DILocation(line: 991, column: 24, scope: !5182)
!5201 = !DILocation(line: 994, column: 5, scope: !5182)
!5202 = !DILocation(line: 994, column: 6, scope: !5182)
!5203 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#2}::next_back::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17he0bced72114984cdE", scope: !3596, file: !5161, line: 1085, type: !5204, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5214, retainedNodes: !5209)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{!534, !3596, !5206}
!5206 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !5207, file: !2, align: 8, elements: !45, identifier: "f11eae1619d8e1a88b90cd2286f1d6f8")
!5207 = !DINamespace(name: "next_back", scope: !5208)
!5208 = !DINamespace(name: "{impl#2}", scope: !556)
!5209 = !{!5210, !5211, !5212}
!5210 = !DILocalVariable(name: "self", arg: 1, scope: !5203, file: !5161, line: 1085, type: !3596)
!5211 = !DILocalVariable(name: "f", arg: 2, scope: !5203, file: !5161, line: 1085, type: !5206)
!5212 = !DILocalVariable(name: "x", scope: !5213, file: !5161, line: 1091, type: !498, align: 4)
!5213 = distinct !DILexicalBlock(scope: !5203, file: !5161, line: 1091, column: 13)
!5214 = !{!3603, !5215, !5216}
!5215 = !DITemplateTypeParameter(name: "U", type: !491)
!5216 = !DITemplateTypeParameter(name: "F", type: !5206)
!5217 = !DILocation(line: 1085, column: 28, scope: !5203)
!5218 = !DILocation(line: 1085, column: 34, scope: !5203)
!5219 = !DILocation(line: 1090, column: 15, scope: !5203)
!5220 = !DILocation(line: 1090, column: 9, scope: !5203)
!5221 = !DILocation(line: 1092, column: 21, scope: !5203)
!5222 = !DILocation(line: 1091, column: 18, scope: !5203)
!5223 = !DILocation(line: 1091, column: 18, scope: !5213)
!5224 = !DILocation(line: 1091, column: 29, scope: !5213)
!5225 = !DILocation(line: 1091, column: 24, scope: !5213)
!5226 = !DILocation(line: 1091, column: 33, scope: !5203)
!5227 = !DILocation(line: 1094, column: 5, scope: !5203)
!5228 = !DILocation(line: 1094, column: 6, scope: !5203)
!5229 = distinct !DISubprogram(name: "take<u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h32df2c97e4d03a48E", scope: !435, file: !5161, line: 1742, type: !5230, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !441, retainedNodes: !5232)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{!435, !1648}
!5232 = !{!5233}
!5233 = !DILocalVariable(name: "self", arg: 1, scope: !5229, file: !5161, line: 1742, type: !1648)
!5234 = !DILocation(line: 1742, column: 23, scope: !5229)
!5235 = !DILocation(line: 1744, column: 28, scope: !5229)
!5236 = !DILocation(line: 1744, column: 9, scope: !5229)
!5237 = !DILocation(line: 1745, column: 6, scope: !5229)
!5238 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h76ecb13723e7e032E", scope: !1126, file: !5161, line: 1213, type: !5239, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5249, retainedNodes: !5255)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!5241, !1126, !159}
!5241 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !848, file: !2, size: 128, align: 64, elements: !5242, templateParams: !45, identifier: "3298552ca903f1c025ad81bd22107229")
!5242 = !{!5243}
!5243 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5241, file: !2, size: 128, align: 64, elements: !5244, templateParams: !45, identifier: "2fc0654dc8cd0ca2c5d4c4adf0fe9f4", discriminator: !5254)
!5244 = !{!5245, !5250}
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5243, file: !2, baseType: !5246, size: 128, align: 64, extraData: i64 -9223372036854775807)
!5246 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5241, file: !2, size: 128, align: 64, elements: !5247, templateParams: !5249, identifier: "b0acca8a01e0235fc87c71bdcd209591")
!5247 = !{!5248}
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5246, file: !2, baseType: !9, size: 64, align: 64)
!5249 = !{!1133, !1068}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5243, file: !2, baseType: !5251, size: 128, align: 64)
!5251 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5241, file: !2, size: 128, align: 64, elements: !5252, templateParams: !5249, identifier: "456d6d0abb7909316ece9cd611b3279c")
!5252 = !{!5253}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5251, file: !2, baseType: !159, size: 128, align: 64)
!5254 = !DIDerivedType(tag: DW_TAG_member, scope: !5241, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!5255 = !{!5256, !5257, !5258}
!5256 = !DILocalVariable(name: "self", arg: 1, scope: !5238, file: !5161, line: 1213, type: !1126)
!5257 = !DILocalVariable(name: "err", arg: 2, scope: !5238, file: !5161, line: 1213, type: !159)
!5258 = !DILocalVariable(name: "v", scope: !5259, file: !5161, line: 1218, type: !9, align: 8)
!5259 = distinct !DILexicalBlock(scope: !5238, file: !5161, line: 1218, column: 13)
!5260 = !DILocation(line: 1213, column: 27, scope: !5238)
!5261 = !DILocation(line: 1213, column: 33, scope: !5238)
!5262 = !DILocation(line: 1217, column: 15, scope: !5238)
!5263 = !DILocation(line: 1217, column: 9, scope: !5238)
!5264 = !DILocation(line: 1219, column: 25, scope: !5238)
!5265 = !DILocation(line: 1219, column: 21, scope: !5238)
!5266 = !DILocation(line: 1219, column: 28, scope: !5238)
!5267 = !DILocation(line: 1218, column: 18, scope: !5238)
!5268 = !DILocation(line: 1218, column: 18, scope: !5259)
!5269 = !DILocation(line: 1218, column: 24, scope: !5259)
!5270 = !DILocation(line: 1218, column: 28, scope: !5238)
!5271 = !DILocation(line: 1221, column: 5, scope: !5238)
!5272 = !DILocation(line: 1221, column: 6, scope: !5238)
!5273 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hab1230ae13a015aaE", scope: !3030, file: !5161, line: 1213, type: !5274, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5284, retainedNodes: !5290)
!5274 = !DISubroutineType(types: !5275)
!5275 = !{!5276, !3030, !862}
!5276 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !848, file: !2, size: 64, align: 64, elements: !5277, templateParams: !45, identifier: "6455292bdc9a8021bfa79ab6d2a51a80")
!5277 = !{!5278}
!5278 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5276, file: !2, size: 64, align: 64, elements: !5279, templateParams: !45, identifier: "cca7584f3bedb072a0d8629b4f75e6f4", discriminator: !5289)
!5279 = !{!5280, !5285}
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5278, file: !2, baseType: !5281, size: 64, align: 64)
!5281 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5276, file: !2, size: 64, align: 64, elements: !5282, templateParams: !5284, identifier: "3f593208b4f11449ff4e34a5891605b0")
!5282 = !{!5283}
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5281, file: !2, baseType: !34, size: 64, align: 64)
!5284 = !{!3037, !861}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5278, file: !2, baseType: !5286, size: 64, align: 64, extraData: i64 0)
!5286 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5276, file: !2, size: 64, align: 64, elements: !5287, templateParams: !5284, identifier: "a98ee8ac6f848fbdedc714585d940e60")
!5287 = !{!5288}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5286, file: !2, baseType: !862, align: 8)
!5289 = !DIDerivedType(tag: DW_TAG_member, scope: !5276, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!5290 = !{!5291, !5292, !5293}
!5291 = !DILocalVariable(name: "self", arg: 1, scope: !5273, file: !5161, line: 1213, type: !3030)
!5292 = !DILocalVariable(name: "err", arg: 2, scope: !5273, file: !5161, line: 1213, type: !862)
!5293 = !DILocalVariable(name: "v", scope: !5294, file: !5161, line: 1218, type: !34, align: 8)
!5294 = distinct !DILexicalBlock(scope: !5273, file: !5161, line: 1218, column: 13)
!5295 = !DILocation(line: 1213, column: 27, scope: !5273)
!5296 = !DILocation(line: 1213, column: 33, scope: !5273)
!5297 = !DILocation(line: 1217, column: 15, scope: !5273)
!5298 = !DILocation(line: 1217, column: 9, scope: !5273)
!5299 = !DILocation(line: 1219, column: 25, scope: !5273)
!5300 = !DILocation(line: 1219, column: 21, scope: !5273)
!5301 = !DILocation(line: 1219, column: 28, scope: !5273)
!5302 = !DILocation(line: 1218, column: 18, scope: !5273)
!5303 = !DILocation(line: 1218, column: 18, scope: !5294)
!5304 = !DILocation(line: 1218, column: 24, scope: !5294)
!5305 = !DILocation(line: 1218, column: 28, scope: !5273)
!5306 = !DILocation(line: 1221, column: 5, scope: !5273)
!5307 = !DILocation(line: 1221, column: 6, scope: !5273)
!5308 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hf1ea23987e18f8baE", scope: !1126, file: !5161, line: 1213, type: !5309, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5319, retainedNodes: !5325)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{!5311, !1126, !71}
!5311 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !848, file: !2, size: 128, align: 64, elements: !5312, templateParams: !45, identifier: "a4375385e47a93ee39699517f266abc1")
!5312 = !{!5313}
!5313 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5311, file: !2, size: 128, align: 64, elements: !5314, templateParams: !45, identifier: "246603ca91454df3a00338ae313aa910", discriminator: !5324)
!5314 = !{!5315, !5320}
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5313, file: !2, baseType: !5316, size: 128, align: 64, extraData: i64 0)
!5316 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5311, file: !2, size: 128, align: 64, elements: !5317, templateParams: !5319, identifier: "31ebb8f427212954d8cda9e0de6cb110")
!5317 = !{!5318}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5316, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5319 = !{!1133, !928}
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5313, file: !2, baseType: !5321, size: 128, align: 64, extraData: i64 1)
!5321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5311, file: !2, size: 128, align: 64, elements: !5322, templateParams: !5319, identifier: "839cf5269190ddf77b1719c9c7e7db86")
!5322 = !{!5323}
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5321, file: !2, baseType: !71, align: 8, offset: 64)
!5324 = !DIDerivedType(tag: DW_TAG_member, scope: !5311, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!5325 = !{!5326, !5327, !5328}
!5326 = !DILocalVariable(name: "self", arg: 1, scope: !5308, file: !5161, line: 1213, type: !1126)
!5327 = !DILocalVariable(name: "err", arg: 2, scope: !5308, file: !5161, line: 1213, type: !71)
!5328 = !DILocalVariable(name: "v", scope: !5329, file: !5161, line: 1218, type: !9, align: 8)
!5329 = distinct !DILexicalBlock(scope: !5308, file: !5161, line: 1218, column: 13)
!5330 = !DILocation(line: 1213, column: 27, scope: !5308)
!5331 = !DILocation(line: 1213, column: 33, scope: !5308)
!5332 = !DILocation(line: 1217, column: 15, scope: !5308)
!5333 = !DILocation(line: 1217, column: 9, scope: !5308)
!5334 = !DILocation(line: 1219, column: 25, scope: !5308)
!5335 = !DILocation(line: 1219, column: 21, scope: !5308)
!5336 = !DILocation(line: 1219, column: 28, scope: !5308)
!5337 = !DILocation(line: 1218, column: 18, scope: !5308)
!5338 = !DILocation(line: 1218, column: 18, scope: !5329)
!5339 = !DILocation(line: 1218, column: 24, scope: !5329)
!5340 = !DILocation(line: 1218, column: 28, scope: !5308)
!5341 = !DILocation(line: 1221, column: 5, scope: !5308)
!5342 = !DILocation(line: 1221, column: 6, scope: !5308)
!5343 = distinct !DISubprogram(name: "expect<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6expect17hbb4f8d02aff80201E", scope: !1126, file: !5161, line: 902, type: !5344, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !5346)
!5344 = !DISubroutineType(types: !5345)
!5345 = !{!9, !1126, !145, !882}
!5346 = !{!5347, !5348, !5349}
!5347 = !DILocalVariable(name: "self", arg: 1, scope: !5343, file: !5161, line: 902, type: !1126)
!5348 = !DILocalVariable(name: "msg", arg: 2, scope: !5343, file: !5161, line: 902, type: !145)
!5349 = !DILocalVariable(name: "val", scope: !5350, file: !5161, line: 904, type: !9, align: 8)
!5350 = distinct !DILexicalBlock(scope: !5343, file: !5161, line: 904, column: 13)
!5351 = !DILocation(line: 902, column: 25, scope: !5343)
!5352 = !DILocation(line: 902, column: 31, scope: !5343)
!5353 = !DILocation(line: 903, column: 15, scope: !5343)
!5354 = !DILocation(line: 903, column: 9, scope: !5343)
!5355 = !DILocation(line: 905, column: 21, scope: !5343)
!5356 = !DILocation(line: 904, column: 18, scope: !5343)
!5357 = !DILocation(line: 904, column: 18, scope: !5350)
!5358 = !DILocation(line: 907, column: 6, scope: !5343)
!5359 = distinct !DISubprogram(name: "cloned<u16>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6cloned17he042b838fdc0bc1dE", scope: !5360, file: !5161, line: 1946, type: !5371, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !441, retainedNodes: !5373)
!5360 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u16>", scope: !84, file: !2, size: 64, align: 64, elements: !5361, templateParams: !45, identifier: "c333bde24edab54d9f83d3cc3333266f")
!5361 = !{!5362}
!5362 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5360, file: !2, size: 64, align: 64, elements: !5363, templateParams: !45, identifier: "b6ca5be9010e97578995f3c6b7b3aee8", discriminator: !5370)
!5363 = !{!5364, !5366}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5362, file: !2, baseType: !5365, size: 64, align: 64, extraData: i64 0)
!5365 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5360, file: !2, size: 64, align: 64, elements: !45, templateParams: !463, identifier: "6e518195e6f70e26a468c3a208ad76a")
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5362, file: !2, baseType: !5367, size: 64, align: 64)
!5367 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5360, file: !2, size: 64, align: 64, elements: !5368, templateParams: !463, identifier: "ec191f609615e59b26201c37981967cb")
!5368 = !{!5369}
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5367, file: !2, baseType: !465, size: 64, align: 64)
!5370 = !DIDerivedType(tag: DW_TAG_member, scope: !5360, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{!435, !5360}
!5373 = !{!5374, !5375}
!5374 = !DILocalVariable(name: "self", arg: 1, scope: !5359, file: !5161, line: 1946, type: !5360)
!5375 = !DILocalVariable(name: "t", scope: !5376, file: !5161, line: 1951, type: !465, align: 8)
!5376 = distinct !DILexicalBlock(scope: !5359, file: !5161, line: 1951, column: 13)
!5377 = !DILocation(line: 1946, column: 25, scope: !5359)
!5378 = !DILocation(line: 1950, column: 15, scope: !5359)
!5379 = !DILocation(line: 1950, column: 9, scope: !5359)
!5380 = !DILocation(line: 1952, column: 21, scope: !5359)
!5381 = !DILocation(line: 1951, column: 18, scope: !5359)
!5382 = !{i64 2}
!5383 = !DILocation(line: 1951, column: 18, scope: !5376)
!5384 = !DILocalVariable(name: "self", arg: 1, scope: !5385, file: !5386, line: 188, type: !465)
!5385 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17h5f01845a3875e55eE", scope: !5387, file: !5386, line: 188, type: !5390, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !5392)
!5386 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "d116d2b81cbc11c420da76ff7ce51e4d")
!5387 = !DINamespace(name: "{impl#7}", scope: !5388)
!5388 = !DINamespace(name: "impls", scope: !5389)
!5389 = !DINamespace(name: "clone", scope: !31)
!5390 = !DISubroutineType(types: !5391)
!5391 = !{!443, !465}
!5392 = !{!5384}
!5393 = !DILocation(line: 188, column: 30, scope: !5385, inlinedAt: !5394)
!5394 = distinct !DILocation(line: 1951, column: 29, scope: !5376)
!5395 = !DILocation(line: 189, column: 25, scope: !5385, inlinedAt: !5394)
!5396 = !DILocation(line: 1951, column: 24, scope: !5376)
!5397 = !DILocation(line: 1951, column: 38, scope: !5359)
!5398 = !DILocation(line: 1954, column: 6, scope: !5359)
!5399 = distinct !DISubprogram(name: "expect<(), core::fmt::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h21606e20b3dfc0f8E", scope: !1103, file: !846, line: 1041, type: !5400, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1111, retainedNodes: !5402)
!5400 = !DISubroutineType(types: !5401)
!5401 = !{null, !1103, !145, !882}
!5402 = !{!5403, !5404, !5405, !5407}
!5403 = !DILocalVariable(name: "self", arg: 1, scope: !5399, file: !846, line: 1041, type: !1103)
!5404 = !DILocalVariable(name: "msg", arg: 2, scope: !5399, file: !846, line: 1041, type: !145)
!5405 = !DILocalVariable(name: "t", scope: !5406, file: !846, line: 1046, type: !7, align: 1)
!5406 = distinct !DILexicalBlock(scope: !5399, file: !846, line: 1046, column: 13)
!5407 = !DILocalVariable(name: "e", scope: !5408, file: !846, line: 1047, type: !61, align: 1)
!5408 = distinct !DILexicalBlock(scope: !5399, file: !846, line: 1047, column: 13)
!5409 = !DILocation(line: 1046, column: 16, scope: !5406)
!5410 = !DILocation(line: 1041, column: 19, scope: !5399)
!5411 = !DILocation(line: 1041, column: 25, scope: !5399)
!5412 = !DILocation(line: 1047, column: 17, scope: !5408)
!5413 = !DILocation(line: 1045, column: 15, scope: !5399)
!5414 = !DILocation(line: 1045, column: 9, scope: !5399)
!5415 = !DILocation(line: 1049, column: 6, scope: !5399)
!5416 = !DILocation(line: 1047, column: 23, scope: !5408)
!5417 = distinct !DISubprogram(name: "unwrap<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0ecce73e6461ffd3E", scope: !914, file: !846, line: 1084, type: !5418, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !926, retainedNodes: !5420)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{!922, !914, !882}
!5420 = !{!5421, !5422, !5424}
!5421 = !DILocalVariable(name: "self", arg: 1, scope: !5417, file: !846, line: 1084, type: !914)
!5422 = !DILocalVariable(name: "t", scope: !5423, file: !846, line: 1089, type: !922, align: 8)
!5423 = distinct !DILexicalBlock(scope: !5417, file: !846, line: 1089, column: 13)
!5424 = !DILocalVariable(name: "e", scope: !5425, file: !846, line: 1090, type: !71, align: 1)
!5425 = distinct !DILexicalBlock(scope: !5417, file: !846, line: 1090, column: 13)
!5426 = !DILocation(line: 1089, column: 16, scope: !5423)
!5427 = !DILocation(line: 1084, column: 19, scope: !5417)
!5428 = !DILocation(line: 1090, column: 17, scope: !5425)
!5429 = !DILocation(line: 1088, column: 15, scope: !5417)
!5430 = !DILocation(line: 1088, column: 9, scope: !5417)
!5431 = !DILocation(line: 1089, column: 16, scope: !5417)
!5432 = !DILocation(line: 1092, column: 6, scope: !5417)
!5433 = !DILocation(line: 1090, column: 23, scope: !5425)
!5434 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h31c44feed17dee11E", scope: !851, file: !846, line: 841, type: !5435, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5448, retainedNodes: !5441)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{!1028, !851, !5437}
!5437 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<alloc::alloc::Global>", scope: !5438, file: !2, size: 64, align: 64, elements: !5439, templateParams: !45, identifier: "37598439bb1eb51782e60da6c260baa1")
!5438 = !DINamespace(name: "finish_grow", scope: !25)
!5439 = !{!5440}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !5437, file: !2, baseType: !4514, size: 64, align: 64)
!5441 = !{!5442, !5443, !5444, !5446}
!5442 = !DILocalVariable(name: "self", arg: 1, scope: !5434, file: !846, line: 841, type: !851)
!5443 = !DILocalVariable(name: "op", arg: 2, scope: !5434, file: !846, line: 841, type: !5437)
!5444 = !DILocalVariable(name: "t", scope: !5445, file: !846, line: 843, type: !831, align: 8)
!5445 = distinct !DILexicalBlock(scope: !5434, file: !846, line: 843, column: 13)
!5446 = !DILocalVariable(name: "e", scope: !5447, file: !846, line: 844, type: !862, align: 1)
!5447 = distinct !DILexicalBlock(scope: !5434, file: !846, line: 844, column: 13)
!5448 = !{!860, !861, !1006, !5449}
!5449 = !DITemplateTypeParameter(name: "O", type: !5437)
!5450 = !DILocation(line: 841, column: 42, scope: !5434)
!5451 = !DILocation(line: 841, column: 48, scope: !5434)
!5452 = !DILocation(line: 844, column: 17, scope: !5447)
!5453 = !DILocation(line: 842, column: 15, scope: !5434)
!5454 = !DILocation(line: 842, column: 9, scope: !5434)
!5455 = !DILocation(line: 843, column: 16, scope: !5434)
!5456 = !DILocation(line: 843, column: 16, scope: !5445)
!5457 = !DILocation(line: 843, column: 22, scope: !5445)
!5458 = !DILocation(line: 843, column: 26, scope: !5434)
!5459 = !DILocation(line: 844, column: 27, scope: !5447)
!5460 = !DILocation(line: 844, column: 23, scope: !5447)
!5461 = !DILocation(line: 844, column: 32, scope: !5434)
!5462 = !DILocation(line: 846, column: 5, scope: !5434)
!5463 = !DILocation(line: 846, column: 6, scope: !5434)
!5464 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4386f93c5dcfd662E", scope: !4577, file: !846, line: 841, type: !5465, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5489, retainedNodes: !5482)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!5467, !4577, !5481}
!5467 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !848, file: !2, size: 192, align: 64, elements: !5468, templateParams: !45, identifier: "d184170e509d438ef1110906ee85826f")
!5468 = !{!5469}
!5469 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5467, file: !2, size: 192, align: 64, elements: !5470, templateParams: !45, identifier: "1b38a417490e2817ced5b2cfb9b699b9", discriminator: !5480)
!5470 = !{!5471, !5476}
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5469, file: !2, baseType: !5472, size: 192, align: 64, extraData: i64 0)
!5472 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5467, file: !2, size: 192, align: 64, elements: !5473, templateParams: !5475, identifier: "4bead0ad411711cb2aeb9da94ab5e037")
!5473 = !{!5474}
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5472, file: !2, baseType: !170, size: 128, align: 64, offset: 64)
!5475 = !{!2087, !1068}
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5469, file: !2, baseType: !5477, size: 192, align: 64, extraData: i64 1)
!5477 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5467, file: !2, size: 192, align: 64, elements: !5478, templateParams: !5475, identifier: "c916cf9013ffa75f28acd9069667a96d")
!5478 = !{!5479}
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5477, file: !2, baseType: !159, size: 128, align: 64, offset: 64)
!5480 = !DIDerivedType(tag: DW_TAG_member, scope: !5467, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!5481 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !5438, file: !2, align: 8, elements: !45, identifier: "ad3ef092756c85834aa7f900e8151266")
!5482 = !{!5483, !5484, !5485, !5487}
!5483 = !DILocalVariable(name: "self", arg: 1, scope: !5464, file: !846, line: 841, type: !4577)
!5484 = !DILocalVariable(name: "op", arg: 2, scope: !5464, file: !846, line: 841, type: !5481)
!5485 = !DILocalVariable(name: "t", scope: !5486, file: !846, line: 843, type: !170, align: 8)
!5486 = distinct !DILexicalBlock(scope: !5464, file: !846, line: 843, column: 13)
!5487 = !DILocalVariable(name: "e", scope: !5488, file: !846, line: 844, type: !71, align: 1)
!5488 = distinct !DILexicalBlock(scope: !5464, file: !846, line: 844, column: 13)
!5489 = !{!2087, !928, !5490, !5491}
!5490 = !DITemplateTypeParameter(name: "F", type: !159)
!5491 = !DITemplateTypeParameter(name: "O", type: !5481)
!5492 = !DILocation(line: 841, column: 42, scope: !5464)
!5493 = !DILocation(line: 841, column: 48, scope: !5464)
!5494 = !DILocation(line: 844, column: 17, scope: !5488)
!5495 = !DILocation(line: 842, column: 15, scope: !5464)
!5496 = !DILocation(line: 842, column: 9, scope: !5464)
!5497 = !DILocation(line: 843, column: 16, scope: !5464)
!5498 = !DILocation(line: 843, column: 16, scope: !5486)
!5499 = !DILocation(line: 843, column: 22, scope: !5486)
!5500 = !DILocation(line: 843, column: 26, scope: !5464)
!5501 = !DILocation(line: 844, column: 27, scope: !5488)
!5502 = !DILocation(line: 844, column: 23, scope: !5488)
!5503 = !DILocation(line: 844, column: 32, scope: !5464)
!5504 = !DILocation(line: 846, column: 5, scope: !5464)
!5505 = !DILocation(line: 846, column: 6, scope: !5464)
!5506 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::{impl#2}::shrink::{closure_env#0}<u8, alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h532dd6c3e8297f41E", scope: !851, file: !846, line: 841, type: !5507, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5535, retainedNodes: !5528)
!5507 = !DISubroutineType(types: !5508)
!5508 = !{!5509, !851, !5523}
!5509 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind>", scope: !848, file: !2, size: 192, align: 64, elements: !5510, templateParams: !45, identifier: "167f5fc7eb9500917a0815300ff8ede2")
!5510 = !{!5511}
!5511 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5509, file: !2, size: 192, align: 64, elements: !5512, templateParams: !45, identifier: "e1139584628b3bc61b18c864ab8379ca", discriminator: !5522)
!5512 = !{!5513, !5518}
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5511, file: !2, baseType: !5514, size: 192, align: 64, extraData: i64 0)
!5514 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5509, file: !2, size: 192, align: 64, elements: !5515, templateParams: !5517, identifier: "3c0c4f7f2cc507b9654d8296ec6a659")
!5515 = !{!5516}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5514, file: !2, baseType: !831, size: 128, align: 64, offset: 64)
!5517 = !{!860, !1068}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5511, file: !2, baseType: !5519, size: 192, align: 64, extraData: i64 1)
!5519 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5509, file: !2, size: 192, align: 64, elements: !5520, templateParams: !5517, identifier: "cdbc31e0dec266ab3cfcad31c756799")
!5520 = !{!5521}
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5519, file: !2, baseType: !159, size: 128, align: 64, offset: 64)
!5522 = !DIDerivedType(tag: DW_TAG_member, scope: !5509, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!5523 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8, alloc::alloc::Global>", scope: !5524, file: !2, size: 64, align: 64, elements: !5526, templateParams: !45, identifier: "9e081946ebb6cbd91c66bfc9232a6d4e")
!5524 = !DINamespace(name: "shrink", scope: !5525)
!5525 = !DINamespace(name: "{impl#2}", scope: !25)
!5526 = !{!5527}
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !5523, file: !2, baseType: !4514, size: 64, align: 64)
!5528 = !{!5529, !5530, !5531, !5533}
!5529 = !DILocalVariable(name: "self", arg: 1, scope: !5506, file: !846, line: 841, type: !851)
!5530 = !DILocalVariable(name: "op", arg: 2, scope: !5506, file: !846, line: 841, type: !5523)
!5531 = !DILocalVariable(name: "t", scope: !5532, file: !846, line: 843, type: !831, align: 8)
!5532 = distinct !DILexicalBlock(scope: !5506, file: !846, line: 843, column: 13)
!5533 = !DILocalVariable(name: "e", scope: !5534, file: !846, line: 844, type: !862, align: 1)
!5534 = distinct !DILexicalBlock(scope: !5506, file: !846, line: 844, column: 13)
!5535 = !{!860, !861, !5490, !5536}
!5536 = !DITemplateTypeParameter(name: "O", type: !5523)
!5537 = !DILocation(line: 841, column: 42, scope: !5506)
!5538 = !DILocation(line: 841, column: 48, scope: !5506)
!5539 = !DILocation(line: 844, column: 17, scope: !5534)
!5540 = !DILocation(line: 842, column: 15, scope: !5506)
!5541 = !DILocation(line: 842, column: 9, scope: !5506)
!5542 = !DILocation(line: 843, column: 16, scope: !5506)
!5543 = !DILocation(line: 843, column: 16, scope: !5532)
!5544 = !DILocation(line: 843, column: 22, scope: !5532)
!5545 = !DILocation(line: 843, column: 26, scope: !5506)
!5546 = !DILocation(line: 844, column: 27, scope: !5534)
!5547 = !DILocation(line: 844, column: 23, scope: !5534)
!5548 = !DILocation(line: 844, column: 32, scope: !5506)
!5549 = !DILocation(line: 846, column: 5, scope: !5506)
!5550 = !DILocation(line: 846, column: 6, scope: !5506)
!5551 = distinct !DISubprogram(name: "map_err<alloc::string::String, alloc::string::FromUtf8Error, alloc::ffi::c_str::IntoStringError, alloc::ffi::c_str::{impl#1}::into_string::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h96554ad26ce9ff2fE", scope: !5552, file: !846, line: 841, type: !5571, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5602, retainedNodes: !5595)
!5552 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::string::FromUtf8Error>", scope: !848, file: !2, size: 320, align: 64, elements: !5553, templateParams: !45, identifier: "828b2897adf33a7390039cc178fa124e")
!5553 = !{!5554}
!5554 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5552, file: !2, size: 320, align: 64, elements: !5555, templateParams: !45, identifier: "9cb262658ecff0ac016ae98d7387e23", discriminator: !5570)
!5555 = !{!5556, !5566}
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5554, file: !2, baseType: !5557, size: 320, align: 64, extraData: i64 2)
!5557 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5552, file: !2, size: 320, align: 64, elements: !5558, templateParams: !5560, identifier: "c16f27b147540a86eb341f02e5071617")
!5558 = !{!5559}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5557, file: !2, baseType: !15, size: 192, align: 64, offset: 128)
!5560 = !{!1251, !5561}
!5561 = !DITemplateTypeParameter(name: "E", type: !5562)
!5562 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromUtf8Error", scope: !16, file: !2, size: 320, align: 64, elements: !5563, templateParams: !45, identifier: "940a29fc3bc0e20f799b4f79f5e75d22")
!5563 = !{!5564, !5565}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !5562, file: !2, baseType: !20, size: 192, align: 64, offset: 128)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5562, file: !2, baseType: !131, size: 128, align: 64)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5554, file: !2, baseType: !5567, size: 320, align: 64)
!5567 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5552, file: !2, size: 320, align: 64, elements: !5568, templateParams: !5560, identifier: "876488f062be693f5c8f9923b01871bb")
!5568 = !{!5569}
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5567, file: !2, baseType: !5562, size: 320, align: 64)
!5570 = !DIDerivedType(tag: DW_TAG_member, scope: !5552, file: !2, baseType: !39, size: 8, align: 8, offset: 64, flags: DIFlagArtificial)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!5573, !5552, !5592}
!5573 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::ffi::c_str::IntoStringError>", scope: !848, file: !2, size: 256, align: 64, elements: !5574, templateParams: !45, identifier: "98059242238533334ca7ac13063414a0")
!5574 = !{!5575}
!5575 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5573, file: !2, size: 256, align: 64, elements: !5576, templateParams: !45, identifier: "e64752ba9c0b5ed94c1376b059b57f12", discriminator: !5591)
!5576 = !{!5577, !5587}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5575, file: !2, baseType: !5578, size: 256, align: 64, extraData: i64 2)
!5578 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5573, file: !2, size: 256, align: 64, elements: !5579, templateParams: !5581, identifier: "e6f6a6eb5173e1a3278615a12708e1ca")
!5579 = !{!5580}
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5578, file: !2, baseType: !15, size: 192, align: 64)
!5581 = !{!1251, !5582}
!5582 = !DITemplateTypeParameter(name: "E", type: !5583)
!5583 = !DICompositeType(tag: DW_TAG_structure_type, name: "IntoStringError", scope: !299, file: !2, size: 256, align: 64, elements: !5584, templateParams: !45, identifier: "4607584337a57d18a9980abf229eba9")
!5584 = !{!5585, !5586}
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !5583, file: !2, baseType: !319, size: 128, align: 64)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5583, file: !2, baseType: !131, size: 128, align: 64, offset: 128)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5575, file: !2, baseType: !5588, size: 256, align: 64)
!5588 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5573, file: !2, size: 256, align: 64, elements: !5589, templateParams: !5581, identifier: "b189027e03ad91393cf8433d578931ed")
!5589 = !{!5590}
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5588, file: !2, baseType: !5583, size: 256, align: 64)
!5591 = !DIDerivedType(tag: DW_TAG_member, scope: !5573, file: !2, baseType: !39, size: 8, align: 8, offset: 192, flags: DIFlagArtificial)
!5592 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !5593, file: !2, align: 8, elements: !45, identifier: "6ff076583d8b946694fc872a79a0409e")
!5593 = !DINamespace(name: "into_string", scope: !5594)
!5594 = !DINamespace(name: "{impl#1}", scope: !299)
!5595 = !{!5596, !5597, !5598, !5600}
!5596 = !DILocalVariable(name: "self", arg: 1, scope: !5551, file: !846, line: 841, type: !5552)
!5597 = !DILocalVariable(name: "op", arg: 2, scope: !5551, file: !846, line: 841, type: !5592)
!5598 = !DILocalVariable(name: "t", scope: !5599, file: !846, line: 843, type: !15, align: 8)
!5599 = distinct !DILexicalBlock(scope: !5551, file: !846, line: 843, column: 13)
!5600 = !DILocalVariable(name: "e", scope: !5601, file: !846, line: 844, type: !5562, align: 8)
!5601 = distinct !DILexicalBlock(scope: !5551, file: !846, line: 844, column: 13)
!5602 = !{!1251, !5561, !5603, !5604}
!5603 = !DITemplateTypeParameter(name: "F", type: !5583)
!5604 = !DITemplateTypeParameter(name: "O", type: !5592)
!5605 = !DILocation(line: 841, column: 42, scope: !5551)
!5606 = !DILocation(line: 841, column: 48, scope: !5551)
!5607 = !DILocation(line: 843, column: 16, scope: !5599)
!5608 = !DILocation(line: 844, column: 17, scope: !5601)
!5609 = !DILocation(line: 842, column: 15, scope: !5551)
!5610 = !{i8 0, i8 3}
!5611 = !DILocation(line: 842, column: 9, scope: !5551)
!5612 = !DILocation(line: 843, column: 16, scope: !5551)
!5613 = !DILocation(line: 843, column: 22, scope: !5599)
!5614 = !DILocation(line: 843, column: 26, scope: !5551)
!5615 = !DILocation(line: 844, column: 17, scope: !5551)
!5616 = !DILocation(line: 844, column: 27, scope: !5601)
!5617 = !DILocation(line: 844, column: 23, scope: !5601)
!5618 = !DILocation(line: 844, column: 32, scope: !5551)
!5619 = !DILocation(line: 846, column: 5, scope: !5551)
!5620 = !DILocation(line: 846, column: 6, scope: !5551)
!5621 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17heb5048f883dbca67E", scope: !969, file: !846, line: 841, type: !5622, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5647, retainedNodes: !5640)
!5622 = !DISubroutineType(types: !5623)
!5623 = !{!5624, !969, !5638}
!5624 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !848, file: !2, size: 128, align: 64, elements: !5625, templateParams: !45, identifier: "135305e85118a8e287e09934e1d4d0bb")
!5625 = !{!5626}
!5626 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5624, file: !2, size: 128, align: 64, elements: !5627, templateParams: !45, identifier: "812a5fd7aa837b797913f557da71381c", discriminator: !5637)
!5627 = !{!5628, !5633}
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5626, file: !2, baseType: !5629, size: 128, align: 64, extraData: i64 -9223372036854775807)
!5629 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5624, file: !2, size: 128, align: 64, elements: !5630, templateParams: !5632, identifier: "9c0c0b9c346066e8ce04c5593f3246f4")
!5630 = !{!5631}
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5629, file: !2, baseType: !7, align: 8)
!5632 = !{!978, !1068}
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5626, file: !2, baseType: !5634, size: 128, align: 64)
!5634 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5624, file: !2, size: 128, align: 64, elements: !5635, templateParams: !5632, identifier: "4c0bca1bca2e4764b5c1872d25d20d21")
!5635 = !{!5636}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5634, file: !2, baseType: !159, size: 128, align: 64)
!5637 = !DIDerivedType(tag: DW_TAG_member, scope: !5624, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!5638 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !5639, file: !2, align: 8, elements: !45, identifier: "1842e1eb1cde7f7784fb62f6f21439f4")
!5639 = !DINamespace(name: "handle_reserve", scope: !25)
!5640 = !{!5641, !5642, !5643, !5645}
!5641 = !DILocalVariable(name: "self", arg: 1, scope: !5621, file: !846, line: 841, type: !969)
!5642 = !DILocalVariable(name: "op", arg: 2, scope: !5621, file: !846, line: 841, type: !5638)
!5643 = !DILocalVariable(name: "t", scope: !5644, file: !846, line: 843, type: !7, align: 1)
!5644 = distinct !DILexicalBlock(scope: !5621, file: !846, line: 843, column: 13)
!5645 = !DILocalVariable(name: "e", scope: !5646, file: !846, line: 844, type: !980, align: 8)
!5646 = distinct !DILexicalBlock(scope: !5621, file: !846, line: 844, column: 13)
!5647 = !{!978, !979, !5490, !5648}
!5648 = !DITemplateTypeParameter(name: "O", type: !5638)
!5649 = !DILocation(line: 841, column: 42, scope: !5621)
!5650 = !DILocation(line: 841, column: 48, scope: !5621)
!5651 = !DILocation(line: 843, column: 16, scope: !5644)
!5652 = !DILocation(line: 842, column: 15, scope: !5621)
!5653 = !DILocation(line: 842, column: 9, scope: !5621)
!5654 = !DILocation(line: 843, column: 22, scope: !5644)
!5655 = !DILocation(line: 843, column: 26, scope: !5621)
!5656 = !DILocation(line: 844, column: 17, scope: !5621)
!5657 = !DILocation(line: 844, column: 17, scope: !5646)
!5658 = !DILocation(line: 844, column: 27, scope: !5646)
!5659 = !DILocation(line: 844, column: 23, scope: !5646)
!5660 = !DILocation(line: 844, column: 32, scope: !5621)
!5661 = !DILocation(line: 846, column: 5, scope: !5621)
!5662 = !DILocation(line: 846, column: 6, scope: !5621)
!5663 = distinct !DISubprogram(name: "assert_failed<core::option::Option<u8>, core::option::Option<u8>>", linkageName: "_ZN4core9panicking13assert_failed17hdde847a6ce9e5b7bE", scope: !365, file: !5664, line: 201, type: !5665, scopeLine: 201, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5685, retainedNodes: !5680)
!5664 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "b3658fb8022e55b4f87e37ab46f35259")
!5665 = !DISubroutineType(types: !5666)
!5666 = !{null, !364, !82, !82, !5667, !882}
!5667 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Arguments>", scope: !84, file: !2, size: 384, align: 64, elements: !5668, templateParams: !45, identifier: "84946dbf4e45ee4b7ea60364e5d363f1")
!5668 = !{!5669}
!5669 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5667, file: !2, size: 384, align: 64, elements: !5670, templateParams: !45, identifier: "a96d3701a460f73f2bea50553c8cee0a", discriminator: !5679)
!5670 = !{!5671, !5675}
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5669, file: !2, baseType: !5672, size: 384, align: 64, extraData: i64 0)
!5672 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5667, file: !2, size: 384, align: 64, elements: !45, templateParams: !5673, identifier: "15bc06c78dd2ef2f8bc84f855ab8a5fb")
!5673 = !{!5674}
!5674 = !DITemplateTypeParameter(name: "T", type: !1499)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5669, file: !2, baseType: !5676, size: 384, align: 64)
!5676 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5667, file: !2, size: 384, align: 64, elements: !5677, templateParams: !5673, identifier: "32382d50c6a543ae27374eedd17c8738")
!5677 = !{!5678}
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5676, file: !2, baseType: !1499, size: 384, align: 64)
!5679 = !DIDerivedType(tag: DW_TAG_member, scope: !5667, file: !2, baseType: !179, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!5680 = !{!5681, !5682, !5683, !5684}
!5681 = !DILocalVariable(name: "kind", arg: 1, scope: !5663, file: !5664, line: 202, type: !364)
!5682 = !DILocalVariable(name: "left", arg: 2, scope: !5663, file: !5664, line: 203, type: !82)
!5683 = !DILocalVariable(name: "right", arg: 3, scope: !5663, file: !5664, line: 204, type: !82)
!5684 = !DILocalVariable(name: "args", arg: 4, scope: !5663, file: !5664, line: 205, type: !5667)
!5685 = !{!5686, !5687}
!5686 = !DITemplateTypeParameter(name: "T", type: !83)
!5687 = !DITemplateTypeParameter(name: "U", type: !83)
!5688 = !DILocation(line: 202, column: 5, scope: !5663)
!5689 = !DILocation(line: 203, column: 5, scope: !5663)
!5690 = !DILocation(line: 204, column: 5, scope: !5663)
!5691 = !DILocation(line: 205, column: 5, scope: !5663)
!5692 = !DILocation(line: 211, column: 5, scope: !5663)
!5693 = distinct !DISubprogram(name: "write_char<alloc::string::String>", linkageName: "_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hc0934a2fde0a5e18E", scope: !5694, file: !1099, line: 207, type: !5695, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5701, retainedNodes: !5698)
!5694 = !DINamespace(name: "{impl#0}", scope: !62)
!5695 = !DISubroutineType(types: !5696)
!5696 = !{!1103, !5697, !491}
!5697 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut alloc::string::String", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!5698 = !{!5699, !5700}
!5699 = !DILocalVariable(name: "self", arg: 1, scope: !5693, file: !1099, line: 207, type: !5697)
!5700 = !DILocalVariable(name: "c", arg: 2, scope: !5693, file: !1099, line: 207, type: !491)
!5701 = !{!5702}
!5702 = !DITemplateTypeParameter(name: "W", type: !15)
!5703 = !DILocation(line: 207, column: 19, scope: !5693)
!5704 = !DILocation(line: 207, column: 30, scope: !5693)
!5705 = !DILocation(line: 208, column: 9, scope: !5693)
!5706 = !DILocation(line: 209, column: 6, scope: !5693)
!5707 = distinct !DISubprogram(name: "write_fmt<alloc::string::String>", linkageName: "_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h9af8cf731126fe82E", scope: !5694, file: !1099, line: 211, type: !5708, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5701, retainedNodes: !5710)
!5708 = !DISubroutineType(types: !5709)
!5709 = !{!1103, !5697, !1499}
!5710 = !{!5711, !5712}
!5711 = !DILocalVariable(name: "self", arg: 1, scope: !5707, file: !1099, line: 211, type: !5697)
!5712 = !DILocalVariable(name: "args", arg: 2, scope: !5707, file: !1099, line: 211, type: !1499)
!5713 = !DILocation(line: 211, column: 18, scope: !5707)
!5714 = !DILocation(line: 211, column: 29, scope: !5707)
!5715 = !DILocation(line: 212, column: 9, scope: !5707)
!5716 = !DILocation(line: 213, column: 6, scope: !5707)
!5717 = distinct !DISubprogram(name: "write_str<alloc::string::String>", linkageName: "_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hd1c3d17891a2d950E", scope: !5694, file: !1099, line: 203, type: !5718, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5701, retainedNodes: !5720)
!5718 = !DISubroutineType(types: !5719)
!5719 = !{!1103, !5697, !145}
!5720 = !{!5721, !5722}
!5721 = !DILocalVariable(name: "self", arg: 1, scope: !5717, file: !1099, line: 203, type: !5697)
!5722 = !DILocalVariable(name: "s", arg: 2, scope: !5717, file: !1099, line: 203, type: !145)
!5723 = !DILocation(line: 203, column: 18, scope: !5717)
!5724 = !DILocation(line: 203, column: 29, scope: !5717)
!5725 = !DILocation(line: 204, column: 9, scope: !5717)
!5726 = !DILocation(line: 205, column: 6, scope: !5717)
!5727 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1ff85623d6cefe36E", scope: !5728, file: !900, line: 725, type: !5729, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5733, retainedNodes: !5731)
!5728 = !DINamespace(name: "{impl#3}", scope: !508)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{!980, !159}
!5731 = !{!5732}
!5732 = !DILocalVariable(name: "self", arg: 1, scope: !5727, file: !900, line: 725, type: !159)
!5733 = !{!1155, !5734}
!5734 = !DITemplateTypeParameter(name: "U", type: !980)
!5735 = !DILocation(line: 725, column: 13, scope: !5727)
!5736 = !DILocation(line: 726, column: 9, scope: !5727)
!5737 = !DILocation(line: 727, column: 6, scope: !5727)
!5738 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h6cef30de0f98774cE", scope: !5728, file: !900, line: 725, type: !704, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5741, retainedNodes: !5739)
!5739 = !{!5740}
!5740 = !DILocalVariable(name: "self", arg: 1, scope: !5738, file: !900, line: 725, type: !28)
!5741 = !{!5742, !5743}
!5742 = !DITemplateTypeParameter(name: "T", type: !28)
!5743 = !DITemplateTypeParameter(name: "U", type: !34)
!5744 = !DILocation(line: 725, column: 13, scope: !5738)
!5745 = !DILocation(line: 726, column: 9, scope: !5738)
!5746 = !DILocation(line: 727, column: 6, scope: !5738)
!5747 = distinct !DISubprogram(name: "into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h75eaf413a11e3e99E", scope: !5728, file: !900, line: 725, type: !5748, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5752, retainedNodes: !5750)
!5748 = !DISubroutineType(types: !5749)
!5749 = !{!322, !1433}
!5750 = !{!5751}
!5751 = !DILocalVariable(name: "self", arg: 1, scope: !5747, file: !900, line: 725, type: !1433)
!5752 = !{!5753, !5754}
!5753 = !DITemplateTypeParameter(name: "T", type: !1433)
!5754 = !DITemplateTypeParameter(name: "U", type: !322)
!5755 = !DILocation(line: 725, column: 13, scope: !5747)
!5756 = !DILocation(line: 726, column: 9, scope: !5747)
!5757 = !DILocation(line: 727, column: 6, scope: !5747)
!5758 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h1ac80bc32b7fd2dcE", scope: !5760, file: !5759, line: 940, type: !5762, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !5799)
!5759 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/pattern.rs", directory: "", checksumkind: CSK_MD5, checksum: "a1947773eea45d7d23839c7d7fe7f397")
!5760 = !DINamespace(name: "{impl#28}", scope: !5761)
!5761 = !DINamespace(name: "pattern", scope: !133)
!5762 = !DISubroutineType(types: !5763)
!5763 = !{!5764, !145, !145}
!5764 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcher", scope: !5761, file: !2, size: 832, align: 64, elements: !5765, templateParams: !45, identifier: "429e32eb60ad990f78759b3f2c250514")
!5765 = !{!5766, !5767, !5768}
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !5764, file: !2, baseType: !145, size: 128, align: 64)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !5764, file: !2, baseType: !145, size: 128, align: 64, offset: 128)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "searcher", scope: !5764, file: !2, baseType: !5769, size: 576, align: 64, offset: 256)
!5769 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcherImpl", scope: !5761, file: !2, size: 576, align: 64, elements: !5770, templateParams: !45, identifier: "fd5a88837c614a13a057114b0e7da1fe")
!5770 = !{!5771}
!5771 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5769, file: !2, size: 576, align: 64, elements: !5772, templateParams: !45, identifier: "e0731570c9e80620d0d1dc3ec51a7b65", discriminator: !5798)
!5772 = !{!5773, !5784}
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "Empty", scope: !5771, file: !2, baseType: !5774, size: 576, align: 64, extraData: i64 0)
!5774 = !DICompositeType(tag: DW_TAG_structure_type, name: "Empty", scope: !5769, file: !2, size: 576, align: 64, elements: !5775, templateParams: !45, identifier: "cf2a0cfa4312e34cbf79bc7f6235b231")
!5775 = !{!5776}
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5774, file: !2, baseType: !5777, size: 192, align: 64, offset: 64)
!5777 = !DICompositeType(tag: DW_TAG_structure_type, name: "EmptyNeedle", scope: !5761, file: !2, size: 192, align: 64, elements: !5778, templateParams: !45, identifier: "dce07bf43c68863e5e6828ea3bfe0e99")
!5778 = !{!5779, !5780, !5781, !5782, !5783}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !5777, file: !2, baseType: !9, size: 64, align: 64)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5777, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_fw", scope: !5777, file: !2, baseType: !571, size: 8, align: 8, offset: 128)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_bw", scope: !5777, file: !2, baseType: !571, size: 8, align: 8, offset: 136)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "is_finished", scope: !5777, file: !2, baseType: !571, size: 8, align: 8, offset: 144)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "TwoWay", scope: !5771, file: !2, baseType: !5785, size: 576, align: 64, extraData: i64 1)
!5785 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWay", scope: !5769, file: !2, size: 576, align: 64, elements: !5786, templateParams: !45, identifier: "566715810a93d153ffacc79c6bfdde86")
!5786 = !{!5787}
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5785, file: !2, baseType: !5788, size: 512, align: 64, offset: 64)
!5788 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWaySearcher", scope: !5761, file: !2, size: 512, align: 64, elements: !5789, templateParams: !45, identifier: "9f1a1fa8e1002ea7b6d0a33fee05ddad")
!5789 = !{!5790, !5791, !5792, !5793, !5794, !5795, !5796, !5797}
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos", scope: !5788, file: !2, baseType: !9, size: 64, align: 64)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos_back", scope: !5788, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5788, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "byteset", scope: !5788, file: !2, baseType: !179, size: 64, align: 64, offset: 192)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !5788, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5788, file: !2, baseType: !9, size: 64, align: 64, offset: 320)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !5788, file: !2, baseType: !9, size: 64, align: 64, offset: 384)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "memory_back", scope: !5788, file: !2, baseType: !9, size: 64, align: 64, offset: 448)
!5798 = !DIDerivedType(tag: DW_TAG_member, scope: !5769, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!5799 = !{!5800, !5801}
!5800 = !DILocalVariable(name: "self", arg: 1, scope: !5758, file: !5759, line: 940, type: !145)
!5801 = !DILocalVariable(name: "haystack", arg: 2, scope: !5758, file: !5759, line: 940, type: !145)
!5802 = !DILocation(line: 940, column: 22, scope: !5758)
!5803 = !DILocation(line: 940, column: 28, scope: !5758)
!5804 = !DILocation(line: 941, column: 9, scope: !5758)
!5805 = !DILocation(line: 942, column: 6, scope: !5758)
!5806 = distinct !DISubprogram(name: "eq<u8>", linkageName: "_ZN55_$LT$T$u20$as$u20$core..option..SpecOptionPartialEq$GT$2eq17h2b4075adb41865d4E", scope: !5807, file: !5161, line: 2229, type: !5808, scopeLine: 2229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !5810)
!5807 = !DINamespace(name: "{impl#15}", scope: !84)
!5808 = !DISubroutineType(types: !5809)
!5809 = !{!571, !82, !82}
!5810 = !{!5811, !5812, !5813, !5815}
!5811 = !DILocalVariable(name: "l", arg: 1, scope: !5806, file: !5161, line: 2229, type: !82)
!5812 = !DILocalVariable(name: "r", arg: 2, scope: !5806, file: !5161, line: 2229, type: !82)
!5813 = !DILocalVariable(name: "l", scope: !5814, file: !5161, line: 2231, type: !567, align: 8)
!5814 = distinct !DILexicalBlock(scope: !5806, file: !5161, line: 2231, column: 13)
!5815 = !DILocalVariable(name: "r", scope: !5814, file: !5161, line: 2231, type: !567, align: 8)
!5816 = !DILocation(line: 2229, column: 19, scope: !5806)
!5817 = !DILocation(line: 2229, column: 34, scope: !5806)
!5818 = !DILocation(line: 2230, column: 15, scope: !5806)
!5819 = !DILocation(line: 2230, column: 9, scope: !5806)
!5820 = !DILocation(line: 2233, column: 18, scope: !5806)
!5821 = !DILocation(line: 2231, column: 19, scope: !5806)
!5822 = !DILocation(line: 2231, column: 19, scope: !5814)
!5823 = !DILocation(line: 2231, column: 28, scope: !5806)
!5824 = !DILocation(line: 2231, column: 28, scope: !5814)
!5825 = !DILocation(line: 2231, column: 35, scope: !5814)
!5826 = !DILocation(line: 2235, column: 6, scope: !5806)
!5827 = !DILocation(line: 2232, column: 29, scope: !5806)
!5828 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", linkageName: "_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h18770b9c83593d13E", scope: !412, file: !5829, line: 49, type: !4275, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5832, retainedNodes: !5830)
!5829 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/accum.rs", directory: "", checksumkind: CSK_MD5, checksum: "7c517bec6e6af8bde8ec5e53a137636b")
!5830 = !{!5831}
!5831 = !DILocalVariable(name: "iter", arg: 1, scope: !5828, file: !5829, line: 49, type: !383)
!5832 = !{!5833}
!5833 = !DITemplateTypeParameter(name: "I", type: !383)
!5834 = !DILocation(line: 49, column: 44, scope: !5828)
!5835 = !DILocation(line: 50, column: 17, scope: !5828)
!5836 = !DILocation(line: 55, column: 14, scope: !5828)
!5837 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", linkageName: "_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h3098f19d02191346E", scope: !411, file: !5829, line: 53, type: !5838, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5832, retainedNodes: !5841)
!5838 = !DISubroutineType(types: !5839)
!5839 = !{!9, !5840, !9, !9}
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", baseType: !410, size: 64, align: 64, dwarfAddressSpace: 0)
!5841 = !{!5842, !5843, !5844}
!5842 = !DILocalVariable(name: "a", arg: 2, scope: !5837, file: !5829, line: 53, type: !9)
!5843 = !DILocalVariable(name: "b", arg: 3, scope: !5837, file: !5829, line: 53, type: !9)
!5844 = !DILocalVariable(arg: 1, scope: !5837, file: !5829, line: 53, type: !5840)
!5845 = !DILocation(line: 53, column: 21, scope: !5837)
!5846 = !DILocation(line: 53, column: 22, scope: !5837)
!5847 = !DILocation(line: 53, column: 25, scope: !5837)
!5848 = !DILocation(line: 53, column: 28, scope: !5837)
!5849 = !DILocation(line: 53, column: 33, scope: !5837)
!5850 = distinct !DISubprogram(name: "into_iter<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4b6c6319404baca6E", scope: !5852, file: !5851, line: 272, type: !5854, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5858, retainedNodes: !5856)
!5851 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "697d559cdba63f105535b8b53d6ea422")
!5852 = !DINamespace(name: "{impl#0}", scope: !5853)
!5853 = !DINamespace(name: "collect", scope: !414)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{!3913, !3913}
!5856 = !{!5857}
!5857 = !DILocalVariable(name: "self", arg: 1, scope: !5850, file: !5851, line: 272, type: !3913)
!5858 = !{!5859}
!5859 = !DITemplateTypeParameter(name: "I", type: !3913)
!5860 = !DILocation(line: 272, column: 18, scope: !5850)
!5861 = !DILocation(line: 273, column: 9, scope: !5850)
!5862 = !DILocation(line: 274, column: 6, scope: !5850)
!5863 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h75ac064585ddabaeE", scope: !5852, file: !5851, line: 272, type: !5864, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3917, retainedNodes: !5866)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!450, !450}
!5866 = !{!5867}
!5867 = !DILocalVariable(name: "self", arg: 1, scope: !5863, file: !5851, line: 272, type: !450)
!5868 = !DILocation(line: 272, column: 18, scope: !5863)
!5869 = !DILocation(line: 274, column: 6, scope: !5863)
!5870 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h101e7442eb6ee0e2E", scope: !5871, file: !4471, line: 36, type: !4512, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !5872)
!5871 = !DINamespace(name: "{impl#4}", scope: !72)
!5872 = !{!5873}
!5873 = !DILocalVariable(name: "self", arg: 1, scope: !5870, file: !4471, line: 36, type: !4514)
!5874 = !DILocation(line: 36, column: 16, scope: !5870)
!5875 = !DILocation(line: 36, column: 21, scope: !5870)
!5876 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN66_$LT$core..ptr..alignment..Alignment$u20$as$u20$core..cmp..Ord$GT$3cmp17hb62d92d1e772ae58E", scope: !5877, file: !3155, line: 175, type: !1411, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !5878)
!5877 = !DINamespace(name: "{impl#6}", scope: !175)
!5878 = !{!5879, !5880}
!5879 = !DILocalVariable(name: "self", arg: 1, scope: !5876, file: !3155, line: 175, type: !1413)
!5880 = !DILocalVariable(name: "other", arg: 2, scope: !5876, file: !3155, line: 175, type: !1413)
!5881 = !DILocation(line: 175, column: 12, scope: !5876)
!5882 = !DILocation(line: 175, column: 19, scope: !5876)
!5883 = !DILocation(line: 176, column: 9, scope: !5876)
!5884 = !DILocation(line: 176, column: 38, scope: !5876)
!5885 = !DILocation(line: 177, column: 6, scope: !5876)
!5886 = distinct !DISubprogram(name: "eq<u8>", linkageName: "_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h5627319f47faaf19E", scope: !5887, file: !5161, line: 2209, type: !5808, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !5888)
!5887 = !DINamespace(name: "{impl#14}", scope: !84)
!5888 = !{!5889, !5890}
!5889 = !DILocalVariable(name: "self", arg: 1, scope: !5886, file: !5161, line: 2209, type: !82)
!5890 = !DILocalVariable(name: "other", arg: 2, scope: !5886, file: !5161, line: 2209, type: !82)
!5891 = !DILocation(line: 2209, column: 11, scope: !5886)
!5892 = !DILocation(line: 2209, column: 18, scope: !5886)
!5893 = !DILocation(line: 2210, column: 9, scope: !5886)
!5894 = !DILocation(line: 2211, column: 6, scope: !5886)
!5895 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1df41719abeb19a3E", scope: !5896, file: !5022, line: 246, type: !5897, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !5899)
!5896 = !DINamespace(name: "{impl#2}", scope: !5023)
!5897 = !DISubroutineType(types: !5898)
!5898 = !{!1308, !9, !2681}
!5899 = !{!5900, !5901, !5902}
!5900 = !DILocalVariable(name: "self", arg: 1, scope: !5895, file: !5022, line: 246, type: !9)
!5901 = !DILocalVariable(name: "slice", arg: 2, scope: !5895, file: !5022, line: 246, type: !2681)
!5902 = !DILocalVariable(name: "this", scope: !5903, file: !5022, line: 247, type: !9, align: 8)
!5903 = distinct !DILexicalBlock(scope: !5895, file: !5022, line: 247, column: 9)
!5904 = !DILocation(line: 246, column: 33, scope: !5895)
!5905 = !DILocation(line: 247, column: 13, scope: !5903)
!5906 = !DILocation(line: 246, column: 39, scope: !5895)
!5907 = !DILocation(line: 250, column: 13, scope: !5903)
!5908 = !DILocalVariable(name: "this", arg: 1, scope: !5909, file: !1191, line: 2241, type: !9)
!5909 = distinct !DISubprogram(name: "runtime<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h5549ce02721df4b0E", scope: !5910, file: !1191, line: 2241, type: !5911, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !5913)
!5910 = !DINamespace(name: "get_unchecked_mut", scope: !5896)
!5911 = !DISubroutineType(types: !5912)
!5912 = !{null, !9, !2681}
!5913 = !{!5908, !5914}
!5914 = !DILocalVariable(name: "slice", arg: 2, scope: !5909, file: !1191, line: 2241, type: !2681)
!5915 = !DILocation(line: 2241, column: 39, scope: !5909, inlinedAt: !5916)
!5916 = distinct !DILocation(line: 250, column: 13, scope: !5903)
!5917 = !DILocalVariable(name: "self", arg: 1, scope: !5918, file: !2004, line: 1878, type: !2681)
!5918 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h45866f4cc3c60a2bE", scope: !3133, file: !2004, line: 1878, type: !5919, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !5921)
!5919 = !DISubroutineType(types: !5920)
!5920 = !{!9, !2681}
!5921 = !{!5917}
!5922 = !DILocation(line: 1878, column: 22, scope: !5918, inlinedAt: !5923)
!5923 = distinct !DILocation(line: 252, column: 61, scope: !5924, inlinedAt: !5916)
!5924 = !DILexicalBlockFile(scope: !5909, file: !5022, discriminator: 0)
!5925 = !DILocation(line: 1879, column: 9, scope: !5918, inlinedAt: !5923)
!5926 = !DILocation(line: 252, column: 54, scope: !5924, inlinedAt: !5916)
!5927 = !DILocation(line: 2242, column: 20, scope: !5909, inlinedAt: !5916)
!5928 = !DILocation(line: 2244, column: 21, scope: !5909, inlinedAt: !5916)
!5929 = !DILocation(line: 2014, column: 29, scope: !3132, inlinedAt: !5930)
!5930 = distinct !DILocation(line: 254, column: 13, scope: !5903)
!5931 = !DILocalVariable(name: "self", arg: 1, scope: !5932, file: !2004, line: 1015, type: !1308)
!5932 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he9378e891617a8c7E", scope: !2005, file: !2004, line: 1015, type: !5933, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !5935)
!5933 = !DISubroutineType(types: !5934)
!5934 = !{!1308, !1308, !9}
!5935 = !{!5931, !5936}
!5936 = !DILocalVariable(name: "count", arg: 2, scope: !5932, file: !2004, line: 1015, type: !9)
!5937 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !5938)
!5938 = distinct !DILocation(line: 254, column: 13, scope: !5903)
!5939 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !5938)
!5940 = !DILocalVariable(name: "self", arg: 1, scope: !5941, file: !2004, line: 472, type: !1308)
!5941 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h983ad2cc6b02d8a9E", scope: !2005, file: !2004, line: 472, type: !5942, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !5944)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!1308, !1308, !3831}
!5944 = !{!5940, !5945}
!5945 = !DILocalVariable(name: "count", arg: 2, scope: !5941, file: !2004, line: 472, type: !3831)
!5946 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !5947)
!5947 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !5938)
!5948 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !5947)
!5949 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !5947)
!5950 = !DILocation(line: 256, column: 6, scope: !5895)
!5951 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hfc5adc511c706331E", scope: !5896, file: !5022, line: 246, type: !5952, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !5954)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{!4999, !9, !2659}
!5954 = !{!5955, !5956, !5957}
!5955 = !DILocalVariable(name: "self", arg: 1, scope: !5951, file: !5022, line: 246, type: !9)
!5956 = !DILocalVariable(name: "slice", arg: 2, scope: !5951, file: !5022, line: 246, type: !2659)
!5957 = !DILocalVariable(name: "this", scope: !5958, file: !5022, line: 247, type: !9, align: 8)
!5958 = distinct !DILexicalBlock(scope: !5951, file: !5022, line: 247, column: 9)
!5959 = !DILocation(line: 246, column: 33, scope: !5951)
!5960 = !DILocation(line: 247, column: 13, scope: !5958)
!5961 = !DILocation(line: 246, column: 39, scope: !5951)
!5962 = !DILocation(line: 250, column: 13, scope: !5958)
!5963 = !DILocalVariable(name: "this", arg: 1, scope: !5964, file: !1191, line: 2241, type: !9)
!5964 = distinct !DISubprogram(name: "runtime<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut7runtime17h61d0038e81e91653E", scope: !5910, file: !1191, line: 2241, type: !5965, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !5967)
!5965 = !DISubroutineType(types: !5966)
!5966 = !{null, !9, !2659}
!5967 = !{!5963, !5968}
!5968 = !DILocalVariable(name: "slice", arg: 2, scope: !5964, file: !1191, line: 2241, type: !2659)
!5969 = !DILocation(line: 2241, column: 39, scope: !5964, inlinedAt: !5970)
!5970 = distinct !DILocation(line: 250, column: 13, scope: !5958)
!5971 = !DILocalVariable(name: "self", arg: 1, scope: !5972, file: !2004, line: 1878, type: !2659)
!5972 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h63c057c743d78de6E", scope: !3133, file: !2004, line: 1878, type: !5973, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !5975)
!5973 = !DISubroutineType(types: !5974)
!5974 = !{!9, !2659}
!5975 = !{!5971}
!5976 = !DILocation(line: 1878, column: 22, scope: !5972, inlinedAt: !5977)
!5977 = distinct !DILocation(line: 252, column: 61, scope: !5978, inlinedAt: !5970)
!5978 = !DILexicalBlockFile(scope: !5964, file: !5022, discriminator: 0)
!5979 = !DILocation(line: 1879, column: 9, scope: !5972, inlinedAt: !5977)
!5980 = !DILocation(line: 252, column: 54, scope: !5978, inlinedAt: !5970)
!5981 = !DILocation(line: 2242, column: 20, scope: !5964, inlinedAt: !5970)
!5982 = !DILocation(line: 2244, column: 21, scope: !5964, inlinedAt: !5970)
!5983 = !DILocalVariable(name: "self", arg: 1, scope: !5984, file: !2004, line: 2014, type: !2659)
!5984 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17he301fe65c8ed7a24E", scope: !3133, file: !2004, line: 2014, type: !5985, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !5987)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{!4999, !2659}
!5987 = !{!5983}
!5988 = !DILocation(line: 2014, column: 29, scope: !5984, inlinedAt: !5989)
!5989 = distinct !DILocation(line: 254, column: 13, scope: !5958)
!5990 = !DILocalVariable(name: "self", arg: 1, scope: !5991, file: !2004, line: 1015, type: !4999)
!5991 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h299b2cb9573b0077E", scope: !2005, file: !2004, line: 1015, type: !5992, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !5994)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{!4999, !4999, !9}
!5994 = !{!5990, !5995}
!5995 = !DILocalVariable(name: "count", arg: 2, scope: !5991, file: !2004, line: 1015, type: !9)
!5996 = !DILocation(line: 1015, column: 29, scope: !5991, inlinedAt: !5997)
!5997 = distinct !DILocation(line: 254, column: 13, scope: !5958)
!5998 = !DILocation(line: 1015, column: 35, scope: !5991, inlinedAt: !5997)
!5999 = !DILocalVariable(name: "self", arg: 1, scope: !6000, file: !2004, line: 472, type: !4999)
!6000 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h591a8db38dcc915fE", scope: !2005, file: !2004, line: 472, type: !6001, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !6003)
!6001 = !DISubroutineType(types: !6002)
!6002 = !{!4999, !4999, !3831}
!6003 = !{!5999, !6004}
!6004 = !DILocalVariable(name: "count", arg: 2, scope: !6000, file: !2004, line: 472, type: !3831)
!6005 = !DILocation(line: 472, column: 32, scope: !6000, inlinedAt: !6006)
!6006 = distinct !DILocation(line: 1020, column: 18, scope: !5991, inlinedAt: !5997)
!6007 = !DILocation(line: 472, column: 38, scope: !6000, inlinedAt: !6006)
!6008 = !DILocation(line: 479, column: 18, scope: !6000, inlinedAt: !6006)
!6009 = !DILocation(line: 256, column: 6, scope: !5951)
!6010 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h51099eb434296544E", scope: !6011, file: !846, line: 2048, type: !6012, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5475, retainedNodes: !6030)
!6011 = !DINamespace(name: "{impl#26}", scope: !848)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{!6014, !5467}
!6014 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !477, file: !2, size: 192, align: 64, elements: !6015, templateParams: !45, identifier: "ed6b27e9da4a0c7818c88cc6cdbc2c49")
!6015 = !{!6016}
!6016 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6014, file: !2, size: 192, align: 64, elements: !6017, templateParams: !45, identifier: "a7b10819dd28b341c3475ed432dfd9ab", discriminator: !6029)
!6017 = !{!6018, !6025}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6016, file: !2, baseType: !6019, size: 192, align: 64, extraData: i64 0)
!6019 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6014, file: !2, size: 192, align: 64, elements: !6020, templateParams: !6022, identifier: "e93b7a3a2376657e60c3935bbcb0e513")
!6020 = !{!6021}
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6019, file: !2, baseType: !170, size: 128, align: 64, offset: 64)
!6022 = !{!6023, !6024}
!6023 = !DITemplateTypeParameter(name: "B", type: !1059)
!6024 = !DITemplateTypeParameter(name: "C", type: !170)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6016, file: !2, baseType: !6026, size: 192, align: 64, extraData: i64 1)
!6026 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6014, file: !2, size: 192, align: 64, elements: !6027, templateParams: !6022, identifier: "4b99b2bd60e9aba04ce6dc0b552963ab")
!6027 = !{!6028}
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6026, file: !2, baseType: !1059, size: 128, align: 64, offset: 64)
!6029 = !DIDerivedType(tag: DW_TAG_member, scope: !6014, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!6030 = !{!6031, !6032, !6034}
!6031 = !DILocalVariable(name: "self", arg: 1, scope: !6010, file: !846, line: 2048, type: !5467)
!6032 = !DILocalVariable(name: "v", scope: !6033, file: !846, line: 2050, type: !170, align: 8)
!6033 = distinct !DILexicalBlock(scope: !6010, file: !846, line: 2050, column: 13)
!6034 = !DILocalVariable(name: "e", scope: !6035, file: !846, line: 2051, type: !159, align: 8)
!6035 = distinct !DILexicalBlock(scope: !6010, file: !846, line: 2051, column: 13)
!6036 = !DILocation(line: 2048, column: 15, scope: !6010)
!6037 = !DILocation(line: 2049, column: 15, scope: !6010)
!6038 = !DILocation(line: 2049, column: 9, scope: !6010)
!6039 = !DILocation(line: 2050, column: 16, scope: !6010)
!6040 = !DILocation(line: 2050, column: 16, scope: !6033)
!6041 = !DILocation(line: 2050, column: 22, scope: !6033)
!6042 = !DILocation(line: 2050, column: 45, scope: !6010)
!6043 = !DILocation(line: 2051, column: 17, scope: !6010)
!6044 = !DILocation(line: 2051, column: 17, scope: !6035)
!6045 = !DILocation(line: 2051, column: 42, scope: !6035)
!6046 = !DILocation(line: 2051, column: 23, scope: !6035)
!6047 = !DILocation(line: 2051, column: 48, scope: !6010)
!6048 = !DILocation(line: 2053, column: 6, scope: !6010)
!6049 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5a020fd026a170c9E", scope: !6011, file: !846, line: 2048, type: !6050, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5319, retainedNodes: !6068)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{!6052, !5311}
!6052 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !477, file: !2, size: 128, align: 64, elements: !6053, templateParams: !45, identifier: "5cf86dcfee21a61bf1a35cc15b510224")
!6053 = !{!6054}
!6054 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6052, file: !2, size: 128, align: 64, elements: !6055, templateParams: !45, identifier: "b599f93e7600d9b966c7b2d117e0b8a5", discriminator: !6067)
!6055 = !{!6056, !6063}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6054, file: !2, baseType: !6057, size: 128, align: 64, extraData: i64 0)
!6057 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6052, file: !2, size: 128, align: 64, elements: !6058, templateParams: !6060, identifier: "816b0f681d6aaa44db84099bd106110")
!6058 = !{!6059}
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6057, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6060 = !{!6061, !6062}
!6061 = !DITemplateTypeParameter(name: "B", type: !934)
!6062 = !DITemplateTypeParameter(name: "C", type: !9)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6054, file: !2, baseType: !6064, size: 128, align: 64, extraData: i64 1)
!6064 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6052, file: !2, size: 128, align: 64, elements: !6065, templateParams: !6060, identifier: "f54c312913e7be093978b3b7ef07f26a")
!6065 = !{!6066}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6064, file: !2, baseType: !934, align: 8, offset: 64)
!6067 = !DIDerivedType(tag: DW_TAG_member, scope: !6052, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!6068 = !{!6069, !6070, !6072}
!6069 = !DILocalVariable(name: "self", arg: 1, scope: !6049, file: !846, line: 2048, type: !5311)
!6070 = !DILocalVariable(name: "v", scope: !6071, file: !846, line: 2050, type: !9, align: 8)
!6071 = distinct !DILexicalBlock(scope: !6049, file: !846, line: 2050, column: 13)
!6072 = !DILocalVariable(name: "e", scope: !6073, file: !846, line: 2051, type: !71, align: 1)
!6073 = distinct !DILexicalBlock(scope: !6049, file: !846, line: 2051, column: 13)
!6074 = !DILocation(line: 2048, column: 15, scope: !6049)
!6075 = !DILocation(line: 2051, column: 17, scope: !6073)
!6076 = !DILocation(line: 2049, column: 15, scope: !6049)
!6077 = !DILocation(line: 2049, column: 9, scope: !6049)
!6078 = !DILocation(line: 2050, column: 16, scope: !6049)
!6079 = !DILocation(line: 2050, column: 16, scope: !6071)
!6080 = !DILocation(line: 2050, column: 22, scope: !6071)
!6081 = !DILocation(line: 2050, column: 45, scope: !6049)
!6082 = !DILocation(line: 2051, column: 23, scope: !6073)
!6083 = !DILocation(line: 2051, column: 48, scope: !6049)
!6084 = !DILocation(line: 2053, column: 6, scope: !6049)
!6085 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5c5715714b30109aE", scope: !6011, file: !846, line: 2048, type: !6086, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !4585, retainedNodes: !6102)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{!6088, !4577}
!6088 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, core::alloc::layout::Layout>", scope: !477, file: !2, size: 128, align: 64, elements: !6089, templateParams: !45, identifier: "6d2cd85b8105c2f01e9fdec66e1d346d")
!6089 = !{!6090}
!6090 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6088, file: !2, size: 128, align: 64, elements: !6091, templateParams: !45, identifier: "a5989d7137ed26d6e51f064b3e2400df", discriminator: !6101)
!6091 = !{!6092, !6097}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6090, file: !2, baseType: !6093, size: 128, align: 64)
!6093 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6088, file: !2, size: 128, align: 64, elements: !6094, templateParams: !6096, identifier: "32a52b7dc42442ef667cf6226b02fe53")
!6094 = !{!6095}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6093, file: !2, baseType: !170, size: 128, align: 64)
!6096 = !{!6061, !6024}
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6090, file: !2, baseType: !6098, size: 128, align: 64, extraData: i64 0)
!6098 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6088, file: !2, size: 128, align: 64, elements: !6099, templateParams: !6096, identifier: "6893fa964c7a9a486140d57cd3ebbabf")
!6099 = !{!6100}
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6098, file: !2, baseType: !934, align: 8)
!6101 = !DIDerivedType(tag: DW_TAG_member, scope: !6088, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!6102 = !{!6103, !6104, !6106}
!6103 = !DILocalVariable(name: "self", arg: 1, scope: !6085, file: !846, line: 2048, type: !4577)
!6104 = !DILocalVariable(name: "v", scope: !6105, file: !846, line: 2050, type: !170, align: 8)
!6105 = distinct !DILexicalBlock(scope: !6085, file: !846, line: 2050, column: 13)
!6106 = !DILocalVariable(name: "e", scope: !6107, file: !846, line: 2051, type: !71, align: 1)
!6107 = distinct !DILexicalBlock(scope: !6085, file: !846, line: 2051, column: 13)
!6108 = !DILocation(line: 2048, column: 15, scope: !6085)
!6109 = !DILocation(line: 2051, column: 17, scope: !6107)
!6110 = !DILocation(line: 2049, column: 15, scope: !6085)
!6111 = !DILocation(line: 2049, column: 9, scope: !6085)
!6112 = !DILocation(line: 2050, column: 16, scope: !6085)
!6113 = !DILocation(line: 2050, column: 16, scope: !6105)
!6114 = !DILocation(line: 2050, column: 22, scope: !6105)
!6115 = !DILocation(line: 2050, column: 45, scope: !6085)
!6116 = !DILocation(line: 2051, column: 23, scope: !6107)
!6117 = !DILocation(line: 2051, column: 48, scope: !6085)
!6118 = !DILocation(line: 2053, column: 6, scope: !6085)
!6119 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6003ae7f068e1a55E", scope: !6011, file: !846, line: 2048, type: !6120, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1036, retainedNodes: !6138)
!6120 = !DISubroutineType(types: !6121)
!6121 = !{!6122, !1028}
!6122 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !477, file: !2, size: 192, align: 64, elements: !6123, templateParams: !45, identifier: "2fcbfe610385e360aff3ba5061d55e25")
!6123 = !{!6124}
!6124 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6122, file: !2, size: 192, align: 64, elements: !6125, templateParams: !45, identifier: "a4a8736d836a1fcb16d925dbd7c2f73", discriminator: !6137)
!6125 = !{!6126, !6133}
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6124, file: !2, baseType: !6127, size: 192, align: 64, extraData: i64 0)
!6127 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6122, file: !2, size: 192, align: 64, elements: !6128, templateParams: !6130, identifier: "81e5fd0fb1afd25b153b1b14b170e194")
!6128 = !{!6129}
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6127, file: !2, baseType: !831, size: 128, align: 64, offset: 64)
!6130 = !{!6131, !6132}
!6131 = !DITemplateTypeParameter(name: "B", type: !988)
!6132 = !DITemplateTypeParameter(name: "C", type: !831)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6124, file: !2, baseType: !6134, size: 192, align: 64, extraData: i64 1)
!6134 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6122, file: !2, size: 192, align: 64, elements: !6135, templateParams: !6130, identifier: "9bf85eae5b913412726bc95a34f121c1")
!6135 = !{!6136}
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6134, file: !2, baseType: !988, size: 128, align: 64, offset: 64)
!6137 = !DIDerivedType(tag: DW_TAG_member, scope: !6122, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!6138 = !{!6139, !6140, !6142}
!6139 = !DILocalVariable(name: "self", arg: 1, scope: !6119, file: !846, line: 2048, type: !1028)
!6140 = !DILocalVariable(name: "v", scope: !6141, file: !846, line: 2050, type: !831, align: 8)
!6141 = distinct !DILexicalBlock(scope: !6119, file: !846, line: 2050, column: 13)
!6142 = !DILocalVariable(name: "e", scope: !6143, file: !846, line: 2051, type: !980, align: 8)
!6143 = distinct !DILexicalBlock(scope: !6119, file: !846, line: 2051, column: 13)
!6144 = !DILocation(line: 2048, column: 15, scope: !6119)
!6145 = !DILocation(line: 2049, column: 15, scope: !6119)
!6146 = !DILocation(line: 2049, column: 9, scope: !6119)
!6147 = !DILocation(line: 2050, column: 16, scope: !6119)
!6148 = !DILocation(line: 2050, column: 16, scope: !6141)
!6149 = !DILocation(line: 2050, column: 22, scope: !6141)
!6150 = !DILocation(line: 2050, column: 45, scope: !6119)
!6151 = !DILocation(line: 2051, column: 17, scope: !6119)
!6152 = !DILocation(line: 2051, column: 17, scope: !6143)
!6153 = !DILocation(line: 2051, column: 42, scope: !6143)
!6154 = !DILocation(line: 2051, column: 23, scope: !6143)
!6155 = !DILocation(line: 2051, column: 48, scope: !6119)
!6156 = !DILocation(line: 2053, column: 6, scope: !6119)
!6157 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8ec2df2520998989E", scope: !6011, file: !846, line: 2048, type: !6158, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5284, retainedNodes: !6176)
!6158 = !DISubroutineType(types: !6159)
!6159 = !{!6160, !5276}
!6160 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !477, file: !2, size: 64, align: 64, elements: !6161, templateParams: !45, identifier: "f8512be29ab7d256888b256f21e8a565")
!6161 = !{!6162}
!6162 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6160, file: !2, size: 64, align: 64, elements: !6163, templateParams: !45, identifier: "3d269a4aeb3e8bf6cb728e210864bf69", discriminator: !6175)
!6163 = !{!6164, !6171}
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6162, file: !2, baseType: !6165, size: 64, align: 64)
!6165 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6160, file: !2, size: 64, align: 64, elements: !6166, templateParams: !6168, identifier: "cf5eb08f1bd1a8c17ea0c1a1cf9f2f")
!6166 = !{!6167}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6165, file: !2, baseType: !34, size: 64, align: 64)
!6168 = !{!6169, !6170}
!6169 = !DITemplateTypeParameter(name: "B", type: !868)
!6170 = !DITemplateTypeParameter(name: "C", type: !34)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6162, file: !2, baseType: !6172, size: 64, align: 64, extraData: i64 0)
!6172 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6160, file: !2, size: 64, align: 64, elements: !6173, templateParams: !6168, identifier: "2874afbdc3c6f23fa362c7434afe822d")
!6173 = !{!6174}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6172, file: !2, baseType: !868, align: 8)
!6175 = !DIDerivedType(tag: DW_TAG_member, scope: !6160, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!6176 = !{!6177, !6178, !6180}
!6177 = !DILocalVariable(name: "self", arg: 1, scope: !6157, file: !846, line: 2048, type: !5276)
!6178 = !DILocalVariable(name: "v", scope: !6179, file: !846, line: 2050, type: !34, align: 8)
!6179 = distinct !DILexicalBlock(scope: !6157, file: !846, line: 2050, column: 13)
!6180 = !DILocalVariable(name: "e", scope: !6181, file: !846, line: 2051, type: !862, align: 1)
!6181 = distinct !DILexicalBlock(scope: !6157, file: !846, line: 2051, column: 13)
!6182 = !DILocation(line: 2048, column: 15, scope: !6157)
!6183 = !DILocation(line: 2051, column: 17, scope: !6181)
!6184 = !DILocation(line: 2049, column: 15, scope: !6157)
!6185 = !DILocation(line: 2049, column: 9, scope: !6157)
!6186 = !DILocation(line: 2050, column: 16, scope: !6157)
!6187 = !DILocation(line: 2050, column: 16, scope: !6179)
!6188 = !DILocation(line: 2050, column: 22, scope: !6179)
!6189 = !DILocation(line: 2050, column: 45, scope: !6157)
!6190 = !DILocation(line: 2051, column: 23, scope: !6181)
!6191 = !DILocation(line: 2051, column: 48, scope: !6157)
!6192 = !DILocation(line: 2053, column: 6, scope: !6157)
!6193 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd472b4c890546766E", scope: !6011, file: !846, line: 2048, type: !6194, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !977, retainedNodes: !6210)
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!6196, !969}
!6196 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !477, file: !2, size: 128, align: 64, elements: !6197, templateParams: !45, identifier: "f6362b9a9db285dffb2593bee5940fa7")
!6197 = !{!6198}
!6198 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6196, file: !2, size: 128, align: 64, elements: !6199, templateParams: !45, identifier: "b1a4bf5b49625da9f8cb77ed75e1901a", discriminator: !6209)
!6199 = !{!6200, !6205}
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6198, file: !2, baseType: !6201, size: 128, align: 64, extraData: i64 -9223372036854775807)
!6201 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6196, file: !2, size: 128, align: 64, elements: !6202, templateParams: !6204, identifier: "1feef72e8903573999a2a08d08f373d4")
!6202 = !{!6203}
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6201, file: !2, baseType: !7, align: 8)
!6204 = !{!6131, !492}
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6198, file: !2, baseType: !6206, size: 128, align: 64)
!6206 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6196, file: !2, size: 128, align: 64, elements: !6207, templateParams: !6204, identifier: "71c45a2c6c3710843ac629c381e0fd8a")
!6207 = !{!6208}
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6206, file: !2, baseType: !988, size: 128, align: 64)
!6209 = !DIDerivedType(tag: DW_TAG_member, scope: !6196, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!6210 = !{!6211, !6212, !6214}
!6211 = !DILocalVariable(name: "self", arg: 1, scope: !6193, file: !846, line: 2048, type: !969)
!6212 = !DILocalVariable(name: "v", scope: !6213, file: !846, line: 2050, type: !7, align: 1)
!6213 = distinct !DILexicalBlock(scope: !6193, file: !846, line: 2050, column: 13)
!6214 = !DILocalVariable(name: "e", scope: !6215, file: !846, line: 2051, type: !980, align: 8)
!6215 = distinct !DILexicalBlock(scope: !6193, file: !846, line: 2051, column: 13)
!6216 = !DILocation(line: 2048, column: 15, scope: !6193)
!6217 = !DILocation(line: 2050, column: 16, scope: !6213)
!6218 = !DILocation(line: 2049, column: 15, scope: !6193)
!6219 = !DILocation(line: 2049, column: 9, scope: !6193)
!6220 = !DILocation(line: 2050, column: 22, scope: !6213)
!6221 = !DILocation(line: 2050, column: 45, scope: !6193)
!6222 = !DILocation(line: 2051, column: 17, scope: !6193)
!6223 = !DILocation(line: 2051, column: 17, scope: !6215)
!6224 = !DILocation(line: 2051, column: 42, scope: !6215)
!6225 = !DILocation(line: 2051, column: 23, scope: !6215)
!6226 = !DILocation(line: 2051, column: 48, scope: !6193)
!6227 = !DILocation(line: 2053, column: 6, scope: !6193)
!6228 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdf3f46318328a39cE", scope: !6011, file: !846, line: 2048, type: !6229, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5517, retainedNodes: !6245)
!6229 = !DISubroutineType(types: !6230)
!6230 = !{!6231, !5509}
!6231 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>", scope: !477, file: !2, size: 192, align: 64, elements: !6232, templateParams: !45, identifier: "97b5de130f7979f6c4fd6e3d37fb71d")
!6232 = !{!6233}
!6233 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6231, file: !2, size: 192, align: 64, elements: !6234, templateParams: !45, identifier: "1d390447c79004f446585f01c23a3f25", discriminator: !6244)
!6234 = !{!6235, !6240}
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6233, file: !2, baseType: !6236, size: 192, align: 64, extraData: i64 0)
!6236 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6231, file: !2, size: 192, align: 64, elements: !6237, templateParams: !6239, identifier: "8d4f65379dd88e5bb4f76c69ceb6e815")
!6237 = !{!6238}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6236, file: !2, baseType: !831, size: 128, align: 64, offset: 64)
!6239 = !{!6023, !6132}
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6233, file: !2, baseType: !6241, size: 192, align: 64, extraData: i64 1)
!6241 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6231, file: !2, size: 192, align: 64, elements: !6242, templateParams: !6239, identifier: "1389174c63fe24258639fb9bc7f0619a")
!6242 = !{!6243}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6241, file: !2, baseType: !1059, size: 128, align: 64, offset: 64)
!6244 = !DIDerivedType(tag: DW_TAG_member, scope: !6231, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!6245 = !{!6246, !6247, !6249}
!6246 = !DILocalVariable(name: "self", arg: 1, scope: !6228, file: !846, line: 2048, type: !5509)
!6247 = !DILocalVariable(name: "v", scope: !6248, file: !846, line: 2050, type: !831, align: 8)
!6248 = distinct !DILexicalBlock(scope: !6228, file: !846, line: 2050, column: 13)
!6249 = !DILocalVariable(name: "e", scope: !6250, file: !846, line: 2051, type: !159, align: 8)
!6250 = distinct !DILexicalBlock(scope: !6228, file: !846, line: 2051, column: 13)
!6251 = !DILocation(line: 2048, column: 15, scope: !6228)
!6252 = !DILocation(line: 2049, column: 15, scope: !6228)
!6253 = !DILocation(line: 2049, column: 9, scope: !6228)
!6254 = !DILocation(line: 2050, column: 16, scope: !6228)
!6255 = !DILocation(line: 2050, column: 16, scope: !6248)
!6256 = !DILocation(line: 2050, column: 22, scope: !6248)
!6257 = !DILocation(line: 2050, column: 45, scope: !6228)
!6258 = !DILocation(line: 2051, column: 17, scope: !6228)
!6259 = !DILocation(line: 2051, column: 17, scope: !6250)
!6260 = !DILocation(line: 2051, column: 42, scope: !6250)
!6261 = !DILocation(line: 2051, column: 23, scope: !6250)
!6262 = !DILocation(line: 2051, column: 48, scope: !6228)
!6263 = !DILocation(line: 2053, column: 6, scope: !6228)
!6264 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heb249f893b3cbe1fE", scope: !6011, file: !846, line: 2048, type: !6265, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !859, retainedNodes: !6281)
!6265 = !DISubroutineType(types: !6266)
!6266 = !{!6267, !851}
!6267 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !477, file: !2, size: 128, align: 64, elements: !6268, templateParams: !45, identifier: "d033dc1c7a47787a4d0b554275cdf53a")
!6268 = !{!6269}
!6269 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6267, file: !2, size: 128, align: 64, elements: !6270, templateParams: !45, identifier: "c0eae888d10e4a5d392e63e930136be0", discriminator: !6280)
!6270 = !{!6271, !6276}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6269, file: !2, baseType: !6272, size: 128, align: 64)
!6272 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6267, file: !2, size: 128, align: 64, elements: !6273, templateParams: !6275, identifier: "c9e340457675a751fcc9cb2127e881ae")
!6273 = !{!6274}
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6272, file: !2, baseType: !831, size: 128, align: 64)
!6275 = !{!6169, !6132}
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6269, file: !2, baseType: !6277, size: 128, align: 64, extraData: i64 0)
!6277 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6267, file: !2, size: 128, align: 64, elements: !6278, templateParams: !6275, identifier: "e8760c407c367b192e4274ceb90b65df")
!6278 = !{!6279}
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6277, file: !2, baseType: !868, align: 8)
!6280 = !DIDerivedType(tag: DW_TAG_member, scope: !6267, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!6281 = !{!6282, !6283, !6285}
!6282 = !DILocalVariable(name: "self", arg: 1, scope: !6264, file: !846, line: 2048, type: !851)
!6283 = !DILocalVariable(name: "v", scope: !6284, file: !846, line: 2050, type: !831, align: 8)
!6284 = distinct !DILexicalBlock(scope: !6264, file: !846, line: 2050, column: 13)
!6285 = !DILocalVariable(name: "e", scope: !6286, file: !846, line: 2051, type: !862, align: 1)
!6286 = distinct !DILexicalBlock(scope: !6264, file: !846, line: 2051, column: 13)
!6287 = !DILocation(line: 2048, column: 15, scope: !6264)
!6288 = !DILocation(line: 2051, column: 17, scope: !6286)
!6289 = !DILocation(line: 2049, column: 15, scope: !6264)
!6290 = !DILocation(line: 2049, column: 9, scope: !6264)
!6291 = !DILocation(line: 2050, column: 16, scope: !6264)
!6292 = !DILocation(line: 2050, column: 16, scope: !6284)
!6293 = !DILocation(line: 2050, column: 22, scope: !6284)
!6294 = !DILocation(line: 2050, column: 45, scope: !6264)
!6295 = !DILocation(line: 2051, column: 23, scope: !6286)
!6296 = !DILocation(line: 2051, column: 48, scope: !6264)
!6297 = !DILocation(line: 2053, column: 6, scope: !6264)
!6298 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf9c0162c02d55595E", scope: !6011, file: !846, line: 2048, type: !6299, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !5249, retainedNodes: !6315)
!6299 = !DISubroutineType(types: !6300)
!6300 = !{!6301, !5241}
!6301 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !477, file: !2, size: 128, align: 64, elements: !6302, templateParams: !45, identifier: "cca0c5afcc521411f2e9131f45ac294a")
!6302 = !{!6303}
!6303 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6301, file: !2, size: 128, align: 64, elements: !6304, templateParams: !45, identifier: "c55db1e84e6258ece0fac8d440fcab34", discriminator: !6314)
!6304 = !{!6305, !6310}
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6303, file: !2, baseType: !6306, size: 128, align: 64, extraData: i64 -9223372036854775807)
!6306 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6301, file: !2, size: 128, align: 64, elements: !6307, templateParams: !6309, identifier: "675e5919502b324362f3609efdebfa36")
!6307 = !{!6308}
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6306, file: !2, baseType: !9, size: 64, align: 64)
!6309 = !{!6023, !6062}
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6303, file: !2, baseType: !6311, size: 128, align: 64)
!6311 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6301, file: !2, size: 128, align: 64, elements: !6312, templateParams: !6309, identifier: "a6bca0c359503fd1e71f210c68cbf5eb")
!6312 = !{!6313}
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6311, file: !2, baseType: !1059, size: 128, align: 64)
!6314 = !DIDerivedType(tag: DW_TAG_member, scope: !6301, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!6315 = !{!6316, !6317, !6319}
!6316 = !DILocalVariable(name: "self", arg: 1, scope: !6298, file: !846, line: 2048, type: !5241)
!6317 = !DILocalVariable(name: "v", scope: !6318, file: !846, line: 2050, type: !9, align: 8)
!6318 = distinct !DILexicalBlock(scope: !6298, file: !846, line: 2050, column: 13)
!6319 = !DILocalVariable(name: "e", scope: !6320, file: !846, line: 2051, type: !159, align: 8)
!6320 = distinct !DILexicalBlock(scope: !6298, file: !846, line: 2051, column: 13)
!6321 = !DILocation(line: 2048, column: 15, scope: !6298)
!6322 = !DILocation(line: 2049, column: 15, scope: !6298)
!6323 = !DILocation(line: 2049, column: 9, scope: !6298)
!6324 = !DILocation(line: 2050, column: 16, scope: !6298)
!6325 = !DILocation(line: 2050, column: 16, scope: !6318)
!6326 = !DILocation(line: 2050, column: 22, scope: !6318)
!6327 = !DILocation(line: 2050, column: 45, scope: !6298)
!6328 = !DILocation(line: 2051, column: 17, scope: !6298)
!6329 = !DILocation(line: 2051, column: 17, scope: !6320)
!6330 = !DILocation(line: 2051, column: 42, scope: !6320)
!6331 = !DILocation(line: 2051, column: 23, scope: !6320)
!6332 = !DILocation(line: 2051, column: 48, scope: !6298)
!6333 = !DILocation(line: 2053, column: 6, scope: !6298)
!6334 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6b408331ae9cadd1E", scope: !6335, file: !3764, line: 41, type: !6336, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !6338)
!6335 = !DINamespace(name: "{impl#0}", scope: !556)
!6336 = !DISubroutineType(types: !6337)
!6337 = !{!534, !4147}
!6338 = !{!6339}
!6339 = !DILocalVariable(name: "self", arg: 1, scope: !6334, file: !3764, line: 41, type: !4147)
!6340 = !DILocation(line: 41, column: 13, scope: !6334)
!6341 = !DILocation(line: 44, column: 18, scope: !6334)
!6342 = !DILocation(line: 45, column: 6, scope: !6334)
!6343 = distinct !DISubprogram(name: "size_hint", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h55868fced12bd259E", scope: !6335, file: !3764, line: 53, type: !6344, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !6350)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!6346, !3767}
!6346 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, core::option::Option<usize>)", file: !2, size: 192, align: 64, elements: !6347, templateParams: !45, identifier: "988e31921c642937d59bd81e5ff97ea9")
!6347 = !{!6348, !6349}
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6346, file: !2, baseType: !9, size: 64, align: 64)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6346, file: !2, baseType: !1126, size: 128, align: 64, offset: 64)
!6350 = !{!6351, !6352}
!6351 = !DILocalVariable(name: "self", arg: 1, scope: !6343, file: !3764, line: 53, type: !3767)
!6352 = !DILocalVariable(name: "len", scope: !6353, file: !3764, line: 54, type: !9, align: 8)
!6353 = distinct !DILexicalBlock(scope: !6343, file: !3764, line: 54, column: 9)
!6354 = !DILocation(line: 53, column: 18, scope: !6343)
!6355 = !DILocalVariable(name: "self", arg: 1, scope: !6356, file: !6357, line: 109, type: !6361)
!6356 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h8501744342a9e77cE", scope: !6358, file: !6357, line: 109, type: !6359, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !6362)
!6357 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "471ba458e4027bbd8c4174bbeafb0c53")
!6358 = !DINamespace(name: "{impl#180}", scope: !387)
!6359 = !DISubroutineType(types: !6360)
!6360 = !{!9, !6361}
!6361 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u8>", baseType: !559, size: 64, align: 64, dwarfAddressSpace: 0)
!6362 = !{!6355, !6363}
!6363 = !DILocalVariable(name: "start", scope: !6364, file: !6357, line: 110, type: !34, align: 8)
!6364 = distinct !DILexicalBlock(scope: !6356, file: !6357, line: 16, column: 9)
!6365 = !DILocation(line: 109, column: 20, scope: !6356, inlinedAt: !6366)
!6366 = distinct !DILocation(line: 54, column: 19, scope: !6343)
!6367 = !DILocation(line: 110, column: 17, scope: !6356, inlinedAt: !6366)
!6368 = !DILocation(line: 110, column: 17, scope: !6364, inlinedAt: !6366)
!6369 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !6370)
!6370 = distinct !DILocation(line: 110, column: 17, scope: !6364, inlinedAt: !6366)
!6371 = !DILocation(line: 111, column: 14, scope: !6356, inlinedAt: !6366)
!6372 = !DILocation(line: 54, column: 19, scope: !6343)
!6373 = !DILocation(line: 54, column: 13, scope: !6353)
!6374 = !DILocation(line: 58, column: 10, scope: !6353)
!6375 = !DILocation(line: 58, column: 25, scope: !6353)
!6376 = !DILocation(line: 58, column: 9, scope: !6353)
!6377 = !DILocation(line: 59, column: 6, scope: !6343)
!6378 = distinct !DISubprogram(name: "from_residual<core::result::Result<char, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h282c14b6b9721ca1E", scope: !6379, file: !5161, line: 2553, type: !6380, scopeLine: 2553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !6388, retainedNodes: !6413)
!6379 = !DINamespace(name: "{impl#41}", scope: !84)
!6380 = !DISubroutineType(types: !6381)
!6381 = !{!6382, !3615}
!6382 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::result::Result<char, core::char::decode::DecodeUtf16Error>>", scope: !84, file: !2, size: 64, align: 32, elements: !6383, templateParams: !45, identifier: "5d6c43f9af3d17b77be83ccdeeb90569")
!6383 = !{!6384}
!6384 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6382, file: !2, size: 64, align: 32, elements: !6385, templateParams: !45, identifier: "4bd0534cecef3c91c270522fa3f5dc42", discriminator: !6412)
!6385 = !{!6386, !6408}
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6384, file: !2, baseType: !6387, size: 64, align: 32, extraData: i64 2)
!6387 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6382, file: !2, size: 64, align: 32, elements: !45, templateParams: !6388, identifier: "ad6453281672a363e0ae96d33a037242")
!6388 = !{!6389}
!6389 = !DITemplateTypeParameter(name: "T", type: !6390)
!6390 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<char, core::char::decode::DecodeUtf16Error>", scope: !848, file: !2, size: 64, align: 32, elements: !6391, templateParams: !45, identifier: "a94f90e86218af195803248498df50c8")
!6391 = !{!6392}
!6392 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6390, file: !2, size: 64, align: 32, elements: !6393, templateParams: !45, identifier: "ecad06e4d26904368b399a28b85c57bd", discriminator: !6407)
!6393 = !{!6394, !6403}
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6392, file: !2, baseType: !6395, size: 64, align: 32, extraData: i64 0)
!6395 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6390, file: !2, size: 64, align: 32, elements: !6396, templateParams: !6398, identifier: "2460ae0266f3f35121f05031dd96e2eb")
!6396 = !{!6397}
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6395, file: !2, baseType: !491, size: 32, align: 32, offset: 32)
!6398 = !{!541, !6399}
!6399 = !DITemplateTypeParameter(name: "E", type: !6400)
!6400 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16Error", scope: !3909, file: !2, size: 16, align: 16, elements: !6401, templateParams: !45, identifier: "5462b6503815c35f79b44b864dcb231d")
!6401 = !{!6402}
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !6400, file: !2, baseType: !443, size: 16, align: 16)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6392, file: !2, baseType: !6404, size: 64, align: 32, extraData: i64 1)
!6404 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6390, file: !2, size: 64, align: 32, elements: !6405, templateParams: !6398, identifier: "9f5b5ef9ce6bf871182f02be1e6694")
!6405 = !{!6406}
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6404, file: !2, baseType: !6400, size: 16, align: 16, offset: 16)
!6407 = !DIDerivedType(tag: DW_TAG_member, scope: !6390, file: !2, baseType: !443, size: 16, align: 16, flags: DIFlagArtificial)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6384, file: !2, baseType: !6409, size: 64, align: 32)
!6409 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6382, file: !2, size: 64, align: 32, elements: !6410, templateParams: !6388, identifier: "660c74cb7b1561a8ddeba0e215e8dc30")
!6410 = !{!6411}
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6409, file: !2, baseType: !6390, size: 64, align: 32)
!6412 = !DIDerivedType(tag: DW_TAG_member, scope: !6382, file: !2, baseType: !443, size: 16, align: 16, flags: DIFlagArtificial)
!6413 = !{!6414}
!6414 = !DILocalVariable(name: "residual", arg: 1, scope: !6378, file: !5161, line: 2553, type: !3615)
!6415 = !DILocation(line: 2553, column: 22, scope: !6378)
!6416 = !DILocation(line: 2555, column: 21, scope: !6378)
!6417 = !DILocation(line: 2557, column: 6, scope: !6378)
!6418 = distinct !DISubprogram(name: "next", linkageName: "_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8e38e1f4f1275e75E", scope: !6419, file: !3764, line: 138, type: !6420, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !6440)
!6419 = !DINamespace(name: "{impl#5}", scope: !556)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!6422, !6439}
!6422 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, char)>", scope: !84, file: !2, size: 128, align: 64, elements: !6423, templateParams: !45, identifier: "791f8a8d62cfb51a430a0d70f7bd191d")
!6423 = !{!6424}
!6424 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6422, file: !2, size: 128, align: 64, elements: !6425, templateParams: !45, identifier: "9bdfe4cbf29933f8eb751070cb9c0c1", discriminator: !6438)
!6425 = !{!6426, !6434}
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6424, file: !2, baseType: !6427, size: 128, align: 64, extraData: i64 1114112)
!6427 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6422, file: !2, size: 128, align: 64, elements: !45, templateParams: !6428, identifier: "6ccaaffad03222424179dc585825ccc7")
!6428 = !{!6429}
!6429 = !DITemplateTypeParameter(name: "T", type: !6430)
!6430 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, char)", file: !2, size: 128, align: 64, elements: !6431, templateParams: !45, identifier: "291f6ed337ba42b08e474587ac5e8487")
!6431 = !{!6432, !6433}
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6430, file: !2, baseType: !9, size: 64, align: 64)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6430, file: !2, baseType: !491, size: 32, align: 32, offset: 64)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6424, file: !2, baseType: !6435, size: 128, align: 64)
!6435 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6422, file: !2, size: 128, align: 64, elements: !6436, templateParams: !6428, identifier: "b143c6765765672a540f8093b6c8737f")
!6436 = !{!6437}
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6435, file: !2, baseType: !6430, size: 128, align: 64)
!6438 = !DIDerivedType(tag: DW_TAG_member, scope: !6422, file: !2, baseType: !498, size: 32, align: 32, offset: 64, flags: DIFlagArtificial)
!6439 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::CharIndices", baseType: !3697, size: 64, align: 64, dwarfAddressSpace: 0)
!6440 = !{!6441, !6442, !6444, !6446, !6448}
!6441 = !DILocalVariable(name: "self", arg: 1, scope: !6418, file: !3764, line: 138, type: !6439)
!6442 = !DILocalVariable(name: "pre_len", scope: !6443, file: !3764, line: 139, type: !9, align: 8)
!6443 = distinct !DILexicalBlock(scope: !6418, file: !3764, line: 139, column: 9)
!6444 = !DILocalVariable(name: "ch", scope: !6445, file: !3764, line: 142, type: !491, align: 4)
!6445 = distinct !DILexicalBlock(scope: !6443, file: !3764, line: 142, column: 13)
!6446 = !DILocalVariable(name: "index", scope: !6447, file: !3764, line: 143, type: !9, align: 8)
!6447 = distinct !DILexicalBlock(scope: !6445, file: !3764, line: 143, column: 17)
!6448 = !DILocalVariable(name: "len", scope: !6449, file: !3764, line: 144, type: !9, align: 8)
!6449 = distinct !DILexicalBlock(scope: !6447, file: !3764, line: 144, column: 17)
!6450 = !DILocation(line: 138, column: 13, scope: !6418)
!6451 = !DILocation(line: 109, column: 20, scope: !6356, inlinedAt: !6452)
!6452 = distinct !DILocation(line: 139, column: 23, scope: !6418)
!6453 = !DILocation(line: 110, column: 17, scope: !6356, inlinedAt: !6452)
!6454 = !DILocation(line: 110, column: 17, scope: !6364, inlinedAt: !6452)
!6455 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !6456)
!6456 = distinct !DILocation(line: 110, column: 17, scope: !6364, inlinedAt: !6452)
!6457 = !DILocation(line: 111, column: 14, scope: !6356, inlinedAt: !6452)
!6458 = !DILocation(line: 139, column: 23, scope: !6418)
!6459 = !DILocation(line: 139, column: 13, scope: !6443)
!6460 = !DILocation(line: 140, column: 15, scope: !6443)
!6461 = !DILocation(line: 140, column: 9, scope: !6443)
!6462 = !DILocation(line: 141, column: 21, scope: !6443)
!6463 = !DILocation(line: 142, column: 18, scope: !6443)
!6464 = !DILocation(line: 142, column: 18, scope: !6445)
!6465 = !DILocation(line: 143, column: 29, scope: !6445)
!6466 = !DILocation(line: 143, column: 21, scope: !6447)
!6467 = !DILocation(line: 109, column: 20, scope: !6356, inlinedAt: !6468)
!6468 = distinct !DILocation(line: 144, column: 27, scope: !6447)
!6469 = !DILocation(line: 110, column: 17, scope: !6356, inlinedAt: !6468)
!6470 = !DILocation(line: 110, column: 17, scope: !6364, inlinedAt: !6468)
!6471 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !6472)
!6472 = distinct !DILocation(line: 110, column: 17, scope: !6364, inlinedAt: !6468)
!6473 = !DILocation(line: 111, column: 14, scope: !6356, inlinedAt: !6468)
!6474 = !DILocation(line: 144, column: 27, scope: !6447)
!6475 = !DILocation(line: 144, column: 21, scope: !6449)
!6476 = !DILocation(line: 145, column: 38, scope: !6449)
!6477 = !DILocation(line: 145, column: 17, scope: !6449)
!6478 = !DILocation(line: 146, column: 22, scope: !6449)
!6479 = !DILocation(line: 146, column: 17, scope: !6449)
!6480 = !DILocation(line: 147, column: 13, scope: !6443)
!6481 = !DILocation(line: 149, column: 6, scope: !6418)
!6482 = distinct !DISubprogram(name: "start_bound<usize>", linkageName: "_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h41440c2060a192a3E", scope: !6484, file: !6483, line: 874, type: !6485, scopeLine: 874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !6488)
!6483 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "c1aecaf6a5b28eb8d294ea6247bce985")
!6484 = !DINamespace(name: "{impl#18}", scope: !3711)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{!5036, !6487}
!6487 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ops::range::Range<usize>", baseType: !3780, size: 64, align: 64, dwarfAddressSpace: 0)
!6488 = !{!6489}
!6489 = !DILocalVariable(name: "self", arg: 1, scope: !6482, file: !6483, line: 874, type: !6487)
!6490 = !DILocation(line: 874, column: 20, scope: !6482)
!6491 = !DILocation(line: 875, column: 9, scope: !6482)
!6492 = !DILocation(line: 876, column: 6, scope: !6482)
!6493 = distinct !DISubprogram(name: "end_bound<usize>", linkageName: "_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17h6273a30cf1c50dedE", scope: !6484, file: !6483, line: 877, type: !6485, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !6494)
!6494 = !{!6495}
!6495 = !DILocalVariable(name: "self", arg: 1, scope: !6493, file: !6483, line: 877, type: !6487)
!6496 = !DILocation(line: 877, column: 18, scope: !6493)
!6497 = !DILocation(line: 878, column: 18, scope: !6493)
!6498 = !DILocation(line: 878, column: 9, scope: !6493)
!6499 = !DILocation(line: 879, column: 6, scope: !6493)
!6500 = distinct !DISubprogram(name: "next<&str>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h04a2c07ace5feab0E", scope: !6501, file: !6357, line: 124, type: !6502, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !395, retainedNodes: !6516)
!6501 = !DINamespace(name: "{impl#181}", scope: !387)
!6502 = !DISubroutineType(types: !6503)
!6503 = !{!6504, !6515}
!6504 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&&str>", scope: !84, file: !2, size: 64, align: 64, elements: !6505, templateParams: !45, identifier: "1a116412c72f6e01a7ef7e6c6812d868")
!6505 = !{!6506}
!6506 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6504, file: !2, size: 64, align: 64, elements: !6507, templateParams: !45, identifier: "2758d125a427ba1a199bcdcd1f1b05ab", discriminator: !6514)
!6507 = !{!6508, !6510}
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6506, file: !2, baseType: !6509, size: 64, align: 64, extraData: i64 0)
!6509 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6504, file: !2, size: 64, align: 64, elements: !45, templateParams: !400, identifier: "508cd92dba1939874dc02b8e9d4e8ff")
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6506, file: !2, baseType: !6511, size: 64, align: 64)
!6511 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6504, file: !2, size: 64, align: 64, elements: !6512, templateParams: !400, identifier: "aea5e44564ecca0cca91d841f64378ee")
!6512 = !{!6513}
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6511, file: !2, baseType: !402, size: 64, align: 64)
!6514 = !DIDerivedType(tag: DW_TAG_member, scope: !6504, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!6515 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<&str>", baseType: !386, size: 64, align: 64, dwarfAddressSpace: 0)
!6516 = !{!6517}
!6517 = !DILocalVariable(name: "self", arg: 1, scope: !6500, file: !6357, line: 124, type: !6515)
!6518 = !DILocation(line: 124, column: 21, scope: !6500)
!6519 = !DILocation(line: 132, column: 29, scope: !6500)
!6520 = !DILocalVariable(name: "self", arg: 1, scope: !6521, file: !702, line: 325, type: !391)
!6521 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5112990e3bfeb08cE", scope: !391, file: !702, line: 325, type: !6522, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !395, retainedNodes: !6524)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!2026, !391}
!6524 = !{!6520}
!6525 = !DILocation(line: 325, column: 25, scope: !6521, inlinedAt: !6526)
!6526 = distinct !DILocation(line: 132, column: 29, scope: !6500)
!6527 = !DILocation(line: 132, column: 28, scope: !6500)
!6528 = !DILocation(line: 132, column: 21, scope: !6500)
!6529 = !DILocation(line: 133, column: 24, scope: !6500)
!6530 = !DILocation(line: 136, column: 24, scope: !6500)
!6531 = !DILocation(line: 325, column: 25, scope: !6521, inlinedAt: !6532)
!6532 = distinct !DILocation(line: 136, column: 24, scope: !6500)
!6533 = !DILocation(line: 134, column: 33, scope: !6500)
!6534 = !DILocation(line: 134, column: 32, scope: !6500)
!6535 = !DILocation(line: 134, column: 25, scope: !6500)
!6536 = !DILocation(line: 133, column: 21, scope: !6500)
!6537 = !DILocalVariable(name: "self", arg: 1, scope: !6538, file: !6357, line: 75, type: !6515)
!6538 = distinct !DISubprogram(name: "post_inc_start<&str>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h993fc99d506af490E", scope: !386, file: !6357, line: 75, type: !6539, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !395, retainedNodes: !6541)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!394, !6515, !9}
!6541 = !{!6537, !6542, !6543}
!6542 = !DILocalVariable(name: "offset", arg: 2, scope: !6538, file: !6357, line: 75, type: !9)
!6543 = !DILocalVariable(name: "old", scope: !6544, file: !6357, line: 80, type: !2026, align: 8)
!6544 = distinct !DILexicalBlock(scope: !6538, file: !6357, line: 80, column: 21)
!6545 = !DILocation(line: 75, column: 38, scope: !6538, inlinedAt: !6546)
!6546 = distinct !DILocation(line: 139, column: 30, scope: !6500)
!6547 = !DILocation(line: 75, column: 49, scope: !6538, inlinedAt: !6546)
!6548 = !DILocation(line: 80, column: 31, scope: !6538, inlinedAt: !6546)
!6549 = !DILocation(line: 325, column: 25, scope: !6521, inlinedAt: !6550)
!6550 = distinct !DILocation(line: 80, column: 31, scope: !6538, inlinedAt: !6546)
!6551 = !DILocation(line: 80, column: 25, scope: !6544, inlinedAt: !6546)
!6552 = !DILocation(line: 83, column: 64, scope: !6544, inlinedAt: !6546)
!6553 = !DILocation(line: 325, column: 25, scope: !6521, inlinedAt: !6554)
!6554 = distinct !DILocation(line: 83, column: 64, scope: !6544, inlinedAt: !6546)
!6555 = !DILocalVariable(name: "self", arg: 1, scope: !6556, file: !2004, line: 1015, type: !2026)
!6556 = distinct !DISubprogram(name: "add<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h982ab01ad3c6207cE", scope: !2005, file: !2004, line: 1015, type: !6557, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !395, retainedNodes: !6559)
!6557 = !DISubroutineType(types: !6558)
!6558 = !{!2026, !2026, !9}
!6559 = !{!6555, !6560}
!6560 = !DILocalVariable(name: "count", arg: 2, scope: !6556, file: !2004, line: 1015, type: !9)
!6561 = !DILocation(line: 1015, column: 29, scope: !6556, inlinedAt: !6562)
!6562 = distinct !DILocation(line: 83, column: 64, scope: !6544, inlinedAt: !6546)
!6563 = !DILocation(line: 1015, column: 35, scope: !6556, inlinedAt: !6562)
!6564 = !DILocalVariable(name: "self", arg: 1, scope: !6565, file: !2004, line: 472, type: !2026)
!6565 = distinct !DISubprogram(name: "offset<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h86135d0ef5b00a3fE", scope: !2005, file: !2004, line: 472, type: !6566, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !395, retainedNodes: !6568)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{!2026, !2026, !3831}
!6568 = !{!6564, !6569}
!6569 = !DILocalVariable(name: "count", arg: 2, scope: !6565, file: !2004, line: 472, type: !3831)
!6570 = !DILocation(line: 472, column: 32, scope: !6565, inlinedAt: !6571)
!6571 = distinct !DILocation(line: 1020, column: 18, scope: !6556, inlinedAt: !6562)
!6572 = !DILocation(line: 472, column: 38, scope: !6565, inlinedAt: !6571)
!6573 = !DILocation(line: 479, column: 18, scope: !6565, inlinedAt: !6571)
!6574 = !DILocation(line: 83, column: 41, scope: !6544, inlinedAt: !6546)
!6575 = !DILocation(line: 83, column: 21, scope: !6544, inlinedAt: !6546)
!6576 = !DILocation(line: 84, column: 21, scope: !6544, inlinedAt: !6546)
!6577 = !DILocation(line: 86, column: 14, scope: !6538, inlinedAt: !6546)
!6578 = !DILocation(line: 139, column: 25, scope: !6500)
!6579 = !DILocation(line: 136, column: 21, scope: !6500)
!6580 = !DILocation(line: 137, column: 25, scope: !6500)
!6581 = !DILocation(line: 142, column: 14, scope: !6500)
!6582 = distinct !DISubprogram(name: "from_output<char, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h764ee8914d8afce4E", scope: !6583, file: !475, line: 106, type: !6584, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !489, retainedNodes: !6586)
!6583 = !DINamespace(name: "{impl#0}", scope: !477)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{!481, !7}
!6586 = !{!6587}
!6587 = !DILocalVariable(name: "output", arg: 1, scope: !6582, file: !475, line: 106, type: !7)
!6588 = !DILocation(line: 106, column: 20, scope: !6582)
!6589 = !DILocation(line: 107, column: 9, scope: !6582)
!6590 = !DILocation(line: 108, column: 6, scope: !6582)
!6591 = distinct !DISubprogram(name: "branch<char, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2de0f0ea9526867dE", scope: !6583, file: !475, line: 111, type: !6592, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !489, retainedNodes: !6609)
!6592 = !DISubroutineType(types: !6593)
!6593 = !{!6594, !481}
!6594 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::control_flow::ControlFlow<char, core::convert::Infallible>, ()>", scope: !477, file: !2, size: 32, align: 32, elements: !6595, templateParams: !45, identifier: "fdd0722ddb19b6838e429aa440c60d80")
!6595 = !{!6596}
!6596 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6594, file: !2, size: 32, align: 32, elements: !6597, templateParams: !45, identifier: "cbe65650f5fe28039fcc8ae936cfb2e2", discriminator: !6608)
!6597 = !{!6598, !6604}
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6596, file: !2, baseType: !6599, size: 32, align: 32, extraData: i64 1114112)
!6599 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6594, file: !2, size: 32, align: 32, elements: !6600, templateParams: !6602, identifier: "9bc7afcf4bc0278078dca07e94731e89")
!6600 = !{!6601}
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6599, file: !2, baseType: !7, align: 8)
!6602 = !{!6603, !492}
!6603 = !DITemplateTypeParameter(name: "B", type: !499)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6596, file: !2, baseType: !6605, size: 32, align: 32)
!6605 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6594, file: !2, size: 32, align: 32, elements: !6606, templateParams: !6602, identifier: "d1d4a7751a6fa35462043138e3aa859d")
!6606 = !{!6607}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6605, file: !2, baseType: !499, size: 32, align: 32)
!6608 = !DIDerivedType(tag: DW_TAG_member, scope: !6594, file: !2, baseType: !498, size: 32, align: 32, flags: DIFlagArtificial)
!6609 = !{!6610, !6611, !6613}
!6610 = !DILocalVariable(name: "self", arg: 1, scope: !6591, file: !475, line: 111, type: !481)
!6611 = !DILocalVariable(name: "c", scope: !6612, file: !475, line: 113, type: !7, align: 1)
!6612 = distinct !DILexicalBlock(scope: !6591, file: !475, line: 113, column: 13)
!6613 = !DILocalVariable(name: "b", scope: !6614, file: !475, line: 114, type: !491, align: 4)
!6614 = distinct !DILexicalBlock(scope: !6591, file: !475, line: 114, column: 13)
!6615 = !DILocation(line: 111, column: 15, scope: !6591)
!6616 = !DILocation(line: 113, column: 35, scope: !6612)
!6617 = !DILocation(line: 112, column: 15, scope: !6591)
!6618 = !DILocation(line: 112, column: 9, scope: !6591)
!6619 = !DILocation(line: 113, column: 41, scope: !6612)
!6620 = !DILocation(line: 113, column: 64, scope: !6591)
!6621 = !DILocation(line: 114, column: 32, scope: !6591)
!6622 = !DILocation(line: 114, column: 32, scope: !6614)
!6623 = !DILocation(line: 114, column: 57, scope: !6614)
!6624 = !DILocation(line: 114, column: 38, scope: !6614)
!6625 = !DILocation(line: 114, column: 78, scope: !6591)
!6626 = !DILocation(line: 116, column: 6, scope: !6591)
!6627 = distinct !DISubprogram(name: "from<[u8]>", linkageName: "_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h00d17420f9382b19E", scope: !6628, file: !713, line: 179, type: !6629, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !6631)
!6628 = !DINamespace(name: "{impl#10}", scope: !29)
!6629 = !DISubroutineType(types: !6630)
!6630 = !{!828, !3899}
!6631 = !{!6632}
!6632 = !DILocalVariable(name: "reference", arg: 1, scope: !6627, file: !713, line: 179, type: !3899)
!6633 = !DILocation(line: 179, column: 13, scope: !6627)
!6634 = !DILocation(line: 180, column: 20, scope: !6627)
!6635 = !DILocation(line: 180, column: 9, scope: !6627)
!6636 = !DILocation(line: 181, column: 6, scope: !6627)
!6637 = distinct !DISubprogram(name: "from<core::ffi::c_str::CStr>", linkageName: "_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hcf377dff5374381eE", scope: !6628, file: !713, line: 179, type: !6638, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !6644)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!800, !6640}
!6640 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !6641, templateParams: !45, identifier: "51477249dc72cda3c8d04b08b4576b76")
!6641 = !{!6642, !6643}
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6640, file: !2, baseType: !809, size: 64, align: 64)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6640, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6644 = !{!6645}
!6645 = !DILocalVariable(name: "reference", arg: 1, scope: !6637, file: !713, line: 179, type: !6640)
!6646 = !DILocation(line: 179, column: 13, scope: !6637)
!6647 = !DILocation(line: 180, column: 20, scope: !6637)
!6648 = !DILocation(line: 180, column: 9, scope: !6637)
!6649 = !DILocation(line: 181, column: 6, scope: !6637)
!6650 = distinct !DISubprogram(name: "from<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hd35d9bf1649aa795E", scope: !6628, file: !713, line: 179, type: !6651, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !6653)
!6651 = !DISubroutineType(types: !6652)
!6652 = !{!739, !4900}
!6653 = !{!6654}
!6654 = !DILocalVariable(name: "reference", arg: 1, scope: !6650, file: !713, line: 179, type: !4900)
!6655 = !DILocation(line: 179, column: 13, scope: !6650)
!6656 = !DILocation(line: 180, column: 20, scope: !6650)
!6657 = !DILocation(line: 180, column: 9, scope: !6650)
!6658 = !DILocation(line: 181, column: 6, scope: !6650)
!6659 = distinct !DISubprogram(name: "from<str>", linkageName: "_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hdfe988f1a1c2e898E", scope: !6628, file: !713, line: 179, type: !6660, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !6662)
!6660 = !DISubroutineType(types: !6661)
!6661 = !{!780, !3895}
!6662 = !{!6663}
!6663 = !DILocalVariable(name: "reference", arg: 1, scope: !6659, file: !713, line: 179, type: !3895)
!6664 = !DILocation(line: 179, column: 13, scope: !6659)
!6665 = !DILocation(line: 180, column: 20, scope: !6659)
!6666 = !DILocation(line: 180, column: 9, scope: !6659)
!6667 = !DILocation(line: 181, column: 6, scope: !6659)
!6668 = distinct !DISubprogram(name: "next_back", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8b6fe0e82e9bd1c9E", scope: !5208, file: !3764, line: 81, type: !6336, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !6669)
!6669 = !{!6670}
!6670 = !DILocalVariable(name: "self", arg: 1, scope: !6668, file: !3764, line: 81, type: !4147)
!6671 = !DILocation(line: 81, column: 18, scope: !6668)
!6672 = !DILocation(line: 84, column: 18, scope: !6668)
!6673 = !DILocation(line: 85, column: 6, scope: !6668)
!6674 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h838120a02046a358E", scope: !5207, file: !3764, line: 84, type: !6675, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !6677)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{!491, !5206, !498}
!6677 = !{!6678, !6679}
!6678 = !DILocalVariable(name: "ch", arg: 2, scope: !6674, file: !3764, line: 84, type: !498)
!6679 = !DILocalVariable(arg: 1, scope: !6674, file: !3764, line: 84, type: !5206)
!6680 = !DILocation(line: 84, column: 62, scope: !6674)
!6681 = !DILocation(line: 84, column: 63, scope: !6674)
!6682 = !DILocation(line: 84, column: 67, scope: !6674)
!6683 = !DILocation(line: 84, column: 95, scope: !6674)
!6684 = distinct !DISubprogram(name: "find<core::str::iter::Chars, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignoreable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hbe1371b282d78156E", scope: !6685, file: !4458, line: 67, type: !6686, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !6692, retainedNodes: !6689)
!6685 = !DINamespace(name: "{impl#1}", scope: !552)
!6686 = !DISubroutineType(types: !6687)
!6687 = !{!534, !6688, !629}
!6688 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::rev::Rev<core::str::iter::Chars>", baseType: !551, size: 64, align: 64, dwarfAddressSpace: 0)
!6689 = !{!6690, !6691}
!6690 = !DILocalVariable(name: "self", arg: 1, scope: !6684, file: !4458, line: 67, type: !6688)
!6691 = !DILocalVariable(name: "predicate", arg: 2, scope: !6684, file: !4458, line: 67, type: !629)
!6692 = !{!608, !4153}
!6693 = !DILocation(line: 67, column: 16, scope: !6684)
!6694 = !DILocation(line: 67, column: 27, scope: !6684)
!6695 = !DILocation(line: 71, column: 9, scope: !6684)
!6696 = !DILocation(line: 72, column: 6, scope: !6684)
!6697 = distinct !DISubprogram(name: "from<core::ffi::c_str::CStr>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h1b6c4e887c24bdbbE", scope: !6698, file: !702, line: 779, type: !6699, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !6701)
!6698 = !DINamespace(name: "{impl#17}", scope: !35)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{!803, !6640}
!6701 = !{!6702}
!6702 = !DILocalVariable(name: "reference", arg: 1, scope: !6697, file: !702, line: 779, type: !6640)
!6703 = !DILocation(line: 779, column: 13, scope: !6697)
!6704 = !DILocation(line: 781, column: 18, scope: !6697)
!6705 = !DILocation(line: 782, column: 6, scope: !6697)
!6706 = distinct !DISubprogram(name: "from<[u8]>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3595142e05cbf24eE", scope: !6698, file: !702, line: 779, type: !6707, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !6709)
!6707 = !DISubroutineType(types: !6708)
!6708 = !{!831, !3899}
!6709 = !{!6710}
!6710 = !DILocalVariable(name: "reference", arg: 1, scope: !6706, file: !702, line: 779, type: !3899)
!6711 = !DILocation(line: 779, column: 13, scope: !6706)
!6712 = !DILocation(line: 781, column: 18, scope: !6706)
!6713 = !DILocation(line: 782, column: 6, scope: !6706)
!6714 = distinct !DISubprogram(name: "from<str>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h574bcc3163345f80E", scope: !6698, file: !702, line: 779, type: !6715, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !6717)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{!783, !3895}
!6717 = !{!6718}
!6718 = !DILocalVariable(name: "reference", arg: 1, scope: !6714, file: !702, line: 779, type: !3895)
!6719 = !DILocation(line: 779, column: 13, scope: !6714)
!6720 = !DILocation(line: 781, column: 18, scope: !6714)
!6721 = !DILocation(line: 782, column: 6, scope: !6714)
!6722 = distinct !DISubprogram(name: "from<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17habb15163be7335dcE", scope: !6698, file: !702, line: 779, type: !6723, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1183, retainedNodes: !6726)
!6723 = !DISubroutineType(types: !6724)
!6724 = !{!1921, !6725}
!6725 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !20, size: 64, align: 64, dwarfAddressSpace: 0)
!6726 = !{!6727}
!6727 = !DILocalVariable(name: "reference", arg: 1, scope: !6722, file: !702, line: 779, type: !6725)
!6728 = !DILocation(line: 779, column: 13, scope: !6722)
!6729 = !DILocation(line: 781, column: 18, scope: !6722)
!6730 = !DILocation(line: 782, column: 6, scope: !6722)
!6731 = distinct !DISubprogram(name: "from<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc253556abe3717b3E", scope: !6698, file: !702, line: 779, type: !6732, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !760, retainedNodes: !6734)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{!742, !4900}
!6734 = !{!6735}
!6735 = !DILocalVariable(name: "reference", arg: 1, scope: !6731, file: !702, line: 779, type: !4900)
!6736 = !DILocation(line: 779, column: 13, scope: !6731)
!6737 = !DILocation(line: 781, column: 18, scope: !6731)
!6738 = !DILocation(line: 782, column: 6, scope: !6731)
!6739 = distinct !DISubprogram(name: "next<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hed8bcff8ac78ad8aE", scope: !6740, file: !3908, line: 42, type: !6741, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !3917, retainedNodes: !6744)
!6740 = !DINamespace(name: "{impl#0}", scope: !3909)
!6741 = !DISubroutineType(types: !6742)
!6742 = !{!6382, !6743}
!6743 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", baseType: !3913, size: 64, align: 64, dwarfAddressSpace: 0)
!6744 = !{!6745, !6746, !6748, !6750, !6752, !6754, !6756, !6758}
!6745 = !DILocalVariable(name: "self", arg: 1, scope: !6739, file: !3908, line: 42, type: !6743)
!6746 = !DILocalVariable(name: "u", scope: !6747, file: !3908, line: 43, type: !443, align: 2)
!6747 = distinct !DILexicalBlock(scope: !6739, file: !3908, line: 43, column: 9)
!6748 = !DILocalVariable(name: "buf", scope: !6749, file: !3908, line: 44, type: !443, align: 2)
!6749 = distinct !DILexicalBlock(scope: !6739, file: !3908, line: 44, column: 13)
!6750 = !DILocalVariable(name: "residual", scope: !6751, file: !3908, line: 45, type: !3615, align: 1)
!6751 = distinct !DILexicalBlock(scope: !6739, file: !3908, line: 45, column: 37)
!6752 = !DILocalVariable(name: "val", scope: !6753, file: !3908, line: 45, type: !443, align: 2)
!6753 = distinct !DILexicalBlock(scope: !6739, file: !3908, line: 45, column: 21)
!6754 = !DILocalVariable(name: "u2", scope: !6755, file: !3908, line: 55, type: !443, align: 2)
!6755 = distinct !DILexicalBlock(scope: !6747, file: !3908, line: 55, column: 13)
!6756 = !DILocalVariable(name: "u2", scope: !6757, file: !3908, line: 56, type: !443, align: 2)
!6757 = distinct !DILexicalBlock(scope: !6747, file: !3908, line: 56, column: 17)
!6758 = !DILocalVariable(name: "c", scope: !6759, file: !3908, line: 68, type: !498, align: 4)
!6759 = distinct !DILexicalBlock(scope: !6755, file: !3908, line: 68, column: 13)
!6760 = !DILocation(line: 42, column: 13, scope: !6739)
!6761 = !DILocation(line: 43, column: 13, scope: !6747)
!6762 = !DILocation(line: 45, column: 37, scope: !6751)
!6763 = !DILocation(line: 43, column: 23, scope: !6739)
!6764 = !DILocation(line: 43, column: 17, scope: !6739)
!6765 = !DILocation(line: 45, column: 21, scope: !6739)
!6766 = !DILocation(line: 44, column: 18, scope: !6739)
!6767 = !DILocation(line: 44, column: 18, scope: !6749)
!6768 = !DILocation(line: 44, column: 26, scope: !6749)
!6769 = !DILocation(line: 44, column: 28, scope: !6739)
!6770 = !DILocation(line: 48, column: 13, scope: !6747)
!6771 = !DILocation(line: 48, column: 12, scope: !6747)
!6772 = !DILocation(line: 45, column: 21, scope: !6753)
!6773 = !DILocation(line: 45, column: 37, scope: !6739)
!6774 = !DILocation(line: 45, column: 21, scope: !6751)
!6775 = !DILocation(line: 72, column: 6, scope: !6739)
!6776 = !DILocation(line: 51, column: 19, scope: !6747)
!6777 = !DILocation(line: 50, column: 55, scope: !6747)
!6778 = !DILocation(line: 50, column: 30, scope: !6747)
!6779 = !DILocation(line: 50, column: 18, scope: !6747)
!6780 = !DILocation(line: 50, column: 13, scope: !6747)
!6781 = !DILocation(line: 48, column: 9, scope: !6747)
!6782 = !DILocation(line: 55, column: 28, scope: !6747)
!6783 = !DILocation(line: 55, column: 22, scope: !6747)
!6784 = !DILocation(line: 53, column: 47, scope: !6747)
!6785 = !DILocation(line: 53, column: 22, scope: !6747)
!6786 = !DILocation(line: 53, column: 18, scope: !6747)
!6787 = !DILocation(line: 53, column: 13, scope: !6747)
!6788 = !DILocation(line: 51, column: 16, scope: !6747)
!6789 = !DILocation(line: 58, column: 66, scope: !6747)
!6790 = !DILocation(line: 58, column: 41, scope: !6747)
!6791 = !DILocation(line: 58, column: 37, scope: !6747)
!6792 = !DILocation(line: 58, column: 32, scope: !6747)
!6793 = !DILocation(line: 1, column: 1, scope: !6794)
!6794 = !DILexicalBlockFile(scope: !6747, file: !3667, discriminator: 0)
!6795 = !DILocation(line: 56, column: 22, scope: !6747)
!6796 = !DILocation(line: 55, column: 17, scope: !6755)
!6797 = !DILocation(line: 56, column: 22, scope: !6757)
!6798 = !DILocation(line: 60, column: 16, scope: !6755)
!6799 = !DILocation(line: 60, column: 31, scope: !6755)
!6800 = !DILocation(line: 68, column: 24, scope: !6755)
!6801 = !DILocation(line: 68, column: 23, scope: !6755)
!6802 = !DILocation(line: 68, column: 22, scope: !6755)
!6803 = !DILocation(line: 68, column: 51, scope: !6755)
!6804 = !DILocation(line: 68, column: 21, scope: !6755)
!6805 = !DILocation(line: 63, column: 28, scope: !6755)
!6806 = !DILocation(line: 63, column: 17, scope: !6755)
!6807 = !DILocation(line: 64, column: 58, scope: !6755)
!6808 = !DILocation(line: 64, column: 33, scope: !6755)
!6809 = !DILocation(line: 64, column: 29, scope: !6755)
!6810 = !DILocation(line: 64, column: 24, scope: !6755)
!6811 = !DILocation(line: 1, column: 1, scope: !6812)
!6812 = !DILexicalBlockFile(scope: !6755, file: !3667, discriminator: 0)
!6813 = !DILocation(line: 68, column: 17, scope: !6759)
!6814 = !DILocation(line: 70, column: 30, scope: !6759)
!6815 = !DILocation(line: 70, column: 18, scope: !6759)
!6816 = !DILocation(line: 70, column: 13, scope: !6759)
!6817 = distinct !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17hcc8bc95703f7facbE", scope: !24, file: !6818, line: 92, type: !6819, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !6821)
!6818 = !DIFile(filename: "src/raw_vec.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "5f14d7883b7b873321d7b8ace574b758")
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!24, !9}
!6821 = !{!6822}
!6822 = !DILocalVariable(name: "capacity", arg: 1, scope: !6817, file: !6818, line: 92, type: !9)
!6823 = !DILocation(line: 92, column: 26, scope: !6817)
!6824 = !DILocation(line: 93, column: 9, scope: !6817)
!6825 = !DILocation(line: 94, column: 6, scope: !6817)
!6826 = distinct !DISubprogram(name: "new_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17hd97159fb56d5769fE", scope: !24, file: !6818, line: 121, type: !6827, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !6829)
!6827 = !DISubroutineType(types: !6828)
!6828 = !{!24, !48}
!6829 = !{!6830}
!6830 = !DILocalVariable(name: "alloc", arg: 1, scope: !6826, file: !6818, line: 121, type: !48)
!6831 = !DILocation(line: 121, column: 25, scope: !6826)
!6832 = !DILocation(line: 123, column: 21, scope: !6826)
!6833 = !DILocation(line: 123, column: 9, scope: !6826)
!6834 = !DILocation(line: 124, column: 6, scope: !6826)
!6835 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hebe5006f60e6830aE", scope: !24, file: !6818, line: 130, type: !6836, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !6838)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{!24, !9, !48}
!6838 = !{!6839, !6840}
!6839 = !DILocalVariable(name: "capacity", arg: 1, scope: !6835, file: !6818, line: 130, type: !9)
!6840 = !DILocalVariable(name: "alloc", arg: 2, scope: !6835, file: !6818, line: 130, type: !48)
!6841 = !DILocation(line: 130, column: 29, scope: !6835)
!6842 = !DILocation(line: 130, column: 46, scope: !6835)
!6843 = !DILocation(line: 131, column: 9, scope: !6835)
!6844 = !DILocation(line: 132, column: 6, scope: !6835)
!6845 = distinct !DISubprogram(name: "into_box<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17h18156297655b9365E", scope: !24, file: !6818, line: 154, type: !6846, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !6852)
!6846 = !DISubroutineType(types: !6847)
!6847 = !{!6848, !24, !9}
!6848 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !6849, templateParams: !45, identifier: "c6f3a71dffdce8512c2a1e715d40dca6")
!6849 = !{!6850, !6851}
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6848, file: !2, baseType: !748, size: 64, align: 64)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6848, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6852 = !{!6853, !6854, !6855, !6857}
!6853 = !DILocalVariable(name: "self", arg: 1, scope: !6845, file: !6818, line: 154, type: !24)
!6854 = !DILocalVariable(name: "len", arg: 2, scope: !6845, file: !6818, line: 154, type: !9)
!6855 = !DILocalVariable(name: "me", scope: !6856, file: !6818, line: 161, type: !2283, align: 8)
!6856 = distinct !DILexicalBlock(scope: !6845, file: !6818, line: 161, column: 9)
!6857 = !DILocalVariable(name: "slice", scope: !6858, file: !6818, line: 163, type: !4900, align: 8)
!6858 = distinct !DILexicalBlock(scope: !6856, file: !6818, line: 163, column: 13)
!6859 = !DILocation(line: 154, column: 28, scope: !6845)
!6860 = !DILocation(line: 154, column: 34, scope: !6845)
!6861 = !DILocation(line: 161, column: 13, scope: !6856)
!6862 = !DILocalVariable(name: "self", arg: 1, scope: !6863, file: !6818, line: 231, type: !6866)
!6863 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h561bd8cccad1c95aE", scope: !24, file: !6818, line: 231, type: !6864, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !6867)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!9, !6866}
!6866 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !24, size: 64, align: 64, dwarfAddressSpace: 0)
!6867 = !{!6862}
!6868 = !DILocation(line: 231, column: 21, scope: !6863, inlinedAt: !6869)
!6869 = distinct !DILocation(line: 157, column: 20, scope: !6845)
!6870 = !DILocation(line: 232, column: 44, scope: !6863, inlinedAt: !6869)
!6871 = !DILocation(line: 233, column: 6, scope: !6863, inlinedAt: !6869)
!6872 = !DILocation(line: 157, column: 13, scope: !6845)
!6873 = !DILocation(line: 156, column: 9, scope: !6845)
!6874 = !DILocation(line: 161, column: 36, scope: !6845)
!6875 = !DILocalVariable(name: "value", arg: 1, scope: !6876, file: !1974, line: 70, type: !24)
!6876 = distinct !DISubprogram(name: "new<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hab1f255b2960f2d8E", scope: !2283, file: !1974, line: 70, type: !6877, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !6879)
!6877 = !DISubroutineType(types: !6878)
!6878 = !{!2283, !24}
!6879 = !{!6875}
!6880 = !DILocation(line: 70, column: 22, scope: !6876, inlinedAt: !6881)
!6881 = distinct !DILocation(line: 161, column: 18, scope: !6845)
!6882 = !DILocation(line: 71, column: 9, scope: !6876, inlinedAt: !6881)
!6883 = !DILocation(line: 72, column: 6, scope: !6876, inlinedAt: !6881)
!6884 = !DILocation(line: 161, column: 18, scope: !6845)
!6885 = !DILocalVariable(name: "self", arg: 1, scope: !6886, file: !1974, line: 153, type: !6890)
!6886 = distinct !DISubprogram(name: "deref<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h15e89c4bc8e74d17E", scope: !6887, file: !1974, line: 153, type: !6888, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1211, retainedNodes: !6891)
!6887 = !DINamespace(name: "{impl#2}", scope: !756)
!6888 = !DISubroutineType(types: !6889)
!6889 = !{!6866, !6890}
!6890 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", baseType: !2283, size: 64, align: 64, dwarfAddressSpace: 0)
!6891 = !{!6885}
!6892 = !DILocation(line: 153, column: 14, scope: !6886, inlinedAt: !6893)
!6893 = distinct !DILocation(line: 163, column: 51, scope: !6856)
!6894 = !DILocation(line: 163, column: 51, scope: !6856)
!6895 = !DILocation(line: 163, column: 25, scope: !6856)
!6896 = !DILocation(line: 163, column: 17, scope: !6858)
!6897 = !DILocation(line: 153, column: 14, scope: !6886, inlinedAt: !6898)
!6898 = distinct !DILocation(line: 164, column: 48, scope: !6858)
!6899 = !DILocation(line: 164, column: 37, scope: !6858)
!6900 = !DILocation(line: 164, column: 13, scope: !6858)
!6901 = !DILocation(line: 166, column: 6, scope: !6845)
!6902 = distinct !DISubprogram(name: "allocate_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h5e2538b2d9d66557E", scope: !24, file: !6818, line: 169, type: !6903, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !6905)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{!24, !9, !370, !48}
!6905 = !{!6906, !6907, !6908, !6909, !6911, !6913, !6915, !6917}
!6906 = !DILocalVariable(name: "capacity", arg: 1, scope: !6902, file: !6818, line: 169, type: !9)
!6907 = !DILocalVariable(name: "init", arg: 2, scope: !6902, file: !6818, line: 169, type: !370)
!6908 = !DILocalVariable(name: "alloc", arg: 3, scope: !6902, file: !6818, line: 169, type: !48)
!6909 = !DILocalVariable(name: "layout", scope: !6910, file: !6818, line: 176, type: !170, align: 8)
!6910 = distinct !DILexicalBlock(scope: !6902, file: !6818, line: 176, column: 13)
!6911 = !DILocalVariable(name: "layout", scope: !6912, file: !6818, line: 177, type: !170, align: 8)
!6912 = distinct !DILexicalBlock(scope: !6902, file: !6818, line: 177, column: 17)
!6913 = !DILocalVariable(name: "result", scope: !6914, file: !6818, line: 184, type: !851, align: 8)
!6914 = distinct !DILexicalBlock(scope: !6910, file: !6818, line: 184, column: 13)
!6915 = !DILocalVariable(name: "ptr", scope: !6916, file: !6818, line: 188, type: !831, align: 8)
!6916 = distinct !DILexicalBlock(scope: !6914, file: !6818, line: 188, column: 13)
!6917 = !DILocalVariable(name: "ptr", scope: !6918, file: !6818, line: 189, type: !831, align: 8)
!6918 = distinct !DILexicalBlock(scope: !6914, file: !6818, line: 189, column: 17)
!6919 = !DILocation(line: 169, column: 20, scope: !6902)
!6920 = !DILocation(line: 169, column: 37, scope: !6902)
!6921 = !DILocation(line: 169, column: 54, scope: !6902)
!6922 = !DILocation(line: 176, column: 17, scope: !6910)
!6923 = !DILocation(line: 184, column: 17, scope: !6914)
!6924 = !DILocation(line: 171, column: 12, scope: !6902)
!6925 = !DILocation(line: 171, column: 25, scope: !6902)
!6926 = !DILocation(line: 176, column: 32, scope: !6902)
!6927 = !DILocation(line: 176, column: 26, scope: !6902)
!6928 = !DILocation(line: 172, column: 13, scope: !6902)
!6929 = !DILocation(line: 202, column: 6, scope: !6902)
!6930 = !DILocation(line: 177, column: 20, scope: !6902)
!6931 = !DILocation(line: 177, column: 20, scope: !6912)
!6932 = !DILocation(line: 177, column: 31, scope: !6912)
!6933 = !DILocation(line: 180, column: 31, scope: !6910)
!6934 = !DILocation(line: 180, column: 19, scope: !6910)
!6935 = !DILocation(line: 180, column: 13, scope: !6910)
!6936 = !DILocation(line: 178, column: 27, scope: !6902)
!6937 = !DILocation(line: 184, column: 32, scope: !6910)
!6938 = !DILocation(line: 184, column: 26, scope: !6910)
!6939 = !DILocation(line: 182, column: 27, scope: !6910)
!6940 = !DILocation(line: 185, column: 45, scope: !6910)
!6941 = !DILocation(line: 186, column: 38, scope: !6910)
!6942 = !DILocation(line: 188, column: 29, scope: !6914)
!6943 = !DILocation(line: 188, column: 23, scope: !6914)
!6944 = !DILocation(line: 189, column: 20, scope: !6914)
!6945 = !DILocation(line: 188, column: 17, scope: !6916)
!6946 = !DILocation(line: 189, column: 20, scope: !6918)
!6947 = !DILocation(line: 197, column: 53, scope: !6916)
!6948 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !6949)
!6949 = distinct !DILocation(line: 197, column: 53, scope: !6916)
!6950 = !DILocation(line: 197, column: 31, scope: !6916)
!6951 = !DILocation(line: 196, column: 13, scope: !6916)
!6952 = !DILocation(line: 171, column: 9, scope: !6902)
!6953 = !DILocation(line: 190, column: 27, scope: !6914)
!6954 = distinct !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h96720079c6f073bdE", scope: !24, file: !6818, line: 215, type: !6955, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !6957)
!6955 = !DISubroutineType(types: !6956)
!6956 = !{!24, !1308, !9, !48}
!6957 = !{!6958, !6959, !6960}
!6958 = !DILocalVariable(name: "ptr", arg: 1, scope: !6954, file: !6818, line: 215, type: !1308)
!6959 = !DILocalVariable(name: "capacity", arg: 2, scope: !6954, file: !6818, line: 215, type: !9)
!6960 = !DILocalVariable(name: "alloc", arg: 3, scope: !6954, file: !6818, line: 215, type: !48)
!6961 = !DILocation(line: 215, column: 37, scope: !6954)
!6962 = !DILocation(line: 215, column: 50, scope: !6954)
!6963 = !DILocation(line: 215, column: 67, scope: !6954)
!6964 = !DILocation(line: 216, column: 30, scope: !6954)
!6965 = !DILocation(line: 216, column: 9, scope: !6954)
!6966 = !DILocation(line: 217, column: 6, scope: !6954)
!6967 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h98d1ca09fe1851acE", scope: !24, file: !6818, line: 223, type: !6968, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !6970)
!6968 = !DISubroutineType(types: !6969)
!6969 = !{!1308, !6866}
!6970 = !{!6971}
!6971 = !DILocalVariable(name: "self", arg: 1, scope: !6967, file: !6818, line: 223, type: !6866)
!6972 = !DILocation(line: 223, column: 16, scope: !6967)
!6973 = !DILocation(line: 224, column: 9, scope: !6967)
!6974 = !DILocation(line: 225, column: 6, scope: !6967)
!6975 = distinct !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h24543f4cbde208fcE", scope: !24, file: !6818, line: 236, type: !6976, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !6979)
!6976 = !DISubroutineType(types: !6977)
!6977 = !{!6978, !6866}
!6978 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!6979 = !{!6980}
!6980 = !DILocalVariable(name: "self", arg: 1, scope: !6975, file: !6818, line: 236, type: !6866)
!6981 = !DILocation(line: 236, column: 22, scope: !6975)
!6982 = !DILocation(line: 238, column: 6, scope: !6975)
!6983 = distinct !DISubprogram(name: "current_memory<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h70a09d7d32d826f3E", scope: !24, file: !6818, line: 240, type: !6984, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7003)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{!6986, !6866}
!6986 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !84, file: !2, size: 192, align: 64, elements: !6987, templateParams: !45, identifier: "4088b2fa027757b7556304cd6eb9cae8")
!6987 = !{!6988}
!6988 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6986, file: !2, size: 192, align: 64, elements: !6989, templateParams: !45, identifier: "76a0a9c38ba3fd9980df100a631c70e7", discriminator: !7002)
!6989 = !{!6990, !6998}
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6988, file: !2, baseType: !6991, size: 192, align: 64, extraData: i64 0)
!6991 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6986, file: !2, size: 192, align: 64, elements: !45, templateParams: !6992, identifier: "76a37244c7552bfc91928c2caf2b2f41")
!6992 = !{!6993}
!6993 = !DITemplateTypeParameter(name: "T", type: !6994)
!6994 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !6995, templateParams: !45, identifier: "f0f8101358ecef325565c23d1572cdb6")
!6995 = !{!6996, !6997}
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6994, file: !2, baseType: !34, size: 64, align: 64)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6994, file: !2, baseType: !170, size: 128, align: 64, offset: 64)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6988, file: !2, baseType: !6999, size: 192, align: 64)
!6999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6986, file: !2, size: 192, align: 64, elements: !7000, templateParams: !6992, identifier: "2dca715e1af1449923d7f42edc6c6f99")
!7000 = !{!7001}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6999, file: !2, baseType: !6994, size: 192, align: 64)
!7002 = !DIDerivedType(tag: DW_TAG_member, scope: !6986, file: !2, baseType: !179, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!7003 = !{!7004, !7005, !7007, !7009}
!7004 = !DILocalVariable(name: "self", arg: 1, scope: !6983, file: !6818, line: 240, type: !6866)
!7005 = !DILocalVariable(name: "align", scope: !7006, file: !6818, line: 250, type: !9, align: 8)
!7006 = distinct !DILexicalBlock(scope: !6983, file: !6818, line: 250, column: 17)
!7007 = !DILocalVariable(name: "size", scope: !7008, file: !6818, line: 251, type: !9, align: 8)
!7008 = distinct !DILexicalBlock(scope: !7006, file: !6818, line: 251, column: 17)
!7009 = !DILocalVariable(name: "layout", scope: !7010, file: !6818, line: 252, type: !170, align: 8)
!7010 = distinct !DILexicalBlock(scope: !7008, file: !6818, line: 252, column: 17)
!7011 = !DILocation(line: 240, column: 23, scope: !6983)
!7012 = !DILocation(line: 241, column: 12, scope: !6983)
!7013 = !DILocation(line: 241, column: 25, scope: !6983)
!7014 = !DILocation(line: 250, column: 29, scope: !6983)
!7015 = !DILocation(line: 250, column: 21, scope: !7006)
!7016 = !DILocation(line: 251, column: 62, scope: !7006)
!7017 = !DILocalVariable(name: "self", arg: 1, scope: !7018, file: !1752, line: 601, type: !9)
!7018 = distinct !DISubprogram(name: "unchecked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hd3f245171188079aE", scope: !1753, file: !1752, line: 601, type: !4546, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7019)
!7019 = !{!7017, !7020}
!7020 = !DILocalVariable(name: "rhs", arg: 2, scope: !7018, file: !1752, line: 601, type: !9)
!7021 = !DILocation(line: 601, column: 43, scope: !7018, inlinedAt: !7022)
!7022 = distinct !DILocation(line: 251, column: 28, scope: !7006)
!7023 = !DILocation(line: 601, column: 49, scope: !7018, inlinedAt: !7022)
!7024 = !DILocation(line: 604, column: 22, scope: !7018, inlinedAt: !7022)
!7025 = !DILocation(line: 251, column: 28, scope: !7006)
!7026 = !DILocation(line: 251, column: 21, scope: !7008)
!7027 = !DILocation(line: 252, column: 30, scope: !7008)
!7028 = !DILocation(line: 252, column: 21, scope: !7010)
!7029 = !DILocation(line: 253, column: 23, scope: !7010)
!7030 = !DILocation(line: 253, column: 22, scope: !7010)
!7031 = !DILocation(line: 253, column: 17, scope: !7010)
!7032 = !DILocation(line: 241, column: 9, scope: !6983)
!7033 = !DILocation(line: 242, column: 13, scope: !6983)
!7034 = !DILocation(line: 256, column: 6, scope: !6983)
!7035 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17he91f62674650ed5dE", scope: !24, file: !6818, line: 279, type: !7036, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7039)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{null, !7038, !9, !9}
!7038 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !24, size: 64, align: 64, dwarfAddressSpace: 0)
!7039 = !{!7040, !7041, !7042}
!7040 = !DILocalVariable(name: "self", arg: 1, scope: !7035, file: !6818, line: 279, type: !7038)
!7041 = !DILocalVariable(name: "len", arg: 2, scope: !7035, file: !6818, line: 279, type: !9)
!7042 = !DILocalVariable(name: "additional", arg: 3, scope: !7035, file: !6818, line: 279, type: !9)
!7043 = !DILocation(line: 279, column: 20, scope: !7035)
!7044 = !DILocation(line: 279, column: 31, scope: !7035)
!7045 = !DILocation(line: 279, column: 43, scope: !7035)
!7046 = !DILocation(line: 293, column: 12, scope: !7035)
!7047 = !DILocation(line: 296, column: 6, scope: !7035)
!7048 = !DILocation(line: 294, column: 13, scope: !7035)
!7049 = distinct !DISubprogram(name: "do_reserve_and_handle<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h5eb58b0e98fad5c5E", scope: !7050, file: !6818, line: 285, type: !7036, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7052)
!7050 = !DINamespace(name: "reserve", scope: !7051)
!7051 = !DINamespace(name: "{impl#1}", scope: !25)
!7052 = !{!7053, !7054, !7055}
!7053 = !DILocalVariable(name: "slf", arg: 1, scope: !7049, file: !6818, line: 286, type: !7038)
!7054 = !DILocalVariable(name: "len", arg: 2, scope: !7049, file: !6818, line: 287, type: !9)
!7055 = !DILocalVariable(name: "additional", arg: 3, scope: !7049, file: !6818, line: 288, type: !9)
!7056 = !DILocation(line: 286, column: 13, scope: !7049)
!7057 = !DILocation(line: 287, column: 13, scope: !7049)
!7058 = !DILocation(line: 288, column: 13, scope: !7049)
!7059 = !DILocation(line: 290, column: 28, scope: !7049)
!7060 = !DILocation(line: 290, column: 13, scope: !7049)
!7061 = !DILocation(line: 291, column: 10, scope: !7049)
!7062 = distinct !DISubprogram(name: "reserve_for_push<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hccd83727ffa4b254E", scope: !24, file: !6818, line: 302, type: !7063, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7065)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{null, !7038, !9}
!7065 = !{!7066, !7067}
!7066 = !DILocalVariable(name: "self", arg: 1, scope: !7062, file: !6818, line: 302, type: !7038)
!7067 = !DILocalVariable(name: "len", arg: 2, scope: !7062, file: !6818, line: 302, type: !9)
!7068 = !DILocation(line: 302, column: 29, scope: !7062)
!7069 = !DILocation(line: 302, column: 40, scope: !7062)
!7070 = !DILocation(line: 303, column: 24, scope: !7062)
!7071 = !DILocation(line: 303, column: 9, scope: !7062)
!7072 = !DILocation(line: 304, column: 6, scope: !7062)
!7073 = distinct !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h132c36d1cef1ec75E", scope: !24, file: !6818, line: 307, type: !7074, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7076)
!7074 = !DISubroutineType(types: !7075)
!7075 = !{!969, !7038, !9, !9}
!7076 = !{!7077, !7078, !7079}
!7077 = !DILocalVariable(name: "self", arg: 1, scope: !7073, file: !6818, line: 307, type: !7038)
!7078 = !DILocalVariable(name: "len", arg: 2, scope: !7073, file: !6818, line: 307, type: !9)
!7079 = !DILocalVariable(name: "additional", arg: 3, scope: !7073, file: !6818, line: 307, type: !9)
!7080 = !DILocation(line: 307, column: 24, scope: !7073)
!7081 = !DILocation(line: 307, column: 35, scope: !7073)
!7082 = !DILocation(line: 307, column: 47, scope: !7073)
!7083 = !DILocation(line: 308, column: 12, scope: !7073)
!7084 = !DILocation(line: 311, column: 13, scope: !7073)
!7085 = !DILocation(line: 308, column: 9, scope: !7073)
!7086 = !DILocation(line: 309, column: 13, scope: !7073)
!7087 = !DILocation(line: 313, column: 6, scope: !7073)
!7088 = distinct !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17h28b190c42f639233E", scope: !24, file: !6818, line: 333, type: !7036, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7089)
!7089 = !{!7090, !7091, !7092}
!7090 = !DILocalVariable(name: "self", arg: 1, scope: !7088, file: !6818, line: 333, type: !7038)
!7091 = !DILocalVariable(name: "len", arg: 2, scope: !7088, file: !6818, line: 333, type: !9)
!7092 = !DILocalVariable(name: "additional", arg: 3, scope: !7088, file: !6818, line: 333, type: !9)
!7093 = !DILocation(line: 333, column: 26, scope: !7088)
!7094 = !DILocation(line: 333, column: 37, scope: !7088)
!7095 = !DILocation(line: 333, column: 49, scope: !7088)
!7096 = !DILocation(line: 334, column: 24, scope: !7088)
!7097 = !DILocation(line: 334, column: 9, scope: !7088)
!7098 = !DILocation(line: 335, column: 6, scope: !7088)
!7099 = distinct !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17he95387f16b2f53cfE", scope: !24, file: !6818, line: 338, type: !7074, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7100)
!7100 = !{!7101, !7102, !7103}
!7101 = !DILocalVariable(name: "self", arg: 1, scope: !7099, file: !6818, line: 339, type: !7038)
!7102 = !DILocalVariable(name: "len", arg: 2, scope: !7099, file: !6818, line: 340, type: !9)
!7103 = !DILocalVariable(name: "additional", arg: 3, scope: !7099, file: !6818, line: 341, type: !9)
!7104 = !DILocation(line: 339, column: 9, scope: !7099)
!7105 = !DILocation(line: 340, column: 9, scope: !7099)
!7106 = !DILocation(line: 341, column: 9, scope: !7099)
!7107 = !DILocation(line: 343, column: 12, scope: !7099)
!7108 = !DILocation(line: 343, column: 92, scope: !7099)
!7109 = !DILocation(line: 343, column: 9, scope: !7099)
!7110 = !DILocation(line: 343, column: 50, scope: !7099)
!7111 = !DILocation(line: 344, column: 6, scope: !7099)
!7112 = distinct !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17h92029a7382a8e2bbE", scope: !24, file: !6818, line: 357, type: !7063, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7113)
!7113 = !{!7114, !7115}
!7114 = !DILocalVariable(name: "self", arg: 1, scope: !7112, file: !6818, line: 357, type: !7038)
!7115 = !DILocalVariable(name: "cap", arg: 2, scope: !7112, file: !6818, line: 357, type: !9)
!7116 = !DILocation(line: 357, column: 26, scope: !7112)
!7117 = !DILocation(line: 357, column: 37, scope: !7112)
!7118 = !DILocation(line: 358, column: 24, scope: !7112)
!7119 = !DILocation(line: 358, column: 9, scope: !7112)
!7120 = !DILocation(line: 359, column: 6, scope: !7112)
!7121 = distinct !DISubprogram(name: "needs_to_grow<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h2fe5fafd682504dfE", scope: !24, file: !6818, line: 365, type: !7122, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7124)
!7122 = !DISubroutineType(types: !7123)
!7123 = !{!571, !6866, !9, !9}
!7124 = !{!7125, !7126, !7127}
!7125 = !DILocalVariable(name: "self", arg: 1, scope: !7121, file: !6818, line: 365, type: !6866)
!7126 = !DILocalVariable(name: "len", arg: 2, scope: !7121, file: !6818, line: 365, type: !9)
!7127 = !DILocalVariable(name: "additional", arg: 3, scope: !7121, file: !6818, line: 365, type: !9)
!7128 = !DILocation(line: 365, column: 22, scope: !7121)
!7129 = !DILocation(line: 365, column: 29, scope: !7121)
!7130 = !DILocation(line: 365, column: 41, scope: !7121)
!7131 = !DILocation(line: 231, column: 21, scope: !6863, inlinedAt: !7132)
!7132 = distinct !DILocation(line: 366, column: 22, scope: !7121)
!7133 = !DILocation(line: 232, column: 44, scope: !6863, inlinedAt: !7132)
!7134 = !DILocation(line: 233, column: 6, scope: !6863, inlinedAt: !7132)
!7135 = !DILocation(line: 1229, column: 35, scope: !4555, inlinedAt: !7136)
!7136 = distinct !DILocation(line: 366, column: 22, scope: !7121)
!7137 = !DILocation(line: 1229, column: 41, scope: !4555, inlinedAt: !7136)
!7138 = !DILocation(line: 1230, column: 13, scope: !4555, inlinedAt: !7136)
!7139 = !DILocation(line: 366, column: 9, scope: !7121)
!7140 = !DILocation(line: 367, column: 6, scope: !7121)
!7141 = distinct !DISubprogram(name: "set_ptr_and_cap<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hab8881cfa1cfb4a7E", scope: !24, file: !6818, line: 369, type: !7142, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7144)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{null, !7038, !831, !9}
!7144 = !{!7145, !7146, !7147}
!7145 = !DILocalVariable(name: "self", arg: 1, scope: !7141, file: !6818, line: 369, type: !7038)
!7146 = !DILocalVariable(name: "ptr", arg: 2, scope: !7141, file: !6818, line: 369, type: !831)
!7147 = !DILocalVariable(name: "cap", arg: 3, scope: !7141, file: !6818, line: 369, type: !9)
!7148 = !DILocation(line: 369, column: 24, scope: !7141)
!7149 = !DILocation(line: 369, column: 35, scope: !7141)
!7150 = !DILocation(line: 369, column: 55, scope: !7141)
!7151 = !DILocation(line: 373, column: 51, scope: !7141)
!7152 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !7153)
!7153 = distinct !DILocation(line: 373, column: 51, scope: !7141)
!7154 = !DILocation(line: 373, column: 29, scope: !7141)
!7155 = !DILocation(line: 373, column: 9, scope: !7141)
!7156 = !DILocation(line: 374, column: 9, scope: !7141)
!7157 = !DILocation(line: 375, column: 6, scope: !7141)
!7158 = distinct !DISubprogram(name: "grow_amortized<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17ha1ad65c857805dd0E", scope: !24, file: !6818, line: 384, type: !7074, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7159)
!7159 = !{!7160, !7161, !7162, !7163, !7165, !7167, !7169, !7171, !7173, !7175, !7177, !7179}
!7160 = !DILocalVariable(name: "self", arg: 1, scope: !7158, file: !6818, line: 384, type: !7038)
!7161 = !DILocalVariable(name: "len", arg: 2, scope: !7158, file: !6818, line: 384, type: !9)
!7162 = !DILocalVariable(name: "additional", arg: 3, scope: !7158, file: !6818, line: 384, type: !9)
!7163 = !DILocalVariable(name: "required_cap", scope: !7164, file: !6818, line: 395, type: !9, align: 8)
!7164 = distinct !DILexicalBlock(scope: !7158, file: !6818, line: 395, column: 9)
!7165 = !DILocalVariable(name: "residual", scope: !7166, file: !6818, line: 395, type: !1059, align: 8)
!7166 = distinct !DILexicalBlock(scope: !7158, file: !6818, line: 395, column: 79)
!7167 = !DILocalVariable(name: "val", scope: !7168, file: !6818, line: 395, type: !9, align: 8)
!7168 = distinct !DILexicalBlock(scope: !7158, file: !6818, line: 395, column: 28)
!7169 = !DILocalVariable(name: "cap", scope: !7170, file: !6818, line: 399, type: !9, align: 8)
!7170 = distinct !DILexicalBlock(scope: !7164, file: !6818, line: 399, column: 9)
!7171 = !DILocalVariable(name: "cap", scope: !7172, file: !6818, line: 400, type: !9, align: 8)
!7172 = distinct !DILexicalBlock(scope: !7170, file: !6818, line: 400, column: 9)
!7173 = !DILocalVariable(name: "new_layout", scope: !7174, file: !6818, line: 402, type: !4577, align: 8)
!7174 = distinct !DILexicalBlock(scope: !7172, file: !6818, line: 402, column: 9)
!7175 = !DILocalVariable(name: "ptr", scope: !7176, file: !6818, line: 405, type: !831, align: 8)
!7176 = distinct !DILexicalBlock(scope: !7174, file: !6818, line: 405, column: 9)
!7177 = !DILocalVariable(name: "residual", scope: !7178, file: !6818, line: 405, type: !988, align: 8)
!7178 = distinct !DILexicalBlock(scope: !7174, file: !6818, line: 405, column: 82)
!7179 = !DILocalVariable(name: "val", scope: !7180, file: !6818, line: 405, type: !831, align: 8)
!7180 = distinct !DILexicalBlock(scope: !7174, file: !6818, line: 405, column: 19)
!7181 = !DILocation(line: 384, column: 23, scope: !7158)
!7182 = !DILocation(line: 384, column: 34, scope: !7158)
!7183 = !DILocation(line: 384, column: 46, scope: !7158)
!7184 = !DILocation(line: 386, column: 23, scope: !7158)
!7185 = !DILocation(line: 386, column: 9, scope: !7158)
!7186 = !DILocation(line: 388, column: 12, scope: !7158)
!7187 = !DILocation(line: 395, column: 28, scope: !7158)
!7188 = !DILocation(line: 395, column: 62, scope: !7158)
!7189 = !DILocation(line: 391, column: 24, scope: !7158)
!7190 = !DILocation(line: 391, column: 20, scope: !7158)
!7191 = !DILocation(line: 1, column: 1, scope: !7192)
!7192 = !DILexicalBlockFile(scope: !7158, file: !3667, discriminator: 0)
!7193 = !DILocation(line: 408, column: 6, scope: !7158)
!7194 = !DILocation(line: 395, column: 13, scope: !7164)
!7195 = !DILocation(line: 395, column: 28, scope: !7168)
!7196 = !DILocation(line: 399, column: 28, scope: !7164)
!7197 = !DILocation(line: 395, column: 79, scope: !7158)
!7198 = !DILocation(line: 395, column: 79, scope: !7166)
!7199 = !DILocation(line: 395, column: 28, scope: !7166)
!7200 = !DILocation(line: 399, column: 19, scope: !7164)
!7201 = !DILocation(line: 399, column: 13, scope: !7170)
!7202 = !DILocation(line: 400, column: 19, scope: !7170)
!7203 = !DILocation(line: 400, column: 13, scope: !7172)
!7204 = !DILocation(line: 402, column: 26, scope: !7172)
!7205 = !DILocation(line: 402, column: 13, scope: !7174)
!7206 = !DILocation(line: 405, column: 43, scope: !7174)
!7207 = !DILocation(line: 405, column: 19, scope: !7174)
!7208 = !DILocation(line: 405, column: 13, scope: !7176)
!7209 = !DILocation(line: 405, column: 19, scope: !7180)
!7210 = !DILocation(line: 406, column: 9, scope: !7176)
!7211 = !DILocation(line: 407, column: 9, scope: !7176)
!7212 = !DILocation(line: 405, column: 82, scope: !7174)
!7213 = !DILocation(line: 405, column: 82, scope: !7178)
!7214 = !DILocation(line: 405, column: 19, scope: !7178)
!7215 = distinct !DISubprogram(name: "grow_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$10grow_exact17h43cf91d721d5808eE", scope: !24, file: !6818, line: 413, type: !7074, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7216)
!7216 = !{!7217, !7218, !7219, !7220, !7222, !7224, !7226, !7228, !7230, !7232}
!7217 = !DILocalVariable(name: "self", arg: 1, scope: !7215, file: !6818, line: 413, type: !7038)
!7218 = !DILocalVariable(name: "len", arg: 2, scope: !7215, file: !6818, line: 413, type: !9)
!7219 = !DILocalVariable(name: "additional", arg: 3, scope: !7215, file: !6818, line: 413, type: !9)
!7220 = !DILocalVariable(name: "cap", scope: !7221, file: !6818, line: 420, type: !9, align: 8)
!7221 = distinct !DILexicalBlock(scope: !7215, file: !6818, line: 420, column: 9)
!7222 = !DILocalVariable(name: "residual", scope: !7223, file: !6818, line: 420, type: !1059, align: 8)
!7223 = distinct !DILexicalBlock(scope: !7215, file: !6818, line: 420, column: 70)
!7224 = !DILocalVariable(name: "val", scope: !7225, file: !6818, line: 420, type: !9, align: 8)
!7225 = distinct !DILexicalBlock(scope: !7215, file: !6818, line: 420, column: 19)
!7226 = !DILocalVariable(name: "new_layout", scope: !7227, file: !6818, line: 421, type: !4577, align: 8)
!7227 = distinct !DILexicalBlock(scope: !7221, file: !6818, line: 421, column: 9)
!7228 = !DILocalVariable(name: "ptr", scope: !7229, file: !6818, line: 424, type: !831, align: 8)
!7229 = distinct !DILexicalBlock(scope: !7227, file: !6818, line: 424, column: 9)
!7230 = !DILocalVariable(name: "residual", scope: !7231, file: !6818, line: 424, type: !988, align: 8)
!7231 = distinct !DILexicalBlock(scope: !7227, file: !6818, line: 424, column: 82)
!7232 = !DILocalVariable(name: "val", scope: !7233, file: !6818, line: 424, type: !831, align: 8)
!7233 = distinct !DILexicalBlock(scope: !7227, file: !6818, line: 424, column: 19)
!7234 = !DILocation(line: 413, column: 19, scope: !7215)
!7235 = !DILocation(line: 413, column: 30, scope: !7215)
!7236 = !DILocation(line: 413, column: 42, scope: !7215)
!7237 = !DILocation(line: 414, column: 12, scope: !7215)
!7238 = !DILocation(line: 420, column: 19, scope: !7215)
!7239 = !DILocation(line: 420, column: 53, scope: !7215)
!7240 = !DILocation(line: 417, column: 24, scope: !7215)
!7241 = !DILocation(line: 417, column: 20, scope: !7215)
!7242 = !DILocation(line: 1, column: 1, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !7215, file: !3667, discriminator: 0)
!7244 = !DILocation(line: 427, column: 6, scope: !7215)
!7245 = !DILocation(line: 420, column: 13, scope: !7221)
!7246 = !DILocation(line: 420, column: 19, scope: !7225)
!7247 = !DILocation(line: 421, column: 26, scope: !7221)
!7248 = !DILocation(line: 421, column: 13, scope: !7227)
!7249 = !DILocation(line: 424, column: 43, scope: !7227)
!7250 = !DILocation(line: 424, column: 19, scope: !7227)
!7251 = !DILocation(line: 420, column: 70, scope: !7215)
!7252 = !DILocation(line: 420, column: 70, scope: !7223)
!7253 = !DILocation(line: 420, column: 19, scope: !7223)
!7254 = !DILocation(line: 424, column: 13, scope: !7229)
!7255 = !DILocation(line: 424, column: 19, scope: !7233)
!7256 = !DILocation(line: 425, column: 9, scope: !7229)
!7257 = !DILocation(line: 426, column: 9, scope: !7229)
!7258 = !DILocation(line: 424, column: 82, scope: !7227)
!7259 = !DILocation(line: 424, column: 82, scope: !7231)
!7260 = !DILocation(line: 424, column: 19, scope: !7231)
!7261 = distinct !DISubprogram(name: "shrink<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6shrink17h3ffc7206ac5732dbE", scope: !24, file: !6818, line: 430, type: !7262, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7264)
!7262 = !DISubroutineType(types: !7263)
!7263 = !{!969, !7038, !9}
!7264 = !{!7265, !7266, !7267, !7269, !7270, !7272, !7274, !7276, !7278, !7280}
!7265 = !DILocalVariable(name: "self", arg: 1, scope: !7261, file: !6818, line: 430, type: !7038)
!7266 = !DILocalVariable(name: "cap", arg: 2, scope: !7261, file: !6818, line: 430, type: !9)
!7267 = !DILocalVariable(name: "ptr", scope: !7268, file: !6818, line: 433, type: !34, align: 8)
!7268 = distinct !DILexicalBlock(scope: !7261, file: !6818, line: 433, column: 9)
!7269 = !DILocalVariable(name: "layout", scope: !7268, file: !6818, line: 433, type: !170, align: 8)
!7270 = !DILocalVariable(name: "mem", scope: !7271, file: !6818, line: 433, type: !6994, align: 8)
!7271 = distinct !DILexicalBlock(scope: !7261, file: !6818, line: 433, column: 70)
!7272 = !DILocalVariable(name: "ptr", scope: !7273, file: !6818, line: 436, type: !831, align: 8)
!7273 = distinct !DILexicalBlock(scope: !7268, file: !6818, line: 436, column: 9)
!7274 = !DILocalVariable(name: "new_size", scope: !7275, file: !6818, line: 439, type: !9, align: 8)
!7275 = distinct !DILexicalBlock(scope: !7268, file: !6818, line: 439, column: 13)
!7276 = !DILocalVariable(name: "new_layout", scope: !7277, file: !6818, line: 440, type: !170, align: 8)
!7277 = distinct !DILexicalBlock(scope: !7275, file: !6818, line: 440, column: 13)
!7278 = !DILocalVariable(name: "residual", scope: !7279, file: !6818, line: 443, type: !1059, align: 8)
!7279 = distinct !DILexicalBlock(scope: !7277, file: !6818, line: 443, column: 84)
!7280 = !DILocalVariable(name: "val", scope: !7281, file: !6818, line: 441, type: !831, align: 8)
!7281 = distinct !DILexicalBlock(scope: !7277, file: !6818, line: 441, column: 13)
!7282 = !DILocation(line: 430, column: 15, scope: !7261)
!7283 = !DILocation(line: 430, column: 26, scope: !7261)
!7284 = !DILocation(line: 433, column: 19, scope: !7268)
!7285 = !DILocation(line: 433, column: 41, scope: !7271)
!7286 = !DILocation(line: 440, column: 17, scope: !7277)
!7287 = !DILocation(line: 231, column: 21, scope: !6863, inlinedAt: !7288)
!7288 = distinct !DILocation(line: 431, column: 24, scope: !7261)
!7289 = !DILocation(line: 232, column: 44, scope: !6863, inlinedAt: !7288)
!7290 = !DILocation(line: 233, column: 6, scope: !6863, inlinedAt: !7288)
!7291 = !DILocation(line: 431, column: 17, scope: !7261)
!7292 = !DILocation(line: 431, column: 9, scope: !7261)
!7293 = !DILocation(line: 433, column: 48, scope: !7271)
!7294 = !DILocation(line: 433, column: 36, scope: !7271)
!7295 = !DILocation(line: 433, column: 14, scope: !7261)
!7296 = !DILocation(line: 433, column: 14, scope: !7268)
!7297 = !DILocation(line: 433, column: 19, scope: !7261)
!7298 = !DILocation(line: 601, column: 43, scope: !7018, inlinedAt: !7299)
!7299 = distinct !DILocation(line: 439, column: 28, scope: !7268)
!7300 = !DILocation(line: 601, column: 49, scope: !7018, inlinedAt: !7299)
!7301 = !DILocation(line: 604, column: 22, scope: !7018, inlinedAt: !7299)
!7302 = !DILocation(line: 439, column: 28, scope: !7268)
!7303 = !DILocation(line: 439, column: 17, scope: !7275)
!7304 = !DILocation(line: 440, column: 74, scope: !7275)
!7305 = !DILocation(line: 440, column: 30, scope: !7275)
!7306 = !DILocation(line: 442, column: 38, scope: !7277)
!7307 = !DILocation(line: 441, column: 13, scope: !7277)
!7308 = !DILocation(line: 443, column: 26, scope: !7277)
!7309 = !DILocation(line: 433, column: 92, scope: !7261)
!7310 = !DILocation(line: 1, column: 1, scope: !7311)
!7311 = !DILexicalBlockFile(scope: !7261, file: !3667, discriminator: 0)
!7312 = !DILocation(line: 447, column: 6, scope: !7261)
!7313 = !DILocation(line: 436, column: 13, scope: !7273)
!7314 = !DILocation(line: 441, column: 13, scope: !7281)
!7315 = !DILocation(line: 445, column: 9, scope: !7273)
!7316 = !DILocation(line: 446, column: 9, scope: !7273)
!7317 = !DILocation(line: 443, column: 84, scope: !7277)
!7318 = !DILocation(line: 443, column: 84, scope: !7279)
!7319 = !DILocation(line: 441, column: 13, scope: !7279)
!7320 = distinct !DISubprogram(name: "{closure#0}<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6shrink28_$u7b$$u7b$closure$u7d$$u7d$17h8e9b43de07767fe1E", scope: !5524, file: !6818, line: 443, type: !7321, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7323)
!7321 = !DISubroutineType(types: !7322)
!7322 = !{!159, !5523, !862}
!7323 = !{!7324, !7325}
!7324 = !DILocalVariable(name: "new_layout", scope: !7320, file: !6818, line: 440, type: !170, align: 8)
!7325 = !DILocalVariable(arg: 2, scope: !7320, file: !6818, line: 443, type: !862)
!7326 = !DILocation(line: 440, column: 17, scope: !7320)
!7327 = !DILocation(line: 443, column: 27, scope: !7320)
!7328 = !DILocation(line: 443, column: 51, scope: !7320)
!7329 = !DILocation(line: 443, column: 30, scope: !7320)
!7330 = !DILocation(line: 443, column: 83, scope: !7320)
!7331 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17h6eb141d566cd47c9E", scope: !25, file: !6818, line: 455, type: !7332, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7362, retainedNodes: !7335)
!7332 = !DISubroutineType(types: !7333)
!7333 = !{!1028, !4577, !6986, !7334}
!7334 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !48, size: 64, align: 64, dwarfAddressSpace: 0)
!7335 = !{!7336, !7337, !7338, !7339, !7341, !7343, !7345, !7347, !7349, !7351, !7353, !7354, !7358, !7359}
!7336 = !DILocalVariable(name: "new_layout", arg: 1, scope: !7331, file: !6818, line: 456, type: !4577)
!7337 = !DILocalVariable(name: "current_memory", arg: 2, scope: !7331, file: !6818, line: 457, type: !6986)
!7338 = !DILocalVariable(name: "alloc", arg: 3, scope: !7331, file: !6818, line: 458, type: !7334)
!7339 = !DILocalVariable(name: "new_layout", scope: !7340, file: !6818, line: 464, type: !170, align: 8)
!7340 = distinct !DILexicalBlock(scope: !7331, file: !6818, line: 464, column: 5)
!7341 = !DILocalVariable(name: "residual", scope: !7342, file: !6818, line: 464, type: !1059, align: 8)
!7342 = distinct !DILexicalBlock(scope: !7331, file: !6818, line: 464, column: 62)
!7343 = !DILocalVariable(name: "val", scope: !7344, file: !6818, line: 464, type: !170, align: 8)
!7344 = distinct !DILexicalBlock(scope: !7331, file: !6818, line: 464, column: 22)
!7345 = !DILocalVariable(name: "residual", scope: !7346, file: !6818, line: 466, type: !988, align: 8)
!7346 = distinct !DILexicalBlock(scope: !7340, file: !6818, line: 466, column: 35)
!7347 = !DILocalVariable(name: "val", scope: !7348, file: !6818, line: 466, type: !7, align: 1)
!7348 = distinct !DILexicalBlock(scope: !7340, file: !6818, line: 466, column: 5)
!7349 = !DILocalVariable(name: "memory", scope: !7350, file: !6818, line: 468, type: !851, align: 8)
!7350 = distinct !DILexicalBlock(scope: !7340, file: !6818, line: 468, column: 5)
!7351 = !DILocalVariable(name: "ptr", scope: !7352, file: !6818, line: 468, type: !34, align: 8)
!7352 = distinct !DILexicalBlock(scope: !7340, file: !6818, line: 468, column: 66)
!7353 = !DILocalVariable(name: "old_layout", scope: !7352, file: !6818, line: 468, type: !170, align: 8)
!7354 = !DILocalVariable(name: "left_val", scope: !7355, file: !6818, line: 469, type: !289, align: 8)
!7355 = !DILexicalBlockFile(scope: !7356, file: !6818, discriminator: 0)
!7356 = distinct !DILexicalBlock(scope: !7352, file: !7357, line: 39, column: 13)
!7357 = !DIFile(filename: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "0168b0d49598552ba64770ba9401c336")
!7358 = !DILocalVariable(name: "right_val", scope: !7355, file: !6818, line: 469, type: !289, align: 8)
!7359 = !DILocalVariable(name: "kind", scope: !7360, file: !6818, line: 469, type: !364, align: 1)
!7360 = !DILexicalBlockFile(scope: !7361, file: !6818, discriminator: 0)
!7361 = distinct !DILexicalBlock(scope: !7356, file: !7357, line: 41, column: 21)
!7362 = !{!51}
!7363 = !DILocation(line: 456, column: 5, scope: !7331)
!7364 = !DILocation(line: 457, column: 5, scope: !7331)
!7365 = !DILocation(line: 458, column: 5, scope: !7331)
!7366 = !DILocation(line: 464, column: 9, scope: !7340)
!7367 = !DILocation(line: 466, column: 5, scope: !7348)
!7368 = !DILocation(line: 468, column: 9, scope: !7350)
!7369 = !DILocation(line: 468, column: 36, scope: !7352)
!7370 = !DILocation(line: 464, column: 22, scope: !7331)
!7371 = !DILocation(line: 464, column: 22, scope: !7344)
!7372 = !DILocation(line: 466, column: 17, scope: !7340)
!7373 = !DILocation(line: 466, column: 5, scope: !7340)
!7374 = !DILocation(line: 464, column: 62, scope: !7331)
!7375 = !DILocation(line: 464, column: 62, scope: !7342)
!7376 = !DILocation(line: 464, column: 22, scope: !7342)
!7377 = !DILocation(line: 480, column: 2, scope: !7331)
!7378 = !DILocation(line: 468, column: 25, scope: !7352)
!7379 = !DILocation(line: 466, column: 35, scope: !7340)
!7380 = !DILocation(line: 466, column: 35, scope: !7346)
!7381 = !DILocation(line: 466, column: 5, scope: !7346)
!7382 = !DILocation(line: 468, column: 31, scope: !7352)
!7383 = !DILocation(line: 469, column: 26, scope: !7352)
!7384 = !DILocation(line: 469, column: 46, scope: !7352)
!7385 = !DILocation(line: 469, column: 9, scope: !7352)
!7386 = !DILocation(line: 469, column: 9, scope: !7355)
!7387 = !DILocation(line: 476, column: 9, scope: !7340)
!7388 = !DILocation(line: 479, column: 5, scope: !7350)
!7389 = !DILocation(line: 479, column: 20, scope: !7350)
!7390 = !DILocation(line: 472, column: 32, scope: !7352)
!7391 = !DILocation(line: 472, column: 54, scope: !7352)
!7392 = !DILocation(line: 472, column: 13, scope: !7352)
!7393 = !DILocation(line: 473, column: 13, scope: !7352)
!7394 = !DILocation(line: 469, column: 9, scope: !7360)
!7395 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hce5445e8c9461545E", scope: !5438, file: !6818, line: 464, type: !7396, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7362, retainedNodes: !7398)
!7396 = !DISubroutineType(types: !7397)
!7397 = !{!159, !5481, !71}
!7398 = !{!7399, !7400}
!7399 = !DILocalVariable(arg: 1, scope: !7395, file: !6818, line: 464, type: !5481)
!7400 = !DILocalVariable(arg: 2, scope: !7395, file: !6818, line: 464, type: !71)
!7401 = !DILocation(line: 464, column: 41, scope: !7395)
!7402 = !DILocation(line: 464, column: 42, scope: !7395)
!7403 = !DILocation(line: 464, column: 45, scope: !7395)
!7404 = !DILocation(line: 464, column: 61, scope: !7395)
!7405 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h82b13999f26244c5E", scope: !5438, file: !6818, line: 479, type: !7406, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7362, retainedNodes: !7408)
!7406 = !DISubroutineType(types: !7407)
!7407 = !{!980, !5437, !862}
!7408 = !{!7409, !7410}
!7409 = !DILocalVariable(name: "new_layout", scope: !7405, file: !6818, line: 464, type: !170, align: 8)
!7410 = !DILocalVariable(arg: 2, scope: !7405, file: !6818, line: 479, type: !862)
!7411 = !DILocation(line: 464, column: 9, scope: !7405)
!7412 = !DILocation(line: 479, column: 21, scope: !7405)
!7413 = !DILocation(line: 479, column: 45, scope: !7405)
!7414 = !DILocation(line: 479, column: 24, scope: !7405)
!7415 = !DILocation(line: 479, column: 84, scope: !7405)
!7416 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h013463ec9eaded60E", scope: !7417, file: !6818, line: 484, type: !7418, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7420)
!7417 = !DINamespace(name: "{impl#3}", scope: !25)
!7418 = !DISubroutineType(types: !7419)
!7419 = !{null, !7038}
!7420 = !{!7421, !7422, !7424}
!7421 = !DILocalVariable(name: "self", arg: 1, scope: !7416, file: !6818, line: 484, type: !7038)
!7422 = !DILocalVariable(name: "ptr", scope: !7423, file: !6818, line: 485, type: !34, align: 8)
!7423 = distinct !DILexicalBlock(scope: !7416, file: !6818, line: 485, column: 60)
!7424 = !DILocalVariable(name: "layout", scope: !7423, file: !6818, line: 485, type: !170, align: 8)
!7425 = !DILocation(line: 484, column: 13, scope: !7416)
!7426 = !DILocation(line: 485, column: 38, scope: !7423)
!7427 = !DILocation(line: 485, column: 16, scope: !7423)
!7428 = !DILocation(line: 485, column: 22, scope: !7423)
!7429 = !DILocation(line: 485, column: 27, scope: !7423)
!7430 = !DILocation(line: 486, column: 22, scope: !7423)
!7431 = !DILocation(line: 488, column: 6, scope: !7416)
!7432 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17hcc9be2f7d2ec10d7E", scope: !25, file: !6818, line: 494, type: !7433, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7435)
!7433 = !DISubroutineType(types: !7434)
!7434 = !{null, !969}
!7435 = !{!7436, !7437}
!7436 = !DILocalVariable(name: "result", arg: 1, scope: !7432, file: !6818, line: 494, type: !969)
!7437 = !DILocalVariable(name: "layout", scope: !7438, file: !6818, line: 497, type: !170, align: 8)
!7438 = distinct !DILexicalBlock(scope: !7432, file: !6818, line: 497, column: 9)
!7439 = !DILocation(line: 494, column: 19, scope: !7432)
!7440 = !DILocation(line: 495, column: 11, scope: !7432)
!7441 = !DILocation(line: 495, column: 5, scope: !7432)
!7442 = !DILocation(line: 500, column: 2, scope: !7432)
!7443 = !DILocation(line: 496, column: 34, scope: !7432)
!7444 = !DILocation(line: 497, column: 26, scope: !7432)
!7445 = !DILocation(line: 497, column: 26, scope: !7438)
!7446 = !DILocation(line: 497, column: 43, scope: !7438)
!7447 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h575467add90393b2E", scope: !5639, file: !6818, line: 495, type: !7448, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7450)
!7448 = !DISubroutineType(types: !7449)
!7449 = !{!159, !5638, !980}
!7450 = !{!7451, !7452}
!7451 = !DILocalVariable(name: "e", arg: 2, scope: !7447, file: !6818, line: 495, type: !980)
!7452 = !DILocalVariable(arg: 1, scope: !7447, file: !6818, line: 495, type: !5638)
!7453 = !DILocation(line: 495, column: 26, scope: !7447)
!7454 = !DILocation(line: 495, column: 27, scope: !7447)
!7455 = !DILocation(line: 495, column: 30, scope: !7447)
!7456 = !DILocation(line: 495, column: 38, scope: !7447)
!7457 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17hc650f0e0913c3514E", scope: !25, file: !6818, line: 512, type: !7458, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7460)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!969, !9}
!7460 = !{!7461}
!7461 = !DILocalVariable(name: "alloc_size", arg: 1, scope: !7457, file: !6818, line: 512, type: !9)
!7462 = !DILocation(line: 512, column: 16, scope: !7457)
!7463 = !DILocation(line: 513, column: 8, scope: !7457)
!7464 = !DILocation(line: 516, column: 9, scope: !7457)
!7465 = !DILocation(line: 513, column: 5, scope: !7457)
!7466 = !DILocation(line: 514, column: 13, scope: !7457)
!7467 = !DILocation(line: 514, column: 9, scope: !7457)
!7468 = !DILocation(line: 518, column: 2, scope: !7457)
!7469 = distinct !DISubprogram(name: "capacity_overflow", linkageName: "_ZN5alloc7raw_vec17capacity_overflow17ha8c8f9bec62c17b6E", scope: !25, file: !6818, line: 524, type: !7470, scopeLine: 524, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !45)
!7470 = !DISubroutineType(types: !7471)
!7471 = !{null}
!7472 = !DILocation(line: 525, column: 5, scope: !7469)
!7473 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h6d0f54158a10339aE", scope: !49, file: !7474, line: 94, type: !7475, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7477)
!7474 = !DIFile(filename: "src/alloc.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "8f0bb56a2d1236a4923e7871e994b82a")
!7475 = !DISubroutineType(types: !7476)
!7476 = !{!1308, !170}
!7477 = !{!7478}
!7478 = !DILocalVariable(name: "layout", arg: 1, scope: !7473, file: !7474, line: 94, type: !170)
!7479 = !DILocation(line: 94, column: 21, scope: !7473)
!7480 = !DILocation(line: 95, column: 27, scope: !7473)
!7481 = !DILocation(line: 95, column: 42, scope: !7473)
!7482 = !DILocation(line: 95, column: 14, scope: !7473)
!7483 = !DILocation(line: 96, column: 2, scope: !7473)
!7484 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17ha6a467ba90738352E", scope: !49, file: !7474, line: 112, type: !7485, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7487)
!7485 = !DISubroutineType(types: !7486)
!7486 = !{null, !1308, !170}
!7487 = !{!7488, !7489}
!7488 = !DILocalVariable(name: "ptr", arg: 1, scope: !7484, file: !7474, line: 112, type: !1308)
!7489 = !DILocalVariable(name: "layout", arg: 2, scope: !7484, file: !7474, line: 112, type: !170)
!7490 = !DILocation(line: 112, column: 23, scope: !7484)
!7491 = !DILocation(line: 112, column: 37, scope: !7484)
!7492 = !DILocation(line: 113, column: 34, scope: !7484)
!7493 = !DILocation(line: 113, column: 49, scope: !7484)
!7494 = !DILocation(line: 113, column: 14, scope: !7484)
!7495 = !DILocation(line: 114, column: 2, scope: !7484)
!7496 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17h49b59fb143fd4ef5E", scope: !49, file: !7474, line: 131, type: !7497, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7499)
!7497 = !DISubroutineType(types: !7498)
!7498 = !{!1308, !1308, !170, !9}
!7499 = !{!7500, !7501, !7502}
!7500 = !DILocalVariable(name: "ptr", arg: 1, scope: !7496, file: !7474, line: 131, type: !1308)
!7501 = !DILocalVariable(name: "layout", arg: 2, scope: !7496, file: !7474, line: 131, type: !170)
!7502 = !DILocalVariable(name: "new_size", arg: 3, scope: !7496, file: !7474, line: 131, type: !9)
!7503 = !DILocation(line: 131, column: 23, scope: !7496)
!7504 = !DILocation(line: 131, column: 37, scope: !7496)
!7505 = !DILocation(line: 131, column: 53, scope: !7496)
!7506 = !DILocation(line: 132, column: 34, scope: !7496)
!7507 = !DILocation(line: 132, column: 49, scope: !7496)
!7508 = !DILocation(line: 132, column: 14, scope: !7496)
!7509 = !DILocation(line: 133, column: 2, scope: !7496)
!7510 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17h8d9f1dc708e4d1eaE", scope: !49, file: !7474, line: 165, type: !7475, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7511)
!7511 = !{!7512}
!7512 = !DILocalVariable(name: "layout", arg: 1, scope: !7510, file: !7474, line: 165, type: !170)
!7513 = !DILocation(line: 165, column: 28, scope: !7510)
!7514 = !DILocation(line: 166, column: 34, scope: !7510)
!7515 = !DILocation(line: 166, column: 49, scope: !7510)
!7516 = !DILocation(line: 166, column: 14, scope: !7510)
!7517 = !DILocation(line: 167, column: 2, scope: !7510)
!7518 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17hc552379f930e6ff1E", scope: !48, file: !7474, line: 172, type: !7519, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7521)
!7519 = !DISubroutineType(types: !7520)
!7520 = !{!851, !6978, !170, !571}
!7521 = !{!7522, !7523, !7524, !7525, !7527, !7529, !7531, !7533}
!7522 = !DILocalVariable(name: "self", arg: 1, scope: !7518, file: !7474, line: 172, type: !6978)
!7523 = !DILocalVariable(name: "layout", arg: 2, scope: !7518, file: !7474, line: 172, type: !170)
!7524 = !DILocalVariable(name: "zeroed", arg: 3, scope: !7518, file: !7474, line: 172, type: !571)
!7525 = !DILocalVariable(name: "size", scope: !7526, file: !7474, line: 176, type: !9, align: 8)
!7526 = distinct !DILexicalBlock(scope: !7518, file: !7474, line: 176, column: 13)
!7527 = !DILocalVariable(name: "raw_ptr", scope: !7528, file: !7474, line: 177, type: !1308, align: 8)
!7528 = distinct !DILexicalBlock(scope: !7526, file: !7474, line: 177, column: 17)
!7529 = !DILocalVariable(name: "ptr", scope: !7530, file: !7474, line: 178, type: !34, align: 8)
!7530 = distinct !DILexicalBlock(scope: !7528, file: !7474, line: 178, column: 17)
!7531 = !DILocalVariable(name: "residual", scope: !7532, file: !7474, line: 178, type: !868, align: 1)
!7532 = distinct !DILexicalBlock(scope: !7528, file: !7474, line: 178, column: 66)
!7533 = !DILocalVariable(name: "val", scope: !7534, file: !7474, line: 178, type: !34, align: 8)
!7534 = distinct !DILexicalBlock(scope: !7528, file: !7474, line: 178, column: 27)
!7535 = !DILocation(line: 172, column: 19, scope: !7518)
!7536 = !DILocation(line: 172, column: 26, scope: !7518)
!7537 = !DILocation(line: 172, column: 42, scope: !7518)
!7538 = !DILocation(line: 177, column: 21, scope: !7528)
!7539 = !DILocation(line: 178, column: 66, scope: !7532)
!7540 = !DILocation(line: 173, column: 15, scope: !7518)
!7541 = !DILocation(line: 173, column: 9, scope: !7518)
!7542 = !DILocation(line: 174, column: 51, scope: !7518)
!7543 = !DILocation(line: 174, column: 21, scope: !7518)
!7544 = !DILocation(line: 174, column: 18, scope: !7518)
!7545 = !DILocation(line: 174, column: 72, scope: !7518)
!7546 = !DILocation(line: 176, column: 13, scope: !7518)
!7547 = !DILocation(line: 176, column: 13, scope: !7526)
!7548 = !DILocation(line: 177, column: 34, scope: !7526)
!7549 = !DILocation(line: 177, column: 73, scope: !7526)
!7550 = !DILocation(line: 177, column: 43, scope: !7526)
!7551 = !DILocation(line: 178, column: 40, scope: !7528)
!7552 = !DILocation(line: 178, column: 27, scope: !7528)
!7553 = !DILocation(line: 178, column: 21, scope: !7530)
!7554 = !DILocation(line: 178, column: 27, scope: !7534)
!7555 = !DILocation(line: 179, column: 20, scope: !7530)
!7556 = !DILocation(line: 179, column: 17, scope: !7530)
!7557 = !DILocation(line: 180, column: 13, scope: !7518)
!7558 = !DILocation(line: 178, column: 27, scope: !7532)
!7559 = !DILocation(line: 182, column: 6, scope: !7518)
!7560 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h910a929faaea79c7E", scope: !48, file: !7474, line: 186, type: !7561, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7563)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{!851, !6978, !34, !170, !170, !571}
!7563 = !{!7564, !7565, !7566, !7567, !7568, !7569, !7571, !7572, !7574, !7576, !7578, !7580, !7582, !7584, !7586, !7588}
!7564 = !DILocalVariable(name: "self", arg: 1, scope: !7560, file: !7474, line: 187, type: !6978)
!7565 = !DILocalVariable(name: "ptr", arg: 2, scope: !7560, file: !7474, line: 188, type: !34)
!7566 = !DILocalVariable(name: "old_layout", arg: 3, scope: !7560, file: !7474, line: 189, type: !170)
!7567 = !DILocalVariable(name: "new_layout", arg: 4, scope: !7560, file: !7474, line: 190, type: !170)
!7568 = !DILocalVariable(name: "zeroed", arg: 5, scope: !7560, file: !7474, line: 191, type: !571)
!7569 = !DILocalVariable(name: "old_size", scope: !7570, file: !7474, line: 203, type: !9, align: 8)
!7570 = distinct !DILexicalBlock(scope: !7560, file: !7474, line: 203, column: 13)
!7571 = !DILocalVariable(name: "old_size", scope: !7570, file: !7474, line: 203, type: !289, align: 8)
!7572 = !DILocalVariable(name: "new_size", scope: !7573, file: !7474, line: 204, type: !9, align: 8)
!7573 = distinct !DILexicalBlock(scope: !7570, file: !7474, line: 204, column: 17)
!7574 = !DILocalVariable(name: "raw_ptr", scope: !7575, file: !7474, line: 209, type: !1308, align: 8)
!7575 = distinct !DILexicalBlock(scope: !7573, file: !7474, line: 209, column: 17)
!7576 = !DILocalVariable(name: "ptr", scope: !7577, file: !7474, line: 210, type: !34, align: 8)
!7577 = distinct !DILexicalBlock(scope: !7575, file: !7474, line: 210, column: 17)
!7578 = !DILocalVariable(name: "residual", scope: !7579, file: !7474, line: 210, type: !868, align: 1)
!7579 = distinct !DILexicalBlock(scope: !7575, file: !7474, line: 210, column: 66)
!7580 = !DILocalVariable(name: "val", scope: !7581, file: !7474, line: 210, type: !34, align: 8)
!7581 = distinct !DILexicalBlock(scope: !7575, file: !7474, line: 210, column: 27)
!7582 = !DILocalVariable(name: "old_size", scope: !7583, file: !7474, line: 222, type: !9, align: 8)
!7583 = distinct !DILexicalBlock(scope: !7560, file: !7474, line: 222, column: 13)
!7584 = !DILocalVariable(name: "new_ptr", scope: !7585, file: !7474, line: 223, type: !831, align: 8)
!7585 = distinct !DILexicalBlock(scope: !7583, file: !7474, line: 223, column: 17)
!7586 = !DILocalVariable(name: "residual", scope: !7587, file: !7474, line: 223, type: !868, align: 1)
!7587 = distinct !DILexicalBlock(scope: !7583, file: !7474, line: 223, column: 66)
!7588 = !DILocalVariable(name: "val", scope: !7589, file: !7474, line: 223, type: !831, align: 8)
!7589 = distinct !DILexicalBlock(scope: !7583, file: !7474, line: 223, column: 31)
!7590 = !DILocation(line: 187, column: 9, scope: !7560)
!7591 = !DILocation(line: 188, column: 9, scope: !7560)
!7592 = !DILocation(line: 189, column: 9, scope: !7560)
!7593 = !DILocation(line: 190, column: 9, scope: !7560)
!7594 = !DILocation(line: 191, column: 9, scope: !7560)
!7595 = !DILocation(line: 210, column: 66, scope: !7579)
!7596 = !DILocation(line: 223, column: 66, scope: !7587)
!7597 = !DILocation(line: 194, column: 13, scope: !7560)
!7598 = !DILocation(line: 194, column: 34, scope: !7560)
!7599 = !DILocation(line: 193, column: 9, scope: !7560)
!7600 = !DILocation(line: 198, column: 15, scope: !7560)
!7601 = !DILocation(line: 198, column: 9, scope: !7560)
!7602 = !DILocation(line: 199, column: 18, scope: !7560)
!7603 = !DILocation(line: 203, column: 13, scope: !7560)
!7604 = !DILocation(line: 203, column: 13, scope: !7570)
!7605 = !DILocation(line: 203, column: 25, scope: !7560)
!7606 = !DILocation(line: 203, column: 47, scope: !7560)
!7607 = !DILocation(line: 222, column: 13, scope: !7560)
!7608 = !DILocation(line: 222, column: 13, scope: !7583)
!7609 = !DILocation(line: 223, column: 31, scope: !7583)
!7610 = !DILocation(line: 204, column: 32, scope: !7570)
!7611 = !DILocation(line: 204, column: 21, scope: !7573)
!7612 = !DILocation(line: 207, column: 48, scope: !7573)
!7613 = !DILocation(line: 207, column: 36, scope: !7573)
!7614 = !DILocation(line: 207, column: 17, scope: !7573)
!7615 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !7616)
!7616 = distinct !DILocation(line: 209, column: 39, scope: !7573)
!7617 = !DILocation(line: 209, column: 31, scope: !7573)
!7618 = !DILocation(line: 209, column: 21, scope: !7575)
!7619 = !DILocation(line: 210, column: 27, scope: !7575)
!7620 = !DILocation(line: 210, column: 21, scope: !7577)
!7621 = !DILocation(line: 210, column: 27, scope: !7581)
!7622 = !DILocation(line: 211, column: 20, scope: !7577)
!7623 = !DILocation(line: 210, column: 27, scope: !7579)
!7624 = !DILocation(line: 229, column: 6, scope: !7560)
!7625 = !DILocation(line: 214, column: 20, scope: !7577)
!7626 = !DILocation(line: 214, column: 17, scope: !7577)
!7627 = !DILocation(line: 215, column: 13, scope: !7560)
!7628 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !7629)
!7629 = distinct !DILocation(line: 212, column: 21, scope: !7577)
!7630 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !7629)
!7631 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !7632)
!7632 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !7629)
!7633 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !7632)
!7634 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !7632)
!7635 = !DILocation(line: 212, column: 58, scope: !7577)
!7636 = !DILocalVariable(name: "self", arg: 1, scope: !7637, file: !2004, line: 1463, type: !1308)
!7637 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h021ff7273095e732E", scope: !2005, file: !2004, line: 1463, type: !7638, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !7640)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{null, !1308, !39, !9}
!7640 = !{!7636, !7641, !7642}
!7641 = !DILocalVariable(name: "val", arg: 2, scope: !7637, file: !2004, line: 1463, type: !39)
!7642 = !DILocalVariable(name: "count", arg: 3, scope: !7637, file: !2004, line: 1463, type: !9)
!7643 = !DILocation(line: 1463, column: 37, scope: !7637, inlinedAt: !7644)
!7644 = distinct !DILocation(line: 212, column: 21, scope: !7577)
!7645 = !DILocation(line: 1463, column: 43, scope: !7637, inlinedAt: !7644)
!7646 = !DILocation(line: 1463, column: 52, scope: !7637, inlinedAt: !7644)
!7647 = !DILocation(line: 1468, column: 18, scope: !7637, inlinedAt: !7644)
!7648 = !DILocation(line: 212, column: 21, scope: !7577)
!7649 = !DILocation(line: 223, column: 21, scope: !7585)
!7650 = !DILocation(line: 223, column: 31, scope: !7589)
!7651 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !7652)
!7652 = distinct !DILocation(line: 224, column: 42, scope: !7585)
!7653 = !DILocation(line: 224, column: 56, scope: !7585)
!7654 = !DILocation(line: 224, column: 17, scope: !7585)
!7655 = !DILocation(line: 225, column: 17, scope: !7585)
!7656 = !DILocation(line: 226, column: 17, scope: !7585)
!7657 = !DILocation(line: 227, column: 13, scope: !7560)
!7658 = !DILocation(line: 223, column: 31, scope: !7587)
!7659 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h893fc493e6a4e468E", scope: !7660, file: !7474, line: 236, type: !7661, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7663)
!7660 = !DINamespace(name: "{impl#1}", scope: !49)
!7661 = !DISubroutineType(types: !7662)
!7662 = !{!851, !6978, !170}
!7663 = !{!7664, !7665}
!7664 = !DILocalVariable(name: "self", arg: 1, scope: !7659, file: !7474, line: 236, type: !6978)
!7665 = !DILocalVariable(name: "layout", arg: 2, scope: !7659, file: !7474, line: 236, type: !170)
!7666 = !DILocation(line: 236, column: 17, scope: !7659)
!7667 = !DILocation(line: 236, column: 24, scope: !7659)
!7668 = !DILocation(line: 237, column: 9, scope: !7659)
!7669 = !DILocation(line: 238, column: 6, scope: !7659)
!7670 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h6db2ad8a3d16dc6aE", scope: !7660, file: !7474, line: 241, type: !7661, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7671)
!7671 = !{!7672, !7673}
!7672 = !DILocalVariable(name: "self", arg: 1, scope: !7670, file: !7474, line: 241, type: !6978)
!7673 = !DILocalVariable(name: "layout", arg: 2, scope: !7670, file: !7474, line: 241, type: !170)
!7674 = !DILocation(line: 241, column: 24, scope: !7670)
!7675 = !DILocation(line: 241, column: 31, scope: !7670)
!7676 = !DILocation(line: 242, column: 9, scope: !7670)
!7677 = !DILocation(line: 243, column: 6, scope: !7670)
!7678 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0c95d486c0bac77cE", scope: !7660, file: !7474, line: 246, type: !7679, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7681)
!7679 = !DISubroutineType(types: !7680)
!7680 = !{null, !6978, !34, !170}
!7681 = !{!7682, !7683, !7684}
!7682 = !DILocalVariable(name: "self", arg: 1, scope: !7678, file: !7474, line: 246, type: !6978)
!7683 = !DILocalVariable(name: "ptr", arg: 2, scope: !7678, file: !7474, line: 246, type: !34)
!7684 = !DILocalVariable(name: "layout", arg: 3, scope: !7678, file: !7474, line: 246, type: !170)
!7685 = !DILocation(line: 246, column: 26, scope: !7678)
!7686 = !DILocation(line: 246, column: 33, scope: !7678)
!7687 = !DILocation(line: 246, column: 51, scope: !7678)
!7688 = !DILocation(line: 247, column: 12, scope: !7678)
!7689 = !DILocation(line: 252, column: 6, scope: !7678)
!7690 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !7691)
!7691 = distinct !DILocation(line: 250, column: 30, scope: !7678)
!7692 = !DILocation(line: 250, column: 22, scope: !7678)
!7693 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h49653852f7ae1679E", scope: !7660, file: !7474, line: 255, type: !7694, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7696)
!7694 = !DISubroutineType(types: !7695)
!7695 = !{!851, !6978, !34, !170, !170}
!7696 = !{!7697, !7698, !7699, !7700}
!7697 = !DILocalVariable(name: "self", arg: 1, scope: !7693, file: !7474, line: 256, type: !6978)
!7698 = !DILocalVariable(name: "ptr", arg: 2, scope: !7693, file: !7474, line: 257, type: !34)
!7699 = !DILocalVariable(name: "old_layout", arg: 3, scope: !7693, file: !7474, line: 258, type: !170)
!7700 = !DILocalVariable(name: "new_layout", arg: 4, scope: !7693, file: !7474, line: 259, type: !170)
!7701 = !DILocation(line: 256, column: 9, scope: !7693)
!7702 = !DILocation(line: 257, column: 9, scope: !7693)
!7703 = !DILocation(line: 258, column: 9, scope: !7693)
!7704 = !DILocation(line: 259, column: 9, scope: !7693)
!7705 = !DILocation(line: 262, column: 18, scope: !7693)
!7706 = !DILocation(line: 263, column: 6, scope: !7693)
!7707 = distinct !DISubprogram(name: "shrink", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17h19cee89dbf023187E", scope: !7660, file: !7474, line: 277, type: !7694, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7708)
!7708 = !{!7709, !7710, !7711, !7712, !7713, !7715, !7716, !7718, !7720, !7722, !7724, !7726, !7728, !7730}
!7709 = !DILocalVariable(name: "self", arg: 1, scope: !7707, file: !7474, line: 278, type: !6978)
!7710 = !DILocalVariable(name: "ptr", arg: 2, scope: !7707, file: !7474, line: 279, type: !34)
!7711 = !DILocalVariable(name: "old_layout", arg: 3, scope: !7707, file: !7474, line: 280, type: !170)
!7712 = !DILocalVariable(name: "new_layout", arg: 4, scope: !7707, file: !7474, line: 281, type: !170)
!7713 = !DILocalVariable(name: "new_size", scope: !7714, file: !7474, line: 296, type: !9, align: 8)
!7714 = distinct !DILexicalBlock(scope: !7707, file: !7474, line: 296, column: 13)
!7715 = !DILocalVariable(name: "new_size", scope: !7714, file: !7474, line: 296, type: !289, align: 8)
!7716 = !DILocalVariable(name: "raw_ptr", scope: !7717, file: !7474, line: 300, type: !1308, align: 8)
!7717 = distinct !DILexicalBlock(scope: !7714, file: !7474, line: 300, column: 17)
!7718 = !DILocalVariable(name: "ptr", scope: !7719, file: !7474, line: 301, type: !34, align: 8)
!7719 = distinct !DILexicalBlock(scope: !7717, file: !7474, line: 301, column: 17)
!7720 = !DILocalVariable(name: "residual", scope: !7721, file: !7474, line: 301, type: !868, align: 1)
!7721 = distinct !DILexicalBlock(scope: !7717, file: !7474, line: 301, column: 66)
!7722 = !DILocalVariable(name: "val", scope: !7723, file: !7474, line: 301, type: !34, align: 8)
!7723 = distinct !DILexicalBlock(scope: !7717, file: !7474, line: 301, column: 27)
!7724 = !DILocalVariable(name: "new_size", scope: !7725, file: !7474, line: 310, type: !9, align: 8)
!7725 = distinct !DILexicalBlock(scope: !7707, file: !7474, line: 310, column: 13)
!7726 = !DILocalVariable(name: "new_ptr", scope: !7727, file: !7474, line: 311, type: !831, align: 8)
!7727 = distinct !DILexicalBlock(scope: !7725, file: !7474, line: 311, column: 17)
!7728 = !DILocalVariable(name: "residual", scope: !7729, file: !7474, line: 311, type: !868, align: 1)
!7729 = distinct !DILexicalBlock(scope: !7725, file: !7474, line: 311, column: 56)
!7730 = !DILocalVariable(name: "val", scope: !7731, file: !7474, line: 311, type: !831, align: 8)
!7731 = distinct !DILexicalBlock(scope: !7725, file: !7474, line: 311, column: 31)
!7732 = !DILocation(line: 278, column: 9, scope: !7707)
!7733 = !DILocation(line: 279, column: 9, scope: !7707)
!7734 = !DILocation(line: 280, column: 9, scope: !7707)
!7735 = !DILocation(line: 281, column: 9, scope: !7707)
!7736 = !DILocation(line: 301, column: 66, scope: !7721)
!7737 = !DILocation(line: 311, column: 56, scope: !7729)
!7738 = !DILocation(line: 284, column: 13, scope: !7707)
!7739 = !DILocation(line: 284, column: 34, scope: !7707)
!7740 = !DILocation(line: 283, column: 9, scope: !7707)
!7741 = !DILocation(line: 288, column: 15, scope: !7707)
!7742 = !DILocation(line: 288, column: 9, scope: !7707)
!7743 = !DILocation(line: 291, column: 17, scope: !7707)
!7744 = !DILocation(line: 292, column: 50, scope: !7707)
!7745 = !DILocation(line: 292, column: 20, scope: !7707)
!7746 = !DILocation(line: 292, column: 17, scope: !7707)
!7747 = !DILocation(line: 292, column: 75, scope: !7707)
!7748 = !DILocation(line: 296, column: 13, scope: !7707)
!7749 = !DILocation(line: 296, column: 13, scope: !7714)
!7750 = !DILocation(line: 296, column: 25, scope: !7707)
!7751 = !DILocation(line: 296, column: 47, scope: !7707)
!7752 = !DILocation(line: 310, column: 13, scope: !7707)
!7753 = !DILocation(line: 310, column: 13, scope: !7725)
!7754 = !DILocation(line: 311, column: 31, scope: !7725)
!7755 = !DILocation(line: 298, column: 48, scope: !7714)
!7756 = !DILocation(line: 298, column: 36, scope: !7714)
!7757 = !DILocation(line: 298, column: 17, scope: !7714)
!7758 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !7759)
!7759 = distinct !DILocation(line: 300, column: 39, scope: !7714)
!7760 = !DILocation(line: 300, column: 31, scope: !7714)
!7761 = !DILocation(line: 300, column: 21, scope: !7717)
!7762 = !DILocation(line: 301, column: 27, scope: !7717)
!7763 = !DILocation(line: 301, column: 21, scope: !7719)
!7764 = !DILocation(line: 301, column: 27, scope: !7723)
!7765 = !DILocation(line: 302, column: 20, scope: !7719)
!7766 = !DILocation(line: 302, column: 17, scope: !7719)
!7767 = !DILocation(line: 303, column: 13, scope: !7707)
!7768 = !DILocation(line: 301, column: 27, scope: !7721)
!7769 = !DILocation(line: 317, column: 6, scope: !7707)
!7770 = !DILocation(line: 311, column: 21, scope: !7727)
!7771 = !DILocation(line: 311, column: 31, scope: !7731)
!7772 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !7773)
!7773 = distinct !DILocation(line: 312, column: 42, scope: !7727)
!7774 = !DILocation(line: 312, column: 56, scope: !7727)
!7775 = !DILocation(line: 312, column: 17, scope: !7727)
!7776 = !DILocation(line: 313, column: 17, scope: !7727)
!7777 = !DILocation(line: 314, column: 17, scope: !7727)
!7778 = !DILocation(line: 315, column: 13, scope: !7707)
!7779 = !DILocation(line: 311, column: 31, scope: !7729)
!7780 = distinct !DISubprogram(name: "exchange_malloc", linkageName: "_ZN5alloc5alloc15exchange_malloc17h14ff5e8c882553c0E", scope: !49, file: !7474, line: 324, type: !7781, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7783)
!7781 = !DISubroutineType(types: !7782)
!7782 = !{!1308, !9, !9}
!7783 = !{!7784, !7785, !7786, !7788}
!7784 = !DILocalVariable(name: "size", arg: 1, scope: !7780, file: !7474, line: 324, type: !9)
!7785 = !DILocalVariable(name: "align", arg: 2, scope: !7780, file: !7474, line: 324, type: !9)
!7786 = !DILocalVariable(name: "layout", scope: !7787, file: !7474, line: 325, type: !170, align: 8)
!7787 = distinct !DILexicalBlock(scope: !7780, file: !7474, line: 325, column: 5)
!7788 = !DILocalVariable(name: "ptr", scope: !7789, file: !7474, line: 327, type: !831, align: 8)
!7789 = distinct !DILexicalBlock(scope: !7787, file: !7474, line: 327, column: 9)
!7790 = !DILocation(line: 324, column: 27, scope: !7780)
!7791 = !DILocation(line: 324, column: 40, scope: !7780)
!7792 = !DILocation(line: 325, column: 27, scope: !7780)
!7793 = !DILocation(line: 325, column: 9, scope: !7787)
!7794 = !DILocation(line: 326, column: 11, scope: !7787)
!7795 = !DILocation(line: 326, column: 5, scope: !7787)
!7796 = !DILocation(line: 327, column: 12, scope: !7787)
!7797 = !DILocation(line: 327, column: 12, scope: !7789)
!7798 = !DILocation(line: 327, column: 20, scope: !7789)
!7799 = !DILocation(line: 330, column: 2, scope: !7780)
!7800 = !DILocation(line: 328, column: 19, scope: !7787)
!7801 = distinct !DISubprogram(name: "box_free<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17h0357003df53c0fe9E", scope: !49, file: !7474, line: 340, type: !7802, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7804)
!7802 = !DISubroutineType(types: !7803)
!7803 = !{null, !828, !48}
!7804 = !{!7805, !7806, !7807, !7809, !7811}
!7805 = !DILocalVariable(name: "ptr", arg: 1, scope: !7801, file: !7474, line: 341, type: !828)
!7806 = !DILocalVariable(name: "alloc", arg: 2, scope: !7801, file: !7474, line: 342, type: !48)
!7807 = !DILocalVariable(name: "size", scope: !7808, file: !7474, line: 345, type: !9, align: 8)
!7808 = distinct !DILexicalBlock(scope: !7801, file: !7474, line: 345, column: 9)
!7809 = !DILocalVariable(name: "align", scope: !7810, file: !7474, line: 346, type: !9, align: 8)
!7810 = distinct !DILexicalBlock(scope: !7808, file: !7474, line: 346, column: 9)
!7811 = !DILocalVariable(name: "layout", scope: !7812, file: !7474, line: 347, type: !170, align: 8)
!7812 = distinct !DILexicalBlock(scope: !7810, file: !7474, line: 347, column: 9)
!7813 = !DILocation(line: 341, column: 5, scope: !7801)
!7814 = !DILocation(line: 342, column: 5, scope: !7801)
!7815 = !DILocation(line: 345, column: 32, scope: !7801)
!7816 = !DILocation(line: 345, column: 20, scope: !7801)
!7817 = !DILocation(line: 345, column: 13, scope: !7808)
!7818 = !DILocation(line: 346, column: 38, scope: !7808)
!7819 = !DILocation(line: 346, column: 21, scope: !7808)
!7820 = !DILocation(line: 346, column: 13, scope: !7810)
!7821 = !DILocation(line: 347, column: 22, scope: !7810)
!7822 = !DILocation(line: 347, column: 13, scope: !7812)
!7823 = !DILocation(line: 348, column: 37, scope: !7812)
!7824 = !DILocation(line: 348, column: 26, scope: !7812)
!7825 = !DILocation(line: 348, column: 9, scope: !7812)
!7826 = !DILocation(line: 350, column: 2, scope: !7801)
!7827 = distinct !DISubprogram(name: "handle_alloc_error", linkageName: "_ZN5alloc5alloc18handle_alloc_error17h3c6d18769aaa0402E", scope: !49, file: !7474, line: 378, type: !7828, scopeLine: 378, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7830)
!7828 = !DISubroutineType(types: !7829)
!7829 = !{null, !170}
!7830 = !{!7831}
!7831 = !DILocalVariable(name: "layout", arg: 1, scope: !7827, file: !7474, line: 378, type: !170)
!7832 = !DILocation(line: 378, column: 33, scope: !7827)
!7833 = !DILocation(line: 389, column: 50, scope: !7827)
!7834 = !DILocation(line: 389, column: 14, scope: !7827)
!7835 = distinct !DISubprogram(name: "ct_error", linkageName: "_ZN5alloc5alloc18handle_alloc_error8ct_error17h7aa52e49dea33779E", scope: !7836, file: !7474, line: 379, type: !7828, scopeLine: 379, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7837)
!7836 = !DINamespace(name: "handle_alloc_error", scope: !49)
!7837 = !{!7838}
!7838 = !DILocalVariable(arg: 1, scope: !7835, file: !7474, line: 379, type: !170)
!7839 = !DILocation(line: 379, column: 23, scope: !7835)
!7840 = !DILocation(line: 380, column: 9, scope: !7835)
!7841 = distinct !DISubprogram(name: "rt_error", linkageName: "_ZN5alloc5alloc18handle_alloc_error8rt_error17ha40d3dfb08fb30d9E", scope: !7836, file: !7474, line: 383, type: !7828, scopeLine: 383, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7842)
!7842 = !{!7843}
!7843 = !DILocalVariable(name: "layout", arg: 1, scope: !7841, file: !7474, line: 383, type: !170)
!7844 = !DILocation(line: 383, column: 17, scope: !7841)
!7845 = !DILocation(line: 385, column: 40, scope: !7841)
!7846 = !DILocation(line: 385, column: 55, scope: !7841)
!7847 = !DILocation(line: 385, column: 13, scope: !7841)
!7848 = distinct !DISubprogram(name: "__rdl_oom", scope: !7849, file: !7474, line: 404, type: !7850, scopeLine: 404, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !7852)
!7849 = !DINamespace(name: "__alloc_error_handler", scope: !49)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{null, !9, !9}
!7852 = !{!7853, !7854}
!7853 = !DILocalVariable(name: "size", arg: 1, scope: !7848, file: !7474, line: 404, type: !9)
!7854 = !DILocalVariable(name: "_align", arg: 2, scope: !7848, file: !7474, line: 404, type: !9)
!7855 = !DILocation(line: 404, column: 29, scope: !7848)
!7856 = !DILocation(line: 404, column: 42, scope: !7848)
!7857 = !DILocation(line: 412, column: 21, scope: !7848)
!7858 = !DILocation(line: 412, column: 12, scope: !7848)
!7859 = !DILocation(line: 415, column: 49, scope: !7848)
!7860 = !DILocation(line: 415, column: 13, scope: !7848)
!7861 = !DILocation(line: 413, column: 13, scope: !7848)
!7862 = distinct !DISubprogram(name: "assume_init<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17h2627310e69e6a6beE", scope: !7864, file: !7863, line: 904, type: !7865, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7867)
!7863 = !DIFile(filename: "src/boxed.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "c2b3b71a0938215ee87c57354caf9e56")
!7864 = !DINamespace(name: "{impl#5}", scope: !113)
!7865 = !DISubroutineType(types: !7866)
!7866 = !{!322, !6848}
!7867 = !{!7868, !7869, !7871}
!7868 = !DILocalVariable(name: "self", arg: 1, scope: !7862, file: !7863, line: 904, type: !6848)
!7869 = !DILocalVariable(name: "raw", scope: !7870, file: !7863, line: 905, type: !2659, align: 8)
!7870 = distinct !DILexicalBlock(scope: !7862, file: !7863, line: 905, column: 9)
!7871 = !DILocalVariable(name: "alloc", scope: !7870, file: !7863, line: 905, type: !48, align: 1)
!7872 = !DILocation(line: 904, column: 31, scope: !7862)
!7873 = !DILocation(line: 905, column: 19, scope: !7870)
!7874 = !DILocation(line: 905, column: 28, scope: !7862)
!7875 = !DILocation(line: 905, column: 14, scope: !7862)
!7876 = !DILocation(line: 905, column: 14, scope: !7870)
!7877 = !DILocation(line: 906, column: 18, scope: !7870)
!7878 = !DILocation(line: 907, column: 6, scope: !7862)
!7879 = distinct !DISubprogram(name: "from_raw<[u8]>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h72705765b0082205E", scope: !7880, file: !7863, line: 955, type: !7881, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !7883)
!7880 = !DINamespace(name: "{impl#6}", scope: !113)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{!322, !2681}
!7883 = !{!7884}
!7884 = !DILocalVariable(name: "raw", arg: 1, scope: !7879, file: !7863, line: 955, type: !2681)
!7885 = !DILocation(line: 955, column: 28, scope: !7879)
!7886 = !DILocation(line: 956, column: 18, scope: !7879)
!7887 = !DILocation(line: 957, column: 6, scope: !7879)
!7888 = distinct !DISubprogram(name: "from_raw<str>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h74c1addf447a4215E", scope: !7880, file: !7863, line: 955, type: !7889, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !7895)
!7889 = !DISubroutineType(types: !7890)
!7890 = !{!7891, !2694}
!7891 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<str, alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !7892, templateParams: !45, identifier: "40f3e8cefe23ceb36ac1bf095a6a536b")
!7892 = !{!7893, !7894}
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7891, file: !2, baseType: !148, size: 64, align: 64)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7891, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!7895 = !{!7896}
!7896 = !DILocalVariable(name: "raw", arg: 1, scope: !7888, file: !7863, line: 955, type: !2694)
!7897 = !DILocation(line: 955, column: 28, scope: !7888)
!7898 = !DILocation(line: 956, column: 18, scope: !7888)
!7899 = !DILocation(line: 957, column: 6, scope: !7888)
!7900 = distinct !DISubprogram(name: "from_raw<core::ffi::c_str::CStr>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hbf4facd7117989c6E", scope: !7880, file: !7863, line: 955, type: !7901, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !816, retainedNodes: !7907)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{!7903, !2646}
!7903 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !7904, templateParams: !45, identifier: "a022b6af0c1eaf00124383a3aaafb11b")
!7904 = !{!7905, !7906}
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7903, file: !2, baseType: !809, size: 64, align: 64)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7903, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!7907 = !{!7908}
!7908 = !DILocalVariable(name: "raw", arg: 1, scope: !7900, file: !7863, line: 955, type: !2646)
!7909 = !DILocation(line: 955, column: 28, scope: !7900)
!7910 = !DILocation(line: 956, column: 18, scope: !7900)
!7911 = !DILocation(line: 957, column: 6, scope: !7900)
!7912 = distinct !DISubprogram(name: "from_raw_in<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h3d9b7433846aff57E", scope: !7913, file: !7863, line: 1011, type: !7914, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7916)
!7913 = !DINamespace(name: "{impl#7}", scope: !113)
!7914 = !DISubroutineType(types: !7915)
!7915 = !{!322, !2681, !48}
!7916 = !{!7917, !7918}
!7917 = !DILocalVariable(name: "raw", arg: 1, scope: !7912, file: !7863, line: 1011, type: !2681)
!7918 = !DILocalVariable(name: "alloc", arg: 2, scope: !7912, file: !7863, line: 1011, type: !48)
!7919 = !DILocation(line: 1011, column: 37, scope: !7912)
!7920 = !DILocation(line: 1011, column: 50, scope: !7912)
!7921 = !DILocation(line: 1012, column: 22, scope: !7912)
!7922 = !DILocation(line: 1012, column: 9, scope: !7912)
!7923 = !DILocation(line: 1013, column: 6, scope: !7912)
!7924 = distinct !DISubprogram(name: "from_raw_in<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17ha6515cd7e425a1d2E", scope: !7913, file: !7863, line: 1011, type: !7925, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7930, retainedNodes: !7927)
!7925 = !DISubroutineType(types: !7926)
!7926 = !{!6848, !2659, !48}
!7927 = !{!7928, !7929}
!7928 = !DILocalVariable(name: "raw", arg: 1, scope: !7924, file: !7863, line: 1011, type: !2659)
!7929 = !DILocalVariable(name: "alloc", arg: 2, scope: !7924, file: !7863, line: 1011, type: !48)
!7930 = !{!761, !51}
!7931 = !DILocation(line: 1011, column: 37, scope: !7924)
!7932 = !DILocation(line: 1011, column: 50, scope: !7924)
!7933 = !DILocation(line: 1012, column: 22, scope: !7924)
!7934 = !DILocation(line: 1012, column: 9, scope: !7924)
!7935 = !DILocation(line: 1013, column: 6, scope: !7924)
!7936 = distinct !DISubprogram(name: "from_raw_in<core::ffi::c_str::CStr, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hd33534e910dbd945E", scope: !7913, file: !7863, line: 1011, type: !7937, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7942, retainedNodes: !7939)
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!7903, !2646, !48}
!7939 = !{!7940, !7941}
!7940 = !DILocalVariable(name: "raw", arg: 1, scope: !7936, file: !7863, line: 1011, type: !2646)
!7941 = !DILocalVariable(name: "alloc", arg: 2, scope: !7936, file: !7863, line: 1011, type: !48)
!7942 = !{!817, !51}
!7943 = !DILocation(line: 1011, column: 37, scope: !7936)
!7944 = !DILocation(line: 1011, column: 50, scope: !7936)
!7945 = !DILocation(line: 1012, column: 22, scope: !7936)
!7946 = !DILocation(line: 1012, column: 9, scope: !7936)
!7947 = !DILocation(line: 1013, column: 6, scope: !7936)
!7948 = distinct !DISubprogram(name: "from_raw_in<str, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hdeed2e33af0bc7d7E", scope: !7913, file: !7863, line: 1011, type: !7949, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7951)
!7949 = !DISubroutineType(types: !7950)
!7950 = !{!7891, !2694, !48}
!7951 = !{!7952, !7953}
!7952 = !DILocalVariable(name: "raw", arg: 1, scope: !7948, file: !7863, line: 1011, type: !2694)
!7953 = !DILocalVariable(name: "alloc", arg: 2, scope: !7948, file: !7863, line: 1011, type: !48)
!7954 = !DILocation(line: 1011, column: 37, scope: !7948)
!7955 = !DILocation(line: 1011, column: 50, scope: !7948)
!7956 = !DILocation(line: 1012, column: 22, scope: !7948)
!7957 = !DILocation(line: 1012, column: 9, scope: !7948)
!7958 = !DILocation(line: 1013, column: 6, scope: !7948)
!7959 = distinct !DISubprogram(name: "into_raw<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h330b78636c2bf5fbE", scope: !7913, file: !7863, line: 1056, type: !7960, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7962)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{!2681, !322}
!7962 = !{!7963}
!7963 = !DILocalVariable(name: "b", arg: 1, scope: !7959, file: !7863, line: 1056, type: !322)
!7964 = !DILocation(line: 1056, column: 21, scope: !7959)
!7965 = !DILocation(line: 1057, column: 9, scope: !7959)
!7966 = !DILocation(line: 1058, column: 6, scope: !7959)
!7967 = distinct !DISubprogram(name: "into_raw<core::ffi::c_str::CStr, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h85192d6a2499a0d4E", scope: !7913, file: !7863, line: 1056, type: !7968, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7942, retainedNodes: !7970)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!2646, !7903}
!7970 = !{!7971}
!7971 = !DILocalVariable(name: "b", arg: 1, scope: !7967, file: !7863, line: 1056, type: !7903)
!7972 = !DILocation(line: 1056, column: 21, scope: !7967)
!7973 = !DILocation(line: 1057, column: 9, scope: !7967)
!7974 = !DILocation(line: 1058, column: 6, scope: !7967)
!7975 = distinct !DISubprogram(name: "into_raw_with_allocator<str, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h45df7eb930a0de8dE", scope: !7913, file: !7863, line: 1109, type: !7976, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !7982)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{!7978, !7891}
!7978 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut str, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !7979, templateParams: !45, identifier: "c94629fe9acb7241796390c720bfddb8")
!7979 = !{!7980, !7981}
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7978, file: !2, baseType: !2694, size: 128, align: 64)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7978, file: !2, baseType: !48, align: 8, offset: 128)
!7982 = !{!7983, !7984, !7986}
!7983 = !DILocalVariable(name: "b", arg: 1, scope: !7975, file: !7863, line: 1109, type: !7891)
!7984 = !DILocalVariable(name: "leaked", scope: !7985, file: !7863, line: 1110, type: !780, align: 8)
!7985 = distinct !DILexicalBlock(scope: !7975, file: !7863, line: 1110, column: 9)
!7986 = !DILocalVariable(name: "alloc", scope: !7985, file: !7863, line: 1110, type: !48, align: 1)
!7987 = !DILocation(line: 1109, column: 42, scope: !7975)
!7988 = !DILocation(line: 1110, column: 22, scope: !7985)
!7989 = !DILocation(line: 1110, column: 31, scope: !7975)
!7990 = !DILocation(line: 1110, column: 14, scope: !7975)
!7991 = !DILocation(line: 1110, column: 14, scope: !7985)
!7992 = !DILocation(line: 1111, column: 10, scope: !7985)
!7993 = !DILocation(line: 1111, column: 9, scope: !7985)
!7994 = !DILocation(line: 1112, column: 6, scope: !7975)
!7995 = distinct !DISubprogram(name: "into_raw_with_allocator<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h77529361676bfd03E", scope: !7913, file: !7863, line: 1109, type: !7996, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7930, retainedNodes: !8002)
!7996 = !DISubroutineType(types: !7997)
!7997 = !{!7998, !6848}
!7998 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut [core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !7999, templateParams: !45, identifier: "6b1ebb5dc66f605da9c11d3f114a6709")
!7999 = !{!8000, !8001}
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7998, file: !2, baseType: !2659, size: 128, align: 64)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7998, file: !2, baseType: !48, align: 8, offset: 128)
!8002 = !{!8003, !8004, !8006}
!8003 = !DILocalVariable(name: "b", arg: 1, scope: !7995, file: !7863, line: 1109, type: !6848)
!8004 = !DILocalVariable(name: "leaked", scope: !8005, file: !7863, line: 1110, type: !739, align: 8)
!8005 = distinct !DILexicalBlock(scope: !7995, file: !7863, line: 1110, column: 9)
!8006 = !DILocalVariable(name: "alloc", scope: !8005, file: !7863, line: 1110, type: !48, align: 1)
!8007 = !DILocation(line: 1109, column: 42, scope: !7995)
!8008 = !DILocation(line: 1110, column: 22, scope: !8005)
!8009 = !DILocation(line: 1110, column: 31, scope: !7995)
!8010 = !DILocation(line: 1110, column: 14, scope: !7995)
!8011 = !DILocation(line: 1110, column: 14, scope: !8005)
!8012 = !DILocation(line: 1111, column: 10, scope: !8005)
!8013 = !DILocation(line: 1111, column: 9, scope: !8005)
!8014 = !DILocation(line: 1112, column: 6, scope: !7995)
!8015 = distinct !DISubprogram(name: "into_raw_with_allocator<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hae1fd25b2641d527E", scope: !7913, file: !7863, line: 1109, type: !8016, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !8022)
!8016 = !DISubroutineType(types: !8017)
!8017 = !{!8018, !322}
!8018 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut [u8], alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !8019, templateParams: !45, identifier: "fd0e5467e404fb0d1a01c0c86f1d0097")
!8019 = !{!8020, !8021}
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8018, file: !2, baseType: !2681, size: 128, align: 64)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8018, file: !2, baseType: !48, align: 8, offset: 128)
!8022 = !{!8023, !8024, !8026}
!8023 = !DILocalVariable(name: "b", arg: 1, scope: !8015, file: !7863, line: 1109, type: !322)
!8024 = !DILocalVariable(name: "leaked", scope: !8025, file: !7863, line: 1110, type: !828, align: 8)
!8025 = distinct !DILexicalBlock(scope: !8015, file: !7863, line: 1110, column: 9)
!8026 = !DILocalVariable(name: "alloc", scope: !8025, file: !7863, line: 1110, type: !48, align: 1)
!8027 = !DILocation(line: 1109, column: 42, scope: !8015)
!8028 = !DILocation(line: 1110, column: 22, scope: !8025)
!8029 = !DILocation(line: 1110, column: 31, scope: !8015)
!8030 = !DILocation(line: 1110, column: 14, scope: !8015)
!8031 = !DILocation(line: 1110, column: 14, scope: !8025)
!8032 = !DILocation(line: 1111, column: 10, scope: !8025)
!8033 = !DILocation(line: 1111, column: 9, scope: !8025)
!8034 = !DILocation(line: 1112, column: 6, scope: !8015)
!8035 = distinct !DISubprogram(name: "into_raw_with_allocator<core::ffi::c_str::CStr, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hb8722fbf626eded6E", scope: !7913, file: !7863, line: 1109, type: !8036, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7942, retainedNodes: !8042)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{!8038, !7903}
!8038 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut core::ffi::c_str::CStr, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !8039, templateParams: !45, identifier: "fb6f6039dee4b827892f929f0671f67f")
!8039 = !{!8040, !8041}
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8038, file: !2, baseType: !2646, size: 128, align: 64)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8038, file: !2, baseType: !48, align: 8, offset: 128)
!8042 = !{!8043, !8044, !8046}
!8043 = !DILocalVariable(name: "b", arg: 1, scope: !8035, file: !7863, line: 1109, type: !7903)
!8044 = !DILocalVariable(name: "leaked", scope: !8045, file: !7863, line: 1110, type: !800, align: 8)
!8045 = distinct !DILexicalBlock(scope: !8035, file: !7863, line: 1110, column: 9)
!8046 = !DILocalVariable(name: "alloc", scope: !8045, file: !7863, line: 1110, type: !48, align: 1)
!8047 = !DILocation(line: 1109, column: 42, scope: !8035)
!8048 = !DILocation(line: 1110, column: 22, scope: !8045)
!8049 = !DILocation(line: 1110, column: 31, scope: !8035)
!8050 = !DILocation(line: 1110, column: 14, scope: !8035)
!8051 = !DILocation(line: 1110, column: 14, scope: !8045)
!8052 = !DILocation(line: 1111, column: 10, scope: !8045)
!8053 = !DILocation(line: 1111, column: 9, scope: !8045)
!8054 = !DILocation(line: 1112, column: 6, scope: !8035)
!8055 = distinct !DISubprogram(name: "into_unique<str, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h23c1039d5bb4d33eE", scope: !7913, file: !7863, line: 1122, type: !8056, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !8062)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{!8058, !7891}
!8058 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::unique::Unique<str>, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !8059, templateParams: !45, identifier: "df4239e300e64866cb035f0bb9391f9e")
!8059 = !{!8060, !8061}
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8058, file: !2, baseType: !780, size: 128, align: 64)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8058, file: !2, baseType: !48, align: 8, offset: 128)
!8062 = !{!8063, !8064}
!8063 = !DILocalVariable(name: "b", arg: 1, scope: !8055, file: !7863, line: 1122, type: !7891)
!8064 = !DILocalVariable(name: "alloc", scope: !8065, file: !7863, line: 1128, type: !48, align: 1)
!8065 = distinct !DILexicalBlock(scope: !8055, file: !7863, line: 1128, column: 9)
!8066 = !DILocation(line: 1122, column: 30, scope: !8055)
!8067 = !DILocation(line: 1128, column: 13, scope: !8065)
!8068 = !DILocation(line: 1128, column: 30, scope: !8055)
!8069 = !DILocation(line: 1129, column: 33, scope: !8065)
!8070 = !DILocation(line: 1129, column: 23, scope: !8065)
!8071 = !DILocation(line: 1129, column: 10, scope: !8065)
!8072 = !DILocation(line: 1129, column: 9, scope: !8065)
!8073 = !DILocation(line: 1130, column: 6, scope: !8055)
!8074 = distinct !DISubprogram(name: "into_unique<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hc72353817cce6111E", scope: !7913, file: !7863, line: 1122, type: !8075, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !8081)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{!8077, !322}
!8077 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::unique::Unique<[u8]>, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !8078, templateParams: !45, identifier: "639c7a9eecf15551fdbaf968900ae51e")
!8078 = !{!8079, !8080}
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8077, file: !2, baseType: !828, size: 128, align: 64)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8077, file: !2, baseType: !48, align: 8, offset: 128)
!8081 = !{!8082, !8083}
!8082 = !DILocalVariable(name: "b", arg: 1, scope: !8074, file: !7863, line: 1122, type: !322)
!8083 = !DILocalVariable(name: "alloc", scope: !8084, file: !7863, line: 1128, type: !48, align: 1)
!8084 = distinct !DILexicalBlock(scope: !8074, file: !7863, line: 1128, column: 9)
!8085 = !DILocation(line: 1122, column: 30, scope: !8074)
!8086 = !DILocation(line: 1128, column: 13, scope: !8084)
!8087 = !DILocation(line: 1128, column: 30, scope: !8074)
!8088 = !DILocation(line: 1129, column: 33, scope: !8084)
!8089 = !DILocation(line: 1129, column: 23, scope: !8084)
!8090 = !DILocation(line: 1129, column: 10, scope: !8084)
!8091 = !DILocation(line: 1129, column: 9, scope: !8084)
!8092 = !DILocation(line: 1130, column: 6, scope: !8074)
!8093 = distinct !DISubprogram(name: "into_unique<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hd022ea0a0f9bbac0E", scope: !7913, file: !7863, line: 1122, type: !8094, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7930, retainedNodes: !8100)
!8094 = !DISubroutineType(types: !8095)
!8095 = !{!8096, !6848}
!8096 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::unique::Unique<[core::mem::maybe_uninit::MaybeUninit<u8>]>, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !8097, templateParams: !45, identifier: "47938161b61f05eaa9a9f6e06d7918e2")
!8097 = !{!8098, !8099}
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8096, file: !2, baseType: !739, size: 128, align: 64)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8096, file: !2, baseType: !48, align: 8, offset: 128)
!8100 = !{!8101, !8102}
!8101 = !DILocalVariable(name: "b", arg: 1, scope: !8093, file: !7863, line: 1122, type: !6848)
!8102 = !DILocalVariable(name: "alloc", scope: !8103, file: !7863, line: 1128, type: !48, align: 1)
!8103 = distinct !DILexicalBlock(scope: !8093, file: !7863, line: 1128, column: 9)
!8104 = !DILocation(line: 1122, column: 30, scope: !8093)
!8105 = !DILocation(line: 1128, column: 13, scope: !8103)
!8106 = !DILocation(line: 1128, column: 30, scope: !8093)
!8107 = !DILocation(line: 1129, column: 33, scope: !8103)
!8108 = !DILocation(line: 1129, column: 23, scope: !8103)
!8109 = !DILocation(line: 1129, column: 10, scope: !8103)
!8110 = !DILocation(line: 1129, column: 9, scope: !8103)
!8111 = !DILocation(line: 1130, column: 6, scope: !8093)
!8112 = distinct !DISubprogram(name: "into_unique<core::ffi::c_str::CStr, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17he9cd28273d931223E", scope: !7913, file: !7863, line: 1122, type: !8113, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7942, retainedNodes: !8119)
!8113 = !DISubroutineType(types: !8114)
!8114 = !{!8115, !7903}
!8115 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::unique::Unique<core::ffi::c_str::CStr>, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !8116, templateParams: !45, identifier: "22ce64697b17c1ae3a46c6e00f475a4e")
!8116 = !{!8117, !8118}
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8115, file: !2, baseType: !800, size: 128, align: 64)
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8115, file: !2, baseType: !48, align: 8, offset: 128)
!8119 = !{!8120, !8121}
!8120 = !DILocalVariable(name: "b", arg: 1, scope: !8112, file: !7863, line: 1122, type: !7903)
!8121 = !DILocalVariable(name: "alloc", scope: !8122, file: !7863, line: 1128, type: !48, align: 1)
!8122 = distinct !DILexicalBlock(scope: !8112, file: !7863, line: 1128, column: 9)
!8123 = !DILocation(line: 1122, column: 30, scope: !8112)
!8124 = !DILocation(line: 1128, column: 13, scope: !8122)
!8125 = !DILocation(line: 1128, column: 30, scope: !8112)
!8126 = !DILocation(line: 1129, column: 33, scope: !8122)
!8127 = !DILocation(line: 1129, column: 23, scope: !8122)
!8128 = !DILocation(line: 1129, column: 10, scope: !8122)
!8129 = !DILocation(line: 1129, column: 9, scope: !8122)
!8130 = !DILocation(line: 1130, column: 6, scope: !8112)
!8131 = distinct !DISubprogram(name: "leak<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h5f7bd4cc70ce9c6eE", scope: !7913, file: !7863, line: 1182, type: !8132, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !8134)
!8132 = !DISubroutineType(types: !8133)
!8133 = !{!3899, !322}
!8134 = !{!8135}
!8135 = !DILocalVariable(name: "b", arg: 1, scope: !8131, file: !7863, line: 1182, type: !322)
!8136 = !DILocation(line: 1182, column: 27, scope: !8131)
!8137 = !DILocalVariable(name: "value", arg: 1, scope: !8138, file: !1974, line: 70, type: !322)
!8138 = distinct !DISubprogram(name: "new<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17ha92d2e5fda102af7E", scope: !2107, file: !1974, line: 70, type: !8139, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !8141)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!2107, !322}
!8141 = !{!8137}
!8142 = !DILocation(line: 70, column: 22, scope: !8138, inlinedAt: !8143)
!8143 = distinct !DILocation(line: 1186, column: 24, scope: !8131)
!8144 = !DILocation(line: 71, column: 9, scope: !8138, inlinedAt: !8143)
!8145 = !DILocation(line: 72, column: 6, scope: !8138, inlinedAt: !8143)
!8146 = !DILocation(line: 1186, column: 24, scope: !8131)
!8147 = !DILocalVariable(name: "self", arg: 1, scope: !8148, file: !1974, line: 153, type: !8152)
!8148 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5a426f2baf144b0eE", scope: !6887, file: !1974, line: 153, type: !8149, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1237, retainedNodes: !8153)
!8149 = !DISubroutineType(types: !8150)
!8150 = !{!8151, !8152}
!8151 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !322, size: 64, align: 64, dwarfAddressSpace: 0)
!8152 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[u8], alloc::alloc::Global>>", baseType: !2107, size: 64, align: 64, dwarfAddressSpace: 0)
!8153 = !{!8147}
!8154 = !DILocation(line: 153, column: 14, scope: !8148, inlinedAt: !8155)
!8155 = distinct !DILocation(line: 1186, column: 24, scope: !8131)
!8156 = !DILocation(line: 1187, column: 6, scope: !8131)
!8157 = distinct !DISubprogram(name: "leak<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17ha5ffc87c436a263fE", scope: !7913, file: !7863, line: 1182, type: !8158, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7930, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{!4900, !6848}
!8160 = !{!8161}
!8161 = !DILocalVariable(name: "b", arg: 1, scope: !8157, file: !7863, line: 1182, type: !6848)
!8162 = !DILocation(line: 1182, column: 27, scope: !8157)
!8163 = !DILocalVariable(name: "value", arg: 1, scope: !8164, file: !1974, line: 70, type: !6848)
!8164 = distinct !DISubprogram(name: "new<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h1e296c548daf945eE", scope: !8165, file: !1974, line: 70, type: !8170, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !8168, retainedNodes: !8172)
!8165 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", scope: !756, file: !2, size: 128, align: 64, elements: !8166, templateParams: !8168, identifier: "e1047dc18bb4b3625439d22e4c80c94e")
!8166 = !{!8167}
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8165, file: !2, baseType: !6848, size: 128, align: 64)
!8168 = !{!8169}
!8169 = !DITemplateTypeParameter(name: "T", type: !6848)
!8170 = !DISubroutineType(types: !8171)
!8171 = !{!8165, !6848}
!8172 = !{!8163}
!8173 = !DILocation(line: 70, column: 22, scope: !8164, inlinedAt: !8174)
!8174 = distinct !DILocation(line: 1186, column: 24, scope: !8157)
!8175 = !DILocation(line: 71, column: 9, scope: !8164, inlinedAt: !8174)
!8176 = !DILocation(line: 72, column: 6, scope: !8164, inlinedAt: !8174)
!8177 = !DILocation(line: 1186, column: 24, scope: !8157)
!8178 = !DILocalVariable(name: "self", arg: 1, scope: !8179, file: !1974, line: 153, type: !8183)
!8179 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17heee699e89adb0840E", scope: !6887, file: !1974, line: 153, type: !8180, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !8168, retainedNodes: !8184)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{!8182, !8183}
!8182 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", baseType: !6848, size: 64, align: 64, dwarfAddressSpace: 0)
!8183 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", baseType: !8165, size: 64, align: 64, dwarfAddressSpace: 0)
!8184 = !{!8178}
!8185 = !DILocation(line: 153, column: 14, scope: !8179, inlinedAt: !8186)
!8186 = distinct !DILocation(line: 1186, column: 24, scope: !8157)
!8187 = !DILocation(line: 1187, column: 6, scope: !8157)
!8188 = distinct !DISubprogram(name: "leak<str, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hae50aca8c28c290eE", scope: !7913, file: !7863, line: 1182, type: !8189, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !8191)
!8189 = !DISubroutineType(types: !8190)
!8190 = !{!3895, !7891}
!8191 = !{!8192}
!8192 = !DILocalVariable(name: "b", arg: 1, scope: !8188, file: !7863, line: 1182, type: !7891)
!8193 = !DILocation(line: 1182, column: 27, scope: !8188)
!8194 = !DILocalVariable(name: "value", arg: 1, scope: !8195, file: !1974, line: 70, type: !7891)
!8195 = distinct !DISubprogram(name: "new<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h712f4d48606f1e22E", scope: !8196, file: !1974, line: 70, type: !8201, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !8199, retainedNodes: !8203)
!8196 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<str, alloc::alloc::Global>>", scope: !756, file: !2, size: 128, align: 64, elements: !8197, templateParams: !8199, identifier: "5a77c35fe234059817647e1ad003b01e")
!8197 = !{!8198}
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8196, file: !2, baseType: !7891, size: 128, align: 64)
!8199 = !{!8200}
!8200 = !DITemplateTypeParameter(name: "T", type: !7891)
!8201 = !DISubroutineType(types: !8202)
!8202 = !{!8196, !7891}
!8203 = !{!8194}
!8204 = !DILocation(line: 70, column: 22, scope: !8195, inlinedAt: !8205)
!8205 = distinct !DILocation(line: 1186, column: 24, scope: !8188)
!8206 = !DILocation(line: 71, column: 9, scope: !8195, inlinedAt: !8205)
!8207 = !DILocation(line: 72, column: 6, scope: !8195, inlinedAt: !8205)
!8208 = !DILocation(line: 1186, column: 24, scope: !8188)
!8209 = !DILocalVariable(name: "self", arg: 1, scope: !8210, file: !1974, line: 153, type: !8214)
!8210 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h731da28df92609ddE", scope: !6887, file: !1974, line: 153, type: !8211, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !8199, retainedNodes: !8215)
!8211 = !DISubroutineType(types: !8212)
!8212 = !{!8213, !8214}
!8213 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<str, alloc::alloc::Global>", baseType: !7891, size: 64, align: 64, dwarfAddressSpace: 0)
!8214 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<str, alloc::alloc::Global>>", baseType: !8196, size: 64, align: 64, dwarfAddressSpace: 0)
!8215 = !{!8209}
!8216 = !DILocation(line: 153, column: 14, scope: !8210, inlinedAt: !8217)
!8217 = distinct !DILocation(line: 1186, column: 24, scope: !8188)
!8218 = !DILocation(line: 1187, column: 6, scope: !8188)
!8219 = distinct !DISubprogram(name: "leak<core::ffi::c_str::CStr, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb65efef6d9b82370E", scope: !7913, file: !7863, line: 1182, type: !8220, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7942, retainedNodes: !8222)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!6640, !7903}
!8222 = !{!8223}
!8223 = !DILocalVariable(name: "b", arg: 1, scope: !8219, file: !7863, line: 1182, type: !7903)
!8224 = !DILocation(line: 1182, column: 27, scope: !8219)
!8225 = !DILocalVariable(name: "value", arg: 1, scope: !8226, file: !1974, line: 70, type: !7903)
!8226 = distinct !DISubprogram(name: "new<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h1920303d1af4eadeE", scope: !8227, file: !1974, line: 70, type: !8232, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !8230, retainedNodes: !8234)
!8227 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", scope: !756, file: !2, size: 128, align: 64, elements: !8228, templateParams: !8230, identifier: "d0253caf20e8c6061e5d6ac7a74a7ef0")
!8228 = !{!8229}
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8227, file: !2, baseType: !7903, size: 128, align: 64)
!8230 = !{!8231}
!8231 = !DITemplateTypeParameter(name: "T", type: !7903)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!8227, !7903}
!8234 = !{!8225}
!8235 = !DILocation(line: 70, column: 22, scope: !8226, inlinedAt: !8236)
!8236 = distinct !DILocation(line: 1186, column: 24, scope: !8219)
!8237 = !DILocation(line: 71, column: 9, scope: !8226, inlinedAt: !8236)
!8238 = !DILocation(line: 72, column: 6, scope: !8226, inlinedAt: !8236)
!8239 = !DILocation(line: 1186, column: 24, scope: !8219)
!8240 = !DILocalVariable(name: "self", arg: 1, scope: !8241, file: !1974, line: 153, type: !8245)
!8241 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h651ddf2824962c0dE", scope: !6887, file: !1974, line: 153, type: !8242, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !8230, retainedNodes: !8246)
!8242 = !DISubroutineType(types: !8243)
!8243 = !{!8244, !8245}
!8244 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>", baseType: !7903, size: 64, align: 64, dwarfAddressSpace: 0)
!8245 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", baseType: !8227, size: 64, align: 64, dwarfAddressSpace: 0)
!8246 = !{!8240}
!8247 = !DILocation(line: 153, column: 14, scope: !8241, inlinedAt: !8248)
!8248 = distinct !DILocation(line: 1186, column: 24, scope: !8219)
!8249 = !DILocation(line: 1187, column: 6, scope: !8219)
!8250 = distinct !DISubprogram(name: "default<u8>", linkageName: "_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17haf43f83bad54c92aE", scope: !8251, file: !7863, line: 1254, type: !8252, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !8254)
!8251 = !DINamespace(name: "{impl#10}", scope: !113)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{!322}
!8254 = !{!8255}
!8255 = !DILocalVariable(name: "ptr", scope: !8256, file: !7863, line: 1255, type: !828, align: 8)
!8256 = distinct !DILexicalBlock(scope: !8250, file: !7863, line: 1255, column: 9)
!8257 = !DILocation(line: 1255, column: 32, scope: !8250)
!8258 = !DILocation(line: 1255, column: 13, scope: !8256)
!8259 = !DILocation(line: 1256, column: 9, scope: !8256)
!8260 = !DILocation(line: 1257, column: 6, scope: !8250)
!8261 = distinct !DISubprogram(name: "clone", linkageName: "_ZN67_$LT$alloc..boxed..Box$LT$str$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h1660e7eef4688308E", scope: !8262, file: !7863, line: 1328, type: !8263, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8265)
!8262 = !DINamespace(name: "{impl#13}", scope: !113)
!8263 = !DISubroutineType(types: !8264)
!8264 = !{!7891, !8213}
!8265 = !{!8266, !8267}
!8266 = !DILocalVariable(name: "self", arg: 1, scope: !8261, file: !7863, line: 1328, type: !8213)
!8267 = !DILocalVariable(name: "buf", scope: !8268, file: !7863, line: 1330, type: !322, align: 8)
!8268 = distinct !DILexicalBlock(scope: !8261, file: !7863, line: 1330, column: 9)
!8269 = !DILocation(line: 1328, column: 14, scope: !8261)
!8270 = !DILocation(line: 1330, column: 30, scope: !8261)
!8271 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !8272)
!8272 = distinct !DILocation(line: 1330, column: 30, scope: !8261)
!8273 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !8272)
!8274 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !8272)
!8275 = !DILocation(line: 1330, column: 13, scope: !8268)
!8276 = !DILocation(line: 1331, column: 18, scope: !8268)
!8277 = !DILocation(line: 1332, column: 6, scope: !8261)
!8278 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN99_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17hd50dd409d0b139b9E", scope: !8279, file: !7863, line: 1497, type: !5748, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !8280)
!8279 = !DINamespace(name: "{impl#22}", scope: !113)
!8280 = !{!8281, !8282, !8284}
!8281 = !DILocalVariable(name: "slice", arg: 1, scope: !8278, file: !7863, line: 1497, type: !1433)
!8282 = !DILocalVariable(name: "len", scope: !8283, file: !7863, line: 1498, type: !9, align: 8)
!8283 = distinct !DILexicalBlock(scope: !8278, file: !7863, line: 1498, column: 9)
!8284 = !DILocalVariable(name: "buf", scope: !8285, file: !7863, line: 1499, type: !24, align: 8)
!8285 = distinct !DILexicalBlock(scope: !8283, file: !7863, line: 1499, column: 9)
!8286 = !DILocation(line: 1497, column: 13, scope: !8278)
!8287 = !DILocation(line: 1499, column: 13, scope: !8285)
!8288 = !DILocation(line: 1498, column: 19, scope: !8278)
!8289 = !DILocation(line: 1498, column: 13, scope: !8283)
!8290 = !DILocation(line: 1499, column: 19, scope: !8283)
!8291 = !DILocalVariable(name: "self", arg: 1, scope: !8292, file: !4871, line: 476, type: !1433)
!8292 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h55e9f7dc62259c23E", scope: !4872, file: !4871, line: 476, type: !8293, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !8295)
!8293 = !DISubroutineType(types: !8294)
!8294 = !{!38, !1433}
!8295 = !{!8291}
!8296 = !DILocation(line: 476, column: 25, scope: !8292, inlinedAt: !8297)
!8297 = distinct !DILocation(line: 1501, column: 38, scope: !8285)
!8298 = !DILocation(line: 1501, column: 54, scope: !8285)
!8299 = !DILocation(line: 1501, column: 13, scope: !8285)
!8300 = !DILocation(line: 1502, column: 13, scope: !8285)
!8301 = !DILocation(line: 1504, column: 6, scope: !8278)
!8302 = distinct !DISubprogram(name: "from<alloc::alloc::Global>", linkageName: "_ZN121_$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$C$A$GT$$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$C$A$GT$$GT$$GT$4from17h40aa3eaff54c9056E", scope: !8303, file: !7863, line: 1599, type: !8304, scopeLine: 1599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !7362, retainedNodes: !8306)
!8303 = !DINamespace(name: "{impl#26}", scope: !113)
!8304 = !DISubroutineType(types: !8305)
!8305 = !{!322, !7891}
!8306 = !{!8307, !8308, !8310}
!8307 = !DILocalVariable(name: "s", arg: 1, scope: !8302, file: !7863, line: 1599, type: !7891)
!8308 = !DILocalVariable(name: "raw", scope: !8309, file: !7863, line: 1600, type: !2694, align: 8)
!8309 = distinct !DILexicalBlock(scope: !8302, file: !7863, line: 1600, column: 9)
!8310 = !DILocalVariable(name: "alloc", scope: !8309, file: !7863, line: 1600, type: !48, align: 1)
!8311 = !DILocation(line: 1599, column: 13, scope: !8302)
!8312 = !DILocation(line: 1600, column: 19, scope: !8309)
!8313 = !DILocation(line: 1600, column: 28, scope: !8302)
!8314 = !DILocation(line: 1600, column: 14, scope: !8302)
!8315 = !DILocation(line: 1600, column: 14, scope: !8309)
!8316 = !DILocation(line: 1601, column: 18, scope: !8309)
!8317 = !DILocation(line: 1602, column: 6, scope: !8302)
!8318 = distinct !DISubprogram(name: "from<u8, 1>", linkageName: "_ZN106_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$u5b$T$u3b$$u20$N$u5d$$GT$$GT$4from17hab32856c14b32396E", scope: !8319, file: !7863, line: 1618, type: !8320, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !8325)
!8319 = !DINamespace(name: "{impl#27}", scope: !113)
!8320 = !DISubroutineType(types: !8321)
!8321 = !{!322, !8322}
!8322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 8, align: 8, elements: !8323)
!8323 = !{!8324}
!8324 = !DISubrange(count: 1, lowerBound: 0)
!8325 = !{!8326}
!8326 = !DILocalVariable(name: "array", arg: 1, scope: !8318, file: !7863, line: 1618, type: !8322)
!8327 = !DILocation(line: 1618, column: 13, scope: !8318)
!8328 = !DILocation(line: 1619, column: 9, scope: !8318)
!8329 = !DILocalVariable(name: "x", arg: 1, scope: !8330, file: !7863, line: 217, type: !8322)
!8330 = distinct !DISubprogram(name: "new<[u8; 1]>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$3new17h7affdbf9302de89eE", scope: !8331, file: !7863, line: 217, type: !8332, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !8336, retainedNodes: !8335)
!8331 = !DINamespace(name: "{impl#0}", scope: !113)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!8334, !8322}
!8334 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<[u8; 1], alloc::alloc::Global>", baseType: !8322, size: 64, align: 64, dwarfAddressSpace: 0)
!8335 = !{!8329}
!8336 = !{!8337}
!8337 = !DITemplateTypeParameter(name: "T", type: !8322)
!8338 = !DILocation(line: 217, column: 16, scope: !8330, inlinedAt: !8339)
!8339 = distinct !DILocation(line: 1619, column: 9, scope: !8318)
!8340 = !DILocation(line: 219, column: 9, scope: !8330, inlinedAt: !8339)
!8341 = !DILocation(line: 219, column: 18, scope: !8330, inlinedAt: !8339)
!8342 = !DILocation(line: 1620, column: 6, scope: !8318)
!8343 = distinct !DISubprogram(name: "from", linkageName: "_ZN166_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$4from17ha3283e6d7e1db2a0E", scope: !112, file: !7863, line: 2274, type: !8344, scopeLine: 2274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8352)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{!8346, !15}
!8346 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !8347, templateParams: !45, identifier: "1a75e08c13961019b4706feadefa9b64")
!8347 = !{!8348, !8351}
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8346, file: !2, baseType: !8349, size: 64, align: 64)
!8349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8350, size: 64, align: 64, dwarfAddressSpace: 0)
!8350 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn core::error::Error + core::marker::Send + core::marker::Sync)", file: !2, align: 8, elements: !45, identifier: "568ae15bc2067bc91b7fb6b44610d7e2")
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !8346, file: !2, baseType: !1147, size: 64, align: 64, offset: 64)
!8352 = !{!8353}
!8353 = !DILocalVariable(name: "err", arg: 1, scope: !8343, file: !7863, line: 2274, type: !15)
!8354 = !DILocation(line: 2274, column: 13, scope: !8343)
!8355 = !DILocation(line: 2297, column: 18, scope: !8343)
!8356 = !DILocalVariable(name: "x", arg: 1, scope: !8357, file: !7863, line: 217, type: !110)
!8357 = distinct !DISubprogram(name: "new<alloc::boxed::{impl#66}::from::StringError>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$3new17h6b44e6f8d2fb281dE", scope: !8331, file: !7863, line: 217, type: !8358, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1340, retainedNodes: !8361)
!8358 = !DISubroutineType(types: !8359)
!8359 = !{!8360, !110}
!8360 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<alloc::boxed::{impl#66}::from::StringError, alloc::alloc::Global>", baseType: !110, size: 64, align: 64, dwarfAddressSpace: 0)
!8361 = !{!8356}
!8362 = !DILocation(line: 217, column: 16, scope: !8357, inlinedAt: !8363)
!8363 = distinct !DILocation(line: 2297, column: 9, scope: !8343)
!8364 = !DILocation(line: 219, column: 9, scope: !8357, inlinedAt: !8363)
!8365 = !DILocation(line: 219, column: 18, scope: !8357, inlinedAt: !8363)
!8366 = !DILocation(line: 2298, column: 6, scope: !8343)
!8367 = distinct !DISubprogram(name: "description", linkageName: "_ZN223_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..error..Error$GT$11description17ha04aa3aedf33712bE", scope: !8368, file: !7863, line: 2279, type: !8369, scopeLine: 2279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8371)
!8368 = !DINamespace(name: "{impl#0}", scope: !111)
!8369 = !DISubroutineType(types: !8370)
!8370 = !{!145, !4801}
!8371 = !{!8372}
!8372 = !DILocalVariable(name: "self", arg: 1, scope: !8367, file: !7863, line: 2279, type: !4801)
!8373 = !DILocation(line: 2279, column: 28, scope: !8367)
!8374 = !DILocation(line: 2280, column: 17, scope: !8367)
!8375 = !DILocation(line: 2281, column: 14, scope: !8367)
!8376 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN223_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h34dc5803b1268706E", scope: !8377, file: !7863, line: 2285, type: !8378, scopeLine: 2285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8380)
!8377 = !DINamespace(name: "{impl#1}", scope: !111)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!1103, !4801, !1119}
!8380 = !{!8381, !8382}
!8381 = !DILocalVariable(name: "self", arg: 1, scope: !8376, file: !7863, line: 2285, type: !4801)
!8382 = !DILocalVariable(name: "f", arg: 2, scope: !8376, file: !7863, line: 2285, type: !1119)
!8383 = !DILocation(line: 2285, column: 20, scope: !8376)
!8384 = !DILocation(line: 2285, column: 27, scope: !8376)
!8385 = !DILocation(line: 2286, column: 17, scope: !8376)
!8386 = !DILocation(line: 2287, column: 14, scope: !8376)
!8387 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN221_$LT$$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17he6b554d75f9bf311E", scope: !8388, file: !7863, line: 2292, type: !8378, scopeLine: 2292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8389)
!8388 = !DINamespace(name: "{impl#2}", scope: !111)
!8389 = !{!8390, !8391}
!8390 = !DILocalVariable(name: "self", arg: 1, scope: !8387, file: !7863, line: 2292, type: !4801)
!8391 = !DILocalVariable(name: "f", arg: 2, scope: !8387, file: !7863, line: 2292, type: !1119)
!8392 = !DILocation(line: 2292, column: 20, scope: !8387)
!8393 = !DILocation(line: 2292, column: 27, scope: !8387)
!8394 = !DILocation(line: 2293, column: 17, scope: !8387)
!8395 = !DILocation(line: 2294, column: 14, scope: !8387)
!8396 = distinct !DISubprogram(name: "from", linkageName: "_ZN120_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$u20$as$u20$core..convert..From$LT$alloc..string..String$GT$$GT$4from17hd41ff04fe458fda8E", scope: !8397, file: !7863, line: 2316, type: !8398, scopeLine: 2316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8404)
!8397 = !DINamespace(name: "{impl#67}", scope: !113)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{!8400, !15}
!8400 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !8401, templateParams: !45, identifier: "cd88c6a17d6eb8b64f5d16771e26dc89")
!8401 = !{!8402, !8403}
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8400, file: !2, baseType: !4783, size: 64, align: 64)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !8400, file: !2, baseType: !1147, size: 64, align: 64, offset: 64)
!8404 = !{!8405, !8406, !8408}
!8405 = !DILocalVariable(name: "str_err", arg: 1, scope: !8396, file: !7863, line: 2316, type: !15)
!8406 = !DILocalVariable(name: "err1", scope: !8407, file: !7863, line: 2317, type: !8346, align: 8)
!8407 = distinct !DILexicalBlock(scope: !8396, file: !7863, line: 2317, column: 9)
!8408 = !DILocalVariable(name: "err2", scope: !8409, file: !7863, line: 2318, type: !8400, align: 8)
!8409 = distinct !DILexicalBlock(scope: !8407, file: !7863, line: 2318, column: 9)
!8410 = !DILocation(line: 2316, column: 13, scope: !8396)
!8411 = !DILocation(line: 2317, column: 50, scope: !8396)
!8412 = !DILocation(line: 2317, column: 13, scope: !8407)
!8413 = !DILocation(line: 2318, column: 36, scope: !8407)
!8414 = !DILocation(line: 2318, column: 13, scope: !8409)
!8415 = !DILocation(line: 2320, column: 6, scope: !8396)
!8416 = distinct !DISubprogram(name: "from", linkageName: "_ZN106_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h2c59eb3c33072a7dE", scope: !8417, file: !7863, line: 2364, type: !8418, scopeLine: 2364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8420)
!8417 = !DINamespace(name: "{impl#69}", scope: !113)
!8418 = !DISubroutineType(types: !8419)
!8419 = !{!8400, !145}
!8420 = !{!8421}
!8421 = !DILocalVariable(name: "err", arg: 1, scope: !8416, file: !7863, line: 2364, type: !145)
!8422 = !DILocation(line: 2364, column: 13, scope: !8416)
!8423 = !DILocation(line: 2365, column: 20, scope: !8416)
!8424 = !DILocation(line: 2365, column: 9, scope: !8416)
!8425 = !DILocation(line: 2366, column: 6, scope: !8416)
!8426 = distinct !DISubprogram(name: "from", linkageName: "_ZN174_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17hf5efcbefd2cdf166E", scope: !8427, file: !7863, line: 2386, type: !8428, scopeLine: 2386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8430)
!8427 = !DINamespace(name: "{impl#70}", scope: !113)
!8428 = !DISubroutineType(types: !8429)
!8429 = !{!8346, !2464}
!8430 = !{!8431}
!8431 = !DILocalVariable(name: "err", arg: 1, scope: !8426, file: !7863, line: 2386, type: !2464)
!8432 = !DILocation(line: 2386, column: 13, scope: !8426)
!8433 = !DILocation(line: 2387, column: 20, scope: !8426)
!8434 = !DILocation(line: 2387, column: 9, scope: !8426)
!8435 = !DILocation(line: 2388, column: 6, scope: !8426)
!8436 = distinct !DISubprogram(name: "from", linkageName: "_ZN128_$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17hcdbecd5ffc25fac5E", scope: !8437, file: !7863, line: 2407, type: !8438, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8440)
!8437 = !DINamespace(name: "{impl#71}", scope: !113)
!8438 = !DISubroutineType(types: !8439)
!8439 = !{!8400, !2464}
!8440 = !{!8441}
!8441 = !DILocalVariable(name: "err", arg: 1, scope: !8436, file: !7863, line: 2407, type: !2464)
!8442 = !DILocation(line: 2407, column: 13, scope: !8436)
!8443 = !DILocation(line: 2408, column: 20, scope: !8436)
!8444 = !DILocation(line: 2408, column: 9, scope: !8436)
!8445 = !DILocation(line: 2409, column: 6, scope: !8436)
!8446 = distinct !DISubprogram(name: "to_mut<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h87096cc238b4bc83E", scope: !2464, file: !8447, line: 274, type: !8448, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2473, retainedNodes: !8451)
!8447 = !DIFile(filename: "src/borrow.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "c58fe2c25c569a27f32c1b8526800c49")
!8448 = !DISubroutineType(types: !8449)
!8449 = !{!14, !8450}
!8450 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::borrow::Cow<str>", baseType: !2464, size: 64, align: 64, dwarfAddressSpace: 0)
!8451 = !{!8452, !8453, !8455, !8457}
!8452 = !DILocalVariable(name: "self", arg: 1, scope: !8446, file: !8447, line: 274, type: !8450)
!8453 = !DILocalVariable(name: "borrowed", scope: !8454, file: !8447, line: 276, type: !145, align: 8)
!8454 = distinct !DILexicalBlock(scope: !8446, file: !8447, line: 276, column: 13)
!8455 = !DILocalVariable(name: "owned", scope: !8456, file: !8447, line: 280, type: !14, align: 8)
!8456 = distinct !DILexicalBlock(scope: !8454, file: !8447, line: 280, column: 21)
!8457 = !DILocalVariable(name: "owned", scope: !8458, file: !8447, line: 283, type: !14, align: 8)
!8458 = distinct !DILexicalBlock(scope: !8446, file: !8447, line: 283, column: 13)
!8459 = !DILocation(line: 274, column: 19, scope: !8446)
!8460 = !DILocation(line: 275, column: 15, scope: !8446)
!8461 = !DILocation(line: 275, column: 9, scope: !8446)
!8462 = !DILocation(line: 276, column: 22, scope: !8446)
!8463 = !DILocation(line: 276, column: 22, scope: !8454)
!8464 = !DILocation(line: 277, column: 31, scope: !8454)
!8465 = !DILocation(line: 277, column: 25, scope: !8454)
!8466 = !DILocation(line: 277, column: 17, scope: !8454)
!8467 = !DILocation(line: 278, column: 23, scope: !8454)
!8468 = !DILocation(line: 278, column: 17, scope: !8454)
!8469 = !DILocation(line: 283, column: 19, scope: !8446)
!8470 = !DILocation(line: 283, column: 19, scope: !8458)
!8471 = !DILocation(line: 283, column: 37, scope: !8458)
!8472 = !DILocation(line: 283, column: 41, scope: !8446)
!8473 = !DILocation(line: 285, column: 6, scope: !8446)
!8474 = !DILocation(line: 279, column: 37, scope: !8454)
!8475 = !DILocation(line: 280, column: 27, scope: !8454)
!8476 = !DILocation(line: 280, column: 27, scope: !8456)
!8477 = !DILocation(line: 282, column: 13, scope: !8446)
!8478 = distinct !DISubprogram(name: "into_owned<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17h102310ff1190052aE", scope: !2464, file: !8447, line: 322, type: !8479, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2473, retainedNodes: !8481)
!8479 = !DISubroutineType(types: !8480)
!8480 = !{!15, !2464}
!8481 = !{!8482, !8483, !8485}
!8482 = !DILocalVariable(name: "self", arg: 1, scope: !8478, file: !8447, line: 322, type: !2464)
!8483 = !DILocalVariable(name: "borrowed", scope: !8484, file: !8447, line: 324, type: !145, align: 8)
!8484 = distinct !DILexicalBlock(scope: !8478, file: !8447, line: 324, column: 13)
!8485 = !DILocalVariable(name: "owned", scope: !8486, file: !8447, line: 325, type: !15, align: 8)
!8486 = distinct !DILexicalBlock(scope: !8478, file: !8447, line: 325, column: 13)
!8487 = !DILocation(line: 322, column: 23, scope: !8478)
!8488 = !DILocation(line: 325, column: 19, scope: !8486)
!8489 = !DILocation(line: 323, column: 15, scope: !8478)
!8490 = !DILocation(line: 323, column: 9, scope: !8478)
!8491 = !DILocation(line: 324, column: 22, scope: !8478)
!8492 = !DILocation(line: 324, column: 22, scope: !8484)
!8493 = !DILocation(line: 324, column: 35, scope: !8484)
!8494 = !DILocation(line: 325, column: 19, scope: !8478)
!8495 = !DILocation(line: 325, column: 29, scope: !8486)
!8496 = !DILocation(line: 325, column: 33, scope: !8478)
!8497 = !DILocation(line: 327, column: 6, scope: !8478)
!8498 = distinct !DISubprogram(name: "deref<str>", linkageName: "_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6782cf229586bef9E", scope: !8499, file: !8447, line: 338, type: !8500, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2473, retainedNodes: !8503)
!8499 = !DINamespace(name: "{impl#4}", scope: !2465)
!8500 = !DISubroutineType(types: !8501)
!8501 = !{!145, !8502}
!8502 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::borrow::Cow<str>", baseType: !2464, size: 64, align: 64, dwarfAddressSpace: 0)
!8503 = !{!8504, !8505, !8507}
!8504 = !DILocalVariable(name: "self", arg: 1, scope: !8498, file: !8447, line: 338, type: !8502)
!8505 = !DILocalVariable(name: "borrowed", scope: !8506, file: !8447, line: 340, type: !145, align: 8)
!8506 = distinct !DILexicalBlock(scope: !8498, file: !8447, line: 340, column: 13)
!8507 = !DILocalVariable(name: "owned", scope: !8508, file: !8447, line: 341, type: !8509, align: 8)
!8508 = distinct !DILexicalBlock(scope: !8498, file: !8447, line: 341, column: 13)
!8509 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::String", baseType: !15, size: 64, align: 64, dwarfAddressSpace: 0)
!8510 = !DILocation(line: 338, column: 14, scope: !8498)
!8511 = !DILocation(line: 339, column: 15, scope: !8498)
!8512 = !DILocation(line: 339, column: 9, scope: !8498)
!8513 = !DILocation(line: 340, column: 22, scope: !8498)
!8514 = !DILocation(line: 340, column: 22, scope: !8506)
!8515 = !DILocation(line: 340, column: 35, scope: !8506)
!8516 = !DILocation(line: 340, column: 42, scope: !8498)
!8517 = !DILocation(line: 341, column: 19, scope: !8498)
!8518 = !DILocation(line: 341, column: 19, scope: !8508)
!8519 = !DILocation(line: 341, column: 33, scope: !8508)
!8520 = !DILocation(line: 341, column: 46, scope: !8498)
!8521 = !DILocation(line: 343, column: 6, scope: !8498)
!8522 = distinct !DISubprogram(name: "add_assign", linkageName: "_ZN92_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$LT$$RF$str$GT$$GT$10add_assign17h572f9ced3245ec4bE", scope: !8523, file: !8447, line: 465, type: !8524, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8526)
!8523 = !DINamespace(name: "{impl#16}", scope: !2465)
!8524 = !DISubroutineType(types: !8525)
!8525 = !{null, !8450, !145}
!8526 = !{!8527, !8528, !8529, !8531}
!8527 = !DILocalVariable(name: "self", arg: 1, scope: !8522, file: !8447, line: 465, type: !8450)
!8528 = !DILocalVariable(name: "rhs", arg: 2, scope: !8522, file: !8447, line: 465, type: !145)
!8529 = !DILocalVariable(name: "lhs", scope: !8530, file: !8447, line: 469, type: !145, align: 8)
!8530 = distinct !DILexicalBlock(scope: !8522, file: !8447, line: 469, column: 47)
!8531 = !DILocalVariable(name: "s", scope: !8532, file: !8447, line: 470, type: !15, align: 8)
!8532 = distinct !DILexicalBlock(scope: !8530, file: !8447, line: 470, column: 17)
!8533 = !DILocation(line: 465, column: 19, scope: !8522)
!8534 = !DILocation(line: 465, column: 30, scope: !8522)
!8535 = !DILocation(line: 470, column: 21, scope: !8532)
!8536 = !DILocation(line: 466, column: 12, scope: !8522)
!8537 = !DILocation(line: 468, column: 20, scope: !8522)
!8538 = !DILocation(line: 468, column: 19, scope: !8522)
!8539 = !DILocation(line: 467, column: 21, scope: !8522)
!8540 = !DILocation(line: 467, column: 13, scope: !8522)
!8541 = !DILocation(line: 466, column: 9, scope: !8522)
!8542 = !DILocation(line: 476, column: 6, scope: !8522)
!8543 = !DILocation(line: 469, column: 20, scope: !8530)
!8544 = !DILocation(line: 469, column: 34, scope: !8530)
!8545 = !DILocation(line: 470, column: 51, scope: !8530)
!8546 = !DILocation(line: 470, column: 63, scope: !8530)
!8547 = !DILocation(line: 474, column: 13, scope: !8522)
!8548 = !DILocation(line: 470, column: 29, scope: !8530)
!8549 = !DILocation(line: 471, column: 17, scope: !8532)
!8550 = !DILocation(line: 472, column: 36, scope: !8532)
!8551 = !DILocation(line: 472, column: 25, scope: !8532)
!8552 = !DILocation(line: 472, column: 17, scope: !8532)
!8553 = !DILocation(line: 469, column: 13, scope: !8522)
!8554 = distinct !DISubprogram(name: "add_assign", linkageName: "_ZN77_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hbe1c9d56b100d876E", scope: !8555, file: !8447, line: 482, type: !8556, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8558)
!8555 = !DINamespace(name: "{impl#17}", scope: !2465)
!8556 = !DISubroutineType(types: !8557)
!8557 = !{null, !8450, !2464}
!8558 = !{!8559, !8560, !8561, !8563}
!8559 = !DILocalVariable(name: "self", arg: 1, scope: !8554, file: !8447, line: 482, type: !8450)
!8560 = !DILocalVariable(name: "rhs", arg: 2, scope: !8554, file: !8447, line: 482, type: !2464)
!8561 = !DILocalVariable(name: "lhs", scope: !8562, file: !8447, line: 486, type: !145, align: 8)
!8562 = distinct !DILexicalBlock(scope: !8554, file: !8447, line: 486, column: 47)
!8563 = !DILocalVariable(name: "s", scope: !8564, file: !8447, line: 487, type: !15, align: 8)
!8564 = distinct !DILexicalBlock(scope: !8562, file: !8447, line: 487, column: 17)
!8565 = !DILocation(line: 482, column: 19, scope: !8554)
!8566 = !DILocation(line: 482, column: 30, scope: !8554)
!8567 = !DILocation(line: 487, column: 21, scope: !8564)
!8568 = !DILocation(line: 483, column: 12, scope: !8554)
!8569 = !DILocation(line: 485, column: 20, scope: !8554)
!8570 = !DILocation(line: 485, column: 19, scope: !8554)
!8571 = !DILocation(line: 484, column: 21, scope: !8554)
!8572 = !DILocation(line: 484, column: 13, scope: !8554)
!8573 = !DILocation(line: 483, column: 9, scope: !8554)
!8574 = !DILocation(line: 493, column: 5, scope: !8554)
!8575 = !DILocation(line: 486, column: 20, scope: !8562)
!8576 = !DILocation(line: 486, column: 34, scope: !8562)
!8577 = !DILocation(line: 487, column: 51, scope: !8562)
!8578 = !DILocation(line: 487, column: 63, scope: !8562)
!8579 = !DILocation(line: 491, column: 13, scope: !8554)
!8580 = !DILocation(line: 491, column: 36, scope: !8554)
!8581 = !DILocation(line: 487, column: 29, scope: !8562)
!8582 = !DILocation(line: 488, column: 17, scope: !8564)
!8583 = !DILocation(line: 489, column: 36, scope: !8564)
!8584 = !DILocation(line: 489, column: 25, scope: !8564)
!8585 = !DILocation(line: 489, column: 17, scope: !8564)
!8586 = !DILocation(line: 486, column: 13, scope: !8554)
!8587 = !DILocation(line: 493, column: 6, scope: !8554)
!8588 = distinct !DISubprogram(name: "drop", linkageName: "_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5fe2f836fb955206E", scope: !8590, file: !8589, line: 23, type: !8594, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8598)
!8589 = !DIFile(filename: "src/collections/btree/mem.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "b4d35906f376ea6e2770ce6493db4607")
!8590 = !DINamespace(name: "{impl#0}", scope: !8591)
!8591 = !DINamespace(name: "replace", scope: !8592)
!8592 = !DINamespace(name: "mem", scope: !8593)
!8593 = !DINamespace(name: "btree", scope: !160)
!8594 = !DISubroutineType(types: !8595)
!8595 = !{null, !8596}
!8596 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::mem::replace::PanicGuard", baseType: !8597, size: 64, align: 64, dwarfAddressSpace: 0)
!8597 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicGuard", scope: !8591, file: !2, align: 8, elements: !45, identifier: "5f92f50c4a3dc629a2723d4fa3902aed")
!8598 = !{!8599}
!8599 = !DILocalVariable(name: "self", arg: 1, scope: !8588, file: !8589, line: 23, type: !8596)
!8600 = !DILocation(line: 23, column: 17, scope: !8588)
!8601 = !DILocation(line: 24, column: 13, scope: !8588)
!8602 = distinct !DISubprogram(name: "splitpoint", linkageName: "_ZN5alloc11collections5btree4node10splitpoint17h3c2f10bf4d1f87efE", scope: !8604, file: !8603, line: 876, type: !8605, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8624)
!8603 = !DIFile(filename: "src/collections/btree/node.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "ccc95200f4a86cfcc3061a8bf6cc8974")
!8604 = !DINamespace(name: "node", scope: !8593)
!8605 = !DISubroutineType(types: !8606)
!8606 = !{!8607, !9}
!8607 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, alloc::collections::btree::node::LeftOrRight<usize>)", file: !2, size: 192, align: 64, elements: !8608, templateParams: !45, identifier: "5bd5e0e3b258d9962a7b641fc50a0b67")
!8608 = !{!8609, !8610}
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8607, file: !2, baseType: !9, size: 64, align: 64)
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8607, file: !2, baseType: !8611, size: 128, align: 64, offset: 64)
!8611 = !DICompositeType(tag: DW_TAG_structure_type, name: "LeftOrRight<usize>", scope: !8604, file: !2, size: 128, align: 64, elements: !8612, templateParams: !45, identifier: "eb49fa436efc1c23d0a6d14b29ddce7")
!8612 = !{!8613}
!8613 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8611, file: !2, size: 128, align: 64, elements: !8614, templateParams: !45, identifier: "3f189d51d3e51da022d35f36b30fa184", discriminator: !8623)
!8614 = !{!8615, !8619}
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "Left", scope: !8613, file: !2, baseType: !8616, size: 128, align: 64, extraData: i64 0)
!8616 = !DICompositeType(tag: DW_TAG_structure_type, name: "Left", scope: !8611, file: !2, size: 128, align: 64, elements: !8617, templateParams: !1132, identifier: "f69e5dba8af4f4c7aeb2f16b12362b6d")
!8617 = !{!8618}
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8616, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "Right", scope: !8613, file: !2, baseType: !8620, size: 128, align: 64, extraData: i64 1)
!8620 = !DICompositeType(tag: DW_TAG_structure_type, name: "Right", scope: !8611, file: !2, size: 128, align: 64, elements: !8621, templateParams: !1132, identifier: "91ef36b84afa7a4e5ef5266c9d56939")
!8621 = !{!8622}
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8620, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8623 = !DIDerivedType(tag: DW_TAG_member, scope: !8611, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!8624 = !{!8625}
!8625 = !DILocalVariable(name: "edge_idx", arg: 1, scope: !8602, file: !8603, line: 876, type: !9)
!8626 = !DILocation(line: 876, column: 15, scope: !8602)
!8627 = !DILocation(line: 877, column: 19, scope: !8602)
!8628 = !DILocation(line: 877, column: 5, scope: !8602)
!8629 = !DILocation(line: 880, column: 9, scope: !8602)
!8630 = !DILocation(line: 879, column: 5, scope: !8602)
!8631 = !DILocation(line: 880, column: 59, scope: !8602)
!8632 = !DILocation(line: 880, column: 39, scope: !8602)
!8633 = !DILocation(line: 880, column: 86, scope: !8602)
!8634 = !DILocation(line: 885, column: 2, scope: !8602)
!8635 = !DILocation(line: 883, column: 53, scope: !8602)
!8636 = !DILocation(line: 881, column: 52, scope: !8602)
!8637 = !DILocation(line: 881, column: 36, scope: !8602)
!8638 = !DILocation(line: 881, column: 79, scope: !8602)
!8639 = !DILocation(line: 882, column: 53, scope: !8602)
!8640 = !DILocation(line: 882, column: 37, scope: !8602)
!8641 = !DILocation(line: 882, column: 74, scope: !8602)
!8642 = !DILocation(line: 883, column: 34, scope: !8602)
!8643 = !DILocation(line: 883, column: 14, scope: !8602)
!8644 = !DILocation(line: 883, column: 88, scope: !8602)
!8645 = distinct !DISubprogram(name: "is_set_val", linkageName: "_ZN110_$LT$alloc..collections..btree..set_val..SetValZST$u20$as$u20$alloc..collections..btree..set_val..IsSetVal$GT$10is_set_val17h1035df8a8fc6edf4E", scope: !8647, file: !8646, line: 26, type: !8649, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !45)
!8646 = !DIFile(filename: "src/collections/btree/set_val.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "f988f81fa7e3f9650417b45ad58739c2")
!8647 = !DINamespace(name: "{impl#1}", scope: !8648)
!8648 = !DINamespace(name: "set_val", scope: !8593)
!8649 = !DISubroutineType(types: !8650)
!8650 = !{!571}
!8651 = !DILocation(line: 28, column: 6, scope: !8645)
!8652 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17hc069ae9f8e46f190E", scope: !980, file: !8653, line: 74, type: !8654, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8657)
!8653 = !DIFile(filename: "src/collections/mod.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "7decf395905d7792fa14d2b3eb96c0e2")
!8654 = !DISubroutineType(types: !8655)
!8655 = !{!159, !8656}
!8656 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !980, size: 64, align: 64, dwarfAddressSpace: 0)
!8657 = !{!8658}
!8658 = !DILocalVariable(name: "self", arg: 1, scope: !8652, file: !8653, line: 74, type: !8656)
!8659 = !DILocation(line: 74, column: 17, scope: !8652)
!8660 = !DILocation(line: 75, column: 9, scope: !8652)
!8661 = !DILocation(line: 76, column: 6, scope: !8652)
!8662 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hd6ef18c3114f3244E", scope: !8663, file: !8653, line: 116, type: !5729, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8664)
!8663 = !DINamespace(name: "{impl#1}", scope: !160)
!8664 = !{!8665}
!8665 = !DILocalVariable(name: "kind", arg: 1, scope: !8662, file: !8653, line: 116, type: !159)
!8666 = !DILocation(line: 116, column: 13, scope: !8662)
!8667 = !DILocation(line: 117, column: 9, scope: !8662)
!8668 = !DILocation(line: 118, column: 6, scope: !8662)
!8669 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN74_$LT$alloc..collections..TryReserveError$u20$as$u20$core..fmt..Display$GT$3fmt17h2f7f31e8c673bb8bE", scope: !8670, file: !8653, line: 132, type: !8671, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8673)
!8670 = !DINamespace(name: "{impl#3}", scope: !160)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{!1103, !8656, !1119}
!8673 = !{!8674, !8675, !8676, !8691, !8693}
!8674 = !DILocalVariable(name: "self", arg: 1, scope: !8669, file: !8653, line: 133, type: !8656)
!8675 = !DILocalVariable(name: "fmt", arg: 2, scope: !8669, file: !8653, line: 134, type: !1119)
!8676 = !DILocalVariable(name: "residual", scope: !8677, file: !8653, line: 136, type: !8678, align: 1)
!8677 = distinct !DILexicalBlock(scope: !8669, file: !8653, line: 136, column: 50)
!8678 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::fmt::Error>", scope: !848, file: !2, align: 8, elements: !8679, templateParams: !45, identifier: "4017d134fb498ee0bb8715bd1e1edb5d")
!8679 = !{!8680}
!8680 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8678, file: !2, align: 8, elements: !8681, templateParams: !45, identifier: "95a3c8ccc01a95aa48df11d69d34827b")
!8681 = !{!8682, !8687}
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8680, file: !2, baseType: !8683, align: 8)
!8683 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8678, file: !2, align: 8, elements: !8684, templateParams: !8686, identifier: "9e7fb4268b470386b595957f8fb01144")
!8684 = !{!8685}
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8683, file: !2, baseType: !507, align: 8)
!8686 = !{!877, !1112}
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8680, file: !2, baseType: !8688, align: 8)
!8688 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8678, file: !2, align: 8, elements: !8689, templateParams: !8686, identifier: "424c764659abb7cb3cdc2d22b76efcf5")
!8689 = !{!8690}
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8688, file: !2, baseType: !61, align: 8)
!8691 = !DILocalVariable(name: "val", scope: !8692, file: !8653, line: 136, type: !7, align: 1)
!8692 = distinct !DILexicalBlock(scope: !8669, file: !8653, line: 136, column: 9)
!8693 = !DILocalVariable(name: "reason", scope: !8694, file: !8653, line: 137, type: !145, align: 8)
!8694 = distinct !DILexicalBlock(scope: !8669, file: !8653, line: 137, column: 9)
!8695 = !DILocation(line: 133, column: 9, scope: !8669)
!8696 = !DILocation(line: 134, column: 9, scope: !8669)
!8697 = !DILocation(line: 136, column: 50, scope: !8677)
!8698 = !DILocation(line: 136, column: 9, scope: !8692)
!8699 = !DILocation(line: 137, column: 13, scope: !8694)
!8700 = !DILocation(line: 136, column: 9, scope: !8669)
!8701 = !DILocation(line: 137, column: 28, scope: !8669)
!8702 = !DILocation(line: 137, column: 22, scope: !8669)
!8703 = !DILocation(line: 136, column: 9, scope: !8677)
!8704 = !DILocation(line: 146, column: 6, scope: !8669)
!8705 = !DILocation(line: 139, column: 17, scope: !8669)
!8706 = !DILocation(line: 142, column: 17, scope: !8669)
!8707 = !DILocation(line: 143, column: 13, scope: !8669)
!8708 = !DILocation(line: 145, column: 23, scope: !8694)
!8709 = !DILocation(line: 145, column: 9, scope: !8694)
!8710 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError8as_bytes17h26a0c2ef073fe5bcE", scope: !8712, file: !8711, line: 186, type: !8716, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8719)
!8711 = !DIFile(filename: "src/ffi/c_str.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "84a7b2bb545087ec6a46d2a991b597bd")
!8712 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromVecWithNulError", scope: !299, file: !2, size: 320, align: 64, elements: !8713, templateParams: !45, identifier: "6f09c4af43d2dc926d3a6e552cd7de97")
!8713 = !{!8714, !8715}
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "error_kind", scope: !8712, file: !2, baseType: !298, size: 128, align: 64)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !8712, file: !2, baseType: !20, size: 192, align: 64, offset: 128)
!8716 = !DISubroutineType(types: !8717)
!8717 = !{!1433, !8718}
!8718 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::FromVecWithNulError", baseType: !8712, size: 64, align: 64, dwarfAddressSpace: 0)
!8719 = !{!8720}
!8720 = !DILocalVariable(name: "self", arg: 1, scope: !8710, file: !8711, line: 186, type: !8718)
!8721 = !DILocation(line: 186, column: 21, scope: !8710)
!8722 = !DILocation(line: 187, column: 10, scope: !8710)
!8723 = !DILocation(line: 188, column: 6, scope: !8710)
!8724 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError10into_bytes17h88293ca4f3340922E", scope: !8712, file: !8711, line: 212, type: !8725, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8727)
!8725 = !DISubroutineType(types: !8726)
!8726 = !{!20, !8712}
!8727 = !{!8728}
!8728 = !DILocalVariable(name: "self", arg: 1, scope: !8724, file: !8711, line: 212, type: !8712)
!8729 = !DILocation(line: 212, column: 23, scope: !8724)
!8730 = !DILocation(line: 213, column: 9, scope: !8724)
!8731 = !DILocation(line: 214, column: 6, scope: !8724)
!8732 = distinct !DISubprogram(name: "spec_new_impl", linkageName: "_ZN81_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17had913e58f7016648E", scope: !8733, file: !8711, line: 299, type: !8735, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8756)
!8733 = !DINamespace(name: "{impl#1}", scope: !8734)
!8734 = !DINamespace(name: "new", scope: !5594)
!8735 = !DISubroutineType(types: !8736)
!8736 = !{!8737, !1433}
!8737 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", scope: !848, file: !2, size: 256, align: 64, elements: !8738, templateParams: !45, identifier: "7940d7b96b6ecc7d96427ec7389fc479")
!8738 = !{!8739}
!8739 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8737, file: !2, size: 256, align: 64, elements: !8740, templateParams: !45, identifier: "ff7345a69d9d5ac06d4315e5d3a12735", discriminator: !8755)
!8740 = !{!8741, !8751}
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8739, file: !2, baseType: !8742, size: 256, align: 64, extraData: i64 0)
!8742 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8737, file: !2, size: 256, align: 64, elements: !8743, templateParams: !8745, identifier: "47a8cb98adc43271b60bcf4b5149c545")
!8743 = !{!8744}
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8742, file: !2, baseType: !319, size: 128, align: 64)
!8745 = !{!2078, !8746}
!8746 = !DITemplateTypeParameter(name: "E", type: !8747)
!8747 = !DICompositeType(tag: DW_TAG_structure_type, name: "NulError", scope: !299, file: !2, size: 256, align: 64, elements: !8748, templateParams: !45, identifier: "c037a7a610b65fd44d3b9112b0e9a1f")
!8748 = !{!8749, !8750}
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8747, file: !2, baseType: !9, size: 64, align: 64)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8747, file: !2, baseType: !20, size: 192, align: 64, offset: 64)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8739, file: !2, baseType: !8752, size: 256, align: 64)
!8752 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8737, file: !2, size: 256, align: 64, elements: !8753, templateParams: !8745, identifier: "ad0b39b95f8b68a3586c602e0956b76")
!8753 = !{!8754}
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8752, file: !2, baseType: !8747, size: 256, align: 64)
!8755 = !DIDerivedType(tag: DW_TAG_member, scope: !8737, file: !2, baseType: !179, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!8756 = !{!8757}
!8757 = !DILocalVariable(name: "self", arg: 1, scope: !8732, file: !8711, line: 299, type: !1433)
!8758 = !DILocation(line: 299, column: 30, scope: !8732)
!8759 = !DILocalVariable(name: "bytes", arg: 1, scope: !8760, file: !8711, line: 278, type: !1433)
!8760 = distinct !DISubprogram(name: "spec_new_impl_bytes", linkageName: "_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hd191f23c35d1a970E", scope: !8734, file: !8711, line: 278, type: !8735, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8761)
!8761 = !{!8759, !8762, !8764, !8766}
!8762 = !DILocalVariable(name: "capacity", scope: !8763, file: !8711, line: 283, type: !9, align: 8)
!8763 = distinct !DILexicalBlock(scope: !8760, file: !8711, line: 283, column: 13)
!8764 = !DILocalVariable(name: "buffer", scope: !8765, file: !8711, line: 287, type: !20, align: 8)
!8765 = distinct !DILexicalBlock(scope: !8763, file: !8711, line: 287, column: 13)
!8766 = !DILocalVariable(name: "i", scope: !8767, file: !8711, line: 293, type: !9, align: 8)
!8767 = distinct !DILexicalBlock(scope: !8765, file: !8711, line: 293, column: 17)
!8768 = !DILocation(line: 278, column: 32, scope: !8760, inlinedAt: !8769)
!8769 = distinct !DILocation(line: 300, column: 17, scope: !8732)
!8770 = !DILocation(line: 287, column: 17, scope: !8765, inlinedAt: !8769)
!8771 = !DILocation(line: 283, column: 28, scope: !8760, inlinedAt: !8769)
!8772 = !DILocation(line: 283, column: 17, scope: !8763, inlinedAt: !8769)
!8773 = !DILocation(line: 287, column: 30, scope: !8763, inlinedAt: !8769)
!8774 = !DILocation(line: 288, column: 13, scope: !8765, inlinedAt: !8769)
!8775 = !DILocation(line: 292, column: 19, scope: !8765, inlinedAt: !8769)
!8776 = !DILocation(line: 292, column: 13, scope: !8765, inlinedAt: !8769)
!8777 = !DILocation(line: 294, column: 66, scope: !8765, inlinedAt: !8769)
!8778 = !DILocation(line: 294, column: 37, scope: !8765, inlinedAt: !8769)
!8779 = !DILocation(line: 294, column: 25, scope: !8765, inlinedAt: !8769)
!8780 = !DILocation(line: 294, column: 75, scope: !8765, inlinedAt: !8769)
!8781 = !DILocation(line: 293, column: 22, scope: !8765, inlinedAt: !8769)
!8782 = !DILocation(line: 293, column: 22, scope: !8767, inlinedAt: !8769)
!8783 = !DILocation(line: 293, column: 44, scope: !8767, inlinedAt: !8769)
!8784 = !DILocation(line: 293, column: 32, scope: !8767, inlinedAt: !8769)
!8785 = !DILocation(line: 293, column: 28, scope: !8767, inlinedAt: !8769)
!8786 = !DILocation(line: 293, column: 51, scope: !8765, inlinedAt: !8769)
!8787 = !DILocation(line: 301, column: 14, scope: !8732)
!8788 = distinct !DISubprogram(name: "spec_new_impl", linkageName: "_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h08896c616216f21eE", scope: !8789, file: !8711, line: 305, type: !8790, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8792)
!8789 = !DINamespace(name: "{impl#2}", scope: !8734)
!8790 = !DISubroutineType(types: !8791)
!8791 = !{!8737, !145}
!8792 = !{!8793}
!8793 = !DILocalVariable(name: "self", arg: 1, scope: !8788, file: !8711, line: 305, type: !145)
!8794 = !DILocation(line: 305, column: 30, scope: !8788)
!8795 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !8796)
!8796 = distinct !DILocation(line: 306, column: 37, scope: !8788)
!8797 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !8796)
!8798 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !8796)
!8799 = !DILocation(line: 306, column: 37, scope: !8788)
!8800 = !DILocation(line: 278, column: 32, scope: !8760, inlinedAt: !8801)
!8801 = distinct !DILocation(line: 306, column: 17, scope: !8788)
!8802 = !DILocation(line: 287, column: 17, scope: !8765, inlinedAt: !8801)
!8803 = !DILocation(line: 283, column: 28, scope: !8760, inlinedAt: !8801)
!8804 = !DILocation(line: 283, column: 17, scope: !8763, inlinedAt: !8801)
!8805 = !DILocation(line: 287, column: 30, scope: !8763, inlinedAt: !8801)
!8806 = !DILocation(line: 288, column: 13, scope: !8765, inlinedAt: !8801)
!8807 = !DILocation(line: 292, column: 19, scope: !8765, inlinedAt: !8801)
!8808 = !DILocation(line: 292, column: 13, scope: !8765, inlinedAt: !8801)
!8809 = !DILocation(line: 294, column: 66, scope: !8765, inlinedAt: !8801)
!8810 = !DILocation(line: 294, column: 37, scope: !8765, inlinedAt: !8801)
!8811 = !DILocation(line: 294, column: 25, scope: !8765, inlinedAt: !8801)
!8812 = !DILocation(line: 294, column: 75, scope: !8765, inlinedAt: !8801)
!8813 = !DILocation(line: 293, column: 22, scope: !8765, inlinedAt: !8801)
!8814 = !DILocation(line: 293, column: 22, scope: !8767, inlinedAt: !8801)
!8815 = !DILocation(line: 293, column: 44, scope: !8767, inlinedAt: !8801)
!8816 = !DILocation(line: 293, column: 32, scope: !8767, inlinedAt: !8801)
!8817 = !DILocation(line: 293, column: 28, scope: !8767, inlinedAt: !8801)
!8818 = !DILocation(line: 293, column: 51, scope: !8765, inlinedAt: !8801)
!8819 = !DILocation(line: 307, column: 14, scope: !8788)
!8820 = distinct !DISubprogram(name: "spec_new_impl", linkageName: "_ZN89_$LT$$RF$mut$u20$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h74a9b51bb99a1f91E", scope: !8821, file: !8711, line: 311, type: !8822, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8824)
!8821 = !DINamespace(name: "{impl#3}", scope: !8734)
!8822 = !DISubroutineType(types: !8823)
!8823 = !{!8737, !3899}
!8824 = !{!8825}
!8825 = !DILocalVariable(name: "self", arg: 1, scope: !8820, file: !8711, line: 311, type: !3899)
!8826 = !DILocation(line: 311, column: 30, scope: !8820)
!8827 = !DILocation(line: 278, column: 32, scope: !8760, inlinedAt: !8828)
!8828 = distinct !DILocation(line: 312, column: 17, scope: !8820)
!8829 = !DILocation(line: 287, column: 17, scope: !8765, inlinedAt: !8828)
!8830 = !DILocation(line: 283, column: 28, scope: !8760, inlinedAt: !8828)
!8831 = !DILocation(line: 283, column: 17, scope: !8763, inlinedAt: !8828)
!8832 = !DILocation(line: 287, column: 30, scope: !8763, inlinedAt: !8828)
!8833 = !DILocation(line: 288, column: 13, scope: !8765, inlinedAt: !8828)
!8834 = !DILocation(line: 292, column: 19, scope: !8765, inlinedAt: !8828)
!8835 = !DILocation(line: 292, column: 13, scope: !8765, inlinedAt: !8828)
!8836 = !DILocation(line: 294, column: 66, scope: !8765, inlinedAt: !8828)
!8837 = !DILocation(line: 294, column: 37, scope: !8765, inlinedAt: !8828)
!8838 = !DILocation(line: 294, column: 25, scope: !8765, inlinedAt: !8828)
!8839 = !DILocation(line: 294, column: 75, scope: !8765, inlinedAt: !8828)
!8840 = !DILocation(line: 293, column: 22, scope: !8765, inlinedAt: !8828)
!8841 = !DILocation(line: 293, column: 22, scope: !8767, inlinedAt: !8828)
!8842 = !DILocation(line: 293, column: 44, scope: !8767, inlinedAt: !8828)
!8843 = !DILocation(line: 293, column: 32, scope: !8767, inlinedAt: !8828)
!8844 = !DILocation(line: 293, column: 28, scope: !8767, inlinedAt: !8828)
!8845 = !DILocation(line: 293, column: 51, scope: !8765, inlinedAt: !8828)
!8846 = !DILocation(line: 313, column: 14, scope: !8820)
!8847 = distinct !DISubprogram(name: "from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString18from_vec_unchecked17h306a86885aa71809E", scope: !319, file: !8711, line: 340, type: !8848, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8850)
!8848 = !DISubroutineType(types: !8849)
!8849 = !{!319, !20}
!8850 = !{!8851}
!8851 = !DILocalVariable(name: "v", arg: 1, scope: !8847, file: !8711, line: 340, type: !20)
!8852 = !DILocation(line: 340, column: 38, scope: !8847)
!8853 = !DILocation(line: 341, column: 41, scope: !8847)
!8854 = !DILocation(line: 341, column: 23, scope: !8847)
!8855 = !DILocation(line: 341, column: 9, scope: !8847)
!8856 = !DILocation(line: 342, column: 18, scope: !8847)
!8857 = !DILocation(line: 343, column: 6, scope: !8847)
!8858 = distinct !DISubprogram(name: "_from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h4454ae54a35a9e3dE", scope: !319, file: !8711, line: 345, type: !8848, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8859)
!8859 = !{!8860}
!8860 = !DILocalVariable(name: "v", arg: 1, scope: !8858, file: !8711, line: 345, type: !20)
!8861 = !DILocation(line: 345, column: 35, scope: !8858)
!8862 = !DILocation(line: 346, column: 9, scope: !8858)
!8863 = !DILocation(line: 347, column: 9, scope: !8858)
!8864 = !DILocation(line: 348, column: 23, scope: !8858)
!8865 = !DILocation(line: 348, column: 9, scope: !8858)
!8866 = !DILocation(line: 349, column: 6, scope: !8858)
!8867 = distinct !DISubprogram(name: "from_raw", linkageName: "_ZN5alloc3ffi5c_str7CString8from_raw17h5cdd156bad1bfb0aE", scope: !319, file: !8711, line: 397, type: !8868, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8870)
!8868 = !DISubroutineType(types: !8869)
!8869 = !{!319, !1996}
!8870 = !{!8871, !8872, !8874}
!8871 = !DILocalVariable(name: "ptr", arg: 1, scope: !8867, file: !8711, line: 397, type: !1996)
!8872 = !DILocalVariable(name: "len", scope: !8873, file: !8711, line: 408, type: !9, align: 8)
!8873 = distinct !DILexicalBlock(scope: !8867, file: !8711, line: 408, column: 13)
!8874 = !DILocalVariable(name: "slice", scope: !8875, file: !8711, line: 409, type: !4946, align: 8)
!8875 = distinct !DILexicalBlock(scope: !8873, file: !8711, line: 409, column: 13)
!8876 = !DILocation(line: 397, column: 28, scope: !8867)
!8877 = !DILocation(line: 408, column: 23, scope: !8867)
!8878 = !DILocation(line: 408, column: 17, scope: !8873)
!8879 = !DILocation(line: 409, column: 25, scope: !8873)
!8880 = !DILocation(line: 409, column: 17, scope: !8875)
!8881 = !DILocation(line: 410, column: 30, scope: !8875)
!8882 = !DILocation(line: 410, column: 13, scope: !8875)
!8883 = !DILocation(line: 412, column: 6, scope: !8867)
!8884 = distinct !DISubprogram(name: "into_string", linkageName: "_ZN5alloc3ffi5c_str7CString11into_string17hef41641d8853b4d8E", scope: !319, file: !8711, line: 473, type: !8885, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8887)
!8885 = !DISubroutineType(types: !8886)
!8886 = !{!5573, !319}
!8887 = !{!8888}
!8888 = !DILocalVariable(name: "self", arg: 1, scope: !8884, file: !8711, line: 473, type: !319)
!8889 = !DILocation(line: 473, column: 24, scope: !8884)
!8890 = !DILocation(line: 474, column: 27, scope: !8884)
!8891 = !DILocation(line: 474, column: 9, scope: !8884)
!8892 = !DILocation(line: 478, column: 6, scope: !8884)
!8893 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc3ffi5c_str7CString11into_string28_$u7b$$u7b$closure$u7d$$u7d$17hba6701cc4040fa31E", scope: !5593, file: !8711, line: 474, type: !8894, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8896)
!8894 = !DISubroutineType(types: !8895)
!8895 = !{!5583, !5592, !5562}
!8896 = !{!8897, !8898}
!8897 = !DILocalVariable(name: "e", arg: 2, scope: !8893, file: !8711, line: 474, type: !5562)
!8898 = !DILocalVariable(arg: 1, scope: !8893, file: !8711, line: 474, type: !5592)
!8899 = !DILocation(line: 474, column: 54, scope: !8893)
!8900 = !DILocation(line: 474, column: 55, scope: !8893)
!8901 = !DILocation(line: 475, column: 20, scope: !8893)
!8902 = !DILocation(line: 476, column: 55, scope: !8893)
!8903 = !DILocation(line: 476, column: 29, scope: !8893)
!8904 = !DILocation(line: 474, column: 58, scope: !8893)
!8905 = !DILocation(line: 477, column: 10, scope: !8893)
!8906 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str7CString10into_bytes17hac95a1737d96872bE", scope: !319, file: !8711, line: 497, type: !8907, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8909)
!8907 = !DISubroutineType(types: !8908)
!8908 = !{!20, !319}
!8909 = !{!8910, !8911, !8913, !8915, !8918, !8919}
!8910 = !DILocalVariable(name: "self", arg: 1, scope: !8906, file: !8711, line: 497, type: !319)
!8911 = !DILocalVariable(name: "vec", scope: !8912, file: !8711, line: 498, type: !20, align: 8)
!8912 = distinct !DILexicalBlock(scope: !8906, file: !8711, line: 498, column: 9)
!8913 = !DILocalVariable(name: "_nul", scope: !8914, file: !8711, line: 499, type: !83, align: 1)
!8914 = distinct !DILexicalBlock(scope: !8912, file: !8711, line: 499, column: 9)
!8915 = !DILocalVariable(name: "left_val", scope: !8916, file: !8711, line: 500, type: !82, align: 8)
!8916 = !DILexicalBlockFile(scope: !8917, file: !8711, discriminator: 0)
!8917 = distinct !DILexicalBlock(scope: !8914, file: !7357, line: 39, column: 13)
!8918 = !DILocalVariable(name: "right_val", scope: !8916, file: !8711, line: 500, type: !82, align: 8)
!8919 = !DILocalVariable(name: "kind", scope: !8920, file: !8711, line: 500, type: !364, align: 1)
!8920 = !DILexicalBlockFile(scope: !8921, file: !8711, discriminator: 0)
!8921 = distinct !DILexicalBlock(scope: !8917, file: !7357, line: 41, column: 21)
!8922 = !DILocation(line: 498, column: 13, scope: !8912)
!8923 = !DILocation(line: 497, column: 23, scope: !8906)
!8924 = !DILocation(line: 499, column: 13, scope: !8914)
!8925 = !DILocation(line: 498, column: 32, scope: !8906)
!8926 = !DILocation(line: 498, column: 23, scope: !8906)
!8927 = !DILocation(line: 499, column: 20, scope: !8912)
!8928 = !DILocation(line: 500, column: 9, scope: !8914)
!8929 = !DILocation(line: 500, column: 9, scope: !8916)
!8930 = !DILocation(line: 502, column: 6, scope: !8906)
!8931 = !DILocation(line: 500, column: 9, scope: !8920)
!8932 = distinct !DISubprogram(name: "into_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString19into_bytes_with_nul17h2ff3bf2c3e351f0eE", scope: !319, file: !8711, line: 518, type: !8907, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8933)
!8933 = !{!8934}
!8934 = !DILocalVariable(name: "self", arg: 1, scope: !8932, file: !8711, line: 518, type: !319)
!8935 = !DILocation(line: 518, column: 32, scope: !8932)
!8936 = !DILocation(line: 519, column: 18, scope: !8932)
!8937 = !DILocation(line: 519, column: 9, scope: !8932)
!8938 = !DILocation(line: 520, column: 6, scope: !8932)
!8939 = distinct !DISubprogram(name: "as_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17h909920e6f3ded25eE", scope: !319, file: !8711, line: 561, type: !8940, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8943)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{!1433, !8942}
!8942 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::CString", baseType: !319, size: 64, align: 64, dwarfAddressSpace: 0)
!8943 = !{!8944}
!8944 = !DILocalVariable(name: "self", arg: 1, scope: !8939, file: !8711, line: 561, type: !8942)
!8945 = !DILocation(line: 561, column: 30, scope: !8939)
!8946 = !DILocation(line: 562, column: 9, scope: !8939)
!8947 = !DILocation(line: 563, column: 6, scope: !8939)
!8948 = distinct !DISubprogram(name: "into_boxed_c_str", linkageName: "_ZN5alloc3ffi5c_str7CString16into_boxed_c_str17h75e78c213e56f077E", scope: !319, file: !8711, line: 598, type: !8949, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8951)
!8949 = !DISubroutineType(types: !8950)
!8950 = !{!7903, !319}
!8951 = !{!8952}
!8952 = !DILocalVariable(name: "self", arg: 1, scope: !8948, file: !8711, line: 598, type: !319)
!8953 = !DILocation(line: 598, column: 29, scope: !8948)
!8954 = !DILocation(line: 599, column: 46, scope: !8948)
!8955 = !DILocation(line: 599, column: 32, scope: !8948)
!8956 = !DILocation(line: 599, column: 18, scope: !8948)
!8957 = !DILocation(line: 600, column: 6, scope: !8948)
!8958 = distinct !DISubprogram(name: "into_inner", linkageName: "_ZN5alloc3ffi5c_str7CString10into_inner17h986f6c45f1867645E", scope: !319, file: !8711, line: 604, type: !8959, scopeLine: 604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8961)
!8959 = !DISubroutineType(types: !8960)
!8960 = !{!322, !319}
!8961 = !{!8962, !8963}
!8962 = !DILocalVariable(name: "self", arg: 1, scope: !8958, file: !8711, line: 604, type: !319)
!8963 = !DILocalVariable(name: "this", scope: !8964, file: !8711, line: 609, type: !8965, align: 8)
!8964 = distinct !DILexicalBlock(scope: !8958, file: !8711, line: 609, column: 9)
!8965 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::ffi::c_str::CString>", scope: !756, file: !2, size: 128, align: 64, elements: !8966, templateParams: !2077, identifier: "517efc89c1c843357850a5902ae8384c")
!8966 = !{!8967}
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8965, file: !2, baseType: !319, size: 128, align: 64)
!8968 = !DILocation(line: 604, column: 19, scope: !8958)
!8969 = !DILocation(line: 609, column: 13, scope: !8964)
!8970 = !DILocalVariable(name: "value", arg: 1, scope: !8971, file: !1974, line: 70, type: !319)
!8971 = distinct !DISubprogram(name: "new<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hcad1764f44086bf5E", scope: !8965, file: !1974, line: 70, type: !8972, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2077, retainedNodes: !8974)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{!8965, !319}
!8974 = !{!8970}
!8975 = !DILocation(line: 70, column: 22, scope: !8971, inlinedAt: !8976)
!8976 = distinct !DILocation(line: 609, column: 20, scope: !8958)
!8977 = !DILocation(line: 71, column: 9, scope: !8971, inlinedAt: !8976)
!8978 = !DILocation(line: 72, column: 6, scope: !8971, inlinedAt: !8976)
!8979 = !DILocation(line: 609, column: 20, scope: !8958)
!8980 = !DILocalVariable(name: "self", arg: 1, scope: !8981, file: !1974, line: 153, type: !8984)
!8981 = distinct !DISubprogram(name: "deref<alloc::ffi::c_str::CString>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc69bf419edefb9a7E", scope: !6887, file: !1974, line: 153, type: !8982, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !2077, retainedNodes: !8985)
!8982 = !DISubroutineType(types: !8983)
!8983 = !{!8942, !8984}
!8984 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::ffi::c_str::CString>", baseType: !8965, size: 64, align: 64, dwarfAddressSpace: 0)
!8985 = !{!8980}
!8986 = !DILocation(line: 153, column: 14, scope: !8981, inlinedAt: !8987)
!8987 = distinct !DILocation(line: 610, column: 29, scope: !8964)
!8988 = !DILocation(line: 610, column: 18, scope: !8964)
!8989 = !DILocation(line: 611, column: 6, scope: !8958)
!8990 = distinct !DISubprogram(name: "from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString27from_vec_with_nul_unchecked17h01ade982d7854614E", scope: !319, file: !8711, line: 632, type: !8848, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !8991)
!8991 = !{!8992}
!8992 = !DILocalVariable(name: "v", arg: 1, scope: !8990, file: !8711, line: 632, type: !20)
!8993 = !DILocation(line: 632, column: 47, scope: !8990)
!8994 = !DILocation(line: 633, column: 41, scope: !8990)
!8995 = !DILocation(line: 633, column: 23, scope: !8990)
!8996 = !DILocation(line: 633, column: 61, scope: !8990)
!8997 = !DILocation(line: 633, column: 9, scope: !8990)
!8998 = !DILocation(line: 634, column: 18, scope: !8990)
!8999 = !DILocation(line: 635, column: 6, scope: !8990)
!9000 = distinct !DISubprogram(name: "_from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17h61656e2251656008E", scope: !319, file: !8711, line: 637, type: !8848, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9001)
!9001 = !{!9002}
!9002 = !DILocalVariable(name: "v", arg: 1, scope: !9000, file: !8711, line: 637, type: !20)
!9003 = !DILocation(line: 637, column: 44, scope: !9000)
!9004 = !DILocation(line: 638, column: 23, scope: !9000)
!9005 = !DILocation(line: 638, column: 9, scope: !9000)
!9006 = !DILocation(line: 639, column: 6, scope: !9000)
!9007 = distinct !DISubprogram(name: "from_vec_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17from_vec_with_nul17hb246718b0c235e34E", scope: !319, file: !8711, line: 675, type: !9008, scopeLine: 675, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9025)
!9008 = !DISubroutineType(types: !9009)
!9009 = !{!9010, !20}
!9010 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::FromVecWithNulError>", scope: !848, file: !2, size: 320, align: 64, elements: !9011, templateParams: !45, identifier: "8e8fe24737d6440e62c0049e547b1fce")
!9011 = !{!9012}
!9012 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9010, file: !2, size: 320, align: 64, elements: !9013, templateParams: !45, identifier: "2ce5172c4efbd907cb30f81d54645d5", discriminator: !9024)
!9013 = !{!9014, !9020}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !9012, file: !2, baseType: !9015, size: 320, align: 64, extraData: i64 2)
!9015 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !9010, file: !2, size: 320, align: 64, elements: !9016, templateParams: !9018, identifier: "795a5a2c01443915f4447c84de938226")
!9016 = !{!9017}
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9015, file: !2, baseType: !319, size: 128, align: 64, offset: 64)
!9018 = !{!2078, !9019}
!9019 = !DITemplateTypeParameter(name: "E", type: !8712)
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !9012, file: !2, baseType: !9021, size: 320, align: 64)
!9021 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !9010, file: !2, size: 320, align: 64, elements: !9022, templateParams: !9018, identifier: "aca05d2fe2bde6923eab7332aec42ed7")
!9022 = !{!9023}
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9021, file: !2, baseType: !8712, size: 320, align: 64)
!9024 = !DIDerivedType(tag: DW_TAG_member, scope: !9010, file: !2, baseType: !179, size: 64, align: 64, flags: DIFlagArtificial)
!9025 = !{!9026, !9027, !9029, !9031, !9032}
!9026 = !DILocalVariable(name: "v", arg: 1, scope: !9007, file: !8711, line: 675, type: !20)
!9027 = !DILocalVariable(name: "nul_pos", scope: !9028, file: !8711, line: 676, type: !1126, align: 8)
!9028 = distinct !DILexicalBlock(scope: !9007, file: !8711, line: 676, column: 9)
!9029 = !DILocalVariable(name: "nul_pos", scope: !9030, file: !8711, line: 678, type: !9, align: 8)
!9030 = distinct !DILexicalBlock(scope: !9028, file: !8711, line: 678, column: 13)
!9031 = !DILocalVariable(name: "nul_pos", scope: !9030, file: !8711, line: 678, type: !289, align: 8)
!9032 = !DILocalVariable(name: "nul_pos", scope: !9033, file: !8711, line: 683, type: !9, align: 8)
!9033 = distinct !DILexicalBlock(scope: !9028, file: !8711, line: 683, column: 13)
!9034 = !DILocation(line: 675, column: 30, scope: !9007)
!9035 = !DILocation(line: 676, column: 13, scope: !9028)
!9036 = !DILocation(line: 676, column: 41, scope: !9007)
!9037 = !DILocation(line: 676, column: 23, scope: !9007)
!9038 = !DILocation(line: 677, column: 15, scope: !9028)
!9039 = !DILocation(line: 677, column: 9, scope: !9028)
!9040 = !DILocation(line: 688, column: 29, scope: !9028)
!9041 = !DILocation(line: 687, column: 25, scope: !9028)
!9042 = !DILocation(line: 687, column: 21, scope: !9028)
!9043 = !DILocation(line: 690, column: 14, scope: !9028)
!9044 = !DILocation(line: 678, column: 18, scope: !9028)
!9045 = !DILocation(line: 678, column: 18, scope: !9030)
!9046 = !DILocation(line: 678, column: 30, scope: !9028)
!9047 = !DILocation(line: 678, column: 45, scope: !9028)
!9048 = !DILocation(line: 683, column: 18, scope: !9028)
!9049 = !DILocation(line: 683, column: 18, scope: !9033)
!9050 = !DILocation(line: 684, column: 29, scope: !9033)
!9051 = !DILocation(line: 683, column: 34, scope: !9033)
!9052 = !DILocation(line: 683, column: 30, scope: !9033)
!9053 = !DILocation(line: 686, column: 14, scope: !9028)
!9054 = !DILocation(line: 681, column: 29, scope: !9030)
!9055 = !DILocation(line: 681, column: 17, scope: !9030)
!9056 = !DILocation(line: 682, column: 13, scope: !9028)
!9057 = !DILocation(line: 692, column: 6, scope: !9007)
!9058 = distinct !DISubprogram(name: "drop", linkageName: "_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h75b61064575e8165E", scope: !9059, file: !8711, line: 701, type: !9060, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9063)
!9059 = !DINamespace(name: "{impl#2}", scope: !299)
!9060 = !DISubroutineType(types: !9061)
!9061 = !{null, !9062}
!9062 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::ffi::c_str::CString", baseType: !319, size: 64, align: 64, dwarfAddressSpace: 0)
!9063 = !{!9064}
!9064 = !DILocalVariable(name: "self", arg: 1, scope: !9058, file: !8711, line: 701, type: !9062)
!9065 = !DILocation(line: 701, column: 13, scope: !9058)
!9066 = !DILocation(line: 703, column: 14, scope: !9058)
!9067 = !DILocation(line: 703, column: 13, scope: !9058)
!9068 = !DILocation(line: 705, column: 6, scope: !9058)
!9069 = distinct !DISubprogram(name: "deref", linkageName: "_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2642b73ee5bac692E", scope: !9070, file: !8711, line: 713, type: !9071, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9073)
!9070 = !DINamespace(name: "{impl#3}", scope: !299)
!9071 = !DISubroutineType(types: !9072)
!9072 = !{!1437, !8942}
!9073 = !{!9074}
!9074 = !DILocalVariable(name: "self", arg: 1, scope: !9069, file: !8711, line: 713, type: !8942)
!9075 = !DILocation(line: 713, column: 14, scope: !9069)
!9076 = !DILocation(line: 714, column: 54, scope: !9069)
!9077 = !DILocation(line: 714, column: 18, scope: !9069)
!9078 = !DILocation(line: 715, column: 6, scope: !9069)
!9079 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN63_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..fmt..Debug$GT$3fmt17hff8af2778d2a7e4fE", scope: !9080, file: !8711, line: 720, type: !9081, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9083)
!9080 = !DINamespace(name: "{impl#4}", scope: !299)
!9081 = !DISubroutineType(types: !9082)
!9082 = !{!1103, !8942, !1119}
!9083 = !{!9084, !9085}
!9084 = !DILocalVariable(name: "self", arg: 1, scope: !9079, file: !8711, line: 720, type: !8942)
!9085 = !DILocalVariable(name: "f", arg: 2, scope: !9079, file: !8711, line: 720, type: !1119)
!9086 = !DILocation(line: 720, column: 12, scope: !9079)
!9087 = !DILocation(line: 720, column: 19, scope: !9079)
!9088 = !DILocation(line: 721, column: 26, scope: !9079)
!9089 = !DILocation(line: 721, column: 9, scope: !9079)
!9090 = !DILocation(line: 722, column: 6, scope: !9079)
!9091 = distinct !DISubprogram(name: "default", linkageName: "_ZN69_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..default..Default$GT$7default17h65e880341a32c7f3E", scope: !9092, file: !8711, line: 739, type: !9093, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9095)
!9092 = !DINamespace(name: "{impl#6}", scope: !299)
!9093 = !DISubroutineType(types: !9094)
!9094 = !{!319}
!9095 = !{!9096}
!9096 = !DILocalVariable(name: "a", scope: !9097, file: !8711, line: 740, type: !1437, align: 8)
!9097 = distinct !DILexicalBlock(scope: !9091, file: !8711, line: 740, column: 9)
!9098 = !DILocation(line: 740, column: 24, scope: !9091)
!9099 = !DILocation(line: 740, column: 13, scope: !9097)
!9100 = !DILocation(line: 741, column: 9, scope: !9097)
!9101 = !DILocation(line: 742, column: 6, scope: !9091)
!9102 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc3ffi5c_str131_$LT$impl$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17h58e92393fe4c5a1fE", scope: !9103, file: !8711, line: 768, type: !9104, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9106)
!9103 = !DINamespace(name: "{impl#9}", scope: !299)
!9104 = !DISubroutineType(types: !9105)
!9105 = !{!7903, !1437}
!9106 = !{!9107, !9108}
!9107 = !DILocalVariable(name: "s", arg: 1, scope: !9102, file: !8711, line: 768, type: !1437)
!9108 = !DILocalVariable(name: "boxed", scope: !9109, file: !8711, line: 769, type: !322, align: 8)
!9109 = distinct !DILexicalBlock(scope: !9102, file: !8711, line: 769, column: 9)
!9110 = !DILocation(line: 768, column: 13, scope: !9102)
!9111 = !DILocation(line: 769, column: 42, scope: !9102)
!9112 = !DILocation(line: 769, column: 32, scope: !9102)
!9113 = !DILocation(line: 769, column: 13, scope: !9109)
!9114 = !DILocation(line: 770, column: 32, scope: !9109)
!9115 = !DILocation(line: 770, column: 18, scope: !9109)
!9116 = !DILocation(line: 771, column: 6, scope: !9102)
!9117 = distinct !DISubprogram(name: "from", linkageName: "_ZN121_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$$GT$4from17hf392d856784d5b7cE", scope: !9118, file: !8711, line: 791, type: !9119, scopeLine: 791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9121)
!9118 = !DINamespace(name: "{impl#11}", scope: !299)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{!319, !7903}
!9121 = !{!9122, !9123}
!9122 = !DILocalVariable(name: "s", arg: 1, scope: !9117, file: !8711, line: 791, type: !7903)
!9123 = !DILocalVariable(name: "raw", scope: !9124, file: !8711, line: 792, type: !2681, align: 8)
!9124 = distinct !DILexicalBlock(scope: !9117, file: !8711, line: 792, column: 9)
!9125 = !DILocation(line: 791, column: 13, scope: !9117)
!9126 = !DILocation(line: 792, column: 19, scope: !9117)
!9127 = !DILocation(line: 792, column: 13, scope: !9124)
!9128 = !DILocation(line: 793, column: 35, scope: !9124)
!9129 = !DILocation(line: 793, column: 9, scope: !9124)
!9130 = !DILocation(line: 794, column: 6, scope: !9117)
!9131 = distinct !DISubprogram(name: "default", linkageName: "_ZN5alloc3ffi5c_str100_$LT$impl$u20$core..default..Default$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$7default17hde74fd0caad3e87dE", scope: !9132, file: !8711, line: 913, type: !9133, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9135)
!9132 = !DINamespace(name: "{impl#22}", scope: !299)
!9133 = !DISubroutineType(types: !9134)
!9134 = !{!7903}
!9135 = !{!9136}
!9136 = !DILocalVariable(name: "boxed", scope: !9137, file: !8711, line: 914, type: !322, align: 8)
!9137 = distinct !DILexicalBlock(scope: !9131, file: !8711, line: 914, column: 9)
!9138 = !DILocation(line: 914, column: 42, scope: !9131)
!9139 = !DILocation(line: 914, column: 32, scope: !9131)
!9140 = !DILocation(line: 914, column: 13, scope: !9137)
!9141 = !DILocation(line: 915, column: 32, scope: !9137)
!9142 = !DILocation(line: 915, column: 18, scope: !9137)
!9143 = !DILocation(line: 916, column: 6, scope: !9131)
!9144 = distinct !DISubprogram(name: "nul_position", linkageName: "_ZN5alloc3ffi5c_str8NulError12nul_position17ha9cdcfcab3269420E", scope: !8747, file: !8711, line: 936, type: !9145, scopeLine: 936, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9148)
!9145 = !DISubroutineType(types: !9146)
!9146 = !{!9, !9147}
!9147 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::NulError", baseType: !8747, size: 64, align: 64, dwarfAddressSpace: 0)
!9148 = !{!9149}
!9149 = !DILocalVariable(name: "self", arg: 1, scope: !9144, file: !8711, line: 936, type: !9147)
!9150 = !DILocation(line: 936, column: 25, scope: !9144)
!9151 = !DILocation(line: 937, column: 9, scope: !9144)
!9152 = !DILocation(line: 938, column: 6, scope: !9144)
!9153 = distinct !DISubprogram(name: "into_vec", linkageName: "_ZN5alloc3ffi5c_str8NulError8into_vec17h8e1257e2d5f2c786E", scope: !8747, file: !8711, line: 953, type: !9154, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9156)
!9154 = !DISubroutineType(types: !9155)
!9155 = !{!20, !8747}
!9156 = !{!9157}
!9157 = !DILocalVariable(name: "self", arg: 1, scope: !9153, file: !8711, line: 953, type: !8747)
!9158 = !DILocation(line: 953, column: 21, scope: !9153)
!9159 = !DILocation(line: 954, column: 9, scope: !9153)
!9160 = !DILocation(line: 955, column: 6, scope: !9153)
!9161 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Display$GT$3fmt17hb3e4057fa7d827f6E", scope: !9162, file: !8711, line: 960, type: !9163, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9165)
!9162 = !DINamespace(name: "{impl#24}", scope: !299)
!9163 = !DISubroutineType(types: !9164)
!9164 = !{!1103, !9147, !1119}
!9165 = !{!9166, !9167}
!9166 = !DILocalVariable(name: "self", arg: 1, scope: !9161, file: !8711, line: 960, type: !9147)
!9167 = !DILocalVariable(name: "f", arg: 2, scope: !9161, file: !8711, line: 960, type: !1119)
!9168 = !DILocation(line: 960, column: 12, scope: !9161)
!9169 = !DILocation(line: 960, column: 19, scope: !9161)
!9170 = !DILocation(line: 961, column: 9, scope: !9161)
!9171 = !DILocation(line: 962, column: 6, scope: !9161)
!9172 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN77_$LT$alloc..ffi..c_str..FromVecWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h419e77014ad7da20E", scope: !9173, file: !8711, line: 967, type: !9174, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9176)
!9173 = !DINamespace(name: "{impl#25}", scope: !299)
!9174 = !DISubroutineType(types: !9175)
!9175 = !{!1103, !8718, !1119}
!9176 = !{!9177, !9178, !9179}
!9177 = !DILocalVariable(name: "self", arg: 1, scope: !9172, file: !8711, line: 967, type: !8718)
!9178 = !DILocalVariable(name: "f", arg: 2, scope: !9172, file: !8711, line: 967, type: !1119)
!9179 = !DILocalVariable(name: "pos", scope: !9180, file: !8711, line: 969, type: !9, align: 8)
!9180 = distinct !DILexicalBlock(scope: !9172, file: !8711, line: 969, column: 13)
!9181 = !DILocation(line: 967, column: 12, scope: !9172)
!9182 = !DILocation(line: 967, column: 19, scope: !9172)
!9183 = !DILocation(line: 969, column: 52, scope: !9180)
!9184 = !DILocation(line: 968, column: 15, scope: !9172)
!9185 = !DILocation(line: 968, column: 9, scope: !9172)
!9186 = !DILocation(line: 969, column: 52, scope: !9172)
!9187 = !DILocation(line: 970, column: 17, scope: !9180)
!9188 = !DILocation(line: 973, column: 17, scope: !9172)
!9189 = !DILocation(line: 976, column: 6, scope: !9172)
!9190 = distinct !DISubprogram(name: "into_cstring", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError12into_cstring17h749cadedfbd135faE", scope: !5583, file: !8711, line: 984, type: !9191, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9193)
!9191 = !DISubroutineType(types: !9192)
!9192 = !{!319, !5583}
!9193 = !{!9194}
!9194 = !DILocalVariable(name: "self", arg: 1, scope: !9190, file: !8711, line: 984, type: !5583)
!9195 = !DILocation(line: 984, column: 25, scope: !9190)
!9196 = !DILocation(line: 985, column: 9, scope: !9190)
!9197 = !DILocation(line: 986, column: 6, scope: !9190)
!9198 = distinct !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError10utf8_error17hf0bb201c84486c81E", scope: !5583, file: !8711, line: 991, type: !9199, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9202)
!9199 = !DISubroutineType(types: !9200)
!9200 = !{!131, !9201}
!9201 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::IntoStringError", baseType: !5583, size: 64, align: 64, dwarfAddressSpace: 0)
!9202 = !{!9203}
!9203 = !DILocalVariable(name: "self", arg: 1, scope: !9198, file: !8711, line: 991, type: !9201)
!9204 = !DILocation(line: 991, column: 23, scope: !9198)
!9205 = !DILocation(line: 992, column: 9, scope: !9198)
!9206 = !DILocation(line: 993, column: 6, scope: !9198)
!9207 = distinct !DISubprogram(name: "description", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError11description17h3b2f2ceeced04292E", scope: !5583, file: !8711, line: 997, type: !9208, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9210)
!9208 = !DISubroutineType(types: !9209)
!9209 = !{!145, !9201}
!9210 = !{!9211}
!9211 = !DILocalVariable(name: "self", arg: 1, scope: !9207, file: !8711, line: 997, type: !9201)
!9212 = !DILocation(line: 997, column: 20, scope: !9207)
!9213 = !DILocation(line: 999, column: 6, scope: !9207)
!9214 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..fmt..Display$GT$3fmt17hd9d51bd37ae2d213E", scope: !9215, file: !8711, line: 1005, type: !9216, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9218)
!9215 = !DINamespace(name: "{impl#28}", scope: !299)
!9216 = !DISubroutineType(types: !9217)
!9217 = !{!1103, !9201, !1119}
!9218 = !{!9219, !9220}
!9219 = !DILocalVariable(name: "self", arg: 1, scope: !9214, file: !8711, line: 1005, type: !9201)
!9220 = !DILocalVariable(name: "f", arg: 2, scope: !9214, file: !8711, line: 1005, type: !1119)
!9221 = !DILocation(line: 1005, column: 12, scope: !9214)
!9222 = !DILocation(line: 1005, column: 19, scope: !9214)
!9223 = !DILocation(line: 1006, column: 9, scope: !9214)
!9224 = !DILocation(line: 1007, column: 6, scope: !9214)
!9225 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17h1919e5d1e79f8eafE", scope: !9226, file: !8711, line: 1014, type: !9227, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9229)
!9226 = !DINamespace(name: "{impl#29}", scope: !299)
!9227 = !DISubroutineType(types: !9228)
!9228 = !{!319, !1437}
!9229 = !{!9230}
!9230 = !DILocalVariable(name: "self", arg: 1, scope: !9225, file: !8711, line: 1014, type: !1437)
!9231 = !DILocation(line: 1014, column: 17, scope: !9225)
!9232 = !DILocation(line: 1015, column: 26, scope: !9225)
!9233 = !DILocation(line: 1015, column: 9, scope: !9225)
!9234 = !DILocation(line: 1016, column: 6, scope: !9225)
!9235 = distinct !DISubprogram(name: "clone_into", linkageName: "_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$10clone_into17h03a81efc2c066042E", scope: !9226, file: !8711, line: 1018, type: !9236, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9238)
!9236 = !DISubroutineType(types: !9237)
!9237 = !{null, !1437, !9062}
!9238 = !{!9239, !9240, !9241}
!9239 = !DILocalVariable(name: "self", arg: 1, scope: !9235, file: !8711, line: 1018, type: !1437)
!9240 = !DILocalVariable(name: "target", arg: 2, scope: !9235, file: !8711, line: 1018, type: !9062)
!9241 = !DILocalVariable(name: "b", scope: !9242, file: !8711, line: 1019, type: !20, align: 8)
!9242 = distinct !DILexicalBlock(scope: !9235, file: !8711, line: 1019, column: 9)
!9243 = !DILocation(line: 1018, column: 19, scope: !9235)
!9244 = !DILocation(line: 1018, column: 26, scope: !9235)
!9245 = !DILocation(line: 1019, column: 13, scope: !9242)
!9246 = !DILocation(line: 1019, column: 30, scope: !9235)
!9247 = !DILocation(line: 1019, column: 21, scope: !9235)
!9248 = !DILocation(line: 1020, column: 9, scope: !9242)
!9249 = !DILocation(line: 1021, column: 24, scope: !9242)
!9250 = !DILocation(line: 1021, column: 9, scope: !9242)
!9251 = !DILocation(line: 1022, column: 6, scope: !9235)
!9252 = distinct !DISubprogram(name: "from", linkageName: "_ZN100_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$GT$4from17hdcdc015956e9b7b1E", scope: !9253, file: !8711, line: 1027, type: !9227, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9254)
!9253 = !DINamespace(name: "{impl#30}", scope: !299)
!9254 = !{!9255}
!9255 = !DILocalVariable(name: "s", arg: 1, scope: !9252, file: !8711, line: 1027, type: !1437)
!9256 = !DILocation(line: 1027, column: 13, scope: !9252)
!9257 = !DILocation(line: 1028, column: 9, scope: !9252)
!9258 = !DILocation(line: 1029, column: 6, scope: !9252)
!9259 = distinct !DISubprogram(name: "to_string_lossy", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$15to_string_lossy17h5b54fbe6e5b0926eE", scope: !810, file: !8711, line: 1096, type: !9260, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9262)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{!2464, !1437}
!9262 = !{!9263}
!9263 = !DILocalVariable(name: "self", arg: 1, scope: !9259, file: !8711, line: 1096, type: !1437)
!9264 = !DILocation(line: 1096, column: 28, scope: !9259)
!9265 = !DILocation(line: 1097, column: 33, scope: !9259)
!9266 = !DILocation(line: 1097, column: 9, scope: !9259)
!9267 = !DILocation(line: 1098, column: 6, scope: !9259)
!9268 = distinct !DISubprogram(name: "into_c_string", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$13into_c_string17h8dbb1fcfdba29e2eE", scope: !810, file: !8711, line: 1114, type: !9119, scopeLine: 1114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9269)
!9269 = !{!9270}
!9270 = !DILocalVariable(name: "self", arg: 1, scope: !9268, file: !8711, line: 1114, type: !7903)
!9271 = !DILocation(line: 1114, column: 26, scope: !9268)
!9272 = !DILocation(line: 1115, column: 9, scope: !9268)
!9273 = !DILocation(line: 1116, column: 6, scope: !9268)
!9274 = distinct !DISubprogram(name: "description", linkageName: "_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..error..Error$GT$11description17h582aa3f5fc8ae041E", scope: !9275, file: !8711, line: 1122, type: !9276, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9278)
!9275 = !DINamespace(name: "{impl#34}", scope: !299)
!9276 = !DISubroutineType(types: !9277)
!9277 = !{!145, !9147}
!9278 = !{!9279}
!9279 = !DILocalVariable(name: "self", arg: 1, scope: !9274, file: !8711, line: 1122, type: !9147)
!9280 = !DILocation(line: 1122, column: 20, scope: !9274)
!9281 = !DILocation(line: 1124, column: 6, scope: !9274)
!9282 = distinct !DISubprogram(name: "description", linkageName: "_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$11description17h8edaf0703957e2d1E", scope: !9283, file: !8711, line: 1133, type: !9208, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9284)
!9283 = !DINamespace(name: "{impl#36}", scope: !299)
!9284 = !{!9285}
!9285 = !DILocalVariable(name: "self", arg: 1, scope: !9282, file: !8711, line: 1133, type: !9201)
!9286 = !DILocation(line: 1133, column: 20, scope: !9282)
!9287 = !DILocation(line: 1135, column: 6, scope: !9282)
!9288 = distinct !DISubprogram(name: "source", linkageName: "_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$6source17h67b38d1eae1bea11E", scope: !9283, file: !8711, line: 1137, type: !9289, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9291)
!9289 = !DISubroutineType(types: !9290)
!9290 = !{!4772, !9201}
!9291 = !{!9292}
!9292 = !DILocalVariable(name: "self", arg: 1, scope: !9288, file: !8711, line: 1137, type: !9201)
!9293 = !DILocation(line: 1137, column: 15, scope: !9288)
!9294 = !DILocation(line: 1138, column: 14, scope: !9288)
!9295 = !DILocation(line: 1138, column: 9, scope: !9288)
!9296 = !DILocation(line: 1139, column: 6, scope: !9288)
!9297 = distinct !DISubprogram(name: "format_inner", linkageName: "_ZN5alloc3fmt6format12format_inner17hb15765be6333d03fE", scope: !9299, file: !9298, line: 609, type: !9301, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9303)
!9298 = !DIFile(filename: "src/fmt.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "7f5abfe7b97da66c1718bf2f419b78e9")
!9299 = !DINamespace(name: "format", scope: !9300)
!9300 = !DINamespace(name: "fmt", scope: !17)
!9301 = !DISubroutineType(types: !9302)
!9302 = !{!15, !1499}
!9303 = !{!9304, !9305, !9307}
!9304 = !DILocalVariable(name: "args", arg: 1, scope: !9297, file: !9298, line: 609, type: !1499)
!9305 = !DILocalVariable(name: "capacity", scope: !9306, file: !9298, line: 610, type: !9, align: 8)
!9306 = distinct !DILexicalBlock(scope: !9297, file: !9298, line: 610, column: 9)
!9307 = !DILocalVariable(name: "output", scope: !9308, file: !9298, line: 611, type: !15, align: 8)
!9308 = distinct !DILexicalBlock(scope: !9306, file: !9298, line: 611, column: 9)
!9309 = !DILocation(line: 611, column: 13, scope: !9308)
!9310 = !DILocation(line: 609, column: 21, scope: !9297)
!9311 = !DILocation(line: 610, column: 24, scope: !9297)
!9312 = !DILocation(line: 610, column: 13, scope: !9306)
!9313 = !DILocation(line: 611, column: 26, scope: !9306)
!9314 = !DILocation(line: 612, column: 9, scope: !9308)
!9315 = !DILocation(line: 614, column: 6, scope: !9297)
!9316 = distinct !DISubprogram(name: "rcbox_layout_for_value_layout", linkageName: "_ZN5alloc2rc29rcbox_layout_for_value_layout17hdaf3926fd0ada957E", scope: !4481, file: !9317, line: 297, type: !9318, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9320)
!9317 = !DIFile(filename: "src/rc.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "d00ce2cdc6ef29c17c2f0fcea66a6fc8")
!9318 = !DISubroutineType(types: !9319)
!9319 = !{!170, !170}
!9320 = !{!9321}
!9321 = !DILocalVariable(name: "layout", arg: 1, scope: !9316, file: !9317, line: 297, type: !170)
!9322 = !DILocation(line: 297, column: 34, scope: !9316)
!9323 = !DILocation(line: 302, column: 5, scope: !9316)
!9324 = !DILocation(line: 303, column: 2, scope: !9316)
!9325 = distinct !DISubprogram(name: "into_vec<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice4hack8into_vec17h307f4279c08bc6f0E", scope: !9327, file: !9326, line: 100, type: !9329, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !9331)
!9326 = !DIFile(filename: "src/slice.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "64e057bae5616bdde3ca3d90c2f7a63d")
!9327 = !DINamespace(name: "hack", scope: !9328)
!9328 = !DINamespace(name: "slice", scope: !17)
!9329 = !DISubroutineType(types: !9330)
!9330 = !{!20, !322}
!9331 = !{!9332, !9333, !9335, !9337}
!9332 = !DILocalVariable(name: "b", arg: 1, scope: !9325, file: !9326, line: 100, type: !322)
!9333 = !DILocalVariable(name: "len", scope: !9334, file: !9326, line: 102, type: !9, align: 8)
!9334 = distinct !DILexicalBlock(scope: !9325, file: !9326, line: 102, column: 13)
!9335 = !DILocalVariable(name: "b", scope: !9336, file: !9326, line: 103, type: !2681, align: 8)
!9336 = distinct !DILexicalBlock(scope: !9334, file: !9326, line: 103, column: 13)
!9337 = !DILocalVariable(name: "alloc", scope: !9336, file: !9326, line: 103, type: !48, align: 1)
!9338 = !DILocation(line: 100, column: 38, scope: !9325)
!9339 = !DILocation(line: 103, column: 21, scope: !9336)
!9340 = !DILocation(line: 102, column: 23, scope: !9325)
!9341 = !DILocation(line: 102, column: 17, scope: !9334)
!9342 = !DILocation(line: 103, column: 30, scope: !9334)
!9343 = !DILocation(line: 103, column: 18, scope: !9334)
!9344 = !DILocation(line: 103, column: 18, scope: !9336)
!9345 = !DILocation(line: 104, column: 13, scope: !9336)
!9346 = !DILocation(line: 106, column: 6, scope: !9325)
!9347 = distinct !DISubprogram(name: "to_vec<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice4hack6to_vec17ha03f6aefba86faa7E", scope: !9327, file: !9326, line: 110, type: !9348, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !9350)
!9348 = !DISubroutineType(types: !9349)
!9349 = !{!20, !1433, !48}
!9350 = !{!9351, !9352}
!9351 = !DILocalVariable(name: "s", arg: 1, scope: !9347, file: !9326, line: 110, type: !1433)
!9352 = !DILocalVariable(name: "alloc", arg: 2, scope: !9347, file: !9326, line: 110, type: !48)
!9353 = !DILocation(line: 110, column: 48, scope: !9347)
!9354 = !DILocation(line: 110, column: 57, scope: !9347)
!9355 = !DILocation(line: 111, column: 9, scope: !9347)
!9356 = !DILocation(line: 112, column: 6, scope: !9347)
!9357 = distinct !DISubprogram(name: "to_vec<u8, alloc::alloc::Global>", linkageName: "_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h57f051fa86b83003E", scope: !9358, file: !9326, line: 161, type: !9348, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !9359)
!9358 = !DINamespace(name: "{impl#1}", scope: !9327)
!9359 = !{!9360, !9361, !9362}
!9360 = !DILocalVariable(name: "s", arg: 1, scope: !9357, file: !9326, line: 161, type: !1433)
!9361 = !DILocalVariable(name: "alloc", arg: 2, scope: !9357, file: !9326, line: 161, type: !48)
!9362 = !DILocalVariable(name: "v", scope: !9363, file: !9326, line: 162, type: !20, align: 8)
!9363 = distinct !DILexicalBlock(scope: !9357, file: !9326, line: 162, column: 13)
!9364 = !DILocation(line: 162, column: 17, scope: !9363)
!9365 = !DILocation(line: 161, column: 33, scope: !9357)
!9366 = !DILocation(line: 161, column: 45, scope: !9357)
!9367 = !DILocation(line: 162, column: 25, scope: !9357)
!9368 = !DILocation(line: 476, column: 25, scope: !8292, inlinedAt: !9369)
!9369 = distinct !DILocation(line: 167, column: 17, scope: !9363)
!9370 = !DILocation(line: 167, column: 51, scope: !9363)
!9371 = !DILocation(line: 167, column: 17, scope: !9363)
!9372 = !DILocation(line: 168, column: 17, scope: !9363)
!9373 = !DILocation(line: 171, column: 10, scope: !9357)
!9374 = distinct !DISubprogram(name: "to_vec<u8>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17haa914a405ffc8f90E", scope: !9375, file: !9326, line: 412, type: !9376, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !9378)
!9375 = !DINamespace(name: "{impl#0}", scope: !9328)
!9376 = !DISubroutineType(types: !9377)
!9377 = !{!20, !1433}
!9378 = !{!9379}
!9379 = !DILocalVariable(name: "self", arg: 1, scope: !9374, file: !9326, line: 412, type: !1433)
!9380 = !DILocation(line: 412, column: 19, scope: !9374)
!9381 = !DILocation(line: 416, column: 9, scope: !9374)
!9382 = !DILocation(line: 417, column: 6, scope: !9374)
!9383 = distinct !DISubprogram(name: "to_vec_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h2f7130b38bfec602E", scope: !9375, file: !9326, line: 436, type: !9348, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !9384)
!9384 = !{!9385, !9386}
!9385 = !DILocalVariable(name: "self", arg: 1, scope: !9383, file: !9326, line: 436, type: !1433)
!9386 = !DILocalVariable(name: "alloc", arg: 2, scope: !9383, file: !9326, line: 436, type: !48)
!9387 = !DILocation(line: 436, column: 36, scope: !9383)
!9388 = !DILocation(line: 436, column: 43, scope: !9383)
!9389 = !DILocation(line: 441, column: 9, scope: !9383)
!9390 = !DILocation(line: 442, column: 6, scope: !9383)
!9391 = distinct !DISubprogram(name: "into_vec<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17hca163af921500948E", scope: !9375, file: !9326, line: 461, type: !9329, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !9392)
!9392 = !{!9393}
!9393 = !DILocalVariable(name: "self", arg: 1, scope: !9391, file: !9326, line: 461, type: !322)
!9394 = !DILocation(line: 461, column: 35, scope: !9391)
!9395 = !DILocation(line: 463, column: 9, scope: !9391)
!9396 = !DILocation(line: 464, column: 6, scope: !9391)
!9397 = distinct !DISubprogram(name: "repeat<u8>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6repeat17hf1b491b3793cce54E", scope: !9375, file: !9326, line: 489, type: !9398, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !9400)
!9398 = !DISubroutineType(types: !9399)
!9399 = !{!20, !1433, !9}
!9400 = !{!9401, !9402, !9403, !9405, !9407, !9409, !9411}
!9401 = !DILocalVariable(name: "self", arg: 1, scope: !9397, file: !9326, line: 489, type: !1433)
!9402 = !DILocalVariable(name: "n", arg: 2, scope: !9397, file: !9326, line: 489, type: !9)
!9403 = !DILocalVariable(name: "capacity", scope: !9404, file: !9326, line: 503, type: !9, align: 8)
!9404 = distinct !DILexicalBlock(scope: !9397, file: !9326, line: 503, column: 9)
!9405 = !DILocalVariable(name: "buf", scope: !9406, file: !9326, line: 504, type: !20, align: 8)
!9406 = distinct !DILexicalBlock(scope: !9404, file: !9326, line: 504, column: 9)
!9407 = !DILocalVariable(name: "m", scope: !9408, file: !9326, line: 509, type: !9, align: 8)
!9408 = distinct !DILexicalBlock(scope: !9406, file: !9326, line: 509, column: 13)
!9409 = !DILocalVariable(name: "buf_len", scope: !9410, file: !9326, line: 520, type: !9, align: 8)
!9410 = distinct !DILexicalBlock(scope: !9408, file: !9326, line: 520, column: 21)
!9411 = !DILocalVariable(name: "rem_len", scope: !9412, file: !9326, line: 530, type: !9, align: 8)
!9412 = distinct !DILexicalBlock(scope: !9406, file: !9326, line: 530, column: 9)
!9413 = !DILocation(line: 489, column: 19, scope: !9397)
!9414 = !DILocation(line: 489, column: 26, scope: !9397)
!9415 = !DILocation(line: 504, column: 13, scope: !9406)
!9416 = !DILocation(line: 509, column: 17, scope: !9408)
!9417 = !DILocation(line: 493, column: 12, scope: !9397)
!9418 = !DILocation(line: 494, column: 20, scope: !9397)
!9419 = !DILocation(line: 503, column: 24, scope: !9397)
!9420 = !DILocation(line: 503, column: 13, scope: !9404)
!9421 = !DILocation(line: 504, column: 23, scope: !9404)
!9422 = !DILocation(line: 507, column: 9, scope: !9406)
!9423 = !DILocation(line: 509, column: 25, scope: !9406)
!9424 = !DILocation(line: 511, column: 13, scope: !9408)
!9425 = !DILocation(line: 511, column: 19, scope: !9408)
!9426 = !DILocation(line: 530, column: 34, scope: !9406)
!9427 = !DILocation(line: 530, column: 23, scope: !9406)
!9428 = !DILocation(line: 515, column: 25, scope: !9408)
!9429 = !DILocation(line: 516, column: 26, scope: !9408)
!9430 = !DILocation(line: 516, column: 58, scope: !9408)
!9431 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !9432)
!9432 = distinct !DILocation(line: 516, column: 25, scope: !9408)
!9433 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !9432)
!9434 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !9435)
!9435 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !9432)
!9436 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !9435)
!9437 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !9435)
!9438 = !DILocation(line: 517, column: 25, scope: !9408)
!9439 = !DILocation(line: 514, column: 21, scope: !9408)
!9440 = !DILocation(line: 520, column: 35, scope: !9408)
!9441 = !DILocation(line: 520, column: 25, scope: !9410)
!9442 = !DILocation(line: 521, column: 33, scope: !9410)
!9443 = !DILocation(line: 521, column: 21, scope: !9410)
!9444 = !DILocation(line: 524, column: 17, scope: !9408)
!9445 = !DILocation(line: 530, column: 13, scope: !9412)
!9446 = !DILocation(line: 531, column: 12, scope: !9412)
!9447 = !DILocation(line: 544, column: 9, scope: !9412)
!9448 = !DILocation(line: 545, column: 6, scope: !9397)
!9449 = !DILocation(line: 536, column: 21, scope: !9412)
!9450 = !DILocation(line: 537, column: 22, scope: !9412)
!9451 = !DILocation(line: 537, column: 54, scope: !9412)
!9452 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !9453)
!9453 = distinct !DILocation(line: 537, column: 21, scope: !9412)
!9454 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !9453)
!9455 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !9456)
!9456 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !9453)
!9457 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !9456)
!9458 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !9456)
!9459 = !DILocation(line: 535, column: 17, scope: !9412)
!9460 = !DILocation(line: 541, column: 17, scope: !9412)
!9461 = distinct !DISubprogram(name: "clone_into<u8, alloc::alloc::Global>", linkageName: "_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17hcd6eb75fe5a5dc28E", scope: !9462, file: !9326, line: 811, type: !9463, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !9465)
!9462 = !DINamespace(name: "{impl#8}", scope: !9328)
!9463 = !DISubroutineType(types: !9464)
!9464 = !{null, !1433, !6725}
!9465 = !{!9466, !9467}
!9466 = !DILocalVariable(name: "self", arg: 1, scope: !9461, file: !9326, line: 811, type: !1433)
!9467 = !DILocalVariable(name: "target", arg: 2, scope: !9461, file: !9326, line: 811, type: !6725)
!9468 = !DILocation(line: 811, column: 19, scope: !9461)
!9469 = !DILocation(line: 811, column: 26, scope: !9461)
!9470 = !DILocation(line: 812, column: 9, scope: !9461)
!9471 = !DILocation(line: 813, column: 9, scope: !9461)
!9472 = !DILocation(line: 814, column: 6, scope: !9461)
!9473 = distinct !DISubprogram(name: "to_owned<u8>", linkageName: "_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17h3ef3e882c1497bf2E", scope: !9474, file: !9326, line: 822, type: !9376, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !9475)
!9474 = !DINamespace(name: "{impl#9}", scope: !9328)
!9475 = !{!9476}
!9476 = !DILocalVariable(name: "self", arg: 1, scope: !9473, file: !9326, line: 822, type: !1433)
!9477 = !DILocation(line: 822, column: 17, scope: !9473)
!9478 = !DILocation(line: 823, column: 9, scope: !9473)
!9479 = !DILocation(line: 824, column: 6, scope: !9473)
!9480 = distinct !DISubprogram(name: "clone_into<u8>", linkageName: "_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17hcc2d5aabbc61457cE", scope: !9474, file: !9326, line: 831, type: !9463, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !9481)
!9481 = !{!9482, !9483}
!9482 = !DILocalVariable(name: "self", arg: 1, scope: !9480, file: !9326, line: 831, type: !1433)
!9483 = !DILocalVariable(name: "target", arg: 2, scope: !9480, file: !9326, line: 831, type: !6725)
!9484 = !DILocation(line: 831, column: 19, scope: !9480)
!9485 = !DILocation(line: 831, column: 26, scope: !9480)
!9486 = !DILocation(line: 832, column: 9, scope: !9480)
!9487 = !DILocation(line: 833, column: 6, scope: !9480)
!9488 = distinct !DISubprogram(name: "borrow", linkageName: "_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17h9031218db36dc1feE", scope: !9490, file: !9489, line: 190, type: !9491, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9493)
!9489 = !DIFile(filename: "src/str.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "ef53cb8e6f0fb8a980b919f1f4e63f77")
!9490 = !DINamespace(name: "{impl#2}", scope: !577)
!9491 = !DISubroutineType(types: !9492)
!9492 = !{!145, !8509}
!9493 = !{!9494}
!9494 = !DILocalVariable(name: "self", arg: 1, scope: !9488, file: !9489, line: 190, type: !8509)
!9495 = !DILocation(line: 190, column: 15, scope: !9488)
!9496 = !DILocation(line: 191, column: 10, scope: !9488)
!9497 = !DILocation(line: 192, column: 6, scope: !9488)
!9498 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hc87e400e78bb2238E", scope: !9499, file: !9489, line: 208, type: !9500, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9502)
!9499 = !DINamespace(name: "{impl#4}", scope: !577)
!9500 = !DISubroutineType(types: !9501)
!9501 = !{!15, !145}
!9502 = !{!9503}
!9503 = !DILocalVariable(name: "self", arg: 1, scope: !9498, file: !9489, line: 208, type: !145)
!9504 = !DILocation(line: 208, column: 17, scope: !9498)
!9505 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !9506)
!9506 = distinct !DILocation(line: 209, column: 46, scope: !9498)
!9507 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !9506)
!9508 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !9506)
!9509 = !DILocation(line: 209, column: 46, scope: !9498)
!9510 = !DILocation(line: 209, column: 18, scope: !9498)
!9511 = !DILocation(line: 210, column: 6, scope: !9498)
!9512 = distinct !DISubprogram(name: "clone_into", linkageName: "_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$10clone_into17hf47ff55e9ffcf660E", scope: !9499, file: !9489, line: 212, type: !9513, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9515)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{null, !145, !14}
!9515 = !{!9516, !9517, !9518}
!9516 = !DILocalVariable(name: "self", arg: 1, scope: !9512, file: !9489, line: 212, type: !145)
!9517 = !DILocalVariable(name: "target", arg: 2, scope: !9512, file: !9489, line: 212, type: !14)
!9518 = !DILocalVariable(name: "b", scope: !9519, file: !9489, line: 213, type: !20, align: 8)
!9519 = distinct !DILexicalBlock(scope: !9512, file: !9489, line: 213, column: 9)
!9520 = !DILocation(line: 212, column: 19, scope: !9512)
!9521 = !DILocation(line: 212, column: 26, scope: !9512)
!9522 = !DILocation(line: 213, column: 13, scope: !9519)
!9523 = !DILocation(line: 213, column: 21, scope: !9512)
!9524 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !9525)
!9525 = distinct !DILocation(line: 214, column: 9, scope: !9519)
!9526 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !9525)
!9527 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !9525)
!9528 = !DILocation(line: 214, column: 9, scope: !9519)
!9529 = !DILocation(line: 215, column: 56, scope: !9519)
!9530 = !DILocation(line: 215, column: 28, scope: !9519)
!9531 = !DILocation(line: 215, column: 9, scope: !9519)
!9532 = !DILocation(line: 216, column: 6, scope: !9512)
!9533 = distinct !DISubprogram(name: "to_lowercase", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase17h19d3621dd733411dE", scope: !576, file: !9489, line: 368, type: !9500, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9534)
!9534 = !{!9535, !9536, !9538, !9540, !9542, !9544, !9546, !9547, !9549, !9551, !9552, !9554, !9555}
!9535 = !DILocalVariable(name: "self", arg: 1, scope: !9533, file: !9489, line: 368, type: !145)
!9536 = !DILocalVariable(name: "out", scope: !9537, file: !9489, line: 369, type: !20, align: 8)
!9537 = distinct !DILexicalBlock(scope: !9533, file: !9489, line: 369, column: 9)
!9538 = !DILocalVariable(name: "rest", scope: !9539, file: !9489, line: 373, type: !145, align: 8)
!9539 = distinct !DILexicalBlock(scope: !9537, file: !9489, line: 373, column: 9)
!9540 = !DILocalVariable(name: "s", scope: !9541, file: !9489, line: 376, type: !15, align: 8)
!9541 = distinct !DILexicalBlock(scope: !9539, file: !9489, line: 376, column: 9)
!9542 = !DILocalVariable(name: "iter", scope: !9543, file: !9489, line: 378, type: !3697, align: 8)
!9543 = distinct !DILexicalBlock(scope: !9541, file: !9489, line: 378, column: 9)
!9544 = !DILocalVariable(name: "i", scope: !9545, file: !9489, line: 378, type: !9, align: 8)
!9545 = distinct !DILexicalBlock(scope: !9543, file: !9489, line: 378, column: 47)
!9546 = !DILocalVariable(name: "c", scope: !9545, file: !9489, line: 378, type: !491, align: 4)
!9547 = !DILocalVariable(name: "a", scope: !9548, file: !9489, line: 388, type: !491, align: 4)
!9548 = distinct !DILexicalBlock(scope: !9545, file: !9489, line: 388, column: 21)
!9549 = !DILocalVariable(name: "a", scope: !9550, file: !9489, line: 389, type: !491, align: 4)
!9550 = distinct !DILexicalBlock(scope: !9545, file: !9489, line: 389, column: 21)
!9551 = !DILocalVariable(name: "b", scope: !9550, file: !9489, line: 389, type: !491, align: 4)
!9552 = !DILocalVariable(name: "a", scope: !9553, file: !9489, line: 393, type: !491, align: 4)
!9553 = distinct !DILexicalBlock(scope: !9545, file: !9489, line: 393, column: 21)
!9554 = !DILocalVariable(name: "b", scope: !9553, file: !9489, line: 393, type: !491, align: 4)
!9555 = !DILocalVariable(name: "c", scope: !9553, file: !9489, line: 393, type: !491, align: 4)
!9556 = !DILocation(line: 376, column: 13, scope: !9541)
!9557 = !DILocation(line: 368, column: 25, scope: !9533)
!9558 = !DILocation(line: 369, column: 13, scope: !9537)
!9559 = !DILocation(line: 378, column: 23, scope: !9543)
!9560 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !9561)
!9561 = distinct !DILocation(line: 369, column: 39, scope: !9533)
!9562 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !9561)
!9563 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !9561)
!9564 = !DILocation(line: 369, column: 39, scope: !9533)
!9565 = !DILocation(line: 369, column: 19, scope: !9533)
!9566 = !DILocation(line: 373, column: 48, scope: !9537)
!9567 = !DILocation(line: 373, column: 29, scope: !9537)
!9568 = !DILocation(line: 373, column: 13, scope: !9539)
!9569 = !DILocation(line: 376, column: 58, scope: !9539)
!9570 = !DILocation(line: 376, column: 30, scope: !9539)
!9571 = !DILocation(line: 378, column: 23, scope: !9541)
!9572 = !DILocation(line: 378, column: 9, scope: !9543)
!9573 = !DILocation(line: 419, column: 6, scope: !9533)
!9574 = !DILocation(line: 378, column: 14, scope: !9543)
!9575 = !DILocation(line: 378, column: 14, scope: !9545)
!9576 = !DILocation(line: 378, column: 17, scope: !9543)
!9577 = !DILocation(line: 378, column: 17, scope: !9545)
!9578 = !DILocation(line: 379, column: 16, scope: !9545)
!9579 = !DILocation(line: 385, column: 17, scope: !9545)
!9580 = !DILocation(line: 387, column: 23, scope: !9545)
!9581 = !DILocation(line: 387, column: 17, scope: !9545)
!9582 = !DILocation(line: 388, column: 22, scope: !9545)
!9583 = !DILocation(line: 388, column: 22, scope: !9548)
!9584 = !DILocation(line: 388, column: 37, scope: !9548)
!9585 = !DILocation(line: 389, column: 22, scope: !9545)
!9586 = !DILocation(line: 389, column: 22, scope: !9550)
!9587 = !DILocation(line: 389, column: 25, scope: !9545)
!9588 = !DILocation(line: 389, column: 25, scope: !9550)
!9589 = !DILocation(line: 390, column: 25, scope: !9550)
!9590 = !DILocation(line: 391, column: 25, scope: !9550)
!9591 = !DILocation(line: 393, column: 22, scope: !9545)
!9592 = !DILocation(line: 393, column: 22, scope: !9553)
!9593 = !DILocation(line: 393, column: 25, scope: !9545)
!9594 = !DILocation(line: 393, column: 25, scope: !9553)
!9595 = !DILocation(line: 393, column: 28, scope: !9545)
!9596 = !DILocation(line: 393, column: 28, scope: !9553)
!9597 = !DILocation(line: 394, column: 25, scope: !9553)
!9598 = !DILocation(line: 395, column: 25, scope: !9553)
!9599 = !DILocation(line: 396, column: 25, scope: !9553)
!9600 = distinct !DISubprogram(name: "map_uppercase_sigma", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase19map_uppercase_sigma17h7f02a555d1985f07E", scope: !575, file: !9489, line: 403, type: !9601, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9603)
!9601 = !DISubroutineType(types: !9602)
!9602 = !{null, !145, !9, !14}
!9603 = !{!9604, !9605, !9606, !9607}
!9604 = !DILocalVariable(name: "from", arg: 1, scope: !9600, file: !9489, line: 403, type: !145)
!9605 = !DILocalVariable(name: "i", arg: 2, scope: !9600, file: !9489, line: 403, type: !9)
!9606 = !DILocalVariable(name: "to", arg: 3, scope: !9600, file: !9489, line: 403, type: !14)
!9607 = !DILocalVariable(name: "is_word_final", scope: !9608, file: !9489, line: 407, type: !571, align: 1)
!9608 = distinct !DILexicalBlock(scope: !9600, file: !9489, line: 407, column: 13)
!9609 = !DILocation(line: 403, column: 32, scope: !9600)
!9610 = !DILocation(line: 403, column: 44, scope: !9600)
!9611 = !DILocation(line: 403, column: 54, scope: !9600)
!9612 = !DILocation(line: 407, column: 17, scope: !9608)
!9613 = !DILocation(line: 406, column: 27, scope: !9600)
!9614 = !DILocation(line: 406, column: 13, scope: !9600)
!9615 = !DILocation(line: 407, column: 65, scope: !9600)
!9616 = !DILocation(line: 407, column: 60, scope: !9600)
!9617 = !DILocation(line: 407, column: 33, scope: !9600)
!9618 = !DILocation(line: 408, column: 53, scope: !9600)
!9619 = !DILocation(line: 408, column: 48, scope: !9600)
!9620 = !DILocation(line: 408, column: 21, scope: !9600)
!9621 = !DILocation(line: 408, column: 20, scope: !9600)
!9622 = !DILocation(line: 409, column: 28, scope: !9608)
!9623 = !DILocation(line: 409, column: 58, scope: !9608)
!9624 = !DILocation(line: 409, column: 25, scope: !9608)
!9625 = !DILocation(line: 409, column: 44, scope: !9608)
!9626 = !DILocation(line: 409, column: 13, scope: !9608)
!9627 = !DILocation(line: 410, column: 10, scope: !9600)
!9628 = distinct !DISubprogram(name: "case_ignoreable_then_cased<core::str::iter::Chars>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased17h29c46d21efdde69fE", scope: !575, file: !9489, line: 412, type: !9629, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !9635, retainedNodes: !9631)
!9629 = !DISubroutineType(types: !9630)
!9630 = !{!571, !555}
!9631 = !{!9632, !9633}
!9632 = !DILocalVariable(name: "iter", arg: 1, scope: !9628, file: !9489, line: 412, type: !555)
!9633 = !DILocalVariable(name: "c", scope: !9634, file: !9489, line: 415, type: !491, align: 4)
!9634 = distinct !DILexicalBlock(scope: !9628, file: !9489, line: 415, column: 17)
!9635 = !{!608}
!9636 = !DILocation(line: 412, column: 65, scope: !9628)
!9637 = !DILocation(line: 414, column: 19, scope: !9628)
!9638 = !DILocation(line: 414, column: 13, scope: !9628)
!9639 = !DILocation(line: 416, column: 25, scope: !9628)
!9640 = !DILocation(line: 415, column: 22, scope: !9628)
!9641 = !DILocation(line: 415, column: 22, scope: !9634)
!9642 = !DILocation(line: 415, column: 28, scope: !9634)
!9643 = !DILocation(line: 418, column: 10, scope: !9628)
!9644 = distinct !DISubprogram(name: "case_ignoreable_then_cased<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased17hd09d5a7f46b24907E", scope: !575, file: !9489, line: 412, type: !9645, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !9651, retainedNodes: !9647)
!9645 = !DISubroutineType(types: !9646)
!9646 = !{!571, !551}
!9647 = !{!9648, !9649}
!9648 = !DILocalVariable(name: "iter", arg: 1, scope: !9644, file: !9489, line: 412, type: !551)
!9649 = !DILocalVariable(name: "c", scope: !9650, file: !9489, line: 415, type: !491, align: 4)
!9650 = distinct !DILexicalBlock(scope: !9644, file: !9489, line: 415, column: 17)
!9651 = !{!579}
!9652 = !DILocation(line: 412, column: 65, scope: !9644)
!9653 = !DILocation(line: 414, column: 19, scope: !9644)
!9654 = !DILocation(line: 414, column: 13, scope: !9644)
!9655 = !DILocation(line: 416, column: 25, scope: !9644)
!9656 = !DILocation(line: 415, column: 22, scope: !9644)
!9657 = !DILocation(line: 415, column: 22, scope: !9650)
!9658 = !DILocation(line: 415, column: 28, scope: !9650)
!9659 = !DILocation(line: 418, column: 10, scope: !9644)
!9660 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17hb3211b0d5234fad3E", scope: !574, file: !9489, line: 414, type: !9661, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !9651, retainedNodes: !9663)
!9661 = !DISubroutineType(types: !9662)
!9662 = !{!571, !588, !664}
!9663 = !{!9664, !9666, !9667}
!9664 = !DILocalVariable(name: "c", scope: !9665, file: !9489, line: 414, type: !491, align: 4)
!9665 = distinct !DILexicalBlock(scope: !9660, file: !9489, line: 414, column: 40)
!9666 = !DILocalVariable(arg: 1, scope: !9660, file: !9489, line: 414, type: !588)
!9667 = !DILocalVariable(arg: 2, scope: !9660, file: !9489, line: 414, type: !664)
!9668 = !DILocation(line: 414, column: 35, scope: !9660)
!9669 = !DILocation(line: 414, column: 36, scope: !9660)
!9670 = !DILocation(line: 414, column: 37, scope: !9660)
!9671 = !DILocation(line: 414, column: 37, scope: !9665)
!9672 = !DILocation(line: 414, column: 40, scope: !9665)
!9673 = !DILocation(line: 414, column: 57, scope: !9660)
!9674 = distinct !DISubprogram(name: "{closure#0}<core::str::iter::Chars>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase26case_ignoreable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17hb4b2b00fec2f862cE", scope: !574, file: !9489, line: 414, type: !9675, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !9635, retainedNodes: !9677)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{!571, !616, !664}
!9677 = !{!9678, !9680, !9681}
!9678 = !DILocalVariable(name: "c", scope: !9679, file: !9489, line: 414, type: !491, align: 4)
!9679 = distinct !DILexicalBlock(scope: !9674, file: !9489, line: 414, column: 40)
!9680 = !DILocalVariable(arg: 1, scope: !9674, file: !9489, line: 414, type: !616)
!9681 = !DILocalVariable(arg: 2, scope: !9674, file: !9489, line: 414, type: !664)
!9682 = !DILocation(line: 414, column: 35, scope: !9674)
!9683 = !DILocation(line: 414, column: 36, scope: !9674)
!9684 = !DILocation(line: 414, column: 37, scope: !9674)
!9685 = !DILocation(line: 414, column: 37, scope: !9679)
!9686 = !DILocation(line: 414, column: 40, scope: !9679)
!9687 = !DILocation(line: 414, column: 57, scope: !9674)
!9688 = distinct !DISubprogram(name: "to_uppercase", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_uppercase17h33d1cf69e6588c20E", scope: !576, file: !9489, line: 459, type: !9500, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9689)
!9689 = !{!9690, !9691, !9693, !9695, !9697, !9699, !9701, !9703, !9705, !9706, !9708, !9709}
!9690 = !DILocalVariable(name: "self", arg: 1, scope: !9688, file: !9489, line: 459, type: !145)
!9691 = !DILocalVariable(name: "out", scope: !9692, file: !9489, line: 460, type: !20, align: 8)
!9692 = distinct !DILexicalBlock(scope: !9688, file: !9489, line: 460, column: 9)
!9693 = !DILocalVariable(name: "rest", scope: !9694, file: !9489, line: 464, type: !145, align: 8)
!9694 = distinct !DILexicalBlock(scope: !9692, file: !9489, line: 464, column: 9)
!9695 = !DILocalVariable(name: "s", scope: !9696, file: !9489, line: 467, type: !15, align: 8)
!9696 = distinct !DILexicalBlock(scope: !9694, file: !9489, line: 467, column: 9)
!9697 = !DILocalVariable(name: "iter", scope: !9698, file: !9489, line: 469, type: !555, align: 8)
!9698 = distinct !DILexicalBlock(scope: !9696, file: !9489, line: 469, column: 9)
!9699 = !DILocalVariable(name: "c", scope: !9700, file: !9489, line: 469, type: !491, align: 4)
!9700 = distinct !DILexicalBlock(scope: !9698, file: !9489, line: 469, column: 31)
!9701 = !DILocalVariable(name: "a", scope: !9702, file: !9489, line: 471, type: !491, align: 4)
!9702 = distinct !DILexicalBlock(scope: !9700, file: !9489, line: 471, column: 17)
!9703 = !DILocalVariable(name: "a", scope: !9704, file: !9489, line: 472, type: !491, align: 4)
!9704 = distinct !DILexicalBlock(scope: !9700, file: !9489, line: 472, column: 17)
!9705 = !DILocalVariable(name: "b", scope: !9704, file: !9489, line: 472, type: !491, align: 4)
!9706 = !DILocalVariable(name: "a", scope: !9707, file: !9489, line: 476, type: !491, align: 4)
!9707 = distinct !DILexicalBlock(scope: !9700, file: !9489, line: 476, column: 17)
!9708 = !DILocalVariable(name: "b", scope: !9707, file: !9489, line: 476, type: !491, align: 4)
!9709 = !DILocalVariable(name: "c", scope: !9707, file: !9489, line: 476, type: !491, align: 4)
!9710 = !DILocation(line: 467, column: 13, scope: !9696)
!9711 = !DILocation(line: 459, column: 25, scope: !9688)
!9712 = !DILocation(line: 460, column: 13, scope: !9692)
!9713 = !DILocation(line: 469, column: 18, scope: !9698)
!9714 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !9715)
!9715 = distinct !DILocation(line: 460, column: 39, scope: !9688)
!9716 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !9715)
!9717 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !9715)
!9718 = !DILocation(line: 460, column: 39, scope: !9688)
!9719 = !DILocation(line: 460, column: 19, scope: !9688)
!9720 = !DILocation(line: 464, column: 48, scope: !9692)
!9721 = !DILocation(line: 464, column: 29, scope: !9692)
!9722 = !DILocation(line: 464, column: 13, scope: !9694)
!9723 = !DILocation(line: 467, column: 58, scope: !9694)
!9724 = !DILocation(line: 467, column: 30, scope: !9694)
!9725 = !DILocation(line: 469, column: 18, scope: !9696)
!9726 = !DILocation(line: 469, column: 9, scope: !9698)
!9727 = !DILocation(line: 484, column: 6, scope: !9688)
!9728 = !DILocation(line: 469, column: 13, scope: !9698)
!9729 = !DILocation(line: 469, column: 13, scope: !9700)
!9730 = !DILocation(line: 470, column: 19, scope: !9700)
!9731 = !DILocation(line: 470, column: 13, scope: !9700)
!9732 = !DILocation(line: 471, column: 18, scope: !9700)
!9733 = !DILocation(line: 471, column: 18, scope: !9702)
!9734 = !DILocation(line: 471, column: 33, scope: !9702)
!9735 = !DILocation(line: 472, column: 18, scope: !9700)
!9736 = !DILocation(line: 472, column: 18, scope: !9704)
!9737 = !DILocation(line: 472, column: 21, scope: !9700)
!9738 = !DILocation(line: 472, column: 21, scope: !9704)
!9739 = !DILocation(line: 473, column: 21, scope: !9704)
!9740 = !DILocation(line: 474, column: 21, scope: !9704)
!9741 = !DILocation(line: 476, column: 18, scope: !9700)
!9742 = !DILocation(line: 476, column: 18, scope: !9707)
!9743 = !DILocation(line: 476, column: 21, scope: !9700)
!9744 = !DILocation(line: 476, column: 21, scope: !9707)
!9745 = !DILocation(line: 476, column: 24, scope: !9700)
!9746 = !DILocation(line: 476, column: 24, scope: !9707)
!9747 = !DILocation(line: 477, column: 21, scope: !9707)
!9748 = !DILocation(line: 478, column: 21, scope: !9707)
!9749 = !DILocation(line: 479, column: 21, scope: !9707)
!9750 = distinct !DISubprogram(name: "into_string", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$11into_string17h483417f77ba6c10aE", scope: !576, file: !9489, line: 502, type: !9751, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9753)
!9751 = !DISubroutineType(types: !9752)
!9752 = !{!15, !7891}
!9753 = !{!9754, !9755}
!9754 = !DILocalVariable(name: "self", arg: 1, scope: !9750, file: !9489, line: 502, type: !7891)
!9755 = !DILocalVariable(name: "slice", scope: !9756, file: !9489, line: 503, type: !322, align: 8)
!9756 = distinct !DILexicalBlock(scope: !9750, file: !9489, line: 503, column: 9)
!9757 = !DILocation(line: 502, column: 24, scope: !9750)
!9758 = !DILocation(line: 503, column: 21, scope: !9750)
!9759 = !DILocation(line: 503, column: 13, scope: !9756)
!9760 = !DILocation(line: 504, column: 46, scope: !9756)
!9761 = !DILocation(line: 504, column: 18, scope: !9756)
!9762 = !DILocation(line: 505, column: 6, scope: !9750)
!9763 = distinct !DISubprogram(name: "repeat", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$6repeat17hb24d73c378c68989E", scope: !576, file: !9489, line: 531, type: !9764, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9766)
!9764 = !DISubroutineType(types: !9765)
!9765 = !{!15, !145, !9}
!9766 = !{!9767, !9768}
!9767 = !DILocalVariable(name: "self", arg: 1, scope: !9763, file: !9489, line: 531, type: !145)
!9768 = !DILocalVariable(name: "n", arg: 2, scope: !9763, file: !9489, line: 531, type: !9)
!9769 = !DILocation(line: 531, column: 19, scope: !9763)
!9770 = !DILocation(line: 531, column: 26, scope: !9763)
!9771 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !9772)
!9772 = distinct !DILocation(line: 532, column: 46, scope: !9763)
!9773 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !9772)
!9774 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !9772)
!9775 = !DILocation(line: 532, column: 46, scope: !9763)
!9776 = !DILocation(line: 532, column: 18, scope: !9763)
!9777 = !DILocation(line: 533, column: 6, scope: !9763)
!9778 = distinct !DISubprogram(name: "from_boxed_utf8_unchecked", linkageName: "_ZN5alloc3str25from_boxed_utf8_unchecked17h968dd5804f8c5001E", scope: !577, file: !9489, line: 616, type: !9779, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9781)
!9779 = !DISubroutineType(types: !9780)
!9780 = !{!7891, !322}
!9781 = !{!9782}
!9782 = !DILocalVariable(name: "v", arg: 1, scope: !9778, file: !9489, line: 616, type: !322)
!9783 = !DILocation(line: 616, column: 41, scope: !9778)
!9784 = !DILocation(line: 617, column: 28, scope: !9778)
!9785 = !DILocation(line: 617, column: 14, scope: !9778)
!9786 = !DILocation(line: 618, column: 2, scope: !9778)
!9787 = distinct !DISubprogram(name: "convert_while_ascii", linkageName: "_ZN5alloc3str19convert_while_ascii17hf67c64255febbd76E", scope: !577, file: !9489, line: 626, type: !9788, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9791)
!9788 = !DISubroutineType(types: !9789)
!9789 = !{!20, !1433, !9790}
!9790 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u8) -> u8", baseType: !1723, size: 64, align: 64, dwarfAddressSpace: 0)
!9791 = !{!9792, !9793, !9794, !9796, !9798, !9800, !9802, !9804, !9806, !9808, !9810, !9812}
!9792 = !DILocalVariable(name: "b", arg: 1, scope: !9787, file: !9489, line: 626, type: !1433)
!9793 = !DILocalVariable(name: "convert", arg: 2, scope: !9787, file: !9489, line: 626, type: !9790)
!9794 = !DILocalVariable(name: "out", scope: !9795, file: !9489, line: 627, type: !20, align: 8)
!9795 = distinct !DILexicalBlock(scope: !9787, file: !9489, line: 627, column: 5)
!9796 = !DILocalVariable(name: "i", scope: !9797, file: !9489, line: 634, type: !9, align: 8)
!9797 = distinct !DILexicalBlock(scope: !9795, file: !9489, line: 634, column: 5)
!9798 = !DILocalVariable(name: "in_chunk", scope: !9799, file: !9489, line: 638, type: !1433, align: 8)
!9799 = distinct !DILexicalBlock(scope: !9797, file: !9489, line: 638, column: 13)
!9800 = !DILocalVariable(name: "out_chunk", scope: !9801, file: !9489, line: 639, type: !4900, align: 8)
!9801 = distinct !DILexicalBlock(scope: !9799, file: !9489, line: 639, column: 13)
!9802 = !DILocalVariable(name: "bits", scope: !9803, file: !9489, line: 641, type: !9, align: 8)
!9803 = distinct !DILexicalBlock(scope: !9801, file: !9489, line: 641, column: 13)
!9804 = !DILocalVariable(name: "iter", scope: !9805, file: !9489, line: 642, type: !3780, align: 8)
!9805 = distinct !DILexicalBlock(scope: !9803, file: !9489, line: 642, column: 13)
!9806 = !DILocalVariable(name: "j", scope: !9807, file: !9489, line: 642, type: !9, align: 8)
!9807 = distinct !DILexicalBlock(scope: !9805, file: !9489, line: 642, column: 38)
!9808 = !DILocalVariable(name: "iter", scope: !9809, file: !9489, line: 653, type: !3780, align: 8)
!9809 = distinct !DILexicalBlock(scope: !9803, file: !9489, line: 653, column: 13)
!9810 = !DILocalVariable(name: "j", scope: !9811, file: !9489, line: 653, type: !9, align: 8)
!9811 = distinct !DILexicalBlock(scope: !9809, file: !9489, line: 653, column: 27)
!9812 = !DILocalVariable(name: "out", scope: !9813, file: !9489, line: 655, type: !4899, align: 8)
!9813 = distinct !DILexicalBlock(scope: !9811, file: !9489, line: 655, column: 17)
!9814 = !DILocation(line: 627, column: 9, scope: !9795)
!9815 = !DILocation(line: 626, column: 24, scope: !9787)
!9816 = !DILocation(line: 626, column: 34, scope: !9787)
!9817 = !DILocation(line: 634, column: 9, scope: !9797)
!9818 = !DILocation(line: 641, column: 17, scope: !9803)
!9819 = !DILocation(line: 642, column: 22, scope: !9805)
!9820 = !DILocation(line: 653, column: 22, scope: !9809)
!9821 = !DILocation(line: 627, column: 19, scope: !9787)
!9822 = !DILocation(line: 634, column: 17, scope: !9795)
!9823 = !DILocation(line: 636, column: 9, scope: !9797)
!9824 = !DILocation(line: 636, column: 15, scope: !9797)
!9825 = !DILocation(line: 662, column: 21, scope: !9797)
!9826 = !DILocation(line: 662, column: 9, scope: !9797)
!9827 = !DILocation(line: 666, column: 2, scope: !9787)
!9828 = !DILocation(line: 638, column: 44, scope: !9797)
!9829 = !DILocation(line: 638, column: 47, scope: !9797)
!9830 = !DILocation(line: 638, column: 28, scope: !9797)
!9831 = !DILocation(line: 638, column: 17, scope: !9799)
!9832 = !DILocation(line: 639, column: 29, scope: !9799)
!9833 = !DILocation(line: 639, column: 72, scope: !9799)
!9834 = !DILocation(line: 639, column: 75, scope: !9799)
!9835 = !DILocation(line: 639, column: 17, scope: !9801)
!9836 = !DILocation(line: 641, column: 28, scope: !9801)
!9837 = !DILocation(line: 642, column: 22, scope: !9803)
!9838 = !DILocation(line: 642, column: 13, scope: !9805)
!9839 = !DILocation(line: 648, column: 16, scope: !9803)
!9840 = !DILocation(line: 642, column: 17, scope: !9805)
!9841 = !DILocation(line: 642, column: 17, scope: !9807)
!9842 = !DILocation(line: 476, column: 25, scope: !8292, inlinedAt: !9843)
!9843 = distinct !DILocation(line: 645, column: 25, scope: !9807)
!9844 = !DILocalVariable(name: "self", arg: 1, scope: !9845, file: !3211, line: 58, type: !38)
!9845 = distinct !DISubprogram(name: "cast<u8, usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h4ac9a4f22c570918E", scope: !3212, file: !3211, line: 58, type: !9846, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !9849, retainedNodes: !9848)
!9846 = !DISubroutineType(types: !9847)
!9847 = !{!1933, !38}
!9848 = !{!9844}
!9849 = !{!41, !9850}
!9850 = !DITemplateTypeParameter(name: "U", type: !9)
!9851 = !DILocation(line: 58, column: 26, scope: !9845, inlinedAt: !9852)
!9852 = distinct !DILocation(line: 645, column: 25, scope: !9807)
!9853 = !DILocalVariable(name: "self", arg: 1, scope: !9854, file: !3211, line: 915, type: !1933)
!9854 = distinct !DISubprogram(name: "add<usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h274d1917472c3ce3E", scope: !3212, file: !3211, line: 915, type: !9855, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !9857)
!9855 = !DISubroutineType(types: !9856)
!9856 = !{!1933, !1933, !9}
!9857 = !{!9853, !9858}
!9858 = !DILocalVariable(name: "count", arg: 2, scope: !9854, file: !3211, line: 915, type: !9)
!9859 = !DILocation(line: 915, column: 29, scope: !9854, inlinedAt: !9860)
!9860 = distinct !DILocation(line: 645, column: 25, scope: !9807)
!9861 = !DILocation(line: 915, column: 35, scope: !9854, inlinedAt: !9860)
!9862 = !DILocalVariable(name: "self", arg: 1, scope: !9863, file: !3211, line: 460, type: !1933)
!9863 = distinct !DISubprogram(name: "offset<usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h28c0a6862d9b5441E", scope: !3212, file: !3211, line: 460, type: !9864, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1132, retainedNodes: !9866)
!9864 = !DISubroutineType(types: !9865)
!9865 = !{!1933, !1933, !3831}
!9866 = !{!9862, !9867}
!9867 = !DILocalVariable(name: "count", arg: 2, scope: !9863, file: !3211, line: 460, type: !3831)
!9868 = !DILocation(line: 460, column: 32, scope: !9863, inlinedAt: !9869)
!9869 = distinct !DILocation(line: 920, column: 18, scope: !9854, inlinedAt: !9860)
!9870 = !DILocation(line: 460, column: 38, scope: !9863, inlinedAt: !9869)
!9871 = !DILocation(line: 465, column: 18, scope: !9863, inlinedAt: !9869)
!9872 = !DILocation(line: 645, column: 25, scope: !9807)
!9873 = !DILocation(line: 645, column: 17, scope: !9807)
!9874 = !DILocation(line: 653, column: 22, scope: !9803)
!9875 = !DILocation(line: 653, column: 13, scope: !9809)
!9876 = !DILocation(line: 660, column: 13, scope: !9803)
!9877 = !DILocation(line: 653, column: 17, scope: !9809)
!9878 = !DILocation(line: 653, column: 17, scope: !9811)
!9879 = !DILocation(line: 655, column: 27, scope: !9811)
!9880 = !DILocation(line: 655, column: 21, scope: !9813)
!9881 = !DILocation(line: 656, column: 35, scope: !9813)
!9882 = !DILocation(line: 656, column: 27, scope: !9813)
!9883 = !DILocalVariable(name: "self", arg: 1, scope: !9884, file: !1949, line: 488, type: !4899)
!9884 = distinct !DISubprogram(name: "write<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$5write17h939073862e95fbc4E", scope: !749, file: !1949, line: 488, type: !9885, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !9887)
!9885 = !DISubroutineType(types: !9886)
!9886 = !{!4006, !4899, !39}
!9887 = !{!9883, !9888}
!9888 = !DILocalVariable(name: "val", arg: 2, scope: !9884, file: !1949, line: 488, type: !39)
!9889 = !DILocation(line: 488, column: 24, scope: !9884, inlinedAt: !9890)
!9890 = distinct !DILocation(line: 656, column: 17, scope: !9813)
!9891 = !DILocation(line: 488, column: 35, scope: !9884, inlinedAt: !9890)
!9892 = !DILocalVariable(name: "val", arg: 1, scope: !9893, file: !1949, line: 290, type: !39)
!9893 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$3new17h2395388cee83bb19E", scope: !749, file: !1949, line: 290, type: !9894, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !9896)
!9894 = !DISubroutineType(types: !9895)
!9895 = !{!749, !39}
!9896 = !{!9892}
!9897 = !DILocation(line: 290, column: 22, scope: !9893, inlinedAt: !9898)
!9898 = distinct !DILocation(line: 489, column: 17, scope: !9884, inlinedAt: !9890)
!9899 = !DILocalVariable(name: "value", arg: 1, scope: !9900, file: !1974, line: 70, type: !39)
!9900 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h7021071c59593f1dE", scope: !755, file: !1974, line: 70, type: !9901, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !9903)
!9901 = !DISubroutineType(types: !9902)
!9902 = !{!755, !39}
!9903 = !{!9899}
!9904 = !DILocation(line: 70, column: 22, scope: !9900, inlinedAt: !9905)
!9905 = distinct !DILocation(line: 291, column: 30, scope: !9893, inlinedAt: !9898)
!9906 = !DILocation(line: 71, column: 9, scope: !9900, inlinedAt: !9905)
!9907 = !DILocation(line: 72, column: 6, scope: !9900, inlinedAt: !9905)
!9908 = !DILocation(line: 291, column: 9, scope: !9893, inlinedAt: !9898)
!9909 = !DILocation(line: 292, column: 6, scope: !9893, inlinedAt: !9898)
!9910 = !DILocation(line: 489, column: 9, scope: !9884, inlinedAt: !9890)
!9911 = !DILocalVariable(name: "self", arg: 1, scope: !9912, file: !1949, line: 903, type: !4899)
!9912 = distinct !DISubprogram(name: "assume_init_mut<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$15assume_init_mut17hd30ca657e4b8ef4cE", scope: !749, file: !1949, line: 903, type: !9913, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !9915)
!9913 = !DISubroutineType(types: !9914)
!9914 = !{!4006, !4899}
!9915 = !{!9911}
!9916 = !DILocation(line: 903, column: 41, scope: !9912, inlinedAt: !9917)
!9917 = distinct !DILocation(line: 491, column: 18, scope: !9884, inlinedAt: !9890)
!9918 = !DILocalVariable(name: "self", arg: 1, scope: !9919, file: !1949, line: 567, type: !4899)
!9919 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h0f44c9c040f21ae6E", scope: !749, file: !1949, line: 567, type: !9920, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !9922)
!9920 = !DISubroutineType(types: !9921)
!9921 = !{!1308, !4899}
!9922 = !{!9918}
!9923 = !DILocation(line: 567, column: 29, scope: !9919, inlinedAt: !9924)
!9924 = distinct !DILocation(line: 908, column: 19, scope: !9912, inlinedAt: !9917)
!9925 = !DILocation(line: 656, column: 17, scope: !9813)
!9926 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc6string6String3new17h080425c511ce3982E", scope: !15, file: !9927, line: 453, type: !9928, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !45)
!9927 = !DIFile(filename: "src/string.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "245c16c6cbf79983ffe118d38ca217b7")
!9928 = !DISubroutineType(types: !9929)
!9929 = !{!15}
!9930 = !DILocation(line: 454, column: 23, scope: !9926)
!9931 = !DILocation(line: 454, column: 9, scope: !9926)
!9932 = !DILocation(line: 455, column: 6, scope: !9926)
!9933 = distinct !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc6string6String13with_capacity17h7f86b8a278fea577E", scope: !15, file: !9927, line: 498, type: !9934, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9936)
!9934 = !DISubroutineType(types: !9935)
!9935 = !{!15, !9}
!9936 = !{!9937}
!9937 = !DILocalVariable(name: "capacity", arg: 1, scope: !9933, file: !9927, line: 498, type: !9)
!9938 = !DILocation(line: 498, column: 26, scope: !9933)
!9939 = !DILocation(line: 499, column: 23, scope: !9933)
!9940 = !DILocation(line: 499, column: 9, scope: !9933)
!9941 = !DILocation(line: 500, column: 6, scope: !9933)
!9942 = distinct !DISubprogram(name: "from_utf8", linkageName: "_ZN5alloc6string6String9from_utf817heb20f44b6dd13080E", scope: !15, file: !9927, line: 570, type: !9943, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9945)
!9943 = !DISubroutineType(types: !9944)
!9944 = !{!5552, !20}
!9945 = !{!9946, !9947}
!9946 = !DILocalVariable(name: "vec", arg: 1, scope: !9942, file: !9927, line: 570, type: !20)
!9947 = !DILocalVariable(name: "e", scope: !9948, file: !9927, line: 573, type: !131, align: 8)
!9948 = distinct !DILexicalBlock(scope: !9942, file: !9927, line: 573, column: 13)
!9949 = !DILocation(line: 570, column: 22, scope: !9942)
!9950 = !DILocation(line: 573, column: 17, scope: !9948)
!9951 = !DILocation(line: 571, column: 30, scope: !9942)
!9952 = !DILocation(line: 571, column: 15, scope: !9942)
!9953 = !DILocation(line: 571, column: 9, scope: !9942)
!9954 = !DILocation(line: 572, column: 26, scope: !9942)
!9955 = !DILocation(line: 572, column: 23, scope: !9942)
!9956 = !DILocation(line: 572, column: 40, scope: !9942)
!9957 = !DILocation(line: 573, column: 17, scope: !9942)
!9958 = !DILocation(line: 573, column: 27, scope: !9948)
!9959 = !DILocation(line: 573, column: 23, scope: !9948)
!9960 = !DILocation(line: 573, column: 65, scope: !9942)
!9961 = !DILocation(line: 575, column: 6, scope: !9942)
!9962 = distinct !DISubprogram(name: "from_utf8_lossy", linkageName: "_ZN5alloc6string6String15from_utf8_lossy17h3e9f57c6fd356993E", scope: !15, file: !9927, line: 629, type: !9963, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !9965)
!9963 = !DISubroutineType(types: !9964)
!9964 = !{!2464, !1433}
!9965 = !{!9966, !9967, !9973, !9975, !9981, !9983, !9986, !9987, !9990, !9992, !9994}
!9966 = !DILocalVariable(name: "v", arg: 1, scope: !9962, file: !9927, line: 629, type: !1433)
!9967 = !DILocalVariable(name: "iter", scope: !9968, file: !9927, line: 630, type: !9969, align: 8)
!9968 = distinct !DILexicalBlock(scope: !9962, file: !9927, line: 630, column: 9)
!9969 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Chunks", scope: !9970, file: !2, size: 128, align: 64, elements: !9971, templateParams: !45, identifier: "69d9b9fbdc109ff7d7575d6434a1388f")
!9970 = !DINamespace(name: "lossy", scope: !133)
!9971 = !{!9972}
!9972 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !9969, file: !2, baseType: !1433, size: 128, align: 64)
!9973 = !DILocalVariable(name: "first_valid", scope: !9974, file: !9927, line: 632, type: !145, align: 8)
!9974 = distinct !DILexicalBlock(scope: !9968, file: !9927, line: 632, column: 9)
!9975 = !DILocalVariable(name: "chunk", scope: !9976, file: !9927, line: 632, type: !9977, align: 8)
!9976 = distinct !DILexicalBlock(scope: !9968, file: !9927, line: 632, column: 60)
!9977 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Chunk", scope: !9970, file: !2, size: 256, align: 64, elements: !9978, templateParams: !45, identifier: "6d36544e58614851f55a74fd08437715")
!9978 = !{!9979, !9980}
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !9977, file: !2, baseType: !145, size: 128, align: 64)
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !9977, file: !2, baseType: !1433, size: 128, align: 64, offset: 128)
!9981 = !DILocalVariable(name: "valid", scope: !9982, file: !9927, line: 633, type: !145, align: 8)
!9982 = distinct !DILexicalBlock(scope: !9976, file: !9927, line: 633, column: 13)
!9983 = !DILocalVariable(name: "left_val", scope: !9984, file: !9927, line: 635, type: !289, align: 8)
!9984 = !DILexicalBlockFile(scope: !9985, file: !9927, discriminator: 0)
!9985 = distinct !DILexicalBlock(scope: !9982, file: !7357, line: 39, column: 13)
!9986 = !DILocalVariable(name: "right_val", scope: !9984, file: !9927, line: 635, type: !289, align: 8)
!9987 = !DILocalVariable(name: "kind", scope: !9988, file: !9927, line: 635, type: !364, align: 1)
!9988 = !DILexicalBlockFile(scope: !9989, file: !9927, discriminator: 0)
!9989 = distinct !DILexicalBlock(scope: !9985, file: !7357, line: 41, column: 21)
!9990 = !DILocalVariable(name: "res", scope: !9991, file: !9927, line: 645, type: !15, align: 8)
!9991 = distinct !DILexicalBlock(scope: !9974, file: !9927, line: 645, column: 9)
!9992 = !DILocalVariable(name: "iter", scope: !9993, file: !9927, line: 649, type: !9969, align: 8)
!9993 = distinct !DILexicalBlock(scope: !9991, file: !9927, line: 649, column: 9)
!9994 = !DILocalVariable(name: "chunk", scope: !9995, file: !9927, line: 649, type: !9977, align: 8)
!9995 = distinct !DILexicalBlock(scope: !9993, file: !9927, line: 649, column: 27)
!9996 = !DILocation(line: 629, column: 28, scope: !9962)
!9997 = !DILocation(line: 630, column: 13, scope: !9968)
!9998 = !DILocation(line: 632, column: 39, scope: !9976)
!9999 = !DILocation(line: 645, column: 13, scope: !9991)
!10000 = !DILocation(line: 649, column: 22, scope: !9993)
!10001 = !DILocation(line: 649, column: 13, scope: !9995)
!10002 = !DILocation(line: 630, column: 24, scope: !9962)
!10003 = !DILocation(line: 632, column: 48, scope: !9976)
!10004 = !DILocation(line: 632, column: 34, scope: !9976)
!10005 = !DILocation(line: 633, column: 25, scope: !9976)
!10006 = !DILocation(line: 633, column: 17, scope: !9982)
!10007 = !DILocation(line: 634, column: 16, scope: !9982)
!10008 = !DILocation(line: 640, column: 20, scope: !9968)
!10009 = !DILocation(line: 1, column: 1, scope: !10010)
!10010 = !DILexicalBlockFile(scope: !9968, file: !3667, discriminator: 0)
!10011 = !DILocation(line: 657, column: 6, scope: !9962)
!10012 = !DILocation(line: 638, column: 13, scope: !9982)
!10013 = !DILocation(line: 632, column: 13, scope: !9974)
!10014 = !DILocation(line: 645, column: 23, scope: !9974)
!10015 = !DILocation(line: 646, column: 9, scope: !9991)
!10016 = !DILocation(line: 647, column: 9, scope: !9991)
!10017 = !DILocation(line: 649, column: 22, scope: !9991)
!10018 = !DILocation(line: 649, column: 9, scope: !9993)
!10019 = !DILocation(line: 635, column: 34, scope: !9982)
!10020 = !DILocation(line: 635, column: 47, scope: !9982)
!10021 = !DILocation(line: 635, column: 17, scope: !9982)
!10022 = !DILocation(line: 635, column: 17, scope: !9984)
!10023 = !DILocation(line: 636, column: 24, scope: !9982)
!10024 = !DILocation(line: 635, column: 17, scope: !9988)
!10025 = !DILocation(line: 656, column: 20, scope: !9991)
!10026 = !DILocation(line: 656, column: 9, scope: !9991)
!10027 = !DILocation(line: 649, column: 13, scope: !9993)
!10028 = !DILocation(line: 650, column: 26, scope: !9995)
!10029 = !DILocation(line: 650, column: 13, scope: !9995)
!10030 = !DILocation(line: 651, column: 17, scope: !9995)
!10031 = !DILocation(line: 651, column: 16, scope: !9995)
!10032 = !DILocation(line: 652, column: 17, scope: !9995)
!10033 = distinct !DISubprogram(name: "from_utf16", linkageName: "_ZN5alloc6string6String10from_utf1617hb47c5ad69c075ddfE", scope: !15, file: !9927, line: 680, type: !10034, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10059)
!10034 = !DISubroutineType(types: !10035)
!10035 = !{!10036, !10054}
!10036 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::string::FromUtf16Error>", scope: !848, file: !2, size: 192, align: 64, elements: !10037, templateParams: !45, identifier: "4eb1b8068a0209be29aadbc2e20f0234")
!10037 = !{!10038}
!10038 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10036, file: !2, size: 192, align: 64, elements: !10039, templateParams: !45, identifier: "56e18f2d9a0196c83c430a33e39b4e08", discriminator: !10053)
!10039 = !{!10040, !10049}
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10038, file: !2, baseType: !10041, size: 192, align: 64)
!10041 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10036, file: !2, size: 192, align: 64, elements: !10042, templateParams: !10044, identifier: "7e3fddb6c8dbe135a06c2ab310594de2")
!10042 = !{!10043}
!10043 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10041, file: !2, baseType: !15, size: 192, align: 64)
!10044 = !{!1251, !10045}
!10045 = !DITemplateTypeParameter(name: "E", type: !10046)
!10046 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromUtf16Error", scope: !16, file: !2, align: 8, elements: !10047, templateParams: !45, identifier: "475bfa3896015dcc1b49876211dc188d")
!10047 = !{!10048}
!10048 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10046, file: !2, baseType: !7, align: 8)
!10049 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10038, file: !2, baseType: !10050, size: 192, align: 64, extraData: i64 0)
!10050 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10036, file: !2, size: 192, align: 64, elements: !10051, templateParams: !10044, identifier: "815b263b547f219ae7cd3d502785ce65")
!10051 = !{!10052}
!10052 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10050, file: !2, baseType: !10046, align: 8)
!10053 = !DIDerivedType(tag: DW_TAG_member, scope: !10036, file: !2, baseType: !179, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!10054 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u16]", file: !2, size: 128, align: 64, elements: !10055, templateParams: !45, identifier: "b1d129f8189eb041436b07dc801165bb")
!10055 = !{!10056, !10058}
!10056 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !10054, file: !2, baseType: !10057, size: 64, align: 64)
!10057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64, align: 64, dwarfAddressSpace: 0)
!10058 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10054, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!10059 = !{!10060, !10061, !10063, !10065, !10067}
!10060 = !DILocalVariable(name: "v", arg: 1, scope: !10033, file: !9927, line: 680, type: !10054)
!10061 = !DILocalVariable(name: "ret", scope: !10062, file: !9927, line: 683, type: !15, align: 8)
!10062 = distinct !DILexicalBlock(scope: !10033, file: !9927, line: 683, column: 9)
!10063 = !DILocalVariable(name: "iter", scope: !10064, file: !9927, line: 684, type: !3913, align: 8)
!10064 = distinct !DILexicalBlock(scope: !10062, file: !9927, line: 684, column: 9)
!10065 = !DILocalVariable(name: "c", scope: !10066, file: !9927, line: 684, type: !6390, align: 4)
!10066 = distinct !DILexicalBlock(scope: !10064, file: !9927, line: 684, column: 56)
!10067 = !DILocalVariable(name: "c", scope: !10068, file: !9927, line: 685, type: !491, align: 4)
!10068 = distinct !DILexicalBlock(scope: !10066, file: !9927, line: 685, column: 30)
!10069 = !DILocation(line: 680, column: 23, scope: !10033)
!10070 = !DILocation(line: 683, column: 13, scope: !10062)
!10071 = !DILocation(line: 684, column: 18, scope: !10064)
!10072 = !DILocation(line: 684, column: 13, scope: !10066)
!10073 = !DILocation(line: 683, column: 23, scope: !10033)
!10074 = !DILocation(line: 684, column: 37, scope: !10062)
!10075 = !DILocation(line: 684, column: 18, scope: !10062)
!10076 = !DILocation(line: 684, column: 9, scope: !10064)
!10077 = !{i16 0, i16 3}
!10078 = !DILocation(line: 691, column: 12, scope: !10062)
!10079 = !DILocation(line: 691, column: 9, scope: !10062)
!10080 = !DILocation(line: 692, column: 6, scope: !10033)
!10081 = !DILocation(line: 684, column: 13, scope: !10064)
!10082 = !DILocation(line: 685, column: 20, scope: !10068)
!10083 = !DILocation(line: 685, column: 23, scope: !10068)
!10084 = !DILocation(line: 686, column: 17, scope: !10068)
!10085 = !DILocation(line: 688, column: 24, scope: !10066)
!10086 = !DILocation(line: 692, column: 5, scope: !10033)
!10087 = distinct !DISubprogram(name: "into_raw_parts", linkageName: "_ZN5alloc6string6String14into_raw_parts17he005db77fbade0adE", scope: !15, file: !9927, line: 756, type: !10088, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10095)
!10088 = !DISubroutineType(types: !10089)
!10089 = !{!10090, !15}
!10090 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut u8, usize, usize)", file: !2, size: 192, align: 64, elements: !10091, templateParams: !45, identifier: "5f374ac06c3d93349b92dc7eddcd6b04")
!10091 = !{!10092, !10093, !10094}
!10092 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10090, file: !2, baseType: !1308, size: 64, align: 64)
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !10090, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !10090, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!10095 = !{!10096}
!10096 = !DILocalVariable(name: "self", arg: 1, scope: !10087, file: !9927, line: 756, type: !15)
!10097 = !DILocation(line: 756, column: 27, scope: !10087)
!10098 = !DILocation(line: 757, column: 9, scope: !10087)
!10099 = !DILocation(line: 758, column: 6, scope: !10087)
!10100 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17h0d1ccbe91e1009f8E", scope: !15, file: !9927, line: 845, type: !10101, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10103)
!10101 = !DISubroutineType(types: !10102)
!10102 = !{!15, !20}
!10103 = !{!10104}
!10104 = !DILocalVariable(name: "bytes", arg: 1, scope: !10100, file: !9927, line: 845, type: !20)
!10105 = !DILocation(line: 845, column: 39, scope: !10100)
!10106 = !DILocation(line: 846, column: 9, scope: !10100)
!10107 = !DILocation(line: 847, column: 6, scope: !10100)
!10108 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string6String10into_bytes17hf585513613b975e3E", scope: !15, file: !9927, line: 866, type: !10109, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10111)
!10109 = !DISubroutineType(types: !10110)
!10110 = !{!20, !15}
!10111 = !{!10112}
!10112 = !DILocalVariable(name: "self", arg: 1, scope: !10108, file: !9927, line: 866, type: !15)
!10113 = !DILocation(line: 866, column: 23, scope: !10108)
!10114 = !DILocation(line: 867, column: 9, scope: !10108)
!10115 = !DILocation(line: 868, column: 6, scope: !10108)
!10116 = distinct !DISubprogram(name: "push_str", linkageName: "_ZN5alloc6string6String8push_str17h9142500f5df9f793E", scope: !15, file: !9927, line: 925, type: !10117, scopeLine: 925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10119)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{null, !14, !145}
!10119 = !{!10120, !10121}
!10120 = !DILocalVariable(name: "self", arg: 1, scope: !10116, file: !9927, line: 925, type: !14)
!10121 = !DILocalVariable(name: "string", arg: 2, scope: !10116, file: !9927, line: 925, type: !145)
!10122 = !DILocation(line: 925, column: 21, scope: !10116)
!10123 = !DILocation(line: 925, column: 32, scope: !10116)
!10124 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !10125)
!10125 = distinct !DILocation(line: 926, column: 36, scope: !10116)
!10126 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !10125)
!10127 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !10125)
!10128 = !DILocation(line: 926, column: 36, scope: !10116)
!10129 = !DILocation(line: 926, column: 9, scope: !10116)
!10130 = !DILocation(line: 927, column: 6, scope: !10116)
!10131 = distinct !DISubprogram(name: "try_reserve", linkageName: "_ZN5alloc6string6String11try_reserve17h42e97a8d278d2d41E", scope: !15, file: !9927, line: 1111, type: !10132, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10134)
!10132 = !DISubroutineType(types: !10133)
!10133 = !{!969, !14, !9}
!10134 = !{!10135, !10136}
!10135 = !DILocalVariable(name: "self", arg: 1, scope: !10131, file: !9927, line: 1111, type: !14)
!10136 = !DILocalVariable(name: "additional", arg: 2, scope: !10131, file: !9927, line: 1111, type: !9)
!10137 = !DILocation(line: 1111, column: 24, scope: !10131)
!10138 = !DILocation(line: 1111, column: 35, scope: !10131)
!10139 = !DILocation(line: 1112, column: 9, scope: !10131)
!10140 = !DILocation(line: 1113, column: 6, scope: !10131)
!10141 = distinct !DISubprogram(name: "try_reserve_exact", linkageName: "_ZN5alloc6string6String17try_reserve_exact17hf05b0b82beb47608E", scope: !15, file: !9927, line: 1152, type: !10132, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10142)
!10142 = !{!10143, !10144}
!10143 = !DILocalVariable(name: "self", arg: 1, scope: !10141, file: !9927, line: 1152, type: !14)
!10144 = !DILocalVariable(name: "additional", arg: 2, scope: !10141, file: !9927, line: 1152, type: !9)
!10145 = !DILocation(line: 1152, column: 30, scope: !10141)
!10146 = !DILocation(line: 1152, column: 41, scope: !10141)
!10147 = !DILocation(line: 1153, column: 9, scope: !10141)
!10148 = !DILocation(line: 1154, column: 6, scope: !10141)
!10149 = distinct !DISubprogram(name: "push", linkageName: "_ZN5alloc6string6String4push17hfe3352f46bd00d0cE", scope: !15, file: !9927, line: 1223, type: !10150, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10152)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{null, !14, !491}
!10152 = !{!10153, !10154}
!10153 = !DILocalVariable(name: "self", arg: 1, scope: !10149, file: !9927, line: 1223, type: !14)
!10154 = !DILocalVariable(name: "ch", arg: 2, scope: !10149, file: !9927, line: 1223, type: !491)
!10155 = !DILocation(line: 1223, column: 17, scope: !10149)
!10156 = !DILocation(line: 1223, column: 28, scope: !10149)
!10157 = !DILocation(line: 1224, column: 15, scope: !10149)
!10158 = !DILocation(line: 1224, column: 9, scope: !10149)
!10159 = !DILocation(line: 1225, column: 32, scope: !10149)
!10160 = !DILocation(line: 1225, column: 18, scope: !10149)
!10161 = !DILocation(line: 1226, column: 65, scope: !10149)
!10162 = !DILocation(line: 1226, column: 45, scope: !10149)
!10163 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !10164)
!10164 = distinct !DILocation(line: 1226, column: 45, scope: !10149)
!10165 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !10164)
!10166 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !10164)
!10167 = !DILocation(line: 1226, column: 18, scope: !10149)
!10168 = !DILocation(line: 1228, column: 6, scope: !10149)
!10169 = distinct !DISubprogram(name: "drop", linkageName: "_ZN85_$LT$alloc..string..String..retain..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8aaa16fb1ade48ddE", scope: !10170, file: !9927, line: 1463, type: !10173, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10181)
!10170 = !DINamespace(name: "{impl#0}", scope: !10171)
!10171 = !DINamespace(name: "retain", scope: !10172)
!10172 = !DINamespace(name: "{impl#0}", scope: !16)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{null, !10175}
!10175 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#0}::retain::SetLenOnDrop", baseType: !10176, size: 64, align: 64, dwarfAddressSpace: 0)
!10176 = !DICompositeType(tag: DW_TAG_structure_type, name: "SetLenOnDrop", scope: !10171, file: !2, size: 192, align: 64, elements: !10177, templateParams: !45, identifier: "ba0c55c8bdbf95b66dc37ecde3dfcb10")
!10177 = !{!10178, !10179, !10180}
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !10176, file: !2, baseType: !14, size: 64, align: 64, offset: 128)
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !10176, file: !2, baseType: !9, size: 64, align: 64)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "del_bytes", scope: !10176, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!10181 = !{!10182, !10183}
!10182 = !DILocalVariable(name: "self", arg: 1, scope: !10169, file: !9927, line: 1463, type: !10175)
!10183 = !DILocalVariable(name: "new_len", scope: !10184, file: !9927, line: 1464, type: !9, align: 8)
!10184 = distinct !DILexicalBlock(scope: !10169, file: !9927, line: 1464, column: 17)
!10185 = !DILocation(line: 1463, column: 21, scope: !10169)
!10186 = !DILocation(line: 1464, column: 31, scope: !10169)
!10187 = !DILocation(line: 1464, column: 42, scope: !10169)
!10188 = !DILocation(line: 1464, column: 21, scope: !10184)
!10189 = !DILocation(line: 1465, column: 42, scope: !10184)
!10190 = !DILocation(line: 1465, column: 31, scope: !10184)
!10191 = !DILocation(line: 1465, column: 17, scope: !10184)
!10192 = !DILocation(line: 1466, column: 26, scope: !10184)
!10193 = !DILocation(line: 1467, column: 14, scope: !10169)
!10194 = distinct !DISubprogram(name: "insert_bytes", linkageName: "_ZN5alloc6string6String12insert_bytes17h6eac76741d847523E", scope: !15, file: !9927, line: 1542, type: !10195, scopeLine: 1542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10197)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{null, !14, !9, !1433}
!10197 = !{!10198, !10199, !10200, !10201, !10203}
!10198 = !DILocalVariable(name: "self", arg: 1, scope: !10194, file: !9927, line: 1542, type: !14)
!10199 = !DILocalVariable(name: "idx", arg: 2, scope: !10194, file: !9927, line: 1542, type: !9)
!10200 = !DILocalVariable(name: "bytes", arg: 3, scope: !10194, file: !9927, line: 1542, type: !1433)
!10201 = !DILocalVariable(name: "len", scope: !10202, file: !9927, line: 1543, type: !9, align: 8)
!10202 = distinct !DILexicalBlock(scope: !10194, file: !9927, line: 1543, column: 9)
!10203 = !DILocalVariable(name: "amt", scope: !10204, file: !9927, line: 1544, type: !9, align: 8)
!10204 = distinct !DILexicalBlock(scope: !10202, file: !9927, line: 1544, column: 9)
!10205 = !DILocation(line: 1542, column: 28, scope: !10194)
!10206 = !DILocation(line: 1542, column: 39, scope: !10194)
!10207 = !DILocation(line: 1542, column: 51, scope: !10194)
!10208 = !DILocation(line: 1543, column: 19, scope: !10194)
!10209 = !DILocation(line: 1543, column: 13, scope: !10202)
!10210 = !DILocation(line: 1544, column: 19, scope: !10202)
!10211 = !DILocation(line: 1544, column: 13, scope: !10204)
!10212 = !DILocation(line: 1545, column: 9, scope: !10204)
!10213 = !DILocation(line: 1548, column: 23, scope: !10204)
!10214 = !DILocation(line: 915, column: 29, scope: !3819, inlinedAt: !10215)
!10215 = distinct !DILocation(line: 1548, column: 23, scope: !10204)
!10216 = !DILocation(line: 915, column: 35, scope: !3819, inlinedAt: !10215)
!10217 = !DILocation(line: 460, column: 32, scope: !3828, inlinedAt: !10218)
!10218 = distinct !DILocation(line: 920, column: 18, scope: !3819, inlinedAt: !10215)
!10219 = !DILocation(line: 460, column: 38, scope: !3828, inlinedAt: !10218)
!10220 = !DILocation(line: 465, column: 18, scope: !3828, inlinedAt: !10218)
!10221 = !DILocation(line: 1548, column: 51, scope: !10204)
!10222 = !DILocation(line: 1548, column: 77, scope: !10204)
!10223 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !10224)
!10224 = distinct !DILocation(line: 1548, column: 51, scope: !10204)
!10225 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !10224)
!10226 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !10227)
!10227 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !10224)
!10228 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !10227)
!10229 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !10227)
!10230 = !DILocation(line: 1548, column: 89, scope: !10204)
!10231 = !DILocation(line: 1548, column: 13, scope: !10204)
!10232 = !DILocation(line: 476, column: 25, scope: !8292, inlinedAt: !10233)
!10233 = distinct !DILocation(line: 1549, column: 38, scope: !10204)
!10234 = !DILocation(line: 1549, column: 54, scope: !10204)
!10235 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !10236)
!10236 = distinct !DILocation(line: 1549, column: 54, scope: !10204)
!10237 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !10236)
!10238 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !10239)
!10239 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !10236)
!10240 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !10239)
!10241 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !10239)
!10242 = !DILocation(line: 1549, column: 13, scope: !10204)
!10243 = !DILocation(line: 1550, column: 30, scope: !10204)
!10244 = !DILocation(line: 1550, column: 13, scope: !10204)
!10245 = !DILocation(line: 1552, column: 6, scope: !10194)
!10246 = distinct !DISubprogram(name: "as_mut_vec", linkageName: "_ZN5alloc6string6String10as_mut_vec17h8928c91f54061d94E", scope: !15, file: !9927, line: 1613, type: !10247, scopeLine: 1613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10249)
!10247 = !DISubroutineType(types: !10248)
!10248 = !{!6725, !14}
!10249 = !{!10250}
!10250 = !DILocalVariable(name: "self", arg: 1, scope: !10246, file: !9927, line: 1613, type: !14)
!10251 = !DILocation(line: 1613, column: 30, scope: !10246)
!10252 = !DILocation(line: 1615, column: 6, scope: !10246)
!10253 = distinct !DISubprogram(name: "len", linkageName: "_ZN5alloc6string6String3len17hc0aa0f8256540c2fE", scope: !15, file: !9927, line: 1636, type: !10254, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10256)
!10254 = !DISubroutineType(types: !10255)
!10255 = !{!9, !8509}
!10256 = !{!10257}
!10257 = !DILocalVariable(name: "self", arg: 1, scope: !10253, file: !9927, line: 1636, type: !8509)
!10258 = !DILocation(line: 1636, column: 16, scope: !10253)
!10259 = !DILocation(line: 1637, column: 9, scope: !10253)
!10260 = !DILocation(line: 1638, column: 6, scope: !10253)
!10261 = distinct !DISubprogram(name: "into_boxed_str", linkageName: "_ZN5alloc6string6String14into_boxed_str17hd292670fef4e1819E", scope: !15, file: !9927, line: 1848, type: !10262, scopeLine: 1848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10264)
!10262 = !DISubroutineType(types: !10263)
!10263 = !{!7891, !15}
!10264 = !{!10265, !10266}
!10265 = !DILocalVariable(name: "self", arg: 1, scope: !10261, file: !9927, line: 1848, type: !15)
!10266 = !DILocalVariable(name: "slice", scope: !10267, file: !9927, line: 1849, type: !322, align: 8)
!10267 = distinct !DILexicalBlock(scope: !10261, file: !9927, line: 1849, column: 9)
!10268 = !DILocation(line: 1848, column: 27, scope: !10261)
!10269 = !DILocation(line: 1849, column: 21, scope: !10261)
!10270 = !DILocation(line: 1849, column: 13, scope: !10267)
!10271 = !DILocation(line: 1850, column: 18, scope: !10267)
!10272 = !DILocation(line: 1851, column: 6, scope: !10261)
!10273 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error8as_bytes17hb22787e41edf2400E", scope: !5562, file: !9927, line: 1900, type: !10274, scopeLine: 1900, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10277)
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!1433, !10276}
!10276 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::FromUtf8Error", baseType: !5562, size: 64, align: 64, dwarfAddressSpace: 0)
!10277 = !{!10278}
!10278 = !DILocalVariable(name: "self", arg: 1, scope: !10273, file: !9927, line: 1900, type: !10276)
!10279 = !DILocation(line: 1900, column: 21, scope: !10273)
!10280 = !DILocation(line: 1901, column: 10, scope: !10273)
!10281 = !DILocation(line: 1902, column: 6, scope: !10273)
!10282 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error10into_bytes17h7da198e61c7a34cfE", scope: !5562, file: !9927, line: 1924, type: !10283, scopeLine: 1924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10285)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{!20, !5562}
!10285 = !{!10286}
!10286 = !DILocalVariable(name: "self", arg: 1, scope: !10282, file: !9927, line: 1924, type: !5562)
!10287 = !DILocation(line: 1924, column: 23, scope: !10282)
!10288 = !DILocation(line: 1925, column: 9, scope: !10282)
!10289 = !DILocation(line: 1926, column: 6, scope: !10282)
!10290 = distinct !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc6string13FromUtf8Error10utf8_error17h5c06ae65cc93372aE", scope: !5562, file: !9927, line: 1953, type: !10291, scopeLine: 1953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10293)
!10291 = !DISubroutineType(types: !10292)
!10292 = !{!131, !10276}
!10293 = !{!10294}
!10294 = !DILocalVariable(name: "self", arg: 1, scope: !10290, file: !9927, line: 1953, type: !10276)
!10295 = !DILocation(line: 1953, column: 23, scope: !10290)
!10296 = !DILocation(line: 1954, column: 9, scope: !10290)
!10297 = !DILocation(line: 1955, column: 6, scope: !10290)
!10298 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h11d9e944a849993fE", scope: !10299, file: !9927, line: 1960, type: !10300, scopeLine: 1960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10302)
!10299 = !DINamespace(name: "{impl#2}", scope: !16)
!10300 = !DISubroutineType(types: !10301)
!10301 = !{!1103, !10276, !1119}
!10302 = !{!10303, !10304}
!10303 = !DILocalVariable(name: "self", arg: 1, scope: !10298, file: !9927, line: 1960, type: !10276)
!10304 = !DILocalVariable(name: "f", arg: 2, scope: !10298, file: !9927, line: 1960, type: !1119)
!10305 = !DILocation(line: 1960, column: 12, scope: !10298)
!10306 = !DILocation(line: 1960, column: 19, scope: !10298)
!10307 = !DILocation(line: 1961, column: 9, scope: !10298)
!10308 = !DILocation(line: 1962, column: 6, scope: !10298)
!10309 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..fmt..Display$GT$3fmt17hf96b075d99e22256E", scope: !10310, file: !9927, line: 1967, type: !10311, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10314)
!10310 = !DINamespace(name: "{impl#3}", scope: !16)
!10311 = !DISubroutineType(types: !10312)
!10312 = !{!1103, !10313, !1119}
!10313 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::FromUtf16Error", baseType: !10046, size: 64, align: 64, dwarfAddressSpace: 0)
!10314 = !{!10315, !10316}
!10315 = !DILocalVariable(name: "self", arg: 1, scope: !10309, file: !9927, line: 1967, type: !10313)
!10316 = !DILocalVariable(name: "f", arg: 2, scope: !10309, file: !9927, line: 1967, type: !1119)
!10317 = !DILocation(line: 1967, column: 12, scope: !10309)
!10318 = !DILocation(line: 1967, column: 19, scope: !10309)
!10319 = !DILocation(line: 1968, column: 9, scope: !10309)
!10320 = !DILocation(line: 1969, column: 6, scope: !10309)
!10321 = distinct !DISubprogram(name: "description", linkageName: "_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..error..Error$GT$11description17h34171f0e7f018ce1E", scope: !10322, file: !9927, line: 1975, type: !10323, scopeLine: 1975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10325)
!10322 = !DINamespace(name: "{impl#4}", scope: !16)
!10323 = !DISubroutineType(types: !10324)
!10324 = !{!145, !10276}
!10325 = !{!10326}
!10326 = !DILocalVariable(name: "self", arg: 1, scope: !10321, file: !9927, line: 1975, type: !10276)
!10327 = !DILocation(line: 1975, column: 20, scope: !10321)
!10328 = !DILocation(line: 1977, column: 6, scope: !10321)
!10329 = distinct !DISubprogram(name: "description", linkageName: "_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..error..Error$GT$11description17hd2b613f3b70ed6ccE", scope: !10330, file: !9927, line: 1983, type: !10331, scopeLine: 1983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10333)
!10330 = !DINamespace(name: "{impl#5}", scope: !16)
!10331 = !DISubroutineType(types: !10332)
!10332 = !{!145, !10313}
!10333 = !{!10334}
!10334 = !DILocalVariable(name: "self", arg: 1, scope: !10329, file: !9927, line: 1983, type: !10313)
!10335 = !DILocation(line: 1983, column: 20, scope: !10329)
!10336 = !DILocation(line: 1985, column: 6, scope: !10329)
!10337 = distinct !DISubprogram(name: "clone", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h23d9a471775aa020E", scope: !10338, file: !9927, line: 1991, type: !10339, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10341)
!10338 = !DINamespace(name: "{impl#6}", scope: !16)
!10339 = !DISubroutineType(types: !10340)
!10340 = !{!15, !8509}
!10341 = !{!10342}
!10342 = !DILocalVariable(name: "self", arg: 1, scope: !10337, file: !9927, line: 1991, type: !8509)
!10343 = !DILocation(line: 1991, column: 14, scope: !10337)
!10344 = !DILocation(line: 1992, column: 23, scope: !10337)
!10345 = !DILocation(line: 1992, column: 9, scope: !10337)
!10346 = !DILocation(line: 1993, column: 6, scope: !10337)
!10347 = distinct !DISubprogram(name: "clone_from", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$10clone_from17h45ae1e1c35a528ffE", scope: !10338, file: !9927, line: 1995, type: !10348, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10350)
!10348 = !DISubroutineType(types: !10349)
!10349 = !{null, !14, !8509}
!10350 = !{!10351, !10352}
!10351 = !DILocalVariable(name: "self", arg: 1, scope: !10347, file: !9927, line: 1995, type: !14)
!10352 = !DILocalVariable(name: "source", arg: 2, scope: !10347, file: !9927, line: 1995, type: !8509)
!10353 = !DILocation(line: 1995, column: 19, scope: !10347)
!10354 = !DILocation(line: 1995, column: 30, scope: !10347)
!10355 = !DILocation(line: 1996, column: 9, scope: !10347)
!10356 = !DILocation(line: 1997, column: 6, scope: !10347)
!10357 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN73_$LT$$RF$alloc..string..String$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h5bc464361460e7acE", scope: !10358, file: !9927, line: 2180, type: !10359, scopeLine: 2180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10361)
!10358 = !DINamespace(name: "{impl#19}", scope: !16)
!10359 = !DISubroutineType(types: !10360)
!10360 = !{!5764, !8509, !145}
!10361 = !{!10362, !10363}
!10362 = !DILocalVariable(name: "self", arg: 1, scope: !10357, file: !9927, line: 2180, type: !8509)
!10363 = !DILocalVariable(name: "haystack", arg: 2, scope: !10357, file: !9927, line: 2180, type: !145)
!10364 = !DILocation(line: 2180, column: 22, scope: !10357)
!10365 = !DILocation(line: 2180, column: 28, scope: !10357)
!10366 = !DILocation(line: 2181, column: 9, scope: !10357)
!10367 = !DILocation(line: 2182, column: 6, scope: !10357)
!10368 = distinct !DISubprogram(name: "default", linkageName: "_ZN64_$LT$alloc..string..String$u20$as$u20$core..default..Default$GT$7default17h8023cf4ed4b338d5E", scope: !10369, file: !9927, line: 2262, type: !9928, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !45)
!10369 = !DINamespace(name: "{impl#21}", scope: !16)
!10370 = !DILocation(line: 2263, column: 9, scope: !10368)
!10371 = !DILocation(line: 2264, column: 6, scope: !10368)
!10372 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17heabcdd83e3a4c7ceE", scope: !10373, file: !9927, line: 2270, type: !10374, scopeLine: 2270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10376)
!10373 = !DINamespace(name: "{impl#22}", scope: !16)
!10374 = !DISubroutineType(types: !10375)
!10375 = !{!1103, !8509, !1119}
!10376 = !{!10377, !10378}
!10377 = !DILocalVariable(name: "self", arg: 1, scope: !10372, file: !9927, line: 2270, type: !8509)
!10378 = !DILocalVariable(name: "f", arg: 2, scope: !10372, file: !9927, line: 2270, type: !1119)
!10379 = !DILocation(line: 2270, column: 12, scope: !10372)
!10380 = !DILocation(line: 2270, column: 19, scope: !10372)
!10381 = !DILocation(line: 2271, column: 28, scope: !10372)
!10382 = !DILocation(line: 2271, column: 9, scope: !10372)
!10383 = !DILocation(line: 2272, column: 6, scope: !10372)
!10384 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17h4b91c28887671176E", scope: !10385, file: !9927, line: 2278, type: !10374, scopeLine: 2278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10386)
!10385 = !DINamespace(name: "{impl#23}", scope: !16)
!10386 = !{!10387, !10388}
!10387 = !DILocalVariable(name: "self", arg: 1, scope: !10384, file: !9927, line: 2278, type: !8509)
!10388 = !DILocalVariable(name: "f", arg: 2, scope: !10384, file: !9927, line: 2278, type: !1119)
!10389 = !DILocation(line: 2278, column: 12, scope: !10384)
!10390 = !DILocation(line: 2278, column: 19, scope: !10384)
!10391 = !DILocation(line: 2279, column: 26, scope: !10384)
!10392 = !DILocation(line: 2279, column: 9, scope: !10384)
!10393 = !DILocation(line: 2280, column: 6, scope: !10384)
!10394 = distinct !DISubprogram(name: "index", linkageName: "_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h713c9c4b2ed90497E", scope: !10395, file: !9927, line: 2384, type: !10396, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10398)
!10395 = !DINamespace(name: "{impl#30}", scope: !16)
!10396 = !DISubroutineType(types: !10397)
!10397 = !{!145, !8509, !3862, !882}
!10398 = !{!10399, !10400}
!10399 = !DILocalVariable(name: "self", arg: 1, scope: !10394, file: !9927, line: 2384, type: !8509)
!10400 = !DILocalVariable(name: "_index", arg: 2, scope: !10394, file: !9927, line: 2384, type: !3862)
!10401 = !DILocation(line: 2384, column: 14, scope: !10394)
!10402 = !DILocation(line: 2384, column: 21, scope: !10394)
!10403 = !DILocation(line: 2385, column: 43, scope: !10394)
!10404 = !DILocation(line: 2385, column: 18, scope: !10394)
!10405 = !DILocation(line: 2386, column: 6, scope: !10394)
!10406 = distinct !DISubprogram(name: "deref", linkageName: "_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb13427143583ffc1E", scope: !10407, file: !9927, line: 2455, type: !9491, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10408)
!10407 = !DINamespace(name: "{impl#39}", scope: !16)
!10408 = !{!10409}
!10409 = !DILocalVariable(name: "self", arg: 1, scope: !10406, file: !9927, line: 2455, type: !8509)
!10410 = !DILocation(line: 2455, column: 14, scope: !10406)
!10411 = !DILocation(line: 2456, column: 43, scope: !10406)
!10412 = !DILocation(line: 2456, column: 18, scope: !10406)
!10413 = !DILocation(line: 2457, column: 6, scope: !10406)
!10414 = distinct !DISubprogram(name: "from", linkageName: "_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h7a304be07f46f987E", scope: !10415, file: !9927, line: 2657, type: !9500, scopeLine: 2657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10416)
!10415 = !DINamespace(name: "{impl#53}", scope: !16)
!10416 = !{!10417}
!10417 = !DILocalVariable(name: "s", arg: 1, scope: !10414, file: !9927, line: 2657, type: !145)
!10418 = !DILocation(line: 2657, column: 13, scope: !10414)
!10419 = !DILocation(line: 2658, column: 9, scope: !10414)
!10420 = !DILocation(line: 2659, column: 6, scope: !10414)
!10421 = distinct !DISubprogram(name: "from", linkageName: "_ZN97_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$GT$$GT$$GT$4from17h22f156662ee12144E", scope: !10422, file: !9927, line: 2704, type: !9751, scopeLine: 2704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10423)
!10422 = !DINamespace(name: "{impl#56}", scope: !16)
!10423 = !{!10424}
!10424 = !DILocalVariable(name: "s", arg: 1, scope: !10421, file: !9927, line: 2704, type: !7891)
!10425 = !DILocation(line: 2704, column: 13, scope: !10421)
!10426 = !DILocation(line: 2705, column: 9, scope: !10421)
!10427 = !DILocation(line: 2706, column: 6, scope: !10421)
!10428 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc6string107_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$str$GT$$GT$4from17hd3e9cdd3046bcdbcE", scope: !10429, file: !9927, line: 2725, type: !10262, scopeLine: 2725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10430)
!10429 = !DINamespace(name: "{impl#57}", scope: !16)
!10430 = !{!10431}
!10431 = !DILocalVariable(name: "s", arg: 1, scope: !10428, file: !9927, line: 2725, type: !15)
!10432 = !DILocation(line: 2725, column: 13, scope: !10428)
!10433 = !DILocation(line: 2726, column: 9, scope: !10428)
!10434 = !DILocation(line: 2727, column: 6, scope: !10428)
!10435 = distinct !DISubprogram(name: "from", linkageName: "_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h36c7163ed7b362dfE", scope: !10436, file: !9927, line: 2749, type: !8479, scopeLine: 2749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10437)
!10436 = !DINamespace(name: "{impl#58}", scope: !16)
!10437 = !{!10438}
!10438 = !DILocalVariable(name: "s", arg: 1, scope: !10435, file: !9927, line: 2749, type: !2464)
!10439 = !DILocation(line: 2749, column: 13, scope: !10435)
!10440 = !DILocation(line: 2750, column: 9, scope: !10435)
!10441 = !DILocation(line: 2751, column: 6, scope: !10435)
!10442 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc6string104_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..vec..Vec$LT$u8$GT$$GT$4from17h9e50c28aa070c99aE", scope: !10443, file: !9927, line: 2860, type: !10109, scopeLine: 2860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10444)
!10443 = !DINamespace(name: "{impl#65}", scope: !16)
!10444 = !{!10445}
!10445 = !DILocalVariable(name: "string", arg: 1, scope: !10442, file: !9927, line: 2860, type: !15)
!10446 = !DILocation(line: 2860, column: 13, scope: !10442)
!10447 = !DILocation(line: 2861, column: 9, scope: !10442)
!10448 = !DILocation(line: 2862, column: 6, scope: !10442)
!10449 = distinct !DISubprogram(name: "write_str", linkageName: "_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h51025f4043ad4965E", scope: !10450, file: !9927, line: 2869, type: !10451, scopeLine: 2869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10453)
!10450 = !DINamespace(name: "{impl#66}", scope: !16)
!10451 = !DISubroutineType(types: !10452)
!10452 = !{!1103, !14, !145}
!10453 = !{!10454, !10455}
!10454 = !DILocalVariable(name: "self", arg: 1, scope: !10449, file: !9927, line: 2869, type: !14)
!10455 = !DILocalVariable(name: "s", arg: 2, scope: !10449, file: !9927, line: 2869, type: !145)
!10456 = !DILocation(line: 2869, column: 18, scope: !10449)
!10457 = !DILocation(line: 2869, column: 29, scope: !10449)
!10458 = !DILocation(line: 2870, column: 9, scope: !10449)
!10459 = !DILocation(line: 2872, column: 6, scope: !10449)
!10460 = distinct !DISubprogram(name: "write_char", linkageName: "_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h6a3696f36e1df853E", scope: !10450, file: !9927, line: 2875, type: !10461, scopeLine: 2875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10463)
!10461 = !DISubroutineType(types: !10462)
!10462 = !{!1103, !14, !491}
!10463 = !{!10464, !10465}
!10464 = !DILocalVariable(name: "self", arg: 1, scope: !10460, file: !9927, line: 2875, type: !14)
!10465 = !DILocalVariable(name: "c", arg: 2, scope: !10460, file: !9927, line: 2875, type: !491)
!10466 = !DILocation(line: 2875, column: 19, scope: !10460)
!10467 = !DILocation(line: 2875, column: 30, scope: !10460)
!10468 = !DILocation(line: 2876, column: 9, scope: !10460)
!10469 = !DILocation(line: 2878, column: 6, scope: !10460)
!10470 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN57_$LT$alloc..string..Drain$u20$as$u20$core..fmt..Debug$GT$3fmt17hd5930049921406abE", scope: !10471, file: !9927, line: 2901, type: !10472, scopeLine: 2901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10481)
!10471 = !DINamespace(name: "{impl#67}", scope: !16)
!10472 = !DISubroutineType(types: !10473)
!10473 = !{!1103, !10474, !1119}
!10474 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::Drain", baseType: !10475, size: 64, align: 64, dwarfAddressSpace: 0)
!10475 = !DICompositeType(tag: DW_TAG_structure_type, name: "Drain", scope: !16, file: !2, size: 320, align: 64, elements: !10476, templateParams: !45, identifier: "db2b5d4c8c5149df1a84fbb8cbcdca5a")
!10476 = !{!10477, !10478, !10479, !10480}
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !10475, file: !2, baseType: !2060, size: 64, align: 64, offset: 128)
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10475, file: !2, baseType: !9, size: 64, align: 64, offset: 192)
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !10475, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !10475, file: !2, baseType: !555, size: 128, align: 64)
!10481 = !{!10482, !10483}
!10482 = !DILocalVariable(name: "self", arg: 1, scope: !10470, file: !9927, line: 2901, type: !10474)
!10483 = !DILocalVariable(name: "f", arg: 2, scope: !10470, file: !9927, line: 2901, type: !1119)
!10484 = !DILocation(line: 2901, column: 12, scope: !10470)
!10485 = !DILocation(line: 2901, column: 19, scope: !10470)
!10486 = !DILocation(line: 2902, column: 9, scope: !10470)
!10487 = !DILocation(line: 2902, column: 39, scope: !10470)
!10488 = !DILocation(line: 2903, column: 6, scope: !10470)
!10489 = distinct !DISubprogram(name: "drop", linkageName: "_ZN62_$LT$alloc..string..Drain$u20$as$u20$core..ops..drop..Drop$GT$4drop17h942499e8ff5bdc71E", scope: !10490, file: !9927, line: 2913, type: !10491, scopeLine: 2913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10494)
!10490 = !DINamespace(name: "{impl#70}", scope: !16)
!10491 = !DISubroutineType(types: !10492)
!10492 = !{null, !10493}
!10493 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::Drain", baseType: !10475, size: 64, align: 64, dwarfAddressSpace: 0)
!10494 = !{!10495, !10496}
!10495 = !DILocalVariable(name: "self", arg: 1, scope: !10489, file: !9927, line: 2913, type: !10493)
!10496 = !DILocalVariable(name: "self_vec", scope: !10497, file: !9927, line: 2917, type: !6725, align: 8)
!10497 = distinct !DILexicalBlock(scope: !10489, file: !9927, line: 2917, column: 13)
!10498 = !DILocation(line: 2913, column: 13, scope: !10489)
!10499 = !DILocation(line: 2917, column: 28, scope: !10489)
!10500 = !DILocation(line: 2917, column: 17, scope: !10497)
!10501 = !DILocation(line: 2918, column: 16, scope: !10497)
!10502 = !DILocation(line: 2918, column: 30, scope: !10497)
!10503 = !DILocation(line: 2918, column: 42, scope: !10497)
!10504 = !DILocation(line: 2918, column: 54, scope: !10497)
!10505 = !DILocation(line: 2922, column: 6, scope: !10489)
!10506 = !DILocation(line: 2919, column: 32, scope: !10497)
!10507 = !DILocation(line: 2919, column: 44, scope: !10497)
!10508 = !DILocation(line: 2919, column: 17, scope: !10497)
!10509 = !DILocation(line: 2919, column: 53, scope: !10497)
!10510 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string5Drain6as_str17h7ef63ca31af8da08E", scope: !10475, file: !9927, line: 2939, type: !10511, scopeLine: 2939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10513)
!10511 = !DISubroutineType(types: !10512)
!10512 = !{!145, !10474}
!10513 = !{!10514}
!10514 = !DILocalVariable(name: "self", arg: 1, scope: !10510, file: !9927, line: 2939, type: !10474)
!10515 = !DILocation(line: 2939, column: 19, scope: !10510)
!10516 = !DILocation(line: 2940, column: 9, scope: !10510)
!10517 = !DILocation(line: 2941, column: 6, scope: !10510)
!10518 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN72_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h1b803531a4caa3c4E", scope: !10519, file: !9927, line: 2946, type: !10511, scopeLine: 2946, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10520)
!10519 = !DINamespace(name: "{impl#72}", scope: !16)
!10520 = !{!10521}
!10521 = !DILocalVariable(name: "self", arg: 1, scope: !10518, file: !9927, line: 2946, type: !10474)
!10522 = !DILocation(line: 2946, column: 15, scope: !10518)
!10523 = !DILocation(line: 2947, column: 9, scope: !10518)
!10524 = !DILocation(line: 2948, column: 6, scope: !10518)
!10525 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN81_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$GT$6as_ref17heeb83655840f33e4E", scope: !10526, file: !9927, line: 2953, type: !10527, scopeLine: 2953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10529)
!10526 = !DINamespace(name: "{impl#73}", scope: !16)
!10527 = !DISubroutineType(types: !10528)
!10528 = !{!1433, !10474}
!10529 = !{!10530}
!10530 = !DILocalVariable(name: "self", arg: 1, scope: !10525, file: !9927, line: 2953, type: !10474)
!10531 = !DILocation(line: 2953, column: 15, scope: !10525)
!10532 = !DILocation(line: 2954, column: 9, scope: !10525)
!10533 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !10534)
!10534 = distinct !DILocation(line: 2954, column: 9, scope: !10525)
!10535 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !10534)
!10536 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !10534)
!10537 = !DILocation(line: 2955, column: 6, scope: !10525)
!10538 = distinct !DISubprogram(name: "size_hint", linkageName: "_ZN79_$LT$alloc..string..Drain$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h2dc96dfb32df59fcE", scope: !10539, file: !9927, line: 2967, type: !10540, scopeLine: 2967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10542)
!10539 = !DINamespace(name: "{impl#74}", scope: !16)
!10540 = !DISubroutineType(types: !10541)
!10541 = !{!6346, !10474}
!10542 = !{!10543}
!10543 = !DILocalVariable(name: "self", arg: 1, scope: !10538, file: !9927, line: 2967, type: !10474)
!10544 = !DILocation(line: 2967, column: 18, scope: !10538)
!10545 = !DILocation(line: 2968, column: 9, scope: !10538)
!10546 = !DILocation(line: 2969, column: 6, scope: !10538)
!10547 = distinct !DISubprogram(name: "arcinner_layout_for_value_layout", linkageName: "_ZN5alloc4sync32arcinner_layout_for_value_layout17h6931526e03ad4558E", scope: !4499, file: !10548, line: 337, type: !9318, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10549)
!10548 = !DIFile(filename: "src/sync.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "fbe21240c70cbdee0f4547986bf3b039")
!10549 = !{!10550}
!10550 = !DILocalVariable(name: "layout", arg: 1, scope: !10547, file: !10548, line: 337, type: !170)
!10551 = !DILocation(line: 337, column: 37, scope: !10547)
!10552 = !DILocation(line: 342, column: 5, scope: !10547)
!10553 = !DILocation(line: 343, column: 2, scope: !10547)
!10554 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he5d017d9b75beb25E", scope: !1910, file: !10555, line: 177, type: !10556, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10558)
!10555 = !DIFile(filename: "src/vec/drain.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "17ad9312893d79ad7b541208476a0417")
!10556 = !DISubroutineType(types: !10557)
!10557 = !{null, !1914}
!10558 = !{!10559, !10560, !10562, !10564, !10566, !10568, !10570, !10572, !10574, !10576, !10578}
!10559 = !DILocalVariable(name: "self", arg: 1, scope: !10554, file: !10555, line: 177, type: !1914)
!10560 = !DILocalVariable(name: "iter", scope: !10561, file: !10555, line: 200, type: !559, align: 8)
!10561 = distinct !DILexicalBlock(scope: !10554, file: !10555, line: 200, column: 9)
!10562 = !DILocalVariable(name: "drop_len", scope: !10563, file: !10555, line: 201, type: !9, align: 8)
!10563 = distinct !DILexicalBlock(scope: !10561, file: !10555, line: 201, column: 9)
!10564 = !DILocalVariable(name: "vec", scope: !10565, file: !10555, line: 203, type: !1921, align: 8)
!10565 = distinct !DILexicalBlock(scope: !10563, file: !10555, line: 203, column: 9)
!10566 = !DILocalVariable(name: "vec", scope: !10567, file: !10555, line: 209, type: !6725, align: 8)
!10567 = distinct !DILexicalBlock(scope: !10565, file: !10555, line: 209, column: 17)
!10568 = !DILocalVariable(name: "old_len", scope: !10569, file: !10555, line: 210, type: !9, align: 8)
!10569 = distinct !DILexicalBlock(scope: !10567, file: !10555, line: 210, column: 17)
!10570 = !DILocalVariable(name: "_guard", scope: !10571, file: !10555, line: 219, type: !1908, align: 8)
!10571 = distinct !DILexicalBlock(scope: !10565, file: !10555, line: 219, column: 9)
!10572 = !DILocalVariable(name: "drop_ptr", scope: !10573, file: !10555, line: 229, type: !38, align: 8)
!10573 = distinct !DILexicalBlock(scope: !10571, file: !10555, line: 229, column: 9)
!10574 = !DILocalVariable(name: "vec_ptr", scope: !10575, file: !10555, line: 236, type: !1308, align: 8)
!10575 = distinct !DILexicalBlock(scope: !10573, file: !10555, line: 236, column: 13)
!10576 = !DILocalVariable(name: "drop_offset", scope: !10577, file: !10555, line: 237, type: !9, align: 8)
!10577 = distinct !DILexicalBlock(scope: !10575, file: !10555, line: 237, column: 13)
!10578 = !DILocalVariable(name: "to_drop", scope: !10579, file: !10555, line: 238, type: !2681, align: 8)
!10579 = distinct !DILexicalBlock(scope: !10577, file: !10555, line: 238, column: 13)
!10580 = !DILocation(line: 177, column: 13, scope: !10554)
!10581 = !DILocation(line: 200, column: 13, scope: !10561)
!10582 = !DILocation(line: 203, column: 13, scope: !10565)
!10583 = !DILocation(line: 219, column: 13, scope: !10571)
!10584 = !DILocation(line: 200, column: 49, scope: !10554)
!10585 = !DILocation(line: 200, column: 20, scope: !10554)
!10586 = !DILocation(line: 109, column: 20, scope: !6356, inlinedAt: !10587)
!10587 = distinct !DILocation(line: 201, column: 24, scope: !10561)
!10588 = !DILocation(line: 110, column: 17, scope: !6356, inlinedAt: !10587)
!10589 = !DILocation(line: 110, column: 17, scope: !6364, inlinedAt: !10587)
!10590 = !DILocation(line: 325, column: 25, scope: !2731, inlinedAt: !10591)
!10591 = distinct !DILocation(line: 110, column: 17, scope: !6364, inlinedAt: !10587)
!10592 = !DILocation(line: 111, column: 14, scope: !6356, inlinedAt: !10587)
!10593 = !DILocation(line: 201, column: 24, scope: !10561)
!10594 = !DILocation(line: 201, column: 13, scope: !10563)
!10595 = !DILocation(line: 203, column: 23, scope: !10563)
!10596 = !DILocation(line: 205, column: 12, scope: !10565)
!10597 = !DILocation(line: 219, column: 22, scope: !10565)
!10598 = !DILocation(line: 221, column: 12, scope: !10571)
!10599 = !DILocalVariable(name: "self", arg: 1, scope: !10600, file: !702, line: 424, type: !10603)
!10600 = distinct !DISubprogram(name: "as_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17hd4bfc33a3ad6238cE", scope: !1921, file: !702, line: 424, type: !10601, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1183, retainedNodes: !10604)
!10601 = !DISubroutineType(types: !10602)
!10602 = !{!6725, !10603}
!10603 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ptr::non_null::NonNull<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !1921, size: 64, align: 64, dwarfAddressSpace: 0)
!10604 = !{!10599}
!10605 = !DILocation(line: 424, column: 36, scope: !10600, inlinedAt: !10606)
!10606 = distinct !DILocation(line: 209, column: 27, scope: !10565)
!10607 = !DILocation(line: 427, column: 24, scope: !10600, inlinedAt: !10606)
!10608 = !DILocalVariable(name: "self", arg: 1, scope: !10609, file: !702, line: 325, type: !1921)
!10609 = distinct !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h428ea4531af32e78E", scope: !1921, file: !702, line: 325, type: !10610, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1183, retainedNodes: !10612)
!10610 = !DISubroutineType(types: !10611)
!10611 = !{!2067, !1921}
!10612 = !{!10608}
!10613 = !DILocation(line: 325, column: 25, scope: !10609, inlinedAt: !10614)
!10614 = distinct !DILocation(line: 427, column: 24, scope: !10600, inlinedAt: !10606)
!10615 = !DILocation(line: 209, column: 27, scope: !10565)
!10616 = !DILocation(line: 209, column: 21, scope: !10567)
!10617 = !DILocation(line: 210, column: 31, scope: !10567)
!10618 = !DILocation(line: 210, column: 21, scope: !10569)
!10619 = !DILocation(line: 211, column: 29, scope: !10569)
!10620 = !DILocation(line: 211, column: 50, scope: !10569)
!10621 = !DILocation(line: 211, column: 17, scope: !10569)
!10622 = !DILocation(line: 212, column: 40, scope: !10569)
!10623 = !DILocation(line: 212, column: 30, scope: !10569)
!10624 = !DILocation(line: 212, column: 17, scope: !10569)
!10625 = !DILocation(line: 241, column: 6, scope: !10554)
!10626 = !DILocation(line: 241, column: 5, scope: !10565)
!10627 = !DILocation(line: 229, column: 24, scope: !10571)
!10628 = !DILocation(line: 476, column: 25, scope: !8292, inlinedAt: !10629)
!10629 = distinct !DILocation(line: 229, column: 24, scope: !10571)
!10630 = !DILocation(line: 229, column: 13, scope: !10573)
!10631 = !DILocation(line: 424, column: 36, scope: !10600, inlinedAt: !10632)
!10632 = distinct !DILocation(line: 236, column: 27, scope: !10573)
!10633 = !DILocation(line: 427, column: 24, scope: !10600, inlinedAt: !10632)
!10634 = !DILocation(line: 325, column: 25, scope: !10609, inlinedAt: !10635)
!10635 = distinct !DILocation(line: 427, column: 24, scope: !10600, inlinedAt: !10632)
!10636 = !DILocation(line: 236, column: 27, scope: !10573)
!10637 = !DILocation(line: 236, column: 17, scope: !10575)
!10638 = !DILocation(line: 237, column: 31, scope: !10575)
!10639 = !DILocation(line: 237, column: 17, scope: !10577)
!10640 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !10641)
!10641 = distinct !DILocation(line: 238, column: 57, scope: !10577)
!10642 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !10641)
!10643 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !10644)
!10644 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !10641)
!10645 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !10644)
!10646 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !10644)
!10647 = !DILocation(line: 238, column: 27, scope: !10577)
!10648 = !DILocation(line: 238, column: 17, scope: !10579)
!10649 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h442aea4435ab282fE", scope: !10650, file: !10555, line: 182, type: !10651, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10654)
!10650 = !DINamespace(name: "{impl#0}", scope: !1909)
!10651 = !DISubroutineType(types: !10652)
!10652 = !{null, !10653}
!10653 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::drain::{impl#7}::drop::DropGuard<u8, alloc::alloc::Global>", baseType: !1908, size: 64, align: 64, dwarfAddressSpace: 0)
!10654 = !{!10655, !10656, !10658, !10660, !10662, !10664}
!10655 = !DILocalVariable(name: "self", arg: 1, scope: !10649, file: !10555, line: 182, type: !10653)
!10656 = !DILocalVariable(name: "source_vec", scope: !10657, file: !10555, line: 185, type: !6725, align: 8)
!10657 = distinct !DILexicalBlock(scope: !10649, file: !10555, line: 185, column: 25)
!10658 = !DILocalVariable(name: "start", scope: !10659, file: !10555, line: 187, type: !9, align: 8)
!10659 = distinct !DILexicalBlock(scope: !10657, file: !10555, line: 187, column: 25)
!10660 = !DILocalVariable(name: "tail", scope: !10661, file: !10555, line: 188, type: !9, align: 8)
!10661 = distinct !DILexicalBlock(scope: !10659, file: !10555, line: 188, column: 25)
!10662 = !DILocalVariable(name: "src", scope: !10663, file: !10555, line: 190, type: !38, align: 8)
!10663 = distinct !DILexicalBlock(scope: !10661, file: !10555, line: 190, column: 29)
!10664 = !DILocalVariable(name: "dst", scope: !10665, file: !10555, line: 191, type: !1308, align: 8)
!10665 = distinct !DILexicalBlock(scope: !10663, file: !10555, line: 191, column: 29)
!10666 = !DILocation(line: 182, column: 21, scope: !10649)
!10667 = !DILocation(line: 183, column: 20, scope: !10649)
!10668 = !DILocation(line: 197, column: 14, scope: !10649)
!10669 = !DILocation(line: 185, column: 42, scope: !10649)
!10670 = !DILocation(line: 424, column: 36, scope: !10600, inlinedAt: !10671)
!10671 = distinct !DILocation(line: 185, column: 42, scope: !10649)
!10672 = !DILocation(line: 427, column: 24, scope: !10600, inlinedAt: !10671)
!10673 = !DILocation(line: 325, column: 25, scope: !10609, inlinedAt: !10674)
!10674 = distinct !DILocation(line: 427, column: 24, scope: !10600, inlinedAt: !10671)
!10675 = !DILocation(line: 185, column: 29, scope: !10657)
!10676 = !DILocation(line: 187, column: 37, scope: !10657)
!10677 = !DILocation(line: 187, column: 29, scope: !10659)
!10678 = !DILocation(line: 188, column: 36, scope: !10659)
!10679 = !DILocation(line: 188, column: 29, scope: !10661)
!10680 = !DILocation(line: 189, column: 28, scope: !10661)
!10681 = !DILocation(line: 194, column: 52, scope: !10661)
!10682 = !DILocation(line: 194, column: 44, scope: !10661)
!10683 = !DILocation(line: 190, column: 39, scope: !10661)
!10684 = !DILocation(line: 915, column: 29, scope: !3819, inlinedAt: !10685)
!10685 = distinct !DILocation(line: 190, column: 39, scope: !10661)
!10686 = !DILocation(line: 915, column: 35, scope: !3819, inlinedAt: !10685)
!10687 = !DILocation(line: 460, column: 32, scope: !3828, inlinedAt: !10688)
!10688 = distinct !DILocation(line: 920, column: 18, scope: !3819, inlinedAt: !10685)
!10689 = !DILocation(line: 460, column: 38, scope: !3828, inlinedAt: !10688)
!10690 = !DILocation(line: 465, column: 18, scope: !3828, inlinedAt: !10688)
!10691 = !DILocation(line: 190, column: 33, scope: !10663)
!10692 = !DILocation(line: 191, column: 39, scope: !10663)
!10693 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !10694)
!10694 = distinct !DILocation(line: 191, column: 39, scope: !10663)
!10695 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !10694)
!10696 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !10697)
!10697 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !10694)
!10698 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !10697)
!10699 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !10697)
!10700 = !DILocation(line: 191, column: 33, scope: !10665)
!10701 = !DILocation(line: 192, column: 49, scope: !10665)
!10702 = !DILocation(line: 192, column: 29, scope: !10665)
!10703 = !DILocation(line: 194, column: 25, scope: !10661)
!10704 = distinct !DISubprogram(name: "spec_extend<u8, alloc::alloc::Global>", linkageName: "_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hd7b747e48170aaf6E", scope: !10706, file: !10705, line: 53, type: !10708, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10710)
!10705 = !DIFile(filename: "src/vec/spec_extend.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "2a1f9056ce8c06db7b75fb22d93acaeb")
!10706 = !DINamespace(name: "{impl#4}", scope: !10707)
!10707 = !DINamespace(name: "spec_extend", scope: !21)
!10708 = !DISubroutineType(types: !10709)
!10709 = !{null, !6725, !559}
!10710 = !{!10711, !10712, !10713}
!10711 = !DILocalVariable(name: "self", arg: 1, scope: !10704, file: !10705, line: 53, type: !6725)
!10712 = !DILocalVariable(name: "iterator", arg: 2, scope: !10704, file: !10705, line: 53, type: !559)
!10713 = !DILocalVariable(name: "slice", scope: !10714, file: !10705, line: 54, type: !1433, align: 8)
!10714 = distinct !DILexicalBlock(scope: !10704, file: !10705, line: 54, column: 9)
!10715 = !DILocation(line: 53, column: 20, scope: !10704)
!10716 = !DILocation(line: 53, column: 31, scope: !10704)
!10717 = !DILocation(line: 54, column: 21, scope: !10704)
!10718 = !DILocation(line: 54, column: 13, scope: !10714)
!10719 = !DILocation(line: 55, column: 18, scope: !10714)
!10720 = !DILocation(line: 56, column: 6, scope: !10704)
!10721 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h9204411988406416E", scope: !20, file: !10722, line: 424, type: !10723, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !45)
!10722 = !DIFile(filename: "src/vec/mod.rs", directory: "/Users/yaw/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "0a428cdd45407f3b56cbbceb89e7471e")
!10723 = !DISubroutineType(types: !10724)
!10724 = !{!20}
!10725 = !DILocation(line: 425, column: 20, scope: !10721)
!10726 = !DILocation(line: 425, column: 9, scope: !10721)
!10727 = !DILocation(line: 426, column: 6, scope: !10721)
!10728 = distinct !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h535def991fb56d8dE", scope: !20, file: !10722, line: 482, type: !10729, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !10731)
!10729 = !DISubroutineType(types: !10730)
!10730 = !{!20, !9}
!10731 = !{!10732}
!10732 = !DILocalVariable(name: "capacity", arg: 1, scope: !10728, file: !10722, line: 482, type: !9)
!10733 = !DILocation(line: 482, column: 26, scope: !10728)
!10734 = !DILocation(line: 483, column: 9, scope: !10728)
!10735 = !DILocation(line: 484, column: 6, scope: !10728)
!10736 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hcaa21e3e1357300bE", scope: !20, file: !10722, line: 675, type: !10737, scopeLine: 675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10739)
!10737 = !DISubroutineType(types: !10738)
!10738 = !{!20, !9, !48}
!10739 = !{!10740, !10741}
!10740 = !DILocalVariable(name: "capacity", arg: 1, scope: !10736, file: !10722, line: 675, type: !9)
!10741 = !DILocalVariable(name: "alloc", arg: 2, scope: !10736, file: !10722, line: 675, type: !48)
!10742 = !DILocation(line: 675, column: 29, scope: !10736)
!10743 = !DILocation(line: 675, column: 46, scope: !10736)
!10744 = !DILocation(line: 676, column: 20, scope: !10736)
!10745 = !DILocation(line: 676, column: 9, scope: !10736)
!10746 = !DILocation(line: 677, column: 6, scope: !10736)
!10747 = distinct !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17ha1327c0d27413592E", scope: !20, file: !10722, line: 786, type: !10748, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10750)
!10748 = !DISubroutineType(types: !10749)
!10749 = !{!20, !1308, !9, !9, !48}
!10750 = !{!10751, !10752, !10753, !10754}
!10751 = !DILocalVariable(name: "ptr", arg: 1, scope: !10747, file: !10722, line: 786, type: !1308)
!10752 = !DILocalVariable(name: "length", arg: 2, scope: !10747, file: !10722, line: 786, type: !9)
!10753 = !DILocalVariable(name: "capacity", arg: 3, scope: !10747, file: !10722, line: 786, type: !9)
!10754 = !DILocalVariable(name: "alloc", arg: 4, scope: !10747, file: !10722, line: 786, type: !48)
!10755 = !DILocation(line: 786, column: 37, scope: !10747)
!10756 = !DILocation(line: 786, column: 50, scope: !10747)
!10757 = !DILocation(line: 786, column: 65, scope: !10747)
!10758 = !DILocation(line: 786, column: 82, scope: !10747)
!10759 = !DILocation(line: 787, column: 29, scope: !10747)
!10760 = !DILocation(line: 787, column: 18, scope: !10747)
!10761 = !DILocation(line: 788, column: 6, scope: !10747)
!10762 = distinct !DISubprogram(name: "into_raw_parts<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$14into_raw_parts17hfc7c862054515454E", scope: !20, file: !10722, line: 823, type: !10763, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10765)
!10763 = !DISubroutineType(types: !10764)
!10764 = !{!10090, !20}
!10765 = !{!10766, !10767}
!10766 = !DILocalVariable(name: "self", arg: 1, scope: !10762, file: !10722, line: 823, type: !20)
!10767 = !DILocalVariable(name: "me", scope: !10768, file: !10722, line: 824, type: !10769, align: 8)
!10768 = distinct !DILexicalBlock(scope: !10762, file: !10722, line: 824, column: 9)
!10769 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !756, file: !2, size: 192, align: 64, elements: !10770, templateParams: !1183, identifier: "c260b682d23c5f4e1acab793e220cce6")
!10770 = !{!10771}
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !10769, file: !2, baseType: !20, size: 192, align: 64)
!10772 = !DILocation(line: 823, column: 27, scope: !10762)
!10773 = !DILocation(line: 824, column: 13, scope: !10768)
!10774 = !DILocalVariable(name: "value", arg: 1, scope: !10775, file: !1974, line: 70, type: !20)
!10775 = distinct !DISubprogram(name: "new<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf895c35cd75ebcf0E", scope: !10769, file: !1974, line: 70, type: !10776, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1183, retainedNodes: !10778)
!10776 = !DISubroutineType(types: !10777)
!10777 = !{!10769, !20}
!10778 = !{!10774}
!10779 = !DILocation(line: 70, column: 22, scope: !10775, inlinedAt: !10780)
!10780 = distinct !DILocation(line: 824, column: 22, scope: !10762)
!10781 = !DILocation(line: 71, column: 9, scope: !10775, inlinedAt: !10780)
!10782 = !DILocalVariable(name: "self", arg: 1, scope: !10783, file: !1974, line: 162, type: !10787)
!10783 = distinct !DISubprogram(name: "deref_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3104ffadf35d35a4E", scope: !10784, file: !1974, line: 162, type: !10785, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1183, retainedNodes: !10788)
!10784 = !DINamespace(name: "{impl#3}", scope: !756)
!10785 = !DISubroutineType(types: !10786)
!10786 = !{!6725, !10787}
!10787 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !10769, size: 64, align: 64, dwarfAddressSpace: 0)
!10788 = !{!10782}
!10789 = !DILocation(line: 162, column: 18, scope: !10783, inlinedAt: !10790)
!10790 = distinct !DILocation(line: 825, column: 10, scope: !10768)
!10791 = !DILocation(line: 825, column: 10, scope: !10768)
!10792 = !DILocalVariable(name: "self", arg: 1, scope: !10793, file: !1974, line: 153, type: !10796)
!10793 = distinct !DISubprogram(name: "deref<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2a15093d55e4fe86E", scope: !6887, file: !1974, line: 153, type: !10794, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !1183, retainedNodes: !10797)
!10794 = !DISubroutineType(types: !10795)
!10795 = !{!280, !10796}
!10796 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !10769, size: 64, align: 64, dwarfAddressSpace: 0)
!10797 = !{!10792}
!10798 = !DILocation(line: 153, column: 14, scope: !10793, inlinedAt: !10799)
!10799 = distinct !DILocation(line: 825, column: 27, scope: !10768)
!10800 = !DILocation(line: 825, column: 27, scope: !10768)
!10801 = !DILocation(line: 153, column: 14, scope: !10793, inlinedAt: !10802)
!10802 = distinct !DILocation(line: 825, column: 37, scope: !10768)
!10803 = !DILocation(line: 825, column: 37, scope: !10768)
!10804 = !DILocation(line: 825, column: 9, scope: !10768)
!10805 = !DILocation(line: 826, column: 6, scope: !10762)
!10806 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hc7031ae37ed14fd5E", scope: !20, file: !10722, line: 888, type: !10807, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10809)
!10807 = !DISubroutineType(types: !10808)
!10808 = !{!9, !280}
!10809 = !{!10810}
!10810 = !DILocalVariable(name: "self", arg: 1, scope: !10806, file: !10722, line: 888, type: !280)
!10811 = !DILocation(line: 888, column: 21, scope: !10806)
!10812 = !DILocation(line: 231, column: 21, scope: !6863, inlinedAt: !10813)
!10813 = distinct !DILocation(line: 889, column: 9, scope: !10806)
!10814 = !DILocation(line: 232, column: 44, scope: !6863, inlinedAt: !10813)
!10815 = !DILocation(line: 233, column: 6, scope: !6863, inlinedAt: !10813)
!10816 = !DILocation(line: 890, column: 6, scope: !10806)
!10817 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hdd7de8b6d3adb32bE", scope: !20, file: !10722, line: 911, type: !10818, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10820)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{null, !6725, !9}
!10820 = !{!10821, !10822}
!10821 = !DILocalVariable(name: "self", arg: 1, scope: !10817, file: !10722, line: 911, type: !6725)
!10822 = !DILocalVariable(name: "additional", arg: 2, scope: !10817, file: !10722, line: 911, type: !9)
!10823 = !DILocation(line: 911, column: 20, scope: !10817)
!10824 = !DILocation(line: 911, column: 31, scope: !10817)
!10825 = !DILocation(line: 912, column: 26, scope: !10817)
!10826 = !DILocation(line: 912, column: 9, scope: !10817)
!10827 = !DILocation(line: 913, column: 6, scope: !10817)
!10828 = distinct !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17h76020e232e7b8b88E", scope: !20, file: !10722, line: 941, type: !10818, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10829)
!10829 = !{!10830, !10831}
!10830 = !DILocalVariable(name: "self", arg: 1, scope: !10828, file: !10722, line: 941, type: !6725)
!10831 = !DILocalVariable(name: "additional", arg: 2, scope: !10828, file: !10722, line: 941, type: !9)
!10832 = !DILocation(line: 941, column: 26, scope: !10828)
!10833 = !DILocation(line: 941, column: 37, scope: !10828)
!10834 = !DILocation(line: 942, column: 32, scope: !10828)
!10835 = !DILocation(line: 942, column: 9, scope: !10828)
!10836 = !DILocation(line: 943, column: 6, scope: !10828)
!10837 = distinct !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h3e56d9d8e276deaaE", scope: !20, file: !10722, line: 978, type: !10838, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10840)
!10838 = !DISubroutineType(types: !10839)
!10839 = !{!969, !6725, !9}
!10840 = !{!10841, !10842}
!10841 = !DILocalVariable(name: "self", arg: 1, scope: !10837, file: !10722, line: 978, type: !6725)
!10842 = !DILocalVariable(name: "additional", arg: 2, scope: !10837, file: !10722, line: 978, type: !9)
!10843 = !DILocation(line: 978, column: 24, scope: !10837)
!10844 = !DILocation(line: 978, column: 35, scope: !10837)
!10845 = !DILocation(line: 979, column: 30, scope: !10837)
!10846 = !DILocation(line: 979, column: 9, scope: !10837)
!10847 = !DILocation(line: 980, column: 6, scope: !10837)
!10848 = distinct !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h133b8791feea9172E", scope: !20, file: !10722, line: 1021, type: !10838, scopeLine: 1021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10849)
!10849 = !{!10850, !10851}
!10850 = !DILocalVariable(name: "self", arg: 1, scope: !10848, file: !10722, line: 1021, type: !6725)
!10851 = !DILocalVariable(name: "additional", arg: 2, scope: !10848, file: !10722, line: 1021, type: !9)
!10852 = !DILocation(line: 1021, column: 30, scope: !10848)
!10853 = !DILocation(line: 1021, column: 41, scope: !10848)
!10854 = !DILocation(line: 1022, column: 36, scope: !10848)
!10855 = !DILocation(line: 1022, column: 9, scope: !10848)
!10856 = !DILocation(line: 1023, column: 6, scope: !10848)
!10857 = distinct !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17hd8b16dea3414accfE", scope: !20, file: !10722, line: 1041, type: !10858, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{null, !6725}
!10860 = !{!10861}
!10861 = !DILocalVariable(name: "self", arg: 1, scope: !10857, file: !10722, line: 1041, type: !6725)
!10862 = !DILocation(line: 1041, column: 26, scope: !10857)
!10863 = !DILocation(line: 1045, column: 12, scope: !10857)
!10864 = !DILocation(line: 1045, column: 30, scope: !10857)
!10865 = !DILocation(line: 1048, column: 6, scope: !10857)
!10866 = !DILocation(line: 1046, column: 36, scope: !10857)
!10867 = !DILocation(line: 1046, column: 13, scope: !10857)
!10868 = distinct !DISubprogram(name: "into_boxed_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hc085987315dcaa11E", scope: !20, file: !10722, line: 1103, type: !10869, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10871)
!10869 = !DISubroutineType(types: !10870)
!10870 = !{!322, !20}
!10871 = !{!10872, !10873, !10875, !10877}
!10872 = !DILocalVariable(name: "self", arg: 1, scope: !10868, file: !10722, line: 1103, type: !20)
!10873 = !DILocalVariable(name: "me", scope: !10874, file: !10722, line: 1106, type: !10769, align: 8)
!10874 = distinct !DILexicalBlock(scope: !10868, file: !10722, line: 1106, column: 13)
!10875 = !DILocalVariable(name: "buf", scope: !10876, file: !10722, line: 1107, type: !24, align: 8)
!10876 = distinct !DILexicalBlock(scope: !10874, file: !10722, line: 1107, column: 13)
!10877 = !DILocalVariable(name: "len", scope: !10878, file: !10722, line: 1108, type: !9, align: 8)
!10878 = distinct !DILexicalBlock(scope: !10876, file: !10722, line: 1108, column: 13)
!10879 = !DILocation(line: 1103, column: 29, scope: !10868)
!10880 = !DILocation(line: 1106, column: 17, scope: !10874)
!10881 = !DILocation(line: 1105, column: 13, scope: !10868)
!10882 = !DILocation(line: 1106, column: 40, scope: !10868)
!10883 = !DILocation(line: 70, column: 22, scope: !10775, inlinedAt: !10884)
!10884 = distinct !DILocation(line: 1106, column: 22, scope: !10868)
!10885 = !DILocation(line: 71, column: 9, scope: !10775, inlinedAt: !10884)
!10886 = !DILocation(line: 153, column: 14, scope: !10793, inlinedAt: !10887)
!10887 = distinct !DILocation(line: 1107, column: 34, scope: !10874)
!10888 = !DILocation(line: 1107, column: 23, scope: !10874)
!10889 = !DILocation(line: 1107, column: 17, scope: !10876)
!10890 = !DILocation(line: 153, column: 14, scope: !10793, inlinedAt: !10891)
!10891 = distinct !DILocation(line: 1108, column: 23, scope: !10876)
!10892 = !DILocation(line: 1108, column: 23, scope: !10876)
!10893 = !DILocation(line: 1108, column: 17, scope: !10878)
!10894 = !DILocation(line: 1109, column: 13, scope: !10878)
!10895 = !DILocation(line: 1111, column: 6, scope: !10868)
!10896 = distinct !DISubprogram(name: "truncate<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8truncate17h5766b70e08552e60E", scope: !20, file: !10722, line: 1156, type: !10818, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10897)
!10897 = !{!10898, !10899, !10900, !10902}
!10898 = !DILocalVariable(name: "self", arg: 1, scope: !10896, file: !10722, line: 1156, type: !6725)
!10899 = !DILocalVariable(name: "len", arg: 2, scope: !10896, file: !10722, line: 1156, type: !9)
!10900 = !DILocalVariable(name: "remaining_len", scope: !10901, file: !10722, line: 1171, type: !9, align: 8)
!10901 = distinct !DILexicalBlock(scope: !10896, file: !10722, line: 1171, column: 13)
!10902 = !DILocalVariable(name: "s", scope: !10903, file: !10722, line: 1172, type: !2681, align: 8)
!10903 = distinct !DILexicalBlock(scope: !10901, file: !10722, line: 1172, column: 13)
!10904 = !DILocation(line: 1156, column: 21, scope: !10896)
!10905 = !DILocation(line: 1156, column: 32, scope: !10896)
!10906 = !DILocation(line: 1168, column: 22, scope: !10896)
!10907 = !DILocation(line: 1168, column: 16, scope: !10896)
!10908 = !DILocation(line: 1171, column: 33, scope: !10896)
!10909 = !DILocation(line: 1176, column: 6, scope: !10896)
!10910 = !DILocation(line: 1171, column: 17, scope: !10901)
!10911 = !DILocation(line: 1172, column: 51, scope: !10901)
!10912 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !10913)
!10913 = distinct !DILocation(line: 1172, column: 51, scope: !10901)
!10914 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !10913)
!10915 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !10916)
!10916 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !10913)
!10917 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !10916)
!10918 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !10916)
!10919 = !DILocation(line: 1172, column: 21, scope: !10901)
!10920 = !DILocation(line: 1172, column: 17, scope: !10903)
!10921 = !DILocation(line: 1173, column: 13, scope: !10903)
!10922 = !DILocation(line: 1174, column: 13, scope: !10903)
!10923 = distinct !DISubprogram(name: "as_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17ha6d67d0ada786caeE", scope: !20, file: !10722, line: 1191, type: !10924, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10926)
!10924 = !DISubroutineType(types: !10925)
!10925 = !{!1433, !280}
!10926 = !{!10927}
!10927 = !DILocalVariable(name: "self", arg: 1, scope: !10923, file: !10722, line: 1191, type: !280)
!10928 = !DILocation(line: 1191, column: 21, scope: !10923)
!10929 = !DILocation(line: 1192, column: 9, scope: !10923)
!10930 = !DILocation(line: 1193, column: 6, scope: !10923)
!10931 = distinct !DISubprogram(name: "as_mut_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h0815b4cbd6a57810E", scope: !20, file: !10722, line: 1208, type: !10932, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10934)
!10932 = !DISubroutineType(types: !10933)
!10933 = !{!3899, !6725}
!10934 = !{!10935}
!10935 = !DILocalVariable(name: "self", arg: 1, scope: !10931, file: !10722, line: 1208, type: !6725)
!10936 = !DILocation(line: 1208, column: 25, scope: !10931)
!10937 = !DILocation(line: 1209, column: 9, scope: !10931)
!10938 = !DILocation(line: 1210, column: 6, scope: !10931)
!10939 = distinct !DISubprogram(name: "as_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf37ccd2c9d3e0ec9E", scope: !20, file: !10722, line: 1240, type: !10940, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10942)
!10940 = !DISubroutineType(types: !10941)
!10941 = !{!38, !280}
!10942 = !{!10943, !10944}
!10943 = !DILocalVariable(name: "self", arg: 1, scope: !10939, file: !10722, line: 1240, type: !280)
!10944 = !DILocalVariable(name: "ptr", scope: !10945, file: !10722, line: 1243, type: !1308, align: 8)
!10945 = distinct !DILexicalBlock(scope: !10939, file: !10722, line: 1243, column: 9)
!10946 = !DILocation(line: 1240, column: 19, scope: !10939)
!10947 = !DILocation(line: 1243, column: 19, scope: !10939)
!10948 = !DILocation(line: 1243, column: 13, scope: !10945)
!10949 = !DILocation(line: 1245, column: 21, scope: !10945)
!10950 = !DILocation(line: 1245, column: 20, scope: !10945)
!10951 = !DILocation(line: 1245, column: 13, scope: !10945)
!10952 = !DILocation(line: 1248, column: 6, scope: !10939)
!10953 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17ha58e1d5b84f66664E", scope: !20, file: !10722, line: 1277, type: !10954, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10956)
!10954 = !DISubroutineType(types: !10955)
!10955 = !{!1308, !6725}
!10956 = !{!10957, !10958}
!10957 = !DILocalVariable(name: "self", arg: 1, scope: !10953, file: !10722, line: 1277, type: !6725)
!10958 = !DILocalVariable(name: "ptr", scope: !10959, file: !10722, line: 1280, type: !1308, align: 8)
!10959 = distinct !DILexicalBlock(scope: !10953, file: !10722, line: 1280, column: 9)
!10960 = !DILocation(line: 1277, column: 23, scope: !10953)
!10961 = !DILocation(line: 1280, column: 19, scope: !10953)
!10962 = !DILocation(line: 1280, column: 13, scope: !10959)
!10963 = !DILocation(line: 1282, column: 21, scope: !10959)
!10964 = !DILocation(line: 1282, column: 20, scope: !10959)
!10965 = !DILocation(line: 1282, column: 13, scope: !10959)
!10966 = !DILocation(line: 1285, column: 6, scope: !10953)
!10967 = distinct !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h614a3eb061a21414E", scope: !20, file: !10722, line: 1290, type: !10968, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10970)
!10968 = !DISubroutineType(types: !10969)
!10969 = !{!6978, !280}
!10970 = !{!10971}
!10971 = !DILocalVariable(name: "self", arg: 1, scope: !10967, file: !10722, line: 1290, type: !280)
!10972 = !DILocation(line: 1290, column: 22, scope: !10967)
!10973 = !DILocation(line: 1291, column: 9, scope: !10967)
!10974 = !DILocation(line: 1292, column: 6, scope: !10967)
!10975 = distinct !DISubprogram(name: "set_len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hd875b098406dc612E", scope: !20, file: !10722, line: 1374, type: !10818, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !10976)
!10976 = !{!10977, !10978}
!10977 = !DILocalVariable(name: "self", arg: 1, scope: !10975, file: !10722, line: 1374, type: !6725)
!10978 = !DILocalVariable(name: "new_len", arg: 2, scope: !10975, file: !10722, line: 1374, type: !9)
!10979 = !DILocation(line: 1374, column: 27, scope: !10975)
!10980 = !DILocation(line: 1374, column: 38, scope: !10975)
!10981 = !DILocation(line: 1375, column: 34, scope: !10975)
!10982 = !DILocation(line: 1375, column: 23, scope: !10975)
!10983 = !DILocation(line: 1375, column: 9, scope: !10975)
!10984 = !DILocation(line: 1377, column: 9, scope: !10975)
!10985 = !DILocation(line: 1378, column: 6, scope: !10975)
!10986 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11swap_remove13assert_failed17hd9795a50a4c7c14bE", scope: !10987, file: !10722, line: 1409, type: !7850, scopeLine: 1409, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10989)
!10987 = !DINamespace(name: "swap_remove", scope: !10988)
!10988 = !DINamespace(name: "{impl#1}", scope: !21)
!10989 = !{!10990, !10991}
!10990 = !DILocalVariable(name: "index", arg: 1, scope: !10986, file: !10722, line: 1409, type: !9)
!10991 = !DILocalVariable(name: "len", arg: 2, scope: !10986, file: !10722, line: 1409, type: !9)
!10992 = !DILocation(line: 1409, column: 26, scope: !10986)
!10993 = !DILocation(line: 1409, column: 40, scope: !10986)
!10994 = !DILocation(line: 1410, column: 13, scope: !10986)
!10995 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6insert13assert_failed17h1eb88b12e93b6576E", scope: !10996, file: !10722, line: 1450, type: !7850, scopeLine: 1450, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !10997)
!10996 = !DINamespace(name: "insert", scope: !10988)
!10997 = !{!10998, !10999}
!10998 = !DILocalVariable(name: "index", arg: 1, scope: !10995, file: !10722, line: 1450, type: !9)
!10999 = !DILocalVariable(name: "len", arg: 2, scope: !10995, file: !10722, line: 1450, type: !9)
!11000 = !DILocation(line: 1450, column: 26, scope: !10995)
!11001 = !DILocation(line: 1450, column: 40, scope: !10995)
!11002 = !DILocation(line: 1451, column: 13, scope: !10995)
!11003 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17h1e5488aacf3e4223E", scope: !11004, file: !10722, line: 1512, type: !11005, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11007)
!11004 = !DINamespace(name: "remove", scope: !10988)
!11005 = !DISubroutineType(types: !11006)
!11006 = !{null, !9, !9, !882}
!11007 = !{!11008, !11009}
!11008 = !DILocalVariable(name: "index", arg: 1, scope: !11003, file: !10722, line: 1512, type: !9)
!11009 = !DILocalVariable(name: "len", arg: 2, scope: !11003, file: !10722, line: 1512, type: !9)
!11010 = !DILocation(line: 1512, column: 26, scope: !11003)
!11011 = !DILocation(line: 1512, column: 40, scope: !11003)
!11012 = !DILocation(line: 1513, column: 13, scope: !11003)
!11013 = distinct !DISubprogram(name: "push<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3a7b6b09314ccc8dE", scope: !20, file: !10722, line: 1836, type: !11014, scopeLine: 1836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11016)
!11014 = !DISubroutineType(types: !11015)
!11015 = !{null, !6725, !39}
!11016 = !{!11017, !11018, !11019}
!11017 = !DILocalVariable(name: "self", arg: 1, scope: !11013, file: !10722, line: 1836, type: !6725)
!11018 = !DILocalVariable(name: "value", arg: 2, scope: !11013, file: !10722, line: 1836, type: !39)
!11019 = !DILocalVariable(name: "end", scope: !11020, file: !10722, line: 1843, type: !1308, align: 8)
!11020 = distinct !DILexicalBlock(scope: !11013, file: !10722, line: 1843, column: 13)
!11021 = !DILocation(line: 1836, column: 17, scope: !11013)
!11022 = !DILocation(line: 1836, column: 28, scope: !11013)
!11023 = !DILocation(line: 1839, column: 12, scope: !11013)
!11024 = !DILocation(line: 231, column: 21, scope: !6863, inlinedAt: !11025)
!11025 = distinct !DILocation(line: 1839, column: 24, scope: !11013)
!11026 = !DILocation(line: 232, column: 44, scope: !6863, inlinedAt: !11025)
!11027 = !DILocation(line: 233, column: 6, scope: !6863, inlinedAt: !11025)
!11028 = !DILocation(line: 1843, column: 23, scope: !11013)
!11029 = !DILocation(line: 1843, column: 45, scope: !11013)
!11030 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !11031)
!11031 = distinct !DILocation(line: 1843, column: 23, scope: !11013)
!11032 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !11031)
!11033 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !11034)
!11034 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !11031)
!11035 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !11034)
!11036 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !11034)
!11037 = !DILocation(line: 1843, column: 17, scope: !11020)
!11038 = !DILocation(line: 1844, column: 13, scope: !11020)
!11039 = !DILocation(line: 1845, column: 13, scope: !11020)
!11040 = !DILocation(line: 1840, column: 39, scope: !11013)
!11041 = !DILocation(line: 1840, column: 13, scope: !11013)
!11042 = !DILocation(line: 1847, column: 6, scope: !11013)
!11043 = distinct !DISubprogram(name: "pop<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h416b6370274bf058E", scope: !20, file: !10722, line: 1911, type: !11044, scopeLine: 1911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11046)
!11044 = !DISubroutineType(types: !11045)
!11045 = !{!83, !6725}
!11046 = !{!11047}
!11047 = !DILocalVariable(name: "self", arg: 1, scope: !11043, file: !10722, line: 1911, type: !6725)
!11048 = !DILocation(line: 1911, column: 16, scope: !11043)
!11049 = !DILocation(line: 1912, column: 12, scope: !11043)
!11050 = !DILocation(line: 1913, column: 13, scope: !11043)
!11051 = !DILocation(line: 1912, column: 9, scope: !11043)
!11052 = !DILocation(line: 1916, column: 17, scope: !11043)
!11053 = !DILocation(line: 1917, column: 32, scope: !11043)
!11054 = !DILocation(line: 1917, column: 50, scope: !11043)
!11055 = !DILocation(line: 915, column: 29, scope: !3819, inlinedAt: !11056)
!11056 = distinct !DILocation(line: 1917, column: 32, scope: !11043)
!11057 = !DILocation(line: 915, column: 35, scope: !3819, inlinedAt: !11056)
!11058 = !DILocation(line: 460, column: 32, scope: !3828, inlinedAt: !11059)
!11059 = distinct !DILocation(line: 920, column: 18, scope: !3819, inlinedAt: !11056)
!11060 = !DILocation(line: 460, column: 38, scope: !3828, inlinedAt: !11059)
!11061 = !DILocation(line: 465, column: 18, scope: !3828, inlinedAt: !11059)
!11062 = !DILocation(line: 1917, column: 22, scope: !11043)
!11063 = !DILocation(line: 1917, column: 17, scope: !11043)
!11064 = !DILocation(line: 1920, column: 6, scope: !11043)
!11065 = distinct !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h21558dcc8ec1dbc0E", scope: !20, file: !10722, line: 1950, type: !11066, scopeLine: 1950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11068)
!11066 = !DISubroutineType(types: !11067)
!11067 = !{null, !6725, !834}
!11068 = !{!11069, !11070, !11071, !11073}
!11069 = !DILocalVariable(name: "self", arg: 1, scope: !11065, file: !10722, line: 1950, type: !6725)
!11070 = !DILocalVariable(name: "other", arg: 2, scope: !11065, file: !10722, line: 1950, type: !834)
!11071 = !DILocalVariable(name: "count", scope: !11072, file: !10722, line: 1951, type: !9, align: 8)
!11072 = distinct !DILexicalBlock(scope: !11065, file: !10722, line: 1951, column: 9)
!11073 = !DILocalVariable(name: "len", scope: !11074, file: !10722, line: 1953, type: !9, align: 8)
!11074 = distinct !DILexicalBlock(scope: !11072, file: !10722, line: 1953, column: 9)
!11075 = !DILocation(line: 1950, column: 31, scope: !11065)
!11076 = !DILocation(line: 1950, column: 42, scope: !11065)
!11077 = !DILocation(line: 1951, column: 30, scope: !11065)
!11078 = !DILocation(line: 1951, column: 13, scope: !11072)
!11079 = !DILocation(line: 1952, column: 9, scope: !11072)
!11080 = !DILocation(line: 1953, column: 19, scope: !11072)
!11081 = !DILocation(line: 1953, column: 13, scope: !11074)
!11082 = !DILocation(line: 1954, column: 62, scope: !11074)
!11083 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !11084)
!11084 = distinct !DILocation(line: 1954, column: 62, scope: !11074)
!11085 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !11084)
!11086 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !11087)
!11087 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !11084)
!11088 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !11087)
!11089 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !11087)
!11090 = !DILocation(line: 1954, column: 18, scope: !11074)
!11091 = !DILocation(line: 1955, column: 9, scope: !11074)
!11092 = !DILocation(line: 1956, column: 6, scope: !11065)
!11093 = distinct !DISubprogram(name: "drain<u8, alloc::alloc::Global, core::ops::range::Range<usize>>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17h18adce0b1c57c34fE", scope: !20, file: !10722, line: 1989, type: !11094, scopeLine: 1989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !11106, retainedNodes: !11096)
!11094 = !DISubroutineType(types: !11095)
!11095 = !{!1915, !6725, !3780}
!11096 = !{!11097, !11098, !11099, !11101, !11103, !11104}
!11097 = !DILocalVariable(name: "self", arg: 1, scope: !11093, file: !10722, line: 1989, type: !6725)
!11098 = !DILocalVariable(name: "range", arg: 2, scope: !11093, file: !10722, line: 1989, type: !3780)
!11099 = !DILocalVariable(name: "len", scope: !11100, file: !10722, line: 2003, type: !9, align: 8)
!11100 = distinct !DILexicalBlock(scope: !11093, file: !10722, line: 2003, column: 9)
!11101 = !DILocalVariable(name: "start", scope: !11102, file: !10722, line: 2004, type: !9, align: 8)
!11102 = distinct !DILexicalBlock(scope: !11100, file: !10722, line: 2004, column: 9)
!11103 = !DILocalVariable(name: "end", scope: !11102, file: !10722, line: 2004, type: !9, align: 8)
!11104 = !DILocalVariable(name: "range_slice", scope: !11105, file: !10722, line: 2009, type: !1433, align: 8)
!11105 = distinct !DILexicalBlock(scope: !11102, file: !10722, line: 2009, column: 13)
!11106 = !{!41, !51, !5066}
!11107 = !DILocation(line: 1989, column: 21, scope: !11093)
!11108 = !DILocation(line: 1989, column: 32, scope: !11093)
!11109 = !DILocation(line: 2003, column: 19, scope: !11093)
!11110 = !DILocation(line: 2003, column: 13, scope: !11100)
!11111 = !DILocation(line: 2004, column: 56, scope: !11100)
!11112 = !DILocation(line: 2004, column: 36, scope: !11100)
!11113 = !DILocation(line: 2004, column: 21, scope: !11100)
!11114 = !DILocation(line: 2004, column: 21, scope: !11102)
!11115 = !DILocation(line: 2004, column: 28, scope: !11100)
!11116 = !DILocation(line: 2004, column: 28, scope: !11102)
!11117 = !DILocation(line: 2008, column: 13, scope: !11102)
!11118 = !DILocation(line: 2009, column: 53, scope: !11102)
!11119 = !DILocation(line: 915, column: 29, scope: !3819, inlinedAt: !11120)
!11120 = distinct !DILocation(line: 2009, column: 53, scope: !11102)
!11121 = !DILocation(line: 915, column: 35, scope: !3819, inlinedAt: !11120)
!11122 = !DILocation(line: 460, column: 32, scope: !3828, inlinedAt: !11123)
!11123 = distinct !DILocation(line: 920, column: 18, scope: !3819, inlinedAt: !11120)
!11124 = !DILocation(line: 460, column: 38, scope: !3828, inlinedAt: !11123)
!11125 = !DILocation(line: 465, column: 18, scope: !3828, inlinedAt: !11123)
!11126 = !DILocation(line: 2009, column: 79, scope: !11102)
!11127 = !DILocation(line: 2009, column: 31, scope: !11102)
!11128 = !DILocation(line: 2009, column: 17, scope: !11105)
!11129 = !DILocation(line: 2012, column: 27, scope: !11105)
!11130 = !DILocation(line: 2013, column: 23, scope: !11105)
!11131 = !DILocation(line: 2014, column: 22, scope: !11105)
!11132 = !DILocation(line: 2010, column: 13, scope: !11105)
!11133 = !DILocation(line: 2017, column: 6, scope: !11093)
!11134 = distinct !DISubprogram(name: "clear<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17h1fc4271a57ab8d97E", scope: !20, file: !10722, line: 2035, type: !10858, scopeLine: 2035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11135)
!11135 = !{!11136, !11137}
!11136 = !DILocalVariable(name: "self", arg: 1, scope: !11134, file: !10722, line: 2035, type: !6725)
!11137 = !DILocalVariable(name: "elems", scope: !11138, file: !10722, line: 2036, type: !2681, align: 8)
!11138 = distinct !DILexicalBlock(scope: !11134, file: !10722, line: 2036, column: 9)
!11139 = !DILocation(line: 2035, column: 18, scope: !11134)
!11140 = !DILocation(line: 2036, column: 31, scope: !11134)
!11141 = !DILocation(line: 2036, column: 13, scope: !11138)
!11142 = !DILocation(line: 2045, column: 13, scope: !11138)
!11143 = !DILocation(line: 2048, column: 6, scope: !11134)
!11144 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48254add6beb6c39E", scope: !20, file: !10722, line: 2061, type: !10807, scopeLine: 2061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11145)
!11145 = !{!11146}
!11146 = !DILocalVariable(name: "self", arg: 1, scope: !11144, file: !10722, line: 2061, type: !280)
!11147 = !DILocation(line: 2061, column: 16, scope: !11144)
!11148 = !DILocation(line: 2062, column: 9, scope: !11144)
!11149 = !DILocation(line: 2063, column: 6, scope: !11144)
!11150 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$9split_off13assert_failed17h5d65e091e7cb8e15E", scope: !11151, file: !10722, line: 2109, type: !7850, scopeLine: 2109, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11152)
!11151 = !DINamespace(name: "split_off", scope: !10988)
!11152 = !{!11153, !11154}
!11153 = !DILocalVariable(name: "at", arg: 1, scope: !11150, file: !10722, line: 2109, type: !9)
!11154 = !DILocalVariable(name: "len", arg: 2, scope: !11150, file: !10722, line: 2109, type: !9)
!11155 = !DILocation(line: 2109, column: 26, scope: !11150)
!11156 = !DILocation(line: 2109, column: 37, scope: !11150)
!11157 = !DILocation(line: 2110, column: 13, scope: !11150)
!11158 = distinct !DISubprogram(name: "spare_capacity_mut<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hbe96f52d533dc352E", scope: !20, file: !10722, line: 2241, type: !11159, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11161)
!11159 = !DISubroutineType(types: !11160)
!11160 = !{!4900, !6725}
!11161 = !{!11162}
!11162 = !DILocalVariable(name: "self", arg: 1, scope: !11158, file: !10722, line: 2241, type: !6725)
!11163 = !DILocation(line: 2241, column: 31, scope: !11158)
!11164 = !DILocation(line: 2247, column: 17, scope: !11158)
!11165 = !DILocation(line: 2247, column: 39, scope: !11158)
!11166 = !DILocation(line: 1015, column: 29, scope: !5932, inlinedAt: !11167)
!11167 = distinct !DILocation(line: 2247, column: 17, scope: !11158)
!11168 = !DILocation(line: 1015, column: 35, scope: !5932, inlinedAt: !11167)
!11169 = !DILocation(line: 472, column: 32, scope: !5941, inlinedAt: !11170)
!11170 = distinct !DILocation(line: 1020, column: 18, scope: !5932, inlinedAt: !11167)
!11171 = !DILocation(line: 472, column: 38, scope: !5941, inlinedAt: !11170)
!11172 = !DILocation(line: 479, column: 18, scope: !5941, inlinedAt: !11170)
!11173 = !DILocation(line: 231, column: 21, scope: !6863, inlinedAt: !11174)
!11174 = distinct !DILocation(line: 2248, column: 17, scope: !11158)
!11175 = !DILocation(line: 232, column: 44, scope: !6863, inlinedAt: !11174)
!11176 = !DILocation(line: 233, column: 6, scope: !6863, inlinedAt: !11174)
!11177 = !DILocation(line: 2248, column: 39, scope: !11158)
!11178 = !DILocation(line: 2248, column: 17, scope: !11158)
!11179 = !DILocation(line: 2246, column: 13, scope: !11158)
!11180 = !DILocation(line: 2251, column: 6, scope: !11158)
!11181 = distinct !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17hd7661a6f6c782598E", scope: !20, file: !10722, line: 2397, type: !11182, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11184)
!11182 = !DISubroutineType(types: !11183)
!11183 = !{null, !6725, !1433}
!11184 = !{!11185, !11186}
!11185 = !DILocalVariable(name: "self", arg: 1, scope: !11181, file: !10722, line: 2397, type: !6725)
!11186 = !DILocalVariable(name: "other", arg: 2, scope: !11181, file: !10722, line: 2397, type: !1433)
!11187 = !DILocation(line: 2397, column: 30, scope: !11181)
!11188 = !DILocation(line: 2397, column: 41, scope: !11181)
!11189 = !DILocation(line: 2398, column: 26, scope: !11181)
!11190 = !DILocation(line: 2398, column: 9, scope: !11181)
!11191 = !DILocation(line: 2399, column: 6, scope: !11181)
!11192 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8e39e4e9102da1baE", scope: !11193, file: !10722, line: 2636, type: !10924, scopeLine: 2636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11194)
!11193 = !DINamespace(name: "{impl#9}", scope: !21)
!11194 = !{!11195}
!11195 = !DILocalVariable(name: "self", arg: 1, scope: !11192, file: !10722, line: 2636, type: !280)
!11196 = !DILocation(line: 2636, column: 14, scope: !11192)
!11197 = !DILocation(line: 2637, column: 40, scope: !11192)
!11198 = !DILocation(line: 2637, column: 55, scope: !11192)
!11199 = !DILocation(line: 2637, column: 18, scope: !11192)
!11200 = !DILocation(line: 2638, column: 6, scope: !11192)
!11201 = distinct !DISubprogram(name: "deref_mut<u8, alloc::alloc::Global>", linkageName: "_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h79749a66f96a9388E", scope: !11202, file: !10722, line: 2644, type: !10932, scopeLine: 2644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11203)
!11202 = !DINamespace(name: "{impl#10}", scope: !21)
!11203 = !{!11204}
!11204 = !DILocalVariable(name: "self", arg: 1, scope: !11201, file: !10722, line: 2644, type: !6725)
!11205 = !DILocation(line: 2644, column: 18, scope: !11201)
!11206 = !DILocation(line: 2645, column: 44, scope: !11201)
!11207 = !DILocation(line: 2645, column: 63, scope: !11201)
!11208 = !DILocation(line: 2645, column: 18, scope: !11201)
!11209 = !DILocation(line: 2646, column: 6, scope: !11201)
!11210 = distinct !DISubprogram(name: "clone<u8, alloc::alloc::Global>", linkageName: "_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h58e1d92982ef903eE", scope: !11211, file: !10722, line: 2653, type: !11212, scopeLine: 2653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11214)
!11211 = !DINamespace(name: "{impl#11}", scope: !21)
!11212 = !DISubroutineType(types: !11213)
!11213 = !{!20, !280}
!11214 = !{!11215, !11216}
!11215 = !DILocalVariable(name: "self", arg: 1, scope: !11210, file: !10722, line: 2653, type: !280)
!11216 = !DILocalVariable(name: "alloc", scope: !11217, file: !10722, line: 2654, type: !48, align: 1)
!11217 = distinct !DILexicalBlock(scope: !11210, file: !10722, line: 2654, column: 9)
!11218 = !DILocation(line: 2653, column: 14, scope: !11210)
!11219 = !DILocation(line: 2654, column: 13, scope: !11217)
!11220 = !DILocation(line: 2654, column: 21, scope: !11210)
!11221 = !DILocation(line: 2655, column: 27, scope: !11217)
!11222 = !DILocation(line: 2655, column: 9, scope: !11217)
!11223 = !DILocation(line: 2656, column: 6, scope: !11210)
!11224 = distinct !DISubprogram(name: "clone_from<u8, alloc::alloc::Global>", linkageName: "_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17h5277c6e7eb5612fdE", scope: !11211, file: !10722, line: 2668, type: !11225, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11227)
!11225 = !DISubroutineType(types: !11226)
!11226 = !{null, !6725, !280}
!11227 = !{!11228, !11229}
!11228 = !DILocalVariable(name: "self", arg: 1, scope: !11224, file: !10722, line: 2668, type: !6725)
!11229 = !DILocalVariable(name: "other", arg: 2, scope: !11224, file: !10722, line: 2668, type: !280)
!11230 = !DILocation(line: 2668, column: 19, scope: !11224)
!11231 = !DILocation(line: 2668, column: 30, scope: !11224)
!11232 = !DILocation(line: 2669, column: 52, scope: !11224)
!11233 = !DILocation(line: 2669, column: 9, scope: !11224)
!11234 = !DILocation(line: 2670, column: 6, scope: !11224)
!11235 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull, alloc::alloc::Global>", linkageName: "_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h5ff7c49b12e6a03bE", scope: !11236, file: !10722, line: 2702, type: !11237, scopeLine: 2702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !11242, retainedNodes: !11239)
!11236 = !DINamespace(name: "{impl#13}", scope: !21)
!11237 = !DISubroutineType(types: !11238)
!11238 = !{!1433, !280, !3862, !882}
!11239 = !{!11240, !11241}
!11240 = !DILocalVariable(name: "self", arg: 1, scope: !11235, file: !10722, line: 2702, type: !280)
!11241 = !DILocalVariable(name: "index", arg: 2, scope: !11235, file: !10722, line: 2702, type: !3862)
!11242 = !{!41, !3867, !51}
!11243 = !DILocation(line: 2702, column: 14, scope: !11235)
!11244 = !DILocation(line: 2702, column: 21, scope: !11235)
!11245 = !DILocation(line: 2703, column: 23, scope: !11235)
!11246 = !DILocation(line: 2703, column: 9, scope: !11235)
!11247 = !DILocation(line: 2704, column: 6, scope: !11235)
!11248 = distinct !DISubprogram(name: "extend<u8, alloc::alloc::Global, &[u8]>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h91cf5eac2fa46b08E", scope: !11249, file: !10722, line: 2987, type: !11182, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !11253, retainedNodes: !11250)
!11249 = !DINamespace(name: "{impl#21}", scope: !21)
!11250 = !{!11251, !11252}
!11251 = !DILocalVariable(name: "self", arg: 1, scope: !11248, file: !10722, line: 2987, type: !6725)
!11252 = !DILocalVariable(name: "iter", arg: 2, scope: !11248, file: !10722, line: 2987, type: !1433)
!11253 = !{!41, !51, !11254}
!11254 = !DITemplateTypeParameter(name: "I", type: !1433)
!11255 = !DILocation(line: 2987, column: 46, scope: !11248)
!11256 = !DILocation(line: 2987, column: 57, scope: !11248)
!11257 = !DILocation(line: 2988, column: 26, scope: !11248)
!11258 = !DILocation(line: 2988, column: 9, scope: !11248)
!11259 = !DILocation(line: 2989, column: 6, scope: !11248)
!11260 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9452a7d31f766b00E", scope: !11261, file: !10722, line: 3025, type: !10858, scopeLine: 3025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11262)
!11261 = !DINamespace(name: "{impl#25}", scope: !21)
!11262 = !{!11263}
!11263 = !DILocalVariable(name: "self", arg: 1, scope: !11260, file: !10722, line: 3025, type: !6725)
!11264 = !DILocation(line: 3025, column: 13, scope: !11260)
!11265 = !DILocation(line: 3030, column: 62, scope: !11260)
!11266 = !DILocation(line: 3030, column: 81, scope: !11260)
!11267 = !DILocation(line: 3030, column: 32, scope: !11260)
!11268 = !DILocation(line: 3033, column: 6, scope: !11260)
!11269 = distinct !DISubprogram(name: "fmt<u8, alloc::alloc::Global>", linkageName: "_ZN65_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hd393aa0156f5d7a0E", scope: !11270, file: !10722, line: 3049, type: !11271, scopeLine: 3049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !50, retainedNodes: !11273)
!11270 = !DINamespace(name: "{impl#27}", scope: !21)
!11271 = !DISubroutineType(types: !11272)
!11272 = !{!1103, !280, !1119}
!11273 = !{!11274, !11275}
!11274 = !DILocalVariable(name: "self", arg: 1, scope: !11269, file: !10722, line: 3049, type: !280)
!11275 = !DILocalVariable(name: "f", arg: 2, scope: !11269, file: !10722, line: 3049, type: !1119)
!11276 = !DILocation(line: 3049, column: 12, scope: !11269)
!11277 = !DILocation(line: 3049, column: 19, scope: !11269)
!11278 = !DILocation(line: 3050, column: 26, scope: !11269)
!11279 = !DILocation(line: 3050, column: 9, scope: !11269)
!11280 = !DILocation(line: 3051, column: 6, scope: !11269)
!11281 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN87_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h9e29b7b9ef4aa54cE", scope: !11282, file: !10722, line: 3093, type: !9376, scopeLine: 3093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !40, retainedNodes: !11283)
!11282 = !DINamespace(name: "{impl#32}", scope: !21)
!11283 = !{!11284}
!11284 = !DILocalVariable(name: "s", arg: 1, scope: !11281, file: !10722, line: 3093, type: !1433)
!11285 = !DILocation(line: 3093, column: 13, scope: !11281)
!11286 = !DILocation(line: 3094, column: 9, scope: !11281)
!11287 = !DILocation(line: 3095, column: 6, scope: !11281)
!11288 = distinct !DISubprogram(name: "from", linkageName: "_ZN80_$LT$alloc..vec..Vec$LT$u8$GT$$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hee30c081acde0380E", scope: !11289, file: !10722, line: 3223, type: !11290, scopeLine: 3223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11292)
!11289 = !DINamespace(name: "{impl#38}", scope: !21)
!11290 = !DISubroutineType(types: !11291)
!11291 = !{!20, !145}
!11292 = !{!11293}
!11293 = !DILocalVariable(name: "s", arg: 1, scope: !11288, file: !10722, line: 3223, type: !145)
!11294 = !DILocation(line: 3223, column: 13, scope: !11288)
!11295 = !DILocation(line: 325, column: 27, scope: !3732, inlinedAt: !11296)
!11296 = distinct !DILocation(line: 3224, column: 20, scope: !11288)
!11297 = !DILocation(line: 327, column: 18, scope: !3732, inlinedAt: !11296)
!11298 = !DILocation(line: 328, column: 6, scope: !3732, inlinedAt: !11296)
!11299 = !DILocation(line: 3224, column: 20, scope: !11288)
!11300 = !DILocation(line: 3224, column: 9, scope: !11288)
!11301 = !DILocation(line: 3225, column: 6, scope: !11288)
!11302 = distinct !DISubprogram(name: "clone", linkageName: "_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h187cfdf791c04a0fE", scope: !11303, file: !7474, line: 53, type: !11304, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11306)
!11303 = !DINamespace(name: "{impl#5}", scope: !49)
!11304 = !DISubroutineType(types: !11305)
!11305 = !{null, !6978}
!11306 = !{!11307}
!11307 = !DILocalVariable(name: "self", arg: 1, scope: !11302, file: !7474, line: 53, type: !6978)
!11308 = !DILocation(line: 53, column: 16, scope: !11302)
!11309 = !DILocation(line: 53, column: 21, scope: !11302)
!11310 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN57_$LT$alloc..alloc..Global$u20$as$u20$core..fmt..Debug$GT$3fmt17h0ba7c081db2e79d3E", scope: !11311, file: !7474, line: 53, type: !11312, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11314)
!11311 = !DINamespace(name: "{impl#7}", scope: !49)
!11312 = !DISubroutineType(types: !11313)
!11313 = !{!1103, !6978, !1119}
!11314 = !{!11315, !11316}
!11315 = !DILocalVariable(name: "self", arg: 1, scope: !11310, file: !7474, line: 53, type: !6978)
!11316 = !DILocalVariable(name: "f", arg: 2, scope: !11310, file: !7474, line: 53, type: !1119)
!11317 = !DILocation(line: 53, column: 32, scope: !11310)
!11318 = !DILocation(line: 53, column: 37, scope: !11310)
!11319 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN82_$LT$alloc..collections..btree..set_val..SetValZST$u20$as$u20$core..fmt..Debug$GT$3fmt17h4675f4e3ed78722eE", scope: !11320, file: !8646, line: 5, type: !11321, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11325)
!11320 = !DINamespace(name: "{impl#2}", scope: !8648)
!11321 = !DISubroutineType(types: !11322)
!11322 = !{!1103, !11323, !1119}
!11323 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::btree::set_val::SetValZST", baseType: !11324, size: 64, align: 64, dwarfAddressSpace: 0)
!11324 = !DICompositeType(tag: DW_TAG_structure_type, name: "SetValZST", scope: !8648, file: !2, align: 8, elements: !45, identifier: "5ef039e77b545aeed4733e97ec8e2dc9")
!11325 = !{!11326, !11327}
!11326 = !DILocalVariable(name: "self", arg: 1, scope: !11319, file: !8646, line: 5, type: !11323)
!11327 = !DILocalVariable(name: "f", arg: 2, scope: !11319, file: !8646, line: 5, type: !1119)
!11328 = !DILocation(line: 5, column: 10, scope: !11319)
!11329 = !DILocation(line: 5, column: 15, scope: !11319)
!11330 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN72_$LT$alloc..collections..TryReserveError$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ddfb9e64d3d2537E", scope: !11331, file: !8653, line: 59, type: !8671, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11332)
!11331 = !DINamespace(name: "{impl#10}", scope: !160)
!11332 = !{!11333, !11334}
!11333 = !DILocalVariable(name: "self", arg: 1, scope: !11330, file: !8653, line: 59, type: !8656)
!11334 = !DILocalVariable(name: "f", arg: 2, scope: !11330, file: !8653, line: 59, type: !1119)
!11335 = !DILocation(line: 59, column: 32, scope: !11330)
!11336 = !DILocation(line: 62, column: 5, scope: !11330)
!11337 = !DILocation(line: 59, column: 37, scope: !11330)
!11338 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h143e7b21bfe6019aE", scope: !11339, file: !8653, line: 80, type: !11340, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11342)
!11339 = !DINamespace(name: "{impl#11}", scope: !160)
!11340 = !DISubroutineType(types: !11341)
!11341 = !{!159, !158}
!11342 = !{!11343, !11344, !11346}
!11343 = !DILocalVariable(name: "self", arg: 1, scope: !11338, file: !8653, line: 80, type: !158)
!11344 = !DILocalVariable(name: "__self_0", scope: !11345, file: !8653, line: 94, type: !4514, align: 8)
!11345 = distinct !DILexicalBlock(scope: !11338, file: !8653, line: 80, column: 10)
!11346 = !DILocalVariable(name: "__self_1", scope: !11345, file: !8653, line: 105, type: !263, align: 8)
!11347 = !DILocation(line: 80, column: 10, scope: !11338)
!11348 = !DILocation(line: 94, column: 9, scope: !11338)
!11349 = !DILocation(line: 94, column: 9, scope: !11345)
!11350 = !DILocation(line: 105, column: 9, scope: !11338)
!11351 = !DILocation(line: 105, column: 9, scope: !11345)
!11352 = !DILocation(line: 80, column: 10, scope: !11345)
!11353 = !DILocation(line: 80, column: 14, scope: !11338)
!11354 = !DILocation(line: 80, column: 15, scope: !11338)
!11355 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN76_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h96f06e6fa50bef9fE", scope: !11356, file: !8653, line: 80, type: !11357, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11359)
!11356 = !DINamespace(name: "{impl#16}", scope: !160)
!11357 = !DISubroutineType(types: !11358)
!11358 = !{!1103, !158, !1119}
!11359 = !{!11360, !11361, !11362, !11364}
!11360 = !DILocalVariable(name: "self", arg: 1, scope: !11355, file: !8653, line: 80, type: !158)
!11361 = !DILocalVariable(name: "f", arg: 2, scope: !11355, file: !8653, line: 80, type: !1119)
!11362 = !DILocalVariable(name: "__self_0", scope: !11363, file: !8653, line: 94, type: !4514, align: 8)
!11363 = distinct !DILexicalBlock(scope: !11355, file: !8653, line: 80, column: 32)
!11364 = !DILocalVariable(name: "__self_1", scope: !11363, file: !8653, line: 105, type: !263, align: 8)
!11365 = !DILocation(line: 80, column: 32, scope: !11355)
!11366 = !DILocation(line: 105, column: 9, scope: !11363)
!11367 = !DILocation(line: 94, column: 9, scope: !11355)
!11368 = !DILocation(line: 94, column: 9, scope: !11363)
!11369 = !DILocation(line: 105, column: 9, scope: !11355)
!11370 = !DILocation(line: 80, column: 32, scope: !11363)
!11371 = !DILocation(line: 80, column: 37, scope: !11355)
!11372 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN64_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17h82a720aa943c94e6E", scope: !11373, file: !8711, line: 134, type: !9163, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11374)
!11373 = !DINamespace(name: "{impl#50}", scope: !299)
!11374 = !{!11375, !11376}
!11375 = !DILocalVariable(name: "self", arg: 1, scope: !11372, file: !8711, line: 134, type: !9147)
!11376 = !DILocalVariable(name: "f", arg: 2, scope: !11372, file: !8711, line: 134, type: !1119)
!11377 = !DILocation(line: 134, column: 32, scope: !11372)
!11378 = !DILocation(line: 136, column: 28, scope: !11372)
!11379 = !DILocation(line: 134, column: 37, scope: !11372)
!11380 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN81_$LT$alloc..ffi..c_str..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h71d4027fe13800b0E", scope: !11381, file: !8711, line: 138, type: !11382, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11385)
!11381 = !DINamespace(name: "{impl#56}", scope: !299)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{!1103, !11384, !1119}
!11384 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::FromBytesWithNulErrorKind", baseType: !298, size: 64, align: 64, dwarfAddressSpace: 0)
!11385 = !{!11386, !11387, !11388}
!11386 = !DILocalVariable(name: "self", arg: 1, scope: !11380, file: !8711, line: 138, type: !11384)
!11387 = !DILocalVariable(name: "f", arg: 2, scope: !11380, file: !8711, line: 138, type: !1119)
!11388 = !DILocalVariable(name: "__self_0", scope: !11389, file: !8711, line: 140, type: !289, align: 8)
!11389 = distinct !DILexicalBlock(scope: !11380, file: !8711, line: 138, column: 32)
!11390 = !DILocation(line: 138, column: 32, scope: !11380)
!11391 = !DILocation(line: 140, column: 17, scope: !11389)
!11392 = !DILocation(line: 140, column: 17, scope: !11380)
!11393 = !DILocation(line: 138, column: 32, scope: !11389)
!11394 = !DILocation(line: 138, column: 37, scope: !11380)
!11395 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN75_$LT$alloc..ffi..c_str..FromVecWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17h4de5e0332c2be31cE", scope: !11396, file: !8711, line: 159, type: !9174, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11397)
!11396 = !DINamespace(name: "{impl#62}", scope: !299)
!11397 = !{!11398, !11399}
!11398 = !DILocalVariable(name: "self", arg: 1, scope: !11395, file: !8711, line: 159, type: !8718)
!11399 = !DILocalVariable(name: "f", arg: 2, scope: !11395, file: !8711, line: 159, type: !1119)
!11400 = !DILocation(line: 159, column: 32, scope: !11395)
!11401 = !DILocation(line: 163, column: 5, scope: !11395)
!11402 = !DILocation(line: 159, column: 37, scope: !11395)
!11403 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN71_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..fmt..Debug$GT$3fmt17h60af2766032ab9d6E", scope: !11404, file: !8711, line: 225, type: !9216, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11405)
!11404 = !DINamespace(name: "{impl#68}", scope: !299)
!11405 = !{!11406, !11407}
!11406 = !DILocalVariable(name: "self", arg: 1, scope: !11403, file: !8711, line: 225, type: !9201)
!11407 = !DILocalVariable(name: "f", arg: 2, scope: !11403, file: !8711, line: 225, type: !1119)
!11408 = !DILocation(line: 225, column: 32, scope: !11403)
!11409 = !DILocation(line: 229, column: 5, scope: !11403)
!11410 = !DILocation(line: 225, column: 37, scope: !11403)
!11411 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN65_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h37a0a03d2b53cd39E", scope: !11412, file: !9927, line: 404, type: !10300, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11413)
!11412 = !DINamespace(name: "{impl#83}", scope: !16)
!11413 = !{!11414, !11415}
!11414 = !DILocalVariable(name: "self", arg: 1, scope: !11411, file: !9927, line: 404, type: !10276)
!11415 = !DILocalVariable(name: "f", arg: 2, scope: !11411, file: !9927, line: 404, type: !1119)
!11416 = !DILocation(line: 404, column: 10, scope: !11411)
!11417 = !DILocation(line: 406, column: 5, scope: !11411)
!11418 = !DILocation(line: 407, column: 5, scope: !11411)
!11419 = !DILocation(line: 404, column: 15, scope: !11411)
!11420 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN66_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..fmt..Debug$GT$3fmt17ha756c47af1333aaaE", scope: !11421, file: !9927, line: 427, type: !10311, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !346, templateParams: !45, retainedNodes: !11422)
!11421 = !DINamespace(name: "{impl#88}", scope: !16)
!11422 = !{!11423, !11424}
!11423 = !DILocalVariable(name: "self", arg: 1, scope: !11420, file: !9927, line: 427, type: !10313)
!11424 = !DILocalVariable(name: "f", arg: 2, scope: !11420, file: !9927, line: 427, type: !1119)
!11425 = !DILocation(line: 427, column: 10, scope: !11420)
!11426 = !DILocation(line: 428, column: 27, scope: !11420)
!11427 = !DILocation(line: 427, column: 15, scope: !11420)
